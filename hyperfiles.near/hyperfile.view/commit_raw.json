{"tx_hash": "9RkBvvaP3EsieCR34J2aLiTMkXyaR3mB5UE4QkK9NpZn", "action_id_social": "ArzB6WogX93htt6M7s6xunMS73ypuJucLjr7CiXeD6ak-0-widget", "block_id": 106843864, "block_timestamp": "2023-11-30T03:16:20.066Z", "signer_id": "hyperfiles.near", "widget_name": "hyperfile.view", "source_code": "const { path } = props;\r\n\r\nif (!path) {\r\n  return <p>No path provided.</p>;\r\n}\r\n\r\nconst thing = Social.get(`${path}/**`, \"final\");\r\n\r\nif (!thing) {\r\n  return <p>Loading...</p>;\r\n}\r\n\r\nconst hyperfile = JSON.parse(thing[\"\"]);\r\n\r\nconst { get } = VM.require(hyperfile.adapter || (() => {}));\r\n\r\nif (get) {\r\n  const content = get(hyperfile.reference);\r\n\r\n  if (content === null) return <p>no content</p>;\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {thing.metadata.type === \"md\" ? (\r\n        <Widget\r\n          src=\"openwebbuild.near/widget/Post.Markdown\"\r\n          props={{\r\n            text: content,\r\n          }}\r\n        />\r\n      ) : (\r\n        <p>viewer does not currently support type: {thing.type}</p>\r\n      )}\r\n    </div>\r\n  );\r\n} else {\r\n  return <p>Invalid adapter: {hyperfile.adapter}</p>;\r\n}\r\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/hyperfiles.near/widget/hyperfile.view", "fact_widget_deployments_id": "f4dfc1afdc468d382597e163bdca56e2", "inserted_timestamp": "2023-11-30T05:18:21.606Z", "modified_timestamp": "2023-12-20T02:50:47.065Z", "__row_index": 0}