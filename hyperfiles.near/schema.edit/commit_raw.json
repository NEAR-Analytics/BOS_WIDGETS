{"tx_hash": "BsiKQMHLiVYyFjb9NFquhgzn4CY7B7y8hHprLyerb7Ec", "action_id_social": "EA1VvUtCfhu54t4xiFEtPkFcC3tJv4TqSGBvZ7UBbVmu-0-widget", "block_id": 116718201, "block_timestamp": "2024-04-12T23:39:57.122Z", "signer_id": "hyperfiles.near", "widget_name": "schema.edit", "source_code": "const schemaPattern = props.schemaPattern ?? \"*/profile/schema/*\";\nconst placeholder = props.placeholder ?? \"Schema\";\nconst initialSchemaObject = props.initialSchemaObject || {};\n\nconst schemaObject = Social.keys(schemaPattern, \"final\");\n\nif (schemaObject === null) {\n  return \"Loading\";\n}\n\nconst normalizeProf = (prof) =>\n  prof\n    .replaceAll(/[- \\.]/g, \"_\")\n    .replaceAll(/[^\\w]+/g, \"\")\n    .replaceAll(/_+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\")\n    .toLowerCase()\n    .trim(\"-\");\n\nconst schemaCount = {};\n\nconst processSchemaObject = (obj) => {\n  Object.entries(obj).forEach((kv) => {\n    if (typeof kv[1] === \"object\") {\n      processSchemaObject(kv[1]);\n    } else {\n      const prof = normalizeProf(kv[0]);\n      schemaCount[prof] = (schemaCount[prof] || 0) + 1;\n    }\n  });\n};\n\nconst getSchema = () => {\n  processSchemaObject(schemaObject);\n  const schema = Object.entries(schemaCount);\n  schema.sort((a, b) => b[1] - a[1]);\n  return schema.map((t) => ({\n    name: t[0],\n    count: t[1],\n  }));\n};\n\nif (!state.allSchema) {\n  initState({\n    allSchema: getSchema(),\n    schema: Object.keys(initialSchemaObject).map((prof) => ({\n      name: normalizeProf(prof),\n    })),\n    originalSchema: Object.fromEntries(\n      Object.keys(initialSchemaObject).map((prof) => [prof, null])\n    ),\n    id: `schema-selector-${Date.now()}`,\n  });\n}\n\nconst setSchema = (schema) => {\n  schema = schema.map((o) => {\n    o.name = normalizeProf(o.name);\n    return o;\n  });\n  State.update({ schema });\n  if (props.setSchemaObject) {\n    props.setSchemaObject(\n      Object.assign(\n        {},\n        state.originalSchema,\n        Object.fromEntries(schema.map((prof) => [prof.name, \"\"]))\n      )\n    );\n  }\n};\n\nreturn (\n  <>\n    <Typeahead\n      id={state.id}\n      labelKey=\"name\"\n      onChange={setSchema}\n      options={state.allSchema}\n      placeholder={placeholder}\n      selected={state.schema}\n      positionFixed\n      allowNew\n    />\n    {props.debug && (\n      <div>\n        Debugging schema:\n        <pre>{JSON.stringify(state.schema)}</pre>\n      </div>\n    )}\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/hyperfiles.near/widget/schema.edit", "fact_widget_deployments_id": "f8f3abd7a3a96fdafb5eedade40e7826", "inserted_timestamp": "2024-04-13T01:48:44.908Z", "modified_timestamp": "2024-04-13T01:48:44.908Z", "__row_index": 2}