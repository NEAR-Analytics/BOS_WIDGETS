{"tx_hash": "9q83T8hSBw3tbJEnZCui5kNC3jYeww1wpBkVuaNpnBwz", "action_id_social": "BrwDq9MVpj9aPyb2KgQVD34YKgcBC4mf8KKVC8rwTY7Q-0-widget", "block_id": 105813713, "block_timestamp": "2023-11-16T08:40:26.263Z", "signer_id": "dapdapbos.near", "widget_name": "Linea.Uniswap.Swap.CurrencyInput", "source_code": "// styled area\n\nconst account = Ethers.send(\"eth_requestAccounts\", [])[0];\n\nconst Wrapper = styled.div`\n  border-radius: 16px;\n  padding: 20px;\n  background: #1b1b1b;\n`;\nconst InputField = styled.div`\n  margin-right: 8px;\n  @media (max-width: 768px) {\n    width: calc(100% - 165px);\n  }\n`;\nconst InputWarpper = styled.div`\n  height: 46px;\n  padding: 10px 0px;\n  @media (max-width: 900px) {\n    height: 40px;\n  }\n`;\nconst Input = styled.input`\n  font-size: 32px;\n  color: #fff;\n  font-weight: 500;\n  width: 248px;\n  background-color: transparent;\n  outline: none;\n  border: none;\n  height: 40px;\n  vertical-align: bottom;\n  @media (max-width: 900px) {\n    font-size: 20px;\n    height: 34px;\n  }\n`;\nconst Value = styled.div`\n  padding-top: 10px;\n  color: #8e8e8e;\n  font-size: 14px;\n  line-height: 16px;\n`;\nconst CurrencyField = styled.div`\n  max-width: 150px;\n  flex-shrink: 0;\n  --button-color: #fff;\n`;\nconst CurrencySelect = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border: 1px solid #242424;\n  border-radius: 24px;\n  padding: 3px 10px 3px 8px;\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  cursor: pointer;\n  background: linear-gradient(0deg, #131313, #131313),\n    linear-gradient(0deg, #242424, #242424);\n\n  svg {\n    color: var(--button-color);\n  }\n  @media (max-width: 768px) {\n    svg {\n      width: 12px !important;\n    }\n    padding: 0px 12px 0px 6px;\n  }\n`;\n\nconst CurrencySelectNoToken = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border: 1px solid #242424;\n  border-radius: 24px;\n  padding: 6px 10px 6px 10px;\n  background: #5ee0ff;\n  color: #000;\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  cursor: pointer;\n  svg {\n    color: #000;\n  }\n  @media (max-width: 768px) {\n    svg {\n      width: 12px !important;\n    }\n    padding: 0px 12px 0px 6px;\n  }\n  &.disabled {\n    opacity: 0.3;\n  }\n`;\n\nconst CurrencyWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  height: 32px;\n  @media (max-width: 768px) {\n    width: calc(100% - 12px);\n  }\n`;\n\nconst CurrencySymbol = styled.div`\n  font-size: 18px;\n  color: #fff;\n  margin-left: 7px;\n  white-space: nowrap;\n  .fz-14 {\n    font-size: 14px;\n  }\n  @media (max-width: 768px) {\n    width: calc(100% - 30px);\n    text-overflow: ellipsis;\n    overflow: hidden;\n    font-size: 14px;\n    .fz-14 {\n      font-size: 12px;\n    }\n  }\n`;\nconst Amount = styled.div`\n  padding-top: 18px;\n  color: #8e8e8e;\n  font-size: 14px;\n  line-height: 16px;\n  text-align: right;\n  cursor: pointer;\n`;\nconst InputLabel = styled.div`\n  color: #8e8e8e;\n  font-size: 14px;\n  font-weight: 400;\n  line-height: normal;\n`;\nconst Main = styled.div`\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n`;\n// styled area end\n\nState.init({\n  balanceLoaded: false,\n  balance: \"0\",\n});\n\nconst utils = {\n  balanceFormated: () => {\n    if (!props.currency?.address || !props.isCorrectNetwork) return \"-\";\n    if (!state.balanceLoaded) return \"Loading\";\n    if (state.balance === \"0\" || Big(state.balance).eq(0)) return \"0\";\n    if (Big(state.balance).lt(0.0001)) return \"<0.0001\";\n    return Big(state.balance).toFixed(4, 0);\n  },\n};\n\nconst handlers = {\n  handleDisplayCurrencySelect: () => {\n    State.update({\n      balanceLoaded: false,\n    });\n    props?.onCurrencySelectOpen();\n  },\n  handleInputChange: (ev) => {\n    if (isNaN(Number(ev.target.value))) return;\n    props.onAmountChange?.(ev.target.value);\n  },\n};\n\nreturn (\n  <Wrapper>\n    <Widget\n      src=\"dapdapbos.near/widget/Uniswap.Swap.CurrencyBalance\"\n      props={{\n        address: props.currency?.address,\n        chainIdNotSupport: !props.isCorrectNetwork,\n        onLoad: (balance) => {\n          State.update({\n            balance: ethers.utils.formatUnits(balance, props.currency.decimals),\n            balanceLoaded: true,\n          });\n          props?.onUpdateCurrencyBalance(balance);\n        },\n      }}\n    />\n    <InputLabel>{props.labelText}</InputLabel>\n    <Main>\n      <InputField>\n        <InputWarpper>\n          <Input\n            value={props.amount}\n            disabled={props.disabled}\n            onChange={handlers.handleInputChange}\n          />\n        </InputWarpper>\n        <Value>\n          \u2248{\" \"}\n          <Widget\n            src=\"dapdapbos.near/widget/Linea.Uniswap.Swap.FormatValue\"\n            props={{\n              symbol: props.currency.symbol,\n              amount: props.amount,\n              prev: \"$\",\n            }}\n          />\n        </Value>\n      </InputField>\n      <CurrencyField>\n        {props.currency.symbol ? (\n          <CurrencySelect onClick={handlers.handleDisplayCurrencySelect}>\n            <CurrencyWrapper>\n              {props.currency && (\n                <Widget\n                  src=\"dapdapbos.near/widget/Linea.Uniswap.Swap.TokenIcon\"\n                  props={{\n                    size: 22,\n                    token: props.currency,\n                  }}\n                />\n              )}\n              <CurrencySymbol>{props.currency.symbol}</CurrencySymbol>\n            </CurrencyWrapper>\n            <Widget src=\"dapdapbos.near/widget/Uniswap.Swap.ArrowIcon\" />\n          </CurrencySelect>\n        ) : (\n          <CurrencySelectNoToken\n            onClick={handlers.handleDisplayCurrencySelect}\n            className={`${\n              account ? !props.isCorrectNetwork && \"disabled\" : \"\"\n            }`}\n          >\n            <span\n              className=\"fz-14\"\n              style={{\n                whiteSpace: \"nowrap\",\n              }}\n            >\n              Select a token\n            </span>\n\n            <Widget src=\"dapdapbos.near/widget/Uniswap.Swap.ArrowIcon\" />\n          </CurrencySelectNoToken>\n        )}\n        <Amount\n          onClick={() => {\n            const formatedBalance = utils.balanceFormated();\n            if (![\"-\", \"Loading\", \"0\"].includes(formatedBalance))\n              props.onAmountChange?.(state.balance);\n          }}\n        >\n          Balance:{\" \"}\n          <span\n            style={{\n              textDecoration: props.disabled ? \"none\" : \"underline\",\n              color: \"#fff\",\n            }}\n          >\n            {utils.balanceFormated()}\n          </span>\n        </Amount>\n      </CurrencyField>\n    </Main>\n  </Wrapper>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/dapdapbos.near/widget/Linea.Uniswap.Swap.CurrencyInput", "fact_widget_deployments_id": "6ff012f6fa988a95325944fc3d9f8bc2", "inserted_timestamp": "2023-11-16T10:36:18.328Z", "modified_timestamp": "2023-11-16T10:36:18.328Z", "__row_index": 2}