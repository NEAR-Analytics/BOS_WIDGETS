{"tx_hash": "3tUE2bFUZwSjvSuAmzYH9FDezu7keRTXHCKKcGaKbMu1", "action_id_social": "HZcBUAso5FMqTeJpBDzPftA2o6ivmz6VzPy6MmCjvRcZ-0-widget", "block_id": 106197303, "block_timestamp": "2023-11-21T10:03:52.686Z", "signer_id": "dapdapbos.near", "widget_name": "Linea.Uniswap.Swap.CurrencySelect", "source_code": "const Dialog = styled.div`\n  position: fixed;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  display: none;\n\n  &.display {\n    display: block;\n  }\n`;\n\nconst SearchIcon = (\n  <svg\n    width=\"17\"\n    height=\"15\"\n    viewBox=\"0 0 17 15\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <circle cx=\"7\" cy=\"7\" r=\"6.5\" stroke=\"#8E8E8E\" />\n    <path\n      d=\"M15.7 14.4C15.9209 14.5657 16.2343 14.5209 16.4 14.3C16.5657 14.0791 16.5209 13.7657 16.3 13.6L15.7 14.4ZM11.7 11.4L15.7 14.4L16.3 13.6L12.3 10.6L11.7 11.4Z\"\n      fill=\"#8E8E8E\"\n    />\n  </svg>\n);\n\nconst Overlay = styled.div`\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  /* backdrop-filter: blur(10px); */\n  position: absolute;\n  z-index: 9999;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  @media (max-width: 768px) {\n    align-items: flex-end;\n  }\n`;\n\nconst Content = styled.div`\n  width: 460px;\n  max-height: 90vh;\n  overflow: hidden;\n  border-radius: 16px;\n  /* border: 1px solid #292429; */\n  border: 1px solid #3d363d;\n  position: relative;\n\n  background: linear-gradient(0deg, #131313, #131313);\n  @media (max-width: 768px) {\n    width: 100vw;\n    border-radius: 16px 16px 0px 0px;\n    background: #2b2b2b;\n  }\n`;\nconst Header = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  color: #fff;\n  padding: 30px 30px 0px 30px;\n  @media (max-width: 768px) {\n    padding: 20px;\n  }\n`;\nconst InputWarpper = styled.div`\n  height: 46px;\n  padding: 10px;\n  gap: 12px;\n  margin: 10px 25px 10px 30px;\n  display: flex;\n  align-items: center;\n  border: 1px solid #303030;\n  background: #1b1b1b;\n  border-radius: 12px;\n  @media (max-width: 768px) {\n    margin: 0px 15px 20px;\n  }\n`;\nconst Input = styled.input`\n  font-size: 16px;\n  color: #fff;\n  font-weight: 500;\n  width: 100%;\n  background-color: transparent;\n  outline: none;\n  border: none;\n`;\nconst Title = styled.div`\n  font-size: 18px;\n  font-weight: 500;\n`;\nconst ScrollContent = styled.div`\n  max-height: calc(90vh - 120px);\n  overflow-y: auto;\n`;\nconst CurrencyList = styled.div`\n  padding-bottom: 20px;\n\n  &::-webkit-scrollbar {\n    width: 11px;\n    background: #1b1b1b;\n    border-radius: 8px;\n  }\n\n  /* Handle */\n  &::-webkit-scrollbar-thumb {\n    background: #2f2f2f;\n    border-radius: 8px;\n  }\n\n  @media (max-width: 768px) {\n    padding-bottom: 30px;\n  }\n`;\nconst Empty = styled.div`\n  min-height: 100px;\n  line-height: 100px;\n  text-align: center;\n  font-size: 18px;\n  color: #fff;\n`;\nconst QuickList = styled.div`\n  display: flex;\n  gap: 14px;\n  flex-wrap: wrap;\n  padding: 0px 25px 13px;\n`;\nconst QuickItem = styled.div`\n  border-radius: 18px;\n  border: 1px solid #303030;\n  background: #1b1b1b;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding: 0px 20px 0px 7px;\n  height: 36px;\n  cursor: pointer;\n`;\nconst QuickSymbol = styled.div`\n  color: #fff;\n  font-family: Noto Sans;\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: normal;\n`;\nconst Tabs = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 44px;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n  padding: 12px 30px;\n  border-bottom: 1px solid #242424;\n\n  @media (max-width: 768px) {\n    border-bottom: 1px solid #343838;\n  }\n`;\nconst Tab = styled.div`\n  cursor: pointer;\n  color: #8e8e8e;\n  &.active {\n    color: #fff;\n  }\n`;\nconst LoadingWrapper = styled.div`\n  height: 100px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst { chainId, explor, tokens, onImport } = props;\n\nState.init({\n  tokens: Object.values(props.tokens || {}),\n  tab: \"All\",\n});\nconst handleSearch = () => {\n  const propsTokens = Object.values(props.tokens || {});\n  console.log(state.searchVal, propsTokens);\n  const _tokens = propsTokens.filter((token) => {\n    if (!state.searchVal) {\n      return state.tab === \"All\" ? true : token.isImport;\n    }\n    return (token.address.toLowerCase() === state.searchVal?.toLowerCase() ||\n      token.name.includes(state.searchVal)) &&\n      state.tab === \"All\"\n      ? true\n      : state.tab === \"Imported\"\n      ? token.isImport\n      : false;\n  });\n\n  if (_tokens.length === 0 && ethers.utils.isAddress(state.searchVal)) {\n    State.update({\n      loading: true,\n      tokens: [],\n    });\n  } else {\n    State.update({\n      tokens: _tokens,\n      importToken: null,\n      loading: false,\n    });\n  }\n};\nconst topTokens = Object.values(props.historyTokens || {});\nconst TABS = [\"All\", \"Imported\"];\n\nreturn (\n  <Dialog className={props.display ? \"display\" : \"\"}>\n    <Overlay>\n      <div className=\"borderShadow\">\n        <Content>\n          <Header>\n            <Title>Select a token</Title>\n            <Widget\n              src=\"dapdapbos.near/widget/Uniswap.Swap.CloseIcon\"\n              props={{ onClose: props.onClose }}\n            />\n          </Header>\n          <InputWarpper>\n            {SearchIcon}\n            <Input\n              placeholder=\"Search name or paste address\"\n              onChange={(ev) => {\n                State.update({\n                  searchVal: ev.target.value,\n                });\n                handleSearch();\n              }}\n            />\n          </InputWarpper>\n          <ScrollContent>\n            {!!topTokens.length && (\n              <QuickList>\n                {topTokens.map((token) => (\n                  <QuickItem\n                    key={token.address}\n                    onClick={() => {\n                      props.onSelect?.(token);\n                      props.onClose();\n                    }}\n                  >\n                    <Widget\n                      src=\"dapdapbos.near/widget/Linea.Uniswap.Swap.TokenIcon\"\n                      props={{\n                        size: 22,\n                        token: token,\n                      }}\n                    />\n                    <QuickSymbol>{token.symbol}</QuickSymbol>\n                  </QuickItem>\n                ))}\n              </QuickList>\n            )}\n            <Tabs>\n              {TABS.map((tab) => (\n                <Tab\n                  key={tab}\n                  className={state.tab === tab && \"active\"}\n                  onClick={() => {\n                    State.update({\n                      tab: tab,\n                    });\n                    handleSearch();\n                  }}\n                >\n                  {tab}\n                </Tab>\n              ))}\n            </Tabs>\n            <CurrencyList>\n              {state.loading && (\n                <LoadingWrapper>\n                  <Widget\n                    src=\"bluebiu.near/widget/0vix.LendingLoadingIcon\"\n                    props={{\n                      size: 30,\n                    }}\n                  />\n                </LoadingWrapper>\n              )}\n              {state.importToken && (\n                <Widget\n                  src=\"dapdapbos.near/widget/Linea.Uniswap.Swap.CurrencyImportRow\"\n                  props={{\n                    currency: state.importToken,\n                    onImport: () => {\n                      State.update({\n                        showImportWarning: true,\n                      });\n                    },\n                  }}\n                />\n              )}\n              {state.tokens?.map((currency) => (\n                <Widget\n                  src=\"dapdapbos.near/widget/Linea.Uniswap.Swap.CurrencyRow\"\n                  props={{\n                    selectedTokenAddress: props.selectedTokenAddress,\n                    currency,\n                    display: props.display,\n                    chainId: chainId,\n                    onClick: () => {\n                      props.onSelect?.(currency);\n                      props.onClose();\n                    },\n                  }}\n                  key={currency.address}\n                />\n              ))}\n              {(!state.tokens || !state.tokens?.length) &&\n                !state.loading &&\n                !state.importToken && <Empty>No token.</Empty>}\n            </CurrencyList>\n          </ScrollContent>\n          {state.loading && (\n            <Widget\n              src=\"dapdapbos.near/widget/Linea.Uniswap.Swap.Token\"\n              props={{\n                address: state.searchVal,\n                chainId: chainId,\n                onSuccess: (importToken) => {\n                  State.update({\n                    importToken,\n                    loading: false,\n                  });\n                },\n                onError: (error) => {\n                  State.update({\n                    loading: false,\n                  });\n                },\n              }}\n            />\n          )}\n          <Widget\n            src=\"dapdapbos.near/widget/Linea.Uniswap.Swap.ImportWarning\"\n            props={{\n              display: state.showImportWarning,\n              currency: state.importToken,\n              onImport: (currency) => {\n                onImport(currency);\n                props.onSelect?.(currency);\n                props.onClose();\n              },\n              explor: explor,\n              onClose: () => {\n                State.update({\n                  showImportWarning: false,\n                });\n              },\n            }}\n          />\n        </Content>\n      </div>\n    </Overlay>\n  </Dialog>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/dapdapbos.near/widget/Linea.Uniswap.Swap.CurrencySelect", "fact_widget_deployments_id": "68a0d03b4cbc43d443d570f5a689be3a", "inserted_timestamp": "2023-11-21T11:52:37.344Z", "modified_timestamp": "2023-11-21T11:52:37.344Z", "__row_index": 0}