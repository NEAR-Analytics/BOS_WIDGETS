{"tx_hash": "2W179ZBCostek61e1SNknDK5FFEQBqXGpiKR3vNPPw9Z", "action_id_social": "9bM3SAMMy6sj7gr15rA3pBvffCqmkoBnvmzmykXj963z-0-widget", "block_id": 111450273, "block_timestamp": "2024-01-27T15:12:07.386Z", "signer_id": "dapdapbos.near", "widget_name": "Staking.Aura.Pool", "source_code": "const HeadWrapper = styled.div`\n  border-radius: 16px;\n  color: var(--white);\n  font-size: var(--fz-14);\n  position: relative;\n  .pool-head {\n    border-top-left-radius: 16px;\n    border-top-right-radius: 16px;\n    align-items: center;\n    cursor: pointer;\n    background-color: var(--bg-1);\n  }\n  .title-primary {\n    font-size: var(--fz-16);\n    font-weight: 500;\n  }\n  .title-secondary {\n  }\n  .title-sub {\n    font-size: var(--fz-12);\n    color: var(--purple);\n  }\n`;\n\nconst GridContainer = styled.div`\n  display: grid;\n  grid-template-columns: 40% 12% 12% 12% 24%;\n`;\nconst GridItem = styled.div`\n  height: 84px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  padding-left: 24px;\n`;\n\nconst InfoPanel = styled.div`\n  width: 610px;\n  margin: 0 auto;\n`;\nconst InfoPanelTitle = styled.div`\n  font-size: var(--fz-16);\n  font-weight: 500;\n  color: var(--white);\n  margin-bottom: 14px;\n`;\nconst InfoPanelList = styled.div`\n  font-size: var(--fz-14);\n  font-weight: 400;\n  margin-bottom: 16px;\n  display: flex;\n  justify-content: space-between;\n  .list-key {\n    color: var(--purple);\n  }\n  .list-value {\n    color: var(--white);\n    flex-grow: 1;\n    text-align: right;\n    text-decoration: underline;\n  }\n`;\n\n// tabs begin\nconst TabListWrap = styled.div`\n  border-right: 1px solid var(--bg-2);\n  display: flex;\n  margin: 0 auto;\n  width: 510px;\n  align-items: center;\n`;\nconst TabsList = styled(\"Tabs.List\")`\n  border: 1px solid var(--bg-2);\n  margin-bottom: 20px;\n  .tab-head-item {\n    flex: 1;\n    display: flex;\n    height: 46px;\n    align-items: center;\n    justify-content: center;\n    font-size: 16px;\n    color: var(--purple);\n    cursor: pointer;\n    border-bottom-width: 3px;\n    border-bottom-style: solid;\n    border-bottom-color: transparent;\n    border-left: 1px solid var(--bg-2);\n  }\n  .tab-head-item.active {\n    color: var(--white);\n    border-bottom-color: var(--primary);\n  }\n`;\n// tabs end\n\n// Accordion begin\nconst AccordionItem = styled(\"Accordion.Item\")`\n  /* margin-bottom: 10px; */\n  border: 1px solid #373a53;\n  max-width: 1244px;\n  margin: 0 auto;\n  border-radius: 16px;\n  overflow: hidden;\n  .AccordionChevron {\n    position: absolute;\n    right: 24px;\n    top: 45%;\n    transition: all 0.1s ease-out;\n  }\n  &[data-state=\"open\"] .AccordionChevron {\n    transform: rotate(90deg);\n  }\n`;\n\nconst AccordionContent = styled(\"Accordion.Content\")`\n  /* max-width: 1244px;\n  margin: 0 auto; */\n  border-color: var(--bg-3);\n  background-color: var(--bg-3);\n  padding-bottom: 20px;\n  border-bottom-left-radius: 16px;\n  border-bottom-right-radius: 16px;\n`;\n//Accordion end\n\nconst { data, account, TOKENS } = props;\nconst {\n  Aura_Pool_ID,\n  poolName,\n  tokens,\n  tokenAssets,\n  stakedAmount,\n  reward,\n  Rewards_contract_address,\n  Rewards_depositor_contract_address,\n  LP_token_address,\n  TVL,\n  BAL_APR,\n  swapFee,\n} = data;\nState.init({\n  currentTab: \"STAKE_TAB\",\n});\nconst EXPLORER = \"https://gnosisscan.io\";\nconst handleChangeTabs = (value) => {\n  State.update({\n    currentTab: value,\n  });\n};\n\nconst renderPoolIcon = () => {\n  if (tokenAssets) {\n    return tokenAssets.map((addr, index) => {\n      if (TOKENS[addr]) {\n        return (\n          <span key={index} style={{ marginRight: -12 }}>\n            <Widget\n              src=\"dapdapbos.near/widget/UI.Avatar\"\n              props={{ src: TOKENS[addr].icon }}\n            />\n          </span>\n        );\n      }\n      return null;\n    });\n  }\n};\n\nreturn (\n  <AccordionItem value={poolName}>\n    <Accordion.Trigger asChild>\n      <HeadWrapper>\n        <GridContainer className=\"pool-head\">\n          <GridItem>\n            <div className=\"title-primary\">\n              {renderPoolIcon()}\n              <span style={{ marginLeft: 20 }}>{poolName}</span>\n            </div>\n          </GridItem>\n          <GridItem>\n            {/* <div className=\"title-secondary\">\n              {Big(BAL_APR || 0)\n                .plus(Big(swapFee || 0))\n                .toFixed()}\n              %\n            </div>\n            <div className=\"title-sub\">proj. %</div> */}\n          </GridItem>\n          <GridItem>\n            <div className=\"title-secondary\">\n              $\n              <Widget\n                src=\"dapdapbos.near/widget/Utils.FormatAmount\"\n                props={{\n                  amount: TVL,\n                }}\n              />\n            </div>\n          </GridItem>\n          <GridItem>\n            <div className=\"title-secondary\">\n              {!isNaN(Number(stakedAmount)) && Number(stakedAmount) > 0\n                ? `$${stakedAmount}`\n                : \"-\"}\n            </div>\n            <div className=\"title-sub\"></div>\n          </GridItem>\n          <GridItem>\n            <div className=\"title-secondary\">\n              {!isNaN(Number(reward)) && Number(reward) > 0\n                ? `$${reward}`\n                : \"-\"}\n            </div>\n            <div className=\"title-sub\"></div>\n          </GridItem>\n        </GridContainer>\n        <svg\n          className=\"AccordionChevron\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"8\"\n          height=\"10\"\n          viewBox=\"0 0 8 10\"\n          fill=\"none\"\n        >\n          <path\n            d=\"M7.02391 4.21913C7.52432 4.61945 7.52432 5.38054 7.02391 5.78087L2.1247 9.70024C1.46993 10.2241 0.5 9.75788 0.5 8.91937L0.5 1.08062C0.5 0.242118 1.46993 -0.224055 2.12469 0.299755L7.02391 4.21913Z\"\n            fill=\"#979ABE\"\n          />\n        </svg>\n      </HeadWrapper>\n    </Accordion.Trigger>\n    <AccordionContent>\n      <Tabs.Root value={state.currentTab} onValueChange={handleChangeTabs}>\n        <TabsList>\n          <TabListWrap>\n            <Tabs.Trigger value=\"STAKE_TAB\" asChild>\n              <div\n                className={`tab-head-item ${\n                  state.currentTab === \"STAKE_TAB\" ? \"active\" : \"\"\n                }`}\n              >\n                Stake\n              </div>\n            </Tabs.Trigger>\n            <Tabs.Trigger value=\"UNSTAKE_TAB\" asChild>\n              <div\n                className={`tab-head-item ${\n                  state.currentTab === \"UNSTAKE_TAB\" ? \"active\" : \"\"\n                }`}\n              >\n                Unstake\n              </div>\n            </Tabs.Trigger>\n            <Tabs.Trigger value=\"INFO_TAB\" asChild>\n              <div\n                className={`tab-head-item ${\n                  state.currentTab === \"INFO_TAB\" ? \"active\" : \"\"\n                }`}\n              >\n                Info\n              </div>\n            </Tabs.Trigger>\n          </TabListWrap>\n        </TabsList>\n        <Tabs.Content value=\"STAKE_TAB\">\n          <Widget\n            src=\"dapdapbos.near/widget/Staking.Aura.Stake\"\n            props={{ ...props }}\n          />\n        </Tabs.Content>\n        <Tabs.Content value=\"UNSTAKE_TAB\">\n          <Widget\n            src=\"dapdapbos.near/widget/Staking.Aura.Unstake\"\n            props={{ ...props }}\n          />\n        </Tabs.Content>\n        <Tabs.Content value=\"INFO_TAB\">\n          <InfoPanel>\n            <InfoPanelTitle>Contract</InfoPanelTitle>\n            <InfoPanelList>\n              <span className=\"list-key\">Rewards contract address: </span>\n\n              <a\n                className=\"list-value\"\n                target=\"_blank\"\n                href={`${EXPLORER}/address/${Rewards_contract_address}`}\n              >\n                {Rewards_contract_address}\n              </a>\n            </InfoPanelList>\n            <InfoPanelList>\n              <span className=\"list-key\">\n                Rewards depositor contract address:{\" \"}\n              </span>\n\n              <a\n                className=\"list-value\"\n                target=\"_blank\"\n                href={`${EXPLORER}/address/${Rewards_depositor_contract_address}`}\n              >\n                {Rewards_depositor_contract_address}\n              </a>\n            </InfoPanelList>\n            <InfoPanelList>\n              <span className=\"list-key\">LP token address: </span>\n              <a\n                className=\"list-value\"\n                target=\"_blank\"\n                href={`${EXPLORER}/address/${LP_token_address}`}\n              >\n                {LP_token_address}\n              </a>\n            </InfoPanelList>\n          </InfoPanel>\n        </Tabs.Content>\n      </Tabs.Root>\n    </AccordionContent>\n  </AccordionItem>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/dapdapbos.near/widget/Staking.Aura.Pool", "fact_widget_deployments_id": "652ea77cfaef4f7af8b0fb10493804ae", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 4}