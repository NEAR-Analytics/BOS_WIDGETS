{"tx_hash": "9PGJA3MxHcyucxTuMinrGBHqcgCy7KCXBS6qY8aTCXgt", "action_id_social": "8qwQ2S2G83SYAqp73czzFrRs2LpQxTGZZh3NZn2c3jHo-0-widget", "block_id": 111754434, "block_timestamp": "2024-01-31T07:24:49.392Z", "signer_id": "dapdapbos.near", "widget_name": "Bridge.Token", "source_code": "const Wrapper = styled.div`\n    background: #2E3142;\n    border: 1px solid #373A53;\n    border-radius: 12px;\n    padding: 12px;\n    &.focus {\n        background-color: #1B1E27;\n    }\n`\n\nconst Title = styled.div`\n    font-size: 14px;\n    font-weight: 400;\n    line-height: 17px;\n    color: #979ABE;\n`\n\nconst InputWapper = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-top: 14px;\n`\n\nconst Input = styled.input`\n    border: none;\n    font-size: 26px;\n    font-weight: 500;\n    line-height: 31px;\n    width: 200px;\n    background-color: inherit;\n    color: rgba(255, 255, 255, 0.2);\n    &:focus {\n        outline: none;\n        border: none;\n        box-shadow: none;\n    }\n`\n\nconst SelectWapper = styled.div`\n    width: 138px;\n`\n\nconst BalanceWapper = styled.div`\n    display: flex;\n    justify-content: space-between;\n    font-size: 12px;\n    font-weight: 400;\n    line-height: 14px;\n    margin-top: 14px;\n`\n\nconst BalanceText = styled.div`\n    color: #979ABE;\n    &.balance-in {\n        cursor: pointer;\n        text-decoration: underline;\n    }\n`\n\nconst CurrencyField = styled.div`\n  max-width: 150px;\n  flex-shrink: 0;\n  /* border: 1px solid rgba(55, 58, 83, 1); */\n  background: #2E3142;\n  border-radius: 8px;\n\n  @media (max-width: 768px) {\n    min-width: 115px;\n  }\n`;\n\nconst CurrencySelect = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  border: 1px solid var(--input-border-color);\n  border-radius: 24px;\n  padding: 3px 10px 3px 8px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  background-color: var(--input-select-bg-color);\n  svg {\n    color: var(--button-color);\n  }\n  @media (max-width: 768px) {\n    svg {\n      width: 12px !important;\n    }\n    padding: 0px 12px 0px 6px;\n  }\n`;\nconst CurrencyWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  height: 32px;\n  @media (max-width: 768px) {\n    width: calc(100% - 12px);\n  }\n`;\nconst CurrencyIcon = styled.img`\n  width: 22px;\n  height: 22px;\n  border-radius: 50%;\n  @media (max-width: 768px) {\n    width: 22px;\n    height: 22px;\n  }\n`;\nconst CurrencySymbol = styled.div`\n  font-size: 18px;\n  color: #fff;\n  margin-left: 7px;\n  white-space: nowrap;\n  .fz-14 {\n    font-size: 14px;\n  }\n  @media (max-width: 768px) {\n    width: calc(100% - 40px);\n    text-overflow: ellipsis;\n    overflow: hidden;\n    font-size: 14px;\n    .fz-14 {\n      font-size: 12px;\n    }\n  }\n`;\n\nconst { title, tokens, selectToken, amount, onInputChange, disabled, onTokenChange, balance, amountUSD } = props\n\nconst { balanceFormated } = VM.require('dapdapbos.near/widget/Bridge.Utils');\n\nState.init({\n    isFocus: false,\n    options: [],\n    tokensDisplay: false,\n})\n\nuseEffect(() => {\n    // const options = tokens.map(token => {\n    //     return {\n    //         text: token.name,\n    //         value: token.address,\n    //         icons: [token.logoURI],\n    //         _origin: token,\n    //     }\n    // })\n\n    // State.update({\n    //     options,\n    // })\n}, [tokens])\n\nfunction handleInputFocus() {\n    State.update({\n        isFocus: true,\n    })\n}\n\nfunction handleInputBlur() {\n    State.update({\n        isFocus: false,\n    })\n}\n\nfunction handleInputChange(e) {\n    onInputChange && onInputChange(e.target.value)\n}\n\nreturn <Wrapper className={state.isFocus && !disabled ? 'focus' : ''}>\n    <Title>{title}</Title>\n    <InputWapper>\n        <Input\n            disabled={disabled}\n            onFocus={handleInputFocus}\n            onBlur={handleInputBlur}\n            onChange={handleInputChange}\n            value={amount}\n            placeholder=\"0\"\n        />\n        <SelectWapper>\n\n            <CurrencyField>\n                <CurrencySelect onClick={() => {\n                    State.update({\n                        tokensDisplay: true,\n                    })\n                }}>\n                    <CurrencyWrapper>\n                        {props.selectToken.logoURI && <CurrencyIcon src={props.selectToken.logoURI} />}\n                        <CurrencySymbol>\n                            {props.selectToken.symbol || (\n                                <span className=\"fz-14\">Select a token</span>\n                            )}\n                        </CurrencySymbol>\n                    </CurrencyWrapper>\n                    <Widget src=\"dapdapbos.near/widget/Swap.ArrowIcon\" />\n                </CurrencySelect>\n            </CurrencyField>\n\n            {\n                state.tokensDisplay ? <Widget\n                    src=\"dapdapbos.near/widget/Bridge.Select.CurrencySelect\"\n                    props={{\n                        display: state.tokensDisplay,\n                        selectedTokenAddress: selectToken.address,\n                        tokens: tokens,\n                        onClose: () => {\n                            State.update({\n                                tokensDisplay: false,\n                            })\n                        },\n                        onSelect: (currency) => {\n                            onTokenChange(currency)\n                            State.update({\n                                tokensDisplay: false,\n                            })\n                        },\n                    }}\n                /> : null\n            }\n\n        </SelectWapper>\n    </InputWapper>\n\n    <BalanceWapper>\n        <BalanceText>${amountUSD || 0}</BalanceText>\n        <BalanceText\n            onClick={() => {\n                onInputChange && onInputChange(balance)\n            }}\n            className={disabled ? '' : 'balance-in'}>balance: {balanceFormated(balance)}</BalanceText>\n    </BalanceWapper>\n</Wrapper>", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/dapdapbos.near/widget/Bridge.Token", "fact_widget_deployments_id": "dd4211aecdd3307ee90140674537d7cb", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 1}