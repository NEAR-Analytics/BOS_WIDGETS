{"tx_hash": "EcFtNYf2C37D4arh9fjQBv7FQQp3m4RRiDjsq7S74CtE", "action_id_social": "88VeCTi1G54TJD2Yn3sxUDbGq7gB4fKpQTvC76rdjt8o-0-widget", "block_id": 119044071, "block_timestamp": "2024-05-16T12:09:09.903Z", "signer_id": "dapdapbos.near", "widget_name": "Base.Uniswap.Swap.CurrencyRow", "source_code": "const {\n  currency,\n  selectedTokenAddress,\n  display,\n  disabled,\n  account,\n  chainId,\n  onClick,\n} = props;\nconst CurrencyRow = styled.div`\n  padding: 10px 30px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  cursor: pointer;\n  :hover {\n    background-color: #eeeeee;\n  }\n  &.active {\n    pointer-events: none;\n  }\n  .active {\n    opacity: 0.5;\n  }\n`;\n\nconst checkIcon = (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"16\"\n    height=\"12\"\n    viewBox=\"0 0 16 12\"\n    fill=\"none\"\n  >\n    <path\n      d=\"M1 5L6 10L15 1\"\n      stroke=\"#131313\"\n      stroke-width=\"2\"\n      stroke-linecap=\"round\"\n    />\n  </svg>\n);\n\nconst CurrencyLabel = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n`;\nconst CurrencySymbol = styled.div`\n  font-size: 18px;\n  font-weight: 500;\n  color: #101010;\n  @media (max-width: 768px) {\n    font-size: 16px;\n    font-weight: 400;\n  }\n`;\nconst CurrencyName = styled.div`\n  font-size: 14px;\n  color: #8e8e8e;\n  opacity: 0.5;\n  @media (max-width: 768px) {\n    font-size: 12px;\n    font-weight: 400;\n  }\n`;\nconst CurrencyAmount = styled.div`\n  font-size: 18px;\n  font-weight: 500px;\n  color: #101010;\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  @media (max-width: 768px) {\n    font-size: 14px;\n    font-weight: 400;\n  }\n`;\n\nState.init({\n  balanceLoaded: false,\n  balance: \"0\",\n});\n\nconst utils = {\n  balanceFormated: () => {\n    if (!account) return \"\";\n    if (!currency.address) return \"-\";\n    if (!state.balanceLoaded) return \"Loading\";\n    if (state.balance === \"0\" || Big(state.balance).eq(0)) return \"0\";\n    if (Big(state.balance).lt(0.0001)) return \"<0.0001\";\n    return Big(state.balance).toFixed(4);\n  },\n};\n\nconst isActive = currency.address === selectedTokenAddress;\nreturn (\n  <CurrencyRow\n    className={isActive ? \"active\" : \"\"}\n    onClick={onClick}\n    style={{\n      opacity: !disabled ? 1 : 0.6,\n      cursor: !disabled ? \"pointer\" : \"not-allowed\",\n    }}\n  >\n    {display &&\n      account &&\n      !state.balanceLoaded &&\n      chainId === currency.chainId && (\n        <Widget\n          src=\"dapdapbos.near/widget/Uniswap.Swap.CurrencyBalance\"\n          props={{\n            address: currency.address,\n            chainIdNotSupport: false,\n            onLoad: (balance) => {\n              State.update({\n                balance: ethers.utils.formatUnits(balance, currency.decimals),\n                balanceLoaded: true,\n              });\n            },\n          }}\n        />\n      )}\n    <CurrencyLabel>\n      <div className={isActive ? \"active\" : \"\"}>\n        <Widget\n          src=\"dapdapbos.near/widget/Linea.Uniswap.Swap.TokenIcon\"\n          props={{ size: 36, token: currency }}\n        />\n      </div>\n      <div>\n        <CurrencySymbol>{currency.name}</CurrencySymbol>\n        <CurrencyName className={isActive ? \"active\" : \"\"}>\n          {currency.symbol}\n        </CurrencyName>\n      </div>\n    </CurrencyLabel>\n    <CurrencyAmount>\n      <div className={isActive ? \"active\" : \"\"}> {utils.balanceFormated()}</div>\n      {isActive ? checkIcon : <div style={{ width: \"16px\" }} />}\n    </CurrencyAmount>\n  </CurrencyRow>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/dapdapbos.near/widget/Base.Uniswap.Swap.CurrencyRow", "fact_widget_deployments_id": "d32dadc7e6089c2f9dfa15c997d63981", "inserted_timestamp": "2024-05-16T13:49:44.417Z", "modified_timestamp": "2024-05-16T13:49:44.417Z", "__row_index": 0}