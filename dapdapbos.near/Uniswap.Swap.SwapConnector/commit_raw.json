{"tx_hash": "3nbgrFPprjjzDvFE1DEkZzBMSwyLQhWi8VAoSjRf65fM", "action_id_social": "AMkxMYghdgfgWSwo18PHmjthRfLrVjTTpVmNgoVzANye-0-widget", "block_id": 103586726, "block_timestamp": "2023-10-17T13:38:39.762Z", "signer_id": "dapdapbos.near", "widget_name": "Uniswap.Swap.SwapConnector", "source_code": "const account = Ethers.send(\"eth_requestAccounts\", [])[0];\nconst {\n  chainId,\n  chainName,\n  displayChainName,\n  dexs,\n  defalutDex,\n  connectProps,\n  CHAIN_LIST,\n  ...restProps\n} = props;\n\nconst CONNECT_PROPS = {\n  ...connectProps,\n  chainId,\n  chainName,\n};\n\n// if (!account) {\n//   return (\n//     <Widget\n//       src=\"dapdapbos.near/widget/Uniswap.Swap.ConnectButton\"\n//       props={{\n//         ...CONNECT_PROPS,\n//         isWrongNetwork: false,\n//         CHAIN_LIST,\n//       }}\n//     />\n//   );\n// }\n\nconst DEXS = Object.values(dexs || {});\n\nState.init({\n  chainId: -1,\n  selectedDex: defalutDex,\n});\n\n// if (state.chainId !== chainId) {\n//   return (\n//     <Widget\n//       src=\"dapdapbos.near/widget/Uniswap.Swap.ConnectButton\"\n//       props={{\n//         ...CONNECT_PROPS,\n//         isWrongNetwork: true,\n//       }}\n//     />\n//   );\n// }\n\nconst Dex = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 50px;\n  @media (max-width: 900px) {\n    padding-top: 0px;\n    flex-direction: column;\n  }\n`;\nconst Sider = styled.div`\n  margin-right: 10px;\n`;\nconst Title = styled.div`\n  color: var(--text-color);\n  font-size: 18px;\n  font-weight: 500;\n  line-height: 22px;\n  padding-left: 30px;\n  padding-bottom: 10px;\n  @media (max-width: 900px) {\n    padding-left: 0px;\n  }\n`;\nconst List = styled.div`\n  width: 250px;\n  border-radius: 16px;\n  border: 1px solid var(--border-color);\n  padding: 10px;\n  background-color: #181a27;\n  @media (max-width: 900px) {\n    width: 100%;\n    display: flex;\n    flex-wrap: nowrap;\n    background-color: transparent;\n    border: none;\n    border-radius: 0px;\n    overflow-x: auto;\n    padding-left: 0px;\n  }\n`;\nconst Row = styled.div`\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  padding: 10px;\n  border-radius: 10px;\n  background-color: transparent;\n  transition: 0.5s;\n  color: rgba(255, 255, 255, 0.5);\n  &:hover {\n    background-color: var(--dex-hover-bg-color);\n  }\n  &.active {\n    color: var(--dex-active-text-color);\n    background-color: var(--button-color);\n  }\n  @media (max-width: 900px) {\n    margin-left: 10px;\n    height: 42px;\n    padding: 5px 10px;\n    border-radius: 10px;\n    &:first-child {\n      margin-left: 0px;\n    }\n  }\n`;\n\nconst IconWrapper = styled.div`\n  width: 30px;\n  height: 30px;\n  border: 1px solid var(--button-color);\n  border-radius: 10px;\n  margin-right: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 4px;\n  background-color: #000;\n  opacity: 0.5;\n  &.active {\n    opacity: 1;\n  }\n  @media (max-width: 900px) {\n    margin-right: 10px;\n  }\n`;\n\nconst Icon = styled.img`\n  width: 26px;\n`;\nconst ChainName = styled.div`\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 20px;\n  @media (max-width: 900px) {\n    font-size: 13px;\n  }\n`;\nconst DexName = styled.div`\n  font-size: 18px;\n  font-weight: 700;\n  line-height: 22px;\n  @media (max-width: 900px) {\n    font-size: 15px;\n    white-space: nowrap;\n  }\n`;\nconst WidgetWrapper = styled.div`\n  width: 560px;\n  @media (max-width: 900px) {\n    width: 100%;\n    margin-top: 10px;\n  }\n`;\n\nreturn (\n  <Dex>\n    <WidgetWrapper>\n      <Widget\n        src=\"dapdapbos.near/widget/Uniswap.Swap.SwapV2\"\n        props={{\n          title: state.selectedDex,\n          dexConfig: dexs[state.selectedDex],\n          chainId: chainId,\n          ...restProps,\n        }}\n      />\n    </WidgetWrapper>\n  </Dex>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/dapdapbos.near/widget/Uniswap.Swap.SwapConnector", "fact_widget_deployments_id": "37578f0b96f5fbaa8d34838942b5bf04", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}