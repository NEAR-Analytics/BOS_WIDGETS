{"tx_hash": "EC9f32MbqbUMtKgTQ74XuhqMsS1yy5bq8RecnbcyqFfq", "action_id_social": "ApSLximzk4m5q86CDdk6LmRGCtPtapDN8R6zze73dSS6-0-widget", "block_id": 117880095, "block_timestamp": "2024-04-29T11:25:01.682Z", "signer_id": "dapdapbos.near", "widget_name": "Staking.Hyperlock.Pool", "source_code": "const HeadWrapper = styled.div`\n  border-radius: 16px;\n  color: var(--white);\n  font-size: var(--fz-14);\n  position: relative;\n  .pool-head {\n    border-top-left-radius: 16px;\n    border-top-right-radius: 16px;\n    align-items: center;\n    cursor: pointer;\n    background-color: var(--bg-1);\n  }\n  .title-primary {\n    font-size: var(--fz-16);\n    font-weight: 500;\n  }\n  .title-secondary {\n  }\n  .title-sub {\n    font-size: var(--fz-12);\n    color: var(--purple);\n  }\n`;\n\nconst GridContainer = styled.div`\n  display: grid;\n  grid-template-columns: var(--grid-columns);\n`;\nconst GridItem = styled.div`\n  height: 84px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  padding-left: 24px;\n`;\n\nconst InfoPanel = styled.div`\n  width: 610px;\n  margin: 0 auto;\n`;\nconst InfoPanelTitle = styled.div`\n  font-size: var(--fz-16);\n  font-weight: 500;\n  color: var(--white);\n  margin-bottom: 14px;\n`;\nconst InfoPanelList = styled.div`\n  font-size: var(--fz-14);\n  font-weight: 400;\n  margin-bottom: 16px;\n  display: flex;\n  justify-content: space-between;\n  .list-key {\n    color: var(--purple);\n  }\n  .list-value {\n    color: var(--white);\n    flex-grow: 1;\n    text-align: right;\n    text-decoration: underline;\n  }\n`;\n\n// tabs begin\nconst TabListWrap = styled.div`\n  border-right: 1px solid var(--bg-2);\n  display: flex;\n  margin: 0 auto;\n  width: 510px;\n  align-items: center;\n`;\nconst TabsList = styled(\"Tabs.List\")`\n  border: 1px solid var(--bg-2);\n  margin-bottom: 20px;\n  .tab-head-item {\n    flex: 1;\n    display: flex;\n    height: 46px;\n    align-items: center;\n    justify-content: center;\n    font-size: 16px;\n    color: var(--purple);\n    cursor: pointer;\n    border-bottom-width: 3px;\n    border-bottom-style: solid;\n    border-bottom-color: transparent;\n    border-left: 1px solid var(--bg-2);\n  }\n  .tab-head-item.active {\n    color: var(--white);\n    border-bottom-color: var(--primary);\n  }\n`;\n// tabs end\n\n// Accordion begin\nconst AccordionItem = styled(\"Accordion.Item\")`\n  /* margin-bottom: 10px; */\n  border: 1px solid #373a53;\n  max-width: 1244px;\n  margin: 0 auto;\n  border-radius: 16px;\n  overflow: hidden;\n  .AccordionChevron {\n    position: absolute;\n    right: 24px;\n    top: 45%;\n    transition: all 0.1s ease-out;\n  }\n  &[data-state=\"open\"] .AccordionChevron {\n    transform: rotate(90deg);\n  }\n`;\n\nconst AccordionContent = styled(\"Accordion.Content\")`\n  /* max-width: 1244px;\n  margin: 0 auto; */\n  border-color: var(--bg-3);\n  background-color: var(--bg-3);\n  padding-bottom: 20px;\n  border-bottom-left-radius: 16px;\n  border-bottom-right-radius: 16px;\n`;\n//Accordion end\n\nconst {\n  data,\n  currentChain,\n  stakedTokens,\n  unStakedTokens,\n  dappLink,\n  handler,\n  onSuccess,\n} = props;\n\nState.init({\n  currentTab: \"STAKE_TAB\",\n});\n\nconst handleChangeTabs = (value) => {\n  State.update({\n    currentTab: value,\n  });\n};\n\nreturn (\n  <AccordionItem value={data.id}>\n    <Accordion.Trigger asChild>\n      <HeadWrapper>\n        <GridContainer className=\"pool-head\">\n          <GridItem>\n            <div className=\"title-primary\">\n              <Widget\n                src=\"dapdapbos.near/widget/Staking.Hyperlock.PoolIcons\"\n                props={{\n                  icons: [data.token0.icon, data.token1.icon],\n                }}\n              />\n              <span style={{ marginLeft: 20 }}>{data.name}</span>\n            </div>\n          </GridItem>\n          <GridItem>\n            <div className=\"fee-wrapper\">\n              {data.fee && (\n                <div className=\"title-secondary\">{data.fee / 10000}%</div>\n              )}\n              <div className=\"type-label\">{data.type}</div>\n            </div>\n          </GridItem>\n          <GridItem>\n            <Widget\n              src=\"dapdapbos.near/widget/Staking.Hyperlock.PoolIcons\"\n              props={{\n                icons: data.stackIcons,\n              }}\n            />\n          </GridItem>\n          <GridItem>{data.points}</GridItem>\n          <GridItem>\n            <Widget\n              src=\"bluebiu.near/widget/Avalanche.Lending.Total\"\n              props={{\n                total: data.tvl,\n                digit: 2,\n                unit: \"$\",\n              }}\n            />\n          </GridItem>\n        </GridContainer>\n        <svg\n          className=\"AccordionChevron\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"8\"\n          height=\"10\"\n          viewBox=\"0 0 8 10\"\n          fill=\"none\"\n        >\n          <path\n            d=\"M7.02391 4.21913C7.52432 4.61945 7.52432 5.38054 7.02391 5.78087L2.1247 9.70024C1.46993 10.2241 0.5 9.75788 0.5 8.91937L0.5 1.08062C0.5 0.242118 1.46993 -0.224055 2.12469 0.299755L7.02391 4.21913Z\"\n            fill=\"#979ABE\"\n          />\n        </svg>\n      </HeadWrapper>\n    </Accordion.Trigger>\n    <AccordionContent>\n      <Tabs.Root\n        value={state.currentTab}\n        onValueChange={(value) => {\n          State.update({\n            currentTab: value,\n          });\n        }}\n      >\n        <TabsList>\n          <TabListWrap>\n            <Tabs.Trigger value=\"STAKE_TAB\" asChild>\n              <div\n                className={`tab-head-item ${\n                  state.currentTab === \"STAKE_TAB\" ? \"active\" : \"\"\n                }`}\n              >\n                Stake\n              </div>\n            </Tabs.Trigger>\n            <Tabs.Trigger value=\"WITHDRAW_TAB\" asChild>\n              <div\n                className={`tab-head-item ${\n                  state.currentTab === \"WITHDRAW_TAB\" ? \"active\" : \"\"\n                }`}\n              >\n                Withdraw\n              </div>\n            </Tabs.Trigger>\n            <Tabs.Trigger value=\"INFO_TAB\" asChild>\n              <div\n                className={`tab-head-item ${\n                  state.currentTab === \"INFO_TAB\" ? \"active\" : \"\"\n                }`}\n              >\n                Info\n              </div>\n            </Tabs.Trigger>\n          </TabListWrap>\n        </TabsList>\n        <Tabs.Content value=\"STAKE_TAB\">\n          <Widget\n            src=\"dapdapbos.near/widget/Staking.Hyperlock.PoolTab\"\n            props={{\n              tokens: unStakedTokens,\n              token0: data.token0,\n              token1: data.token1,\n              price0: data.token0.price,\n              price1: data.token1.price,\n              name: data.name,\n              dappLink,\n              handler,\n              onSuccess,\n              from: \"stake\",\n            }}\n          />\n        </Tabs.Content>\n        <Tabs.Content value=\"WITHDRAW_TAB\">\n          <Widget\n            src=\"dapdapbos.near/widget/Staking.Hyperlock.PoolTab\"\n            props={{\n              tokens: unStakedTokens,\n              token0: data.token0,\n              token1: data.token1,\n              price0: data.token0.price,\n              price1: data.token1.price,\n              name: data.name,\n              dappLink,\n              handler,\n              onSuccess,\n              from: \"withdraw\",\n            }}\n          />\n        </Tabs.Content>\n        <Tabs.Content value=\"INFO_TAB\">\n          <InfoPanel>\n            <InfoPanelTitle>Contract</InfoPanelTitle>\n            <InfoPanelList>\n              <span className=\"list-key\">Lp contract address: </span>\n\n              <a\n                className=\"list-value\"\n                target=\"_blank\"\n                href={`${currentChain.blockExplorers}/address/${data.id}`}\n              >\n                {data.id}\n              </a>\n            </InfoPanelList>\n          </InfoPanel>\n        </Tabs.Content>\n      </Tabs.Root>\n    </AccordionContent>\n  </AccordionItem>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/dapdapbos.near/widget/Staking.Hyperlock.Pool", "fact_widget_deployments_id": "62e34b8f1fb9cffb696a27717cfa7ba9", "inserted_timestamp": "2024-04-29T12:48:04.052Z", "modified_timestamp": "2024-04-29T13:40:15.700Z", "__row_index": 0}