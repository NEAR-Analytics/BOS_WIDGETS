{"tx_hash": "7N2gTAE69MeiX8aumJiP66sn6Sac9c3kdx4GvyxYWsno", "action_id_social": "5RTMiGv67pyVT219chivr8cKMCy7LUP8UpMUyfxPrCQC-0-widget", "block_id": 119840727, "block_timestamp": "2024-05-27T08:22:41.024Z", "signer_id": "dapdapbos.near", "widget_name": "Staking.Hyperlock.Pool", "source_code": "const HeadWrapper = styled.div`\n  border-radius: 16px;\n  color: var(--white);\n  font-size: var(--fz-14);\n  position: relative;\n  .pool-head {\n    border-top-left-radius: 16px;\n    border-top-right-radius: 16px;\n    align-items: center;\n    cursor: pointer;\n    background-color: var(--bg-1);\n  }\n  .title-primary {\n    font-size: var(--fz-16);\n    font-weight: 500;\n  }\n  .title-secondary {\n  }\n  .title-sub {\n    font-size: var(--fz-12);\n    color: var(--purple);\n  }\n`;\n\nconst GridContainer = styled.div`\n  display: grid;\n  grid-template-columns: var(--grid-columns);\n`;\nconst GridItem = styled.div`\n  height: 84px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  padding-left: 24px;\n`;\n\n// tabs begin\nconst TabListWrap = styled.div`\n  border-right: 1px solid var(--bg-2);\n  display: flex;\n  margin: 0 auto;\n  width: 510px;\n  align-items: center;\n`;\nconst TabsList = styled.div`\n  border: 1px solid var(--bg-2);\n  margin-bottom: 20px;\n  .tab-head-item {\n    flex: 1;\n    display: flex;\n    height: 46px;\n    align-items: center;\n    justify-content: center;\n    font-size: 16px;\n    color: var(--purple);\n    cursor: pointer;\n    border-bottom-width: 3px;\n    border-bottom-style: solid;\n    border-bottom-color: transparent;\n    border-left: 1px solid var(--bg-2);\n  }\n  .tab-head-item.active {\n    color: var(--white);\n    border-bottom-color: var(--primary);\n  }\n`;\n// tabs end\n\n// Accordion begin\nconst StyledRow = styled.div`\n  /* margin-bottom: 10px; */\n  border: 1px solid #373a53;\n  max-width: 1244px;\n  margin: 0 auto;\n  border-radius: 16px;\n  overflow: hidden;\n  .AccordionChevron {\n    position: absolute;\n    right: 24px;\n    top: 45%;\n    transition: all 0.1s ease-out;\n  }\n  &[data-state=\"open\"] .AccordionChevron {\n    transform: rotate(90deg);\n  }\n`;\n\nconst ExpandWrapper = styled.div`\n  height: 0px;\n  animation: fadeOut 0.4s 0.1s ease both;\n  &.expand {\n    animation: fadeIn 0.4s 0.1s ease both;\n  }\n\n  @keyframes fadeIn {\n    0% {\n      opacity: 0;\n      transform: translateY(-20px);\n      height: 0px;\n      border: none;\n    }\n    100% {\n      opacity: 1;\n      transform: translateY(0);\n      height: 260px;\n      border: 1px solid #373a53;\n      border-top: none;\n    }\n  }\n\n  @keyframes fadeOut {\n    0% {\n      opacity: 1;\n      transform: translateY(0);\n      border: 1px solid #373a53;\n      border-top: none;\n    }\n    100% {\n      opacity: 0;\n      transform: translateY(-20px);\n      height: 0px;\n      border: none;\n    }\n  }\n`;\n\nconst AccordionContent = styled.div`\n  /* max-width: 1244px;\n  margin: 0 auto; */\n  border-color: var(--bg-3);\n  background-color: var(--bg-3);\n  padding-bottom: 20px;\n  border-radius: 0px 0px 13px 13px;\n  background: #2e3142;\n`;\n//Accordion end\n\nconst {\n  data,\n  currentChain,\n  stakedTokens,\n  unStakedTokens,\n  dappLink,\n  handler,\n  onSuccess,\n  onOpenStakeModal,\n} = props;\n\nState.init({\n  currentTab: \"STAKE_TAB\",\n});\n\nconst handleChangeTabs = (value) => {\n  State.update({\n    currentTab: value,\n  });\n};\n\nreturn (\n  <StyledRow>\n    <HeadWrapper\n      onClick={() => {\n        State.update({\n          expand: !state.expand,\n        });\n      }}\n    >\n      <GridContainer className=\"pool-head\">\n        <GridItem>\n          <div className=\"title-primary\">\n            <Widget\n              src=\"dapdapbos.near/widget/Staking.Hyperlock.PoolIcons\"\n              props={{\n                icons: [data.token0.icon, data.token1.icon],\n              }}\n            />\n            <span style={{ marginLeft: 20 }}>{data.name}</span>\n          </div>\n        </GridItem>\n        <GridItem>\n          <div className=\"fee-wrapper\">\n            {data.fee && (\n              <div className=\"title-secondary\">{data.fee / 10000}%</div>\n            )}\n            <div className=\"type-label\">{data.type}</div>\n          </div>\n        </GridItem>\n        <GridItem>\n          <Widget\n            src=\"dapdapbos.near/widget/Staking.Hyperlock.PoolIcons\"\n            props={{\n              icons: data.stackIcons,\n            }}\n          />\n        </GridItem>\n        <GridItem>{data.points || 0}</GridItem>\n        <GridItem>\n          <Widget\n            src=\"bluebiu.near/widget/Avalanche.Lending.Total\"\n            props={{\n              total: data.tvl,\n              digit: 2,\n              unit: \"$\",\n            }}\n          />\n        </GridItem>\n      </GridContainer>\n      <svg\n        className=\"AccordionChevron\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"8\"\n        height=\"10\"\n        viewBox=\"0 0 8 10\"\n        fill=\"none\"\n      >\n        <path\n          d=\"M7.02391 4.21913C7.52432 4.61945 7.52432 5.38054 7.02391 5.78087L2.1247 9.70024C1.46993 10.2241 0.5 9.75788 0.5 8.91937L0.5 1.08062C0.5 0.242118 1.46993 -0.224055 2.12469 0.299755L7.02391 4.21913Z\"\n          fill=\"#979ABE\"\n        />\n      </svg>\n    </HeadWrapper>\n    <ExpandWrapper className={state.expand ? \"expand\" : \"\"}>\n      <AccordionContent>\n        <TabsList>\n          <TabListWrap>\n            {[\n              { key: \"STAKE_TAB\", label: \"Stake\" },\n              { key: \"WITHDRAW_TAB\", label: \"Withdraw\" },\n            ].map((item) => (\n              <div\n                className={`tab-head-item ${\n                  state.currentTab === item.key ? \"active\" : \"\"\n                }`}\n                onClick={() => {\n                  State.update({\n                    currentTab: item.key,\n                  });\n                }}\n              >\n                {item.label}\n              </div>\n            ))}\n          </TabListWrap>\n        </TabsList>\n        {state.currentTab === \"STAKE_TAB\" && (\n          <Widget\n            src=\"dapdapbos.near/widget/Staking.Hyperlock.PoolTab\"\n            props={{\n              tokens: unStakedTokens,\n              token0: data.token0,\n              token1: data.token1,\n              price0: data.token0.price,\n              price1: data.token1.price,\n              name: data.name,\n              dappLink,\n              handler,\n              onSuccess,\n              onOpenStakeModal,\n              from: \"stake\",\n              type: data.type,\n            }}\n          />\n        )}\n        {state.currentTab === \"WITHDRAW_TAB\" && (\n          <Widget\n            src=\"dapdapbos.near/widget/Staking.Hyperlock.PoolTab\"\n            props={{\n              tokens: stakedTokens,\n              token0: data.token0,\n              token1: data.token1,\n              price0: data.token0.price,\n              price1: data.token1.price,\n              name: data.name,\n              dappLink,\n              handler,\n              onSuccess,\n              onOpenStakeModal,\n              from: \"withdraw\",\n            }}\n          />\n        )}\n      </AccordionContent>\n    </ExpandWrapper>\n  </StyledRow>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/dapdapbos.near/widget/Staking.Hyperlock.Pool", "fact_widget_deployments_id": "2fa87e7e6ccd4e842e4f39b76a5c9199", "inserted_timestamp": "2024-05-27T10:09:20.097Z", "modified_timestamp": "2024-05-27T10:09:20.097Z", "__row_index": 3}