{"tx_hash": "EvfhZVqBu7dXHwQ8JrQ7mjavnjpQEhouv1FQ6A2G2SYQ", "action_id_social": "8pFX5GjZWHyHCKcyF55aZTkZthSkVeepBY6fxnBcbMFr-0-widget", "block_id": 110980687, "block_timestamp": "2024-01-21T18:17:04.474Z", "signer_id": "dapdapbos.near", "widget_name": "Utils.GetTokenBalance", "source_code": "const { tokenAddress, owner, updateTokenBalance, place } = props;\n\nconst ABI = [\n  {\n    constant: true,\n    inputs: [{ name: \"_owner\", type: \"address\" }],\n    name: \"balanceOf\",\n    outputs: [{ name: \"\", type: \"uint256\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"decimals\",\n    outputs: [{ name: \"\", type: \"uint8\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nfunction getTokenBalance(_tokenAddress, _owner) {\n  const TokenContract = new ethers.Contract(\n    _tokenAddress,\n    ABI,\n    Ethers.provider()\n  );\n\n  TokenContract.balanceOf(_owner)\n    .then((balanceBig) => {\n      TokenContract.decimals().then((decimals) => {\n        const bal = Big(ethers.utils.formatUnits(balanceBig, decimals)).toFixed(\n          place || 2\n        );\n\n        updateTokenBalance(bal);\n      });\n    })\n    .catch((err) => {\n      console.info(\"getTokenBal_error:\", err);\n    });\n}\n\n// if you need fresh the balance,you only need fresh the render func.\nif (tokenAddress && owner) {\n  getTokenBalance(tokenAddress, owner);\n}\n\nreturn \"\";\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/dapdapbos.near/widget/Utils.GetTokenBalance", "fact_widget_deployments_id": "359a6f6ee58d51e5a5c655c3a6300d95", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}