{"tx_hash": "A9dJ3k2e2u5rQtXaArh7zLc9kjkZMkGvtj23e5Nr6zrR", "action_id_social": "FEeWA2CzNP6B9eNthzSuSXwNUbsF5zEhFriJYZreEbVh-0-widget", "block_id": 107672956, "block_timestamp": "2023-12-11T11:00:02.886Z", "signer_id": "dapdapbos.near", "widget_name": "Scroll.Uniswap.Swap.Routes", "source_code": "const Layer = styled.div`\n  position: fixed;\n  left: 0px;\n  top: 0px;\n  right: 0px;\n  bottom: 0px;\n`;\nconst StyledContainer = styled.div`\n  border-radius: 12px;\n  background: #fff;\n  padding: 12px;\n  width: 333px;\n  height: 96px;\n  flex-shrink: 0;\n  position: absolute;\n  @media (max-width: 768px) {\n    left: 30px !important;\n  }\n`;\nconst StyledRoutes = styled.div`\n  display: flex;\n  align-items: center;\n`;\nconst Route = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 4px;\n  .second-token {\n    margin-left: -6px;\n  }\n`;\nconst RouteWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  flex-grow: 1;\n`;\nconst Tag = styled.div`\n  flex-shrink: 0;\n  border-radius: 6px;\n  background: #262626;\n  display: flex;\n  align-items: center;\n  padding: 0px 4px;\n  color: #8e8e8e;\n  font-size: 10px;\n  font-weight: 500;\n  .white {\n    color: #fff;\n    font-size: 12px;\n    font-weight: 500;\n  }\n`;\nconst DashLine = styled.div`\n  flex-grow: 1;\n  height: 1px;\n  border-bottom: 1px dashed #8e8e8e;\n`;\nconst Desc = styled.div`\n  color: #8e8e8e;\n  font-size: 10px;\n  font-style: normal;\n  font-weight: 400;\n  margin-top: 10px;\n`;\n\nconst { gasCost, inputCurrency, outputCurrency } = props;\nconst routes = props.routes || [];\nconsole.log(inputCurrency, outputCurrency, routes);\nreturn (\n  <Layer\n    onClick={() => {\n      props.onClose();\n    }}\n    onTouchStart={() => {\n      props.onClose();\n    }}\n    onMouseDown={() => {\n      props.onClose();\n    }}\n  >\n    <StyledContainer\n      style={{\n        left: props.clientX + 10 + \"px\",\n        top: props.clientY + 20 + \"px\",\n      }}\n    >\n      <StyledRoutes>\n        <Route>\n          <Widget\n            src=\"dapdapbos.near/widget/Linea.Uniswap.Swap.TokenIcon\"\n            props={{\n              size: 16,\n              token: inputCurrency,\n            }}\n          />\n          <Tag>\n            <span className=\"white\">{routes[0]?.type}</span>\n            <span>100%</span>\n          </Tag>\n        </Route>\n        <DashLine />\n        {routes.map((route, i) => (\n          <RouteWrapper key={route.address}>\n            <Route>\n              <Widget\n                src=\"dapdapbos.near/widget/Linea.Uniswap.Swap.TokenIcon\"\n                props={{\n                  size: 16,\n                  token: i === 0 ? inputCurrency : route.token0,\n                }}\n              />\n              <div className=\"second-token\">\n                <Widget\n                  src=\"dapdapbos.near/widget/Linea.Uniswap.Swap.TokenIcon\"\n                  props={{\n                    size: 16,\n                    token:\n                      i === routes.length - 1 ? outputCurrency : route.token1,\n                  }}\n                />\n              </div>\n              <Tag>\n                <span>{route.fee / 10000}%</span>\n              </Tag>\n            </Route>\n            <DashLine />\n          </RouteWrapper>\n        ))}\n        <Route>\n          <Widget\n            src=\"dapdapbos.near/widget/Linea.Uniswap.Swap.TokenIcon\"\n            props={{\n              size: 16,\n              token: outputCurrency,\n            }}\n          />\n        </Route>\n      </StyledRoutes>\n      <Desc>\n        Best price route costs ~$\n        {gasCost} in gas. This route optimizes your total output by considering\n        split routes, multiple hops, and the gas cost of each step.\n      </Desc>\n    </StyledContainer>\n  </Layer>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/dapdapbos.near/widget/Scroll.Uniswap.Swap.Routes", "fact_widget_deployments_id": "d1ff97efb16c409094a13872ce10de1f", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}