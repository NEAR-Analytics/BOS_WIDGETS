{"tx_hash": "HDA3GrD6sFNx1DTyKArJ6vCTdvYeqYnBABZYY7NeWx4m", "action_id_social": "62LD9NiffSWCZnr5HZU9fxc1nAgu5MDKNKedGQstW33p-0-widget", "block_id": 103589291, "block_timestamp": "2023-10-17T14:28:41.865Z", "signer_id": "dapdapbos.near", "widget_name": "Uniswap.Swap.AmountOutV2", "source_code": "const {\n  update,\n  routerAddress,\n  wethAddress,\n  inputCurrency,\n  outputCurrency,\n  inputCurrencyAmount,\n  outputCurrencyAmount,\n  tradeType,\n  onLoad,\n  chainId,\n} = props;\n\nif (!update) return \"\";\n\nif (!inputCurrency.address || !outputCurrency.address || !inputCurrencyAmount) {\n  onLoad({});\n  return;\n}\n\nconst wrapType =\n  inputCurrency.address === \"native\" && outputCurrency.address === wethAddress\n    ? 1\n    : inputCurrency.address === wethAddress &&\n      outputCurrency.address === \"native\"\n    ? 2\n    : 0;\nif (wrapType) {\n  onLoad(\n    tradeType === \"in\"\n      ? {\n          outputCurrencyAmount: inputCurrencyAmount,\n          loading: false,\n          noPair: false,\n        }\n      : {\n          inputCurrencyAmount: outputCurrencyAmount,\n          loading: false,\n          noPair: false,\n        }\n  );\n  return;\n}\nconst currentCurrency = tradeType === \"in\" ? inputCurrency : outputCurrency;\n\nconst currentAmount = Big(\n  tradeType === \"in\" ? inputCurrencyAmount : outputCurrencyAmount\n)\n  .mul(0.995)\n  .toFixed(5);\nconst outCurrency = tradeType === \"in\" ? outputCurrency : inputCurrency;\nconst RouterContract = new ethers.Contract(\n  routerAddress,\n  [\n    {\n      inputs: [\n        { internalType: \"uint256\", name: \"amountIn\", type: \"uint256\" },\n        { internalType: \"address[]\", name: \"path\", type: \"address[]\" },\n      ],\n      name: \"getAmountsOut\",\n      outputs: [\n        { internalType: \"uint256[]\", name: \"amounts\", type: \"uint256[]\" },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n  ],\n  Ethers.provider().getSigner()\n);\nconst path = [\n  currentCurrency.address === \"native\" ? wethAddress : currentCurrency.address,\n  outCurrency.address === \"native\" ? wethAddress : outCurrency.address,\n];\n\nasyncFetch(\"https://api.uniswap.org/v2/quote\", {\n  method: \"post\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n  body: JSON.stringify({\n    tokenInChainId: chainId,\n    tokenIn: path[0],\n    tokenOutChainId: chainId,\n    tokenOut: path[1],\n    amount: ethers.utils\n      .parseUnits(currentAmount, currentCurrency.decimals)\n      .toString(),\n    sendPortionEnabled: false,\n    type: \"EXACT_INPUT\",\n    configs: [\n      {\n        protocols: [\"V3\"],\n        enableUniversalRouter: false,\n        routingType: \"CLASSIC\",\n        recipient: \"0xC25d79fc4970479B88068Ce8891eD9bE5799210D\",\n      },\n    ],\n  }),\n})\n  .then((res) => {\n    const parsedRes = res.body;\n\n    if (!parsedRes) throw new Error();\n\n    const outputCurrencyAmount = parsedRes.quote.quoteDecimals;\n\n    onLoad({\n      outputCurrencyAmount,\n      noPair: false,\n      fee: parsedRes.quote.route[0][0].fee,\n    });\n  })\n  .catch((err) => {\n    onLoad({\n      loading: false,\n      noPair: true,\n      fee: undefined,\n    });\n  });\n\n// RouterContract.getAmountsOut(\n//   ethers.utils.parseUnits(currentAmount, currentCurrency.decimals),\n//   path\n// )\n//   .then((res) => {\n//     const amount = Big(\n//       ethers.utils.formatUnits(res[1], outCurrency.decimals)\n//     ).toPrecision(10);\n//     onLoad({\n//       outputCurrencyAmount: Big(amount).gt(0.01)\n//         ? amount\n//         : Big(amount).toFixed(10),\n//       noPair: false,\n//     });\n//   })\n//   .catch((err) => {\n//     onLoad({\n//       loading: false,\n//       noPair: true,\n//     });\n//   });\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/dapdapbos.near/widget/Uniswap.Swap.AmountOutV2", "fact_widget_deployments_id": "3ff5e4b38c960e67e7240635461d6899", "inserted_timestamp": "2023-10-17T16:29:59.083Z", "modified_timestamp": "2023-10-17T16:29:59.083Z", "__row_index": 2}