{"tx_hash": "4MwE86YPJAot9VV9EZ615aEcUz2Fd8MYgcBFjbzzZpBN", "action_id_social": "Gu6dqJK4rctBC2Z5ajgindVDb3ogTfbbzgJp29H4L6pe-0-widget", "block_id": 117020419, "block_timestamp": "2024-04-17T07:06:33.329Z", "signer_id": "dapdapbos.near", "widget_name": "Bridge.Utils", "source_code": "function getBalance(address, account, rpcUrl, decimals) {\n    const provider = new ethers.providers.JsonRpcProvider(rpcUrl);\n\n    if (address === \"native\") {\n        return provider.getBalance(account).then((rawBalance) => {\n            return ethers.utils.formatUnits(rawBalance._hex, decimals).toString()\n        });\n    }\n\n    const TokenContract = new ethers.Contract(\n        address,\n        [\n            {\n                constant: true,\n                inputs: [\n                    {\n                        name: \"_owner\",\n                        type: \"address\",\n                    },\n                ],\n                name: \"balanceOf\",\n                outputs: [\n                    {\n                        name: \"balance\",\n                        type: \"uint256\",\n                    },\n                ],\n                payable: false,\n                stateMutability: \"view\",\n                type: \"function\",\n            },\n        ],\n        provider\n    );\n\n    return TokenContract.balanceOf(account)\n        .then((rawBalance) => {\n            return ethers.utils.formatUnits(rawBalance._hex, decimals).toString()\n        })\n        .catch((err) => {\n            console.log(err)\n            return '0.0'\n        });\n}\n\nfunction balanceFormated(balance, digits) {\n    digits = digits || 4\n    if (!balance) return '0';\n    const _balance = new Big(balance);\n    if (_balance.eq(0)) return '0';\n    if (_balance.lt(0.0001)) return `<${0.0001}`;\n    return _balance.toFixed(digits);\n}\n\nconst addressReg = /(\\w{6})(.*)(\\w{4})/\n\nfunction addressFormated(address) {\n    return address.replace(addressReg, (_1, _2, _3, _4) => {\n        return `${_2}...${_4}`\n    })\n}\n\nfunction saveTransaction(transaction_key, config) {\n    const transactionObj = getTransaction(transaction_key)\n    transactionObj.transactionList.push(config)\n    Storage.privateSet(transaction_key, transactionObj)\n}\n\nfunction saveAllTransaction(transaction_key, transactionList) {\n    Storage.privateSet(transaction_key, {\n        transactionList\n    })\n}\n\nfunction getTransaction(transaction_key) {\n    let transactionObj = Storage.privateGet(transaction_key)\n\n    if (!transactionObj) {\n        transactionObj = {}\n    }\n\n    if (!transactionObj.transactionList) {\n        transactionObj.transactionList = []\n    }\n\n\n    return transactionObj\n}\n\nreturn {\n    getBalance,\n    balanceFormated,\n    addressFormated,\n    saveTransaction,\n    getTransaction,\n    saveAllTransaction,\n}\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/dapdapbos.near/widget/Bridge.Utils", "fact_widget_deployments_id": "0e2ebdc106a0b01b778199988ce7ddd0", "inserted_timestamp": "2024-04-17T08:41:25.542Z", "modified_timestamp": "2024-04-17T08:41:25.542Z", "__row_index": 0}