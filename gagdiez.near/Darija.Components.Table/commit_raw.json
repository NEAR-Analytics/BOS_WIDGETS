{"tx_hash": "D8rsshqouxjCQZ5dhM1yWigktfCVqpqTm3mzJBTis37B", "action_id_social": "8V69YkT5B2aJtEy3wMPPt97BcvMgiZ39hQKMhTBo6abs-0-widget", "block_id": 109159090, "block_timestamp": "2023-12-30T14:01:45.323Z", "signer_id": "gagdiez.near", "widget_name": "Darija.Components.Table", "source_code": "// const keys = [\"a\", \"b\", \"c\"];\n// const elements = [{ a: \"a1\", b: \"b1\", c: \"c1\" }, { a: \"a2\", b: \"b2\", c: \"c2\" }];\n// const editors = { a: { type: 'text' }, b: { type: \"select\", options: ['v1', 'v2'] }, c: { type: 'text' } };\n// const onUpdate = (newElements) => console.log(newElements);\nconst { elements, keys, editors, onUpdate } = props;\n\nlet empty = {};\nfor (const k of keys) { empty[k] = editors[k] === 'text' ? '' : editors[k].options[0] }\n\nconst [internal, setInternal] = useState(elements)\nconst [hideInput, setHideInput] = useState(elements.map(() => true));\n\nconst change = (index, field, value) => {\n  const newInternal = [...internal];\n  newInternal[index][field] = value;\n  setInternal(newInternal);\n  onUpdate(newInternal);\n};\n\nconst remove = (index) => {\n  const newInternal = [...internal];\n  newInternal.splice(index, 1);\n\n  const newHideInput = [...hideInput];\n  newHideInput.splice(index, 1);\n\n  setInternal(newInternal);\n  setHideInput(newHideInput);\n  onUpdate(newInternal);\n};\n\nconst add = () => {\n  // check for empty add\n  setInternal([...internal, empty]);\n  setHideInput([...hideInput, false]);\n};\n\nconst Select = ({ field, index, selected }) => {\n  return <>\n    <select class=\"form-select\"\n      onChange={(e) => change(index, field, e.target.value)}\n    >\n      {\n        editors[field].options.map(opt => (\n          <option value={opt} selected={opt === selected}>\n            {opt}\n          </option>\n        ))\n      }\n    </select>\n  </>\n}\n\nconst generateEditor = (element, index, field) => {\n  if (editors[field]['type'] === 'text') {\n    return <input type='text' value={element[field]} onChange={(e) => change(index, field, e.target.value)} />\n  }\n\n  if (editors[field]['type'] === 'select') {\n    return <Select field={field} index={index} selected={element[field]} />\n  }\n}\n\nreturn <>\n  <table class=\"table table-hover\">\n    <thead class=\"table-light\">\n      <tr>\n        <th scope=\"col\">#</th>\n        {keys.map(k => <th scope=\"col\">{k}</th>)}\n        <th scope=\"col\"></th>\n      </tr>\n    </thead>\n    <tbody>\n      {\n        internal.map((elem, index) =>\n          <tr scope=\"row\">\n            <th class=\"col-1\">{index + 1}</th>\n\n            {keys.map((k) =>\n              <td class=\"col-auto\">\n                {hideInput[index] && elem[k]}\n                {!hideInput[index] && generateEditor(elem, index, k)}\n              </td>\n            )}\n            <td class=\"col-2\">\n              <a className=\"me-1\"\n                onClick={() => {\n                  setHideInput(\n                    hideInput.map((elem, i) => (i === index ? !elem : elem))\n                  );\n                }}\n              >\n                {hideInput[index] ? '\u270f\ufe0f' : '\u2705'}\n              </a>\n              <a onClick={() => remove(index)}>\ud83d\uddd1\ufe0f</a>\n            </td>\n          </tr>\n        )\n      }\n      <button class=\"btn btn-primary mx-auto my-2\" onClick={add}>Add</button>\n    </tbody>\n  </table>\n</>;", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/gagdiez.near/widget/Darija.Components.Table", "fact_widget_deployments_id": "1a6498800a66a727b4ca798fcf4e0745", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}