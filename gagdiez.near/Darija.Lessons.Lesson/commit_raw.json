{"tx_hash": "32AcxxKixU4FYUhB7fD2wVtrVaUFWTdp2SnBvRiSmYsD", "action_id_social": "HCQAKe2k98u5vSczVWnwjJmjfmJkwuCNtThBLpHshaif-0-widget", "block_id": 110394259, "block_timestamp": "2024-01-14T15:09:28.887Z", "signer_id": "gagdiez.near", "widget_name": "Darija.Lessons.Lesson", "source_code": "const { shuffle } = VM.require('gagdiez.near/widget/Darija.Lessons.Utils');\n\nconst indexed = Social.index(\"knowledge\", \"darija\", { order: \"desc\" });\nif (!indexed) return \"Loading ...\";\n\n// find the index that matches the indexed.value.uuid == props.knowledg\nlet toQuery = indexed.find(\n  (item) => String(item.value.uuid) === String(props.uuid)\n);\n\nconst known = Social.get(\"gagdiez.near/knowledge\", toQuery.blockHeight);\n\nif (!known) return \"Loading ...\";\n\nconst { title, knowledge } = JSON.parse(known);\nconst evaluator = props.evaluator;\n\nconst [shuffled, setKnown] = useState(shuffle(knowledge));\n\nreturn <Widget src={evaluator} props={{ knowledge: shuffled }} />;\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/gagdiez.near/widget/Darija.Lessons.Lesson", "fact_widget_deployments_id": "54a0e9982a7ca30f31965ff6b4bce977", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 5}