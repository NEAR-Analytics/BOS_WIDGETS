{"tx_hash": "GknGEjtCDVpisdgwhVMemQfZXXLFuGTKGG5w9aAH2PvZ", "action_id_social": "Apf4hYmbmPcpZ2gzSyQxYHPR774rmhbPnDPwNPDvYwuH-0-widget", "block_id": 108493246, "block_timestamp": "2023-12-21T17:05:49.527Z", "signer_id": "gagdiez.near", "widget_name": "Darija.Lessons.Select", "source_code": "if (context.loading) {\n  return <div>Loading...</div>;\n}\n\nconst knowledge = props.knowledge;\n\nif (knowledge.length < 4) return \"Add more than 4 options\";\n\nconst [score, setScore] = useState(0);\nconst [possibleOptions, setPossibleOptions] = useState(knowledge.slice(0, 4));\n\nconst [idx, setIdx] = useState(0);\n\nconst [wordEvaluating, setEvaluating] = useState(knowledge[0]);\nconst [wordSelected, setSelected] = useState(null);\nconst [check, setCheck] = useState(\"\");\nconst [step, setStep] = useState(\"verify\");\nconst [toTestAgain, setToTest] = useState([]);\nconst [showFinalScore, setShowFinalScore] = useState(false);\nconst [language, setLanguage] = useState(\"darija\");\n\nfunction shuffle(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    const tmp = array[i];\n    array[i] = array[j];\n    array[j] = tmp;\n  }\n  return array;\n}\n\nconst createOptions = (answer) => {\n  // the answer is one of the options\n  let options = [answer];\n\n  // add 3 random options\n  while (options.length < 4) {\n    const rIdx = Math.floor(Math.random() * knowledge.length);\n    if (!options.some((e, i, a) => e[language] === knowledge[rIdx][language])) {\n      options.push(knowledge[rIdx]);\n    }\n  }\n\n  // store a shuffled version\n  const shuffled = shuffle(options);\n  setPossibleOptions(shuffled);\n};\n\nconst passNext = () => {\n  const id = idx + 1;\n  setIdx(id);\n\n  if (id >= knowledge.length && toTestAgain.length === 0) {\n    return setShowFinalScore(true);\n  }\n\n  let answer;\n\n  if (id < knowledge.length) {\n    answer = knowledge[id];\n  } else {\n    answer = toTestAgain.pop();\n    setToTest(toTestAgain);\n  }\n\n  setEvaluating(answer);\n  setSelected(null);\n  setStep(\"verify\");\n  setCheck(\"\");\n  setLanguage(otherLanguage(language));\n  createOptions(answer);\n};\n\nconst checkAnswer = () => {\n  if(!wordSelected) return;\n\n  if (wordSelected[language] === knowledge[idx][language]) {\n    setScore(score + 1);\n    setCheck(\"correct\");\n  } else {\n    setCheck(\"wrong\");\n    toTestAgain.push(knowledge[idx]);\n    setToTest(toTestAgain);\n  }\n\n  setStep(\"next\");\n};\n\nconst Restart = () => {\n  setIdx(0);\n  setScore(0);\n  setToTest([]);\n  setEvaluating(knowledge[0]);\n  setSelected(null);\n  setStep(\"verify\");\n  setCheck(\"\");\n  createOptions(knowledge[0]);\n  setShowFinalScore(false);\n};\n\nconst Selection = styled.div`\n  &:hover {\n    cursor: pointer;\n    background-color: rgb(216 244 255);\n  }\n\n  &.selected {\n    background-color: rgb(216 244 255);\n  }\n\n  &.correct {\n    background-color: rgb(216 255 216);\n  }\n\n  &.wrong {\n    background-color: rgb(255 216 216);\n  }\n`;\n\nif (showFinalScore) {\n  return (\n    <div className=\"container\">\n      <div class=\"row\">\n        <div class=\"col-6\">\n          Final Score: {score}\n          <button onClick={Restart}> Restart </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst step2Label = { verify: \"Verificar\", next: \"Siguiente\" };\nconst step2Fc = { verify: checkAnswer, next: passNext };\nconst otherLanguage = (L) => (L === \"darija\" ? \"spanish\" : \"darija\");\n\nreturn (\n  <>\n    <div className=\"container p-3\">\n      <div className=\"text-right\">Score: {score}</div>\n      <h5 className=\"text-center\"> {wordEvaluating[language]} </h5>\n\n      <div class=\"row pt-2\">\n        {possibleOptions.map((opt) => (\n          <div className=\"col-sm-12 col-md-6 p-2\">\n            <Selection\n              className={`card text-center ${\n                opt[language] === wordSelected[language] && \"selected\"\n              } ${opt[language] === wordSelected[language] && check}`}\n              onClick={() => {step === \"verify\" && setSelected(opt)}}\n            >\n              <h5 className=\"card-title pt-2\">\n                {\" \"}\n                {opt.emoji} {opt[otherLanguage(language)]}{\" \"}\n              </h5>\n            </Selection>\n          </div>\n        ))}\n      </div>\n\n      <button onClick={step2Fc[step]}> {step2Label[step]} </button>\n    </div>\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/gagdiez.near/widget/Darija.Lessons.Select", "fact_widget_deployments_id": "9d357a6465257f292f6cc83fbf4b2225", "inserted_timestamp": "2023-12-21T19:24:15.578Z", "modified_timestamp": "2023-12-21T19:53:03.656Z", "__row_index": 0}