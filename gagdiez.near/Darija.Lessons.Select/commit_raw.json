{"tx_hash": "2KyWELLw4mmWXwPEYQxP1yXeGuQgKc8icj6uWjGym7xh", "action_id_social": "6ufGXFTTaQVfTAWqWmLMSxs6fKe8Ro4M8sCxDwMiiyF7-0-widget", "block_id": 110393313, "block_timestamp": "2024-01-14T14:52:50.778Z", "signer_id": "gagdiez.near", "widget_name": "Darija.Lessons.Select", "source_code": "const { shuffle, SelectionStyle: Selection } = VM.require('gagdiez.near/widget/Darija.Lessons.Utils');\n\nif (context.loading) return <div>Loading...</div>;\n\nconst knowledge = props.knowledge;\nconst native_lang = \"spanish\";\nconst learn_lang = \"darija\";\nconst max_lives = 4;\n\nif (knowledge.length < 4) return \"Add more than 4 options\";\n\nconst [idx, setIdx] = useState(0);\nconst [lives, setLives] = useState(max_lives);\nconst [language, setLanguage] = useState(learn_lang);\nconst [possibleOptions, setPossibleOptions] = useState(knowledge.slice(0, 4));\nconst [wordEvaluating, setEvaluating] = useState(knowledge[0]);\nconst [wordSelected, setSelected] = useState(null);\nconst [result, setResult] = useState(\"secondary\");\nconst [step, setStep] = useState(\"verify\");\nconst [toTestAgain, setToTest] = useState([]);\n\nconst createOptions = (answer) => {\n  if(!answer) return;\n\n  // the answer is one of the options\n  let options = [answer];\n\n  // shuffle all the options that are not the answer\n  const no_answer = shuffle(knowledge.filter( e => e[learn_lang] !== answer[learn_lang]));\n\n  // pick 3\n  options.push(...no_answer.slice(0, 3));\n\n  // shuffle again\n  setPossibleOptions(shuffle(options));\n};\n\nconst passNext = () => {\n  const id = idx + 1;\n\n  let answer = (id < knowledge.length)? knowledge[id] : toTestAgain.pop();\n\n  (result === \"danger\") && setLives(lives - 1);\n\n  setIdx(id);\n  setEvaluating(answer);\n  setToTest(toTestAgain);\n  setSelected(null);\n  setStep(\"verify\");\n  setResult(\"secondary\");\n  setLanguage(otherLanguage(language));\n  createOptions(answer);\n};\n\nconst checkAnswer = () => {\n  if (!wordSelected) return;\n\n  if (wordSelected[language] === wordEvaluating[language]) {\n    setResult(\"success\");\n  } else {\n    setResult(\"danger\");\n    toTestAgain.push(wordEvaluating);\n    setToTest(toTestAgain);\n  }\n\n  setStep(\"next\");\n};\n\nconst Restart = () => {\n  setIdx(0);\n  setLives(max_lives);\n  setToTest([]);\n  setStep(\"verify\");\n  setLanguage(learn_lang);\n  setPossibleOptions(knowledge.slice(0, 4));\n  setEvaluating(knowledge[0]);\n  setSelected(null);\n  setResult(\"secondary\");\n  createOptions(knowledge[0]);\n};\n\nif (lives === 0) {\n  return (\n    <div className=\"container text-center\">\n      <h3>Game Over</h3>\n      <button className=\"btn btn-primary\" onClick={Restart}>\n        Restart\n      </button>\n    </div>\n  );\n}\n\nif (wordEvaluating === undefined) {\n  return (\n    <div className=\"container text-center\">\n      <h3>\u00a1Ganaste!</h3>\n      <button className=\"btn btn-primary\" onClick={Restart}>\n        Restart\n      </button>\n    </div>\n  );\n}\n\nconst step2Label = { verify: \"Verificar\", next: \"Siguiente\" };\nconst step2Fc = { verify: checkAnswer, next: passNext };\nconst otherLanguage = L => L === native_lang ? learn_lang : native_lang;\n\nreturn (\n  <>\n    <div className=\"container p-3\">\n      <div className=\"text-right\"> Vidas:\n        {Array.from(Array(lives).keys()).map((i) => (\n          <span className=\"me-1\">\u2764\ufe0f</span>\n        ))}{Array.from(Array(max_lives - lives).keys()).map((i) => (\n          <span className=\"me-1\">\ud83e\ude76</span>\n        ))}\n      </div>\n\n      <h5 className=\"text-center pt-3\"> {wordEvaluating[language]} </h5>\n\n      <div class=\"row pt-1\">\n        {possibleOptions.map((opt) => (\n          <div className=\"col-sm-12 col-md-6 p-2\">\n            <Selection\n              className={`card text-center ${opt[language] === wordSelected[language] && \"selected\"\n                } ${opt[language] === wordSelected[language] && result}`}\n              onClick={() => { step === \"verify\" && setSelected(opt) }}\n            >\n              <h5 className=\"card-title pt-2\">\n                {opt.emoji} {opt[otherLanguage(language)]}\n              </h5>\n            </Selection>\n          </div>\n        ))}\n      </div>\n\n      <button class={`mt-2 btn btn-${result}`} onClick={step2Fc[step]}> {step2Label[step]} </button>\n    </div>\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/gagdiez.near/widget/Darija.Lessons.Select", "fact_widget_deployments_id": "75db93e87a36e5436e39733e5c6267e6", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}