{"tx_hash": "J1PsvxdaRdNh1bKW5cYfuGnsJShw2yifSsovAYXxTdZD", "action_id_social": "Axfs2LjvitdfqEbHkExNnEYhtr5zgbNqQwDnUo8iFn3N-0-widget", "block_id": 110392933, "block_timestamp": "2024-01-14T14:46:22.320Z", "signer_id": "gagdiez.near", "widget_name": "Darija.Lessons.Match", "source_code": "const { shuffle, SelectionStyle: Selection } = VM.require('gagdiez.near/widget/Darija.Lessons.Utils');\n\nif (context.loading) return <div>Loading...</div>;\n\nconst max_lives = 4;\nconst learn_lang = \"darija\";\nconst native_lang = \"spanish\";\nconst knowledge = props.knowledge;\n\nif (knowledge.length < 4) return \"Add more than 4 options\";\n\nconst noneSelected = { left: null, right: null };\n\nconst firstOptions = {\n  left: knowledge.slice(0, 4),\n  right: knowledge.slice(2, 4).concat(knowledge.slice(0, 2))\n};\n\nconst [idx, setIdx] = useState(0);\nconst [lives, setLives] = useState(max_lives);\nconst [options, setOptions] = useState(firstOptions);\nconst [selected, setSelected] = useState(noneSelected);\nconst [colStatus, setStatus] = useState({ left: ['', '', '', ''], right: ['', '', '', ''] });\nconst [step, setStep] = useState(\"verify\");\nconst [nextDisabled, setNextDisabled] = useState(true);\n\nconst createOptions = (idx) => {\n  // take 4 elements from idx (wrapping if necessary)\n  const options = knowledge.slice(idx, idx + 4);\n  if (options.length < 4) {\n    options.push(...knowledge.slice(0, 4 - options.length));\n  }\n\n  setOptions({ left: shuffle(options), right: shuffle(options) });\n};\n\nconst restart = () => {\n  setIdx(0);\n  setLives(max_lives);\n  setOptions(firstOptions);\n  setSelected(noneSelected);\n  setStatus({ left: ['', '', '', ''], right: ['', '', '', ''] });\n  setNextDisabled(true);\n}\n\n// lost all lives\nif (lives === 0) {\n  return (\n    <div className=\"container text-center\">\n      <h3>Game Over</h3>\n      <button className=\"btn btn-primary\" onClick={restart}>\n        Restart\n      </button>\n    </div>\n  );\n}\n\n// won\nif (idx >= knowledge.length) {\n  return (\n    <div className=\"container text-center\">\n      <h3>\u00a1Ganaste!</h3>\n      <button className=\"btn btn-primary\" onClick={restart}>\n        Restart\n      </button>\n    </div>\n  );\n}\n\nconst select = (side, idx) => {\n  selected[side] = idx;\n\n  if (selected.left !== null && selected.right !== null) {\n    // check if they are the same\n    const result = options.left[selected.left][learn_lang] === options.right[selected.right][learn_lang] ? 'success' : 'danger';\n\n    // set status\n    colStatus.left[selected.left] = result;\n    colStatus.right[selected.right] = result;\n    selected = noneSelected;\n\n    // remove lives if necessary\n    result === 'danger' && setLives(lives - 1);\n  } else {\n    if (colStatus[side][idx]) {\n      // deselect\n      colStatus[side][idx] = '';\n      selected[side] = null;\n    } else {\n      // deselect all other options\n      colStatus[side] = colStatus[side].map(e => e === 'success' ? 'success' : '');\n\n      // deselect or select\n      colStatus[side][idx] = currentState ? '' : 'selected';\n\n      //remove dangers from other side\n      const otherSide = side === 'left' ? 'right' : 'left';\n      colStatus[otherSide] = colStatus[otherSide].map(e => e === 'danger' ? '' : e);\n    }\n  }\n\n  // check if all are success\n  const next = colStatus.left.every(e => e === 'success')\n\n  setStatus(colStatus);\n  setSelected(selected);\n  setNextDisabled(!next);\n}\n\nconst SelectButton = (side, idx) => {\n  let onClick = () => {\n    (colStatus[side][idx] !== \"success\") && select(side, idx)\n  }\n\n  const lang = side === 'left' ? learn_lang : native_lang;\n\n  return <>\n    <Selection\n      className={`my-1 card text-center ${colStatus[side][idx]}`}\n      onClick={onClick}\n    >\n      <h5 className=\"card-title pt-2\">\n        {options[side][idx][lang]}\n      </h5>\n    </Selection>\n  </>\n}\n\nconst nextStep = () => {\n  idx += 4;\n\n  createOptions(idx);\n  setIdx(idx);\n\n  //reset status\n  setStatus({ left: ['', '', '', ''], right: ['', '', '', ''] });\n  setNextDisabled(true);\n}\n\nreturn (\n  <>\n    <div className=\"container p-3\">\n      <div className=\"text-right\"> Vidas:\n        {Array.from(Array(lives).keys()).map((i) => (\n          <span className=\"me-1\">\u2764\ufe0f</span>\n        ))}{Array.from(Array(max_lives - lives).keys()).map((i) => (\n          <span className=\"me-1\">\ud83e\ude76</span>\n        ))}\n      </div>\n\n      <h5 className=\"text-center pt-3\"> Seleccione los pares correctos </h5>\n      <div class=\"row pt-1\">\n        {['left', 'right'].map(side =>\n          <div class=\"col-6\">\n            {[0, 1, 2, 3].map(idx => SelectButton(side, idx))}\n          </div>\n        )}\n      </div>\n\n      <button class=\"mt-2 btn btn-secondary\" onClick={nextStep} disabled={nextDisabled}> Next </button>\n    </div>\n  </>\n);", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/gagdiez.near/widget/Darija.Lessons.Match", "fact_widget_deployments_id": "6168aae04c3353fdb8e1d8eb3b9db3da", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 2}