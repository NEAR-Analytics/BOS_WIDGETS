{"tx_hash": "GpKXu4o2WEvTi2CHuYHnJpaCAydjTPCoJcxU4nsRXKWE", "action_id_social": "DKfNZRcgPFg9YpnwYYKA9hWVaparA16w9e5vDbUFPnx-0-widget", "block_id": 108336071, "block_timestamp": "2023-12-19T14:59:44.202Z", "signer_id": "gagdiez.near", "widget_name": "Lesson.Select", "source_code": "if (context.loading) {\n  return <div>Loading...</div>;\n}\n\nlet knowledge = [\n  {\n    darija: \"baba\",\n    spanish: \"papa\",\n    emoji: \"\ud83d\udc68\ud83c\udffd\",\n  },\n  {\n    darija: \"mama\",\n    spanish: \"mama\",\n    emoji: \"\ud83d\udc69\ud83c\udffd\",\n  },\n  {\n    darija: \"ukht\",\n    spanish: \"hermana\",\n    emoji: \"\ud83d\udc6d\ud83c\udffd\",\n  },\n  {\n    darija: \"khu\",\n    spanish: \"hermano\",\n    emoji: \"\ud83d\udc6c\ud83c\udffd\",\n  },\n  {\n    darija: \"bnt\",\n    spanish: \"hija\",\n    emoji: \"\ud83d\udc67\ud83c\udffd\",\n  },\n  {\n    darija: \"wld\",\n    spanish: \"hijo\",\n    emoji: \"\ud83d\udc66\ud83c\udffd\",\n  },\n  {\n    darija: \"mra\",\n    spanish: \"esposa\",\n    emoji: \"\ud83d\udc70\ud83c\udffd\",\n  },\n  {\n    darija: \"rajl\",\n    spanish: \"esposo\",\n    emoji: \"\ud83e\udd35\ud83c\udffd\",\n  },\n  {\n    darija: \"nsib\",\n    spanish: \"cu\u00f1ado\",\n    emoji: \"\ud83d\udc68\ud83c\udffd\",\n  },\n  {\n    darija: \"nsiba\",\n    spanish: \"cu\u00f1ada\",\n    emoji: \"\ud83d\udc69\ud83c\udffd\",\n  },\n  {\n    darija: \"shix\",\n    spanish: \"suegro\",\n    emoji: \"\ud83d\udc74\ud83c\udffc\",\n  },\n  {\n    darija: \"3guzt\",\n    spanish: \"suegra\",\n    emoji: \"\ud83d\udc75\ud83c\udffd\",\n  },\n  {\n    darija: \"3rusa\",\n    spanish: \"nuera\",\n    emoji: \"\ud83d\udc69\ud83c\udffd\",\n  },\n  {\n    darija: \"jdd\",\n    spanish: \"abuelo\",\n    emoji: \"\ud83d\udc74\ud83c\udffc\",\n  },\n  {\n    darija: \"jdda\",\n    spanish: \"abuela\",\n    emoji: \"\ud83d\udc75\ud83c\udffd\",\n  },\n  {\n    darija: \"hafid\",\n    spanish: \"nieto\",\n    emoji: \"\ud83d\udc76\ud83c\udffd\",\n  },\n  {\n    darija: \"hafidt\",\n    spanish: \"nieta\",\n    emoji: \"\ud83d\udc76\ud83c\udffd\",\n  },\n  {\n    darija: \"3mm\",\n    spanish: \"tio (paterno)\",\n    emoji: \"\ud83d\udc68\ud83c\udffd\",\n  },\n  {\n    darija: \"3mma\",\n    spanish: \"tia (paterna)\",\n    emoji: \"\ud83d\udc69\ud83c\udffd\",\n  },\n  {\n    darija: \"khal\",\n    spanish: \"tio (materno)\",\n    emoji: \"\ud83d\udc68\ud83c\udffd\",\n  },\n  {\n    darija: \"khala\",\n    spanish: \"tia (materna)\",\n    emoji: \"\ud83d\udc69\ud83c\udffd\",\n  },\n  {\n    darija: \"bnt ukht\",\n    spanish: \"sobrina (hermana)\",\n    emoji: \"\ud83d\udc67\ud83c\udffd\",\n  },\n  {\n    darija: \"wld ukht\",\n    spanish: \"sobrino (hermana)\",\n    emoji: \"\ud83d\udc66\ud83c\udffd\",\n  },\n  {\n    darija: \"bnt khu\",\n    spanish: \"sobrina (hermano)\",\n    emoji: \"\ud83d\udc67\ud83c\udffd\",\n  },\n  {\n    darija: \"wld khu\",\n    spanish: \"sobrino (hermano)\",\n    emoji: \"\ud83d\udc66\ud83c\udffd\",\n  },\n  {\n    darija: \"bnt 3mmi\",\n    spanish: \"prima (tio paterno)\",\n    emoji: \"\ud83d\udc67\ud83c\udffd\",\n  },\n  {\n    darija: \"bnt 3mmi\",\n    spanish: \"prima (tio paterno)\",\n    emoji: \"\ud83d\udc67\ud83c\udffd\",\n  },\n  {\n    darija: \"bnt 3mmi\",\n    spanish: \"prima (tio paterno)\",\n    emoji: \"\ud83d\udc67\ud83c\udffd\",\n  },\n  {\n    darija: \"bnt 3mmi\",\n    spanish: \"prima (tio paterno)\",\n    emoji: \"\ud83d\udc67\ud83c\udffd\",\n  },\n  {\n    darija: \"wld 3mmi\",\n    spanish: \"primo (tio paterno)\",\n    emoji: \"\ud83d\udc66\ud83c\udffd\",\n  },\n];\n\nif (knowledge.length < 4) return \"Add more than 4 options\";\n\nfunction shuffle(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    const tmp = array[i];\n    array[i] = array[j];\n    array[j] = tmp;\n  }\n  return array;\n}\n\nconst [score, setScore] = useState(0);\nconst [possibleOptions, setPossibleOptions] = useState(knowledge.slice(0, 4));\n\nconst [idx, setIdx] = useState(0);\n\nconst [wordEvaluating, setEvaluating] = useState(knowledge[0]);\nconst [wordSelected, setSelected] = useState(null);\nconst [check, setCheck] = useState(\"\");\nconst [step, setStep] = useState(\"verify\");\nconst [toTestAgain, setToTest] = useState([]);\nconst [showFinalScore, setShowFinalScore] = useState(false);\n\nconst createOptions = (answer) => {\n  // the answer is one of the options\n  let options = [answer];\n\n  // add 3 random options\n  while (options.length < 4) {\n    const rIdx = Math.floor(Math.random() * knowledge.length);\n    if (!options.some((e, i, a) => e.darija === knowledge[rIdx].darija)) {\n      options.push(knowledge[rIdx]);\n    }\n  }\n\n  // store a shuffled version\n  const shuffled = shuffle(options);\n  setPossibleOptions(shuffled);\n};\n\nconst passNext = () => {\n  const id = idx + 1;\n  setIdx(id);\n\n  if (id >= knowledge.length && toTestAgain.length === 0) {\n    return setShowFinalScore(true);\n  }\n\n  let answer;\n\n  if (id < knowledge.length) {\n    answer = knowledge[id];\n  } else {\n    answer = toTestAgain.pop();\n    setToTest(toTestAgain);\n  }\n\n  setEvaluating(answer);\n  setSelected(null);\n  setStep(\"verify\");\n  setCheck(\"\");\n  createOptions(answer);\n  console.log(toTestAgain);\n};\n\nconst checkAnswer = () => {\n  if (wordSelected.darija === knowledge[idx].darija) {\n    setScore(score + 1);\n    setCheck(\"correct\");\n  } else {\n    setCheck(\"wrong\");\n    toTestAgain.push(knowledge[idx]);\n    setToTest(toTestAgain);\n  }\n\n  setStep(\"next\");\n};\n\nconst Restart = () => {\n  setIdx(0);\n  setScore(0);\n  setToTest([]);\n  setEvaluating(knowledge[0]);\n  setSelected(null);\n  setStep(\"verify\");\n  setCheck(\"\");\n  createOptions(knowledge[0]);\n  setShowFinalScore(false);\n};\n\nconst Selection = styled.div`\n  &:hover {\n    cursor: pointer;\n    background-color: rgb(216 244 255);\n  }\n\n  &.selected {\n    background-color: rgb(216 244 255);\n  }\n\n  &.correct {\n    background-color: rgb(216 255 216);\n  }\n\n  &.wrong {\n    background-color: rgb(255 216 216);\n  }\n`;\n\nif (showFinalScore) {\n  return (\n    <div className=\"container\">\n      <div class=\"row\">\n        <div class=\"col-6\">\n          Final Score: {score}\n          <button onClick={Restart}> Restart </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst step2Label = { verify: \"Verificar\", next: \"Siguiente\" };\nconst step2Fc = { verify: checkAnswer, next: passNext };\n\nreturn (\n  <>\n    <div className=\"container\">\n      <div class=\"row\">\n        <div class=\"col-6\">Darija: {wordEvaluating.darija}</div>\n        <div class=\"col-6\">Score: {score}</div>\n      </div>\n\n      <div class=\"row\">\n        {possibleOptions.map((opt) => (\n          <div className=\"col-sm-12 col-md-6 p-2\">\n            <Selection\n              className={`card text-center ${\n                opt.darija === wordSelected.darija && \"selected\"\n              } ${opt.darija === wordSelected.darija && check}`}\n              onClick={() => setSelected(opt)}\n            >\n              <h5 className=\"card-title pt-2\">\n                {\" \"}\n                {opt.emoji} {opt.spanish}{\" \"}\n              </h5>\n            </Selection>\n          </div>\n        ))}\n      </div>\n\n      <button onClick={step2Fc[step]}> {step2Label[step]} </button>\n    </div>\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/gagdiez.near/widget/Lesson.Select", "fact_widget_deployments_id": "9f908c0533414a8dee44c6e154a033de", "inserted_timestamp": "2023-12-19T16:51:19.065Z", "modified_timestamp": "2023-12-19T17:25:41.020Z", "__row_index": 1}