{"tx_hash": "8xWDsuRYkhGkgXPEWCTceFe1yDkyDCUpbU56uVpHQg4U", "action_id_social": "52Snvw7ovycPTvXTUr48maKHMv2LTSimSp9V4Z5j3DSg-0-widget", "block_id": 109160809, "block_timestamp": "2023-12-30T14:31:34.066Z", "signer_id": "gagdiez.near", "widget_name": "Darija.Knowledge.List", "source_code": "if (context.loading) return 'Loading ...';\n\n// indexedKnowledge is basically a list of titles, uuids and blockheights\nconst indexedKnowledge = Social.index('knowledge', 'darija', { order: 'desc' }) || [];\n\n// We store the lessons as a JSON-encoded array, since anyway we might want to change them\nconst lessonsDB = Social.get('gagdiez.near/darija/lessons') || [];\n\nconst uuids = [];\nconst filteredKnowledge = [];\n\nfor (const indexed of indexedKnowledge) {\n  let { blockHeight, value: { title, uuid } } = indexed;\n\n  console.log(uuid, blockHeight, title);\n\n  uuid = uuid ? uuid : blockHeight;\n\n  if (uuids.includes(uuid)) continue\n  uuids.push(uuid)\n  filteredKnowledge.push({ uuid, title })\n}\n\n// We hardcode this, since anyway they need to be coded\nconst evaluators = [\n  { name: 'Select', link: 'gagdiez.near/widget/Lessons.Select' },\n  { name: 'Translate', link: 'gagdiez.near/widget/Lessons.Translate' }\n]\n\n// Link to Creator widget\nconst knowledgeLink = (blockHeight) => `gagdiez.near/widget/Darija.Knowledge.Create?uuid=${blockHeight}`\n\nconst [lessons, setLessons] = useState(lessonsDB)\n\nconst update = () => {\n  // transform lesson title into uuid and evaluator name into link\n  const newLessons = lessons.map(lesson => {\n    const knowledge = filteredKnowledge.find(item => item.title === lesson.knowledge).uuid\n    const evaluator = evaluators.find(item => item.name === lesson.evaluator).link\n    return { ...lesson, knowledge, evaluator }\n  })\n\n  Social.set({\n    'darija/lessons': JSON.stringify(newLessons),\n  })\n}\n\nreturn <>\n  <div className=\"container\">\n    <div className=\"\">\n      <h5>Knowledge</h5>\n      <ul className=\"list-group mt-3\">\n        {filteredKnowledge.map((item, index) => (\n          <li class=\"list-group-item\">\n            <a href={knowledgeLink(item.uuid)}> {item.title}</a>\n          </li>\n        ))}\n        <li class=\"list-group-item\">\n          <a href={knowledgeLink(null)}>(+) Nuevo (+)</a>\n        </li>\n      </ul>\n    </div>\n    <hr />\n    <div className=\"\">\n      <h5>Lessons</h5>\n      <Widget src=\"gagdiez.near/widget/Darija.Components.Table\"\n        props={{\n          elements: lessons,\n          keys: [\"knowledge\", \"evaluator\"],\n          editors: {\n            knowledge: { type: \"select\", options: filteredKnowledge.map(item => item.title) },\n            evaluator: { type: \"select\", options: evaluators.map(item => item.name) },\n          },\n          onUpdate: setLessons,\n        }}\n      />\n      <button class=\"btn btn-success\" onClick={update}>Update</button>\n    </div>\n  </div>\n</>", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/gagdiez.near/widget/Darija.Knowledge.List", "fact_widget_deployments_id": "721d9610b26e0ad40f9beeff94bba3d7", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 8}