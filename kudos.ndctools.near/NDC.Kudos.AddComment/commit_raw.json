{"tx_hash": "AByW7dyzRiQZNw1nvUknWs4AZh6ZBkGEVBzfRW95hC5r", "action_id_social": "GtW7uVTTE8Pfttp2gdrc4y8Jcixt9iv4LGvzWkWeX9VQ-0-widget", "block_id": 98880887, "block_timestamp": "2023-08-15T18:55:32.948Z", "signer_id": "kudos.ndctools.near", "widget_name": "NDC.Kudos.AddComment", "source_code": "const { onHide, kudo, comment, edit } = props;\n\nconst kudosContract = \"kudos.ndctools.near\";\nconst socialContract = \"social.near\";\nconst widgets = {\n  styledComponents: \"nomination.ndctools.near/widget/NDC.StyledComponents\",\n};\n\nState.init({\n  message: edit ? comment.message : \"\",\n});\n\nconst Modal = styled.div`\n  position: fixed;\n  display: flex;\n  z-index: 1;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  justify-content: center;\n  align-items: center;\n  background: rgba(0, 0, 0, 0.7);\n`;\n\nconst ComponentWrapper = styled.div`\n  position: absolute;\n  width: 100%;\n  z-index: 100;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n\nconst ModalContent = styled.div`\n  background: #f8f8f9;\n  margin: 20% auto;\n  padding: 20px;\n  border-radius: 10px;\n  width: 50%;\n\n  @media (max-width: 768px) {\n    width: 90%;\n  }\n\n  .content {\n    margin: 18px 0;\n\n    h6 {\n      margin-bottom: -10px;\n    }\n  }\n`;\n\nconst InputField = styled.div`\n  margin: 20px 0;\n`;\n\nconst Section = styled.div`\n  margin: 12px 0;\n`;\n\nconst StyledLink = styled.a`\n  color: inherit !important;\n  width: 100px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  font-size: 16px;\n  margin-left: 5px;\n`;\n\nconst CreatedAt = styled.div`\n  font-size: 12px;\n  font-style: italic;\n  font-weight: 300;\n\n  b {\n    font-weight: 500;\n  }\n`;\n\nconst Description = styled.div`\n  max-height: 100px;\n  white-space: pre-line;\n  width: 100%;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  font-weight: 400;\n  font-size: 14px;\n`;\n\nconst encryptComment = () => {\n  let data = {\n    m: state.message.slice(0, 1000),\n    s: comment.owner_id.toString(),\n    t: comment.created_at.toString(),\n    p: comment.id.toString(),\n  };\n\n  let buff = new Buffer(JSON.stringify(data));\n\n  console.log(buff.toString(\"base64\"));\n  return buff.toString(\"base64\");\n};\n\nconst handleAddComment = () => {\n  const message = state.message.slice(0, 1000);\n  const mentions = message.match(/@[\\w][^\\s]*/g);\n  const mentionData =\n    mentions.length > 0\n      ? mentions.map((user) => {\n          return {\n            key: user.slice(1),\n            value: { type: \"mention\" },\n          };\n        })\n      : {};\n\n  let data = [\n    {\n      contractName: kudosContract,\n      methodName: \"leave_comment\",\n      args: {\n        parent_comment_id: comment.id,\n        receiver_id: kudo.receiver_id,\n        kudos_id: kudo.id,\n        message,\n      },\n      gas: \"250000000000000\",\n      deposit: 17000000000000000000000,\n    },\n  ];\n\n  // if (mentionData.length > 0)\n  //   data.push({\n  //     contractName: socialContract,\n  //     methodName: \"set\",\n  //     args: {\n  //       data: {\n  //         index: {\n  //           notify: JSON.stringify(mentionData),\n  //         },\n  //       },\n  //     },\n  //     gas: \"30000000000000\",\n  //     deposit: 1000000000000000000000,\n  //   });\n\n  Near.call(data).then((data) => {\n    onHide();\n  });\n};\n\nconst handleEditComment = () => {\n  const targetComment = encryptComment();\n  const comments = {\n    ...kudo.comments,\n    ...{ [comment.id.toString]: targetComment },\n  };\n\n  Social.set(\n    {\n      [kudosContract]: {\n        kudos: {\n          [kudo.receiver_id]: {\n            [kudo.id]: {\n              created_at: kudo.created_at,\n              sender_id: kudo.sender_id,\n              kind: kudo.kind,\n              message: kudo.message,\n              icon: kudo.icon,\n              upvotes: kudo.upvotes,\n              comments: comments,\n              tags: JSON.stringify(kudo.tags),\n            },\n          },\n        },\n      },\n    },\n    {\n      force: true,\n      onCommit: onHide,\n      onCancel: onHide,\n    }\n  ).then((_data) => onHide());\n};\n\nconst UserLink = ({ title, src }) => (\n  <StyledLink href={src}>{title}</StyledLink>\n);\n\nconst getDateAgo = () => {\n  const now = new Date().getTime();\n  const current = new Date(parseInt(comment.created_at)).getTime();\n\n  const diff = now - current;\n  let days = Math.floor(diff / (1000 * 60 * 60 * 24));\n  let hours = Math.floor((diff % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n  let minutes = Math.floor((diff % (1000 * 60 * 60)) / (1000 * 60));\n  let seconds = Math.floor((diff % (1000 * 60)) / 1000);\n\n  if (days > 0) return `${days} days ago`;\n  if (hours > 0) return `${hours} hours ago`;\n  if (minutes > 0) return `${minutes} minutes ago`;\n  if (seconds > 0) return `${seconds} seconds ago`;\n\n  return \"\";\n};\n\nreturn (\n  <Modal>\n    <ComponentWrapper>\n      <ModalContent>\n        <h4>{edit ? \"Edit message\" : \"Comment to Reply\"}</h4>\n        <div className=\"content\">\n          <div className=\"d-flex justify-content-between align-items-center\">\n            <div>\n              <Widget\n                src=\"mob.near/widget/ProfileImage\"\n                props={{\n                  accountId: comment.owner_id,\n                  imageClassName: \"rounded-circle w-100 h-100\",\n                  style: { width: \"32px\", height: \"32px\", marginRight: 5 },\n                }}\n              />\n              <UserLink\n                src={`https://near.org/near/widget/ProfilePage?accountId=${comment.owner_id}`}\n                title={comment.owner_id}\n              />\n            </div>\n            <CreatedAt>\n              <i className=\"bi bi-clock\" />\n              {getDateAgo()}\n            </CreatedAt>\n          </div>\n          <Description className=\"text-secondary\">\n            {comment.message}\n          </Description>\n          <hr className=\"text-secondary\" />\n          <Widget\n            src={\"rubycop.near/widget/Common.Compose\"}\n            props={{\n              placeholder: \"Left a comment\",\n              handleChange: (text) => {\n                if (text.length > 1000) return;\n                State.update({ message: text });\n              },\n            }}\n          />\n        </div>\n        <div className=\"d-grid gap-3 d-flex align-items-center justify-content-end\">\n          <Widget\n            src={widgets.styledComponents}\n            props={{\n              Button: {\n                text: \"Cancel\",\n                className: \"secondary dark\",\n                onClick: onHide,\n              },\n            }}\n          />\n          <Widget\n            src={widgets.styledComponents}\n            props={{\n              Button: {\n                text: \"Submit\",\n                onClick: () => handleAddComment(),\n              },\n            }}\n          />\n        </div>\n      </ModalContent>\n    </ComponentWrapper>\n  </Modal>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/kudos.ndctools.near/widget/NDC.Kudos.AddComment", "fact_widget_deployments_id": "9a671006a96366ddb06d68f387fb2c8a", "inserted_timestamp": "2023-08-15T20:41:31.354Z", "modified_timestamp": "2023-08-15T20:41:31.354Z", "__row_index": 8}