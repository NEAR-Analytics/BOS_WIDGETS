{"tx_hash": "A7tFPPLCPCosqcKzuDE5foprRSvRyxXhAPgjnaHqakau", "action_id_social": "CowTrBAwKjBJKeHCfh7EbHg1yXoHfo3CaKbnWqjY87pa-0-widget", "block_id": 98292411, "block_timestamp": "2023-08-07T18:45:09.386Z", "signer_id": "kudos.ndctools.near", "widget_name": "NDC.Kudos.Main", "source_code": "const { transactionHashes } = props;\n\nconst kudosContract = \"kudos.ndctools.near\";\nconst registryContract = \"registry.i-am-human.near\";\n\nconst widgets = {\n  header: \"kudos.ndctools.near/widget/NDC.Kudos.Header\",\n  filter: \"kudos.ndctools.near/widget/NDC.Kudos.Filter\",\n  navigation: \"kudos.ndctools.near/widget/NDC.Kudos.Navigation\",\n  card: \"kudos.ndctools.near/widget/NDC.Kudos.Card\",\n  addKudo: \"kudos.ndctools.near/widget/NDC.Kudos.AddKudo\",\n  congratsMintModal: \"kudos.ndctools.near/widget/NDC.Kudos.CongratsMintModal\",\n  styledComponents: \"kudos.ndctools.near/widget/NDC.StyledComponents\",\n};\n\nState.init({\n  selectedItem: \"Latest\",\n  searchAccId: \"\",\n  emptyResult: false,\n  isIAmHuman: false,\n  kudos: [],\n  isOpen: false,\n  kind: \"\",\n  congratsMintModal: false,\n  init: true,\n});\n\nconst getKudos = () => {\n  let data = Social.getr(`${kudosContract}/kudos`);\n  let formattedKudos = [];\n\n  if (data) {\n    Object.entries(data).map(([receiverId, kudoObject], index) => {\n      Object.entries(kudoObject).map(([id, kudo]) => {\n        formattedKudos.push({\n          id,\n          created_at: kudo.created_at,\n          icon: kudo.icon,\n          kind: kudo.kind,\n          message: kudo.message,\n          sender_id: kudo.sender_id,\n          receiver_id: receiverId,\n          tags: kudo.tags,\n          comments: kudo.comments ? Object.entries(kudo.comments) : [],\n          upvotes: kudo.upvotes ? Object.keys(kudo.upvotes) : [],\n        });\n      });\n    });\n  }\n\n  if (formattedKudos.length === 0) {\n    State.update({ kudos: [], emptyResult: false });\n    return;\n  }\n\n  let filteredKudos = [];\n\n  switch (state.selectedItem) {\n    case \"My\":\n      filteredKudos = formattedKudos.filter(\n        (kudo) =>\n          kudo.receiver_id === context.accountId ||\n          kudo.sender_id === context.accountId\n      );\n      break;\n    case \"Trending\":\n      filteredKudos = formattedKudos.sort(\n        (a, b) => b.upvotes.length - a.upvotes.length\n      );\n      break;\n    case \"Latest\":\n      filteredKudos = formattedKudos.sort(\n        (a, b) => b.created_at - a.created_at\n      );\n      break;\n  }\n\n  if (state.searchAccId) {\n    filteredKudos = filteredKudos.filter((kudo) =>\n      kudo.receiver_id.includes(state.searchAccId)\n    );\n  }\n\n  State.update({\n    kudos: filteredKudos,\n    emptyResult: filteredKudos.length === 0,\n  });\n};\n\nconst isHuman = Near.view(registryContract, \"is_human\", {\n  account: context.accountId,\n});\nconst sbts = Near.view(registryContract, \"sbt_tokens\", {\n  issuer: kudosContract,\n});\n\nState.update({\n  isKudoMinted: sbts.some((sbt) => sbt.owner === context.accountId),\n  isIAmHuman: isHuman[0][1].length > 0,\n});\n\ngetKudos();\n\nasyncFetch(\"https://rpc.testnet.near.org\", {\n  method: \"POST\",\n  headers: {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n  },\n  body: JSON.stringify({\n    jsonrpc: \"2.0\",\n    id: \"dontcare\",\n    method: \"tx\",\n    params: [transactionHashes, context.accountId],\n  }),\n}).then((res) => {\n  const txn = res.body.result.transaction;\n  if (\n    res.body.result.status.SuccessValue &&\n    txn.signer_id === context.accountId &&\n    txn.actions[0].FunctionCall.method_name === \"exchange_kudos_for_sbt\"\n  )\n    State.update({ congratsMintModal: true });\n});\n\nconst Container = styled.div`\n  margin: 20px 0;\n`;\n\nconst LeftSection = styled.div`\n  padding: 20px;\n  background: #f8f8f9;\n  border-radius: 10px;\n\n  @media (max-width: 768px) {\n    background: #f8f8f9;\n    padding: 16px;\n    border-bottom-right-radius: 0;\n    border-bottom-left-radius: 0;\n  }\n`;\n\nconst CenterSection = styled.div`\n  background: #fff;\n  min-height: 100%;\n\n  @media (max-width: 768px) {\n    background: #f8f8f9;\n    border-top-right-radius: 0;\n    border-top-left-radius: 0;\n  }\n`;\n\nconst H5 = styled.h5`\n  padding-bottom: 10px;\n\n  &.thin {\n    font-weight: 400;\n  }\n`;\n\nconst H4 = styled.h5`\n  padding-bottom: 10px;\n\n  @media (max-width: 768px) {\n    display: none;\n  }\n`;\nconst H3 = styled.h5`\n  padding: 20px 0px 0 10px;\n\n  @media (max-width: 768px) {\n    display: none;\n  }\n`;\n\nconst FilterButtonContainer = styled.div`\n  padding: 16px;\n  width: 340px;\n  border-radius: 8px;\n  background: #f8f8f9;\n\n  @media only screen and (max-width: 1061px) {\n    width: 100%;\n  }\n`;\n\nconst Filter = styled.div`\n  margin-top: 20px;\n\n  @media only screen and (max-width: 1061px) {\n    flex-direction: column;\n  }\n`;\n\nconst Toolbar = styled.div`\n  margin-left: 20px;\n  @media only screen and (max-width: 1061px) {\n    margin: 10px 0 0 0;\n  }\n`;\n\nreturn (\n  <div>\n    <Widget src={widgets.header} props={{ isIAmHuman: state.isIAmHuman }} />\n    <Filter className=\"d-flex\">\n      <div className=\"w-100\">\n        <Widget\n          src={widgets.filter}\n          props={{\n            handleFilter: (e) => State.update({ searchAccId: e.target.value }),\n            candidateId: state.searchAccId,\n            placeholder: \"Search by account name\",\n          }}\n        />\n      </div>\n      {state.isIAmHuman && (\n        <Toolbar>\n          <FilterButtonContainer className=\"d-flex gap-2\">\n            <Widget\n              src={widgets.styledComponents}\n              disabled={!state.isIAmHuman}\n              props={{\n                Button: {\n                  text: \"Give a Kudo\",\n                  className: \"primary justify-content-center w-100\",\n                  image: {\n                    url: \"https://bafkreieynbjyuycbo7naqp5dtiajcsmpiwyt7n2mk35746463nkcjte2yy.ipfs.nftstorage.link/\",\n                  },\n                  onClick: () => State.update({ isOpen: true, kind: \"k\" }),\n                },\n              }}\n            />\n            <Widget\n              src={widgets.styledComponents}\n              disabled={!state.isIAmHuman}\n              props={{\n                Button: {\n                  text: \"Give a Ding\",\n                  className: \"justify-content-center w-100 primary danger\",\n                  image: {\n                    url: \"https://bafkreigkzvete56d25gwabrb3msxegxley4t6csppqdik4mh45amimjubq.ipfs.nftstorage.link/\",\n                  },\n                  onClick: () => State.update({ isOpen: true, kind: \"d\" }),\n                },\n              }}\n            />\n          </FilterButtonContainer>\n        </Toolbar>\n      )}\n      {state.isOpen && (\n        <Widget\n          src={widgets.addKudo}\n          props={{\n            onHide: () => State.update({ isOpen: false }),\n            kind: state.kind,\n          }}\n        />\n      )}\n    </Filter>\n    <Container className=\"d-flex row\">\n      <LeftSection className=\"col-lg-3\">\n        <H4>Home</H4>\n        <Widget\n          src={widgets.navigation}\n          props={{\n            selectedItem: state.selectedItem,\n            handleSelect: (itemType) =>\n              State.update({ selectedItem: itemType }),\n          }}\n        />\n      </LeftSection>\n      <CenterSection className=\"col-lg-9\">\n        <>\n          <H3>{state.selectedItem} Kudos</H3>\n          {state.emptyResult ? (\n            <div className=\"w-100 h-100 d-flex justify-content-center align-items-center\">\n              <div className=\"text-center d-flex flex-column gap-2\">\n                <i className=\"bi bi-search fs-1\"></i>\n                <H5 className=\"text-secondary thin\">\n                  There are no kudos <br />\n                  matches searching request\n                </H5>\n              </div>\n            </div>\n          ) : (\n            <div className=\"d-flex flex-wrap\">\n              {state.kudos.map((kudo, index) => (\n                <div className=\"col col-lg-6 p-2\">\n                  <Widget\n                    key={index}\n                    src={widgets.card}\n                    props={{\n                      isIAmHuman: state.isIAmHuman,\n                      isKudoMinted: state.isKudoMinted,\n                      kudosContract,\n                      kudo,\n                    }}\n                  />\n                </div>\n              ))}\n            </div>\n          )}\n        </>\n      </CenterSection>\n    </Container>\n\n    {state.congratsMintModal && state.init && (\n      <Widget\n        src={widgets.congratsMintModal}\n        props={{\n          onHide: () => State.update({ congratsMintModal: false, init: false }),\n        }}\n      />\n    )}\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/kudos.ndctools.near/widget/NDC.Kudos.Main", "fact_widget_deployments_id": "6a7eb3b1b2c5950c98bb072ddce3372c", "inserted_timestamp": "2023-08-07T19:43:47.339Z", "modified_timestamp": "2023-08-07T19:43:47.339Z", "__row_index": 0}