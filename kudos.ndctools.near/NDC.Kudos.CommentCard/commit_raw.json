{"tx_hash": "3kEcuDyQ24BSchNEfGLm1Yzte4KcmM3u76bcqs3uC57C", "action_id_social": "CUoN9ycp8GxAPAdCwNVm4qShrgoEnR3e72EiHKshfYEo-0-widget", "block_id": 98561318, "block_timestamp": "2023-08-11T11:11:40.499Z", "signer_id": "kudos.ndctools.near", "widget_name": "NDC.Kudos.CommentCard", "source_code": "const { kudo, comment, isIAmHuman, kudosContract } = props;\n\nconst widgets = {\n  styledComponents: \"nomination.ndctools.near/widget/NDC.StyledComponents\",\n  addComment: \"kudos.ndctools.near/widget/NDC.Kudos.AddComment\",\n};\n\nconst Container = styled.div`\n  border-radius: 10px;\n  background: #fff;\n\n  @media (max-width: 768px) {\n    background: #fff;\n  }\n`;\n\nconst Description = styled.div`\n  width: 100%\n  font-weight: 400;\n  font-size: ${(props) => (props.secondary ? \"12px\" : \"14px\")};\n  margin: ${(props) => (props.secondary ? \"5px 0 0 0\" : \"12px 0\")};\n`;\n\nconst CreatedAt = styled.div`\n  font-size: 12px;\n  font-style: italic;\n  font-weight: 300;\n\n  b {\n    font-weight: 500;\n  }\n`;\n\nconst StyledLink = styled.a`\n  color: ${(props) =>\n    props.secondary ? \"grey !important\" : \"black !important\"};\n  width: 80%;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  font-size: ${(props) => (props.secondary ? \"14px\" : \"16px\")};\n`;\n\nconst ReplyTo = styled.div`\n  margin-bottom: 20px;\n  background: #f8f8f9;\n  padding: 10px;\n  border-radius: 6px;\n`;\n\nconst Hr = styled.div`\n  background: #d0d6d9;\n  border-radius: 3px;\n  width: 2px;\n  height: 40px;\n  margin-right: 10px;\n`;\n\nconst UserProfileDiv = styled.div`\n  .userImg {\n    width: ${(props) => (!props.secondary ? \"32px\" : \"24px\")};\n    height: ${(props) => (!props.secondary ? \"32px\" : \"24px\")};\n  }\n`;\n\nconst getDateAgo = () => {\n  const now = new Date().getTime();\n  const current = new Date(parseInt(comment.created_at)).getTime();\n\n  const diff = now - current;\n  let days = Math.floor(diff / (1000 * 60 * 60 * 24));\n  let hours = Math.floor((diff % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n  let minutes = Math.floor((diff % (1000 * 60 * 60)) / (1000 * 60));\n  let seconds = Math.floor((diff % (1000 * 60)) / 1000);\n\n  if (days > 0) return `${days} days ago`;\n  if (hours > 0) return `${hours} hours ago`;\n  if (minutes > 0) return `${minutes} minutes ago`;\n  if (seconds > 0) return `${seconds} seconds ago`;\n\n  return \"\";\n};\n\nconst handleShare = (e) => e.preventDefault();\n\nState.init({\n  isOpen: false,\n  isEdit: false,\n});\n\nconst UserProfile = ({ secondary, ownerId }) => (\n  <UserProfileDiv\n    secondary={secondary}\n    className=\"d-flex justify-content-between align-items-center\"\n  >\n    <div className=\"d-flex justify-content-between align-items-center w-100\">\n      <div className=\"d-flex gap-2 align-items-center\">\n        <Widget\n          src=\"mob.near/widget/ProfileImage\"\n          props={{\n            accountId: ownerId,\n            imageClassName: \"userImg rounded-circle\",\n            style: {\n              width: secondary ? \"24px\" : \"32px\",\n              height: secondary ? \"24px\" : \"32px\",\n            },\n          }}\n        />\n        <StyledLink\n          secondary={secondary}\n          href={`https://near.org/near/widget/ProfilePage?accountId=${ownerId}`}\n        >\n          {ownerId}\n        </StyledLink>\n      </div>\n    </div>\n  </UserProfileDiv>\n);\n\nconst trimMessage = (message) => {\n  const postfix = message.length > 20 ? \"...\" : \"\";\n  return `${message.slice(0, 20)}${postfix}`;\n};\n\nconst base64decode = (encodedValue) => {\n  let buff = Buffer.from(encodedValue, \"base64\");\n  return JSON.parse(buff.toString(\"utf-8\"));\n};\n\nreturn (\n  <>\n    <Container>\n      <div className=\"p-3\">\n        {comment.parent_comment && (\n          <ReplyTo className=\"d-flex align-items-center\">\n            <Hr />\n            <div>\n              <UserProfile\n                secondary\n                ownerId={base64decode(comment.parent_comment).s}\n              />\n              <Description secondary className=\"text-secondary\">\n                {trimMessage(base64decode(comment.parent_comment).m)}\n              </Description>\n            </div>\n          </ReplyTo>\n        )}\n        <UserProfile ownerId={comment.owner_id} />\n        <Description className=\"text-secondary\">\n          <Widget\n            src=\"mob.near/widget/SocialMarkdown\"\n            props={{ text: comment.message }}\n          />\n        </Description>\n        <div className=\"d-flex justify-content-between align-items-center\">\n          <CreatedAt className=\"gap-1\">\n            <i className=\"bi bi-clock\" />\n            {getDateAgo()}\n          </CreatedAt>\n          <div className=\"d-flex justify-content-between align-items-center gap-2\">\n            <Widget\n              src={widgets.styledComponents}\n              props={{\n                Button: {\n                  size: \"sm\",\n                  className: \"secondary dark\",\n                  icon: <i className=\"bi bi-share fs-6\"></i>,\n                },\n              }}\n            />\n            {context.accountId === comment.owner_id && (\n              <Widget\n                src={widgets.styledComponents}\n                props={{\n                  Button: {\n                    size: \"sm\",\n                    title: \"Edit\",\n                    className: \"secondary dark\",\n                    icon: <i className=\"bi bi-edit fs-6\"></i>,\n                    onClick: () => State.update({ isOpen: true, isEdit: true }),\n                  },\n                }}\n              />\n            )}\n            <Widget\n              src={widgets.styledComponents}\n              props={{\n                Button: {\n                  text: \"Reply\",\n                  disabled: !isIAmHuman,\n                  size: \"sm\",\n                  icon: <i className=\"bi bi-arrow-90deg-left\" />,\n                  onClick: () => State.update({ isOpen: true, isEdit: false }),\n                },\n              }}\n            />\n          </div>\n        </div>\n      </div>\n    </Container>\n\n    {state.isOpen && (\n      <Widget\n        src={widgets.addComment}\n        props={{\n          kudo,\n          edit: state.isEdit,\n          comment: {\n            id: comment.id,\n            owner_id: comment.owner_id,\n            message: comment.message,\n            created_at: comment.created_at,\n          },\n          onHide: () => State.update({ isOpen: false }),\n        }}\n      />\n    )}\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/kudos.ndctools.near/widget/NDC.Kudos.CommentCard", "fact_widget_deployments_id": "1d1b6f9d971f23403916c529ae2d583b", "inserted_timestamp": "2023-08-11T12:41:39.568Z", "modified_timestamp": "2023-08-11T12:41:39.568Z", "__row_index": 0}