{"tx_hash": "An5myPizooYYgz2ZCXbUfVmwwWwf2FJ4QMqEddyJcfAP", "action_id_social": "7zEp3V7T6oJgXK5jYafvJ57TMMkdnTqgG9zKZZgkhshd-0-widget", "block_id": 98335185, "block_timestamp": "2023-08-08T09:27:54.775Z", "signer_id": "kudos.ndctools.near", "widget_name": "NDC.Kudos.Card", "source_code": "const {\n  kudo,\n  isIAmHuman,\n  isKudoMinted,\n  kudosContract,\n  hideMintBtn,\n  inverseColor,\n} = props;\n\nconst MIN_UPVOTE = 3;\nconst IMPORTANT_DING_UPVOTES = 2;\n\nconst widgets = {\n  styledComponents: \"nomination.ndctools.near/widget/NDC.StyledComponents\",\n  kudoPage: \"#/kudos.ndctools.near/widget/NDC.Kudos.Kudo.Page\",\n  addComment: \"kudos.ndctools.near/widget/NDC.Kudos.AddComment\",\n  mintSbt: \"kudos.ndctools.near/widget/NDC.Kudos.Kudo.MintSbt\",\n};\n\nconst Container = styled.div`\n  border-radius: 10px;\n  background: ${(props) => (props.inverseColor ? \"#fff\" : \"#f8f8f9\")};\n  border: ${(props) =>\n    props.canMint\n      ? \"2px solid #9333EA\"\n      : props.ding\n      ? \"2px solid #DD5E56\"\n      : \"\"};\n\n  @media (max-width: 768px) {\n    background: #fff;\n  }\n`;\n\nconst InputField = styled.div`\n  margin: 20px 0;\n`;\n\nconst Mint = styled.div`\n  padding: 10px 0;\n  background: #4ba6ee;\n  border-radius: 8px 8px 0 0;\n  font-size: 14px;\n  cursor: pointer;\n\n  span.gift {\n    font-size: 20px;\n  }\n  b {\n    margin-left: 5px;\n    font-size: 16px;\n  }\n\n  p {\n    margin-bottom: 0;\n  }\n`;\n\nconst Ding = styled.div`\n  padding: 10px 0;\n  background: #c23f38;\n  border-radius: 8px 8px 0 0;\n  font-size: 14px;\n  color: #fff;\n\n  b {\n    margin-left: 5px;\n    font-size: 16px;\n  }\n\n  p {\n    margin-bottom: 0;\n  }\n`;\n\nconst ViewButton = styled.button`\n  padding: 2px 12px;\n  border-radius: 8px;\n  background: #fff;\n  font-size: 12px;\n  font-weight: 500;\n  line-height: 24px;\n  color: #9333ea;\n  border: 1px solid #9333ea;\n`;\n\nconst Description = styled.div`\n  max-height: 100px;\n  width: 100%;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  font-weight: 400;\n  font-size: 14px;\n  margin: 12px 0;\n`;\n\nconst ImageTag = styled.div`\n  height: 250px;\n  width: 100%;\n  background: url(${(props) => props.src}) no-repeat center center;\n  background-size: cover;\n  overflow: hidden;\n  margin: 0 0 12px 0;\n`;\n\nconst Tags = styled.div`\n  font-size: 12px;\n  margin-bottom: 12px;\n`;\n\nconst CreatedAt = styled.div`\n  font-size: 12px;\n  font-style: italic;\n  font-weight: 300;\n\n  b {\n    font-weight: 500;\n  }\n`;\n\nconst KudoLink = styled.a`\n  color: black;\n\n  &:hover {\n    text-decoration: none !important;\n  }\n\n  span {\n    color: inherit !important;\n    width: 80%;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    font-size: 16px;\n    margin-left: 5px;\n  }\n`;\n\nconst Modal = styled.div`\n  position: fixed;\n  z-index: 101;\n  top: 0px;\n  left: 0px;\n  width: 100%;\n  height: 100vh;\n  background: rgba(128, 128, 128, 0.65);\n`;\n\nconst ComponentWrapper = styled.div`\n  position: absolute;\n  width: 100%;\n  z-index: 100;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n\nconst ModalContent = styled.div`\n  background: #f8f8f9;\n  margin: 20% auto;\n  padding: 20px;\n  border-radius: 10px;\n  width: 50%;\n\n  @media (max-width: 768px) {\n    width: 90%;\n  }\n\n  .content {\n    margin: 18px 0;\n\n    h6 {\n      margin-bottom: -10px;\n    }\n  }\n`;\n\nconst getDateAgo = () => {\n  const now = new Date().getTime();\n  const current = new Date(parseInt(kudo.created_at)).getTime();\n\n  const diff = now - current;\n  let days = Math.floor(diff / (1000 * 60 * 60 * 24));\n  let hours = Math.floor((diff % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n  let minutes = Math.floor((diff % (1000 * 60 * 60)) / (1000 * 60));\n  let seconds = Math.floor((diff % (1000 * 60)) / 1000);\n\n  if (days > 0) return `${days} days ago`;\n  if (hours > 0) return `${hours} hours ago`;\n  if (minutes > 0) return `${minutes} minutes ago`;\n  if (seconds > 0) return `${seconds} seconds ago`;\n\n  return \"\";\n};\n\nconst canMint =\n  isIAmHuman &&\n  !isKudoMinted &&\n  kudo.kind === \"k\" &&\n  kudo.upvotes.length >= MIN_UPVOTE &&\n  kudo.receiver_id === context.accountId &&\n  !hideMintBtn;\n\nconst importantDing =\n  kudo.kind === \"d\" &&\n  kudo.upvotes.length >= IMPORTANT_DING_UPVOTES &&\n  kudo.receiver_id === context.accountId;\n\nconst handleUpvote = (kudo) => {\n  Near.call(\n    kudosContract,\n    \"upvote_kudos\",\n    {\n      receiver_id: kudo.receiver_id,\n      kudos_id: kudo.id,\n    },\n    \"300000000000000\",\n    4000000000000000000000\n  );\n};\n\nconst handleShare = (e) => {\n  e.preventDefault();\n};\n\nState.init({\n  addCommentIsOpen: false,\n  mintKudoIsOpen: false,\n  comment: \"\",\n});\n\nconst kudoTags = kudo.tags ? JSON.parse(kudo.tags).filter((el) => el) : [];\n\nconst formatMsg = (text) => {\n  // String.fromCharCode doesn't work on Near Social\n  // const newStr = text.replace(/\\\\u[\\dA-F]{4}/gi, (match) => {\n  //   return String.fromCharCode(parseInt(match.replace(/\\\\u/g, \"\"), 16));\n  // });\n\n  return text;\n};\n\nconst utf2Html = (str) => {\n  return [...str]\n    .map((char) =>\n      char.codePointAt() > 127 ? `&#${char.codePointAt()};` : char\n    )\n    .join(\"\");\n};\n\nreturn (\n  <>\n    <Container\n      canMint={canMint}\n      ding={importantDing}\n      inverseColor={inverseColor}\n    >\n      {canMint ? (\n        <Mint id=\"mint\" onClick={() => State.update({ mintKudoIsOpen: true })}>\n          <p className=\"text-white text-center align-items-center\">\n            <span className=\"gift\">\ud83c\udf81</span>\n            <b>Congratulations!</b>{\" \"}\n          </p>\n          <p className=\"text-white text-center align-items-center\">\n            <i>Click on the gift box to mint your Proof of Kudos</i>\n          </p>\n        </Mint>\n      ) : (\n        importantDing && (\n          <Ding id=\"mint\">\n            <p className=\"text-white text-center align-items-center\">\n              <b>Attention!</b> <i>You have received a Ding</i>\n            </p>\n          </Ding>\n        )\n      )}\n      <div className=\"p-3\">\n        <div className=\"d-flex justify-content-between align-items-center\">\n          <div className=\"d-flex justify-content-between align-items-center w-100\">\n            <div className=\"d-flex gap-2 align-items-center\">\n              <KudoLink\n                href={`${widgets.kudoPage}?accountId=${kudo.receiver_id}&kudoId=${kudo.id}`}\n              >\n                <Widget\n                  src=\"mob.near/widget/ProfileImage\"\n                  props={{\n                    accountId: kudo.receiver_id,\n                    imageClassName: \"rounded-circle w-100 h-100\",\n                    style: { width: \"32px\", height: \"32px\", marginRight: 5 },\n                  }}\n                />\n                <span>To {kudo.receiver_id}</span>\n              </KudoLink>\n            </div>\n            {isIAmHuman && (\n              <Widget\n                src={widgets.styledComponents}\n                props={{\n                  Button: {\n                    text: kudo.upvotes.length,\n                    disabled:\n                      kudo.upvotes.includes(context.accountId) ||\n                      kudo.receiver_id === context.accountId ||\n                      kudo.sender_id === context.accountId,\n                    className:\n                      kudo.kind === \"k\" ? \"secondary dark\" : \"secondary danger\",\n                    onClick: (e) => handleUpvote(kudo),\n                    image: {\n                      url:\n                        kudo.kind === \"k\"\n                          ? isIAmHuman &&\n                            kudo.receiver_id !== context.accountId &&\n                            kudo.sender_id !== context.accountId &&\n                            !kudo.upvotes.includes(context.accountId)\n                            ? \"https://bafkreicdwy5kpbid7qn2q4yt4lx6oo24kosa7t2ravqg54pmpb62mp64eq.ipfs.nftstorage.link\"\n                            : \"https://bafkreidz6ybnsss2ulwg236fvp3cm5ksdqpsfziwhvnx4ee7maqpcl2jde.ipfs.nftstorage.link/\"\n                          : \"https://bafkreia6ux4wzaktmwxxnkzd7tbhpuxhlp352twzsunc6vetza76u6clwy.ipfs.nftstorage.link/\",\n                    },\n                  },\n                }}\n              />\n            )}\n          </div>\n        </div>\n        <Description className=\"text-secondary\">\n          <Widget\n            src=\"mob.near/widget/SocialMarkdown\"\n            props={{\n              text: utf2Html(kudo.message),\n            }}\n          />\n        </Description>\n        {kudo.icon && <ImageTag src={`https://ipfs.io/ipfs/${kudo.icon}`} />}\n        {kudoTags.length > 0 && (\n          <Tags className=\"d-flex gap-2\">\n            {kudoTags.map((tag) => (\n              <Widget\n                src={widgets.styledComponents}\n                props={{\n                  Tag: { title: tag },\n                }}\n              />\n            ))}\n          </Tags>\n        )}\n\n        <div className=\"d-flex justify-content-between align-items-center pt-2\">\n          <CreatedAt className=\"gap-1\">\n            <i className=\"bi bi-clock\" />\n            {getDateAgo()}\n            {kudo.sender_id && (\n              <div>\n                by <b>{kudo.sender_id}</b>\n              </div>\n            )}\n          </CreatedAt>\n          <div className=\"d-flex justify-content-between align-items-center gap-2\">\n            <Widget\n              src={widgets.styledComponents}\n              props={{\n                Button: {\n                  text: \"Reply\",\n                  disabled: !isIAmHuman,\n                  size: \"sm\",\n                  icon: <i className=\"bi bi-arrow-90deg-left\" />,\n                  onClick: () => State.update({ addCommentIsOpen: true }),\n                },\n              }}\n            />\n          </div>\n        </div>\n      </div>\n    </Container>\n\n    {state.addCommentIsOpen && (\n      <Widget\n        src={widgets.addComment}\n        props={{\n          kudo,\n          comment: {\n            id: null,\n            owner_id: kudo.receiver_id,\n            message: kudo.message,\n            created_at: kudo.created_at,\n          },\n          onHide: () => State.update({ addCommentIsOpen: false }),\n        }}\n      />\n    )}\n    {state.mintKudoIsOpen && (\n      <Widget\n        src={widgets.mintSbt}\n        props={{\n          kudoId: kudo.id,\n          onHide: () => State.update({ mintKudoIsOpen: false }),\n        }}\n      />\n    )}\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/kudos.ndctools.near/widget/NDC.Kudos.Card", "fact_widget_deployments_id": "171d109f1ac2b7fd380ce223960ac2b9", "inserted_timestamp": "2023-08-08T10:34:59.133Z", "modified_timestamp": "2023-08-08T10:34:59.133Z", "__row_index": 71}