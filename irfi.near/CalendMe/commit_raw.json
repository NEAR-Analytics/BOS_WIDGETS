{"tx_hash": "AVro1UtWFaCdkF39vGdsR5oSoTqmUtK5P5ZD58kA6SCL", "action_id_social": "TfPL71VLszT7cMoVa1HfFLozoXQ6yaAFR1tEJXY7KXS-0-widget", "block_id": 102946889, "block_timestamp": "2023-10-09T02:37:29.547Z", "signer_id": "irfi.near", "widget_name": "CalendMe", "source_code": "const sourceAccountId = context.accountId;\r\nconst targetAccountId = props.accountId || sourceAccountId;\r\nconst isOwner = targetAccountId == sourceAccountId;\r\n\r\nconst dayOptions = [\r\n  \"Monday\",\r\n  \"Tuesday\",\r\n  \"Wednesday\",\r\n  \"Thursday\",\r\n  \"Friday\",\r\n  \"Saturday\",\r\n  \"Sunday\",\r\n];\r\n\r\nconst dayToFullDay = {\r\n  Mon: \"Monday\",\r\n  Tue: \"Tuesday\",\r\n  Wed: \"Wednesday\",\r\n  Thu: \"Thursday\",\r\n  Fri: \"Friday\",\r\n  Sat: \"Saturday\",\r\n  Sun: \"Sunday\",\r\n};\r\n\r\nconst meetDurations = {\r\n  \"30 minutes\": 1800000,\r\n  \"60 minutes\": 3600000,\r\n};\r\n\r\nconst addToGoogleCalendar = (date, details, text) => {\r\n  const dateFormatted = date\r\n    .toISOString()\r\n    .replaceAll(\":\", \"\")\r\n    .replaceAll(\"-\", \"\");\r\n  return (\r\n    <a\r\n      target=\"_blank\"\r\n      href={`https://calendar.google.com/calendar/render?action=TEMPLATE&dates=${dateFormatted}/${dateFormatted}&details=${details}&location=&text=${text}`}\r\n    >\r\n      Add\r\n    </a>\r\n  );\r\n};\r\nconst settings = () => {\r\n  const meetPreference = Social.get(`${sourceAccountId}/meet_preference/*`);\r\n  State.init({\r\n    active_days: JSON.parse(meetPreference?.active_days ?? \"[]\"),\r\n    active_hours_begin: meetPreference?.active_hours_begin ?? null,\r\n    active_hours_end: meetPreference?.active_hours_end ?? null,\r\n    meet_duration: meetPreference?.meet_duration ?? null,\r\n  });\r\n\r\n  const quarterHours = [\"00\"];\r\n  const times = [];\r\n  for (const i = 0; i < 24; i++) {\r\n    for (const j = 0; j < quarterHours.length; j++) {\r\n      const time = i + \":\" + quarterHours[j];\r\n      if (i < 10) {\r\n        time = \"0\" + time;\r\n      }\r\n      times.push(time);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mx-auto\">\r\n      <div className=\"my-2\">\r\n        <p>Preferred Meeting Days</p>\r\n        <Typeahead\r\n          options={dayOptions}\r\n          multiple\r\n          onChange={(value) => {\r\n            State.update({ active_days: value });\r\n          }}\r\n          selected={state.active_days}\r\n          placeholder=\"Edit your preferred meeting days...\"\r\n        />\r\n      </div>\r\n      <div className=\"my-2\">\r\n        <p>Active hours begin at (UTC)</p>\r\n        <Typeahead\r\n          options={times}\r\n          onChange={(value) => {\r\n            State.update({ active_hours_begin: value[0] });\r\n          }}\r\n          selected={\r\n            state.active_hours_begin ? [state.active_hours_begin] : null\r\n          }\r\n          placeholder=\"Edit your preferred starting hour...\"\r\n        />\r\n      </div>\r\n      <div className=\"my-2\">\r\n        <p>Active hours stop at (UTC)</p>\r\n        <Typeahead\r\n          options={times}\r\n          onChange={(value) => {\r\n            State.update({ active_hours_end: value[0] });\r\n          }}\r\n          selected={state.active_hours_end ? [state.active_hours_end] : null}\r\n          placeholder=\"Edit your preferred last hour...\"\r\n        />\r\n      </div>\r\n      <div className=\"my-2\">\r\n        <p>Meet duration</p>\r\n        <Typeahead\r\n          options={Object.keys(meetDurations)}\r\n          onChange={(value) => {\r\n            State.update({ meet_duration: value[0] });\r\n          }}\r\n          selected={state.meet_duration ? [state.meet_duration] : null}\r\n          placeholder=\"Edit your meeting duration...\"\r\n        />\r\n      </div>\r\n      <CommitButton force data={{ meet_preference: state }}>\r\n        Update\r\n      </CommitButton>\r\n      <p>\r\n        Your CalendMe link:\r\n        <a\r\n          href={`https://near.social/irfi.near/widget/CalendMe?accountId=${sourceAccountId}`}\r\n        >{`https://near.social/irfi.near/widget/CalendMe?accountId=${sourceAccountId}`}</a>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst bookAMeet = () => {\r\n  const meetPreference = Social.get(`${targetAccountId}/meet_preference/*`);\r\n\r\n  if (!meetPreference) {\r\n    return (\r\n      <div>\r\n        <p>\r\n          <b>{targetAccountId}</b> is not on CalendMe yet, please invite them\r\n          here!\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Generating time slots\r\n  const currentDate = new Date();\r\n\r\n  const dates = [];\r\n  for (const i = 0; i < 9; i++) {\r\n    const utcString = currentDate.toUTCString();\r\n    const splittedStr = utcString.split(\" \");\r\n\r\n    if (meetPreference.active_days.includes(splittedStr[0].slice(0, 3))) {\r\n      dates.push(\r\n        `${splittedStr[0]} ${splittedStr[1]} ${splittedStr[2]} ${splittedStr[3]}`\r\n      );\r\n    }\r\n\r\n    currentDate.setDate(currentDate.getDate() + 1);\r\n  }\r\n\r\n  const times = [];\r\n  const quarterHours = [\"00\"];\r\n\r\n  if (meetPreference?.meet_duration == \"30 minutes\") {\r\n    quarterHours.push(\"30\");\r\n  }\r\n\r\n  for (\r\n    const i = parseInt(\r\n      meetPreference?.active_hours_begin.substring(0, 2) ?? \"0\"\r\n    );\r\n    i < parseInt(meetPreference?.active_hours_end.substring(0, 2) ?? \"0\");\r\n    i++\r\n  ) {\r\n    for (const j = 0; j < quarterHours.length; j++) {\r\n      const time = i + \":\" + quarterHours[j];\r\n      if (i < 10) {\r\n        time = \"0\" + time;\r\n      }\r\n      times.push(time);\r\n    }\r\n  }\r\n\r\n  const generateTime = (date, time_slot) => {\r\n    return new Date(`${date} ${time_slot} GMT`);\r\n  };\r\n\r\n  State.init({\r\n    time_slot: null,\r\n    date: null,\r\n    msg: null,\r\n  });\r\n\r\n  return (\r\n    <div className=\"container mx-auto\">\r\n      <div className=\"container mx-auto\">\r\n        <div className=\"my-2\">\r\n          <p>Select date</p>\r\n          <Typeahead\r\n            options={dates}\r\n            onChange={(value) => {\r\n              State.update({ date: value[0] });\r\n            }}\r\n            placeholder=\"Select your date...\"\r\n          />\r\n        </div>\r\n        <div className=\"my-2\">\r\n          <p>Select time slot (UTC)</p>\r\n          <Typeahead\r\n            options={times}\r\n            onChange={(value) => {\r\n              State.update({ time_slot: value[0] });\r\n            }}\r\n            placeholder=\"Select your time slot...\"\r\n          />\r\n        </div>\r\n        <div className=\"my-2\">\r\n          <p>Message</p>\r\n          <input\r\n            onChange={(e) => State.update({ msg: e.target.value })}\r\n            placeholder=\"Hey let's meet at https://meet.google.com/xxx\"\r\n          ></input>\r\n        </div>\r\n        {state.date && state.time_slot && (\r\n          <p>\r\n            <b>Meet date:</b>{\" \"}\r\n            {generateTime(state.date, state.time_slot).toUTCString()}\r\n          </p>\r\n        )}\r\n        <CommitButton\r\n          force\r\n          data={{\r\n            calendme: {\r\n              [`${targetAccountId}`]: {\r\n                [generateTime(state.date, state.time_slot).getTime()]: {\r\n                  msg: state.msg,\r\n                },\r\n              },\r\n            },\r\n          }}\r\n        >\r\n          Book\r\n        </CommitButton>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst proposedCalendar = () => {\r\n  const proposedMeets = Social.get(`${sourceAccountId}/calendme/**`) || {};\r\n\r\n  const proposedMeetsBlocks = Object.keys(proposedMeets).map((accountId) => {\r\n    return Object.keys(proposedMeets[accountId]).map((timeStamp) => (\r\n      <tr>\r\n        <td>\r\n          <Widget\r\n            src=\"mob.near/widget/N.ProfileLine\"\r\n            props={{\r\n              accountId: accountId,\r\n              link: false,\r\n              hideAccountId: true,\r\n              hideImage: false,\r\n            }}\r\n          />\r\n        </td>\r\n        <td>{proposedMeets?.[accountId]?.[timeStamp]?.msg ?? null}</td>\r\n\r\n        <td>{new Date(parseInt(timeStamp)).toUTCString()}</td>\r\n        <td>\r\n          {addToGoogleCalendar(\r\n            new Date(parseInt(timeStamp)),\r\n            proposedMeets?.[accountId]?.[timeStamp]?.msg,\r\n            `Meet with ${accountId}`\r\n          )}\r\n        </td>\r\n      </tr>\r\n    ));\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <table className=\"table table-stripped\">\r\n        <thead>\r\n          <tr>\r\n            <th>To Account</th>\r\n            <th>Message</th>\r\n            <th>Date</th>\r\n            <th>Add To Google Calendar</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>{proposedMeetsBlocks}</tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst receivedCalendar = () => {\r\n  const accountsHaveCal =\r\n    Social.keys(`*/calendme/${sourceAccountId}`, \"final\", {}) || {};\r\n\r\n  const allProposedMeets = [];\r\n\r\n  Object.keys(accountsHaveCal).map((accountId) => {\r\n    allProposedMeets.push({\r\n      [accountId]: Social.get(`${accountId}/calendme/${sourceAccountId}/**`),\r\n    });\r\n  });\r\n\r\n  const proposedMeetsBlocks = allProposedMeets.map((proposedMeets) => {\r\n    return Object.keys(proposedMeets).map((accountId) => {\r\n      return Object.keys(proposedMeets[accountId]).map((timeStamp) => (\r\n        <tr>\r\n          <td>\r\n            <Widget\r\n              src=\"mob.near/widget/N.ProfileLine\"\r\n              props={{\r\n                accountId: accountId,\r\n                link: false,\r\n                hideAccountId: true,\r\n                hideImage: false,\r\n              }}\r\n            />\r\n          </td>\r\n          <td>{proposedMeets?.[accountId]?.[timeStamp]?.msg ?? null}</td>\r\n          <td>{new Date(parseInt(timeStamp)).toUTCString()}</td>\r\n          <td>\r\n            {addToGoogleCalendar(\r\n              new Date(parseInt(timeStamp)),\r\n              proposedMeets?.[accountId]?.[timeStamp]?.msg,\r\n              `Meet with ${accountId}`\r\n            )}\r\n          </td>\r\n        </tr>\r\n      ));\r\n    });\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <table className=\"table table-stripped\">\r\n        <thead>\r\n          <tr>\r\n            <th>From Account</th>\r\n            <th>Message</th>\r\n            <th>Date</th>\r\n            <th>Add To Google Calendar</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>{proposedMeetsBlocks}</tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nreturn (\r\n  <>\r\n    <h1>Hey {sourceAccountId}, welcome to CalendMe!</h1>\r\n    <hr />\r\n    {isOwner ? (\r\n      <>\r\n        <h2>Your Settings</h2>\r\n        <hr />\r\n        {settings()}\r\n        <hr />\r\n\r\n        <h2>Your Meets</h2>\r\n        <hr />\r\n        {proposedCalendar()}\r\n        <hr />\r\n        {receivedCalendar()}\r\n      </>\r\n    ) : (\r\n      <>\r\n        <h2>Book a meet with {targetAccountId}</h2>\r\n        <hr />\r\n        {bookAMeet()}\r\n      </>\r\n    )}\r\n  </>\r\n);\r\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/irfi.near/widget/CalendMe", "fact_widget_deployments_id": "9647838bd7c44445e40c6a2bb95bb02e", "inserted_timestamp": "2023-10-09T04:30:51.204Z", "modified_timestamp": "2023-10-09T04:30:51.204Z", "__row_index": 2}