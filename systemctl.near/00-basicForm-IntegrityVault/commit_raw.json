{"tx_hash": "D3XQpCwJC7BguUBuFXddgkwMRy8YNDWk3yhE3YkTxmK", "action_id_social": "B2hmhhk3h4Uo4YboebrbGADzXfPJabvhkmtb3dxqMftL-0-widget", "block_id": 105882995, "block_timestamp": "2023-11-17T06:17:02.788Z", "signer_id": "systemctl.near", "widget_name": "00-basicForm-IntegrityVault", "source_code": "const accountId = context.accountId; // Set account ID from context\r\nconst fileAccept = props.fileAccept || \"*\"; // Wich file extensions are accepted\r\nconst fileIcon = props.fileIcon || \"bi-file\"; // File icon class\r\nconst buttonText = props.buttonText || \"Upload a file\"; // File button upload text\r\n\r\n// Exit if user is not signed (A NEAR Wallet is needed)\r\nif (!accountId) {\r\n  return \"Please sign in with NEAR wallet to add a new blog entry\";\r\n}\r\n\r\n// Init State\r\ninitState({\r\n  title: \"\",\r\n  context: \"\",\r\n  uploading: false,\r\n  cid: null,\r\n  filename: null,\r\n  fileURL: null,\r\n  observationError: null,\r\n  titleError: null,\r\n});\r\n\r\n// Constants to save in Entry\r\nconst timestamp = Date.now();\r\nconst applicationId = \"IntegrityVault-333\";\r\nconst ipfsUrl = (cid) => `https://ipfs.near.social/ipfs/${cid}`;\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  padding: 2rem 3rem;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  gap: 2rem;\r\n  border-radius: 0.5rem;\r\n  border: 1px solid var(--ui-elements-light, #eceef0);\r\n  background: rgb(128,125,176);\r\n  background: linear-gradient(180deg, rgba(128,125,176,1) 0%, rgba(255,255,255,1) 58%);\r\n`;\r\n\r\nconst TitlePage = styled.h3`\r\n  text-transform: uppercase;\r\n  font-size: 3.75rem;\r\n  font-weight: 700;\r\n  margin: 20px 0 20px 0;\r\n`;\r\n\r\nconst CommitButton = styled.a`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 0.5em 1.5em;\r\n  gap: 0.5em;\r\n  background: #898fc8;\r\n  border-radius: 150px;\r\n  border: none;\r\n  color: #ffffff; \r\n\r\n  &:hover,\r\n  &:focus,\r\n  &:active {\r\n    background: #6b75a6; \r\n    text-decoration: none;\r\n    color: #ffffff;\r\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n  }\r\n`;\r\n\r\n// Corruption proof\r\nconst entry = {\r\n  id: timestamp,\r\n  applicationName: applicationId,\r\n  data: {\r\n    title: state.title,\r\n    context: state.context,\r\n    cid: state.cid,\r\n    fileURL: state.fileURL,\r\n  },\r\n};\r\n\r\n// Form\r\nreturn (\r\n  <Container>\r\n    <div className=\"row\">\r\n      <div className=\"mb-2\">\r\n        <TitlePage>Fight corruption</TitlePage>\r\n      </div>\r\n      <Widget\r\n        src={\"contribut3.near/widget/Inputs.Text\"}\r\n        props={{\r\n          label: \"Evidence Title\",\r\n          placeholder: \"Give a name for your evidence\",\r\n          value: state.title,\r\n          onChange: (title) => State.update({ title }),\r\n          validate: () => {\r\n            if (state.title.length > 50) {\r\n              State.update({\r\n                titleError: \"The URL must be less than 50 characters\",\r\n              });\r\n              return;\r\n            }\r\n\r\n            State.update({ titleError: \"\" });\r\n          },\r\n        }}\r\n      />\r\n      <Widget\r\n        src={\"contribut3.near/widget/Inputs.TextArea\"}\r\n        props={{\r\n          label: \"Evidence observations\",\r\n          placeholder: \"Give a short description of your evidence\",\r\n          value: state.context,\r\n          onChange: (context) => State.update({ context }),\r\n          validate: () => {\r\n            if (state.context.length > 500) {\r\n              State.update({\r\n                observationError:\r\n                  \"Observations must be less than 500 characters\",\r\n              });\r\n              return;\r\n            }\r\n\r\n            State.update({ descriptionError: \"\" });\r\n          },\r\n          error: state.observationError,\r\n        }}\r\n      />\r\n      <div>\r\n        {state.cid ? (\r\n          <a href={ipfsUrl(state.cid)} download>\r\n            {state.filename}\r\n          </a>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <Files\r\n          multiple={false}\r\n          accepts={[\"image/*\", \"video/*\", \".pdf\"]}\r\n          minFileSize={1}\r\n          clickable\r\n          className=\"btn btn-outline-primary\"\r\n          onChange={(files) => {\r\n            if (!files || !files.length) return;\r\n\r\n            const [body] = files;\r\n\r\n            State.update({ uploading: true, cid: null });\r\n            asyncFetch(\"https://ipfs.near.social/add\", {\r\n              method: \"POST\",\r\n              headers: { Accept: \"application/json\" },\r\n              body,\r\n            }).then(({ body: { cid } }) => {\r\n              State.update({\r\n                cid,\r\n                filename: body.name,\r\n                uploading: false,\r\n                fileURL: ipfsUrl(cid),\r\n              });\r\n            });\r\n          }}\r\n        >\r\n          {state.uploading ? \"Uploading\" : state.cid ? \"Replace\" : buttonText}\r\n        </Files>\r\n      </div>\r\n      &nbsp;\r\n      <CommitButton data={{ postEvidenceData: entry }} class=\"styled.a\">\r\n        Post evidence\r\n      </CommitButton>\r\n    </div>\r\n  </Container>\r\n);\r\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/systemctl.near/widget/00-basicForm-IntegrityVault", "fact_widget_deployments_id": "d25606b743f1be48c7bfa2e1c1f75d28", "inserted_timestamp": "2023-11-17T08:26:47.603Z", "modified_timestamp": "2023-11-17T08:26:47.603Z", "__row_index": 4}