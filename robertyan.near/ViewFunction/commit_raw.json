{"tx_hash": "AGKjCvpUAabAEBDzC5GGxBTwD23u2M2GWDyb6NSw3Cgu", "action_id_social": "taxWrkaMtg76fhjid3tazcNykBn75HhTYxTVTUeYrs2-0-widget", "block_id": 109551797, "block_timestamp": "2024-01-04T07:05:47.479Z", "signer_id": "robertyan.near", "widget_name": "ViewFunction", "source_code": "State.init({\n  contractId: \"\",\n  methodName: \"\",\n  args: \"{}\",\n  blockId: \"finality\",\n  output: \"\",\n  error: \"\",\n  message: \"\",\n});\n\nfunction queryViewFunction() {\n  State.update({\n    message: \"Querying...\",\n  });\n  try {\n    const { contractId, methodName, args, blockId } = state;\n    if (contractId && methodName) {\n      console.log(\"view function\", contractId, methodName, args, blockId);\n      const output = Near.view(\n        contractId,\n        methodName,\n        JSON.parse(args),\n        blockId\n      );\n      console.log(\"result\", output);\n      State.update({ output, error: \"\", message: \"\" });\n    }\n  } catch (e) {\n    State.update({ error, output: \"\", message: \"\" });\n  }\n}\n\nconst FUNCTION_CALL_CACHE = \"function_call_cache\";\n\nfunction saveFunctionCallCache() {\n  const { contractId, methodName, args, blockId } = state;\n  Storage.privateSet(FUNCTION_CALL_CACHE, {\n    contractId,\n    methodName,\n    args,\n    blockId,\n  });\n}\n\nfunction handleContractId(event) {\n  const contractId = event.target.value;\n  State.update({ contractId });\n  saveFunctionCallCache();\n}\n\nfunction handleMethod(event) {\n  const methodName = event.target.value;\n  State.update({ methodName });\n  saveFunctionCallCache();\n}\n\nfunction handleArgs(event) {\n  const args = event.target.value;\n  State.update({ args });\n  saveFunctionCallCache();\n}\n\nfunction handleBlockId(event) {\n  const blockId = event.target.value;\n  State.update({ blockId });\n  saveFunctionCallCache();\n}\n\nfunction init() {\n  if (!state.contractId) {\n    const cache = Storage.privateGet(FUNCTION_CALL_CACHE);\n    if (cache && cache.contractId) {\n      const { contractId, methodName, args, blockId } = cache;\n      State.update({ contractId, methodName, args, blockId });\n      queryViewFunction();\n    }\n  }\n}\n\ninit();\n\nconst { contractId, methodName, args, blockId, output, message, error } = state;\n\nreturn (\n  <div class=\"container\">\n    <h1>View Function</h1>\n    <div class=\"container\" style={{ width: \"100%\" }}>\n      <input\n        type=\"text\"\n        placeholder=\"Contract ID\"\n        onChange={handleContractId}\n        value={contractId}\n      />\n      <input\n        type=\"text\"\n        placeholder=\"Method\"\n        onChange={handleMethod}\n        value={methodName}\n      />\n      <textarea\n        class=\"form-control\"\n        rows=\"5\"\n        placeholder=\"Arguments in JSON Format\"\n        onChange={handleArgs}\n        value={args}\n      />\n      <input\n        type=\"text\"\n        placeholder=\"Block ID\"\n        onChange={handleBlockId}\n        value={blockId}\n      />\n      <button\n        type=\"button\"\n        class=\"btn btn-primary mt-2\"\n        onClick={queryViewFunction}\n        disabled={!contractId || !methodName}\n      >\n        Query\n      </button>\n    </div>\n    <div class=\"container\">\n      {output && (\n        <div class=\"mt-3\">\n          <p>Result:</p>\n          {JSON.stringify(output, null, 2)}\n        </div>\n      )}\n      {error && <p class=\"text-danger\">Error: {error}</p>}\n      {message && <p class=\"text-success\">{message}</p>}\n    </div>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/robertyan.near/widget/ViewFunction", "fact_widget_deployments_id": "04592e4003c197943e3ae179caea13f1", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 1}