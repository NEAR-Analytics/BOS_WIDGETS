{"tx_hash": "GgjpDXyeLszJJHEghtWNam2s5QNxTbotUF9teybVUmAu", "action_id_social": "63T6jvNJT4irPCABaJ8faQzkZhN23pRNYCAJQj7ZLFx9-0-widget", "block_id": 101646589, "block_timestamp": "2023-09-21T19:28:19.534Z", "signer_id": "mob.near", "widget_name": "MainPage.N.Post.Content", "source_code": "const content = props.content;\nconst raw = !!props.raw;\n\nconst [truncated, setTruncated] = useState(props.truncateContent ?? true);\n\nconst Wrapper = styled.div`\n  overflow: hidden;\n  .truncated-content {\n    max-height: 23em;\n    position: relative;\n\n    .expand-post {\n      position : absolute;\n      z-index  : 1;\n      top   : 20em;\n      left     : 0;\n      background-image : linear-gradient(to bottom, \n                        rgba(255,255,255, 0), \n                        rgba(255,255,255, 1) 50%);\n      width    : 100%;\n      height   : 3em;\n      > div {\n        position: relative;\n        width: 100%;\n        height: 100%;\n        veritcal-align: bottom;\n        display: flex;\n        flex-direction: column;\n        justify-content: flex-end;\n        cursor: pointer;\n        > a {\n          margin-bottom: 0.2em;\n        }\n      }\n    }\n  }\n\n  .full-content {\n    .expand-post {\n      display: none;\n    }\n  }\n`;\n\nconst render = () =>\n  content ? (\n    <div className=\"overflow-hidden\" key=\"wrapper\">\n      {content.text &&\n        (raw ? (\n          <pre key=\"raw\" style={{ whiteSpace: \"pre-wrap\" }}>\n            {content.text}\n          </pre>\n        ) : (\n          <div key=\"text\" className=\"text-break\">\n            <Widget\n              key=\"content\"\n              loading={\n                <div\n                  className=\"w-100 placeholder-glow\"\n                  style={{ minHeight: \"100px\" }}\n                />\n              }\n              src=\"mob.near/widget/N.SocialMarkdown\"\n              props={{\n                text: content.text,\n                onHashtag: (hashtag) => (\n                  <span\n                    key={hashtag}\n                    className=\"d-inline-flex\"\n                    style={{ color: \"var(--bs-link-color)\" }}\n                  >\n                    <a href={`/?hashtag=${hashtag}`}>#{hashtag}</a>\n                  </span>\n                ),\n              }}\n            />\n          </div>\n        ))}\n      {content.image &&\n        (raw ? (\n          <div key=\"img-raw\">\n            <pre>{JSON.stringify(content.image, undefined, 2)}</pre>\n          </div>\n        ) : (\n          <div key=\"c-img\" className=\"w-100 rounded-3 text-center mt-2\">\n            <Widget\n              key=\"img-widget\"\n              loading={<div className=\"img-fluid rounded-3 placeholder-glow\" />}\n              src=\"mob.near/widget/Image\"\n              props={{\n                image: content.image,\n                className: \"img-fluid rounded-3\",\n                style: { maxHeight: \"40em\" },\n              }}\n            />\n          </div>\n        ))}\n    </div>\n  ) : (\n    <div\n      key=\"img\"\n      className=\"w-100 overflow-hidden\"\n      style={{ minHeight: \"100px\" }}\n    />\n  );\n\nconst [inner, setInner] = useState(() => render());\n\nuseEffect(() => {\n  setInner(render());\n}, [content, raw, props.truncateContent]);\n\nreturn (\n  <Wrapper>\n    <div className={truncated ? \"truncated-content\" : \"full-content\"}>\n      {inner}\n      <div className=\"expand-post\">\n        <div>\n          <a className=\"stretched-link\" onClick={() => setTruncated(false)}>\n            Read more...\n          </a>\n        </div>\n      </div>\n    </div>\n  </Wrapper>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/mob.near/widget/MainPage.N.Post.Content", "fact_widget_deployments_id": "efcdbba0209620a2eb6c8558be67d23c", "inserted_timestamp": "2023-09-21T21:28:54.826Z", "modified_timestamp": "2023-09-21T21:28:54.826Z", "__row_index": 19}