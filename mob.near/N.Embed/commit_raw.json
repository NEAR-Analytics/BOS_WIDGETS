{"tx_hash": "BQ87p2mbWQ2t7W833u1roo1U6nZF1aC6TdwB25i57TD4", "action_id_social": "FNgNRX6r4M9uxeyF8hTedQsunEQ9iMTCNMfkZHCRvtpc-0-widget", "block_id": 103539300, "block_timestamp": "2023-10-16T22:27:02.519Z", "signer_id": "mob.near", "widget_name": "N.Embed", "source_code": "// This widget is used for embedding whitelisted set of widgets into a post body.\n\nconst EmbedMap = new Map([\n  [\n    \"mob.near/widget/MainPage.N.Post.Page\",\n    \"mob.near/widget/MainPage.N.Post.Embed\",\n  ],\n  [\n    \"mob.near/widget/MainPage.N.Post.Embed\",\n    \"mob.near/widget/MainPage.N.Post.Embed\",\n  ],\n]);\n\nconst href = props.href;\n\nconst parseUrl = (url) => {\n  if (typeof url !== \"string\") {\n    return null;\n  }\n  if (url.startsWith(\"/\")) {\n    url = `https://near.social${url}`;\n  }\n  try {\n    return new URL(url);\n  } catch {\n    return null;\n  }\n};\n\nconst parsed = useMemo(() => {\n  const url = parseUrl(href);\n  if (!url) {\n    return null;\n  }\n  return {\n    widgetSrc: url.pathname.substring(1),\n    props: Object.fromEntries([...url.searchParams.entries()]),\n  };\n}, [href]);\n\nif (!parsed || !EmbedMap.has(parsed.widgetSrc)) {\n  return <a href={href}>{props.children}</a>;\n}\n\nconst widgetSrc = EmbedMap.get(parsed.widgetSrc);\n\nconst Wrapper = styled.div`\n  border-radius: 0.5em;\n  width: 100%;\n  overflow: hidden;\n  border: 1px solid #eee;\n  white-space: normal;\n  margin-top: 12px;\n`;\n\nreturn (\n  <Wrapper>\n    <Widget loading=\"\" src={widgetSrc} props={parsed.props} />\n  </Wrapper>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/mob.near/widget/N.Embed", "fact_widget_deployments_id": "8ca4fe6d4ac4d72621cf4920e6ef6704", "inserted_timestamp": "2023-10-17T00:30:19.780Z", "modified_timestamp": "2023-10-17T00:30:19.780Z", "__row_index": 2}