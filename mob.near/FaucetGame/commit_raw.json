{"tx_hash": "4GP4XFjci1dQgssn7PRZZvarP5mzwD9o7ZtpcLzF6Fb7", "action_id_social": "2paRreNfN3FySah6Nmf6dU9buTf3vZxqDqwWVtA3U3SP-0-widget", "block_id": 126943312, "block_timestamp": "2024-08-31T04:16:17.374Z", "signer_id": "mob.near", "widget_name": "FaucetGame", "source_code": "const rootContractId = \"alpha.moretps.near\";\nconst contracts = [\"0\", \"b\", \"h\", \"m\", \"z\"].map(\n  (s) => `${s}.${rootContractId}`\n);\nlet yourContractId = contracts[0];\nconst [currentTime, setCurrentTime] = useState(new Date().getTime());\nconst [claimTimes, setClaimTimes] = useState(0);\n\nuseEffect(() => {\n  const interval = setInterval(() => {\n    setCurrentTime(new Date().getTime());\n  }, 1000);\n  return () => {\n    clearInterval(interval);\n  };\n}, []);\n\nif (context.accountId) {\n  const yourGroupId = Near.view(yourContractId, \"get_account_group\", {\n    account_id: context.accountId,\n  });\n  if (yourGroupId === null) {\n    return \"\";\n  }\n  yourContractId = contracts[yourGroupId];\n}\n\nconst claimAmount =\n  Big(Near.view(yourContractId, \"get_transfer_amount\") || \"0\")\n    .div(Big(10).pow(24))\n    .toFixed(2) + \" NEAR\";\n\nconst startBlockTimeMs = Near.view(yourContractId, \"get_start_time_ms\") || 0;\nconst timeRemaining = startBlockTimeMs - currentTime;\n\nconst canClaim = context.accountId\n  ? Near.view(yourContractId, \"can_claim\", {\n      account_id: context.accountId,\n      _nonce: claimTimes,\n    })\n  : false;\n\nconst hasClaimed = context.accountId\n  ? Near.view(yourContractId, \"has_claimed\", {\n      account_id: context.accountId,\n      _nonce: timeRemaining <= 0,\n    })\n  : false;\n\nconst claim = () => {\n  Near.call(yourContractId, \"claim\", {});\n  setTimeout(() => {\n    setClaimTimes((t) => t + 1);\n  }, 5000);\n};\n\nconst remainingTimeToString = (timeRemaining) => {\n  let x = (timeRemaining / 1000) | 0;\n  const sec = x % 60;\n  x -= sec;\n  x /= 60;\n  const min = x % 60;\n  x -= min;\n  x /= 60;\n  const hours = x % 24;\n  x -= hours;\n  x /= 24;\n  return `${x}d ${hours}h ${min}m ${sec}s`;\n};\n\nconst numClaims = Near.view(yourContractId, \"get_num_claims\") || 0;\n\nreturn (\n  <div>\n    <div>Contract ID: {yourContractId}</div>\n    <div>Start time: {new Date(startBlockTimeMs).toLocaleString()}</div>\n    <div>Current time: {new Date(currentTime).toLocaleString()}</div>\n    <div>Claim amount: {claimAmount}</div>\n    <div>\n      Claims Progress: {numClaims} /\n      {(Near.view(yourContractId, \"get_number_of_possible_claims\") || 0) +\n        numClaims}\n    </div>\n    <div>\n      <b>\n        {timeRemaining <= 0 ? (\n          \"CLAIM STARTED\"\n        ) : (\n          <span>Claim starts in: {remainingTimeToString(timeRemaining)}</span>\n        )}\n      </b>\n    </div>\n    <hr />\n    <div>\n      {hasClaimed ? (\n        <b className=\"text-success\">ALREADY CLAIMED</b>\n      ) : (\n        <span>\n          Can claim: {canClaim ? <b>YES</b> : <b className=\"text-danger\">NO</b>}\n        </span>\n      )}\n    </div>\n    <div className=\"mt-2\">\n      {context.accountId ? (\n        <button\n          className={`btn btn-lg ${\n            canClaim ? \"btn-success\" : \"btn-outline-warning\"\n          }`}\n          onClick={claim}\n        >\n          {canClaim ? `CLAIM ${claimAmount}` : \"Try claiming anyway\"}\n        </button>\n      ) : (\n        \"Sign in to claim!\"\n      )}\n    </div>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/mob.near/widget/FaucetGame", "fact_widget_deployments_id": "2769fbad40636a6b0b645f9ba0b7f6ef", "inserted_timestamp": "2024-08-31T05:56:22.882Z", "modified_timestamp": "2024-08-31T05:56:22.882Z", "__row_index": 2}