{"tx_hash": "Aw2N4Mz7597aWDrfjo3SQQNUitAimZUudCZR6jiPnSho", "action_id_social": "GHEF95zf3WvPej77upmFY99wr6ZtEt2wkzyxhR3E2nBJ-0-widget", "block_id": 104722539, "block_timestamp": "2023-11-01T23:36:21.937Z", "signer_id": "mob.near", "widget_name": "N.Library", "source_code": "const accountId = context.accountId || \"root.near\";\nconst authorId = \"mob.near\";\n\nconst components = [\n  {\n    title: \"Profile Block\",\n    category: \"Profile\",\n    widgetName: \"Profile.InlineBlock\",\n    description:\n      \"Profile block for a given account ID with a picture, name, premium checkmark, account ID, a list of tags and the description\",\n    demoProps: { accountId },\n    requiredProps: {\n      accountId: \"The account ID of the profile\",\n    },\n    optionalProps: {\n      profile: \"Object that holds profile information to display\",\n      fast: \"Render profile picture faster using external cache, default true if the `props.profile` is not provided\",\n      hideDescription: \"Don't show description, default false\",\n    },\n  },\n  {\n    title: \"Profile Short Block\",\n    category: \"Profile\",\n    widgetName: \"Profile.ShortInlineBlock\",\n    description:\n      \"Short profile block for a given account ID with a picture, name, premium checkmark, account ID\",\n    demoProps: { accountId, tooltip: true },\n    requiredProps: {\n      accountId: \"The account ID of the profile\",\n    },\n    optionalProps: {\n      profile: \"Object that holds profile information to display\",\n      fast: \"Render profile picture faster using external cache, default true if the `props.profile` is not provided\",\n      tooltip:\n        \"Display overlay tooltip when you hover over the profile, default false\",\n    },\n  },\n  {\n    title: \"Profile Line\",\n    category: \"Profile\",\n    widgetName: \"N.ProfileLine\",\n    description:\n      \"Profile line for a given account ID with a picture, name, premium checkmark, account ID. It's highly customizable and is useful to embed into a text or a single line\",\n    demoProps: { accountId, tooltip: true },\n    requiredProps: {\n      accountId: \"The account ID of the profile\",\n    },\n    optionalProps: {\n      link: \"Whether to make profile clickable with a link to the profile page, default true.\",\n      hideAccountId: \"Don't show account ID, default false\",\n      hideName: \"Don't show profile name, default false\",\n      hideImage: \"Don't show profile picture, default false\",\n      hideCheckmark: \"Don't show premium checkmark, default false\",\n      profile: \"Object that holds profile information to display\",\n      fast: \"Render profile picture faster using external cache, default true if the `props.profile` is not provided\",\n      title:\n        \"Optional title when you hover over the profile. Default `name accountId`\",\n      tooltip:\n        \"Display overlay tooltip or title when you hover over the profile, default false. Will display a custom title if tooltip is given. If tooltip is true, the full tooltip is displayed. Default false\",\n    },\n  },\n  {\n    title: \"Profile Picture\",\n    category: \"Profile\",\n    widgetName: \"ProfileImage\",\n    description:\n      \"Profile picture for a given account ID. It's highly customizable with style and classes.\",\n    demoProps: { accountId, fast: true },\n    requiredProps: {\n      accountId: \"The account ID of the profile\",\n    },\n    optionalProps: {\n      className:\n        'HTML class name for the image wrapper, default `\"profile-image d-inline-block\"`',\n      style:\n        'React DOM styles for the image wrapper, default `{ width: \"3em\", height: \"3em\" }`',\n      imageStyle:\n        'React DOM styles for the image, default `{ objectFit: \"cover\" }`',\n      imageClassName:\n        'HTML class name for the image, default `\"rounded-circle w-100 h-100\"`',\n      thumbnail:\n        'Thumbnail type, can be `\"large\"`, `\"thumbnail\"` or `null`, default is `\"thumbnail\"`',\n      profile: \"Object that holds profile information to display\",\n      fast: \"Render profile picture faster using external cache, default true if the `props.profile` is not provided\",\n      title:\n        \"Optional title when you hover over the profile. Default `name accountId`\",\n      tooltip:\n        \"Display overlay tooltip or title when you hover over the profile, default false. Will display a custom title if tooltip is given. If tooltip is true, the full tooltip is displayed. Default false\",\n    },\n  },\n];\n\nconst renderProps = (props, optional) => {\n  return Object.entries(props || {}).map(([key, desc]) => {\n    return (\n      <tr key={key}>\n        <td>\n          <span className={`code prop-key${optional ? \" optional\" : \"\"}`}>\n            {key}\n          </span>\n        </td>\n        <td className=\"prop-desc\">{desc}</td>\n      </tr>\n    );\n  });\n};\n\nconst renderComponent = (c, i) => {\n  const widgetSrc = `${authorId}/widget/${c.widgetName}`;\n  const embedCode = `<Widget\\n  src=\"${widgetSrc}\"\\n  props={{${JSON.stringify(\n    c.demoProps,\n    undefined,\n    4\n  ).slice(1, -1)}  }}\\n/>\\n`;\n  const id = c.title.toLowerCase().replace(\" \", \"-\");\n  return (\n    <div className=\"component\" key={i}>\n      <a href={`#${id}`} id={id}>\n        <h3>{c.title}</h3>\n      </a>\n      <p>{c.description}</p>\n      <label>Preview</label>\n      <div className=\"preview mb-3\" style={c.previewStyle}>\n        <Widget src={widgetSrc} props={c.demoProps} />\n      </div>\n      <label>Component</label>\n      <div className=\"d-flex flex-row justify-content-between mb-3\">\n        <div className=\"path font-monospace\">\n          <Widget\n            src=\"mob.near/widget/CopyButton\"\n            props={{\n              text: widgetSrc,\n              label: widgetSrc,\n            }}\n          />\n        </div>\n        <div className=\"source\">\n          <a\n            href={`/mob.near/widget/WidgetSource?src=${widgetSrc}`}\n            target=\"_blank\"\n            className=\"btn btn-outline-primary border-0\"\n          >\n            Source\n          </a>\n        </div>\n      </div>\n      <label>Props</label>\n      <table className=\"props table table-bordered mb-3\">\n        <thead>\n          <tr>\n            <th>Key</th>\n            <th>Description</th>\n          </tr>\n        </thead>\n        <tbody>\n          {renderProps(c.requiredProps)}\n          {renderProps(c.optionalProps, true)}\n        </tbody>\n      </table>\n      <label>Example</label>\n      <div className=\"embed-code\">\n        <Markdown text={`\\`\\`\\`jsx\\n${embedCode}\\n\\`\\`\\``} />\n        <div className=\"embed-copy\">\n          <Widget\n            src=\"mob.near/widget/CopyButton\"\n            props={{ text: embedCode, className: \"btn btn-outline-light\" }}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst Wrapper = styled.div`\n  .component {\n    padding: 0.5em 0;\n    padding-bottom: 0;\n    margin-bottom: 3em;\n\n    &:hover {\n      background: rgba(0, 0, 0, 0.03); \n    }\n\n    table {\n      background: white;\n    }\n    \n    label {\n      font-size: 20px;\n    }\n\n    .code {\n      display: inline-flex;\n      line-height: normal;\n      border-radius: 0.3em;\n      padding: 0 4px;\n      border: 1px solid #ddd;\n      background: rgba(0, 0, 0, 0.03);\n      font-family: var(--bs-font-monospace);\n    }\n    .path {\n\n    }\n    .preview {\n      background-color: white;\n      padding: 12px;\n      border: 1px solid #eee;\n      border-radius: 12px;\n      pre {\n        margin-bottom: 0;\n      }\n    }\n    .props {\n      .prop-key {\n        font-weight: 600;\n        &.optional {\n          font-weight: normal;\n        }\n      }\n    }\n    .embed-code {\n      position: relative;\n\n      .embed-copy {\n        position: absolute;\n        top: 18px;\n        right: 10px;\n      }\n    }\n  }\n`;\n\nreturn (\n  <Wrapper>\n    <h3>Social Components Library</h3>\n    <div className=\"mb-3\">\n      This library contains common social components used by near.social\n    </div>\n    <div>{components.map(renderComponent)}</div>\n  </Wrapper>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/mob.near/widget/N.Library", "fact_widget_deployments_id": "315716da35061197994b44a1d685a6ff", "inserted_timestamp": "2023-11-02T01:40:44.512Z", "modified_timestamp": "2023-11-02T01:40:44.512Z", "__row_index": 0}