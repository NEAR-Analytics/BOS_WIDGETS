{"tx_hash": "8bGSuegm2PwCjgAdvxmWEJviPeVBBQdyquheBRjRtLW3", "action_id_social": "D9hxthaHQHKsxVZonXe6KpLLWq7Pr6xA5PqnnDm9Y9BW-0-widget", "block_id": 113252738, "block_timestamp": "2024-02-21T00:23:23.286Z", "signer_id": "mob.near", "widget_name": "Actions", "source_code": "const [accountId, setAccountId] = useState(\n  props.accountId || context.accountId || \"root.near\"\n);\nconst [actions, setActions] = useState(false);\n\nconst Limit = 50;\n\nconst actionsFilter = [\n  \"account_id\",\n  \"args_account_id\",\n  \"args_new_account_id\",\n  \"args_nft_contract_id\",\n  \"args_owner_id\",\n  \"args_receiver_id\",\n  \"args_sender_id\",\n  \"predecessor_id\",\n  \"signer_id\",\n].map((key) => ({\n  [key]: accountId,\n  status: \"SUCCESS\",\n}));\n\nconst toCamel = (s) => {\n  return s.replace(/([-_][a-z])/gi, ($1) => {\n    return $1.toUpperCase().replace(\"-\", \"\").replace(\"_\", \"\");\n  });\n};\n\nfunction processAction(action) {\n  Object.fromEntries(Object.entries(action).map(([k, v]) => [toCamel(k), v]));\n  action.time = new Date(action.blockTimestamp * 1000);\n  return action;\n}\n\nconst processActions = (newActions) => {\n  newActions = newActions.flatMap(processAction);\n  newActions.reverse();\n\n  setActions((prevActions) =>\n    [\n      ...newActions.filter(\n        (event) =>\n          !prevActions ||\n          prevActions.length === 0 ||\n          event.time.getTime() > prevActions[0].time.getTime()\n      ),\n      ...(prevActions || []),\n    ].slice(0, Limit)\n  );\n};\n\nfunction connect() {\n  const ws = new WebSocket(\"wss://actions.near.stream/ws\");\n\n  ws.onopen = () => {\n    console.log(`Connection to WS has been established`);\n    ws.send(\n      JSON.stringify({\n        secret: `near-social-actions-${new Date().getTime()}}`,\n        filter: actionsFilter,\n        fetch_past_actions: Limit,\n      })\n    );\n  };\n  ws.onclose = () => {\n    console.log(`WS Connection has been closed`);\n    connect();\n  };\n  ws.onmessage = (e) => {\n    const data = JSON.parse(e.data);\n    processActions(data.actions);\n  };\n  ws.onerror = (err) => {\n    console.log(\"WebSocket error\", err);\n  };\n\n  return ws;\n}\n\nuseEffect(() => {\n  const ws = connect();\n\n  return () => {\n    // shutdown\n    ws.close();\n  };\n}, [accountId]);\n\nconst Wrapper = styled.div`\n`;\n\nreturn (\n  <Wrapper>\n    <div className=\"header\">\n      Actions of\n      <Widget src=\"mob.near/widget/N.ProfileLine\" props={{ accountId }} />\n    </div>\n    <div>{JSON.stringify(actions)}</div>\n  </Wrapper>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/mob.near/widget/Actions", "fact_widget_deployments_id": "6e42497aff5e284b9a661181400a103d", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}