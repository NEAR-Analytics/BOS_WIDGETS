{"tx_hash": "A3fR7JMKdmypY53RjpxjXPQV52Ap5iaQuHNByWLqMAmQ", "action_id_social": "63gRv6N8hW5YptNh299HuruPA3gpgtm8CmfaPehmBzwu-0-widget", "block_id": 81032283, "block_timestamp": "2022-12-19T21:59:08.530Z", "signer_id": "mob.near", "widget_name": "IndexFeed", "source_code": "const index = props.index;\nif (!index) {\n  return \"props.index is not defined\";\n}\n\nconst renderItem = props.renderItem ?? ((i) => JSON.stringify(i));\nindex.options = index.options || {};\nindex.options.limit = Math.min(index.options.limit, 100);\n\nconst initialItems = Social.index(index.action, index.key, index.options);\nif (initialItems === null) {\n  return \"\";\n}\n\nconst computeFetchFrom = (items) => {\n  if (!items || items.length === 0) {\n    return false;\n  }\n  const blockHeight = items[items.length - 1].blockHeight;\n  return index.options.order === \"desc\" ? blockHeight - 1 : blockHeight + 1;\n};\n\nconst jInitialItems = JSON.stringify(initialItems);\nif (state.jInitialItems !== jInitialItems) {\n  const jIndex = JSON.stringify(index);\n  if (jIndex !== state.jIndex) {\n    State.update({\n      jIndex,\n      jInitialItems,\n      initialItems,\n      items: [],\n      fetchFrom: false,\n      nextFetchFrom: computeFetchFrom(initialItems),\n    });\n  } else {\n    State.update({\n      initialItems,\n      jInitialItems,\n    });\n  }\n}\n\nif (state.fetchFrom) {\n  const newItems = Social.index(\n    index.action,\n    index.key,\n    Object.assign({}, index.options, { from: state.fetchFrom })\n  );\n  if (newItems !== null) {\n    state.items.push(...newItems);\n    State.update({\n      fetchFrom: false,\n      nextFetchFrom: computeFetchFrom(newItems),\n    });\n  }\n}\n\nconst makeMoreItems = () => {\n  if (state.nextFetchFrom && state.nextFetchFrom !== state.fetchFrom) {\n    State.update({\n      fetchFrom: state.nextFetchFrom,\n    });\n  }\n};\n\nreturn (\n  <InfiniteScroll\n    pageStart={0}\n    loadMore={makeMoreItems}\n    hasMore={!!state.nextFetchFrom}\n    loader={<div className=\"loader\">Loading ...</div>}\n  >\n    {state.initialItems &&\n      [...state.initialItems, ...state.items].map(renderItem)}\n  </InfiniteScroll>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/mob.near/widget/IndexFeed", "fact_widget_deployments_id": "7aabef7225a3c280f493de8bc907b2be", "inserted_timestamp": "2000-01-01T00:00:00.000Z", "modified_timestamp": "2000-01-01T00:00:00.000Z", "__row_index": 71}