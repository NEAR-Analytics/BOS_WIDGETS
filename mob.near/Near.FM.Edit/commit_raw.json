{"tx_hash": "9xnde8rjjXmxfRsKUivyf8TCYgjLg51oqZPeztLv8qWW", "action_id_social": "8qiRkC5UQ6Q8nc49KcvDE3R5zg1ErrJuoMToPr3gJo3N-0-widget", "block_id": 104549945, "block_timestamp": "2023-10-30T16:43:02.106Z", "signer_id": "mob.near", "widget_name": "Near.FM.Edit", "source_code": "const [suffix, setSuffix] = useState(\"\");\nconst [longURL, setLongURL] = useState(\"\");\nconst [loading, setLoading] = useState(false);\nconst [metadata, setMetadata] = useState(false);\n\nconst accountId = context.accountId;\nconst premiumTime = Social.get(\n  `premium.social.near/badge/premium/accounts/${accountId}`,\n  \"final\"\n);\nconst data = Social.get(`${accountId}/custom/fm/${path}`, undefined, true);\n\nconst Status = {\n  Loading: 0,\n  Ready: 1,\n  NoAccountId: 2,\n  NotPremium: 3,\n};\n\nconst parseJson = (json) => {\n  try {\n    return JSON.parse(json);\n  } catch {\n    return null;\n  }\n};\n\nconst status = useMemo(() => {\n  if (!accountId) {\n    return Status.NoAccountId;\n  }\n  if (premiumTime === null || (props.suffix && data === null)) {\n    return Status.Loading;\n  }\n  if (!premiumTime || parseInt(premiumTime) < Date.now()) {\n    return Status.NotPremium;\n  }\n  setSuffix(props.suffix);\n  const parsedData = parseJson(data);\n  if (props.url && parsedData?.url !== props.url) {\n    setLongURL(props.url);\n    return Status.Ready;\n  }\n  setLongURL(parsedData?.url || \"\");\n  setMetadata({\n    title: parsedData?.title || \"\",\n    description: parsedData?.description || \"\",\n    image: parsedData?.image || \"\",\n  });\n\n  return Status.Ready;\n}, [props.suffix, props.url, accountId, premiumTime, data]);\n\nfunction resetMetadata() {\n  setMetadata({\n    title: \"\",\n    description: \"\",\n    image: \"\",\n  });\n}\n\nuseEffect(() => {\n  if (longURL && status === Status.Ready) {\n    setLoading(true);\n    asyncFetch(`https://near.fm/api/og?url=${longURL}`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      responseType: \"json\",\n    })\n      .then(({ body }) => {\n        setMetadata({\n          title: body.title || \"\",\n          description: body.description || \"\",\n          image: body.image || \"\",\n        });\n      })\n      .catch((e) => {\n        console.error(\"Failed to load metadata for the URL\", e);\n        resetMetadata();\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }\n}, [longURL, status]);\n\nreturn status === Status.Loading ? (\n  <div>Loading</div>\n) : status === Status.NoAccountId ? (\n  <div>Please sign in to start using URL Shortener</div>\n) : status === Status.NotPremium ? (\n  <div>Premium subscription required</div>\n) : status === Status.Ready ? (\n  <div>\n    <div key=\"short-url\" className=\"mb-3\">\n      <label className=\"form-label\">Short URL</label>\n      <div className=\"input-group\">\n        <span className=\"input-group-text\">https://{accountId}.fm/</span>\n        <input\n          type=\"text\"\n          placeholder=\"welcome-to-near\"\n          className=\"form-control\"\n          value={suffix}\n          onChange={(e) => setSuffix(e.target.value)}\n        />\n      </div>\n    </div>\n\n    {suffix && (\n      <div key=\"long-url\" className=\"mb-3\">\n        <label className=\"form-label\">Long URL</label>\n        <input\n          type=\"url\"\n          className=\"form-control\"\n          value={longURL}\n          onChange={(e) => setLongURL(e.target.value)}\n        />\n      </div>\n    )}\n\n    {longURL && (\n      <div key=\"rest\">\n        <div className=\"mb-3\">\n          <label className=\"form-label\">Title</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            disabled={loading}\n            value={metadata.title}\n            onChange={(e) =>\n              setMetadata({ ...metadata, title: e.target.value })\n            }\n          />\n        </div>\n        <div className=\"mb-3\">\n          <label className=\"form-label\">Description</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            disabled={loading}\n            value={metadata.description}\n            onChange={(e) =>\n              setMetadata({ ...metadata, description: e.target.value })\n            }\n          />\n        </div>\n        <div className=\"mb-3\">\n          <label className=\"form-label\">Image URL</label>\n          <input\n            type=\"url\"\n            className=\"form-control\"\n            disabled={loading}\n            value={metadata.image}\n            onChange={(e) =>\n              setMetadata({ ...metadata, image: e.target.value })\n            }\n          />\n        </div>\n\n        <div className=\"mb-3\">\n          <h5>Twitter Card Preview</h5>\n          <div className=\"border p-3\">\n            <h6>{metadata.title}</h6>\n            <p>{metadata.description}</p>\n            {metadata.image && (\n              <img\n                src={metadata.image}\n                alt=\"Twitter Card Image\"\n                className=\"img-fluid\"\n                style={{ maxHeight: \"10em\" }}\n              />\n            )}\n          </div>\n        </div>\n\n        <CommitButton\n          className=\"btn btn-primary\"\n          data={{\n            custom: {\n              fm: {\n                [suffix]: JSON.stringify({\n                  ...metadata,\n                  url: longURL,\n                }),\n              },\n            },\n          }}\n        >\n          Save Changes\n        </CommitButton>\n      </div>\n    )}\n  </div>\n) : (\n  \"Unknown status\"\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/mob.near/widget/Near.FM.Edit", "fact_widget_deployments_id": "1a1305847b22774a9f4f25e36cfa8ebe", "inserted_timestamp": "2023-10-30T18:39:07.932Z", "modified_timestamp": "2023-10-30T18:39:07.932Z", "__row_index": 2}