{"tx_hash": "7Un2j8YtXnm5g5m1KtqhGjwg5xhkJ9rY9jNhWbhSCrnu", "action_id_social": "5EpMad4pBBBCkM7rDS2RcGeZPhYfPLuuZ5NHgbzsmJAi-0-widget", "block_id": 104556498, "block_timestamp": "2023-10-30T18:44:23.136Z", "signer_id": "mob.near", "widget_name": "Near.FM.Edit", "source_code": "const [suffix, setSuffix] = useState(\"\");\nconst [longURL, setLongURL] = useState(\"\");\nconst [loading, setLoading] = useState(false);\nconst [editMetadata, setEditMetadata] = useState(false);\nconst [metadata, setMetadata] = useState(false);\nconst [debounce, setDebounce] = useState(null);\nconst [previewUrl, setPreviewUrl] = useState(\"\");\n\nconst accountId = context.accountId;\nconst premiumTime = accountId\n  ? Social.get(\n      `premium.social.near/badge/premium/accounts/${accountId}`,\n      \"final\"\n    )\n  : undefined;\nconst data =\n  accountId && props.suffix\n    ? Social.get(`${accountId}/custom/fm/${props.suffix}`, \"final\")\n    : undefined;\n\nconst Status = {\n  Loading: 0,\n  NoAccountId: 1,\n  NotPremium: 2,\n  New: 3,\n  Existing: 4,\n  UnsupportedAccountId: 5,\n};\n\nconst parseJson = (json) => {\n  try {\n    return JSON.parse(json);\n  } catch {\n    return null;\n  }\n};\n\nconst [status, setStatus] = useState(Status.Loading);\n\nuseEffect(() => {\n  setStatus(() => {\n    if (!accountId) {\n      return Status.NoAccountId;\n    }\n    if (!accountId.endsWith(\".near\") || !accountId.split(\".\").length == 2) {\n      return Status.UnsupportedAccountId;\n    }\n    if (premiumTime === null || (props.suffix && data === null)) {\n      return Status.Loading;\n    }\n    if (!premiumTime || parseInt(premiumTime) < Date.now()) {\n      return Status.NotPremium;\n    }\n    setSuffix(props.suffix);\n    const parsedData = parseJson(data);\n    if (props.url && parsedData?.url !== props.url) {\n      setLongURL(props.url);\n      return Status.New;\n    }\n    setLongURL(parsedData?.url || \"\");\n    setMetadata({\n      title: parsedData?.title || \"\",\n      description: parsedData?.description || \"\",\n      image: parsedData?.image || \"\",\n    });\n\n    return Status.Existing;\n  });\n}, [props.suffix, props.url, accountId, premiumTime, data]);\n\nfunction resetMetadata() {\n  setMetadata({\n    title: \"\",\n    description: \"\",\n    image: \"\",\n  });\n}\n\nconst loadMetadata = (url) => {\n  setLoading(true);\n  asyncFetch(`https://near.fm/api/og?url=${url}`, {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    responseType: \"json\",\n  })\n    .then(({ body }) => {\n      setMetadata({\n        title: body.title || \"\",\n        description: body.description || \"\",\n        image: body.image || \"\",\n      });\n    })\n    .catch((e) => {\n      console.error(\"Failed to load metadata for the URL\", e);\n      resetMetadata();\n    })\n    .finally(() => {\n      setLoading(false);\n    });\n};\n\nuseEffect(() => {\n  if (longURL && status === Status.New) {\n    clearTimeout(debounce);\n    setLoading(true);\n    setDebounce(\n      setTimeout(() => {\n        loadMetadata(longURL);\n      }, 1000)\n    );\n  }\n}, [longURL, status]);\n\nreturn status === Status.Loading ? (\n  <div>Loading</div>\n) : status === Status.NoAccountId ? (\n  <div>Please sign in to start using URL Shortener</div>\n) : status === Status.UnsupportedAccountId ? (\n  <div>\n    Unfortunately, only top-level accounts ending with \".near\" are supported\n  </div>\n) : status === Status.NotPremium ? (\n  <div>\n    <Widget\n      key=\"expiring-premium\"\n      loading=\"\"\n      src=\"mob.near/widget/N.NotPremiumCompose\"\n      props={{\n        text: \"Premium subscription is required to use near.fm URL shortener!\",\n      }}\n    />\n  </div>\n) : status === Status.New || status === Status.Existing ? (\n  <div>\n    <div key=\"short-url\" className=\"mb-3\">\n      <label className=\"form-label\">Short URL</label>\n      <div className=\"input-group\">\n        <span className=\"input-group-text\">https://{accountId}.fm/</span>\n        <input\n          type=\"text\"\n          placeholder=\"welcome-to-near\"\n          className=\"form-control\"\n          value={suffix}\n          onChange={(e) => {\n            setSuffix(e.target.value);\n            setPreviewUrl(\"\");\n          }}\n          autoFocus\n        />\n      </div>\n    </div>\n\n    {suffix && (\n      <div key=\"long-url\" className=\"mb-3\">\n        <label className=\"form-label\">Long URL</label>\n        <input\n          type=\"url\"\n          className=\"form-control\"\n          value={longURL}\n          onChange={(e) => {\n            setStatus(Status.New);\n            setLongURL(e.target.value);\n          }}\n        />\n      </div>\n    )}\n\n    {suffix && longURL && (\n      <div key=\"rest\">\n        {editMetadata && (\n          <div key=\"edit-metadata\">\n            <div className=\"mb-3\">\n              <label className=\"form-label\">Title</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                disabled={loading}\n                value={metadata.title}\n                onChange={(e) =>\n                  setMetadata({ ...metadata, title: e.target.value })\n                }\n              />\n            </div>\n            <div className=\"mb-3\">\n              <label className=\"form-label\">Description</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                disabled={loading}\n                value={metadata.description}\n                onChange={(e) =>\n                  setMetadata({ ...metadata, description: e.target.value })\n                }\n              />\n            </div>\n            <div className=\"mb-3\">\n              <label className=\"form-label\">Image URL</label>\n              <input\n                type=\"url\"\n                className=\"form-control\"\n                disabled={loading}\n                value={metadata.image}\n                onChange={(e) =>\n                  setMetadata({ ...metadata, image: e.target.value })\n                }\n              />\n            </div>\n          </div>\n        )}\n\n        <div className=\"mb-3\">\n          <label className=\"form-label\">\n            Metadata Preview{\" \"}\n            {!editMetadata && (\n              <button\n                key=\"edit-button\"\n                className=\"btn btn-outline-secondary border-0\"\n                onClick={() => setEditMetadata(true)}\n              >\n                Edit\n              </button>\n            )}\n          </label>\n          <div className=\"border p-3\">\n            {metadata.image && (\n              <img\n                src={metadata.image}\n                alt=\"Metadata Card Image\"\n                className=\"img-fluid float-start me-3\"\n                style={{ maxHeight: \"10em\", maxWidth: \"30%\" }}\n              />\n            )}\n            <h6>{metadata.title}</h6>\n            <p>{metadata.description}</p>\n            <div className=\"clearfix\" />\n          </div>\n        </div>\n\n        <div className=\"mb-3\">\n          <CommitButton\n            className=\"btn btn-primary rounded-5\"\n            data={{\n              custom: {\n                fm: {\n                  [suffix]: JSON.stringify({\n                    ...metadata,\n                    url: longURL,\n                  }),\n                },\n              },\n            }}\n            onCommit={() => {\n              setPreviewUrl(`https://${accountId}.fm/${suffix}`);\n            }}\n          >\n            Save Changes\n          </CommitButton>\n        </div>\n        {previewUrl && (\n          <div className=\"mb-3 fs-4\">\n            <a href={previewUrl} target=\"_blank\">\n              {previewUrl}\n            </a>\n            <Widget\n              src=\"mob.near/widget/CopyButton\"\n              props={{\n                text: previewUrl,\n                className: \"btn btn-outline-primary border-0 fs-4\",\n              }}\n            />\n          </div>\n        )}\n      </div>\n    )}\n  </div>\n) : (\n  \"Unknown status\"\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/mob.near/widget/Near.FM.Edit", "fact_widget_deployments_id": "48328b64881ec8292260a7d8f85612a1", "inserted_timestamp": "2023-10-30T20:38:42.993Z", "modified_timestamp": "2023-10-30T20:38:42.993Z", "__row_index": 6}