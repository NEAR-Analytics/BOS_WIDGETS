{"tx_hash": "5aYjKERqGVrz3kdQVwoLxf4FrC7PmQzTFaxSeALVvEdo", "action_id_social": "3jKK4xPNusxA4rCDdgxuYBvcW5gPQ3p3W8GGdJDVUNRD-0-widget", "block_id": 103683898, "block_timestamp": "2023-10-18T21:00:47.125Z", "signer_id": "mob.near", "widget_name": "N.GifSearch", "source_code": "const [show, setShow] = useState(true);\nconst onHide = props.onHide ?? (() => setShow(false));\nconst onSelect = props.onSelect ?? (() => {});\nconst [searchTerm, setSearchTerm] = useState(\"\");\nconst [debounce, setDebounce] = useState(null);\nconst [loading, setLoading] = useState(false);\nconst [results, setResults] = useState([]);\nconst debouceTimeout = 1000;\n\nconst tenorApiKey = \"CIDF1JJPZGRB\";\nconst tenorLimit = 20;\n\nconst tenorAnonId = fetch(`https://api.tenor.com/v1/anonid?key=${tenorApiKey}`)\n  .body.anon_id;\n\nconst Wrapper = styled.div`\n  white-space: normal;\n  .tenor-logo {\n    height: 1em;\n  }\n\n  .lightbox {\n    backdrop-filter: blur(5px);\n  }\n\n  .results {\n    display: flex;\n    flex-wrap: wrap;\n    gap: .25rem;\n    .gif {\n      height: 120px;\n      object-fit: cover;\n      cursor: pointer;\n    }\n  }\n`;\n\nconst search = (searchTerm) => {\n  if (!searchTerm) {\n    setResults([]);\n    setLoading(false);\n    return;\n  }\n\n  asyncFetch(\n    `https://api.tenor.com/v1/search?tag=${encodeURIComponent(\n      searchTerm\n    )}&key=${tenorApiKey}&limit=${tenorLimit}&anon_id=${tenorAnonId}`\n  ).then((res) => {\n    setResults(res.body.results);\n    setLoading(false);\n  });\n};\n\nuseEffect(() => {\n  clearTimeout(debounce);\n  setDebounce(setTimeout(() => search(searchTerm), debouceTimeout));\n  setLoading(!!searchTerm);\n}, [searchTerm]);\n\nconst renderGif = (gif) => {\n  return (\n    <img\n      key={gif.id}\n      className=\"gif\"\n      onClick={() => onSelect(gif.media[0].gif)}\n      src={gif.media[0].tinygif.url}\n      alt={gif.content_description}\n    />\n  );\n};\n\nconst content = (\n  <div\n    className=\"modal-dialog modal-xl modal-dialog-centered modal-dialog-scrollable\"\n    onClick={(e) => {\n      e.stopPropagation();\n    }}\n  >\n    <div className=\"modal-content\">\n      <div className=\"modal-header\">\n        <div className=\"modal-title h4\">\n          GIF Search\n          <img\n            className=\"tenor-logo\"\n            src=\"https://www.gstatic.com/tenor/web/attribution/PB_tenor_logo_blue_horizontal.svg\"\n            alt=\"Powered by Tenor\"\n          />\n        </div>\n        <button\n          type=\"button\"\n          className=\"btn-close\"\n          aria-label=\"Close\"\n          onClick={onHide}\n        ></button>\n      </div>\n      <div className=\"modal-body\">\n        <input\n          autoFocus\n          value={searchTerm}\n          onChange={(e) => setSearchTerm(e.target.value)}\n        />\n        <hr />\n        {loading ? (\n          <span\n            key=\"loading\"\n            className=\"spinner-grow spinner-grow-sm me-1\"\n            role=\"status\"\n            aria-hidden=\"true\"\n          />\n        ) : (\n          \"\"\n        )}\n        <div key=\"results\" className=\"results\">\n          {results ? results.map(renderGif) : \"Not found\"}\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nreturn (\n  <Wrapper>\n    <Widget\n      key=\"gif-search\"\n      src=\"mob.near/widget/N.Lightbox\"\n      loading=\"\"\n      props={{\n        show,\n        onHide,\n        children: content,\n      }}\n    />\n  </Wrapper>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/mob.near/widget/N.GifSearch", "fact_widget_deployments_id": "c072a85a1fefe83a0a6ed8b639f99c8b", "inserted_timestamp": "2023-10-18T22:49:11.893Z", "modified_timestamp": "2023-10-18T22:49:11.893Z", "__row_index": 2}