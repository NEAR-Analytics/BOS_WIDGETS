{"tx_hash": "FnrXDpHs7a9K3N49ruTKpZR9rNf15tRN1dzJPi3nmVhQ", "action_id_social": "8Z4PTxyUZbbFaDJesR7NkzT627WTKorQcePyHQEMhe5V-0-widget", "block_id": 113963699, "block_timestamp": "2024-03-02T18:29:13.656Z", "signer_id": "mob.near", "widget_name": "Tokens.Inner", "source_code": "const accountId = props.accountId;\nif (!accountId) {\n  return \"\";\n}\nconst [tokens, setTokens] = useState(false);\nconst [loading, setLoading] = useState(true);\n\nconst { bigToString, MutedDecimals } = VM.require(\n  \"mob.near/widget/Token.utils\"\n);\n\nconst priceData = Near.view(\"priceoracle.near\", \"get_price_data\");\n\nuseEffect(() => {\n  setTokens(false);\n  setLoading(true);\n  asyncFetch(\n    `https://api.fastnear.com/v0/account/${accountId}/ft_with_balances`\n  )\n    .then((res) => {\n      if (!res.ok) {\n        console.error(\"Failed to fetch ft_with_balances\", res);\n        return;\n      }\n      setTokens(res.body.tokens);\n    })\n    .finally(() => setLoading(false));\n}, [accountId]);\n\nconst sortedTokens = useMemo(() => {\n  if (!tokens) {\n    return tokens;\n  }\n  const prices = Object.fromEntries(\n    (priceData?.prices || []).map(({ asset_id, price }) => [asset_id, price])\n  );\n  const computeUsdBalance = (tokenId, balance) => {\n    if (balance === null) {\n      return \"0\";\n    }\n    const price = prices[tokenId] || {\n      multiplier: \"0\",\n      decimals: 1,\n    };\n    return Big(price.multiplier)\n      .mul(Big(balance))\n      .div(Big(10).pow(price.decimals))\n      .toFixed(6);\n  };\n  const st = Object.entries(tokens).map(([tokenId, balance]) => ({\n    tokenId,\n    balance,\n    usdBalance: computeUsdBalance(tokenId, balance),\n  }));\n  st.sort((a, b) => parseFloat(b.usdBalance) - parseFloat(a.usdBalance));\n  return st;\n}, [tokens, priceData]);\n\nconst Wrapper = styled.div`\n.header {\n  margin-bottom: 1em;\n}\n.token {\n  margin-bottom: 1em;\n  overflow: hidden;\n}\n`;\n\nconst renderToken = ({ tokenId, balance, usdBalance }) => {\n  return (\n    <Widget\n      loading=\"\"\n      src=\"mob.near/widget/Tokens.TokenWithBalance\"\n      props={{ tokenId, balance, usdBalance }}\n    />\n  );\n};\n\nconst usdSum = sortedTokens\n  ? sortedTokens\n      .map(({ usdBalance }) => parseFloat(usdBalance || \"0\"))\n      .reduce((s, v) => s + v, 0)\n  : 0;\n\nreturn (\n  <Wrapper>\n    <div className=\"header\">\n      Fungible Tokens of\n      <Widget src=\"mob.near/widget/N.ProfileLine\" props={{ accountId }} />\n      {usdSum > 0 && (\n        <div>\n          Total USD sum:\n          <span className=\"font-monospace fw-bold d-inline-flex\">\n            <span className=\"text-secondary\">~$</span>\n            <MutedDecimals value={bigToString(usdSum)} />\n          </span>\n        </div>\n      )}\n    </div>\n    <div className=\"actions\">\n      {sortedTokens\n        ? sortedTokens\n            .filter((t) => t.balance !== null)\n            .map((t) => (\n              <div key={t.tokenId} className=\"token\">\n                {renderToken(t)}\n              </div>\n            ))\n        : \"Loading\"}\n    </div>\n  </Wrapper>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/mob.near/widget/Tokens.Inner", "fact_widget_deployments_id": "8afd219080157d3d4dedb4fa95f9092d", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 6}