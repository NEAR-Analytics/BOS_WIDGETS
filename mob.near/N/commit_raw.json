{"tx_hash": "AnEVCFkRUpN55X7XDkMFcNGfDC3AzyDPycp1Ve3trQHK", "action_id_social": "EwgGrvPhtz32NNyzv9D3uMicwW8V9n8yBmm55cPUF2ZW-0-widget", "block_id": 101420835, "block_timestamp": "2023-09-18T19:26:22.895Z", "signer_id": "mob.near", "widget_name": "N", "source_code": "const hashtag = props.hashtag;\n\nif (!state || state.hashtag !== hashtag) {\n  State.update({\n    feedIndex: hashtag\n      ? \"hashtag\"\n      : context.accountId\n      ? \"following\"\n      : \"premium\",\n    hashtag,\n  });\n}\n\nconst options = [\n  {\n    id: \"following\",\n    title: \"Following\",\n    disabled: !context.accountId,\n  },\n  {\n    id: \"premium\",\n    title: \"Premium\",\n  },\n  {\n    id: \"all\",\n    title: \"All Posts\",\n  },\n  {\n    id: \"menu\",\n    title: \"Menu\",\n    mobileOnly: true,\n  },\n];\n\nif (hashtag) {\n  options.splice(2, 0, {\n    id: \"hashtag\",\n    title: `#${hashtag}`,\n  });\n}\n\nlet accounts = undefined;\n\nif (state.feedIndex === \"following\") {\n  const graph = Social.keys(`${context.accountId}/graph/follow/*`, \"final\");\n  if (graph !== null) {\n    accounts = Object.keys(graph[context.accountId].graph.follow || {});\n    accounts.push(context.accountId);\n  } else {\n    accounts = [];\n  }\n}\n\nconst premiumData = Social.get(\n  \"premium.social.near/badge/premium/accounts/*\",\n  \"final\"\n);\n\nconst [premiumAccounts, setPremiumAccounts] = useState([]);\nconst [premium, setPremium] = useState(false);\n\nuseEffect(() => {\n  if (premiumData) {\n    const now = Date.now();\n    setPremium(false);\n    setPremiumAccounts(\n      Object.entries(premiumData)\n        .filter(([accountId, expiration]) => {\n          const active = parseFloat(expiration) > now;\n          if (accountId === context.accountId && active) {\n            setPremium(true);\n          }\n          return active;\n        })\n        .map((a) => a[0])\n    );\n  }\n}, [premiumData]);\n\nconst Nav = styled.div`\n  .nav-pills {\n    background: #fbfbfb;\n    font-weight: 500;\n    --bs-nav-pills-border-radius: 0;\n    --bs-nav-link-color: #000;\n    --bs-nav-pills-link-active-color: #000;\n    --bs-nav-pills-link-active-bg: #fbfbfb;\n    --bs-nav-link-padding-y: 0.75rem;\n    border-bottom: 1px solid #eee;\n    padding-top: 3px;\n  }\n  .nav-link.active {\n    border-bottom: 3px solid rgb(13, 110, 253);\n  }\n\n  .nav-item:not(:has(> .disabled)):hover {\n    background: rgba(13, 110, 253, 0.15);\n  }\n\n  margin: 0 -12px;\n\n  @media(max-width: 991px) {\n    margin: -24px -12px 0;\n  }\n`;\n\nconst isPremiumFeed = state.feedIndex === \"premium\";\n\nreturn (\n  <div className=\"row\">\n    <div className=\"col-lg-8\">\n      <Nav>\n        <ul className=\"nav nav-pills nav-fill\">\n          {options.map((option, i) => (\n            <li\n              className={`nav-item ${option.mobileOnly ? \"d-lg-none\" : \"\"}`}\n              key={i}\n            >\n              <button\n                className={`nav-link ${\n                  state.feedIndex === option.id ? \"active\" : \"\"\n                } ${option.disabled ? \"disabled\" : \"\"}`}\n                aria-disabled={!!option.disabled}\n                onClick={() =>\n                  !option.disabled && State.update({ feedIndex: option.id })\n                }\n              >\n                {option.title}\n              </button>\n            </li>\n          ))}\n        </ul>\n      </Nav>\n      <div\n        className={`${state.feedIndex === \"menu\" ? \"d-none\" : \"\"} d-lg-block`}\n      >\n        <Widget\n          key=\"onboarding\"\n          loading=\"\"\n          src=\"mob.near/widget/N.ProfileOnboarding\"\n          props={{}}\n        />\n        {context.accountId &&\n          (!isPremiumFeed || premium ? (\n            <Widget\n              key=\"compose\"\n              loading=\"\"\n              src=\"mob.near/widget/MainPage.N.Compose\"\n              props={{}}\n            />\n          ) : (\n            <Widget\n              key=\"not-premium\"\n              loading=\"\"\n              src=\"mob.near/widget/N.NotPremiumCompose\"\n              props={{}}\n            />\n          ))}\n        {state.feedIndex === \"hashtag\" ? (\n          <Widget\n            key=\"hash-feed\"\n            src=\"mob.near/widget/Hashtag.N.Feed\"\n            props={{ hashtag }}\n          />\n        ) : isPremiumFeed ? (\n          <Widget\n            key=\"premium-feed\"\n            src=\"mob.near/widget/MainPage.N.Feed\"\n            props={{ accounts: premiumAccounts, isPremiumFeed }}\n          />\n        ) : (\n          <Widget\n            key=\"reg-feed\"\n            src=\"mob.near/widget/MainPage.N.Feed\"\n            props={{ accounts }}\n          />\n        )}\n      </div>\n    </div>\n    <div\n      className={`${\n        state.feedIndex !== \"menu\" ? \"d-none\" : \"pt-3\"\n      } d-lg-block col-lg-4`}\n    >\n      <Widget src=\"mob.near/widget/Welcome.RHS\" props={props} />\n    </div>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/mob.near/widget/N", "fact_widget_deployments_id": "3fb147f6ede9ca0b2d1ce9dd68ad8cb5", "inserted_timestamp": "2023-09-18T21:28:39.021Z", "modified_timestamp": "2023-09-18T21:28:39.021Z", "__row_index": 1}