{"tx_hash": "HHYbHiGKJM1VPEty7CgbCNQiuEpfrjVjiQweMPvEy5xM", "action_id_social": "96QucbbsQuqQcYjW7VnaLth7hcdh2QRTYxf723xK8yTZ-0-widget", "block_id": 105008602, "block_timestamp": "2023-11-05T16:55:09.625Z", "signer_id": "mob.near", "widget_name": "Neddit.Comment.Feed", "source_code": "const item = props.item;\nconst rootItem = props.rootItem;\nconst depth = props.depth ?? 1;\nconst renderLoading = () => \"Loading\";\nconst fetchLimit = props.fetchLimit ? parseInt(props.fetchLimit) : 100;\nconst renderLimit = props.renderLimit ? parseInt(props.renderLimit) : 3;\nconst initialRenderLimit = props.initialRenderLimit\n  ? parseInt(props.initialRenderLimit)\n  : renderLimit;\nconst halflife = props.halflife\n  ? parseFloat(props.halflife)\n  : (24 * 60 * 60) / 1.3;\n\nconst [displayCount, setDisplayCount] = useState(initialRenderLimit);\n\nlet rawIndex = Social.index(\"comment\", item, {\n  order: \"desc\",\n  limit: fetchLimit,\n});\n\nif (rawIndex === null) {\n  return renderLoading();\n}\n\nconst comments = rawIndex\n  .map(({ accountId, blockHeight, value }) => {\n    if (value.type !== \"md\") {\n      return null;\n    }\n    return {\n      accountId,\n      blockHeight,\n      item: {\n        type: \"social\",\n        path: value?.item?.path ?? `${accountId}/post/comment`,\n        blockHeight: value?.item?.blockHeight ?? blockHeight,\n      },\n    };\n  })\n  .filter((a) => !!a);\n\nconst likes = fetch(\"https://api.near.social/api/experimental/likes\", {\n  method: \"POST\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n  body: JSON.stringify({\n    item: comments.map((p) => p.item),\n  }),\n}).body;\n\nif (!likes) {\n  return renderLoading();\n}\n\nconst lastBlockHeight = comments[0].blockHeight ?? 0;\n\nconst score = (i) => {\n  const comment = comments[i];\n  const age = lastBlockHeight - comment.blockHeight;\n  const numLikes = likes[i].length + 0.1;\n  return numLikes / Math.exp(1 + age / halflife);\n};\n\nconst order = [...Array(comments.length).keys()];\norder.sort((a, b) => score(b) - score(a));\n\nconst render = (comment) => {\n  const accountId = comment.item.path.split(\"/\")[0];\n  const blockHeight = comment.item.blockHeight;\n\n  return (\n    <>\n      <Widget\n        key={JSON.stringify(comment)}\n        loading={<div className=\"w-100\" style={{ minHeight: \"200px\" }} />}\n        src=\"mob.near/widget/Neddit.Comment\"\n        props={{\n          accountId,\n          blockHeight,\n          rootItem,\n          item,\n          highlight:\n            accountId === props.highlightComment?.accountId &&\n            blockHeight === props.highlightComment?.blockHeight,\n        }}\n      />\n      <Widget\n        key=\"sub-comments\"\n        loading={false}\n        src=\"mob.near/widget/Neddit.Comment.Feed\"\n        props={{\n          item: comment.item,\n          rootItem,\n          depth: depth + 1,\n          initialRenderLimit: depth === 1 ? 3 : 0,\n          renderLimit: 10,\n        }}\n      />\n    </>\n  );\n};\n\nconst fetchMore = displayCount < comments.length && (\n  <div key={\"loader more\"}>\n    <a\n      className=\"\"\n      style={{ cursor: \"pointer\" }}\n      onClick={(e) => {\n        e.preventDefault && e.preventDefault();\n        setDisplayCount(displayCount + renderLimit);\n      }}\n    >\n      More comments ({comments.length - displayCount})\n    </a>\n  </div>\n);\n\nreturn comments.length > 0 ? (\n  <div style={{ marginLeft: \"52px\" }}>\n    {order.slice(0, displayCount).map((i) => render(comments[i]))}\n    {fetchMore}\n  </div>\n) : (\n  \"\"\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/mob.near/widget/Neddit.Comment.Feed", "fact_widget_deployments_id": "921234313f2719767b5d9feb7ea855b2", "inserted_timestamp": "2023-11-05T18:44:42.246Z", "modified_timestamp": "2023-11-05T18:44:42.246Z", "__row_index": 1}