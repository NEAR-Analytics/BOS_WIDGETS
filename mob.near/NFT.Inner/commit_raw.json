{"tx_hash": "GjSysnuXTpB7cqiWHHH8rfpdjahQRxMdGJb5hXb2Nxbk", "action_id_social": "4TR48THVTbyj9qbrt9D5UBTAowTTvW7SCRP7CNf4YGzW-0-widget", "block_id": 102091097, "block_timestamp": "2023-09-27T18:56:48.490Z", "signer_id": "mob.near", "widget_name": "NFT.Inner", "source_code": "const nft = props.nft ?? {\n  contractId: props.contractId,\n  tokenId: props.tokenId,\n};\n\nconst nftMetadata = Near.view(nft.contractId, \"nft_metadata\");\nconst token = Near.view(nft.contractId, \"nft_token\", {\n  token_id: nft.tokenId,\n});\nconst tokenMetadata = token.metadata;\n\nconst [imageUrl, setImageUrl] = useState(null);\n\nuseEffect(() => {\n  setImageUrl(\n    `https://i.near.social/magic/${\n      thumbnail || \"large\"\n    }/https://near.social/magic/img/nft/${nft.contractId}/${nft.tokenId}`\n  );\n}, [nft]);\n\nreturn (\n  <div className=\"nft-card\">\n    <div className=\"nft-image-wrapper\">\n      <img\n        className=\"nft-image\"\n        loading=\"lazy\"\n        src={imageUrl}\n        onError={() => {\n          if (imageUrl && !imageUrl.includes(\"?\")) {\n            console.log(\n              `Retying load image NFT ${nft.contractId}/${nft.tokenId} in 15 seconds`\n            );\n            setTimeout(() => {\n              setImageUrl(imageUrl + \"?retry\");\n            }, 15 * 1000);\n          }\n        }}\n        alt={`${nft.contractId}/${nft.tokenId}`}\n      />\n    </div>\n    <div className=\"nft-text\">\n      <div className=\"nft-title\">{tokenMetadata.title || nft.tokenId}</div>\n      <div className=\"nft-description\">{tokenMetadata.description}</div>\n    </div>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/mob.near/widget/NFT.Inner", "fact_widget_deployments_id": "0c3d269abef3f4b6404f2faacd756152", "inserted_timestamp": "2023-09-27T20:46:01.698Z", "modified_timestamp": "2023-09-27T20:46:01.698Z", "__row_index": 0}