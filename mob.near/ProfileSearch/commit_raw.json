{"tx_hash": "GcqpMn8irc4bxivDYUAPXHag7LwtktLBa8VmNwBddse3", "action_id_social": "A1TrocgF7NW92vUgQnAxrwkLedUhyXKouqyMjQkQrnjq-0-widget", "block_id": 80137354, "block_timestamp": "2022-12-07T20:25:23.225Z", "signer_id": "mob.near", "widget_name": "ProfileSearch", "source_code": "const profiles =\n  Social.get([\"*/profile/name\", \"*/profile/tags/*\"], \"final\") || {};\n\nconst terms = (state.search || \"\")\n  .toLowerCase()\n  .split(/[^\\w._-]/)\n  .filter((s) => !!s.trim());\nconst matchedAccountIds = [];\nconst debug = props.debug;\nconst limit = props.limit ?? 30;\n\nconst MaxSingleScore = 20;\nconst MaxScore = MaxSingleScore * 3;\n\nconst computeScore = (s) => {\n  s = s.toLowerCase();\n  return (\n    terms\n      .map((term) => {\n        const pos = s.indexOf(term);\n        return pos >= 0 ? Math.max(1, 20 - pos) : 0;\n      })\n      .reduce((s, v) => s + v, 0) / terms.length\n  );\n};\n\nObject.entries(profiles).forEach(([accountId, data]) => {\n  const accountIdScore = computeScore(accountId);\n  const name = data.profile.name || \"\";\n  const tags = Object.keys(data.profile.tags || {}).slice(0, 10);\n  const nameScore = computeScore(name);\n  const tagsScore = Math.min(\n    20,\n    tags.map(computeScore).reduce((s, v) => s + v, 0)\n  );\n  const score = (accountIdScore + nameScore + tagsScore) / MaxScore;\n  if (score > 0) {\n    matchedAccountIds.push({ score, accountId, name, tags });\n  }\n});\n\nmatchedAccountIds.sort((a, b) => b.score - a.score);\nconst result = matchedAccountIds.slice(0, limit);\n\nif (props.onChange && state.search) {\n  props.onChange({ term: state.search, result });\n}\n\nreturn (\n  <div>\n    <input\n      type=\"text\"\n      value={state.search ?? \"\"}\n      onChange={(e) => State.update({ search: e.target.value })}\n      placeholder=\"Account ID or Profile name\"\n    />\n    {debug && <pre>{JSON.stringify(result, undefined, 2)}</pre>}\n  </div>\n);\n", "metadata": {"description": "An input to search for profiles.\n\nProps:\n- `onChange` - method to call with the results.\n- `limit` - number of matches to return.\n- `debug` - enables debug\n", "image": {"ipfs_cid": "bafkreicsqm7muff55eiyxrkxlvn3i7iqbfb2rwzdlicpp37y2zhpeqeveq"}, "name": "Profile Search", "tags": {"inline": "", "profile": "", "search": ""}}, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/mob.near/widget/ProfileSearch", "fact_widget_deployments_id": "a64c6db34b4e31ae945b8af9980c39f1", "inserted_timestamp": "2000-01-01T00:00:00.000Z", "modified_timestamp": "2000-01-01T00:00:00.000Z", "__row_index": 2}