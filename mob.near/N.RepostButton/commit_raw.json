{"tx_hash": "7Xjt5ngbCJSnYo4kP3sYwAvu23YUKuozTAHm85AJSKMW", "action_id_social": "5QSPAEJyLsiwV1mTZzP5PPNX4wCG83CCsn8AxpuFuuTU-0-widget", "block_id": 99138396, "block_timestamp": "2023-08-19T04:02:55.434Z", "signer_id": "mob.near", "widget_name": "N.RepostButton", "source_code": "const item = props.item;\n\nif (!item) {\n  return \"\";\n}\n\nconst reposts = Social.index(\"repost\", item);\n\nconst dataLoading = reposts === null;\n\nconst repostsByUsers = Object.fromEntries(\n  (reposts || [])\n    .filter((repost) => repost.value.type === \"repost\")\n    .map((repost) => [repost.accountId, repost])\n);\n\nif (state.hasRepost === true) {\n  repostsByUsers[context.accountId] = {\n    accountId: context.accountId,\n  };\n}\n\nconst accountsWithReposts = Object.keys(repostsByUsers);\nconst repostCount = accountsWithReposts.length;\nconst hasRepost = context.accountId && !!repostsByUsers[context.accountId];\n\nconst RepostButton = styled.button`\n  border: 0 !important;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  background: inherit;\n  color: inherit;\n  height: 1em;\n  svg {\n    margin-top: -2px;\n  }\n  &:not([disabled]):hover {\n    opacity: 1 !important;\n    color: rgb(0, 184, 124);\n\n    &:before {\n      content: \"\";\n      position: absolute;\n      left: 1px;\n      border-radius: 50%;\n      width: 35px;\n      height: 35px;\n      background: rgb(0, 184, 124, 0.1);\n    }\n  }\n  .clicked {\n    color: rgb(0, 184, 124);\n  }\n  .count {\n    margin-left: 8px;\n  }\n`;\n\nconst repostClick = () => {\n  if (state.loading) {\n    return;\n  }\n  State.update({\n    loading: true,\n  });\n  const reposts = [\n    {\n      key: \"main\",\n      value: {\n        type: \"repost\",\n        item,\n      },\n    },\n  ];\n  if (!hasRepost) {\n    reposts.push({\n      key: item,\n      value: {\n        type: \"repost\",\n      },\n    });\n  }\n  const data = {\n    index: {\n      repost: JSON.stringify(reposts),\n    },\n  };\n\n  if (!hasRepost && props.notifyAccountId) {\n    data.index.notify = JSON.stringify({\n      key: props.notifyAccountId,\n      value: {\n        type: \"repost\",\n        item,\n      },\n    });\n  }\n  Social.set(data, {\n    onCommit: () => State.update({ loading: false, hasRepost: true }),\n    onCancel: () => State.update({ loading: false }),\n  });\n};\n\nconst title = \"Repost\";\n\nconst repostSvg = (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"26\"\n    height=\"26\"\n    fill=\"currentColor\"\n    viewBox=\"0 0 24 24\"\n    stroke=\"currentColor\"\n    strokeWidth=\"0.5\"\n  >\n    <path\n      fill-rule=\"evenodd\"\n      d=\"M4.854 1.146a.5.5 0 0 0-.708 0l-4 4a.5.5 0 1 0 .708.708L4 2.707V12.5A2.5 2.5 0 0 0 6.5 15h8a.5.5 0 0 0 0-1h-8A1.5 1.5 0 0 1 5 12.5V2.707l3.146 3.147a.5.5 0 1 0 .708-.708l-4-4z\"\n      transform=\"rotate(180, 12, 12), translate(0, 4)\"\n    />\n    <path\n      fill-rule=\"evenodd\"\n      d=\"M4.854 1.146a.5.5 0 0 0-.708 0l-4 4a.5.5 0 1 0 .708.708L4 2.707V12.5A2.5 2.5 0 0 0 6.5 15h8a.5.5 0 0 0 0-1h-8A1.5 1.5 0 0 1 5 12.5V2.707l3.146 3.147a.5.5 0 1 0 .708-.708l-4-4z\"\n      transform=\"translate(0, 4)\"\n    />\n  </svg>\n);\n\nreturn (\n  <div className=\"d-inline-flex align-items-center\">\n    <RepostButton\n      disabled={\n        props.disabled || state.loading || dataLoading || !context.accountId\n      }\n      title={title}\n      onClick={repostClick}\n    >\n      <span className={hasRepost ? \"clicked\" : \"\"}>{repostSvg}</span>\n      <span className={`count ${hasRepost ? \"clicked\" : \"\"}`}>\n        {repostCount || \"\"}\n      </span>\n    </RepostButton>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/mob.near/widget/N.RepostButton", "fact_widget_deployments_id": "4b11bf223ef8bf56eb3ec42f1f0d84d9", "inserted_timestamp": "2023-08-19T05:43:33.454Z", "modified_timestamp": "2023-08-19T05:43:33.454Z", "__row_index": 9}