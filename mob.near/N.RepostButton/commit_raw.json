{"tx_hash": "E9zpkkckX9aWqePesCpAUdN6XSnVanZCrrTEw6ZVM8Hy", "action_id_social": "9FcnsHjDPk8Q1nrMHtTwgo32y4hmgUk5HjDHVZfkrPSe-0-widget", "block_id": 102541170, "block_timestamp": "2023-10-03T18:28:09.315Z", "signer_id": "mob.near", "widget_name": "N.RepostButton", "source_code": "const item = props.item;\nconst indexKey = props.indexKey ?? \"main\";\nconst groupId = props.groupId;\n\nif (!item) {\n  return \"\";\n}\n\nconst reposts = Social.index(\"repost\", item);\n\nconst dataLoading = reposts === null;\n\nconst repostsByUsers = Object.fromEntries(\n  (reposts || [])\n    .filter((repost) => repost.value.type === \"repost\")\n    .map((repost) => [repost.accountId, repost])\n);\n\nif (state.hasRepost === true) {\n  repostsByUsers[context.accountId] = {\n    accountId: context.accountId,\n  };\n}\n\nconst accountsWithReposts = Object.keys(repostsByUsers);\nconst repostCount = accountsWithReposts.length;\nconst hasRepost = context.accountId && !!repostsByUsers[context.accountId];\n\nconst RepostButton = styled.div`\n  line-height: 20px;\n  min-height: 20px;\n  display: inline-flex;\n  align-items: center;\n  justify-content: left;\n  background: inherit;\n  color: inherit;\n  font-size: 16px;\n  .icon {\n    position: relative;\n    &:before {\n      margin: -8px;\n      content: \"\";\n      position: absolute;\n      top: 0;\n      left: 0;\n      bottom: 0;\n      right: 0;\n      border-radius: 50%;\n    }\n  }\n\n  .count {\n    margin-left: 8px;\n  }\n\n  &:not([disabled]) {\n    cursor: pointer;\n  }\n\n  &:not([disabled]):hover {\n    opacity: 1 !important;\n    color: rgb(0, 184, 124);\n\n    .icon:before {\n      background: rgb(0, 184, 124, 0.1);\n    }\n  }\n\n  .clicked {\n    color: rgb(0, 184, 124);\n  }\n`;\n\nconst repostClick = (indexKey) => {\n  if (state.loading) {\n    return;\n  }\n  indexKey = indexKey ?? \"main\";\n  State.update({\n    loading: true,\n  });\n  const reposts = [\n    {\n      key: indexKey,\n      value: {\n        type: \"repost\",\n        item,\n      },\n    },\n  ];\n  if (!hasRepost) {\n    reposts.push({\n      key: item,\n      value: {\n        type: \"repost\",\n      },\n    });\n  }\n  const data = {\n    index: {\n      repost: JSON.stringify(reposts),\n    },\n  };\n\n  if (!hasRepost && props.notifyAccountId) {\n    data.index.notify = JSON.stringify({\n      key: props.notifyAccountId,\n      value: {\n        type: \"repost\",\n        item,\n      },\n    });\n  }\n  Social.set(data, {\n    onCommit: () => State.update({ loading: false, hasRepost: true }),\n    onCancel: () => State.update({ loading: false }),\n  });\n};\n\nconst title = \"Repost\";\n\nconst repostSvg = (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    style={{ width: \"1.25em\" }}\n    fill=\"currentColor\"\n    viewBox=\"0 1 24 24\"\n    stroke=\"currentColor\"\n    strokeWidth=\"0.75\"\n  >\n    <path\n      fill-rule=\"evenodd\"\n      d=\"M4.854 1.146a.5.5 0 0 0-.708 0l-4 4a.5.5 0 1 0 .708.708L4 2.707V12.5A2.5 2.5 0 0 0 6.5 15h8a.5.5 0 0 0 0-1h-8A1.5 1.5 0 0 1 5 12.5V2.707l3.146 3.147a.5.5 0 1 0 .708-.708l-4-4z\"\n      transform=\"rotate(180, 12, 12), translate(0, 4)\"\n    />\n    <path\n      fill-rule=\"evenodd\"\n      d=\"M4.854 1.146a.5.5 0 0 0-.708 0l-4 4a.5.5 0 1 0 .708.708L4 2.707V12.5A2.5 2.5 0 0 0 6.5 15h8a.5.5 0 0 0 0-1h-8A1.5 1.5 0 0 1 5 12.5V2.707l3.146 3.147a.5.5 0 1 0 .708-.708l-4-4z\"\n      transform=\"translate(0, 4)\"\n    />\n  </svg>\n);\n\nconst quoteSvg = (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    style={{ width: \"1.25em\" }}\n    fill=\"currentColor\"\n    viewBox=\"-2 -2 20 20\"\n  >\n    <path d=\"M12.146.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1 0 .708l-10 10a.5.5 0 0 1-.168.11l-5 2a.5.5 0 0 1-.65-.65l2-5a.5.5 0 0 1 .11-.168l10-10zM11.207 2.5 13.5 4.793 14.793 3.5 12.5 1.207 11.207 2.5zm1.586 3L10.5 3.207 4 9.707V10h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.293l6.5-6.5zm-9.761 5.175-.106.106-1.528 3.821 3.821-1.528.106-.106A.5.5 0 0 1 5 12.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.468-.325z\" />\n  </svg>\n);\n\nconst Loading = (\n  <span\n    className=\"spinner-grow spinner-grow-sm me-1\"\n    role=\"status\"\n    aria-hidden=\"true\"\n  />\n);\n\nreturn (\n  <div\n    className=\"d-inline-flex align-items-center\"\n    // style={props.debug ? { display: \"block\", height: \"300px\" } : {}}\n  >\n    <span>\n      <RepostButton\n        disabled={\n          props.disabled || state.loading || dataLoading || !context.accountId\n        }\n        data-bs-toggle=\"dropdown\"\n        aria-expanded=\"false\"\n        title={title}\n      >\n        <span className={`icon ${hasRepost ? \" clicked\" : \"\"}`}>\n          {repostSvg}\n        </span>\n        <span className={`count ${hasRepost ? \"clicked\" : \"\"}`}>\n          <Widget\n            loading={repostCount || \"\"}\n            src=\"mob.near/widget/N.Overlay.Faces\"\n            props={{ accounts: repostsByUsers, limit: 10 }}\n          />\n        </span>\n      </RepostButton>\n      <ul className=\"dropdown-menu\">\n        <li>\n          <button className=\"dropdown-item\" onClick={() => repostClick(\"main\")}>\n            {state.loading && Loading} {repostSvg} Repost\n          </button>\n        </li>\n        {groupId && (\n          <li>\n            <button\n              className=\"dropdown-item\"\n              disabled={props.disableGroupRepost}\n              onClick={() => repostClick(indexKey)}\n            >\n              {repostSvg} Repost to the group\n            </button>\n          </li>\n        )}\n        <li>\n          <button className=\"dropdown-item\" disabled={true}>\n            {quoteSvg} Quote\n          </button>\n        </li>\n      </ul>\n    </span>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/mob.near/widget/N.RepostButton", "fact_widget_deployments_id": "dff7417e06b15284d5c7b7b6d9ebc037", "inserted_timestamp": "2023-10-03T20:28:35.781Z", "modified_timestamp": "2023-10-03T20:28:35.781Z", "__row_index": 12}