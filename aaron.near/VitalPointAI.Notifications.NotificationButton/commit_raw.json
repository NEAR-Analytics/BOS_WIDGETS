{"tx_hash": "H6Ba57S9Br41L359j575Vp3qLrixEdkLP8XiAzvY2Seb", "action_id_social": "GXLYUJeWyd2SDfaNPdQCo2ABUNMnoNjeBfqnTPrf6v3T-0-widget", "block_id": 104490714, "block_timestamp": "2023-10-29T21:37:01.199Z", "signer_id": "aaron.near", "widget_name": "VitalPointAI.Notifications.NotificationButton", "source_code": "const accountId = context.accountId;\nconst moderatorAccount = props?.moderatorAccount || \"bosmod.near\";\nconst notificationFeedSrc =\n  \"near/widget/NearOrg.Notifications.NotificationsList\";\n\nconst isLocalStorageSupported = props?.isLocalStorageSupported;\nconst isNotificationSupported = props?.isNotificationSupported;\nconst isPermisionGranted = props?.isPermisionGranted;\nconst isPushManagerSupported = props?.isPushManagerSupported;\nconst handleTurnOn = props?.handleTurnOn;\nconst handleOnCancel = props?.handleOnCancel;\nconst getNotificationLocalStorage = props?.getNotificationLocalStorage;\nconst handleOnCancelBanner = props?.handleOnCancelBanner;\nconst mobileView = props?.mobileView;\nconst NotificationsIcon = props?.NotificationsIcon;\n\nState.init({\n  open: false,\n});\n\nconst Wrapper = styled.div``;\n\nconst ButtonWrapper = styled.div`\n  position: relative;\n  display: inline-flex;\n  margin: 1rem;\n`;\n\nconst Count = styled.span`\n  min-width: 13px;\n  height: 13px;\n  padding: 0 3px;\n  display: block;\n  color: var(--white);\n  background: var(--red8);\n  border-radius: 100px;\n  font-size: 10px;\n  line-height: 13px;\n  text-align: center;\n  font-weight: 600;\n  position: absolute;\n  top: -2px;\n  right: -1px;\n`;\n\nconst PreviewWrapper = styled.div`\n  position: absolute;\n  border-radius: 6px;\n  background: var(--white);\n  box-shadow: 0px 4px 8px 0px rgba(0, 0, 0, 0.06),\n    0px 0px 0px 1px rgba(0, 0, 0, 0.06);\n  top: 70px;\n  right: 68%;\n  width: 460px;\n  max-height: 80vh;\n  visibility: hidden;\n  overflow: hidden auto;\n  transition: visibility 300ms ease;\n  transform-origin: right top;\n\n  &[data-state=\"true\"] {\n    visibility: visible;\n    animation: fadeIn 200ms ease;\n  }\n  [data-state=\"false\"] {\n    animation: fadeOut 200ms ease;\n  }\n\n  @keyframes fadeIn {\n    from {\n      visibility: hidden;\n      opacity: 0;\n    }\n    to {\n      visibility: visible;\n      opacity: 1;\n    }\n  }\n\n  @keyframes fadeOut {\n    from {\n      visibility: visible;\n      opacity: 1;\n    }\n    to {\n      visibility: hidden;\n      opacity: 0;\n    }\n  }\n`;\n\nconst PreviewContent = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst SeeAll = styled.div`\n  padding: 16px;\n`;\n\nconst Counter = ({ count }) => {\n  if (!count) return;\n  return <Count>{count}</Count>;\n};\n\nconst Button = ({ count }) => {\n  const icon = count > 0 ? NotificationsIcon : NotificationsIcon;\n  return (\n    <ButtonWrapper>\n      <Widget\n        src=\"aaron.near/widget/VitalPointAI.DIG.Button\"\n        props={{\n          icon,\n          variant: \"primary\",\n          style: { width: \"45px\", height: \"45px\" },\n          href: \"/notifications\",\n          onClick: () => State.update({ open: !!state.open }),\n        }}\n      />\n      <Counter count={count} />\n    </ButtonWrapper>\n  );\n};\n\nconst Notification = ({ count, disabled }) => {\n  if (disabled) {\n    return <Button count={count} />;\n  }\n  return (\n    <Wrapper\n      onMouseEnter={() => State.update({ open: true })}\n      onMouseLeave={() => State.update({ open: false })}\n      onClick={() => State.update({ open: false })}\n    >\n      <Button count={count} />\n      <PreviewWrapper data-state={state.open}>\n        {state.open && (\n          <PreviewContent>\n            <Widget\n              src=\"near/widget/NearOrg.Notifications.Notifications\"\n              props={{\n                isLocalStorageSupported,\n                isNotificationSupported,\n                isPermisionGranted,\n                isPushManagerSupported,\n                handleOnCancel,\n                getNotificationLocalStorage,\n                handleOnCancelBanner,\n                accountId,\n                handleTurnOn,\n                showLimit: 5,\n                showInBox: true,\n                bannerBorderRadius: \"0\",\n              }}\n            />\n            <SeeAll>\n              <Widget\n                src=\"aaron.near/widget/VitalPointAI.DIG.Button\"\n                props={{\n                  href: \"/notifications\",\n                  fill: \"outline\",\n                  variant: \"secondary\",\n                  label: \"See all\",\n                  size: \"small\",\n                  style: { width: \"100%\" },\n                }}\n              />\n            </SeeAll>\n          </PreviewContent>\n        )}\n      </PreviewWrapper>\n    </Wrapper>\n  );\n};\n\nif (context.loading || !accountId) {\n  return <Notification count={0} disabled={true} />;\n}\n\nconst lastBlockHeight = Storage.get(\"lastBlockHeight\", notificationFeedSrc);\n\nif (lastBlockHeight === null) {\n  return <Notification count={0} disabled={true} />;\n}\n\n// load the list of users that have been flagged by the moderator\nconst filterUsersRaw = Social.get(\n  `${moderatorAccount}/moderate/users`, //TODO\n  \"optimistic\",\n  {\n    subscribe: true,\n  }\n);\n\nif (filterUsers === null) {\n  // haven't loaded filter list yet, return early\n  return <Notification count={0} disabled={true} />;\n}\n\nconst filterUsers = filterUsersRaw ? JSON.parse(filterUsersRaw) : [];\n\nlet notifications =\n  Social.index(\"notify\", accountId, {\n    order: \"asc\",\n    from: (lastBlockHeight ?? 0) + 1,\n    subscribe: true,\n  }) || [];\n\nnotifications = notifications.filter((i) => !filterUsers.includes(i.accountId));\n\nconst notificationsCount = notifications.length || 0;\n\nif (mobileView) {\n  return <Notification count={notificationsCount} disabled={true} />;\n}\n\nreturn <Notification count={notificationsCount} disabled={false} />;\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/aaron.near/widget/VitalPointAI.Notifications.NotificationButton", "fact_widget_deployments_id": "7775e8bbb6332d4c9ea873712ad576ba", "inserted_timestamp": "2023-10-29T23:33:38.223Z", "modified_timestamp": "2023-10-29T23:33:38.223Z", "__row_index": 11}