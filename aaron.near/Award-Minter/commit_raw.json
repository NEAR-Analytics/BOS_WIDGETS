{"tx_hash": "AHsvmwkfYHr1J44bpz68e19jBvjZC8iiJ4Vb1kBNj7ca", "action_id_social": "FYugL8iiQ9a95MaKyxis4VovUssSHJDdtKadV1jUdsea-0-widget", "block_id": 109772451, "block_timestamp": "2024-01-06T23:30:51.593Z", "signer_id": "aaron.near", "widget_name": "Award-Minter", "source_code": "const awardContract = \"main.isnft.near\";\r\nconst ownerId = \"codequity.near\"; // attribution\r\nlet accountId = context.accountId;\r\nconst gas = 200000000000000;\r\nconst deposit = 10000000000000000000000;\r\nconst metadata = {\r\n  name: state.award_title,\r\n  description: state.award_description,\r\n  properties: [],\r\n  image: `ipfs://${state.image.cid}`,\r\n};\r\n\r\nState.init({\r\n  award_title: \"\",\r\n  award_description: \"\",\r\n  award_citation: \"\",\r\n  recipient: \"\",\r\n  image: null,\r\n  showAlert: false,\r\n  toastMessage: \"\",\r\n});\r\n\r\n!state.image.cid ? props?.setActiveStep(0) : props?.setActiveStep(1);\r\n\r\nconst handleMint = () => {\r\n  if (!state.image.cid) {\r\n    return;\r\n  }\r\n  if (!state.award_title) {\r\n    console.log(\"Please enter name of award\");\r\n    State.update({\r\n      showAlert: true,\r\n      toastMessage: \"Please enter award name.\",\r\n    });\r\n    setTimeout(() => {\r\n      State.update({\r\n        showAlert: false,\r\n      });\r\n    }, 3000);\r\n  } else if (!state.award_description) {\r\n    State.update({\r\n      showAlert: true,\r\n      toastMessage: \"Please enter award description.\",\r\n    });\r\n    setTimeout(() => {\r\n      State.update({\r\n        showAlert: false,\r\n      });\r\n    }, 3000);\r\n  } else if (!state.award_citation) {\r\n    State.update({\r\n      showAlert: true,\r\n      toastMessage: \"Please enter citation.\",\r\n    });\r\n    setTimeout(() => {\r\n      State.update({\r\n        showAlert: false,\r\n      });\r\n    }, 3000);\r\n  } else {\r\n    asyncFetch(\"https://ipfs.near.social/add\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n      },\r\n      body: metadata,\r\n    }).then((res) => {\r\n      const cid = res.body.cid;\r\n      const Id = Math.floor(Math.random() * (9999999 - 100000 + 1) + 100000);\r\n\r\n      Near.call([\r\n        {\r\n          contractName: awardContract,\r\n          methodName: \"nft_mint\",\r\n          args: {\r\n            token_id: `${Date.now()}`,\r\n            metadata: {\r\n              title: state.award_title,\r\n              description: state.award_description,\r\n              media: `https://ipfs.io/ipfs/${state.image.cid}`,\r\n              issued_at: `${Date.now()}`,\r\n              expires_at: ,\r\n              starts_at: ,\r\n              updated_at: ,\r\n              extra: JSON.stringify({\r\n                type: \"award\",\r\n                citation: `${state.award_citation}`,\r\n              }),\r\n              reference: `ipfs://${cid}`,\r\n            },\r\n            receiver_id: state.recipient || accountId,\r\n          },\r\n          gas: gas,\r\n          deposit: deposit,\r\n        },\r\n      ]);\r\n    });\r\n    return;\r\n  }\r\n  console.log(\"passed checks\");\r\n};\r\n\r\nconst onChangeTitle = (award_title) => {\r\n  State.update({\r\n    award_title,\r\n  });\r\n};\r\n\r\nconst onChangeRecipient = (recipient) => {\r\n  State.update({\r\n    recipient,\r\n  });\r\n};\r\n\r\nconst onChangeDesc = (award_description) => {\r\n  State.update({\r\n    award_description,\r\n  });\r\n};\r\n\r\nconst onChangeCitation = (award_citation) => {\r\n  State.update({\r\n    award_citation,\r\n  });\r\n};\r\n\r\nconst ImageUploadCard = styled.div`\r\ndisplay:flex;\r\nflex-flow: column nowrap;\r\nalign-items: center;\r\n  width:80%;\r\n  border: 2px dashed #0d99ff;\r\n  border-radius: 1rem;\r\n  box-shadow: 4px 4px 20px 6px rgba(0,0,0,.2);\r\n  margin:30px auto;\r\n  padding:1.5rem;\r\n  text-align: center;\r\n`;\r\n\r\nconst Main = styled.div`\r\n  display: grid;\r\n  gap: 3rem;\r\n  align-content:center;\r\n  grid-template-columns: repeat(auto-fit, minmax(270px, 1fr));\r\n  justify-content: center;\r\n  // background: linear-gradient(180deg,#e4f1fb,hsla(0,0%,85.1%,0));\r\n  margin-top: 5px;\r\n  width:100%;\r\n  padding: 1rem;\r\n`;\r\n\r\nconst Text = styled.p`\r\nfont-size: .9rem;\r\ncolor: #525c76;\r\nline-height:1.rem;\r\nmargin: 3px;\r\n`;\r\n\r\nconst MainRoot = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 100%;\r\n    justify-content: space-between;\r\n`;\r\n\r\nconst Ellipse = styled.div`\r\nbackground-color:#dff3f9;\r\nheight: 100px;\r\nwidth: 100px;\r\nborder-radius: 50%;\r\n`;\r\n\r\nconst Card = styled.div`\r\npadding: 1em;\r\nborder: 1px solid #e5e8eb;\r\ngap: 2em;\r\nmargin: 10px auto;\r\nborder-radius: .7em;\r\ntext-align: left;\r\n`;\r\n\r\nconst ImageCard = styled.div`\r\n  box-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2);\r\n  height:100%;\r\n  max-height:100%;\r\n  width: 90%;\r\n  max-width: 500px;\r\n  border-radius: 1rem;\r\n  &>img{\r\n  object-fit: cover;\r\n  width: 100%;\r\n  height: 100%;\r\n  }\r\n`;\r\n\r\nconst Input = styled.input`\r\n  display: block;\r\n  padding:.5em;\r\n  width:100%;\r\n  border: 1px solid #e5e8eb;\r\n  border-radius: 10px;\r\n  outline: none;\r\n  background: #f4f5f6;\r\n  color: #525c76;\r\n  :focus{\r\n    border:1px solid #0d99ff;\r\n  }\r\n  ::placeholder {\r\n    color: palevioletred;\r\n  }\r\n`;\r\n\r\nconst TextArea = styled.textarea`\r\n  display: block;\r\n  padding:.5em;\r\n  width:100%;\r\n  border: 1px solid #e5e8eb;\r\n  border-radius: 10px;\r\n  outline: none;\r\n  background: #f4f5f6;\r\n  color: #525c76;\r\n  :focus{\r\n    border:1px solid #0d99ff;\r\n  }\r\n`;\r\n\r\nconst SelectTag = styled.select`\r\n  height: fit-content;\r\n  width: 300px;\r\n`;\r\n\r\nconst ChainIcon = styled.option`\r\n  display: flex;\r\n  height: 130px;\r\n  padding: 1rem auto;\r\n  &>img{\r\n    height:100px;\r\n    width: 100px;\r\n    object-fit: contain;\r\n  }\r\n`;\r\n\r\nreturn (\r\n  <MainRoot>\r\n    {state.showAlert && <Widget src=\"aaron.near/widget/Toast\" props={state} />}\r\n    <Main className=\"container-fluid\">\r\n      {!state.image.cid ? (\r\n        <div className=\"flex-grow-1\">\r\n          <ImageUploadCard className=\"flex-grow-1\">\r\n            <Ellipse />\r\n            <IpfsImageUpload\r\n              image={state.image}\r\n              className=\"btn text-decoration-none link-primary pe-auto\"\r\n            />\r\n            <div>\r\n              <Text>Supported file types: .jpg, .jpeg, .png, .webp, .gif</Text>\r\n              <Text>Max file size: 20mb</Text>\r\n            </div>\r\n          </ImageUploadCard>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <Card className=\"d-flex flex-column align-items-center w-100\">\r\n            <div>\r\n              <IpfsImageUpload\r\n                image={state.image}\r\n                className=\"btn btn-outline-primary border-0 rounded-3\"\r\n              />\r\n            </div>\r\n            <ImageCard>\r\n              <img\r\n                src={`https://ipfs.near.social/ipfs/${state.image.cid}`}\r\n                alt=\"uploaded image\"\r\n                width=\"100%\"\r\n                height=\"100%\"\r\n                className=\"rounded-3\"\r\n              />\r\n            </ImageCard>\r\n          </Card>\r\n          <div>\r\n            <Card>\r\n              <Card>\r\n                Name of Award:\r\n                <Input\r\n                  type=\"text\"\r\n                  value={state.award_title || \"\"}\r\n                  onChange={(e) => onChangeTitle(e.target.value)}\r\n                />\r\n              </Card>\r\n              <Card>\r\n                Award Description:\r\n                <TextArea\r\n                  type=\"text\"\r\n                  value={state.award_description || \"\"}\r\n                  onChange={(e) => onChangeDesc(e.target.value)}\r\n                />\r\n              </Card>\r\n              <Card>\r\n                Award Citation:\r\n                <TextArea\r\n                  type=\"text\"\r\n                  value={state.award_citation || \"\"}\r\n                  onChange={(e) => onChangeCitation(e.target.value)}\r\n                />\r\n              </Card>\r\n              <Card>\r\n                Award to:\r\n                <Input\r\n                  type=\"text\"\r\n                  placeholder={accountId}\r\n                  value={state.recipient}\r\n                  onChange={(e) => onChangeRecipient(e.target.value)}\r\n                />\r\n              </Card>\r\n            </Card>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary d-flex flex-column align-items-center mx-auto\"\r\n              onClick={handleMint}\r\n            >\r\n              Create and Send Award\r\n            </button>\r\n          </div>\r\n        </>\r\n      )}\r\n    </Main>\r\n  </MainRoot>\r\n);\r\n", "metadata": {"fork_of": "aaron.near/widget/Award-Minter@109745794"}, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/aaron.near/widget/Award-Minter", "fact_widget_deployments_id": "576ba4bc754855781521b179943d81a7", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 22}