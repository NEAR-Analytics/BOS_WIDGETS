{"tx_hash": "5JibRpySf6BrrVjNPTPc9e3Za51PB3bNniJ7N8q1YEoo", "action_id_social": "4Ew473rM7L5pSYWN8gdZxHg33JFPKhwcuXwy1zgwiF1C-0-widget", "block_id": 123861999, "block_timestamp": "2024-07-20T19:50:21.103Z", "signer_id": "treasury-devdao.near", "widget_name": "pages.dashboard.index", "source_code": "const treasuryAccount = \"treasury-devdao.near\";\nconst Wrapper = styled.div`\n  min-height: 80vh;\n  .flex-1 {\n    flex: 1;\n  }\n  .text-sm {\n    font-size: 12px;\n  }\n  .border-bottom {\n    border-bottom: 1px solid var(--border-color);\n  }\n  .text-align-end {\n    text-align: end !important;\n  }\n  .pointer {\n    cursor: pointer;\n  }\n  .dashboard-item > div {\n    min-width: 400px;\n  }\n`;\nconst [nearStakedTokens, setNearStakedTokens] = useState(null);\nconst balanceResp = fetch(\n  `https://api3.nearblocks.io/v1/account/${treasuryAccount}`\n);\nconst nearBalance = Big(balanceResp?.body?.account?.[0]?.amount ?? \"0\")\n  .div(Big(10).pow(24))\n  .toFixed();\nconst nearPrice = useCache(\n  () =>\n    asyncFetch(`https://api3.nearblocks.io/v1/charts/latest`).then((res) => {\n      return res.body.charts?.[0].near_price;\n    }),\n  \"price\",\n  { subscribe: false }\n);\nconst userFTTokens = useCache(\n  () =>\n    asyncFetch(\n      `https://api3.nearblocks.io/v1/account/${treasuryAccount}/inventory`\n    ).then((res) => {\n      const fts = res.body.inventory.fts;\n      const amounts = fts.map((ft) => {\n        const amount = ft.amount;\n        const decimals = ft.ft_meta.decimals;\n        const tokensNumber = Big(amount ?? \"0\")\n          .div(Big(10).pow(decimals))\n          .toFixed();\n        const tokenPrice = ft.ft_meta.price;\n        return Big(tokensNumber)\n          .mul(tokenPrice ?? 0)\n          .toFixed();\n      });\n      return {\n        totalCummulativeAmt: amounts.reduce(\n          (acc, value) => acc + parseFloat(value),\n          0\n        ),\n        fts,\n      };\n    }),\n  \"all-token-amount\",\n  { subscribe: false }\n);\nconst loading = (\n  <Widget src={\"devhub.near/widget/devhub.components.molecule.Spinner\"} />\n);\nconst code = `\n  <!doctype html>\n  <html>\n    <body>\n      <script>\n        const archiveNodeUrl = \"https://archival-rpc.mainnet.near.org\";\n        const treasuryAccount = \"${treasuryAccount}\"\n        async function getAccountBalance(stakingpool_id, account_id) {\n        return await fetch(archiveNodeUrl, {\n          method: \"POST\",\n          headers: {\n            \"content-type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            jsonrpc: \"2.0\",\n            id: \"dontcare\",\n            method: \"query\",\n            params: {\n              request_type: \"call_function\",\n              finality: 'final',\n              account_id: stakingpool_id,\n              method_name: \"get_account_total_balance\",\n              args_base64: btoa(\n                JSON.stringify({\n                  account_id: account_id,\n                })\n              ),\n            },\n          }),\n        })\n          .then((r) => r.json())\n          .then((r) =>\n            parseInt(\n              r.result.result\n                .map((c) => String.fromCharCode(c))\n                .join(\"\")\n                .replace(/\\\"/g, \"\")\n            )\n          );\n      }\n      async function getStakingPools() {\n        return await fetch(\"https://api.fastnear.com/v1/account/\" + treasuryAccount + \"/staking\").then(r => r.json())\n      }\n      window.onload = async () => {\n        const poolResp = await getStakingPools();\n        const pools = await Promise.all(poolResp.pools.map(async (i) => {\n          const balance = await getAccountBalance(i.pool_id, poolResp.account_id);\n          return balance;\n        }));\n        window.parent.postMessage({ handler: \"stakedNearPool\", pools }, \"*\");\n      };\n      </script>\n    </body>\n  </html> \n  `;\nconst iframe = (\n  <iframe\n    style={{\n      display: \"none\",\n    }}\n    srcDoc={code}\n    message={{}}\n    onMessage={(e) => {\n      switch (e.handler) {\n        case \"stakedNearPool\":\n          const pools = e.pools;\n          let sum = new Big(0);\n          pools.forEach((num) => {\n            let bigNum = new Big(num).div(1e24);\n            sum = sum.plus(bigNum);\n          });\n          setNearStakedTokens(sum.toFixed());\n          break;\n      }\n    }}\n  />\n);\nconst totalBalance = Big(nearBalance ?? \"0\")\n  .plus(Big(nearStakedTokens ?? 0 ?? \"0\"))\n  .mul(nearPrice ?? 1)\n  .plus(Big(userFTTokens?.totalCummulativeAmt ?? \"0\"))\n  .toFixed(4);\nreturn (\n  <Wrapper className=\"d-flex flex-column gap-3\">\n    <div className=\"d-flex justify-content-between gap-2 mt-3\">\n      {iframe}\n      <h4 className=\"page-header\">Dashboard</h4>\n      <div className=\"bg-black text-white p-1 px-2 h6 rounded-2\">\n        {treasuryAccount}\n      </div>\n    </div>\n    <div className=\"card card-body\" style={{ maxHeight: \"100px\" }}>\n      <div className=\"h5\">Total Balance</div>\n      {balanceResp === null || nearPrice === null ? (\n        loading\n      ) : (\n        <div className=\"fw-bold h3\">${totalBalance} USD</div>\n      )}\n    </div>\n    <div className=\"d-flex gap-2 flex-wrap dashboard-item\">\n      <Widget\n        src={\"treasury-devdao.near/widget/pages.dashboard.Portfolio\"}\n        props={{\n          ftTokens: userFTTokens.fts,\n          nearStakedTokens: nearStakedTokens,\n          nearBalance: nearBalance,\n          nearPrice: nearPrice,\n        }}\n      />\n      <Widget\n        src={\"treasury-devdao.near/widget/pages.dashboard.TransactionHistory\"}\n        props={{\n          nearPrice: nearPrice,\n        }}\n      />\n    </div>\n  </Wrapper>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/treasury-devdao.near/widget/pages.dashboard.index", "fact_widget_deployments_id": "1df7e8d546e938b04e675414dc583ad5", "inserted_timestamp": "2024-07-20T20:55:41.693Z", "modified_timestamp": "2024-07-20T20:55:41.693Z", "__row_index": 1}