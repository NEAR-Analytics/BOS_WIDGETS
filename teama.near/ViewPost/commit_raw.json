{"tx_hash": "7Qv43KX8U8jV5jiaBJfF7Qx4KAZC9S8VLJYSKqeD919J", "action_id_social": "Y8geYeqhf1DSw1kBvWTBeHPa3aCttEEzRrdUzJQS4sd-0-widget", "block_id": 108233017, "block_timestamp": "2023-12-18T07:21:16.828Z", "signer_id": "teama.near", "widget_name": "ViewPost", "source_code": "const postDetail = {\r\n  title: \"Titanic is so good but . . .\",\r\n  content: \"Titanic is sick, but why Jack died, he could just get on the door!\",\r\n  author: \"James Cameron\",\r\n  datetime: \"1995-10-20 10:00\",\r\n  votingPoints: 50,\r\n};\r\n\r\nconst postId = props.location.state\r\n  ? props.location.state.data\r\n  : \"No data received\";\r\n\r\n// const postId = 6;\r\n\r\nconsole.log(\"PostIdType:\", typeof postId);\r\nconsole.log(\"PostId:\", postId);\r\n\r\nconst boxStyle = {\r\n  padding: \"15px\",\r\n  margin: \"0px\",\r\n  display: \"inline-block\",\r\n  backgroundColor: \"#0D1282\",\r\n  color: \"#fff\",\r\n  cursor: \"pointer\",\r\n  float: \"left\",\r\n  display: \"block\",\r\n};\r\n\r\nconst searchPostBoxStyle = {\r\n  ...boxStyle,\r\n  backgroundColor: \"#fff\",\r\n};\r\n\r\nconst navbarContainerStyle = {\r\n  margin: \"0px\",\r\n  display: \"flex\",\r\n  backgroundColor: \"#0D1282\",\r\n};\r\n\r\nconst heapHeapHoorayBoxStyle = {\r\n  ...boxStyle,\r\n  fontFamily: \"Verdana, sans-serif\", // Different background color for \"Heapheap Hooray\"\r\n  fontSize: \"20px\",\r\n};\r\n\r\nconst Comment = ({ comments }) => {\r\n  const commentBoxStyle = {\r\n    width: \"97%\", // Adjust the width as needed\r\n    margin: \"0px\",\r\n    marginLeft: \"1%\",\r\n    padding: \"10px\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    border: \"1px solid transparent\", // Transparent main border\r\n    borderBottom: \"1px solid #ccc\", // Visible right border\r\n  };\r\n\r\n  const votingSectionStyle = {\r\n    width: \"20%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n  };\r\n\r\n  const buttonStyle = {\r\n    padding: \"10px 15px\",\r\n    color: \"white\",\r\n    border: \"none\",\r\n    borderRadius: \"5px\",\r\n    cursor: \"pointer\",\r\n    outline: \"none\",\r\n    marginLeft: \"15%\",\r\n  };\r\n  return (\r\n    <div style={commentBoxStyle}>\r\n      <div className=\"comment\">\r\n        <div>{comments.comment}</div>\r\n        <div style={{ color: \"#333\", fontSize: \"12px\" }}>{comments.author}</div>\r\n        <div className=\"comment-info\">\r\n          <p style={{ color: \"#333\", fontSize: \"12px\" }}>\r\n            Commented at: {comments.datetime}\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      <div style={votingSectionStyle}>\r\n        <p style={{ margin: \"10px\", fontSize: \"20px\", color: \"#0D1282\" }}>\r\n          {comments.votingPoints}\r\n        </p>\r\n        <button\r\n          type=\"button\"\r\n          style={buttonStyle}\r\n          className=\"btn btn-success vote-btn\"\r\n          onClick={() => console.log(\"Vote\")}\r\n        >\r\n          Vote\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst abi = fetch(\r\n  `https://gist.githubusercontent.com/idea2547/6918a9564618da24aab88d248db2b520/raw/d2d666c37c852ab2a7119d7bcf53dd89fe2cf9c9/gistfile1.txt`\r\n);\r\n\r\nconst TutorContract = new ethers.Contract(\r\n  \"0xE0602E0eAAd2fF151395D884196910FEaeFAa1cC\",\r\n  abi.body,\r\n  Ethers.provider().getSigner()\r\n);\r\n\r\nTutorContract.posts([postId]).then((result) => {\r\n  // console.log(result); //\r\n  State.update({\r\n    author: result[0],\r\n    content: result[1],\r\n    title: result[2],\r\n    votingPoints: Big(result[3]).toNumber(),\r\n    postId: Big(result[4]).toNumber(),\r\n  });\r\n  // Update state or perform other actions with the result\r\n});\r\n\r\nconst [commentData, setCommentData] = useState([]);\r\n\r\nuseEffect(() => {\r\n  const fetchData = () => {\r\n    try {\r\n      // Get postIdCounter from the contract\r\n      const commentCounter = 6;\r\n      console.log(commentCounter);\r\n      // Fetch posts from the contract\r\n      const fetchedComments = [];\r\n      for (let i = 0; i <= commentCounter; i++) {\r\n        TutorContract.comments([i]).then((result) => {\r\n          console.log(result); //\r\n          State.update({});\r\n          // Update state or perform other actions with the result\r\n          console.log(\"-----------------\");\r\n          if (Big(result[2]).toNumber() == postId) {\r\n            let com = {\r\n              comment: result[1],\r\n              votingPoints: Big(result[3]).toNumber(),\r\n              author: result[0],\r\n              datetime: \"2023-10-19 19:00\",\r\n            };\r\n            console.log(com);\r\n            fetchedComments.push(com);\r\n          }\r\n        });\r\n      }\r\n\r\n      setCommentData(fetchedComments);\r\n    } catch (error) {\r\n      console.error(\"Error fetching posts from the contract:\", error);\r\n    }\r\n  };\r\n\r\n  fetchData();\r\n}, []);\r\nconsole.log(\"data\", commentData);\r\n\r\nconst [sortOption, setSortOption] = useState(\"mostVoted\");\r\nconst [sortedComments, setSortedComments] = useState([]);\r\n\r\nuseEffect(() => {\r\n  // Sort by most voted initially\r\n  const sortedByVote = [...commentData].sort(\r\n    (a, b) => b.votingPoints - a.votingPoints\r\n  );\r\n  setSortedComments(sortedByVote);\r\n}, []); // Empty dependency array ensures the effect runs only once, on mount\r\n\r\nconst handleSortChange = (option) => {\r\n  setSortOption(option);\r\n\r\n  if (option === \"mostRecent\") {\r\n    // Sort by most recent\r\n    const sortedByRecent = [...commentData].sort((a, b) => {\r\n      const dateA = new Date(a.datetime);\r\n      const dateB = new Date(b.datetime);\r\n\r\n      console.log(dateA, dateB); // Log parsed dates for debugging\r\n\r\n      return dateB - dateA;\r\n    });\r\n    setSortedComments(sortedByRecent);\r\n  } else if (option === \"mostVoted\") {\r\n    // Sort by most voted\r\n    const sortedByVote = [...commentData].sort(\r\n      (a, b) => b.votingPoints - a.votingPoints\r\n    );\r\n    setCommentData(sortedByVote);\r\n  }\r\n};\r\n\r\nconst votingSectionStyle = {\r\n  display: \"flex\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"flex-end\",\r\n};\r\n\r\nconst handleVotePost = () => {\r\n  try {\r\n    TutorContract.vote(state.postId, 1).then((transactionHash) => {\r\n      console.log(transactionHash);\r\n    });\r\n    // State.createPost({ _content: content, _title: title });\r\n  } catch (error) {\r\n    console.error(\"Error creating post:\", error.message);\r\n  }\r\n};\r\n\r\nconst [commentContent, setCommentContent] = useState(\"\");\r\n\r\nconst handleComment = () => {\r\n  try {\r\n    TutorContract.createComment(state.postId, commentContent).then(\r\n      (transactionHash) => {\r\n        console.log(transactionHash);\r\n      }\r\n    );\r\n    // State.createPost({ _content: content, _title: title });\r\n  } catch (error) {\r\n    console.error(\"Error creating post:\", error.message);\r\n  }\r\n};\r\n\r\nreturn (\r\n  <div\r\n    style={{\r\n      fontFamily: \"Verdana\",\r\n      backgroundColor: \"#fff\",\r\n      color: \"#000\",\r\n      height: \"100h\",\r\n    }}\r\n  >\r\n    <ul style={navbarContainerStyle}>\r\n      <li style={heapHeapHoorayBoxStyle}>Heapheap Hooray</li>\r\n      <li style={boxStyle}>\r\n        <a href=\"#\" style={{ textDecoration: \"none\", color: \"#fff\" }}>\r\n          Create Post\r\n        </a>\r\n      </li>\r\n      <li style={searchPostBoxStyle}>\r\n        <a href=\"#\" style={{ textDecoration: \"none\", color: \"#000\" }}>\r\n          Search Post\r\n        </a>\r\n      </li>\r\n      <li style={boxStyle}>\r\n        <a href=\"#\" style={{ textDecoration: \"none\", color: \"#fff\" }}>\r\n          My Post\r\n        </a>\r\n      </li>\r\n    </ul>\r\n    <div style={{ padding: \"4%\" }}>\r\n      <h2>{state.title}</h2>\r\n      <div>\r\n        <p style={{ fontSize: \"20px\" }}>{state.content}</p>\r\n      </div>\r\n      <div\r\n        style={{ textAlign: \"right\", marginBottom: \"2%\", marginRight: \"1%\" }}\r\n      >\r\n        <div style={{ color: \"#333\", fontSize: \"13px\" }}>by {state.author}</div>\r\n        <div style={{ color: \"#333\", fontSize: \"13px\" }}>\r\n          on {postDetail.datetime}\r\n        </div>\r\n      </div>\r\n      <div style={{ textAlign: \"right\" }}>\r\n        <div style={{ marginRight: \"1%\", color: \"#333\", fontSize: \"13px\" }}>\r\n          Love this post?\r\n        </div>\r\n        <div\r\n          style={{\r\n            marginBottom: \"0.5%\",\r\n            marginRight: \"1%\",\r\n            color: \"#333\",\r\n            fontSize: \"13px\",\r\n          }}\r\n        >\r\n          let's vote it to grow our community!\r\n        </div>\r\n        <div class=\"votePostContainer\" style={votingSectionStyle}>\r\n          <div style={{ fontSize: \"30px\" }}>{state.votingPoints}</div>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-success vote-btn\"\r\n            id=\"votePostBtn\"\r\n            style={{\r\n              marginLeft: \"2%\",\r\n              marginRight: \"1%\",\r\n              backgroundColor: \"#0D1282\",\r\n              color: \"white\",\r\n              padding: \"10px 15px\",\r\n            }}\r\n            onClick={handleVotePost}\r\n          >\r\n            Vote Post\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mt-3\">\r\n        <label htmlFor=\"sortOptions\" className=\"form-label\">\r\n          Sort By:\r\n        </label>\r\n        <select\r\n          id=\"sortOptions\"\r\n          className=\"form-select\"\r\n          onChange={(e) => handleSortChange(e.target.value)}\r\n          value={sortOption}\r\n          style={{\r\n            backgroundColor: \"white\",\r\n            color: \"#333\",\r\n            border: \"1px solid\",\r\n            width: \"30%\",\r\n          }}\r\n        >\r\n          <option value=\"mostRecent\">Most Recent</option>\r\n          <option value=\"mostVoted\">Most Voted</option>\r\n        </select>\r\n      </div>\r\n\r\n      <div id=\"commentsContainer\" style={{ marginTop: \"5%\" }}>\r\n        <h4>Comments</h4>\r\n        {commentData.map((comment, index) => (\r\n          <Comment key={index} comments={comment} />\r\n        ))}\r\n      </div>\r\n\r\n      <div class=\"comments-section\" style={{ marginTop: \"5%\" }}>\r\n        <div class=\"mb-3\">\r\n          <label for=\"commentContent\" class=\"form-label\">\r\n            Your Comment:\r\n          </label>\r\n          <textarea\r\n            id=\"postContent\"\r\n            name=\"postContent\"\r\n            placeholder=\" Share your though\"\r\n            rows=\"4\"\r\n            style={{ width: \"100%\", fontSize: \"15px\" }}\r\n            value={commentContent}\r\n            onChange={(e) => setCommentContent(e.target.value)}\r\n            required\r\n          ></textarea>\r\n        </div>\r\n        <button\r\n          type=\"submit\"\r\n          className=\"btn btn-primary\"\r\n          style={{\r\n            marginLeft: \"auto\",\r\n            display: \"block\",\r\n            backgroundColor: \"#0D1282\",\r\n            color: \"white\",\r\n          }}\r\n          onClick={handleComment}\r\n        >\r\n          Submit Comment\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/teama.near/widget/ViewPost", "fact_widget_deployments_id": "fd911631d2907b7b71f4f3b5b275edc5", "inserted_timestamp": "2023-12-18T09:23:01.629Z", "modified_timestamp": "2023-12-20T03:22:11.422Z", "__row_index": 0}