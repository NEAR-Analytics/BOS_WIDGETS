{"tx_hash": "GqvWFsmvDn6eoCAXncWe8qy5p4beTj37xson1WhyTkLp", "action_id_social": "9L8RbeKFUkZemv1fPvWxh1LL2sKfZ7A3Coh2catyWLxs-0-widget", "block_id": 98591791, "block_timestamp": "2023-08-11T21:00:21.270Z", "signer_id": "kenrou-it.near", "widget_name": "SayALot.lib.comment", "source_code": "const { isTest, stateUpdate, libCalls } = props;\r\n\r\nconst prodAction = \"sayALotComment\";\r\nconst testAction = `test_${prodAction}`;\r\nconst action = isTest ? testAction : prodAction;\r\n\r\nfunction createComment(props) {\r\n  const { comment, onCommit, onCancel } = props;\r\n\r\n  saveComment(comment, onCommit, onCancel);\r\n\r\n  resultLibCalls = resultLibCalls.filter((call) => {\r\n    return call.functionName !== \"createComment\";\r\n  });\r\n\r\n  return comment;\r\n}\r\n\r\n//addressForComments should be the realArticleId of the article\r\nfunction composeCommentData(comment) {\r\n  const data = {\r\n    index: {\r\n      [action]: JSON.stringify({\r\n        key: comment.realArticleId,\r\n        value: {\r\n          type: \"md\",\r\n          comment,\r\n        },\r\n      }),\r\n    },\r\n  };\r\n\r\n  return data;\r\n}\r\n\r\nfunction saveComment(comment, onCommit, onCancel) {\r\n  if (comment.text) {\r\n    const newData = composeCommentData(comment);\r\n\r\n    Social.set(newData, {\r\n      force: true,\r\n      onCommit,\r\n      onCancel,\r\n    });\r\n  }\r\n}\r\n\r\nfunction getComments(props) {\r\n  const { realArticleId } = props;\r\n  return Social.index(action, realArticleId, {\r\n    order: \"desc\",\r\n  });\r\n}\r\n\r\nfunction getCommentBlackListByBlockHeight() {\r\n  return [98588599];\r\n}\r\n\r\nfunction filterInvalidArticlesIndexes(commentIndexes) {\r\n  return commentIndexes.filter(\r\n    (commentIndexes) =>\r\n      !getCommentBlackListByBlockHeight().includes(commentIndexes.blockHeight) // Comment is not in blacklist\r\n  );\r\n}\r\n\r\nfunction getValidComments(props) {\r\n  const commentIndexes = getComments(props);\r\n  const validCommentsIndexes = filterInvalidArticlesIndexes(commentIndexes);\r\n\r\n  return validCommentsIndexes;\r\n}\r\n\r\nfunction libCall(call) {\r\n  if (call.functionName === \"createComment\") {\r\n    return createComment(call.props);\r\n  } else if (call.functionName === \"getValidComments\") {\r\n    return getValidComments(call.props);\r\n  }\r\n}\r\n\r\nlet resultLibCalls = [];\r\nif (libCalls && libCalls.length > 0) {\r\n  console.log(\r\n    \"Calling functions\",\r\n    libCalls.map((lc) => lc.functionName)\r\n  );\r\n  const updateObj = {};\r\n  resultLibCalls = [...libCalls];\r\n  libCalls.forEach((call) => {\r\n    updateObj[call.key] = libCall(call);\r\n  });\r\n\r\n  updateObj.libCalls = resultLibCalls;\r\n  stateUpdate(updateObj);\r\n}\r\n\r\nreturn <>{}</>;\r\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/kenrou-it.near/widget/SayALot.lib.comment", "fact_widget_deployments_id": "ff7673edaf17014c704577ad037df4ae", "inserted_timestamp": "2023-08-11T22:43:44.578Z", "modified_timestamp": "2023-08-11T22:43:44.578Z", "__row_index": 30}