{"tx_hash": "AQg5439HFrJNwDZwseg2VgEFhXjwrMYXHmqqFkGpxA2G", "action_id_social": "8TqukVXM4iS6kfYWg6hTGA2FMDtErgGX5Z3g6BtizrWb-0-widget", "block_id": 102261781, "block_timestamp": "2023-09-30T00:36:41.985Z", "signer_id": "kenrou-it.near", "widget_name": "SayALot", "source_code": "//===============================================INITIALIZATION=====================================================\r\nlet { sharedBlockHeight, tagShared, isTest, accountId } = props;\r\n\r\nconst initSbtName = \"fractal.i-am-human.near\";\r\n\r\nconst sbtName = state.sbt;\r\n\r\nconst initLibCalls = [\r\n  {\r\n    functionName: \"getLastEditArticles\",\r\n    key: \"articles\",\r\n    props: {\r\n      env: isTest ? \"test\" : \"prod\",\r\n      filterBy: {\r\n        parameterName: \"\",\r\n        parameterValue: undefined,\r\n      },\r\n      sbtName: initSbtName,\r\n    },\r\n  },\r\n  {\r\n    functionName: \"canUserCreateArticle\",\r\n    key: \"canLoggedUserCreateArticle\",\r\n    props: {\r\n      accountId: context.accountId,\r\n      sbtName: initSbtName,\r\n    },\r\n  },\r\n];\r\n\r\nconsole.log(\"state: \", state);\r\n\r\n// console.log(\"canLoggedUserCreateArticle: \", canLoggedUserCreateArticle);\r\n\r\nif (!accountId) accountId = context.accountId;\r\n\r\nconst tabs = {\r\n  SHOW_ARTICLES_LIST: { id: 0 },\r\n  SHOW_ARTICLE: { id: 1 },\r\n  ARTICLE_WORKSHOP: { id: 2 },\r\n  SHOW_ARTICLES_LIST_BY_AUTHORS: { id: 3 },\r\n};\r\n\r\nState.init({\r\n  displayedTabId: tabs.SHOW_ARTICLES_LIST.id,\r\n  articleToRenderData: {},\r\n  filterBy: tagShared\r\n    ? { parameterName: \"tag\", parameterValue: tagShared }\r\n    : { parameterName: \"\" },\r\n  authorsProfiles: [],\r\n  libCalls: initLibCalls,\r\n  sbtName: \"fractal.i-am-human.near\",\r\n  sbts: [sbtWhiteList[0]],\r\n});\r\n\r\nlet newLibCalls = state.libCalls;\r\nnewLibCalls[0].props.filterBy = state.filterBy;\r\n\r\nState.update({ libCalls: newLibCalls });\r\n\r\n//=============================================END INITIALIZATION===================================================\r\n\r\n//==================================================CONSTS==========================================================\r\n\r\n//const authorForWidget = \"sayalot.near\";\r\nconst authorForWidget =\r\n  \"f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb\";\r\n// const authorForWidget = \"kenrou-it.near\";\r\nconst libSrcArray = [`kenrou-it.near/widget/SayALot.lib.article`];\r\nconst thisWidgetName = \"SayALot\";\r\n\r\nconst sbtWhiteList = [\"fractal.i-am-human.near\", \"community.i-am-human.near\"];\r\n\r\n// let writersWhiteList = [\r\n//   \"neardigitalcollective.near\",\r\n//   \"blaze.near\",\r\n//   \"jlw.near\",\r\n//   \"kazanderdad.near\",\r\n//   \"joep.near\",\r\n//   \"sarahkornfeld.near\",\r\n//   \"yuensid.near\",\r\n//   \"shubham007.near\",\r\n//   \"fiftycent.near\",\r\n//   \"ozymandius.near\",\r\n//   \"chloe.near\",\r\n// ];\r\n\r\n// const sayALotWorkers = [\r\n//   \"silkking.near\",\r\n//   \"f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb\",\r\n//   \"blaze.near\",\r\n//   \"ayelen.near\",\r\n//   \"kenrou-it.near\",\r\n// ];\r\n\r\n// if (isTest) {\r\n//   writersWhiteList = sayALotWorkers;\r\n// }\r\n\r\nconst widgets = {\r\n  sayALot: `${authorForWidget}/widget/${thisWidgetName}`,\r\n  create: `${authorForWidget}/widget/SayALot.Create`,\r\n  styledComponents: \"rubycop.near/widget/NDC.StyledComponents\",\r\n  header: `${authorForWidget}/widget/SayALot.NavBar`,\r\n  showArticlesList: `${authorForWidget}/widget/SayALot.AllArticlesList`,\r\n  showArticlesListSortedByAuthors: `${authorForWidget}/widget/SayALot.AllArticlesSortByAuthors`,\r\n  articlesByAuthorCard: `${authorForWidget}/widget/SayALot.ArticlesByAuthorCard`,\r\n  generalCard: `${authorForWidget}/widget/SayALot.GeneralCard`,\r\n  articleView: `${authorForWidget}/widget/SayALot.ArticleView`,\r\n  reactions: `${authorForWidget}/widget/SayALot.Reactions`,\r\n  addComment: `${authorForWidget}/widget/SayALot.AddComment`,\r\n  commentView: `${authorForWidget}/widget/SayALot.CommentView`,\r\n  // candidatePage: `#/rubycop.near/widget/NDC.Nomination.Candidate.Page`,\r\n  libComment: `${authorForWidget}/widget/SayALot.lib.comment`,\r\n  libArticle: `kenrou-it.near/widget/SayALot.lib.article`,\r\n  libEmojis: `${authorForWidget}/widget/SayALot.lib.emojis`,\r\n  libUpVotes: `${authorForWidget}/widget/SayALot.lib.upVotes`,\r\n  upVoteButton: `${authorForWidget}/widget/SayALot.UpVoteButton`,\r\n};\r\n\r\nconst profile = props.profile ?? Social.getr(`${accountId}/profile`);\r\nif (profile === null) {\r\n  return \"Loading\";\r\n}\r\n\r\nlet authorProfile = {};\r\nif (state.filterBy.parameterName == \"author\") {\r\n  authorProfile = Social.getr(`${state.filterBy.parameterValue}/profile`);\r\n  // if (!authorProfile) return \"Loading...\";\r\n}\r\n\r\nconst brand = {\r\n  homePageId: tabs.SHOW_ARTICLES_LIST.id,\r\n  brandName: \"Say a lot\",\r\n  logoHref:\r\n    \"https://ipfs.near.social/ipfs/bafkreiaqxa4st4vp4rtq2iyobdgqe5tpfg55mmyvfg25upd2qplcxylyfi\",\r\n  logoRemWidth: 6,\r\n  logoRemHeight: 6,\r\n};\r\n\r\nconst navigationPills = [\r\n  { id: tabs.SHOW_ARTICLES_LIST.id, title: \"Articles\" },\r\n  { id: tabs.SHOW_ARTICLES_LIST_BY_AUTHORS.id, title: \"Authors\" },\r\n];\r\n\r\nconst navigationButtons = [\r\n  // { id: tabs.ARTICLE_WORKSHOP.id, title: \"+Create article\" },\r\n];\r\n\r\nconst sbts = state.sbts;\r\n\r\nconst initialBodyAtCreation = state.editArticleData.body;\r\n\r\n//=================================================END CONSTS=======================================================\r\n\r\n//=================================================GET DATA=========================================================\r\nconst finalArticles = state.articles;\r\n//===============================================END GET DATA=======================================================\r\n\r\n//=============================================STYLED COMPONENTS====================================================\r\nconst CallLibrary = styled.div`\r\n  display: none;\r\n`;\r\n//===========================================END STYLED COMPONENTS==================================================\r\n\r\n//=================================================FUNCTIONS========================================================\r\nfunction getValidEditArticleDataTags() {\r\n  let tags = state.editArticleData.tags;\r\n  let newFormatTags = {};\r\n\r\n  tags &&\r\n    tags.map((tag) => {\r\n      newFormatTags[tag] = \"\";\r\n    });\r\n  return newFormatTags;\r\n}\r\n\r\nconst initialCreateState = {\r\n  articleId: state.editArticleData.articleId ?? \"\",\r\n  articleBody: state.editArticleData.body ?? initialBodyAtCreation,\r\n  tags: state.editArticleData.tags ? getValidEditArticleDataTags() : {},\r\n  libCalls: [],\r\n};\r\n\r\nfunction stateUpdate(obj) {\r\n  State.update(obj);\r\n}\r\n\r\nfunction handleOpenArticle(articleToRenderData) {\r\n  State.update({\r\n    displayedTabId: tabs.SHOW_ARTICLE.id,\r\n    articleToRenderData,\r\n    editArticleData: undefined,\r\n  });\r\n}\r\n\r\nfunction handleEditArticle(articleData) {\r\n  State.update({\r\n    displayedTabId: tabs.ARTICLE_WORKSHOP.id,\r\n    editArticleData: articleData,\r\n  });\r\n}\r\n\r\nfunction handleFilterArticles(filter) {\r\n  State.update({\r\n    displayedTabId: tabs.SHOW_ARTICLES_LIST.id,\r\n    filterBy: { parameterName: filter.filterBy, parameterValue: filter.value },\r\n    editArticleData: undefined,\r\n  });\r\n}\r\n\r\nfunction handleBackButton() {\r\n  props.editArticleData\r\n    ? State.update({\r\n        displayedTabId: tabs.SHOW_ARTICLE.id,\r\n        editArticleData: undefined,\r\n        filterBy: {\r\n          parameterName: \"\",\r\n          parameterValue: undefined,\r\n          handleBackClicked: true,\r\n        },\r\n      })\r\n    : State.update({\r\n        displayedTabId: tabs.SHOW_ARTICLES_LIST.id,\r\n        articleToRenderData: {},\r\n        editArticleData: undefined,\r\n        filterBy: {\r\n          parameterName: \"\",\r\n          parameterValue: undefined,\r\n          handleBackClicked: true,\r\n        },\r\n      });\r\n}\r\n\r\nfunction handleGoHomeButton() {\r\n  State.update({\r\n    displayedTabId: tabs.SHOW_ARTICLES_LIST.id,\r\n    articleToRenderData: {},\r\n    filterBy: { parameterName: \"\", parameterValue: {} },\r\n    editArticleData: undefined,\r\n  });\r\n}\r\n\r\nfunction handlePillNavigation(navegateTo) {\r\n  State.update({ displayedTabId: navegateTo, editArticleData: undefined });\r\n}\r\n\r\nfunction callLibs(srcArray, stateUpdate, libCalls) {\r\n  return (\r\n    <>\r\n      {srcArray.map((src) => {\r\n        return (\r\n          <Widget\r\n            src={src}\r\n            props={{\r\n              isTest,\r\n              stateUpdate,\r\n              libCalls,\r\n            }}\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n}\r\n\r\n//===============================================END FUNCTIONS======================================================\r\nreturn (\r\n  <>\r\n    <Widget\r\n      src={widgets.header}\r\n      props={{\r\n        isTest,\r\n        stateUpdate,\r\n        handleGoHomeButton,\r\n        handlePillNavigation,\r\n        brand,\r\n        pills: navigationPills,\r\n        navigationButtons,\r\n        displayedTabId: state.displayedTabId,\r\n        handleFilterArticles,\r\n        filterParameter: state.filterBy.parameterName,\r\n        handleBackButton,\r\n        tabs,\r\n      }}\r\n    />\r\n    {state.displayedTabId == tabs.SHOW_ARTICLES_LIST.id && (\r\n      <Widget\r\n        src={widgets.showArticlesList}\r\n        props={{\r\n          isTest,\r\n          finalArticles,\r\n          tabs,\r\n          widgets,\r\n          addressForArticles,\r\n          handleOpenArticle,\r\n          handleFilterArticles,\r\n          authorForWidget,\r\n          initialCreateState,\r\n          editArticleData: state.editArticleData,\r\n          callLibs,\r\n          handleFilterArticles,\r\n          handleEditArticle,\r\n          showCreateArticle: state.canLoggedUserCreateArticle,\r\n          sbtWhiteList,\r\n        }}\r\n      />\r\n    )}\r\n    {state.displayedTabId == tabs.SHOW_ARTICLE.id && (\r\n      <Widget\r\n        src={widgets.articleView}\r\n        props={{\r\n          isTest,\r\n          widgets,\r\n          handleFilterArticles,\r\n          articleToRenderData: state.articleToRenderData,\r\n          authorForWidget,\r\n          handleEditArticle,\r\n        }}\r\n      />\r\n    )}\r\n\r\n    {state.displayedTabId == tabs.SHOW_ARTICLES_LIST_BY_AUTHORS.id && (\r\n      <Widget\r\n        src={widgets.showArticlesListSortedByAuthors}\r\n        props={{\r\n          isTest,\r\n          finalArticles,\r\n          tabs,\r\n          widgets,\r\n          handleOpenArticle,\r\n          handleFilterArticles,\r\n          authorForWidget,\r\n        }}\r\n      />\r\n    )}\r\n\r\n    {state.displayedTabId == tabs.ARTICLE_WORKSHOP.id && (\r\n      <Widget\r\n        src={widgets.create}\r\n        props={{\r\n          isTest,\r\n          addressForArticles,\r\n          authorForWidget,\r\n          stateUpdate,\r\n          widgets,\r\n          initialBody: initialBodyAtCreation,\r\n          initialCreateState,\r\n          editArticleData: state.editArticleData,\r\n          callLibs,\r\n          handleFilterArticles,\r\n          handleEditArticle,\r\n          sbtWhiteList,\r\n        }}\r\n      />\r\n    )}\r\n\r\n    <CallLibrary>\r\n      {callLibs(libSrcArray, stateUpdate, state.libCalls)}\r\n    </CallLibrary>\r\n  </>\r\n);\r\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/kenrou-it.near/widget/SayALot", "fact_widget_deployments_id": "bdbe8bad39a1a40d25690c74791a359d", "inserted_timestamp": "2023-09-30T02:36:20.501Z", "modified_timestamp": "2023-09-30T02:36:20.501Z", "__row_index": 135}