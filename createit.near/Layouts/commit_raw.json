{"tx_hash": "8WYo51c5HjRR1RysMFWboaWde3pATcnUuSLBWxnqNgNc", "action_id_social": "GkBRFC1FGv786Vne9mGrYNvkY8A64Xw1XD3VmCanWe4f-0-widget", "block_id": 99698855, "block_timestamp": "2023-08-26T11:33:05.772Z", "signer_id": "createit.near", "widget_name": "Layouts", "source_code": "const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  width: 100%;\n`;\n\nconst Header = styled.div`\n  background-color: red;\n  height: 20px;\n`;\nconst Content = styled.div`\n  flex-grow: 1;\n  background-color: blue;\n`;\nconst Footer = styled.div`\n  background-color: red;\n  height: 20px;\n`;\n\nfunction App() {\n  return (\n    <Container>\n      <Header />\n      <Content />\n      <Footer />\n    </Container>\n  );\n}\n\nconst Row = styled.div`\n  display: flex;\n  height: 100%;\n  width: 100%;\n`;\n\nconst Column = styled.div`\n  flex: 1;\n  height: 100%;\n  flex-grow: 1;\n`;\n\nconst Sidebar = styled.div`\n  background-color: red;\n  width: 60px;\n  height: 100%;\n`;\n\nconst MainContent = styled.div`\n  height: 100%;\n  width: 100%;\n  background-color: blue;\n`;\n\nfunction Dashboard() {\n  return (\n    <Row>\n      <Column>\n        <Sidebar />\n      </Column>\n      <Column>\n        <MainContent />\n      </Column>\n    </Row>\n  );\n}\n\nconst SplitScreen = styled.div`\n  display: flex;\n  height: 100%;\n  width: 100%;\n  justify-content: space-between;\n`;\n\nconst LeftPanel = styled.div`\n  flex-grow: 1;\n  background-color: blue;\n`;\nconst RightPanel = styled.div`\n  flex-grow: 1;\n  background-color: red;\n`;\n\nfunction SplitLayout() {\n  return (\n    <SplitScreen>\n      <LeftPanel />\n      <RightPanel />\n    </SplitScreen>\n  );\n}\n\n// const TabContainer = styled.div`\n//   display: flex;\n//   flex-direction: column;\n//   height: 100%;\n//   width: 100%;\n// `;\n\n// This one will not work as a template unless we don't use state, maybe.\n// function TabbedComponent() {\n//   State.init({ activeTab: \"home\"});\n//   const [activeTab, setActiveTab] = useState(\"home\");\n\n//   return (\n//     <TabContainer>\n//       <Tabs activeTab={state.activeTab} onTabChange={(setActiveTab)} />\n//       {activeTab === \"home\" && <Home />}\n//       {activeTab === \"profile\" && <Profile />}\n//       {activeTab === \"settings\" && <Settings />}\n//     </TabContainer>\n//   );\n// }\n\nconst FixedSidebarLayout = styled.div`\n  display: flex;\n  height: 100%;\n  width: 100%;\n`;\n\nfunction Layout() {\n  return (\n    <FixedSidebarLayout>\n      <Sidebar />\n      <MainContent />\n    </FixedSidebarLayout>\n  );\n}\n\nconst MasterLayout = () => {\n  function setSelectedLayout(layout) {\n    State.update({\n      selectedLayout: layout,\n    });\n  }\n  return (\n    <div>\n      <div>\n        <button onClick={() => setSelectedLayout(\"SingleContainer\")}>\n          Single Container\n        </button>\n        <button onClick={() => setSelectedLayout(\"GridLayout\")}>\n          Grid Layout\n        </button>\n        <button onClick={() => setSelectedLayout(\"SplitScreen\")}>\n          Split Screen\n        </button>\n        {/* <button onClick={() => setSelectedLayout('TabbedComponent')}>Tabbed Navigation</button> */}\n        <button onClick={() => setSelectedLayout(\"FixedSidebarLayout\")}>\n          Fixed Sidebar\n        </button>\n      </div>\n\n      <div\n        style={{\n          height: \"500px\",\n          width: \"100%\",\n          border: \"1px solid #ccc\",\n          marginTop: \"20px\",\n        }}\n      >\n        {state.selectedLayout === \"SingleContainer\" && <App />}\n        {state.selectedLayout === \"GridLayout\" && <Dashboard />}\n        {state.selectedLayout === \"SplitScreen\" && <SplitLayout />}\n        {/* {selectedLayout === 'TabbedComponent' && <TabbedComponent />} */}\n        {state.selectedLayout === \"FixedSidebarLayout\" && <Layout />}\n      </div>\n    </div>\n  );\n};\n\nreturn <MasterLayout />;\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/createit.near/widget/Layouts", "fact_widget_deployments_id": "3652d03489538230281e70ea864f7ca0", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}