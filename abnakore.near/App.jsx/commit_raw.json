{"tx_hash": "DY1mXroNGWfmb8P3haBSgBz4GXkkHt84pmCyu7tozyoY", "action_id_social": "Ft31JQAZAh22vin7ApJtky1vYahyJ12qPNBZ9dYmRidV-0-widget", "block_id": 110658861, "block_timestamp": "2024-01-17T20:58:00.565Z", "signer_id": "abnakore.near", "widget_name": "App.jsx", "source_code": "// Get the user's accountId\nconst accountId = context.accountId;\n\n// Declaring variables\nconst voteId = 0;\nconst [passcodeEntered, setPasscodeEntered] = useState(\"\");\nconst [candidate, setCandidate] = useState(0);\nconst [party, setparty] = useState(0);\n\n// All the votes\nconst [allVotes, setAllVotes] = useState([]);\nconst [voteToRender, setVoteToRender] = useState([]);\nconst [opened, setOpened] = useState(false);\n\n// Pages that will be displayed in the aside\nconst [pages, setPages] = useState([\n  {\n    name: \"Voting Page\",\n    link: `https://near.org/abnakore.near/widget/App.jsx?vote=${voteToRender.id}`,\n  },\n  {\n    name: \"Result\",\n    link: `https://near.org/abnakore.near/widget/Result.jsx?vote=${voteToRender.id}`,\n  },\n  //   { name: \"Log out\", link: \"https://near.org/signin\" },\n]);\n\n// Add admin pages if the user is the creator of the vote\nuseEffect(() => {\n  console.log(\n    \"Is Admin?\",\n    voteToRender.creator,\n    accountId,\n    voteToRender.creator === accountId\n  );\n  if (voteToRender.creator === accountId) {\n    setPages([\n      {\n        name: \"Voting Page\",\n        link: `https://near.org/abnakore.near/widget/App.jsx?vote=${voteToRender.id}`,\n      },\n      {\n        name: \"Result\",\n        link: `https://near.org/abnakore.near/widget/Result.jsx?vote=${voteToRender.id}`,\n      },\n      {\n        name: \"Admin Home\",\n        link: `https://near.org/abnakore.near/widget/AdminHome?vote=${voteToRender.id}`,\n      },\n      {\n        name: \"Manage Candidates\",\n        link: `https://near.org/abnakore.near/widget/ManageCandidates?vote=${voteToRender.id}`,\n      },\n      {\n        name: \"Mange Parties\",\n        link: `https://near.org/abnakore.near/widget/ManageParties?vote=${voteToRender.id}`,\n      },\n    ]);\n  } else {\n    setPages([\n      {\n        name: \"Voting Page\",\n        link: `https://near.org/abnakore.near/widget/App.jsx?vote=${voteToRender.id}`,\n      },\n      {\n        name: \"Result\",\n        link: `https://near.org/abnakore.near/widget/Result.jsx?vote=${voteToRender.id}`,\n      },\n    ]);\n  }\n}, [voteToRender.creator === accountId]);\n\n// Get all the votes\nconst votesData = Social.get(`abnakore.near/votes`);\nuseEffect(() => {\n  if (votesData === undefined) {\n    // Set the votes to an empty list if there is no votes\n    setAllVotes([]);\n  } else {\n    setAllVotes(JSON.parse(votesData));\n  }\n  setVoteToRender(allVotes[voteId]);\n}, [votesData === null]);\n\n// Set the vote to be rendered\nuseEffect(() => {\n  setVoteToRender(allVotes[voteId]);\n}, [allVotes]);\n\n// List of candidates and their curresponding number of votes\n// const [candidates, setCandidates] = useState(voteToRender.candidates);\n\n// Get the candidates data\n// const cands = Social.get(`abnakore.near/candidates`);\n\n// useEffect(() => {\n//   if (cands === undefined) {\n//     // Set the candidate to an empty list if there is no candidate\n//     setCandidates([]);\n//   } else {\n//     setCandidates(JSON.parse(cands));\n//   }\n// }, [cands === null]);\n\nconst [state, setState] = useState({\n  show_message: false,\n  show_error_on_dropdown: false,\n  show_error_on_passwordInput: false,\n});\n\n// Hashing function\nfunction hash(text) {\n  var hashed = \"\";\n  for (var i = 0; i < text.length; i++) {\n    // console.log(text.charAt(i), \"=\", text.charCodeAt(i));\n    hashed += text.charCodeAt(i);\n  }\n  //   console.log(hashed);\n  return hashed;\n}\n\n// Check the entered passcode if it is correct\nfunction checkPasscode() {\n  const hashedPasscode = hash(passcodeEntered);\n  if (hashedPasscode === voteToRender.passcode) {\n    console.log(\"true\");\n    setOpened(true);\n    return true;\n  } else {\n    console.log(\"false\");\n    setState({\n      ...state,\n      show_error_on_passwordInput: true,\n    });\n    return false;\n  }\n}\n\n// Users that already voted\nconst [voted, setVoted] = useState([1]);\n\n// Functions\nfunction vote() {\n  if (candidate > 0) {\n    // console.log(context.accountId);\n    // console.log(voted);\n    // setCandidates([...candidates]);\n    setState({\n      ...state,\n      show_message: true,\n    });\n    setVoted((prev) => prev.concat([context.accountId]));\n  } else {\n    // Set an error on the dropdown\n    setState({\n      ...state,\n      show_error_on_dropdown: true,\n    });\n  }\n}\n\n// Update the value of the dropdowns when changed\nfunction updateDropdown(e) {\n  setCandidate(e.target.value);\n  setparty(e.target.value);\n  // Remove the error on the dropdown\n  setState({\n    ...state,\n    show_error_on_dropdown: false,\n  });\n}\n\n// Get the current date and time\nfunction getDateTime() {\n  var now = new Date();\n  now.setMinutes(now.getMinutes() - now.getTimezoneOffset());\n  return now.toISOString().slice(0, 16);\n}\n\n//  Format the date and time (January 7, 2024 at 5:57 PM)\nfunction formatDateTime(dateTimeString) {\n  // Assuming you have a date-time input with the format \"YYYY-MM-DDTHH:mm\" as a string\n  const dateTime = new Date(dateTimeString);\n\n  // Formatting the date and time in 12-hour format\n  const formattedDateTime = dateTime.toLocaleString(\"en-US\", {\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\",\n    hour: \"numeric\",\n    minute: \"numeric\",\n    hour12: true, // Set to true for 12-hour format\n  });\n\n  return formattedDateTime;\n}\n\n// check if the vote is ongoing\nfunction isOngoing() {\n  return voteToRender.closeTime !== \"\"\n    ? Date.parse(voteToRender.openTime) <= Date.parse(getDateTime()) &&\n        Date.parse(voteToRender.closeTime) > Date.parse(getDateTime())\n    : Date.parse(voteToRender.openTime) <= Date.parse(getDateTime());\n}\nconst [ongoing, setOngoing] = useState(isOngoing());\n\n// // Re check if it is ongoing every 1 sec\nuseEffect(() => {\n  const interval = setInterval(() => {\n    setOngoing(isOngoing());\n  }, 1000);\n  return () => clearInterval(interval);\n}, [voteToRender]);\n\nconst secText = styled.h3`\n    text-align: center;\n`;\nreturn (\n  <>\n    {accountId ? (\n      <Widget\n        src=\"abnakore.near/widget/Wrapper\"\n        props={{\n          body: (\n            <div className=\"main-body\">\n              {/* Check if the vote exists(i.e allVotes[voteId] exists) */}\n              {voteToRender ? (\n                <div className=\"two-sides\">\n                  {/* The Aside bar that helps in quick navigation btw pages */}\n                  <Widget\n                    src=\"abnakore.near/widget/Aside\"\n                    props={{ objs: pages, active: \"/\" }}\n                  />\n\n                  {/* Check if the vote is ongoing */}\n                  {!ongoing === true ? (\n                    // Check if the vote has password\n                    voteToRender.passcode === \"\" || opened ? (\n                      <div className=\"body-contents\">\n                        <i>\n                          <svg\n                            width=\"64px\"\n                            height=\"64px\"\n                            viewBox=\"0 0 24 24\"\n                            fill=\"none\"\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                          >\n                            <g id=\"SVGRepo_bgCarrier\" stroke-width=\"0\"></g>\n                            <g\n                              id=\"SVGRepo_tracerCarrier\"\n                              stroke-linecap=\"round\"\n                              stroke-linejoin=\"round\"\n                            ></g>\n                            <g id=\"SVGRepo_iconCarrier\">\n                              <path\n                                d=\"M4 6H20M4 12H20M4 18H20\"\n                                stroke=\"#fefefe\"\n                                stroke-width=\"2\"\n                                stroke-linecap=\"round\"\n                                stroke-linejoin=\"round\"\n                              ></path>\n                            </g>\n                          </svg>\n                        </i>\n                        <h1>{voteToRender.name}</h1>\n                        <p>\n                          Lorem ipsum dolor sit, amet consectetur adipisicing\n                          elit. Accusamus, et, enim doloribus ea iure nisi\n                          nostrum voluptatem quasi unde debitis, dolorem quidem\n                          dolore sunt soluta exercitationem placeat incidunt\n                          earum. Rem et nam, maxime ratione eveniet error\n                          blanditiis eius non dolor itaque officia sint\n                          veritatis sunt animi iusto voluptatibus numquam. Nihil\n                          magnam repellat deleniti laboriosam quaerat rerum\n                          incidunt est aperiam, enim exercitationem asperiores,\n                          quia impedit nobis quasi neque? Veritatis, fuga et\n                          doloremque, aspernatur enim reiciendis fugit obcaecati\n                          facilis ratione voluptas perferendis expedita dolor.\n                          Iusto nisi quod culpa tempora nostrum eum laudantium\n                          magni, voluptas delectus pariatur distinctio magnam,\n                          vel saepe dolor molestiae amet nesciunt. Cumque, quod?\n                          Consequuntur quaerat laudantium adipisci. Veritatis,\n                          dolor veniam impedit fugiat inventore tenetur officiis\n                          tempore architecto voluptate aspernatur debitis\n                          molestias obcaecati explicabo nemo deleniti ducimus,\n                          sed incidunt, sint eum eaque hic. Ipsum dignissimos\n                          explicabo totam sapiente tempora excepturi ea quo nemo\n                          cum placeat sequi voluptas et ipsam minus possimus\n                          ullam, est, aliquam rem officia quisquam unde nam\n                          quam? Animi optio dolore quasi voluptate eum cumque\n                          enim sint placeat beatae, omnis ex magnam consequatur\n                          libero deleniti ipsum nihil labore sed accusamus est\n                          atque illum sunt mollitia. Sapiente, iusto! Dolores\n                          laborum impedit aut! Ut, repudiandae magni voluptatem\n                          ratione ipsum soluta. Voluptas, aliquam! Commodi, quo\n                          iusto repellat assumenda illum ut! Nesciunt tenetur\n                          accusantium nisi facilis quam, accusamus, nemo officia\n                          cumque odio dolorum, voluptatum aperiam numquam! Ex\n                          similique facilis corporis temporibus repudiandae quos\n                          quibusdam in labore cupiditate inventore, nihil\n                          asperiores doloribus, tempora dolore fuga autem saepe\n                          porro quod. Temporibus, cum, ea aut asperiores tempore\n                          sit, alias enim praesentium minima doloremque\n                          excepturi? Recusandae, sapiente cumque. Nihil ut,\n                          reprehenderit dolores non minima quas nobis velit odit\n                          est deserunt nulla incidunt dolor dicta beatae. Culpa\n                          cumque quaerat, veritatis expedita nobis perferendis?\n                          Explicabo laudantium repellat, sint voluptatibus nulla\n                          cum tempore ipsum eaque autem itaque natus quod!\n                          Deleniti neque officia inventore facere necessitatibus\n                          eveniet, quisquam quidem consectetur, cum consequuntur\n                          quibusdam quis dolorum facilis in vitae? Ratione\n                          explicabo, at corporis hic sequi, doloremque facere\n                          quia dolorem, quae tempora inventore soluta! Quisquam\n                          voluptas voluptatibus non delectus iusto facere\n                          mollitia voluptates ullam, quo aliquid soluta omnis\n                          optio tempore eum, accusamus necessitatibus possimus\n                          animi laboriosam eaque! Similique fugit tempora\n                          voluptatum eligendi unde vitae perferendis rerum\n                          velit? Aliquid nesciunt similique corrupti numquam\n                          molestias, dolores commodi molestiae aut enim vel\n                          eaque doloremque voluptate eveniet voluptatem ab sint\n                          tempore nostrum officia soluta velit neque quis quae.\n                          Odio nemo voluptatem exercitationem ducimus omnis\n                          maiores animi illum. Assumenda et iure iusto sed\n                          alias, eum aliquid quod ex ea iste, provident\n                          perspiciatis? Facilis facere autem deleniti accusamus,\n                          doloremque sequi iure mollitia? Architecto doloremque\n                          veniam, eveniet optio officiis expedita officia\n                          nesciunt velit! Facere quibusdam ratione neque, omnis\n                          tempore fuga reprehenderit quae autem veniam quidem!\n                          Incidunt illo officiis tenetur dolorum itaque\n                          repudiandae, illum labore sapiente minima, ea\n                          voluptate accusantium reprehenderit esse molestiae,\n                          deserunt reiciendis unde aut nobis perspiciatis\n                          temporibus. Quisquam, blanditiis consectetur ipsum\n                          quasi eius ad id fugit cupiditate culpa reprehenderit\n                          cumque, laudantium delectus magnam consequuntur\n                          sapiente! Officia laudantium adipisci inventore\n                          molestias alias itaque beatae dolores corporis\n                          quibusdam. Mollitia consectetur nulla laboriosam\n                          laborum a id possimus iusto asperiores earum itaque\n                          suscipit aliquid, excepturi, quam labore quia corporis\n                          quos iure alias cumque et soluta quo. Alias earum\n                          labore eligendi maiores est ad totam modi aliquid rem,\n                          odit tempore nisi sapiente, suscipit, voluptas\n                          similique animi consequatur ipsum recusandae eum\n                          incidunt qui blanditiis doloribus assumenda repellat.\n                          Odio voluptatum provident explicabo commodi velit\n                          suscipit aut temporibus cupiditate! Incidunt saepe\n                          ratione sunt distinctio dolor, quas quis optio quam\n                          harum. Architecto eos ea ipsum unde nostrum eligendi\n                          sit eveniet, nobis dolor minima delectus reiciendis\n                          dolorem vero pariatur obcaecati minus accusantium\n                          totam, voluptas, debitis nulla suscipit? Incidunt\n                          illum sunt eum officiis beatae dignissimos distinctio\n                          ex voluptatum qui porro velit aliquam hic quam,\n                          asperiores maiores iure sint vel debitis adipisci et\n                          quibusdam fugiat, aperiam, a cupiditate? Quibusdam,\n                          totam expedita. Consectetur unde placeat, sed quaerat\n                          repudiandae a consequatur minus fugiat tempore iste\n                          dolore accusamus earum cum, reiciendis explicabo nulla\n                          adipisci animi vitae nihil fugit distinctio,\n                          temporibus maxime. Nesciunt sapiente porro a repellat\n                          minima, fugit beatae corrupti quibusdam distinctio\n                          nisi fuga at placeat atque, magnam alias temporibus\n                          nobis odio tempore? Libero non magnam rem impedit\n                          eaque officia incidunt excepturi mollitia harum\n                          corrupti. Officiis neque vitae, autem facere quaerat\n                          rerum dolores? Facere culpa aliquid ut, harum tenetur\n                          ullam reprehenderit ratione consectetur quis enim\n                          blanditiis labore facilis temporibus adipisci atque\n                          recusandae maiores qui optio, sit et est minima\n                          corrupti nam. Voluptas optio neque totam dolorem eaque\n                          repellendus placeat quas dignissimos aliquid\n                          voluptates nihil commodi cum tempora, maxime porro\n                          numquam dolores ut, a minus ipsum sit suscipit. Sequi\n                          voluptatem, aperiam molestiae praesentium illum iusto\n                          quos earum fuga odio ab recusandae tempora? Magnam\n                          consequatur nostrum maiores eligendi error vitae odio\n                          expedita, suscipit dolore. Dolorum, omnis esse quam\n                          quisquam repellat sint quae dignissimos quo. Illo,\n                          repellat placeat. Doloribus, unde, beatae repellat\n                          animi corrupti dolore autem nostrum illo tempora\n                          accusamus suscipit soluta a. Repellat temporibus\n                          repellendus blanditiis mollitia ratione, dolore,\n                          quibusdam explicabo ea maxime totam facere molestias\n                          corrupti nemo, voluptatem quasi cupiditate omnis in\n                          sit perspiciatis. Porro, odit eos et iure, quae\n                          pariatur aut nisi ratione quam harum iste! Saepe,\n                          inventore adipisci. Sapiente voluptatum minus tempora\n                          itaque voluptates eveniet dolores praesentium porro,\n                          placeat autem illo, excepturi rem explicabo aliquid\n                          odit dolorem maiores hic dignissimos ipsa vitae\n                          obcaecati? Assumenda nihil rerum beatae enim qui\n                          cumque esse ipsum architecto, suscipit modi fugiat ut\n                          eveniet similique facere, veritatis delectus id\n                          blanditiis illo ducimus dolor necessitatibus sapiente?\n                          Ipsa magni ut eaque minus, aliquid cumque magnam nam\n                          perspiciatis autem modi repellat repellendus\n                          reprehenderit inventore eligendi officiis dolore\n                          provident omnis mollitia facere tempore maxime\n                          sapiente! Possimus quaerat nemo est adipisci?\n                          Voluptatum et quasi alias aut ullam voluptate.\n                          Doloremque possimus rerum quidem repudiandae sint\n                          laborum, dolores vel a odit quae quam harum. Eaque\n                          ipsa fuga enim aperiam nemo sint dolorum, ad\n                          consequatur nisi? Ea deserunt earum debitis laudantium\n                          dolores deleniti molestias ducimus vero ratione\n                          dolorem distinctio iusto, officiis suscipit enim\n                          voluptas fugiat nulla perferendis illum architecto\n                          beatae quam odit unde. Rem laborum culpa quasi, ex\n                          sequi dolorem illo sint reprehenderit possimus\n                          adipisci.\n                        </p>\n                        <p\n                          style={{\n                            color: \"green\",\n                            display: voteToRender.voters.includes(\n                              context.accountId\n                            )\n                              ? \"block\"\n                              : \"none\",\n                          }}\n                        >\n                          You Have Succesfully Voted\n                        </p>\n                        <div className=\"card\">\n                          <div className=\"flex\">\n                            <select\n                              disabled={\n                                voteToRender.voters.includes(context.accountId)\n                                  ? true\n                                  : false\n                              }\n                              className={`drop-down ${\n                                state.show_error_on_dropdown ? \"error\" : \"\"\n                              }`}\n                              value={candidate}\n                              onChange={updateDropdown}\n                              name=\"candidate\"\n                              required\n                            >\n                              <option className=\"option\" value={0}>\n                                Select by Candidate\n                              </option>\n                              {voteToRender.candidates.map((candidate, i) => (\n                                <option\n                                  className=\"option\"\n                                  key={candidate.id}\n                                  value={i + 1}\n                                >\n                                  {candidate.name}\n                                </option>\n                              ))}\n                            </select>\n                            OR\n                            <select\n                              disabled={\n                                voteToRender.voters.includes(context.accountId)\n                                  ? true\n                                  : false\n                              }\n                              className={`drop-down ${\n                                state.show_error_on_dropdown ? \"error\" : \"\"\n                              }`}\n                              value={party}\n                              onChange={updateDropdown}\n                              name=\"party\"\n                              required\n                            >\n                              <option className=\"option\" value={0}>\n                                Select by Party\n                              </option>\n                              {voteToRender.parties\n                                .filter((party) =>\n                                  voteToRender.candidates\n                                    .map((c) => c.party)\n                                    .includes(party.acronym)\n                                )\n                                .map((party, i) => (\n                                  <option\n                                    className=\"option\"\n                                    key={party.acronym}\n                                    value={i + 1}\n                                  >\n                                    {party.name}\n                                  </option>\n                                ))}\n                            </select>\n                          </div>\n                          <button\n                            disabled={\n                              voteToRender.voters.includes(context.accountId)\n                                ? true\n                                : false\n                            }\n                            onClick={vote}\n                          >\n                            Vote\n                          </button>\n\n                          <p\n                            id=\"thanks\"\n                            className={`read-the-docs ${\n                              state.show_message ? \"\" : \"hide\"\n                            }`}\n                          >\n                            Thank you for voting\n                            {voteToRender.candidates[candidate - 1].name}\n                          </p>\n                        </div>\n                      </div>\n                    ) : (\n                      <div className=\"body-contents\">\n                        <div className=\"form\">\n                          <secText>Please Enter Passcode</secText>\n                          <p\n                            className=\"error\"\n                            style={{\n                              color: \"red\",\n                              display: state.show_error_on_passwordInput\n                                ? \"block\"\n                                : \"none\",\n                              textAlign: \"center\",\n                            }}\n                          >\n                            The Password you entered is incorrect\n                          </p>\n                          <Widget\n                            src=\"abnakore.near/widget/Input.jsx\"\n                            props={{\n                              type: \"password\",\n                              placeholder: \"Enter Passcode\",\n                              required: true,\n                              otherAttributes: {\n                                value: passcodeEntered,\n                                autoFocus: true,\n                                onChange: (e) => {\n                                  setPasscodeEntered(e.target.value);\n                                },\n                              },\n                            }}\n                          />\n                          <button onClick={checkPasscode}>Submit</button>\n                        </div>\n                      </div>\n                    )\n                  ) : (\n                    <div className=\"body-contents\">\n                      {voteToRender.closeTime !== \"\"\n                        ? Date.parse(voteToRender.openTime) <=\n                            Date.parse(getDateTime()) &&\n                          Date.parse(voteToRender.closeTime) >\n                            Date.parse(getDateTime())\n                        : Date.parse(voteToRender.openTime) <=\n                          Date.parse(getDateTime())}\n                      {/* If the vote has not been started */}\n                      {Date.parse(voteToRender.openTime) >\n                      Date.parse(getDateTime()) ? (\n                        <>\n                          <h1>\n                            This vote will start on: <br />\n                          </h1>\n                          <h3>{formatDateTime(voteToRender.openTime)}</h3>\n                        </>\n                      ) : (\n                        <>\n                          <h1>\n                            The vote has been ended on: <br />\n                          </h1>\n                          <h3>{formatDateTime(voteToRender.closeTime)}</h3>\n                        </>\n                      )}\n                    </div>\n                  )}\n                </div>\n              ) : (\n                <div className=\"body-contents\">\n                  <h1>Vote Doesn't exist</h1>\n                </div>\n              )}\n            </div>\n          ),\n        }}\n      />\n    ) : (\n      <Widget src=\"abnakore.near/widget/SignIn.jsx\" props={props} />\n    )}\n  </>\n);\n", "metadata": {"fork_of": "abnakore.near/widget/App.jsx@110658337"}, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/abnakore.near/widget/App.jsx", "fact_widget_deployments_id": "6279d9ecba2aa1e55ee490b9f010339a", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 4}