{"tx_hash": "5aTyL5UjYhdX6fj6mhGVKKJ3LpNwWepVhyZxh21irgju", "action_id_social": "3cp7CpAwXG9S9KRnZNmdcjS9EQBuDHSTdTCgvv48avkj-0-widget", "block_id": 113247029, "block_timestamp": "2024-02-20T22:21:21.860Z", "signer_id": "abnakore.near", "widget_name": "VoteChain", "source_code": "// Get accountId\nconst accountId = context.accountId;\n\n// All the votes\n// Get all the votes\nconst allVotes = Social.index(\"voteChainTest\", \"vote\");\nconst otherCandidates = Social.index(\"voteChainTest\", \"candidate\");\n\n// Tabs\nconst [tab, setTab] = useState(props.tab ? props.tab : \"all\");\n\n// The user's watchlist\nconst [watchlist, setWatchlist] = useState([]);\n\n// Votes to be rendered on the screen\nconst [votesToRender, setVotesToRender] = useState(allVotes);\n\n// Get The watchlist of the user\nconst watchlistData = Social.get(`${accountId}/voteChain_watchlist`);\n\nuseEffect(() => {\n  setVotesToRender(allVotes);\n  console.log(votesToRender, allVotes, \"votesData\");\n}, [allVotes]);\n\nuseEffect(() => {\n  if (watchlistData === undefined) {\n    // Set the watchlist to an empty array\n    setWatchlist([]);\n  } else {\n    setWatchlist(JSON.parse(watchlistData));\n  }\n}, [watchlistData === null]);\n\nuseEffect(() => {\n  // Get the only votes the user created\n  if (tab === \"my_votes\") {\n    setVotesToRender(\n      allVotes.filter((vote) => vote.value.creator === accountId)\n    );\n  } else if (tab === \"watchlist\") {\n    setVotesToRender(\n      allVotes.filter((vote) => watchlist.includes(vote.blockHeight))\n    );\n  } else {\n    setVotesToRender(allVotes);\n  }\n}, [watchlist]);\n\n// Pages that can be reached via the aside tab\nconst [pages, setPage] = useState([\n  {\n    name: \"All Votes\",\n    link: \"https://near.org/abnakore.near/widget/VoteChain\",\n  },\n  {\n    name: \"My Votes\",\n    link: \"https://near.org/abnakore.near/widget/VoteChain?tab=my_votes\",\n  },\n  {\n    name: \"Watchlist\",\n    link: \"https://near.org/abnakore.near/widget/VoteChain?tab=watchlist\",\n  },\n  {\n    name: \"Create New Vote\",\n    type: \"button\",\n    link: \"https://near.org/abnakore.near/widget/CreateVote\",\n  },\n]);\n\n//  Format the date and time (January 7, 2024 at 5:57 PM)\nfunction formatDateTime(dateTimeString) {\n  // Assuming you have a date-time input with the format \"YYYY-MM-DDTHH:mm\" as a string\n  const dateTime = new Date(dateTimeString);\n\n  // Formatting the date and time in 12-hour format\n  const formattedDateTime = dateTime.toLocaleString(\"en-US\", {\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\",\n    hour: \"numeric\",\n    minute: \"numeric\",\n    hour12: true, // Set to true for 12-hour format\n  });\n\n  return formattedDateTime;\n}\n\nconst List = styled.div`\nwidth: calc(100vw - 20px);\nheight: 100%;\npadding: 20px 10px;\n\n@media screen and (min-width: 1200px) {\n  width: calc(100vw - 20%);\n}\n`;\nreturn (\n  <>\n    {accountId ? (\n      <Widget\n        src=\"abnakore.near/widget/Wrapper\"\n        props={{\n          body: (\n            <div className=\"main-body\">\n              <div className=\"body-contents\">\n                <div className=\"two-sides\">\n                  <Widget\n                    src=\"abnakore.near/widget/Aside\"\n                    props={{ objs: pages, active: \"/admin/manage_candidates\" }}\n                  />\n                  {votesToRender.length > 0 ? (\n                    <List>\n                      {votesToRender.map((vote) => (\n                        <a\n                          href={`https://near.org/abnakore.near/widget/App.jsx?vote=${vote.blockHeight}`}\n                        >\n                          <Widget\n                            src=\"abnakore.near/widget/VoteCard\"\n                            props={{\n                              ...vote.value,\n                              candidates:\n                                vote.value.candidates.concat(otherCandidates),\n                              style: {},\n                            }}\n                          />\n                        </a>\n                      ))}\n                    </List>\n                  ) : (\n                    <div className=\"body-contents\">\n                      <h1>No Votes</h1>\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n          ),\n        }}\n      />\n    ) : (\n      <Widget src=\"abnakore.near/widget/SignIn.jsx\" props={props} />\n    )}\n  </>\n);\n\n// // Get accountId\n// const accountId = context.accountId;\n\n// // Pages that can be reached via the aside tab\n// const [pages, setPage] = useState([\n//   {\n//     name: \"Home\",\n//     link: \"https://near.org/sandbox#/abnakore.near/widget/AdminHome\",\n//   },\n//   {\n//     name: \"Manage Candidates\",\n//     link: \"https://near.org/sandbox#/abnakore.near/widget/ManageCandidates\",\n//   },\n//   {\n//     name: \"Mange Parties\",\n//     link: \"https://near.org/sandbox#/abnakore.near/widget/ManageParties\",\n//   },\n// ]);\n// return (\n//   <>\n//     {accountId ? (\n//       <Widget\n//         src=\"abnakore.near/widget/Wrapper\"\n//         props={{\n//           body: (\n//             <div className=\"main-body\">\n//               <div className=\"body-contents\">\n//                 <div className=\"two-sides\"></div>\n//                 <Widget\n//                   src=\"abnakore.near/widget/Aside\"\n//                   props={{ objs: pages, active: \"/admin/manage_candidates\" }}\n//                 />\n//                 <div className=\"body-contents\">\n//                   <h1>...</h1>\n//                 </div>\n//               </div>\n//             </div>\n//           ),\n//         }}\n//       />\n//     ) : (\n//       <Widget src=\"abnakore.near/widget/SignIn.jsx\" props={props} />\n//     )}\n//   </>\n// );\n\n//\n// <Widget\n//   src=\"abnakore.near/widget/VoteCard\"\n//   props={{\n//     name: \"Name\",\n//     desc: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Impedit obcaecati iure rem nulla deleniti accusamus, qui, aut recusandae ut fugiat molestiae dicta asperiores, est aspernatur. Aliquid porro sed neque molestiae!\",\n//     open: \"27-03-2024 2:30PM\",\n//     close: \"27-03-2024 2:30PM\",\n//     no_of_candidates: 10,\n//     voted: true,\n//     locked: false,\n//   }}\n// />\n// <Widget\n//   src=\"abnakore.near/widget/VoteCard\"\n//   props={{\n//     name: \"Name\",\n//     desc: \"You can use the slice method along with the spread operator (...) to create a new array containing the first two items.\",\n//     open: \"27-03-2024 2:30PM\",\n//     close: \"27-03-2024 2:30PM\",\n//     no_of_candidates: 10,\n//     voted: false,\n//     locked: true,\n//   }}\n// />\n", "metadata": {"fork_of": "abnakore.near/widget/VoteChain@113246770"}, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/abnakore.near/widget/VoteChain", "fact_widget_deployments_id": "14d2334d347df7f3da440323ed523af2", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 40}