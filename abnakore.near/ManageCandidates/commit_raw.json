{"tx_hash": "GiMpt4nbnCVmUNm1faegMgiLVwVtDvaf7YAeEnNr2ysj", "action_id_social": "7ShhdHLuqSKyUSXrvqq5Zqk3GFd46hqQkfb3RUT3T9Gr-0-widget", "block_id": 110656594, "block_timestamp": "2024-01-17T20:19:19.742Z", "signer_id": "abnakore.near", "widget_name": "ManageCandidates", "source_code": "// Getting the current user's account Id\nconst accountId = context.accountId;\n\n// Pages that can be reached via the aside tab\nconst [pages, setPage] = useState([\n  {\n    name: \"Voting Page\",\n    link: \"https://near.org/abnakore.near/widget/App.jsx\",\n  },\n  {\n    name: \"Result\",\n    link: \"https://near.org/abnakore.near/widget/Result.jsx\",\n  },\n  {\n    name: \"Admin Home\",\n    link: \"https://near.org/abnakore.near/widget/AdminHome\",\n  },\n  {\n    name: \"Manage Candidates\",\n    link: \"https://near.org/abnakore.near/widget/ManageCandidates\",\n  },\n  {\n    name: \"Mange Parties\",\n    link: \"https://near.org/abnakore.near/widget/ManageParties\",\n  },\n]);\n\n// List of candidates and their curresponding number of votes\nconst [candidates, setCandidates] = useState([]);\n\nconst [maxId, setMaxId] = useState(4);\n\n// name and acro\nconst [newCandidate, setNewCandidate] = useState({\n  name: \"\",\n  party: \"\",\n  role: \"\",\n  votes: \"\",\n});\n\nfunction save() {\n  newCandidate.id = maxId + 1;\n  newCandidate.votes = 0;\n  newCandidate.rank = maxId + 1;\n  setMaxId(maxId + 1);\n  setCandidates((prev) => prev.concat([newCandidate]));\n}\n\n// Sort the currencies by(name,code or rate) order(ascending, descending)\nfunction Sort(by, order) {\n  if (order === \"ascending\") {\n    candidates.sort((a, b) => (a[by] > b[by] ? 1 : -1));\n  } else {\n    candidates.sort((a, b) => (a[by] < b[by] ? 1 : -1));\n  }\n  return candidates;\n}\n\n// Social.set({candidates: []});\n\n// Get the candidates data\nconst Data = Social.get(`abnakore.near/candidates`);\n\nuseEffect(() => {\n  if (Data === undefined) {\n    // Set the candidate to an empty list if there is no candidate\n    setCandidates([]);\n  } else {\n    setCandidates(JSON.parse(Data));\n  }\n}, [Data === null]);\n\n// Only signed In users can access the page\nreturn (\n  <>\n    {accountId ? (\n      <Widget\n        src=\"abnakore.near/widget/Wrapper\"\n        props={{\n          body: (\n            <div className=\"main-body\">\n              <div className=\"two-sides\">\n                <Widget\n                  src=\"abnakore.near/widget/Aside\"\n                  props={{ objs: pages, active: \"/admin/manage_candidates\" }}\n                />\n                <div className=\"body-contents\">\n                  <button onClick={get_data}>Show</button>\n                  <h1>Manage Candidates</h1>\n                  <Widget\n                    src=\"abnakore.near/widget/Table\"\n                    props={{\n                      headings: [\n                        \"Rank\",\n                        \"Candidate's Name\",\n                        \"Party\",\n                        \"Role\",\n                        \"Number of votes\",\n                      ],\n                      data: Sort(\"votes\", \"decending\").map((cand, index) =>\n                        Object.values({ id: index + 1, ...cand })\n                      ),\n                    }}\n                  />\n                  <div className=\"form\">\n                    <div className=\"flex\">\n                      <Widget\n                        src=\"abnakore.near/widget/Input.jsx\"\n                        props={{\n                          type: \"text\",\n                          placeholder: \"Full Name\",\n                          required: true,\n                          item: \"name\",\n                          items: newCandidate,\n                          setItem: setNewCandidate,\n                        }}\n                      />\n                      <Widget\n                        src=\"abnakore.near/widget/Input.jsx\"\n                        props={{\n                          type: \"text\",\n                          placeholder: \"party\",\n                          required: true,\n                          item: \"party\",\n                          items: newCandidate,\n                          setItem: setNewCandidate,\n                        }}\n                      />\n                    </div>\n                    <div className=\"flex\">\n                      <Widget\n                        src=\"abnakore.near/widget/Input.jsx\"\n                        props={{\n                          type: \"text\",\n                          placeholder: \"Role\",\n                          required: true,\n                          item: \"role\",\n                          items: newCandidate,\n                          setItem: setNewCandidate,\n                        }}\n                      />\n                    </div>\n                    <CommitButton\n                      onCommit={save}\n                      data={{ candidates: [newCandidate] }}\n                    >\n                      Add\n                    </CommitButton>\n                  </div>\n                </div>\n              </div>\n            </div>\n          ),\n        }}\n      />\n    ) : (\n      <Widget src=\"abnakore.near/widget/SignIn.jsx\" props={props} />\n    )}\n  </>\n);\n", "metadata": {"fork_of": "abnakore.near/widget/ManageCandidates@108574868"}, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/abnakore.near/widget/ManageCandidates", "fact_widget_deployments_id": "7061076416842ca55ea2d729b197066f", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}