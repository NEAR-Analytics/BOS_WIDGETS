{"tx_hash": "EZ2JrjGebDbKbPuN1c8YU1zsCTeUQT8mhAMLBy2t4wm", "action_id_social": "ABUtPk1cEYghomehAVvVGXw562aoRFt5bKH21dkZu3iR-0-widget", "block_id": 110907891, "block_timestamp": "2024-01-20T21:58:42.715Z", "signer_id": "abnakore.near", "widget_name": "ManageParties", "source_code": "// Get the user's accountId\nconst accountId = context.accountId;\n\n// Declaring variables\n// !!!\n// const voteId = props.vote && props.vote;\nconst voteId = 0;\n\n// All the votes\nconst [allVotes, setAllVotes] = useState([]);\nconst [voteToRender, setVoteToRender] = useState([]);\n\n// Get all the votes\nlet votesData = Social.get(`abnakore.near/votes`);\nuseEffect(() => {\n  if (votesData === undefined) {\n    // Set the votes to an empty list if there is no votes\n    setAllVotes([]);\n  } else {\n    setAllVotes(JSON.parse(votesData));\n  }\n  setVoteToRender(allVotes[voteId]);\n}, [votesData === null]);\n\n// Set the vote to be rendered\nuseEffect(() => {\n  setVoteToRender(allVotes[voteId]);\n}, [allVotes]);\n\n// Pages that will be displayed in the aside\nconst [pages, setPages] = useState([\n  {\n    name: \"Voting Page\",\n    link: `https://near.org/abnakore.near/widget/App.jsx?vote=${voteToRender.id}`,\n  },\n  {\n    name: \"Result\",\n    link: `https://near.org/abnakore.near/widget/Result.jsx?vote=${voteToRender.id}`,\n  },\n]);\n\n// Add admin pages if the user is the creator of the vote\nuseEffect(() => {\n  if (voteToRender.creator === accountId) {\n    setPages([\n      {\n        name: \"Voting Page\",\n        link: `https://near.org/abnakore.near/widget/App.jsx?vote=${voteToRender.id}`,\n      },\n      {\n        name: \"Result\",\n        link: `https://near.org/abnakore.near/widget/Result.jsx?vote=${voteToRender.id}`,\n      },\n      {\n        name: \"Admin Home\",\n        link: `https://near.org/abnakore.near/widget/AdminHome?vote=${voteToRender.id}`,\n      },\n      {\n        name: \"Manage Candidates\",\n        link: `https://near.org/abnakore.near/widget/ManageCandidates?vote=${voteToRender.id}`,\n      },\n      {\n        name: \"Mange Parties\",\n        link: `https://near.org/abnakore.near/widget/ManageParties?vote=${voteToRender.id}`,\n      },\n    ]);\n  } else {\n    setPages([\n      {\n        name: \"Voting Page\",\n        link: `https://near.org/abnakore.near/widget/App.jsx?vote=${voteToRender.id}`,\n      },\n      {\n        name: \"Result\",\n        link: `https://near.org/abnakore.near/widget/Result.jsx?vote=${voteToRender.id}`,\n      },\n    ]);\n  }\n}, [voteToRender.creator === accountId]);\n\n// name and acro\nconst [newParty, setNewParty] = useState({\n  name: \"\",\n  acronym: \"\",\n});\n\n// Save the data and add a new candidate\nfunction save() {\n  console.log(JSON.parse(votesData));\n  if (newParty.name !== \"\" && newParty.acronym !== \"\") {\n    // check for no similar name or acronym\n    if (JSON.stringify(voteToRender.parties) !== JSON.stringify([])) {\n      const filtered = voteToRender.parties.filter((party) => {\n        return (\n          party.name.toLowerCase() === newParty.name.toLowerCase() ||\n          party.acronym.toLowerCase() === newParty.acronym.toLowerCase()\n        );\n      });\n      if (filtered.length > 0) {\n        return;\n      }\n    }\n\n    // Check for 4 letters of the acronym\n    if (newParty.acronym.length <= 4 && newParty.acronym.length > 0) {\n      const newVotes = allVotes.map((vote) =>\n        vote.id === voteToRender.id\n          ? {\n              ...vote,\n              parties: [\n                ...vote.parties,\n                {\n                  ...newParty,\n                  acronym: newParty.acronym.toUpperCase(),\n                  name: newParty.name\n                    .toLowerCase()\n                    .replace(/\\b\\w/g, (s) => s.toUpperCase()),\n                },\n              ],\n            }\n          : vote\n      );\n\n      console.log(votesData);\n      // Upload the data to socialDb\n      Social.set({ votes: newVotes });\n      console.log(newVotes);\n      setNewParty({ name: \"\", acronym: \"\" });\n    }\n  }\n}\n\nfunction refresh() {\n  // Get all the votes\n  const votesDatas = Social.get(`abnakore.near/votes`);\n  if (votesDatas === undefined) {\n    // Set the votes to an empty list if there is no votes\n    setAllVotes([]);\n  } else {\n    setAllVotes(JSON.parse(votesDatas));\n  }\n  setVoteToRender(allVotes[voteId]);\n\n  console.log(\"done\");\n}\n\nconst secText = styled.h3`\n    text-align: center;\n`;\n\nreturn (\n  <>\n    {accountId ? (\n      <Widget\n        src=\"abnakore.near/widget/Wrapper\"\n        props={{\n          body: (\n            <div className=\"main-body\">\n              {voteToRender ? (\n                <div className=\"two-sides\">\n                  <Widget\n                    src=\"abnakore.near/widget/Aside\"\n                    props={{\n                      objs: pages,\n                      active: `https://near.org/abnakore.near/widget/ManageParties?vote=${voteToRender.id}`,\n                    }}\n                  />\n                  <div className=\"body-contents\">\n                    <h1>Manage Parties</h1>\n                    <Widget\n                      src=\"abnakore.near/widget/Table\"\n                      props={{\n                        headings: [\"S/N\", \"Party Name\", \"Acronym\"],\n                        data: Object.values(\n                          voteToRender.parties.map((c, i) =>\n                            [i + 1].concat(Object.values(c))\n                          )\n                        ),\n                      }}\n                    />\n                    <div className=\"form\">\n                      <secText>Add Party</secText>\n                      <div className=\"flex\">\n                        <Widget\n                          src=\"abnakore.near/widget/Input.jsx\"\n                          props={{\n                            type: \"text\",\n                            placeholder: \"Party Name\",\n                            required: true,\n                            item: \"name\",\n                            items: newParty,\n                            setItem: setNewParty,\n                            otherAttributes: {\n                              value: newParty.name,\n                            },\n                          }}\n                        />\n                        <Widget\n                          src=\"abnakore.near/widget/Input.jsx\"\n                          props={{\n                            type: \"text\",\n                            placeholder: \"Acronym\",\n                            required: true,\n                            item: \"acronym\",\n                            items: newParty,\n                            setItem: setNewParty,\n                            otherAttributes: {\n                              value: newParty.acronym,\n                            },\n                          }}\n                        />\n                      </div>\n                      <button onClick={save} onCommit={refresh()}>\n                        Add\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              ) : (\n                <div className=\"body-contents\">\n                  <h1>Vote Doesn't exist</h1>\n                  {JSON.stringify(voteToRender)}\n                </div>\n              )}\n            </div>\n          ),\n        }}\n      />\n    ) : (\n      <Widget src=\"abnakore.near/widget/SignIn.jsx\" />\n    )}\n  </>\n);\n// {\n//   \"abnakore.near\": {\n//     \"parties\": \"[{\\\"name\\\":\\\"\\\",\\\"acronym\\\":\\\"\\\"}]\"\n//   }\n// }\n", "metadata": {"fork_of": "abnakore.near/widget/ManageParties@110656326"}, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/abnakore.near/widget/ManageParties", "fact_widget_deployments_id": "9c88fa33ae948b3ed3133ef71f769f18", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 3}