{"tx_hash": "8c1VL6UedXK9NgdYQKN3rFWSftsy8MdCBRCDv9xAtWrh", "action_id_social": "CJhqwhWPerZWo7zG6YEQbufCNCpoKnHYd6DiEsXP98X8-0-widget", "block_id": 118911788, "block_timestamp": "2024-05-14T16:20:17.378Z", "signer_id": "abnakore.near", "widget_name": "Result.jsx", "source_code": "// Get the user's accountId\nconst accountId = context.accountId;\n\n// Declaring variables\n// !!!\n// const voteId = props.vote && props.vote;\nconst voteId = 113239184;\n\n// All the votes\nconst allVotes = Social.index(\"voteChainTest\", \"vote\")\n  ? Social.index(\"voteChainTest\", \"vote\")\n  : [];\nconst otherCandidates = Social.index(\"voteChainTest\", \"candidate\")\n  ? Social.index(\"voteChainTest\", \"candidate\")\n  : [];\nconst otherParties = Social.index(\"voteChainTest\", \"party\")\n  ? Social.index(\"voteChainTest\", \"party\")\n  : [];\nconst votes = Social.index(\"voteChainTest\", \"votes\")\n  ? Social.index(\"voteChainTest\", \"votes\")\n  : [];\n\n// Set the value of votetorender by adding other parties and candidates to it\nfunction getValue() {\n  var temp = allVotes.find(\n    (vote) => parseFloat(vote.blockHeight) === parseFloat(voteId)\n  );\n\n  var votesOnThis = votes.filter(\n    (vote) =>\n      parseFloat(vote.value.voteId) === parseFloat(voteId) &&\n      vote.value.by &&\n      vote.value.party\n  );\n  return {\n    ...temp,\n    value: {\n      ...temp.value,\n      parties: temp.value?.parties?.concat(\n        otherParties\n          .filter(\n            (party) =>\n              party.value.voteId === voteId &&\n              party.value.name &&\n              party.value.acronym\n          )\n          .map((party) => ({\n            name: party.value.name,\n            acronym: party.value.acronym,\n          }))\n      ),\n      candidates: temp.value?.candidates\n        ?.concat(\n          // Add other candidates to the list of all candidates\n          otherCandidates\n            .filter(\n              (candidate) =>\n                // Get only the candidates of the vote and vreified\n                candidate.value.voteId === voteId &&\n                candidate.value.name &&\n                candidate.value.party &&\n                candidate.value.role\n            )\n            .map((c) => c.value)\n        )\n        .map(\n          // This put the number of votes of the candidate\n          (cand, i) => ({\n            ...cand,\n            votes: votesOnThis.filter((vote) => vote.value.party === cand.party)\n              .length,\n          })\n        ),\n      voters: votesOnThis.map((vote) => vote.value.by),\n    },\n  };\n}\nconst [voteToRender, setVoteToRender] = useState(getValue());\n\n// Pages that will be displayed in the aside\nconst [pages, setPages] = useState([\n  {\n    name: \"Voting Page\",\n    link: `https://near.social/abnakore.near/widget/App.jsx?vote=${voteToRender.blockHeight}`,\n  },\n  {\n    name: \"Result\",\n    link: `https://near.social/abnakore.near/widget/Result.jsx?vote=${voteToRender.blockHeight}`,\n  },\n]);\n\n// Add admin pages if the user is the creator of the vote\nuseEffect(() => {\n  if (voteToRender.value.creator === accountId) {\n    setPages([\n      {\n        name: \"Voting Page\",\n        link: `https://near.social/abnakore.near/widget/App.jsx?vote=${voteToRender.blockHeight}`,\n      },\n      {\n        name: \"Result\",\n        link: `https://near.social/abnakore.near/widget/Result.jsx?vote=${voteToRender.blockHeight}`,\n      },\n      {\n        name: \"Admin Home\",\n        link: `https://near.social/abnakore.near/widget/AdminHome?vote=${voteToRender.blockHeight}`,\n      },\n      {\n        name: \"Manage Candidates\",\n        link: `https://near.social/abnakore.near/widget/ManageCandidates?vote=${voteToRender.blockHeight}`,\n      },\n      {\n        name: \"Mange Parties\",\n        link: `https://near.social/abnakore.near/widget/ManageParties?vote=${voteToRender.blockHeight}`,\n      },\n    ]);\n  } else {\n    setPages([\n      {\n        name: \"Voting Page\",\n        link: `https://near.social/abnakore.near/widget/App.jsx?vote=${voteToRender.blockHeight}`,\n      },\n      {\n        name: \"Result\",\n        link: `https://near.social/abnakore.near/widget/Result.jsx?vote=${voteToRender.blockHeight}`,\n      },\n    ]);\n  }\n}, [voteToRender.value.creator === accountId]);\n\n// other variables\nconst [opened, setOpened] = useState(false);\nconst [state, setState] = useState({\n  show_error_on_passwordInput: false,\n});\nconst [passcodeEntered, setPasscodeEntered] = useState(\"\");\n\n// Hashing function\nfunction hash(text) {\n  var hashed = \"\";\n  for (var i = 0; i < text.length; i++) {\n    // console.log(text.charAt(i), \"=\", text.charCodeAt(i));\n    hashed += text.charCodeAt(i);\n  }\n  //   console.log(hashed);\n  return hashed;\n}\n\n// Check the entered passcode if it is correct\nfunction checkPasscode() {\n  const hashedPasscode = hash(passcodeEntered);\n  if (hashedPasscode === voteToRender.value.passcode) {\n    console.log(\"true\");\n    setOpened(true);\n    return true;\n  } else {\n    console.log(\"false\");\n    setState({\n      ...state,\n      show_error_on_passwordInput: true,\n    });\n    return false;\n  }\n}\n\nreturn (\n  <>\n    {accountId ? (\n      <Widget\n        src=\"abnakore.near/widget/Wrapper\"\n        props={{\n          body: (\n            <div className=\"main-body\">\n              {voteToRender ? (\n                <div className=\"two-sides\">\n                  <Widget\n                    src=\"abnakore.near/widget/Aside\"\n                    props={{ objs: pages, active: \"/result\" }}\n                  />\n\n                  {voteToRender.value.passcode === \"\" || opened ? (\n                    <div className=\"body-contents\">\n                      <h1>Result</h1>\n                      {/* Calling the table component */}\n                      {/* Extracting The values in the table an converting them to list */}\n                      <Widget\n                        src=\"abnakore.near/widget/Table\"\n                        props={{\n                          headings: [\n                            \"Candidate's Name\",\n                            \"Party\",\n                            \"Role\",\n                            \"Number of votes\",\n                          ],\n                          data: Object.values(\n                            voteToRender.value.candidates\n                              .sort((a, b) => a.votes - b.votes)\n                              .map((c) => Object.values(c))\n                          ),\n                        }}\n                      />\n                    </div>\n                  ) : (\n                    <div className=\"body-contents\">\n                      <div className=\"form\">\n                        <div style={{ textAlign: \"center\" }}>\n                          Please Enter Passcode\n                        </div>\n                        <p\n                          className=\"error\"\n                          style={{\n                            color: \"red\",\n                            display: state.show_error_on_passwordInput\n                              ? \"block\"\n                              : \"none\",\n                            textAlign: \"center\",\n                          }}\n                        >\n                          The Password you entered is incorrect\n                        </p>\n                        <Widget\n                          src=\"abnakore.near/widget/Input.jsx\"\n                          props={{\n                            type: \"password\",\n                            placeholder: \"Enter Passcode\",\n                            required: true,\n                            otherAttributes: {\n                              value: passcodeEntered,\n                              autoFocus: true,\n                              onKeyPress: (e) => {\n                                if (e.key === \"Enter\") {\n                                  checkPasscode();\n                                }\n                              },\n                              onChange: (e) => {\n                                setPasscodeEntered(e.target.value);\n                              },\n                            },\n                          }}\n                        />\n                        <button onClick={checkPasscode}>Submit</button>\n                      </div>\n                    </div>\n                  )}\n                </div>\n              ) : (\n                <div className=\"body-contents\">\n                  <h1>Vote Doesn't exist</h1>\n                </div>\n              )}\n            </div>\n          ),\n        }}\n      />\n    ) : (\n      <Widget src=\"abnakore.near/widget/SignIn.jsx\" />\n    )}\n  </>\n);\n", "metadata": {"fork_of": "abnakore.near/widget/Result.jsx@110744367"}, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/abnakore.near/widget/Result.jsx", "fact_widget_deployments_id": "d359cf554f2ad1c485ae279c2ab6c6e3", "inserted_timestamp": "2024-05-14T17:51:25.411Z", "modified_timestamp": "2024-05-14T17:51:25.411Z", "__row_index": 2}