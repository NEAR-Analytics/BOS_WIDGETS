{"tx_hash": "2P58qqyffKMbrixF44CY37zmu8iKHNdHjDuRHzoShYZC", "action_id_social": "ABm9MnfwRUWsWJHq1Xi5fUoSvJDD6RoRN24dvWPU37c2-0-widget", "block_id": 91430906, "block_timestamp": "2023-05-09T04:46:01.331Z", "signer_id": "ref-admin.near", "widget_name": "MetadataEditor", "source_code": "const Container = styled.div`\n   .warningTip{\n    display:flex;\n    align-items:start;\n    font-weight: 500;\n    font-size: 14px;\n    line-height: 22px;\n    color: #00FFD1;\n    .icon{\n      position:relative;\n      top:-1px;\n      margin-right:5px;\n    }\n    a{\n      color: #00FFD1;\n      text-decoration:underline;\n    }\n   }\n   .title{\n     font-weight: 500;\n     font-size: 16px;\n     color: #FFFFFF;\n     margin-bottom:10px;\n   }\n   .form-input{\n     display:block;\n     background: rgba(26, 46, 51, 0.25);\n     border: 0.5px solid rgba(255, 255, 255, 0.3);\n     border-radius: 10px;\n     height: 47px;\n     width:100%;\n     color:rgba(255, 255, 255, 0.3);\n     padding:0 10px\n   }\n   .form-input:focus-visible{\n     outline:none;\n   }\n   .form-textarea{\n     display:block;\n     background: rgba(26, 46, 51, 0.25);\n     border: 0.5px solid rgba(255, 255, 255, 0.3);\n     border-radius: 10px;\n     width:100%;\n     color:rgba(255, 255, 255, 0.3);\n     padding:10px;\n   }\n   .form-textarea:focus-visible{\n     outline:none;\n   }\n   .websit .input-group{\n     display:flex;\n     align-items:stretch;\n     flex-wrap:nowrap;\n     overflow:hidden;\n   }\n   \n   .websit .input-group-text{\n     background-color:#304352;\n     color:#fff;\n     border:none;\n   }\n   .websit .input-group{\n     border: 1px solid rgba(255, 255, 255, 0.3);\n     border-radius: 10px;\n   }\n   .uploadButtonBanner{\n    margin-bottom:60px;\n   }\n   .uploadButtonBanner .btn{\n    background: #304352;\n    border-radius: 10px;\n    font-weight: 500;\n    font-size: 14px;\n    color:#fff;\n    border:none;\n  }\n  .select-area{\n    position:relative;\n    .selected{\n      position:relative;\n      display:flex;\n      align-items:center;\n      background: rgba(26, 46, 51, 0.25);\n      border: 0.5px solid rgba(255, 255, 255, 0.3);\n      border-radius: 10px;\n      height:47px;\n      padding:0 15px;\n      color:#fff;\n      font-size:16px;\n      font-weight:bold;\n      cursor:pointer;\n      i{\n        position:absolute;\n        right:15px;\n        &:before{\n          font-weight: bold!important;\n        }\n      }\n    }\n    .select-list{\n      position:absolute;\n      left:0;\n      top:50px;\n      width:100%;\n      display:flex;\n      flex-direction:column;\n      background: #13181A;\n      border: 1px solid #3A4244;\n      border-radius: 10px;\n      padding:10px 0;\n      z-index:10;\n      &.show{\n        display:flex;\n      }\n      &.hidden{\n        display:none;\n      }\n      span{\n        padding:10px 25px;\n        font-weight: 500;\n        font-size: 16px;\n        color:#fff;\n        cursor:pointer;\n        &:hover{\n          background-color:rgba(0, 0, 0, 0.2);\n        }\n      }\n    }\n  }\n  .dropdown-menu{\n    max-height:175px!important;\n  }\n`;\nconst initialMetadata = props.initialMetadata ?? {};\nconst onChange = props.onChange;\nconst options = props.options;\nconst { selectListStatus, selectOptions, selectedItem} = state;\nState.init({\n  initialMetadata,\n  metadata: initialMetadata,\n  reportedMetadata: initialMetadata,\n  linktree: initialMetadata.linktree ?? {},\n  image: initialMetadata.image,\n  bannerImage: { cid: initialMetadata.bannerImage.cid},\n  backgroundImage: initialMetadata.backgroundImage,\n  screenshots: initialMetadata.screenshots ?? {},\n  selectOptions: [{id:'NEAR'}, {id:'Ethereum'}, { id:'Bsc'}, {id:'Arbitrum'}],\n  selectedItem: initialMetadata.chain ? {id: initialMetadata.chain} : undefined,\n});\n\nconst metadata = {\n  from: \"shanshan\",\n  name: options.name ? state.metadata.name : undefined,\n  description: options.name ? state.metadata.description : undefined,\n  linktree:\n    options.linktree && Object.keys(state.linktree).length > 0\n      ? state.linktree\n      : undefined,\n  image:\n    options.image && state.image && Object.keys(state.image).length > 0\n      ? state.image\n      : undefined,\n  bannerImage:\n    options.banner && state.bannerImage && Object.keys(state.bannerImage).length > 0\n      ? state.bannerImage\n      : undefined,\n  backgroundImage:\n    options.backgroundImage &&\n    state.backgroundImage &&\n    Object.keys(state.backgroundImage).length > 0\n      ? state.backgroundImage\n      : undefined,\n  tags: options.tags ? state.metadata.tags : undefined,\n  screenshots: options.screenshots ? state.metadata.screenshots : undefined,\n  chain: options.chain ? state.selectedItem.id : undefined\n};\n\nif (\n  onChange &&\n  JSON.stringify(state.reportedMetadata) !== JSON.stringify(metadata)\n) {\n  State.update({\n    reportedMetadata: metadata,\n  });\n  onChange(metadata);\n}\nfunction selectOptionsFun(item) {\n  State.update({\n    selectedItem:item,\n    selectListStatus:false,\n  })\n}\nconst warningIcon = <svg width=\"15\" height=\"15\" viewBox=\"0 0 15 15\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M7.46979 0.510742C3.60976 0.510742 0.48053 3.63964 0.48053 7.5C0.48053 11.3604 3.60976 14.4893 7.46979 14.4893C11.3298 14.4893 14.459 11.3597 14.459 7.5C14.459 3.6403 11.3298 0.510742 7.46979 0.510742ZM7.46979 11.2423C7.30897 11.242 7.15185 11.194 7.0183 11.1044C6.88474 11.0148 6.78073 10.8877 6.71942 10.739C6.6581 10.5903 6.64223 10.4268 6.6738 10.2691C6.70538 10.1114 6.78299 9.96665 6.89682 9.85305C7.01065 9.73945 7.1556 9.66214 7.31336 9.63088C7.47111 9.59963 7.63459 9.61584 7.78313 9.67745C7.93168 9.73907 8.05863 9.84334 8.14794 9.97708C8.23726 10.1108 8.28492 10.268 8.28492 10.4288C8.28492 10.5358 8.26383 10.6417 8.22284 10.7405C8.18186 10.8393 8.12179 10.9291 8.04608 11.0047C7.97036 11.0802 7.88049 11.1401 7.7816 11.1809C7.68271 11.2217 7.57675 11.2425 7.46979 11.2423ZM8.28492 7.71914C8.28187 7.93329 8.19465 8.13764 8.04213 8.28799C7.88961 8.43835 7.68404 8.52264 7.46987 8.52264C7.2557 8.52264 7.05013 8.43835 6.89761 8.28799C6.74509 8.13764 6.65787 7.93329 6.65482 7.71914V3.92469C6.65787 3.71054 6.74509 3.50619 6.89761 3.35583C7.05013 3.20547 7.2557 3.12118 7.46987 3.12118C7.68404 3.12118 7.88961 3.20547 8.04213 3.35583C8.19465 3.50619 8.28187 3.71054 8.28492 3.92469V7.71914Z\" fill=\"#00FFD1\"/>\n</svg>;\nreturn (\n  <Container>\n    <div className=\"warningTip\">\n      <span class=\"icon\">{warningIcon}</span>\n      <p>Notice: It will be published as a component. If you want to publish it as a template, please <a href=\"#\">contact us</a>.</p>\n    </div>\n    {options.name && (\n      <div className=\"mb-2\">\n        <label class=\"title\">{options.name.label ?? \"Name\"}</label>\n        <input class=\"form-input\" type=\"text\" value={state.metadata.name} />\n      </div>\n    )}\n    {options.image && (\n      <div className=\"mb-2\">\n        <label class=\"title\">{options.image.label ?? \"Image\"}</label>\n        <Widget\n          src=\"ref-admin.near/widget/ImageEditorTabs\"\n          props={{\n            image: state.image,\n            onChange: (image) => State.update({ image }),\n          }}\n        />\n      </div>\n    )}\n    {options.banner && (\n      <div className=\"mb-2\">\n        <label class=\"title\">{options.banner.label ?? \"Banner\"}</label>\n        <div className=\"uploadButtonBanner\">\n         <IpfsImageUpload image={state.bannerImage} />\n        </div>\n      </div>\n    )}\n    {options.backgroundImage && (\n      <div className=\"mb-2\">\n        <label class=\"title\">\n          {options.backgroundImage.label ?? \"Background image\"}\n        </label>\n        <Widget\n          src=\"ref-admin.near/widget/ImageEditorTabs\"\n          props={{\n            image: state.backgroundImage,\n            onChange: (backgroundImage) => State.update({ backgroundImage }),\n          }}\n        />\n      </div>\n    )}\n    {options.description && (\n      <div className=\"mb-2\">\n        <label class=\"title\">\n          {options.description.label ?? \"Description\"}\n        </label>\n        <span className=\"text-white\"> (supports markdown)</span>\n        <textarea\n          className=\"form-textarea\"\n          rows={5}\n          value={state.metadata.description}\n          onChange={(e) => {\n            state.metadata.description = e.target.value;\n            State.update();\n          }}\n        />\n      </div>\n    )}\n    {options.chain && (\n      <div className=\"mb-4\">\n        <label class=\"title\">\n          {options.chain.label ?? \"Chain\"}\n        </label>\n        <div className=\"select-area\">\n          <div className=\"selected\" onClick={() => {\n            State.update({\n              selectListStatus: !state.selectListStatus\n            })\n          }}>\n            {selectedItem.id}\n            <i class=\"bi bi-chevron-compact-down text-white\"></i>\n          </div>\n          <div className={`select-list ${selectListStatus ? 'show': 'hidden'}`}>\n            {\n              selectOptions && selectOptions.map((item) => <span onClick={() => {\n                selectOptionsFun(item)\n              }}>{item.id}</span>)\n            }\n          </div>\n        </div>\n      </div>\n    )}\n    {options.tags && (\n      <div style={{\n        marginBottom:'120px'\n      }}>\n        <label class=\"title\">{options.tags.label ?? \"Tags\"}</label>\n        <Widget\n          src=\"ref-admin.near/widget/TagsEditor\"\n          props={{\n            initialTagsObject: metadata.tags,\n            tagsPattern: options.tags.pattern,\n            placeholder:\n              options.tags.placeholder ??\n              \"rust, engineer, artist, humanguild, nft, learner, founder\",\n            setTagsObject: (tags) => {\n              state.metadata.tags = tags;\n              State.update();\n            },\n          }}\n        />\n      </div>\n    )}\n    {options.linktree &&\n      (options.linktree.links ?? []).map((link) => (\n        <div className=\"mb-2 websit\">\n          <label class=\"title\">{link.label}</label>\n          <div className=\"input-group\">\n            <span className=\"input-group-text\">{link.prefix}</span>\n            <input\n              class=\"form-input\"\n              type=\"text\"\n              value={state.linktree[link.name]}\n            />\n          </div>\n        </div>\n      ))}\n  </Container>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/ref-admin.near/widget/MetadataEditor", "fact_widget_deployments_id": "a86468d01b46e25831d833dcd254723a", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 22}