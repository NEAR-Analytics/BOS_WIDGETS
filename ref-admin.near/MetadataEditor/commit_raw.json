{"tx_hash": "5nwdBVqJoTYWQbQfbE2BuESbFpPwsVeusrfEQziN89RH", "action_id_social": "7CudVCkuefR9Myn1pkchN2FfAN3j5usDrSuMAwwMjphP-0-widget", "block_id": 90079592, "block_timestamp": "2023-04-21T08:09:43.644Z", "signer_id": "ref-admin.near", "widget_name": "MetadataEditor", "source_code": "const Container = styled.div`\n   .title{\n     font-weight: 500;\n     font-size: 16px;\n     color: #FFFFFF;\n     margin-bottom:10px;\n   }\n   .form-input{\n     display:block;\n     background: rgba(26, 46, 51, 0.25);\n     border: 0.5px solid rgba(255, 255, 255, 0.3);\n     border-radius: 10px;\n     height: 47px;\n     width:100%;\n     color:rgba(255, 255, 255, 0.3);\n     padding:0 10px\n   }\n   .form-input:focus-visible{\n     outline:none;\n   }\n   .form-textarea{\n     display:block;\n     background: rgba(26, 46, 51, 0.25);\n     border: 0.5px solid rgba(255, 255, 255, 0.3);\n     border-radius: 10px;\n     width:100%;\n     color:rgba(255, 255, 255, 0.3);\n     padding:10px;\n   }\n   .form-textarea:focus-visible{\n     outline:none;\n   }\n   .websit .input-group{\n     display:flex;\n     align-items:stretch;\n     flex-wrap:nowrap;\n   }\n   \n   .websit .input-group-text{\n     background-color:#304352;\n     color:#fff;\n     border:none;\n   }\n   .websit .input-group{\n     border: 1px solid rgba(255, 255, 255, 0.3);\n     border-radius: 10px;\n   }\n`;\nconst initialMetadata = props.initialMetadata ?? {};\nconst onChange = props.onChange;\nconst options = props.options;\n\nState.init({\n  initialMetadata,\n  metadata: initialMetadata,\n  reportedMetadata: initialMetadata,\n  linktree: initialMetadata.linktree ?? {},\n  image: initialMetadata.image,\n  backgroundImage: initialMetadata.backgroundImage,\n  screenshots: initialMetadata.screenshots ?? {},\n});\n\nconst metadata = {\n  name: options.name ? state.metadata.name : undefined,\n  description: options.name ? state.metadata.description : undefined,\n  linktree:\n    options.linktree && Object.keys(state.linktree).length > 0\n      ? state.linktree\n      : undefined,\n  image:\n    options.image && state.image && Object.keys(state.image).length > 0\n      ? state.image\n      : undefined,\n  backgroundImage:\n    options.backgroundImage &&\n    state.backgroundImage &&\n    Object.keys(state.backgroundImage).length > 0\n      ? state.backgroundImage\n      : undefined,\n  tags: options.tags ? state.metadata.tags : undefined,\n  screenshots: options.screenshots ? state.metadata.screenshots : undefined,\n};\n\nif (\n  onChange &&\n  JSON.stringify(state.reportedMetadata) !== JSON.stringify(metadata)\n) {\n  State.update({\n    reportedMetadata: metadata,\n  });\n  onChange(metadata);\n}\n\nreturn (\n  <Container>\n    {options.name && (\n      <div className=\"mb-2\">\n        <label class=\"title\">{options.name.label ?? \"Name\"}</label>\n        <input class=\"form-input\" type=\"text\" value={state.metadata.name} />\n      </div>\n    )}\n    {options.image && (\n      <div className=\"mb-2\">\n        <label class=\"title\">{options.image.label ?? \"Image\"}</label>\n        <Widget\n          src=\"ref-admin.near/widget/ImageEditorTabs\"\n          props={{\n            image: state.image,\n            onChange: (image) => State.update({ image }),\n          }}\n        />\n      </div>\n    )}\n    {options.backgroundImage && (\n      <div className=\"mb-2\">\n        <label class=\"title\">\n          {options.backgroundImage.label ?? \"Background image\"}\n        </label>\n        <Widget\n          src=\"ref-admin.near/widget/ImageEditorTabs\"\n          props={{\n            image: state.backgroundImage,\n            onChange: (backgroundImage) => State.update({ backgroundImage }),\n          }}\n        />\n      </div>\n    )}\n    {options.description && (\n      <div className=\"mb-2\">\n        <label class=\"title\">\n          {options.description.label ?? \"Description\"}\n        </label>\n        <span className=\"text-white\"> (supports markdown)</span>\n        <textarea\n          className=\"form-textarea\"\n          rows={5}\n          value={state.metadata.description}\n          onChange={(e) => {\n            state.metadata.description = e.target.value;\n            State.update();\n          }}\n        />\n      </div>\n    )}\n    {options.tags && (\n      <div className=\"mb-2\">\n        <label class=\"title\">{options.tags.label ?? \"Tags\"}</label>\n        <Widget\n          src=\"ref-admin.near/widget/TagsEditor\"\n          props={{\n            initialTagsObject: metadata.tags,\n            tagsPattern: options.tags.pattern,\n            placeholder:\n              options.tags.placeholder ??\n              \"rust, engineer, artist, humanguild, nft, learner, founder\",\n            setTagsObject: (tags) => {\n              state.metadata.tags = tags;\n              State.update();\n            },\n          }}\n        />\n      </div>\n    )}\n    {options.linktree &&\n      (options.linktree.links ?? []).map((link) => (\n        <div className=\"mb-2 websit\">\n          <label class=\"title\">{link.label}</label>\n          <div className=\"input-group\">\n            <span className=\"input-group-text\">{link.prefix}</span>\n            <input\n              class=\"form-input\"\n              type=\"text\"\n              value={state.linktree[link.name]}\n            />\n          </div>\n        </div>\n      ))}\n  </Container>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/ref-admin.near/widget/MetadataEditor", "fact_widget_deployments_id": "4dc23de923240de3c780cf2361202446", "inserted_timestamp": "2000-01-01T00:00:00.000Z", "modified_timestamp": "2000-01-01T00:00:00.000Z", "__row_index": 44}