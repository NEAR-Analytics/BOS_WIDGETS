{"tx_hash": "Ae1DomCCUme5UTVBheo4A5ovJLTkKt4s5MYgyXyBQz3K", "action_id_social": "7LBHt7nk8Xn63Xm3axUuR6eToAeu7453kJq58XrDdy2H-0-widget", "block_id": 90065271, "block_timestamp": "2023-04-21T03:41:53.186Z", "signer_id": "ref-admin.near", "widget_name": "ImageEditorTabs", "source_code": "const Container = styled.div`\n  .tabContent{\n    display:inline-flex;\n    align-items:center;\n    background: rgba(26, 46, 51, 0.25);\n    border: 1px solid rgba(255, 255, 255, 0.3);\n    border-radius: 10px;\n    padding:3px 4px;\n    list-style-type:none;\n  }\n  .tab-item .active{\n    background: #304352;\n  }\n  .tab-item button{\n    background-color:transparent;\n    border-radius: 8px;\n    font-weight: 500;\n    font-size: 14px;\n    color:#fff;\n    height:30px;\n    padding:0 22px;\n    border:none;\n  }\n  .uploadButton .btn{\n    background: #304352;\n    border-radius: 10px;\n    font-weight: 500;\n    font-size: 14px;\n    color:#fff;\n    border:none;\n  }\n  .title{\n     font-weight: 500;\n     font-size: 16px;\n     color: #FFFFFF;\n     margin-bottom:10px;\n   }\n   .form-input{\n     display:block;\n     background: rgba(26, 46, 51, 0.25);\n     border: 0.5px solid rgba(255, 255, 255, 0.3);\n     border-radius: 10px;\n     height: 47px;\n     width:100%;\n     color:rgba(255, 255, 255, 0.3);\n     padding:0 10px\n   }\n   .form-input:focus-visible{\n     outline:none;\n   }\n`;\nconst image = props.image;\nconst onChange = props.onChange;\n\nconst Tab = {\n  Upload: \"Upload\",\n  NFT: \"NFT\",\n  URL: \"URL\",\n};\n\nconst origTab = () =>\n  image.nft.contractId || image.nft.tokenId\n    ? Tab.NFT\n    : !image.ipfs_cid && image.url\n    ? Tab.URL\n    : Tab.Upload;\n\nState.init({\n  origImage: image,\n  tab: origTab(),\n  url: image.url,\n  nft: image.nft ?? {},\n  img: { cid: image.ipfs_cid },\n});\n\nconst setTab = (tab) => State.update({ tab });\n\nif (JSON.stringify(image) !== JSON.stringify(state.image)) {\n  State.update({\n    image,\n  });\n}\n\nlet localImage = {};\n\nif (state.origImage.nft.contractId || state.origImage.nft.tokenId) {\n  localImage.nft = {};\n  if (state.origImage.nft.contractId) {\n    localImage.nft.contractId = null;\n  }\n  if (state.origImage.nft.tokenId) {\n    localImage.nft.tokenId = null;\n  }\n}\nif (state.origImage.ipfs_cid) {\n  localImage.ipfs_cid = null;\n}\nif (state.origImage.url) {\n  localImage.url = null;\n}\n\nif (state.tab === Tab.NFT && (state.nft.contractId || state.nft.tokenId)) {\n  localImage.nft = {\n    contractId: state.nft.contractId || \"\",\n    tokenId: state.nft.tokenId || \"\",\n  };\n} else if (state.tab === Tab.Upload && state.img.cid) {\n  localImage.ipfs_cid = state.img.cid;\n}\nif (state.tab === Tab.URL && state.url) {\n  localImage.url = state.url;\n}\n\nif (onChange && JSON.stringify(image) !== JSON.stringify(localImage)) {\n  onChange(localImage);\n}\n\nreturn (\n  <Container>\n    <ul className=\"tabContent\">\n      <li className=\"tab-item\">\n        <button\n          className={`${state.tab === Tab.Upload ? \"active\" : \"\"}`}\n          aria-current=\"page\"\n          onClick={() => setTab(Tab.Upload)}\n        >\n          Upload\n        </button>\n      </li>\n      <li className=\"tab-item\">\n        <button\n          className={`${state.tab === Tab.NFT ? \"active\" : \"\"}`}\n          aria-current=\"page\"\n          onClick={() => setTab(Tab.NFT)}\n        >\n          NFT\n        </button>\n      </li>\n      <li className=\"tab-item\">\n        <button\n          className={`${state.tab === Tab.URL ? \"active\" : \"\"}`}\n          aria-current=\"page\"\n          onClick={() => setTab(Tab.URL)}\n        >\n          URL\n        </button>\n      </li>\n    </ul>\n    <div\n      className=\"py-2\"\n      style={{\n        background: \"transparent\",\n        minHeight: \"9em\",\n      }}\n    >\n      <div\n        className={`uploadButton ${\n          state.tab === Tab.Upload ? \"\" : \"visually-hidden\"\n        }`}\n      >\n        <IpfsImageUpload image={state.img} />\n      </div>\n      <div className={`${state.tab === Tab.NFT ? \"\" : \"visually-hidden\"}`}>\n        <label class=\"title\">NFT contract</label>\n        <input class=\"form-input\" type=\"text\" value={state.nft.contractId} />\n        <label class=\"title\">NFT token id</label>\n        <input class=\"form-input\" type=\"text\" value={state.nft.tokenId} />\n      </div>\n      <div className={`${state.tab === Tab.URL ? \"\" : \"visually-hidden\"}`}>\n        <label class=\"title\">Image URL</label>\n        <input class=\"form-input\" type=\"text\" value={state.url} />\n      </div>\n    </div>\n  </Container>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/ref-admin.near/widget/ImageEditorTabs", "fact_widget_deployments_id": "ff79a06f3ff3d7b0749bbc44eef8d21b", "inserted_timestamp": "2000-01-01T00:00:00.000Z", "modified_timestamp": "2000-01-01T00:00:00.000Z", "__row_index": 9}