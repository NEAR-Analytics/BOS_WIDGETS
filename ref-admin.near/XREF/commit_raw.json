{"tx_hash": "5vsBFUWux1EJP8TKtBtMQFNX5nNbqutKnLvrWr7YmCnQ", "action_id_social": "F6p4GbQLhXtmPjcNGePErvK3DqzzYJnjxY9NtXLdBfkx-0-widget", "block_id": 98980763, "block_timestamp": "2023-08-17T02:14:27.162Z", "signer_id": "ref-admin.near", "widget_name": "XREF", "source_code": "/** common lib start */\nconst accountId = props.accountId || context.accountId;\nconst isSignedIn = !!accountId;\n\nfunction isValid(a) {\n  if (!a) return false;\n  if (isNaN(Number(a))) return false;\n  if (a === \"\") return false;\n  return true;\n}\n/** common lib end */\nfunction getConfig() {\n  return {\n    ownerId: \"ref-admin.near\",\n    contractId: \"linear-protocol.near\",\n    REF_TOKEN_ID: \"token.v2.ref-finance.near\",\n    XREF_TOKEN_ID: \"xtoken.ref-finance.near\",\n    nodeUrl: \"https://rpc.mainnet.near.org\",\n  };\n}\nconst config = getConfig(context.networkId);\nconst { tabName } = state;\nState.init({\n  tabName: \"stake\", // stake | unstake\n});\n\nconst Main = styled.div`\n  width:500px;\n  position: relative;\n`;\n\nconst updateTabName = (tabName) =>\n  State.update({\n    tabName,\n  });\n\nreturn (\n  <Main>\n    {props.tabName === \"stake\" && (\n      <Widget\n        src={`${config.ownerId}/widget/XREF.Stake`}\n        props={{ config, updateTabName, linearBalance, updateAccountInfo }}\n      />\n    )}\n    {props.tabName === \"unstake\" && (\n      <Widget\n        src={`${config.ownerId}/widget/XREF.Unstake`}\n        props={{ config, updateTabName, linearBalance, updateAccountInfo }}\n      />\n    )}\n  </Main>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/ref-admin.near/widget/XREF", "fact_widget_deployments_id": "05e24f96a836cce29c6e7cb1d6bc9e24", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 1}