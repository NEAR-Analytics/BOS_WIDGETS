{"tx_hash": "J29koTDVmcQWgZ6fAokK2BgGdHgTPdSvrVPnyv9kVcCS", "action_id_social": "45GHBkUGDizupbw4B3ZjWBRDor9U6udLxX7oHpqHamC2-0-widget", "block_id": 104612282, "block_timestamp": "2023-10-31T12:15:28.205Z", "signer_id": "relayer-demo.near", "widget_name": "GuestBook", "source_code": "const contract = \"guest-book.near\";\nconst relayerAccountId = \"relayer.pagodaplatform.near\";\nconst messages = Near.view(contract, \"getMessages\", {})\n  .reverse()\n  .filter(\n    (message) => message.sender === context.accountId\n  );\n\nState.init({\n  newMessage: \"\",\n});\n\nconst addNewMessage = () => {\n  if (state.newMessage.trim() == \"\") {\n    return;\n  }\n\n  Near.call(contract, \"addMessage\", {\n    text: state.newMessage,\n  });\n};\n\nconst userAccountStatus = fetch(\n  \"https://rpc.mainnet.near.org\",\n  {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      jsonrpc: \"2.0\",\n      id: \"dontcare\",\n      method: \"query\",\n      params: {\n        request_type: \"view_account\",\n        finality: \"final\",\n        account_id: context.accountId,\n      },\n    }),\n  }\n);\n\nconst relayerAccountStatus = fetch(\n  \"https://rpc.mainnet.near.org\",\n  {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      jsonrpc: \"2.0\",\n      id: \"dontcare\",\n      method: \"query\",\n      params: {\n        request_type: \"view_account\",\n        finality: \"final\",\n        account_id: relayerAccountId,\n      },\n    }),\n  }\n);\n\nconst nearAmount = (yocto) =>\n  (parseInt(yocto) / Math.pow(10, 24)).toFixed(2);\n\n// show message if userAccountStatus.body.result.amount is not zero\n\nreturn (\n  <div class=\"p-3\">\n    <h3 class=\"text-center\">\n      Relayer - no crypto no problem\n    </h3>\n    <br />\n    <h6>\n      {relayerAccountId} with a balance of{\" \"}\n      {nearAmount(relayerAccountStatus.body.result.amount)}{\" \"}\n      NEAR\n    </h6>\n    <h6></h6>\n    {context.accountId ? (\n      <div class=\"border border-black p-3\">\n        <h3>\n          Add a message as {context.accountId} with a\n          balance of{\" \"}\n          {nearAmount(userAccountStatus.body.result.amount)}{\" \"}\n          NEAR\n        </h3>\n        <div class=\"row\">\n          <div>\n            <input\n              placeholder=\"Message\"\n              onChange={(e) =>\n                State.update({ newMessage: e.target.value })\n              }\n            />\n          </div>\n        </div>\n        <button\n          class=\"btn btn-primary mt-2\"\n          onClick={async () => {\n            addNewMessage();\n          }}\n        >\n          Add Message\n        </button>\n      </div>\n    ) : (\n      <p class=\"text-center py-2\">\n        Log in to add a message\n      </p>\n    )}\n    <br />\n    <div class=\"border border-black p-3\">\n      <h3>Messages</h3>\n      <table className=\"table table-sm\">\n        <thead>\n          <tr class=\"p-3 mb-2 bg-primary text-white text-center\">\n            <th>Account ID</th>\n            <th>Message</th>\n          </tr>\n        </thead>\n        {messages.length == 0 ? (\n          <tbody>\n            <tr class=\"text-center\">\n              <td colSpan=\"2\">No messages yet</td>\n            </tr>\n          </tbody>\n        ) : (\n          <tbody>\n            {messages.map((data, key) => {\n              return (\n                <tr class=\"text-center\" key={key}>\n                  <td>{data.sender}</td>\n                  <td>{data.text}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        )}\n      </table>\n      {messages.length !== 0 && (\n        <a\n          href=\"https://nearblocks.io/address/patrick1234.near\"\n          target=\"_blank\"\n        >\n          View all transactions\n        </a>\n      )}\n    </div>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/relayer-demo.near/widget/GuestBook", "fact_widget_deployments_id": "917c0d8c3f9ea80a14d867e0452e54aa", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 3}