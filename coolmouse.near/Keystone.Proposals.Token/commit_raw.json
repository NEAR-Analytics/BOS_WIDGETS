{"tx_hash": "9xacqB7XUGuUpNKNCXaDRUF2k3mLxt8LpGSmonccVq3z", "action_id_social": "ATFX8tSHJycBaJPPHw7wgy2MuNSjTPH9yGjSkVvckmai-0-widget", "block_id": 108280098, "block_timestamp": "2023-12-18T21:31:13.083Z", "signer_id": "coolmouse.near", "widget_name": "Keystone.Proposals.Token", "source_code": "// constants\n\nconst abi = [\n  {\n    inputs: [\n      {\n        name: \"action\",\n        type: \"uint256\",\n      },\n      {\n        name: \"amount\",\n        type: \"uint256\",\n      },\n      {\n        name: \"data\",\n        type: \"bytes\",\n      },\n      {\n        name: \"lifetime\",\n        type: \"uint256\",\n      },\n      {\n        name: \"targets\",\n        type: \"address[3]\",\n      },\n    ],\n    name: \"propose\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        name: \"pos\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"token\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"token_count\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\nconst erc20Detailed = [\n  {\n    inputs: [],\n    name: \"decimals\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"name\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"symbol\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\nconst keystoneAddress = \"0xe8E8ED169DcAFD00C3C8Cc26Df4E273b14060d4e\"; // Bitkub Chain Mainnet\n\n// states\n\nState.init({\n  action: \"token-mint\",\n  amount: 0,\n  lifetime: 172800,\n  targetLabel: \"Recipient address\",\n  tokens: [],\n  tmpAmount: \"\",\n});\n\n// lifecycle hooks\n\n/**\n * watchEffect(amount)\n */\nif (state.amount !== null) {\n  // disallow non numeric input\n  /^$|^[0-9]*\\.?[0-9]*$/.test(`${state.amount}`)\n    ? State.update({ tmpAmount: `${amount}` })\n    : State.update({ amount: parseInt(tmpAmount) });\n}\n\n/**\n * watchEffect(action)\n */\nif (state.action !== null) {\n  if (state.action == \"token-list\") {\n    State.update({ targetLabel: \"Unlisted ERC-20 token address\" });\n  } else if (state.action == \"token-mint\") {\n    State.update({ targetLabel: \"To address\" });\n  } else if (state.action == \"token-transfer-ownership\") {\n    State.update({ targetLabel: \"Ownership recipient address\" });\n  } else {\n    // token-transfer\n    State.update({ targetLabel: \"Recipient address\" });\n  }\n}\n\n/**\n * onMounted\n */\nif (Ethers.provider()) {\n  const iface = new ethers.utils.Interface(abi);\n  const encodedData = iface.encodeFunctionData(\"token_count\", []);\n  Ethers.provider()\n    .call({\n      to: keystoneAddress,\n      data: encodedData,\n    })\n    .then((rawTokenCount) => {\n      const countHex = iface.decodeFunctionResult(\"token_count\", rawTokenCount);\n      let tokens = [];\n      const iERC20 = new ethers.utils.Interface(erc20Detailed);\n      const encodedNameCall = iERC20.encodeFunctionData(\"name\", []);\n      const encodedSymbolCall = iERC20.encodeFunctionData(\"symbol\", []);\n      const encodedDecimalsCall = iERC20.encodeFunctionData(\"decimals\", []);\n      for (let i = 0; i < parseInt(countHex.toString()); i++) {\n        const encodedData = iface.encodeFunctionData(\"token\", [i]);\n        Ethers.provider()\n          .call({\n            to: keystoneAddress,\n            data: encodedData,\n          })\n          .then(async (rawToken) => {\n            const tokenHex = iface.decodeFunctionResult(\"token\", rawToken);\n            const to = tokenHex.toString();\n            const token = {\n              address: to,\n              decimals: await Ethers.provider().call({\n                data: encodedDecimalsCall,\n                to,\n              }),\n              name: await Ethers.provider().call({ data: encodedNameCall, to }),\n              symbol: await Ethers.provider().call({\n                data: encodedSymbolCall,\n                to,\n              }),\n            };\n            tokens.push(token);\n          })\n          .catch(console.error);\n      }\n      State.update({ page: tokens });\n    })\n    .catch(console.error);\n}\n\n// funcs\nlet createProposal = () => {\n  let actionEnum = {\n    \"token-delist\": 16, // 2^4\n    \"token-list\": 32, // 2^5\n    \"token-mint\": 512, // 2^9\n    \"token-renounce-ownership\": 1024, // 2^10\n    \"token-transfer\": 2048, // 2^11\n    \"token-transfer-ownership\": 8192, // 2^14\n  }[state.action];\n  // fill targets\n  let targets = [];\n  if (\n    [\n      \"token-delist\",\n      \"token-mint\",\n      \"token-renounce-ownership\",\n      \"token-transfer\",\n      \"token-transfer-ownership\",\n    ].includes(state.action)\n  ) {\n    targets.push(state.selectedToken);\n  }\n  if (\n    [\"token-mint\", \"token-transfer\", \"token-transfer-ownership\"].includes(\n      state.action\n    )\n  ) {\n    targets.push(state.target);\n  }\n  for (let i = targets.length; i < 3; i++) {\n    targets.push(\"0x\" + \"0\".repeat(40));\n  }\n  // execute\n  let keystone;\n  try {\n    keystone = new ethers.Contract(\n      keystoneAddress,\n      abi,\n      Ethers.provider().getSigner()\n    );\n  } catch (err) {\n    console.error(\"Unable to instantiate contract connection.\");\n    return;\n  }\n  keystone\n    .propose(\n      actionEnum,\n      proposedAmount,\n      \"0x\" + \"0\".repeat(64),\n      state.lifetime,\n      targets\n    )\n    .then((transactionHash) => {\n      console.log(\"transactionHash is \" + transactionHash);\n    })\n    .catch((err) => {\n      console.error(err);\n    });\n};\n\nconst KeystoneContent = styled.div`\n  h1, h2, h3, h4, h5 {\n    margin: 0;\n  }\n  ol, ul, menu {\n    list-style: none;\n    margin: 0;\n    padding: 0;\n  }\n  .absolute {\n    position: absolute;\n  }\n  .breadcrumbs {\n    max-width: 100%;\n    overflow-x: auto;\n    padding-top: 0.5rem;\n    padding-bottom: 0.5rem;\n  }\n  .breadcrumbs > ul, .breadcrumbs > ol {\n    display: flex;\n    align-items: center;\n    white-space: nowrap;\n    min-height: min-content;\n  }\n  .breadcrumbs > ul > li, .breadcrumbs > ol > li {\n    display: flex;\n    align-items: center;\n  }\n  .breadcrumbs > ul > li + ::before, .breadcrumbs > ol > li + ::before {\n    content: \"\";\n    margin-left: 0.5rem;\n    margin-right: 0.75rem;\n    display: block;\n    height: 0.375rem;\n    width: 0.375rem;\n    transform: matrix(0.707107, 0.707107, -0.707107, 0.707107, 0, 0);\n    opacity: 0.4;\n    border-top: 1px solid;\n    border-right: 1px solid;\n    background-color: transparent;\n  }\n  .breadcrumbs > ul > li > a, .breadcrumbs > ol > li > a {\n    display: flex;\n    cursor: pointer;\n    align-items: center;\n  }\n  .btn {\n    display: inline-flex;\n    height: 3rem;\n    min-height: 3rem;\n    flex-shrink: 0;\n    cursor: pointer;\n    user-select: none;\n    flex-wrap: wrap;\n    align-items: center;\n    justify-content: center;\n    border-radius: 0.5rem;\n    border-color: transparent;\n    border-color: currentColor;\n    padding-left: 1rem;\n    padding-right: 1rem;\n    text-align: center;\n    font-size: 0.875rem;\n    line-height: 1em;\n    gap: 0.5rem;\n    font-weight: 600;\n    text-decoration-line: none;\n    transition-duration: 200ms;\n    transition-timing-function: cubic-bezier(0, 0, 0.2, 1);\n    border-width: 1px;\n    animation: button-pop 0.25s ease-out;\n    transition-property: color, background-color, border-color, opacity, box-shadow, transform;\n    color: currentColor;\n    box-shadow: 0 0 #0000, 0 0 #0000), 0;\n    outline-color: currentColor;\n    background-color: currentColor;\n  }\n  .btn-outline {\n    border-color: currentColor;\n    background-color: transparent;\n    box-shadow: 0 0 #0000, 0 0 #0000), 0;\n  }\n  .btn-secondary {\n    color: oklch(0.748 0.26 342.55);\n    border-color: oklch(0.748 0.26 342.55);\n  }\n  .glass, .glass.btn-active {\n    border: none;\n    backdrop-filter: blur(40px);\n    background-color: transparent;\n    background-image: linear-gradient(135deg, rgb(255 255 255 / 30%) 0%, rgb(0 0 0 / 0%) 100%), linear-gradient( 100deg, rgb(255 255 255 / 10%) 25%, rgb(0 0 0 / 0%) 25% );\n    box-shadow: 0 0 0 1px rgb(255 255 255 / 10%) inset, 0 0 0 2px rgb(0 0 0 / 5%);\n    text-shadow: 0 1px rgb(0 0 0 / 5%);\n  }\n  .card {\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    border-radius: 1rem;\n  }\n  .card-body {\n    display: flex;\n    flex: 1 1 auto;\n    flex-direction: column;\n    padding: 2rem;\n    gap: 0.5rem;\n  }\n  .card-title {\n    display: flex;\n    align-items: center;\n    gap: 0.5rem;\n    font-size: 1.25rem;\n    line-height: 1.75rem;\n    font-weight: 600;\n  }\n  .col-span-1 {\n    grid-column: span 1 / span 1;\n  }\n  .col-span-2 {\n    grid-column: span 2 / span 2;\n  }\n  .ease-in-out {\n    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n  }\n  .flex {\n    display: flex;\n  }\n  .float-right {\n    float: right;\n  }\n  .form-control {\n    display: flex;\n    flex-direction: column;\n  }\n  .grid {\n    display: grid;\n  }\n  .grid-flow-row-dense {\n    grid-auto-flow: row dense;\n  }\n  .h-full {\n    height: 100%;\n  }\n  .input {\n    flex-shrink: 1;\n    appearance: none;\n    height: 3rem;\n    padding-left: 1rem;\n    padding-right: 1rem;\n    font-size: 1rem;\n    line-height: 1.5rem;\n    border-radius: 0.5rem;\n    border-width: 1px;\n    border-color: transparent;\n    background-color: oklch(0.7206 0.191 231.6) / 0.2;\n  }\n  .input-info {\n    border-color: oklch(0.7206 0.191 231.6);\n  }\n  .justify-between {\n    justify-content: space-between;\n  }\n  .justify-center {\n    justify-content: center;\n  }\n  .label {\n    display: flex;\n    user-select: none;\n    align-items: center;\n    justify-content: space-between;\n    padding-left: 0.25rem;\n    padding-right: 0.25rem;\n    padding-top: 0.5rem;\n    padding-bottom: 0.5rem;\n  }\n  .label-text {\n    font-size: 0.875rem;\n    line-height: 1.25rem;\n    color: currentColor;\n  }\n  .left-12 {\n    left: 3rem;\n  }\n  .left-51 {\n    left: 11.75rem;\n  }\n  .left-100 {\n    left: 20rem;\n  }\n  .max-w-7xl {\n    max-width: 80rem;\n  }\n  .ml-4 {\n    margin-left: 1rem;\n  }\n  .mr-2 {\n    margin-right: 0.5rem;\n  }\n  .mx-auto {\n    margin-left: auto;\n    margin-right: auto;\n  }\n  .mx-20 {\n    margin-left: 5rem;\n    margin-right: 5rem;\n  }\n  .overflow-x-auto {\n    overflow-x: auto;\n  }\n  .px-2 {\n    padding-left: 0.5rem;\n    padding-right: 0.5rem;\n  }\n  .py-20 {\n    padding-top: 5rem;\n    padding-bottom: 5rem;\n  }\n  .pt-4 {\n    padding-top: 1rem;\n  }\n  .text-lg {\n    font-size: 1.125rem;\n    line-height: 1.75rem;\n  }\n  .text-xs {\n    font-size: 0.75rem;\n    line-height: 1rem;\n  }\n  .transition {\n    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;\n    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n    transition-duration: 150ms;\n  }\n  .w-5 {\n    width: 1.25rem;\n  }\n  .w-96 {\n    width: 24rem;\n  }\n  .w-full {\n    width: 100%;\n  }\n`;\n\nreturn (\n  <>\n    <Widget src=\"coolmouse.near/widget/Keystone.Navbar\" />\n    <KeystoneContent>\n      <div className=\"overflow-x-auto mx-20 pt-4\">\n        <div className=\"text-lg breadcrumbs\">\n          <ul>\n            <li>\n              <Link href=\"coolmouse.near/widget/Keystone.Index\"> Home </Link>\n            </li>\n            <li>\n              <Link href=\"coolmouse.near/widget/Keystone.Proposals.Index\">\n                {\" \"}\n                Proposals{\" \"}\n              </Link>\n            </li>\n            <li>\n              <svg\n                className=\"h-full w-5 mr-2\"\n                clipRule=\"evenodd\"\n                fill=\"currentColor\"\n                fillRule=\"evenodd\"\n                height=\"16px\"\n                version=\"1.1\"\n                viewBox=\"0 0 16 16\"\n                width=\"16px\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  d=\"\n                    M5.791 3.318\n                    L3.316 5.793\n                    a1 1 0 000 1.414\n                    l2.475 2.475\n                    a1 1 0 001.415 0\n                    L9.68 7.207\n                    a1 1 0 000-1.414\n                    L7.206 3.318\n                    a1 1 0 00-1.415 0z\n                    m.707 4.95\n                    L4.731 6.5\n                    l1.767-1.768\n                    L8.266 6.5 6.498 8.268z\n                  \"\n                />\n                <path\n                  d=\"\n                    M0 6.5\n                    a6.5 6.5 0 0112.346-2.845 6.5 6.5 0 11-8.691 8.691\n                    A6.5 6.5 0 010 6.5z\n                    m6.5-5\n                    a5 5 0 100 10 5 5 0 000-10z\n                    m6.5 5\n                    c0-.201-.01-.4-.027-.597\n                    a5 5 0 11-7.07 7.07\n                    A6.5 6.5 0 0013 6.5z\n                  \"\n                />\n              </svg>\n              Create a token proposal\n            </li>\n          </ul>\n        </div>\n        <div className=\"grid grid-flow-row-dense py-20\">\n          <div className=\"col-span-1\"></div>\n          <div className=\"col-span-2\">\n            <div className=\"card w-96 glass mx-auto\">\n              <div className=\"card-body\">\n                <h2 className=\"card-title\">Create a token proposal</h2>\n                <div className=\"form-control\">\n                  <label className=\"label\">\n                    <span className=\"label-text\">Select action</span>\n                  </label>\n                  <select\n                    aria-label=\"Select proposal action\"\n                    className=\"input input-bordered input-info max-w-xsrounded transition ease-in-out focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none\"\n                    onChange={(event) =>\n                      State.update({ action: event.target.value })\n                    }\n                  >\n                    <option value=\"token-mint\">Mint token to</option>\n                    <option value=\"token-transfer\">\n                      Withdraw token from controller\n                    </option>\n                    <option value=\"token-transfer-ownership\">\n                      Transfer token ownership\n                    </option>\n                    <option value=\"token-renounce-ownership\">\n                      Renounce token ownership\n                    </option>\n                    <option value=\"token-delist\">Delist token</option>\n                    <option value=\"token-list\">Enlist new token</option>\n                  </select>\n                </div>\n                {!!state.action &&\n                  [\n                    \"token-delist\",\n                    \"token-mint\",\n                    \"token-renounce-ownership\",\n                    \"token-transfer\",\n                    \"token-transfer-ownership\",\n                  ].includes(state.action) && (\n                    <div className=\"form-control\">\n                      <label className=\"label\">\n                        <span className=\"label-text\">Select token</span>\n                      </label>\n                      <select\n                        aria-label=\"Select token\"\n                        className=\"input input-bordered input-info\"\n                        onChange={(event) =>\n                          State.update({ selectedToken: event.target.value })\n                        }\n                        value={state.selectedToken}\n                      >\n                        {state.tokens.map((token) => (\n                          <option key={token.symbol} value={token.address}>\n                            {token.name} ({token.symbol})\n                          </option>\n                        ))}\n                      </select>\n                    </div>\n                  )}\n                {!!state.action &&\n                  [\n                    \"token-list\",\n                    \"token-mint\",\n                    \"token-transfer\",\n                    \"token-transfer-ownership\",\n                  ].includes(state.action) && (\n                    <div className=\"form-control\">\n                      <label className=\"label\">\n                        <span className=\"label-text\">{state.targetLabel}</span>\n                      </label>\n                      <input\n                        className=\"input input-bordered input-info w-full\"\n                        onChange={(event) =>\n                          State.update({ target: event.target.value })\n                        }\n                        placeholder=\"Address\"\n                        type=\"text\"\n                        value={state.target}\n                      />\n                    </div>\n                  )}\n                {!!state.action &&\n                  [\"token-mint\", \"token-transfer\"].includes(state.action) && (\n                    <div className=\"form-control\">\n                      <label className=\"label\">\n                        <span className=\"label-text\">Amount</span>\n                      </label>\n                      <input\n                        type=\"text\"\n                        min=\"0\"\n                        step=\"10000\"\n                        onChange={(event) => {\n                          State.update({ amount: event.target.value });\n                        }}\n                        placeholder=\"Amount\"\n                        className=\"input input-bordered input-info w-full\"\n                        value={state.amount}\n                      />\n                    </div>\n                  )}\n                {!!state.action && (\n                  <div className=\"form-control\" v-if=\"!!action\">\n                    <label className=\"label\">\n                      <span className=\"label-text\">Time until expiry</span>\n                    </label>\n                    <input\n                      className=\"range range-secondary\"\n                      type=\"range\"\n                      min=\"0\"\n                      max=\"172800\"\n                      onChange={(event) =>\n                        State.update({ lifetime: parseInt(event.target.value) })\n                      }\n                      step=\"21600\"\n                      value={state.lifetime}\n                    />\n                    <div className=\"w-full flex justify-between text-xs px-2\">\n                      <span>\n                        0<label className=\"absolute ml-4 left-12\">day</label>\n                      </span>\n                      <span>|</span>\n                      <span>\n                        1<label className=\"absolute ml-4 left-51\">day</label>\n                      </span>\n                      <span>|</span>\n                      <span>\n                        2\n                        <label className=\"absolute ml-4 left-100\"> days </label>\n                      </span>\n                    </div>\n                  </div>\n                )}\n                <div className=\"text-align-center justify-center\">\n                  <button\n                    className=\"btn btn-secondary btn-outline float-right\"\n                    onClick={createProposal}\n                  >\n                    Create proposal\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </KeystoneContent>\n  </>\n);\n", "metadata": {"description": "Form for creating new token proposal for the Keystone Index (listing, delisting, minting, transferring, ownership transferring, renouncing ownership)", "linktree": {"website": "krutt.fi"}, "name": "Keystone.Proposals.Token", "tags": {"bos-gg": "", "funding": "", "fundmanager": "", "index": "", "keystone": ""}}, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/coolmouse.near/widget/Keystone.Proposals.Token", "fact_widget_deployments_id": "3da68fc280c990bb1009fb8f5ea9552d", "inserted_timestamp": "2023-12-18T23:53:10.991Z", "modified_timestamp": "2023-12-20T03:22:11.422Z", "__row_index": 0}