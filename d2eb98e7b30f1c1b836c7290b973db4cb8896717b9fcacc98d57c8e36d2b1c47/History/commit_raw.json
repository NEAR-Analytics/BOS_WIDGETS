{"tx_hash": "EGkWAVQJ7yEdyqe6bnkJ5zCnJvmEjSaSWPCDz2hYRRu9", "action_id_social": "GWXQc7LaBWjpE1kuTGcx3hyEBTyJaTJptJRPGRQCje2B-0-widget", "block_id": 104985924, "block_timestamp": "2023-11-05T09:56:52.645Z", "signer_id": "d2eb98e7b30f1c1b836c7290b973db4cb8896717b9fcacc98d57c8e36d2b1c47", "widget_name": "History", "source_code": "const abi = fetch(\n  \"https://eth-sepolia.blockscout.com/api?module=contract&action=getabi&address=0x599105825869225cf48a60a91097930bd860A2AE\"\n);\n\nconst getEVMAccountId = () => {\n  if (ethers !== undefined) {\n    return Ethers.send(\"eth_requestAccounts\", [])[0] ?? \"\";\n  }\n  return \"\";\n};\n\nfunction calculateRiskScore(tokenDetails) {\n  // Assume that tokenDetails contains properties: gravity, responsibility, type\n  const gravity = parseInt(tokenDetails.gravity);\n  const responsibility = parseInt(tokenDetails.responsibility);\n  const type = tokenDetails.type;\n\n  // Check if it's a bonus token (0 in gravity, responsibility, and type)\n  if (gravity === 0 && responsibility === 0 && type === \"0\") {\n    return -0.5; // Adjust the risk score for bonus tokens\n  }\n\n  // Calculate a risk score based on gravity and responsibility\n  const riskScore = (gravity + responsibility) / 20; // Assuming gravity and responsibility range from 0 to 100\n\n  return riskScore;\n}\n\nState.init({\n  sender: \"0x5BBAC92F63c2f55db6d6f7D575397fB12CF04afc\",\n  balance: 0,\n  tokenDetailsArray: [],\n  mainScore: 5,\n});\n\nasync function getNfts() {\n  const wEthContract = new ethers.Contract(\n    \"0x599105825869225cf48a60a91097930bd860A2AE\",\n    abi.body.result,\n    Ethers.provider().getSigner()\n  );\n\n  wEthContract.balanceOf(state.sender).then((res) => {\n    state.balance = parseInt(res._hex, 16);\n    console.log(\"Balance: \", state.balance);\n\n    for (let i = state.balance - 1; i >= 0; i--) {\n      wEthContract.tokenOfOwnerByIndex(state.sender, i).then((res) => {\n        let tokenID = parseInt(res._hex, 16);\n        console.log(\"TokenID: \" + tokenID);\n\n        wEthContract.tokenURI(tokenID).then((res) => {\n          const base64String = res.split(\",\")[1];\n          //console.log(\"base64String\", base64String);\n          const buffer = Buffer.from(base64String, \"base64\");\n          const jsonString = buffer.toString(\"utf-8\");\n          //console.log(\"jsonString\", jsonString);\n\n          const jsonData = JSON.parse(jsonString);\n          //console.log(\"jsonData\", jsonData);\n        });\n      });\n    }\n  });\n}\n\nasync function scoreNfts() {\n  console.log(state.sender);\n  const wEthContract = new ethers.Contract(\n    \"0x599105825869225cf48a60a91097930bd860A2AE\",\n    abi.body.result,\n    Ethers.provider().getSigner()\n  );\n\n  wEthContract.balanceOf(state.sender).then((res) => {\n    state.balance = parseInt(res._hex, 16);\n    console.log(\"Balance: \", state.balance);\n\n    for (let i = state.balance - 1; i >= 0; i--) {\n      wEthContract.tokenOfOwnerByIndex(state.sender, i).then((res) => {\n        let tokenID = parseInt(res._hex, 16);\n        console.log(\"TokenID: \" + tokenID);\n\n        wEthContract.tokenURI(tokenID).then((res) => {\n          const base64String = res.split(\",\")[1];\n          //console.log(\"base64String\", base64String);\n          const buffer = Buffer.from(base64String, \"base64\");\n          const jsonString = buffer.toString(\"utf-8\");\n          //console.log(\"jsonString\", jsonString);\n          let tokenDetails = JSON.parse(jsonString);\n          console.log(tokenDetails);\n\n          state.tokenDetailsArray.push({\n            tokenId: tokenId,\n            gravity: tokenDetails.gravity,\n            type: tokenDetails.type,\n            responsibility: tokenDetails.responsibility,\n            date: tokenDetails.date,\n            image: tokenDetails.image,\n          });\n\n          state.mainScore += calculateRiskScore(tokenDetails);\n        });\n      });\n    }\n  });\n}\n\n//getNfts();\n//scoreNfts();\n\nreturn (\n  <>\n    <div>\n      <Web3Connect\n        className=\"swap-button-enabled swap-button-text p-2\"\n        connectLabel=\"Connect with Web3\"\n      />\n    </div>\n    <div>\n      <h2>My NFTs</h2>\n      <ul>\n        {state.tokenDetailsArray.map((item, index) => (\n          <div>\n            <div>\n              <h3>Axa</h3>\n              <p>gravity: {item.gravity}</p>\n              <p>type: {item.type}</p>\n              <p>responsibility: {item.responsibility}</p>\n              <p>date: {item.date}</p>\n            </div>\n            <div>\n              <img src={item.image} alt=\"NFT Image\" className=\"nft-image\" />\n            </div>\n          </div>\n        ))}\n      </ul>\n      <h2>My score</h2>\n      <p>My score is {state.mainScore}.</p>\n    </div>\n    <div>\n      <button onClick={scoreNfts}>Call function</button>\n    </div>\n    <button>Go back home</button>\n    \u00a0\u00a0\n  </>\n);\n", "metadata": null, "branch": {"draft": null}, "widget_modules_used": null, "widget_url": "https://near.social/#/d2eb98e7b30f1c1b836c7290b973db4cb8896717b9fcacc98d57c8e36d2b1c47/widget/History", "fact_widget_deployments_id": "dd173467c8e4dffe03b3b525645f45b6", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}