{"tx_hash": "4ShkBUSLuGNbCkF99NZjk8vAZRoxzGQnfkYAnYcJL1nN", "action_id_social": "ECnN47mc99Wh1ziLSUAMMZrx37ENELuP1bXGfuWKpkeo-0-widget", "block_id": 110148189, "block_timestamp": "2024-01-11T13:34:38.575Z", "signer_id": "evaluator.near", "widget_name": "Curriculum.GuestBook", "source_code": "const md = '# Lesson 2 - GuestBook\\n---\\n\\n## Overview:\\n \\n\\n##  Tasks:\\n\\n- Add a payable function `add_message` that adds a new message to the state. The function should accept a single parameter `text` that is a string. If the user attaches more than 0.1N the message should be premium.\\n\\n - Add a view function `get_messages` that returns an array of messages. The function should accept two parameters `from_index` and `limit`. The function should return an array of PostedMessage starting from `from_index` with length `limit`.\\n\\n## Run the tests:\\n\\n`npm run tests-ts` or `npm run tests-rs`\\n'\nconst evaluation_method = \"evaluate_guest_book\";\n\nreturn <>\n  <div class=\"bg-pink-300 p-8\">\n    <h1 class=\"text-6xl font-bold\">Guest-book</h1>\n  </div>\n\n  <div class=\"mt-4 px-8 text-gray-800\">\n    Lorem ipsum dolor sit amet consectetur adipisicing elit. Reiciendis, obcaecati. Minima neque quisquam repellat. Ducimus odio provident alias nisi architecto, illo ipsam eius quia maiores, rem eos dignissimos obcaecati illum.\n    <div class=\"text-right py-4\">\n      <button class=\"rounded-lg py-2 px-4 bg-blue-700 hover:bg-blue-800 text-gray-100\">Complete and Continue</button>\n    </div>\n  </div>\n\n  {/* Evaluation */}\n  <Widget src=\"evaluator.near/widget/Evaluate\" props={{ evaluation_method }} />\n\n  <div class=\"bg-pink-300 h-1\"></div>\n</>\n\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/evaluator.near/widget/Curriculum.GuestBook", "fact_widget_deployments_id": "a651f1156c9a92ec0d417f7db5124e59", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}