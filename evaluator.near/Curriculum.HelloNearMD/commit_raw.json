{"tx_hash": "8SzwVxCGy2vkPPy7WVQVdpB5o5JCYuXPLzdvjku415sd", "action_id_social": "639DjSJNWT2zF2ivR3BMHVSJJofCeyWuzroeqoBiR5xX-0-widget", "block_id": 111688348, "block_timestamp": "2024-01-30T12:11:54.165Z", "signer_id": "evaluator.near", "widget_name": "Curriculum.HelloNearMD", "source_code": "const evaluationName = \"Hello Near\";\nconst evaluationMethod = \"evaluate_hello_near\";\nconst accentColor = \"#BEF264\";\n\nconst text = (userAccountId) => (`\n# Hello Near\n\n### Concept:\nNEAR smart contracts are capable of storing and returning  values by exposing methods that we can interact with.\n\n### Resources:\n- [https://docs.near.org/develop/contracts/quickstart](https://docs.near.org/develop/contracts/quickstart)\n\n### Task:\nIn this evaluation we will create a simple contract that will store a **'greeting'** and expose two methods (**'set_greeting'**) and **'get_greeting'**) interact with.\n\n### TODO:\n- Add a public function **'get_greeting'** that returns the stored greeting from the contracts state\n- Add a public function **'set_greeting'** that takes a **greeting: string** as a parameter, such as 'howdy', and saves it to the contracts state\n\n### Interacting with the contract:\n\\`\\`\\`bash\n$ near call hello.${userAccountId} set_greeting '{\"greeting\": \"howdy\"}' --accountId ${userAccountId}\n> ''\n\\`\\`\\`\n\n\\`\\`\\`bash\n$ near view hello.${userAccountId} get_greeting\n> 'howdy'\n\\`\\`\\`\n\n### Run the tests:\n\nAfter we have made sure we are in the relevant directory we can run the tests by \\`npm run test - ts\\` or \\`npm run test - rs\\`\n`);\n\nreturn { evaluationName, evaluationMethod, accentColor, text }\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/evaluator.near/widget/Curriculum.HelloNearMD", "fact_widget_deployments_id": "79743d58f438d1fcddb1fcd4902a5776", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}