{"tx_hash": "DPQTcjhM8mRStfZwYss2rFcmyXnrWvGfnqTCwYDJWgAZ", "action_id_social": "ChgbfgitpP6WzwKPCCWdavwVZD9kw33yMK5wrMCeaMMr-0-widget", "block_id": 102096275, "block_timestamp": "2023-09-27T20:32:53.385Z", "signer_id": "zavodil.near", "widget_name": "dexlist", "source_code": "let appName = \"dexlist\";\n\nlet data = {\n  [appName]: {\n    chains: {\n      [state.chain_id]: {\n        [state.dex_name]: {\n          assets: state.assets,\n          coingecko_token_ids: state.coingecko_token_ids,\n          input_asset_token_id: state.input_asset_token_id,\n          output_asset_token_id: state.output_asset_token_id,\n          router_contract: state.router_contract,\n          router_contract_abi_url: state.router_contract_abi_url,\n          quoter_contract: state.quoter_contract,\n          quoter_contract_abi_url: state.quoter_contract_abi_url,\n        },\n      },\n    },\n  },\n};\nconsole.log(data, state);\n\nif (state.refresh) {\n  console.log(\"Refresh\");\n  State.update({\n    refresh: false,\n    assets: null,\n    coingecko_token_ids: null,\n    input_asset_token_id: null,\n    output_asset_token_id: null,\n    router_contract: null,\n    quoter_contract: null,\n  });\n\n  const chainId = state.chain_id;\n  if (!chainId) {\n    console.log(\"No chainId\");\n  }\n  const dexName = state.dex_name;\n  if (!dexName) {\n    console.log(\"No dexName\");\n  }\n  const chainlistData = Social.get(\n    `zavodil.near/${appName}/chains/${chainId}/${dexName}/**`,\n    \"final\"\n  );\n\n  console.log(\"chainlistData\", chainlistData);\n\n  State.update({\n    assets: chainlistData.assets,\n    coingecko_token_ids: chainlistData.coingecko_token_ids,\n    input_asset_token_id: chainlistData.input_asset_token_id,\n    output_asset_token_id: chainlistData.output_asset_token_id,\n    router_contract: chainlistData.router_contract,\n    quoter_contract: chainlistData.quoter_contract,\n  });\n}\n\nlet chainlistData = [];\n\nif (!state.dexDataListLoaded) {\n  const dexDataList = Social.get(`zavodil.near/${appName}/chains/**`, \"final\");\n\n  if (chainlist) {\n    State.update({\n      dexDataListLoaded: true,\n      dexDataList,\n    });\n  }\n} else {\n  /*dexData = Object.keys(state.chainlist).map((chainId) => (\n    <div>\n      <h5>{state.chainlist[chainId].name}</h5>\n      <div>\n        chainId: {chainId}{\" \"}\n        <button\n          class=\"btn btn-secondary btn-sm\"\n          onClick={() => {\n            State.update({ chain_id: chainId, refresh: true });\n          }}\n        >\n          Load\n        </button>\n      </div>\n      {Object.keys(state.chainlist[chainId]).map((name) => (\n        <div>\n          {name}:{\" \"}\n          {name === \"icon_svg\"\n            ? getSvgImage(state.chainlist[chainId][name], \"\", \"16px\")\n            : state.chainlist[chainId][name]}\n        </div>\n      ))}\n    </div>\n  ));*/\n}\n\nreturn (\n  <div class=\"container\">\n    <div class=\"form-floating\">\n      <div class=\"mb-3\">\n        <label for=\"chainId\" class=\"form-label\">\n          Chain ID\n        </label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          value={state.chain_id}\n          onChange={(e) => State.update({ chain_id: e.target.value })}\n          id=\"chainId\"\n        />\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"chainId\" class=\"form-label\">\n          Dex Name\n        </label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          value={state.dex_name}\n          onChange={(e) => State.update({ dex_name: e.target.value })}\n          id=\"chainId\"\n        />\n      </div>\n      <div class=\"mb-3\">\n        <input\n          type=\"button\"\n          class=\"btn btn-secondary mw-200\"\n          onClick={() => State.update({ refresh: true })}\n          disabled={!(state.chain_id && state.dex_name)}\n          value=\"Load Data by Chain ID & Dex Name\"\n        />\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"assets\" class=\"form-label\">\n          Assets List\n        </label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          value={state.assets}\n          onChange={(e) => State.update({ assets: JSON.parse(e.target.value) })}\n          id=\"assets\"\n        />\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"coingecko_token_ids\" class=\"form-label\">\n          Coingecko Token Ids List\n        </label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          value={state.coingecko_token_ids}\n          onChange={(e) =>\n            State.update({ coingecko_token_ids: e.target.value })\n          }\n          id=\"coingecko_token_ids\"\n        />\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"input_asset_token_id\" class=\"form-label\">\n          Input Asset Token Id\n        </label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          value={state.input_asset_token_id}\n          onChange={(e) =>\n            State.update({ input_asset_token_id: e.target.value })\n          }\n          id=\"input_asset_token_id\"\n        />\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"output_asset_token_id\" class=\"form-label\">\n          Output Asset Token Id\n        </label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          value={state.output_asset_token_id}\n          onChange={(e) =>\n            State.update({ output_asset_token_id: e.target.value })\n          }\n          id=\"output_asset_token_id\"\n        />\n      </div>\n\n      <div class=\"mb-3\">\n        <label for=\"router_contract\" class=\"form-label\">\n          Router Contract\n        </label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          value={state.router_contract}\n          onChange={(e) => State.update({ router_contract: e.target.value })}\n          id=\"router_contract\"\n        />\n      </div>\n\n      <div class=\"mb-3\">\n        <label for=\"router_contract_abi_url\" class=\"form-label\">\n          Router Contract ABI url\n        </label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          value={state.router_contract_abi_url}\n          onChange={(e) =>\n            State.update({ router_contract_abi_url: e.target.value })\n          }\n          id=\"router_contract_abi_url\"\n        />\n      </div>\n\n      <div class=\"mb-3\">\n        <label for=\"quoter_contract\" class=\"form-label\">\n          Quoter Contract\n        </label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          value={state.quoter_contract}\n          onChange={(e) => State.update({ quoter_contract: e.target.value })}\n          id=\"quoter_contract\"\n        />\n      </div>\n\n      <div class=\"mb-3\">\n        <label for=\"quoter_contract_abi_url\" class=\"form-label\">\n          Quoter Contract ABI url\n        </label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          value={state.quoter_contract_abi_url}\n          onChange={(e) =>\n            State.update({ quoter_contract_abi_url: e.target.value })\n          }\n          id=\"quoter_contract_abi_url\"\n        />\n      </div>\n\n      <div class=\"mb-3\">\n        <CommitButton\n          disabled={!(state.chain_id && state.dex_name)}\n          data={data}\n        >\n          Add a dex\n        </CommitButton>\n      </div>\n    </div>\n\n    <hr />\n    <h3>Data: </h3>\n    {JSON.stringify(data)}\n    {/*chainlistData*/}\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/zavodil.near/widget/dexlist", "fact_widget_deployments_id": "7f6f7e9ac5c3f8deff6fe4c824ee4c80", "inserted_timestamp": "2023-09-27T22:31:36.928Z", "modified_timestamp": "2023-09-27T22:31:36.928Z", "__row_index": 0}