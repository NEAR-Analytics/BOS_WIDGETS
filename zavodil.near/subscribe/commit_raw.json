{"tx_hash": "FcbTh2gSe8MWwAdnADz6MLsYSqknE9rekncbF3u1wqeT", "action_id_social": "HhQoj6WNYKHvUnvMsVA1oUFChxjesYaqMiDPozbEvVE1-0-widget", "block_id": 99067501, "block_timestamp": "2023-08-18T05:44:13.161Z", "signer_id": "zavodil.near", "widget_name": "subscribe", "source_code": "// read previousTimestamp\n// premium.social.near/badge/premium/\n// premium.social.near/badge/premium/accounts/${context.accountId}\nconst previousTimestamp = 1756975916422;\nconst price = \"96000000000000000000000000\";\nconst priceWholesale = \"84000000000000000000000000\";\n\nconst yearInMs = 31556926000;\n\nconst getEndDate = (purchasedPeriod) => {\n  console.log(\"purchasedPeriod\", purchasedPeriod);\n  const previousTimestamp = state.previousTimestamp ?? Date.now();\n  const nextTimestamp = previousTimestamp + purchasedPeriod;\n  const dateObj = new Date(nextTimestamp);\n\n  const day = dateObj.getDate();\n  const month = dateObj.toLocaleString(\"default\", { month: \"long\" });\n  const year = dateObj.getFullYear();\n\n  const nthNumber = (number) => {\n    if (number > 3 && number < 21) return \"th\";\n    switch (number % 10) {\n      case 1:\n        return \"st\";\n      case 2:\n        return \"nd\";\n      case 3:\n        return \"rd\";\n      default:\n        return \"th\";\n    }\n  };\n\n  return `${month} ${day}${nthNumber(day)}, ${year}`;\n};\n\nState.init({\n  type: \"custom\",\n  customAmount: 1,\n  previousTimestamp,\n  purchasedPeriod: 0,\n  price,\n  priceWholesale,\n});\n\nconst Theme = styled.div`\n    .container {\nbackground-color:#fff;\nbackground-position:0 -100px;\nbackground-repeat:no-repeat;\nbackground-image:url(https://pluminite.mypinata.cloud/ipfs/QmPDQvqLE9ZHAMZjPSYLybHprVfiEPCfo9LHy9bVfZZRtd);\nbackground-size:cover;\nbackground-position:bottom;\nheight:400px;\npadding:30px 12px 100px\n}\n\n.container-block {\nmargin:0 auto;\nmax-width:500px\n}\n\n.header {\nborder-radius:12px;\nbackground-color:#000;\ncolor:#fff;\npadding-top:12px;\npadding-right:16px;\nfont-size:20px;\nfont-weight:800;\ndisplay:flex;\ngap:10px;\npadding-left:16px;\nwidth:100%\n}\n\n.header-text {\nflex:4;\nfont-family:inherit;\nword-wrap:break-word;\npadding-bottom:10px\n}\n\n.illustration {\nflex:1;\nwidth:150px;\nmin-height:50px;\ndisplay:inline-block\n}\n\n.illustration img {\nwidth:100%\n}\n\n.radiogroup {\nmargin-top:24px;\nmargin-bottom:12px;\nwidth:100%\n}\n\n.selector {\ndisplay:flex;\nwidth:100%;\nbackground-color:#2a2d30;\npadding:10px;\nborder-radius:12px;\nalign:center\n}\n\n.menu-active {\nbackground-color:#000;\ncolor:rgba(231,233,234,1.00)!important;\nborder-radius:12px\n}\n\n.menu-active .menu-item-text {\ncolor:rgba(231,233,234,1.00)!important\n}\n\n.menu-item .sale {\ncolor:#c2f1dc;\nline-height:12px;\nfont-size:11px;\nfont-weight:700;\nmargin-left:10px\n}\n\n.menu-item {\npadding:4px;\nflex:1 1 0;\n-webkit-box-align:center;\nalign-items:center;\njustify-content:center;\ndisplay:flex;\ncursor:pointer;\ntext-align:center;\nfont-weight:700\n}\n\n.menu-item .menu-item-text {\ncolor:#71767b;\njustify-content:center;\ndisplay:flex;\nalign-items:center\n}\n\n.disabled {\npointer-events:none\n}\n\n.subscribe {\nborder:#000 1px solid;\nmargin:24px auto 0;\nbackground-color:#eff3f4;\nwidth:75%;\nmin-height:36px;\n-webkit-box-align:center;\ntext-align:center;\nborder-radius:999px;\ndisplay:flex;\njustify-content:center;\nalign-items:center\n}\n\n.subscribe-text {\ncursor:pointer;\njustify-content:center;\nfont-weight:700;\nflex-grow:1;\ncolor:#0f1419;\nflex-direction:row\n}\n\n.old-price {\ntext-decoration-line:line-through;\nfont-weight:initial\n}\n\n.subscribe-amount-block {\nwidth:75%;\ncolor:#fff;\nfont-weight:700;\ntext-align:center;\ndisplay:flex;\njustify-content:flex-start;\nalign-items:center;\nflex-direction:column;\nmargin:0 auto;\nmargin-top:24px\n}\n\n.subscribe-amount-text {\nmargin-bottom:8px;\ncolor:#71767b;\nfont-size:15px\n}\n\n.subscribe-amount {\nwidth:100%;\ntext-align:center\n}\n\n.action {\n}\n\n.premium-details {\npadding-top:20px;\ntext-align:center\n}\n`;\n\nconst isNumber = (n) => {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n};\n\nconst deposit = () => {\n  console.log(\"F\", state.customAmount);\n};\n\nconst convertNearToMs = (amount) => {\n  const amountYocto = Big(10).pow(24).mul(Big(amount));\n  const priceRegular = Big(state.price);\n  const priceWholesale = Big(state.priceWholesale);\n\n  const price = amountYocto.gt(priceWholesale) ? priceWholesale : priceRegular;\n\n  const res = amountYocto.mul(Big(yearInMs)).div(price).toFixed(0);\n\n  console.log(\"r\", res);\n\n  return Number(res);\n};\n\nreturn (\n  <Theme>\n    <div class=\"container\">\n      <div class=\"container-block\">\n        <div class=\"header\">\n          <div class=\"header-text\">\n            Premium subscribers will get a blue checkmark and extra features.\n          </div>\n          <div class=\"illustration\">\n            <img\n              draggable=\"false\"\n              src=\"https://pluminite.mypinata.cloud/ipfs/QmeaN2XXfa9fkaVw9QBpew69MKT7SxJtsgedoqttTfyGLm\"\n            />\n          </div>\n        </div>\n\n        <div class=\"radiogroup\">\n          <div class=\"selector\">\n            <div\n              class={`menu-item ${\n                state.type == \"annually\" ? \"menu-active\" : \"\"\n              }`}\n            >\n              <div\n                class=\"menu-item-text\"\n                onClick={() =>\n                  State.update({ type: \"annually\", purchasedPeriod: yearInMs })\n                }\n              >\n                Annually<div class=\"sale\">SAVE 12%</div>\n              </div>\n            </div>\n            <div\n              class={`menu-item ${\n                state.type == \"monthly\" ? \"menu-active\" : \"\"\n              }`}\n              onClick={() =>\n                State.update({\n                  type: \"monthly\",\n                  purchasedPeriod: yearInMs / 12,\n                })\n              }\n            >\n              <div class=\"menu-item-text\">Monthly</div>\n            </div>\n            <div\n              class={`menu-item ${state.type == \"custom\" ? \"menu-active\" : \"\"}`}\n              onClick={() => State.update({ type: \"custom\" })}\n            >\n              <div class=\"menu-item-text\">Custom</div>\n            </div>\n          </div>\n        </div>\n\n        {state.type !== \"custom\" && (\n          <div class=\"action\">\n            <div class=\"subscribe\">\n              <div class=\"subscribe-text\">\n                {state.type == \"monthly\" ? (\n                  <>8 NEAR / month</>\n                ) : (\n                  <>\n                    <span class=\"old-price\">96 NEAR</span> 84 NEAR / year\n                  </>\n                )}\n              </div>\n            </div>\n          </div>\n        )}\n        {state.type === \"custom\" && (\n          <div class=\"action\">\n            <div class=\"subscribe-amount-block\">\n              <div class=\"subscribe-amount-text\">Enter amount:</div>\n              <input\n                type=\"text\"\n                class=\"subscribe-amount\"\n                value={state.customAmount}\n                onChange={(e) => {\n                  const customAmount = isNumber(e.target.value)\n                    ? parseFloat(e.target.value)\n                    : \"\";\n                  State.update({\n                    customAmount,\n                    purchasedPeriod: customAmount\n                      ? convertNearToMs(customAmount)\n                      : 0,\n                  });\n                }}\n              />\n              <div class=\"subscribe\">\n                <div\n                  class={`subscribe-text ${\n                    state.customAmount > 1 ? \"\" : \"disabled\"\n                  } `}\n                  onClick={() => deposit()}\n                >\n                  {state.customAmount\n                    ? `Deposit ${state.customAmount} NEAR`\n                    : \"Min deposit: 1 NEAR\"}\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n        {state.purchasedPeriod > 0 && (\n          <div class=\"premium-details\">\n            You will have premium until: {getEndDate(state.purchasedPeriod)}\n          </div>\n        )}\n        {state.purchasedPeriod == 0 && state.previousTimestamp && (\n          <div class=\"premium-details\">\n            You've already got premium until: {getEndDate(0)}\n          </div>\n        )}\n      </div>\n    </div>\n  </Theme>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/zavodil.near/widget/subscribe", "fact_widget_deployments_id": "7b62bece6f0e7e94f7fa3154f3776a00", "inserted_timestamp": "2023-08-18T07:31:38.524Z", "modified_timestamp": "2023-08-18T07:31:38.524Z", "__row_index": 1}