{"tx_hash": "8HuDimx1WfjYjK63iKwHgqS3tnqPBiCQrjn4wFUbbdBY", "action_id_social": "ATH6XZC1Nr2scaSrb1xVhVKhUQM9TekWojNoNRuRv48Y-0-widget", "block_id": 97057117, "block_timestamp": "2023-07-22T08:58:50.820Z", "signer_id": "zavodil.near", "widget_name": "unwrap-weth", "source_code": "const receiver = Ethers.send(\"eth_requestAccounts\", [])[0];\n\nif (!receiver) {\n  // Web3 login button\n  return <Web3Connect />;\n}\n\nEthers.provider()\n  .getNetwork()\n  .then((chainIdData) => {\n    const chainId = chainIdData.chainId;\n    // load chain data for a current Chain Id from the Social DB (data storage on NEAR)\n    // all chainlist data: https://near.social/#/zavodil.near/widget/Explorer?path=zavodil.near/chainlist/**\n    const chainlistData = Social.get(\n      `zavodil.near/chainlist/*/${chainId}/**`,\n      \"final\"\n    );\n\n    State.update({\n      wethTokenId: chainlistData.contracts[chainId].weth,\n      network: chainlistData.chains[chainId].name,\n    });\n  });\n\nif (!state.wethTokenId) {\n  return \"Unknown WETH contract for a selected network\";\n}\n\nconst abiUrl =\n  \"https://eth.blockscout.com/api?module=contract&action=getabi&address=0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\";\n\nconst abi = fetch(abiUrl);\n\nif (!abi.ok) {\n  return \"Loading\";\n}\n\nconst iface = new ethers.utils.Interface(abi.body.result);\n\nconst encodedBalanceData = iface.encodeFunctionData(\"balanceOf\", [receiver]);\n\nEthers.provider()\n  .call({\n    to: state.wethTokenId,\n    data: encodedBalanceData,\n  })\n  .then((rawBalance) => {\n    const receiverBalanceHex = iface.decodeFunctionResult(\n      \"balanceOf\",\n      rawBalance\n    );\n\n    State.update({\n      balance: Big(receiverBalanceHex).toFixed(),\n    });\n  });\n\nconst unwrap = (balance) => {\n  const wEthContract = new ethers.Contract(\n    state.wethTokenId,\n    abi.body.result,\n    Ethers.provider().getSigner()\n  );\n\n  wEthContract.withdraw(balance, {}).then((transactionHash) => {\n    console.log(transactionHash);\n  });\n};\n\nif (!state.balance) {\n  return \"loading\";\n}\n\nreturn (\n  <div>\n    {state.network && <p>Current network is {state.network}.</p>}\n    <p>\n      Your balance is {Big(state.balance).div(Big(10).pow(18)).toFixed()} WETH.\n    </p>\n\n    {state.balance > 0 && (\n      <>\n        <hr />\n        <button onClick={() => unwrap(state.balance)}>UNWRAP</button>\n      </>\n    )}\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/zavodil.near/widget/unwrap-weth", "fact_widget_deployments_id": "9344a1963ad435d2a7641974f0212f21", "inserted_timestamp": "2000-01-01T00:00:00.000Z", "modified_timestamp": "2000-01-01T00:00:00.000Z", "__row_index": 0}