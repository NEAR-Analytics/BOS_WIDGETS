{"tx_hash": "J9D2WLPbauybyqUz2hVxxw2TycupddQssJULazs1VgHZ", "action_id_social": "ePk6qD4qvYmEdBQkWJCdqJUYPuDYyjH2h2ZPTEdp59o-0-widget", "block_id": 107839907, "block_timestamp": "2023-12-13T12:06:47.361Z", "signer_id": "hooksdemo.near", "widget_name": "Test.TransformInput", "source_code": "const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 50px;\n`;\n\nconst Label = styled.label`\n  margin-bottom: 10px;\n`;\n\nconst Input = styled.input`\n  padding: 8px;\n  font-size: 16px;\n`;\n\nconst Result = styled.p`\n  margin-top: 10px;\n  font-size: 18px;\n  color: #333;\n`;\n\nconst ToggleButton = styled.button`\n  padding: 10px 20px;\n  font-size: 16px;\n  cursor: pointer;\n  background-color: #3498db;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  margin-top: 20px;\n\n  &:hover {\n    background-color: #2980b9;\n  }\n`;\n\nconst [inputValue, setInputValue] = useState(\"\");\nconst [toggle, setToggle] = useState(false);\n\n// Let's assume this is a costly computation\nconst expensiveComputation = (input) => {\n  // Some time-consuming logic...\n  console.log(\"running\");\n  return input.toUpperCase();\n};\n\n// const resultWithoutMemo = expensiveComputation(inputValue);\n\n// Memoize the result of the expensive computation\nconst memoizedResult = useMemo(() => {\n  return expensiveComputation(inputValue);\n}, [inputValue]);\n\nreturn (\n  <Container>\n    <Label>\n      Type something:\n      <Input\n        type=\"text\"\n        value={inputValue}\n        onChange={(e) => setInputValue(e.target.value)}\n      />\n    </Label>\n    <Result>Transform to Uppercase: {memoizedResult}</Result>\n    <ToggleButton onClick={() => setToggle(!toggle)}>\n      Toggle - {toggle.toString()}\n    </ToggleButton>\n  </Container>\n);\n\n// const resultWithoutMemo = expensiveComputation(inputValue);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/hooksdemo.near/widget/Test.TransformInput", "fact_widget_deployments_id": "a00aa5762f6b7252b491c9ad08085b65", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}