{"tx_hash": "HTCcTSWLeQTd8PiFjJ3cQ8WKkuE5CTob13FJ38tDjtmK", "action_id_social": "HSSB8rqLQaFVdVjXhPLeB2oFTXD699KyneQVKmKAbfMm-0-widget", "block_id": 98978014, "block_timestamp": "2023-08-17T01:23:09.656Z", "signer_id": "carina.akaia.near", "widget_name": "gigs-board.entity.community.header", "source_code": "/* INCLUDE: \"common.jsx\" */\nconst nearDevGovGigsContractAccountId =\n  props.nearDevGovGigsContractAccountId ||\n  (context.widgetSrc ?? \"devgovgigs.near\").split(\"/\", 1)[0];\n\nconst nearDevGovGigsWidgetsAccountId =\n  props.nearDevGovGigsWidgetsAccountId ||\n  (context.widgetSrc ?? \"devgovgigs.near\").split(\"/\", 1)[0];\n\nfunction widget(widgetName, widgetProps, key) {\n  widgetProps = {\n    ...widgetProps,\n    nearDevGovGigsContractAccountId: props.nearDevGovGigsContractAccountId,\n    nearDevGovGigsWidgetsAccountId: props.nearDevGovGigsWidgetsAccountId,\n    referral: props.referral,\n  };\n\n  return (\n    <Widget\n      src={`${nearDevGovGigsWidgetsAccountId}/widget/gigs-board.${widgetName}`}\n      props={widgetProps}\n      key={key}\n    />\n  );\n}\n\nfunction href(widgetName, linkProps) {\n  linkProps = { ...linkProps };\n\n  if (props.nearDevGovGigsContractAccountId) {\n    linkProps.nearDevGovGigsContractAccountId =\n      props.nearDevGovGigsContractAccountId;\n  }\n\n  if (props.nearDevGovGigsWidgetsAccountId) {\n    linkProps.nearDevGovGigsWidgetsAccountId =\n      props.nearDevGovGigsWidgetsAccountId;\n  }\n\n  if (props.referral) {\n    linkProps.referral = props.referral;\n  }\n\n  const linkPropsQuery = Object.entries(linkProps)\n    .filter(([_key, nullable]) => (nullable ?? null) !== null)\n    .map(([key, value]) => `${key}=${value}`)\n    .join(\"&\");\n\n  return `/#/${nearDevGovGigsWidgetsAccountId}/widget/gigs-board.pages.${widgetName}${\n    linkPropsQuery ? \"?\" : \"\"\n  }${linkPropsQuery}`;\n}\n/* END_INCLUDE: \"common.jsx\" */\n/* INCLUDE: \"core/lib/gui/navigation\" */\nconst NavUnderline = styled.ul`\n  border-bottom: 1px #eceef0 solid;\n\n  a {\n    color: #687076;\n    text-decoration: none;\n  }\n\n  a.active {\n    font-weight: bold;\n    color: #0c7283;\n    border-bottom: 4px solid #0c7283;\n  }\n`;\n/* END_INCLUDE: \"core/lib/gui/navigation\" */\n/* INCLUDE: \"core/lib/struct\" */\nconst Struct = {\n  deepFieldUpdate: (\n    node,\n    { input, params, path: [nextNodeKey, ...remainingPath], via: toFieldValue }\n  ) => ({\n    ...node,\n\n    [nextNodeKey]:\n      remainingPath.length > 0\n        ? Struct.deepFieldUpdate(\n            Struct.typeMatch(node[nextNodeKey]) ||\n              Array.isArray(node[nextNodeKey])\n              ? node[nextNodeKey]\n              : {\n                  ...((node[nextNodeKey] ?? null) !== null\n                    ? { __archivedLeaf__: node[nextNodeKey] }\n                    : {}),\n                },\n\n            { input, path: remainingPath, via: toFieldValue }\n          )\n        : toFieldValue({\n            input,\n            lastKnownValue: node[nextNodeKey],\n            params,\n          }),\n  }),\n\n  isEqual: (input1, input2) =>\n    Struct.typeMatch(input1) && Struct.typeMatch(input2)\n      ? JSON.stringify(Struct.toOrdered(input1)) ===\n        JSON.stringify(Struct.toOrdered(input2))\n      : false,\n\n  toOrdered: (input) =>\n    Object.keys(input)\n      .sort()\n      .reduce((output, key) => ({ ...output, [key]: input[key] }), {}),\n\n  pick: (object, subsetKeys) =>\n    Object.fromEntries(\n      Object.entries(object ?? {}).filter(([key, _]) =>\n        subsetKeys.includes(key)\n      )\n    ),\n\n  typeMatch: (input) =>\n    input !== null && typeof input === \"object\" && !Array.isArray(input),\n};\n/* END_INCLUDE: \"core/lib/struct\" */\n/* INCLUDE: \"core/adapter/dev-hub\" */\nconst devHubAccountId =\n  props.nearDevGovGigsContractAccountId ||\n  (context.widgetSrc ?? \"devgovgigs.near\").split(\"/\", 1)[0];\n\nconst DevHub = {\n  get_root_members: () =>\n    Near.view(devHubAccountId, \"get_root_members\") ?? null,\n\n  has_moderator: ({ account_id }) =>\n    Near.view(devHubAccountId, \"has_moderator\", { account_id }) ?? null,\n\n  create_community: ({ inputs }) =>\n    Near.call(devHubAccountId, \"create_community\", { inputs }),\n\n  get_community: ({ handle }) =>\n    Near.view(devHubAccountId, \"get_community\", { handle }) ?? null,\n\n  get_account_community_permissions: ({ account_id, community_handle }) =>\n    Near.view(devHubAccountId, \"get_account_community_permissions\", {\n      account_id,\n      community_handle,\n    }) ?? null,\n\n  update_community: ({ handle, community }) =>\n    Near.call(devHubAccountId, \"update_community\", { handle, community }),\n\n  delete_community: ({ handle }) =>\n    Near.call(devHubAccountId, \"delete_community\", { handle }),\n\n  update_community_board: ({ handle, board }) =>\n    Near.call(devHubAccountId, \"update_community_board\", { handle, board }),\n\n  update_community_github: ({ handle, github }) =>\n    Near.call(devHubAccountId, \"update_community_github\", { handle, github }),\n\n  get_access_control_info: () =>\n    Near.view(devHubAccountId, \"get_access_control_info\") ?? null,\n\n  get_all_authors: () => Near.view(devHubAccountId, \"get_all_authors\") ?? null,\n\n  get_all_communities_metadata: () =>\n    Near.view(devHubAccountId, \"get_all_communities_metadata\") ?? null,\n\n  get_all_labels: () => Near.view(devHubAccountId, \"get_all_labels\") ?? null,\n\n  get_post: ({ post_id }) =>\n    Near.view(devHubAccountId, \"get_post\", { post_id }) ?? null,\n\n  get_posts_by_author: ({ author }) =>\n    Near.view(devHubAccountId, \"get_posts_by_author\", { author }) ?? null,\n\n  get_posts_by_label: ({ label }) =>\n    Near.view(nearDevGovGigsContractAccountId, \"get_posts_by_label\", {\n      label,\n    }) ?? null,\n\n  useQuery: (name, params) => {\n    const initialState = { data: null, error: null, isLoading: true };\n\n    const cacheState = useCache(\n      () =>\n        Near.asyncView(devHubAccountId, [\"get\", name].join(\"_\"), params ?? {})\n          .then((response) => ({\n            ...initialState,\n            data: response ?? null,\n            isLoading: false,\n          }))\n          .catch((error) => ({\n            ...initialState,\n            error: props?.error ?? error,\n            isLoading: false,\n          })),\n\n      JSON.stringify({ name, params }),\n      { subscribe: true }\n    );\n\n    return cacheState === null ? initialState : cacheState;\n  },\n};\n/* END_INCLUDE: \"core/adapter/dev-hub\" */\n/* INCLUDE: \"entity/viewer\" */\nconst Viewer = {\n  communityPermissions: ({ handle }) =>\n    DevHub.get_account_community_permissions({\n      account_id: context.accountId,\n      community_handle: handle,\n    }) ?? {\n      can_configure: false,\n      can_delete: false,\n    },\n\n  role: {\n    isDevHubModerator:\n      DevHub.has_moderator({ account_id: context.accountId }) ?? false,\n  },\n};\n/* END_INCLUDE: \"entity/viewer\" */\n\nconst Button = styled.button`\n  height: 40px;\n  font-size: 14px;\n  border-color: #e3e3e0;\n  background-color: #ffffff;\n`;\n\nconst Banner = styled.div`\n  max-width: 100%;\n  width: 1320px;\n  min-height: 240px;\n  height: 240px;\n`;\n\nconst CommunityHeader = ({ activeTabTitle, handle }) => {\n  State.init({ isLinkCopied: false });\n\n  const community = DevHub.get_community({ handle }),\n    permissions = Viewer.communityPermissions({ handle });\n\n  if (community === null) {\n    return <div>Loading...</div>;\n  }\n\n  const tabs = [\n    {\n      defaultActive: true,\n      iconClass: \"bi bi-house-door\",\n      route: \"community.activity\",\n      title: \"Activity\",\n    },\n\n    ...(!community?.features.wiki\n      ? []\n      : [community?.wiki1, community?.wiki2]\n          .filter((maybeWikiPage) => maybeWikiPage ?? false)\n          .map(({ name }, idx) => ({\n            params: { id: idx + 1 },\n            route: \"community.wiki\",\n            title: name,\n          }))),\n\n    {\n      iconClass: \"bi bi-people-fill\",\n      route: \"community.teams\",\n      title: \"Teams\",\n    },\n\n    ...(!community?.features.board\n      ? []\n      : [\n          {\n            iconClass: \"bi bi-kanban-fill\",\n            route: \"community.board\",\n            title: \"Board\",\n          },\n        ]),\n\n    ...(!community?.features.github\n      ? []\n      : [\n          {\n            iconClass: \"bi bi-github\",\n            route: \"community.github\",\n            title: \"GitHub\",\n          },\n        ]),\n\n    ...(!community?.features.telegram ||\n    (community?.telegram_handle.length ?? 0) === 0\n      ? []\n      : [\n          {\n            iconClass: \"bi bi-telegram\",\n            route: \"community.telegram\",\n            title: \"Telegram\",\n          },\n        ]),\n  ];\n\n  const linkCopyStateToggle = (forcedState) =>\n    State.update((lastKnownState) => ({\n      ...lastKnownState,\n      isLinkCopied: forcedState ?? !lastKnownState.isLinkCopied,\n    }));\n\n  const onShareClick = () =>\n    clipboard\n      .writeText(\"https://near.org\" + href(\"community.activity\", { handle }))\n      .then(linkCopyStateToggle(true));\n\n  return (\n    <div className=\"d-flex flex-column gap-3 bg-white\">\n      <Banner\n        className=\"object-fit-cover\"\n        style={{\n          background: `center / cover no-repeat url(${community.banner_url})`,\n        }}\n      />\n\n      <div className=\"d-md-flex d-block justify-content-between container\">\n        <div className=\"d-md-flex d-block align-items-end\">\n          <div className=\"position-relative\">\n            <div style={{ width: 150, height: 100 }}>\n              <img\n                alt=\"Loading logo...\"\n                className=\"border border-3 border-white rounded-circle shadow position-absolute\"\n                width=\"150\"\n                height=\"150\"\n                src={community.logo_url}\n                style={{ top: -50 }}\n              />\n            </div>\n          </div>\n\n          <div className=\"d-flex flex-column ps-3 pt-3 pb-2\">\n            <span className=\"h1 text-nowrap\">{community.name}</span>\n            <span className=\"text-secondary\">{community.description}</span>\n          </div>\n        </div>\n\n        <div className=\"d-flex align-items-end gap-3\">\n          {widget(\"components.molecule.button\", {\n            classNames: { root: \"btn-outline-light text-dark\" },\n            href: href(\"community.configuration\", { handle }),\n            icon: { kind: \"bootstrap-icon\", variant: \"bi-gear-wide-connected\" },\n            isHidden: !permissions.can_configure,\n            label: \"Configure community\",\n            type: \"link\",\n          })}\n\n          {widget(\"components.molecule.button\", {\n            classNames: { root: \"btn-outline-light text-dark\" },\n\n            icon: {\n              kind: \"bootstrap-icon\",\n              variant: state.isLinkCopied ? \"bi-check\" : \"bi-link-45deg\",\n            },\n\n            label: \"Share\",\n            onClick: onShareClick,\n            onMouseLeave: () => linkCopyStateToggle(false),\n          })}\n        </div>\n      </div>\n\n      <NavUnderline className=\"nav\">\n        {tabs.map(({ defaultActive, params, route, title }) =>\n          title ? (\n            <li className=\"nav-item\" key={title}>\n              <a\n                aria-current={defaultActive && \"page\"}\n                className={[\n                  \"d-inline-flex gap-2\",\n                  activeTabTitle === title ? \"nav-link active\" : \"nav-link\",\n                ].join(\" \")}\n                href={href(route, { handle, ...(params ?? {}) })}\n              >\n                <span>{title}</span>\n              </a>\n            </li>\n          ) : null\n        )}\n      </NavUnderline>\n    </div>\n  );\n};\n\nreturn CommunityHeader(props);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/carina.akaia.near/widget/gigs-board.entity.community.header", "fact_widget_deployments_id": "bc9c304ddc97a4f9b5036af0f7b1ce76", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 21}