{"tx_hash": "BbaQHDgXRAZ6RLkrgKZdqdq1NMafhKzfP3iGJcCmPqHh", "action_id_social": "BWvypnD8sc3BVeKNponu3ZmSb9DbB8HuDv3tFHzCyqJX-0-widget", "block_id": 98234251, "block_timestamp": "2023-08-06T23:14:38.022Z", "signer_id": "carina.akaia.near", "widget_name": "gigs-board.entity.project.kanban-view", "source_code": "/* INCLUDE: \"common.jsx\" */\nconst nearDevGovGigsContractAccountId =\n  props.nearDevGovGigsContractAccountId ||\n  (context.widgetSrc ?? \"devgovgigs.near\").split(\"/\", 1)[0];\n\nconst nearDevGovGigsWidgetsAccountId =\n  props.nearDevGovGigsWidgetsAccountId ||\n  (context.widgetSrc ?? \"devgovgigs.near\").split(\"/\", 1)[0];\n\nfunction widget(widgetName, widgetProps, key) {\n  widgetProps = {\n    ...widgetProps,\n    nearDevGovGigsContractAccountId: props.nearDevGovGigsContractAccountId,\n    nearDevGovGigsWidgetsAccountId: props.nearDevGovGigsWidgetsAccountId,\n    referral: props.referral,\n  };\n\n  return (\n    <Widget\n      src={`${nearDevGovGigsWidgetsAccountId}/widget/gigs-board.${widgetName}`}\n      props={widgetProps}\n      key={key}\n    />\n  );\n}\n\nfunction href(widgetName, linkProps) {\n  linkProps = { ...linkProps };\n\n  if (props.nearDevGovGigsContractAccountId) {\n    linkProps.nearDevGovGigsContractAccountId =\n      props.nearDevGovGigsContractAccountId;\n  }\n\n  if (props.nearDevGovGigsWidgetsAccountId) {\n    linkProps.nearDevGovGigsWidgetsAccountId =\n      props.nearDevGovGigsWidgetsAccountId;\n  }\n\n  if (props.referral) {\n    linkProps.referral = props.referral;\n  }\n\n  const linkPropsQuery = Object.entries(linkProps)\n    .filter(([_key, nullable]) => (nullable ?? null) !== null)\n    .map(([key, value]) => `${key}=${value}`)\n    .join(\"&\");\n\n  return `/#/${nearDevGovGigsWidgetsAccountId}/widget/gigs-board.pages.${widgetName}${\n    linkPropsQuery ? \"?\" : \"\"\n  }${linkPropsQuery}`;\n}\n/* END_INCLUDE: \"common.jsx\" */\n/* INCLUDE: \"core/lib/gui/attractable\" */\nconst AttractableDiv = styled.div`\n  box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075) !important;\n  transition: box-shadow 0.6s;\n\n  &:hover {\n    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15) !important;\n  }\n`;\n\nconst AttractableLink = styled.a`\n  box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075) !important;\n  transition: box-shadow 0.6s;\n\n  &:hover {\n    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15) !important;\n  }\n`;\n\nconst AttractableImage = styled.img`\n  box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075) !important;\n  transition: box-shadow 0.6s;\n\n  &:hover {\n    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15) !important;\n  }\n`;\n/* END_INCLUDE: \"core/lib/gui/attractable\" */\n/* INCLUDE: \"core/adapter/dev-hub\" */\nconst devHubAccountId =\n  props.nearDevGovGigsContractAccountId ||\n  (context.widgetSrc ?? \"devgovgigs.near\").split(\"/\", 1)[0];\n\nconst DevHub = {\n  edit_community_github: ({ handle, github }) =>\n    Near.call(devHubAccountId, \"edit_community_github\", { handle, github }) ??\n    null,\n\n  create_project: ({ tag, name, description }) =>\n    Near.call(devHubAccountId, \"create_project\", { tag, name, description }) ??\n    null,\n\n  update_project_metadata: ({ metadata }) =>\n    Near.call(devHubAccountId, \"update_project_metadata\", { metadata }) ?? null,\n\n  get_project_views_metadata: ({ project_id }) =>\n    Near.view(devHubAccountId, \"get_project_views_metadata\", { project_id }) ??\n    null,\n\n  create_project_view: ({ project_id, view }) =>\n    Near.call(devHubAccountId, \"create_project_view\", { project_id, view }) ??\n    null,\n\n  get_project_view: ({ project_id, view_id }) =>\n    Near.view(devHubAccountId, \"get_project_view\", { project_id, view_id }) ??\n    null,\n\n  update_project_view: ({ project_id, view }) =>\n    Near.call(devHubAccountId, \"create_project_view\", { project_id, view }) ??\n    null,\n\n  get_access_control_info: () =>\n    Near.view(devHubAccountId, \"get_access_control_info\") ?? null,\n\n  get_all_authors: () => Near.view(devHubAccountId, \"get_all_authors\") ?? null,\n\n  get_all_communities: () =>\n    Near.view(devHubAccountId, \"get_all_communities\") ?? null,\n\n  get_all_labels: () => Near.view(devHubAccountId, \"get_all_labels\") ?? null,\n\n  get_community: ({ handle }) =>\n    Near.view(devHubAccountId, \"get_community\", { handle }) ?? null,\n\n  get_post: ({ post_id }) =>\n    Near.view(devHubAccountId, \"get_post\", { post_id }) ?? null,\n\n  get_posts_by_author: ({ author }) =>\n    Near.view(devHubAccountId, \"get_posts_by_author\", { author }) ?? null,\n\n  get_posts_by_label: ({ label }) =>\n    Near.view(nearDevGovGigsContractAccountId, \"get_posts_by_label\", {\n      label,\n    }) ?? null,\n\n  get_root_members: () =>\n    Near.view(devHubAccountId, \"get_root_members\") ?? null,\n\n  useQuery: ({ name, params }) => {\n    const initialState = { data: null, error: null, isLoading: true };\n\n    const cacheState = useCache(\n      () =>\n        Near.asyncView(devHubAccountId, [\"get\", name].join(\"_\"), params ?? {})\n          .then((response) => ({\n            ...initialState,\n            data: response ?? null,\n            isLoading: false,\n          }))\n          .catch((error) => ({\n            ...initialState,\n            error: props?.error ?? error,\n            isLoading: false,\n          })),\n\n      JSON.stringify({ name, params }),\n      { subscribe: true }\n    );\n\n    return cacheState === null ? initialState : cacheState;\n  },\n};\n/* END_INCLUDE: \"core/adapter/dev-hub\" */\n\nconst view_configs_mock = {\n  fj3938fh: JSON.stringify({\n    ticket_kind: \"post-ticket\",\n\n    tags: {\n      excluded: [],\n      required: [\"near-social\"],\n    },\n\n    columns: [\n      { id: \"hr839hf2\", tag: \"widget\", title: \"Widget\" },\n      { id: \"iu495g95\", tag: \"integration\", title: \"Integration\" },\n      { id: \"i5hy2iu3\", tag: \"feature-request\", title: \"Feature Request\" },\n    ],\n  }),\n\n  f34tf3ea45: JSON.stringify({\n    ticket_kind: \"post-ticket\",\n\n    tags: {\n      excluded: [],\n      required: [\"gigs-board\"],\n    },\n\n    columns: [\n      { id: \"l23r34t4\", tag: \"nep\", title: \"NEP\" },\n      { id: \"f5rn09i4\", tag: \"badges\", title: \"Badges\" },\n      { id: \"v33xj3u8\", tag: \"feature-request\", title: \"Feature Request\" },\n    ],\n  }),\n\n  y45iwt4e: JSON.stringify({\n    ticket_kind: \"post-ticket\",\n\n    tags: {\n      excluded: [],\n      required: [\"funding\"],\n    },\n\n    columns: [\n      { id: \"gf39lk82\", tag: \"funding-new-request\", title: \"New Request\" },\n\n      {\n        id: \"dg39i49b\",\n        tag: \"funding-information-collection\",\n        title: \"Information Collection\",\n      },\n\n      { id: \"e3if93ew\", tag: \"funding-processing\", title: \"Processing\" },\n      { id: \"u8t3gu9f\", tag: \"funding-funded\", title: \"Funded\" },\n    ],\n  }),\n};\n\nconst configToColumns = (config) =>\n  config.columns.map((column) => {\n    const postIds = (\n      Near.view(nearDevGovGigsContractAccountId, \"get_posts_by_label\", {\n        label: column.tag,\n      }) ?? []\n    ).reverse();\n\n    return {\n      ...column,\n\n      postIds:\n        tags.required.length > 0\n          ? postIds.filter(\n              (postId) =>\n                postTagsToIdSet(tags.required).has(postId) &&\n                !postTagsToIdSet(tags.excluded).has(postId)\n            )\n          : postIds,\n    };\n  });\n\nconst ProjectKanbanView = ({\n  config,\n  metadata,\n  editorTrigger,\n  link,\n  permissions,\n}) => {\n  const configuration =\n    (config ?? null) !== null\n      ? config\n      : JSON.parse(\n          view_configs_mock[metadata.id] ?? // !TODO: Remove entire line before release\n            DevHub.useQuery({\n              name: \"project_view_config\",\n              params: { id: metadata.id },\n            }).data ??\n            JSON.stringify({})\n        );\n\n  const columns = configToColumns(configuration);\n\n  return (\n    <div className=\"d-flex flex-column gap-4 py-4\">\n      <div className=\"d-flex flex-column align-items-center gap-2\">\n        <h5 className=\"h5 d-inline-flex gap-2 m-0\">\n          <i className=\"bi bi-kanban-fill\" />\n\n          <span>\n            {(metadata.title?.length ?? 0) > 0\n              ? metadata.title\n              : \"Untitled view\"}\n          </span>\n        </h5>\n\n        <p className=\"m-0 py-1 text-secondary text-center\">\n          {(metadata.description?.length ?? 0) > 0\n            ? metadata.description\n            : \"No description provided\"}\n        </p>\n      </div>\n\n      <div className=\"d-flex justify-content-end gap-3\">\n        {(link ?? null) !== null ? (\n          <>\n            <a\n              className=\"card-link d-inline-flex me-auto\"\n              href={link}\n              rel=\"noreferrer\"\n              role=\"button\"\n              target=\"_blank\"\n              title=\"Link to this view\"\n            >\n              <span className=\"hstack gap-2\">\n                <i className=\"bi bi-share\" />\n                <span>Open in new tab</span>\n              </span>\n            </a>\n\n            <button\n              className=\"btn shadow btn-sm btn-outline-secondary d-inline-flex gap-2\"\n              onClick={() => clipboard.writeText(link)}\n            >\n              <i className=\"bi bi-clipboard-fill\" />\n              <span>Copy link</span>\n            </button>\n          </>\n        ) : null}\n\n        {permissions.can_configure && typeof editorTrigger === \"function\" ? (\n          <button\n            className=\"btn shadow btn-sm btn-primary d-inline-flex gap-2\"\n            onClick={editorTrigger}\n          >\n            <i className=\"bi bi-wrench-adjustable-circle-fill\" />\n            <span>Configure</span>\n          </button>\n        ) : null}\n      </div>\n\n      <div className=\"d-flex gap-3\" style={{ overflowX: \"auto\" }}>\n        {columns.length > 0 ? (\n          columns.map((column) => (\n            <div className=\"col-3\" key={column.id}>\n              <div className=\"card rounded-4\">\n                <div\n                  className={[\n                    \"card-body d-flex flex-column gap-3\",\n                    \"border border-2 border-secondary rounded-4\",\n                  ].join(\" \")}\n                >\n                  <h6 className=\"card-title h6 d-flex align-items-center gap-2 m-0\">\n                    {column.title}\n\n                    <span className=\"badge rounded-pill bg-secondary\">\n                      {column.postIds.length}\n                    </span>\n                  </h6>\n\n                  <p class=\"text-secondary m-0\">{column.description}</p>\n\n                  <div class=\"d-flex flex-column gap-3\">\n                    {column.postIds.map((postId) =>\n                      widget(\n                        [\"entity.project\", configuration.ticket_kind].join(\".\"),\n                        { id: postId },\n                        postId\n                      )\n                    )}\n                  </div>\n                </div>\n              </div>\n            </div>\n          ))\n        ) : (\n          <div\n            className={[\n              \"d-flex align-items-center justify-content-center\",\n              \"w-100 text-black-50 opacity-50\",\n            ].join(\" \")}\n            style={{ height: 384 }}\n          >\n            No columns were created so far.\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nreturn ProjectKanbanView(props);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/carina.akaia.near/widget/gigs-board.entity.project.kanban-view", "fact_widget_deployments_id": "e3d5e98d998d4687cacef9bf3b79dc30", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}