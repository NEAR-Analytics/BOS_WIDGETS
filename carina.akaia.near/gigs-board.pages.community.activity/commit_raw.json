{"tx_hash": "Hw3xaUmJpLLFCrNR61BBuUEW18F4oWeNzB3oPBy5a84S", "action_id_social": "2iwLNkmNJukjdKqQjYdjw7FDyCjaRzsUc5DrhgZurzja-0-widget", "block_id": 98616078, "block_timestamp": "2023-08-12T05:03:37.456Z", "signer_id": "carina.akaia.near", "widget_name": "gigs-board.pages.community.activity", "source_code": "/* INCLUDE: \"common.jsx\" */\nconst nearDevGovGigsContractAccountId =\n  props.nearDevGovGigsContractAccountId ||\n  (context.widgetSrc ?? \"devgovgigs.near\").split(\"/\", 1)[0];\n\nconst nearDevGovGigsWidgetsAccountId =\n  props.nearDevGovGigsWidgetsAccountId ||\n  (context.widgetSrc ?? \"devgovgigs.near\").split(\"/\", 1)[0];\n\nfunction widget(widgetName, widgetProps, key) {\n  widgetProps = {\n    ...widgetProps,\n    nearDevGovGigsContractAccountId: props.nearDevGovGigsContractAccountId,\n    nearDevGovGigsWidgetsAccountId: props.nearDevGovGigsWidgetsAccountId,\n    referral: props.referral,\n  };\n\n  return (\n    <Widget\n      src={`${nearDevGovGigsWidgetsAccountId}/widget/gigs-board.${widgetName}`}\n      props={widgetProps}\n      key={key}\n    />\n  );\n}\n\nfunction href(widgetName, linkProps) {\n  linkProps = { ...linkProps };\n\n  if (props.nearDevGovGigsContractAccountId) {\n    linkProps.nearDevGovGigsContractAccountId =\n      props.nearDevGovGigsContractAccountId;\n  }\n\n  if (props.nearDevGovGigsWidgetsAccountId) {\n    linkProps.nearDevGovGigsWidgetsAccountId =\n      props.nearDevGovGigsWidgetsAccountId;\n  }\n\n  if (props.referral) {\n    linkProps.referral = props.referral;\n  }\n\n  const linkPropsQuery = Object.entries(linkProps)\n    .filter(([_key, nullable]) => (nullable ?? null) !== null)\n    .map(([key, value]) => `${key}=${value}`)\n    .join(\"&\");\n\n  return `/#/${nearDevGovGigsWidgetsAccountId}/widget/gigs-board.pages.${widgetName}${\n    linkPropsQuery ? \"?\" : \"\"\n  }${linkPropsQuery}`;\n}\n/* END_INCLUDE: \"common.jsx\" */\n/* INCLUDE: \"core/adapter/dev-hub\" */\nconst devHubAccountId =\n  props.nearDevGovGigsContractAccountId ||\n  (context.widgetSrc ?? \"devgovgigs.near\").split(\"/\", 1)[0];\n\nconst DevHub = {\n  edit_community_github: ({ handle, github }) =>\n    Near.call(devHubAccountId, \"edit_community_github\", { handle, github }) ??\n    null,\n\n  create_workspace: ({ author_community_handle, metadata }) =>\n    Near.call(devHubAccountId, \"create_workspace\", {\n      author_community_handle,\n      metadata,\n    }) ?? null,\n\n  delete_workspace: ({ id }) =>\n    Near.call(devHubAccountId, \"delete_workspace\", { id }) ?? null,\n\n  update_workspace_metadata: ({ metadata }) =>\n    Near.call(devHubAccountId, \"update_workspace_metadata\", { metadata }) ??\n    null,\n\n  get_workspace_views_metadata: ({ workspace_id }) =>\n    Near.view(devHubAccountId, \"get_workspace_views_metadata\", {\n      workspace_id,\n    }) ?? null,\n\n  create_workspace_view: ({ view }) =>\n    Near.call(devHubAccountId, \"create_workspace_view\", { view }) ?? null,\n\n  update_workspace_view: ({ view }) =>\n    Near.call(devHubAccountId, \"update_workspace_view\", { view }) ?? null,\n\n  delete_workspace_view: ({ id }) =>\n    Near.call(devHubAccountId, \"delete_workspace_view\", { id }) ?? null,\n\n  get_access_control_info: () =>\n    Near.view(devHubAccountId, \"get_access_control_info\") ?? null,\n\n  get_all_authors: () => Near.view(devHubAccountId, \"get_all_authors\") ?? null,\n\n  get_all_communities: () =>\n    Near.view(devHubAccountId, \"get_all_communities\") ?? null,\n\n  get_all_labels: () => Near.view(devHubAccountId, \"get_all_labels\") ?? null,\n\n  get_community: ({ handle }) =>\n    Near.view(devHubAccountId, \"get_community\", { handle }) ?? null,\n\n  get_post: ({ post_id }) =>\n    Near.view(devHubAccountId, \"get_post\", { post_id }) ?? null,\n\n  get_posts_by_author: ({ author }) =>\n    Near.view(devHubAccountId, \"get_posts_by_author\", { author }) ?? null,\n\n  get_posts_by_label: ({ label }) =>\n    Near.view(nearDevGovGigsContractAccountId, \"get_posts_by_label\", {\n      label,\n    }) ?? null,\n\n  get_root_members: () =>\n    Near.view(devHubAccountId, \"get_root_members\") ?? null,\n\n  useQuery: ({ name, params }) => {\n    const initialState = { data: null, error: null, isLoading: true };\n\n    const cacheState = useCache(\n      () =>\n        Near.asyncView(devHubAccountId, [\"get\", name].join(\"_\"), params ?? {})\n          .then((response) => ({\n            ...initialState,\n            data: response ?? null,\n            isLoading: false,\n          }))\n          .catch((error) => ({\n            ...initialState,\n            error: props?.error ?? error,\n            isLoading: false,\n          })),\n\n      JSON.stringify({ name, params }),\n      { subscribe: true }\n    );\n\n    return cacheState === null ? initialState : cacheState;\n  },\n};\n/* END_INCLUDE: \"core/adapter/dev-hub\" */\n\nconst CommunityActivityPage = ({ handle }) => {\n  const communityData = DevHub.get_community({ handle });\n\n  if (communityData === null) {\n    return <div>Loading...</div>;\n  }\n\n  return widget(\"components.template.community-page\", {\n    handle,\n    title: \"Activity\",\n    children:\n      communityData !== null ? (\n        <div class=\"row\">\n          <div class=\"col-md-9\">\n            <div class=\"row mb-2\">\n              <div class=\"col\">\n                <div class=\"d-flex align-items-center justify-content-between\">\n                  <small class=\"text-muted\">\n                    <span>Required tags:</span>\n                    {widget(\"components.atom.tag\", {\n                      linkTo: \"Feed\",\n                      ...communityData,\n                    })}\n                  </small>\n                  {widget(\"components.layout.Controls\", {\n                    labels: communityData.tag,\n                  })}\n                </div>\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"col\">\n                {widget(\"entity.post.List\", { tag: communityData.tag })}\n              </div>\n            </div>\n          </div>\n          <div class=\"col-md-3 container-fluid\">\n            {widget(\"entity.community.sidebar\", {\n              handle: communityData.handle,\n            })}\n          </div>\n        </div>\n      ) : (\n        <div>Loading ...</div>\n      ),\n  });\n};\n\nreturn CommunityActivityPage(props);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/carina.akaia.near/widget/gigs-board.pages.community.activity", "fact_widget_deployments_id": "1e6cb42a5413bc7f529a9424927fbc49", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 13}