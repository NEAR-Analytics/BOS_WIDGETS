{"tx_hash": "AXY9T3EhRQWuZRnBJgj1d9GSsw1rxc18jhUGoAS6AGgT", "action_id_social": "7oLTz5X1EKo5N8f7Zo3XzTw6tvAGNRZsgbfDQNnK7QZf-0-widget", "block_id": 101094282, "block_timestamp": "2023-09-14T08:11:31.965Z", "signer_id": "opencann.near", "widget_name": "substance.new", "source_code": "const widget = (src, props, other) => (\r\n  <Widget src={src} props={props} {...other} />\r\n);\r\n\r\nconst UUID = {\r\n  generate: (template) => {\r\n    if (typeof template !== \"string\") {\r\n      template = \"xxxxxxxx-xxxx-xxxx-yxxx-xxxxxxxxxxxx\";\r\n    }\r\n    return template.replace(/[xy]/g, (c) => {\r\n      var r = (Math.random() * 16) | 0;\r\n      var v = c === \"x\" ? r : (r & 0x3) | 0x8;\r\n      return v.toString(16);\r\n    });\r\n  },\r\n};\r\n\r\nconst { handleCreateSubstance, defaultSubstance, buttonChildren, buttonProps } =\r\n  props;\r\n\r\nState.init({\r\n  error: undefined,\r\n  substance: defaultSubstance ?? {\r\n    id: UUID.generate(),\r\n    logo: undefined,\r\n    title: undefined,\r\n    description: undefined,\r\n    tags: [],\r\n  },\r\n});\r\n\r\nconst update = (k, v) => State.update({ [k]: v });\r\nconst updateP = (k, v) => update(\"substance\", { ...state.substance, [k]: v });\r\n\r\nconst beforeHandleCreateSubstance = () => {\r\n  update(\"error\", undefined);\r\n  if (!state.substance.title) {\r\n    update(\"error\", \"Name is required\");\r\n  }\r\n  if (!state.error) {\r\n    handleCreateSubstance(state.substance);\r\n  }\r\n};\r\n\r\nconst IT = \"nearui.near/widget/Input.ExperimentalText\";\r\nconst SI = \"nearui.near/widget/Social.ImageUpload\";\r\nconst IB = \"nearui.near/widget/Input.Button\";\r\nreturn (\r\n  <div className=\"p-4 bg-white rounded-4\">\r\n    <div className=\"d-flex flex-column gap-3\">\r\n      <h3>{buttonChildren || \"Create Substance\"}</h3>\r\n      {widget(IT, {\r\n        label: \"Substance Name\",\r\n        placeholder: \"New substance\",\r\n        inputProps: {\r\n          defaultValue: state.substance.title,\r\n        },\r\n        onChange: (v) => updateP(\"title\", v),\r\n      })}\r\n      {widget(IT, {\r\n        label: \"Description\",\r\n        placeholder: \"Describe this substance\",\r\n        textarea: true,\r\n        inputProps: {\r\n          defaultValue: state.substance.description,\r\n        },\r\n        onChange: (v) => updateP(\"description\", v),\r\n      })}\r\n      {widget(IT, {\r\n        label: \"Tags\",\r\n        placeholder: \"Separate with commas\",\r\n        inputProps: {\r\n          defaultValue: state.substance.tags.join(\", \"),\r\n        },\r\n        onChange: (v) =>\r\n          updateP(\r\n            \"tags\",\r\n            (v || \"\")\r\n              .split(\",\")\r\n              .filter((v) => v !== \"\")\r\n              .map((v) => v.trim())\r\n          ),\r\n      })}\r\n      <h6 className=\"mb-0\">Logo</h6>\r\n      {state.substance.logo && (\r\n        <img src={state.substance.logo} alt=\"\" height={100} width={100} />\r\n      )}\r\n      {widget(SI, {\r\n        onChange: (v) => updateP(\"logo\", v),\r\n        value: state.substance.logo,\r\n      })}\r\n      <div className=\"text-danger mt-2\">{state.error}</div>\r\n      {widget(IB, {\r\n        children: buttonChildren ?? \"Create Substance\",\r\n        variant: \"success\",\r\n        onClick: () => beforeHandleCreateSubstance(),\r\n      })}\r\n    </div>\r\n  </div>\r\n);\r\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/opencann.near/widget/substance.new", "fact_widget_deployments_id": "93f47c19ce4473cbf369b580c67cd571", "inserted_timestamp": "2023-09-14T10:19:38.264Z", "modified_timestamp": "2023-09-14T10:19:38.264Z", "__row_index": 1}