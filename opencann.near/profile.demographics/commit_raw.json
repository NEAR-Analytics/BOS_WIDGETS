{"tx_hash": "DcixVgjrttE5gzLePEMnV4vX2S6RHoAn9n5BuALLuBUJ", "action_id_social": "ExmFe6vQSmARqbZRxG6UJdzk3pSKhTLHf5huxX7Z7aTz-0-widget", "block_id": 101132943, "block_timestamp": "2023-09-14T20:59:48.852Z", "signer_id": "opencann.near", "widget_name": "profile.demographics", "source_code": "const accountId = props.accountId ?? context.accountId;\r\nconst onChange = props.onChange;\r\nconst options = props.options;\r\n\r\n//const medications = VM.require(\"opencann.near/widget/pharm.array\"};\r\n//const conditions = VM.require(\"opencann.near/widget/conditions.array\"};\r\n\r\nconst astrological_sign = [\r\n  { text: \"Aries\", value: \"Aries\" },\r\n  { text: \"Taurus\", value: \"Taurus\" },\r\n  { text: \"Gemini\", value: \"Gemini\" },\r\n  { text: \"Cancer\", value: \"Cancer\" },\r\n  { text: \"Leo\", value: \"Leo\" },\r\n  { text: \"Virgo\", value: \"Virgo\" },\r\n  { text: \"Libra\", value: \"Libra\" },\r\n  { text: \"Scorpio\", value: \"Scorpio\" },\r\n  { text: \"Sagittarius\", value: \"Sagittarius\" },\r\n  { text: \"Capricorn\", value: \"Capricorn\" },\r\n  { text: \"Aquarius\", value: \"Aquarius\" },\r\n  { text: \"Pisces\", value: \"Pisces\" },\r\n];\r\n\r\nconst sexOptions = [\r\n  { text: \"Male\", value: \"Male\" },\r\n  { text: \"Female\", value: \"Female\" },\r\n  { text: \"Intersex\", value: \"Intersex\" },\r\n  { text: \"Other\", value: \"Other\" },\r\n];\r\n\r\nif (context.loading) {\r\n  return (\r\n    <>\r\n      <h2>)\"Loading...\"</h2>\r\n    </>\r\n  );\r\n}\r\n\r\nif (!accountId) {\r\n  return (\r\n    <>\r\n      <h2>\"Please sign in with a NEAR ecosystem wallet to use this widget\"</h2>\r\n    </>\r\n  );\r\n}\r\n\r\nlet optInInfo = {};\r\nlet changeLog = [];\r\n\r\nconst initialState = {\r\n  accountId,\r\n  birthday: \"\",\r\n  astrological_sign: \"\",\r\n  age: \"\",\r\n  sex: \"\",\r\n  gender: \"\",\r\n  profession: \"\",\r\n  income: \"\",\r\n  preferred_wallet: \"\",\r\n  preferred_nft_marketplace: \"\",\r\n  preferred_crypto: \"\",\r\n  saveState: \"Started\",\r\n  height: \"\",\r\n  weight: \"\",\r\n  cannabisUse: \"\",\r\n  cannabisTolerance: \"\",\r\n  psychonautLevel: \"\",\r\n  medications: \"\",\r\n  conditions: \"\",\r\n  celebrity: \"\",\r\n  email: \"\",\r\n};\r\n\r\nState.init(initialState);\r\n\r\nfunction fetchDataFromAPI() {\r\n  const data = fetch(``, {\r\n    method: \"GET\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  });\r\n}\r\n\r\nfunction reportEventToAPI() {\r\n  const data = fetch(`https://dev.kitwallet.app/producer/${accountId}/event`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      accountId,\r\n      events: [{ type: \"updateProfile\", data: \"coolwhip\" }],\r\n    }),\r\n  });\r\n}\r\n\r\nfunction registerProfileToAPI() {\r\n  const data = fetch(`https://dev.kitwallet.app/producer`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      accountId,\r\n      profile: state,\r\n    }),\r\n  });\r\n}\r\n\r\nfunction setFormStatusOnAccount() {\r\n  State.update({ optInInfoFormStatus: \"completed\" });\r\n}\r\n\r\nfunction addChangeLogEntry() {\r\n  const dateTime = Date.now();\r\n  // const timestampUTC = dateTime.toUTCString();\r\n  const changeEvent = { thisEvent: \"form submitted\", timestamp: dateTime };\r\n  changeLog.push(changeEvent);\r\n  return changeLog;\r\n}\r\n\r\nfunction handleOnClick() {\r\n  reportEventToAPI();\r\n  registerProfileToAPI();\r\n}\r\n\r\nfunction handleOnCommit() {\r\n  setFormStatusOnAccount();\r\n}\r\n\r\nfunction handleChangeOnInput(event) {\r\n  State.update({\r\n    [event.target.id]: event.target.value,\r\n    saveState: \"in progress...\",\r\n  });\r\n}\r\nconst Form = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n  width: 60%;\r\n  gap: 1em;\r\n`;\r\n\r\nlet page = (\r\n  <div>\r\n    <h2>{`Hello, ${accountId}!`}</h2>\r\n    <hr></hr>\r\n    <div>\r\n      <h5>Demographic Data</h5>\r\n    </div>\r\n    <div>\r\n      <ul>\r\n        <li>All items below are optional and encrypted by default.</li>\r\n        <li>Your account retains exclusive control over this data</li>\r\n        <li>\r\n          You can opt-in to enable decryption of this data for additional\r\n          rewards by adjusting your{\" \"}\r\n          <a href=\"#/sking.near/widget/DAO.Permissions\">Permissions Settings</a>\r\n          .\r\n        </li>\r\n      </ul>\r\n    </div>\r\n    <p>\r\n      {`Instructions: Please fill out the following information. This data is private!\r\n      Only include the data you are willing to share with analytics queries. \r\n      Everytime your data is accessed in a query, you will earn NEAR!`}\r\n    </p>\r\n    <p></p>\r\n    <div id=\"optInDataForm\">\r\n      {options.birthday.label ?? \"Birthday\"}\r\n      <input\r\n        id=\"birthday\"\r\n        type=\"date\"\r\n        value={state.birthday}\r\n        onChange={(event) => handleChangeOnInput(event)}\r\n      />\r\n      <Widget\r\n        src={`crowdtestify.near/widget/Inputs.Select`}\r\n        props={{\r\n          label: \"Astrological Sign\",\r\n          placeholder: \"Aries\",\r\n          sexOptions,\r\n          value: state.astrological_sign,\r\n          onChange: (astrological_sign) => State.update({ astrological_sign }),\r\n          validate: () => {\r\n            return;\r\n          },\r\n        }}\r\n      />\r\n      <Widget\r\n        src={`crowdtestify.near/widget/Inputs.Number`}\r\n        props={{\r\n          label: \"Age\",\r\n          placeholder: \"Example: 21\",\r\n          onChange: (event) => State.update({ age }),\r\n          validate: () => {\r\n            // add age verification???\r\n            return;\r\n          },\r\n        }}\r\n      />\r\n      <Widget\r\n        src={`crowdtestify.near/widget/Inputs.Number`}\r\n        props={{\r\n          label: \"Height\",\r\n          placeholder: \"Example: 175cm\",\r\n          onChange: (event) => State.update({ height }),\r\n          validate: () => {\r\n            return;\r\n          },\r\n        }}\r\n      />\r\n      <Widget\r\n        src={`crowdtestify.near/widget/Inputs.Number`}\r\n        props={{\r\n          label: \"Weight\",\r\n          placeholder: \"Example: 150lbs\",\r\n          onChange: (event) => State.update({ weight }),\r\n          validate: () => {\r\n            return;\r\n          },\r\n        }}\r\n      />\r\n      <Widget\r\n        src={`crowdtestify.near/widget/Inputs.Text`}\r\n        props={{\r\n          label: \"Sex\",\r\n          placeholder: \"Example: Female\",\r\n          value: state.sex,\r\n          onChange: (event) => State.update({ sex }),\r\n          validate: () => {\r\n            return;\r\n          },\r\n        }}\r\n      />\r\n      <Widget\r\n        src={`crowdtestify.near/widget/Inputs.Text`}\r\n        props={{\r\n          label: \"Gender\",\r\n          value: state.gender,\r\n          onChange: (event) => State.update({ gender }),\r\n          validate: () => {\r\n            return;\r\n          },\r\n        }}\r\n      />\r\n      <Widget\r\n        src={`crowdtestify.near/widget/Inputs.Text`}\r\n        props={{\r\n          label: \"Profession\",\r\n          placeholder: \"Example: Pro Wrestler\",\r\n          value: state.profession,\r\n          onChange: (event) => State.update({ profession }),\r\n          validate: () => {\r\n            return;\r\n          },\r\n        }}\r\n      />\r\n      <Widget\r\n        src={`crowdtestify.near/widget/Inputs.Number`}\r\n        props={{\r\n          label: \"Income\",\r\n          placeholder: \"12,345\",\r\n          onChange: (event) => State.update({ income }),\r\n          hasDollar: true,\r\n          validate: () => {\r\n            return;\r\n          },\r\n        }}\r\n      />\r\n      {options.preferred_wallet.label ?? \"Preferred Wallet\"}\r\n      <input\r\n        id=\"preferred_wallet\"\r\n        type=\"text\"\r\n        value={state.preferred_wallet}\r\n        onChange={(event) => handleChangeOnInput(event)}\r\n      />\r\n      {options.preferred_nft_marketplace.label ?? \"Preferred NFT Marketplace\"}\r\n      <input\r\n        id=\"preferred_nft_marketplace\"\r\n        type=\"text\"\r\n        value={state.preferred_nft_marketplace}\r\n        onChange={(event) => handleChangeOnInput(event)}\r\n      />\r\n      {options.preferred_crypto.label ?? \"Preferred Crypto\"}\r\n      <input\r\n        id=\"preferred_crypto\"\r\n        type=\"text\"\r\n        value={state.preferred_crypto}\r\n        onChange={(event) => handleChangeOnInput(event)}\r\n      />\r\n      {options.cannabisUse.label ?? \"Have you ever used cannabis before?\"}\r\n      <input\r\n        id=\"cannabisUse\"\r\n        type=\"text\"\r\n        value={state.cannabisUse}\r\n        onChange={(event) => handleChangeOnInput(event)}\r\n      />\r\n      {options.cannabisTolerance.label ??\r\n        \"What is your cannabis tolerance level?\"}\r\n      <input\r\n        id=\"cannabisTolerance\"\r\n        type=\"text\"\r\n        value={state.cannabisTolerance}\r\n        onChange={(event) => handleChangeOnInput(event)}\r\n      />\r\n      {options.substances.label ?? \"Have you ever tried other substances?\"}\r\n      <input\r\n        id=\"substances\"\r\n        type=\"text\"\r\n        value={state.substances}\r\n        onChange={(event) => handleChangeOnInput(event)}\r\n      />\r\n      {options.medications.label ?? \"Currently prescribed medication(s)\"}\r\n      <input\r\n        id=\"medications\"\r\n        type=\"text\"\r\n        value={state.medications}\r\n        onChange={(event) => handleChangeOnInput(event)}\r\n      />\r\n      {options.conditions.label ??\r\n        \"Current health conditions (including mental health conditions)\"}\r\n      <input\r\n        id=\"conditions\"\r\n        type=\"text\"\r\n        value={state.conditions}\r\n        onChange={(event) => handleChangeOnInput(event)}\r\n      />\r\n      {options.celebrity.label ??\r\n        \"What famous person (or character) would you like to hang out with while consuming cannabis together?\"}\r\n      <input\r\n        id=\"celebrity\"\r\n        type=\"text\"\r\n        value={state.celebrity}\r\n        onChange={(event) => handleChangeOnInput(event)}\r\n      />\r\n      {options.email.label ?? \"Email Address\"}\r\n      <input\r\n        id=\"email\"\r\n        type=\"text\"\r\n        value={state.email}\r\n        onChange={(event) => handleChangeOnInput(event)}\r\n      />\r\n      <p></p>\r\n      <CommitButton\r\n        data={{ optInInfoFormStatus: state.saveState }}\r\n        onClick={handleOnClick}\r\n        onCommit={handleOnCommit}\r\n      >\r\n        Save Opt-In Info\r\n      </CommitButton>\r\n      <button onClick={() => State.update(initialState)}>Reset Form</button>\r\n    </div>\r\n    <p></p>\r\n  </div>\r\n);\r\n\r\nreturn page;\r\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/opencann.near/widget/profile.demographics", "fact_widget_deployments_id": "eae5ce51f9afb7dc371dd0a75477ec90", "inserted_timestamp": "2023-09-14T22:47:23.255Z", "modified_timestamp": "2023-09-14T22:47:23.255Z", "__row_index": 7}