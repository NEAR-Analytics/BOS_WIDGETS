{"tx_hash": "2wkQ2XaNaXiGauUpeXB3oHJoif4aExA6SxBC86qrSXxW", "action_id_social": "E8McN79bMeK1NFpBr5tozKwqWezS2FZ9F6gNTTxJFab-0-widget", "block_id": 99302794, "block_timestamp": "2023-08-21T07:28:32.475Z", "signer_id": "opencann.near", "widget_name": "marketplace", "source_code": "const data = props.data;\nconst accountId = props.accountId || context.accountId;\nconst contracts = data.contracts ||\n  context.contracts || [\"learnernft.learnclub.near\"];\nconst marketId = \"simple.market.mintbase1.near\";\n\nconst AFFILIATE_ACCOUNT = data.affiliateAccount || \"mintbase.near\";\n\nconst marketData = fetch(\"https://graph.mintbase.xyz\", {\n  method: \"POST\",\n  headers: {\n    \"mb-api-key\": \"omni-site\",\n    \"Content-Type\": \"application/json\",\n    \"x-hasura-role\": \"anonymous\",\n  },\n  body: JSON.stringify({\n    query: `\n      query MyQuery($contracts: [String]) {\n        mb_views_active_listings_by_contract(limit: 100, order_by: {created_at: desc}, where: {market_id: {_eq: \"simple.market.mintbase1.near\"}, nft_contract_id: {_in: $contracts}}) {\n            listed_by\n            created_at\n            price\n            nft_contract_id\n            token_id\n            metadata_id\n        }   \n      }\n`,\n    variables: {\n      contracts: contracts,\n    },\n  }),\n});\n\nconst YoctoToNear = (amountYocto) =>\n  new Big(amountYocto).div(new Big(10).pow(24)).toString();\n\nlet buy = (price, token_id, nft_contract_id) => {\n  const gas = 200000000000000;\n  const deposit = new Big(price).toFixed(0);\n\n  Near.call(\n    marketId,\n    \"buy\",\n    {\n      nft_contract_id: nft_contract_id,\n      token_id: token_id,\n      referrer_id: AFFILIATE_ACCOUNT,\n    },\n    gas,\n    deposit\n  );\n};\n\nif (!marketData.ok) {\n  return \"Loading\";\n}\n\nconst size = \"20em\";\n\nreturn marketData !== null ? (\n  <>\n    <div>\n      <h4>OpenCann Marketplace</h4>\n      <p>\n        This component is in open-beta and still under active construction. DO\n        NOT publish any sensitive or proprietary information.\n      </p>\n    </div>\n    <div>\n      <h5>For Sale</h5>\n    </div>\n    <div className=\"d-flex gap-4 flex-wrap\">\n      {marketData.body.data?.mb_views_active_listings_by_contract.map(\n        (listing, i) => {\n          const priceYocto = listing.price.toLocaleString().replace(/,/g, \"\");\n          const priceNear = YoctoToNear(priceYocto);\n\n          return (\n            <div className=\"d-flex flex-column gap-1 w-15 p-3\">\n              <a\n                href={`https://mintbase.xyz/meta/${listing.metadata_id}/`}\n                target=\"_blank\"\n              >\n                <Widget\n                  src=\"mob.near/widget/NftImage\"\n                  props={{\n                    nft: {\n                      tokenId: listing.token_id,\n                      contractId: listing.nft_contract_id,\n                    },\n                    style: {\n                      width: size,\n                      height: size,\n                      objectFit: \"cover\",\n                      minWidth: size,\n                      minHeight: size,\n                      maxWidth: size,\n                      maxHeight: size,\n                      overflowWrap: \"break-word\",\n                    },\n                    className: \"\",\n                    fallbackUrl:\n                      \"https://ipfs.near.social/ipfs/bafkreihdiy3ec4epkkx7wc4wevssruen6b7f3oep5ylicnpnyyqzayvcry\",\n                  }}\n                />\n              </a>\n              <button\n                disabled={!accountId}\n                onClick={() => {\n                  if (!accountId) return;\n                  buy(priceYocto, listing.token_id, listing.nft_contract_id);\n                }}\n                style={{\n                  border: \"1px solid black\",\n                  backgroundColor: \"white\",\n                  color: \"black\",\n                  fontSize: \"18px\",\n                  cursor: \"pointer\",\n                }}\n              >\n                Buy {priceNear} N\n              </button>\n            </div>\n          );\n        }\n      )}\n    </div>\n    <hr></hr>\n    <div>\n      <Widget src=\"flowscience.near/widget/CGD.Factory\" props={{ daoId }} />\n    </div>\n\n    <div class=\"py-4\">\n      <Widget src=\"mintbase.near/widget/BuiltWithMintbase\" />\n    </div>\n  </>\n) : (\n  <p>loading...</p>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/opencann.near/widget/marketplace", "fact_widget_deployments_id": "977f258f442560babf1ad2fed0759d4b", "inserted_timestamp": "2023-08-21T09:26:48.698Z", "modified_timestamp": "2023-08-21T09:26:48.698Z", "__row_index": 4}