{"tx_hash": "7uNgopwAdXGfMkRG8PT1c5oTh291Z58BuAhhHoPv4cdh", "action_id_social": "Dn1JKnpKYWUqmXpxecBv9f53ZAND3Wq9Yp56NeHr8p9g-0-widget", "block_id": 101423742, "block_timestamp": "2023-09-18T20:22:21.221Z", "signer_id": "opencann.near", "widget_name": "marketplace", "source_code": "const data = props.data;\r\nconst accountId = props.accountId || context.accountId;\r\nconst contracts = data.contracts ||\r\n  context.contracts || [\"learnernft.learnclub.near\", \"opencann.mintbase1.near\"];\r\nconst marketId = \"simple.market.mintbase1.near\";\r\n\r\n//const AFFILIATE_ACCOUNT = data.affiliateAccount || \"opencann.near\";\r\n\r\nconst marketData = fetch(\"https://graph.mintbase.xyz\", {\r\n  method: \"POST\",\r\n  headers: {\r\n    \"mb-api-key\": \"omni-site\",\r\n    \"Content-Type\": \"application/json\",\r\n    \"x-hasura-role\": \"anonymous\",\r\n  },\r\n  body: JSON.stringify({\r\n    query: `\r\n      query MyQuery($contracts: [String]) {\r\n        mb_views_active_listings_by_contract(limit: 100, order_by: {created_at: desc}, where: {market_id: {_eq: \"simple.market.mintbase1.near\"}, nft_contract_id: {_in: $contracts}}) {\r\n            listed_by\r\n            created_at\r\n            price\r\n            nft_contract_id\r\n            token_id\r\n            metadata_id\r\n        }   \r\n      }\r\n`,\r\n    variables: {\r\n      contracts: contracts,\r\n    },\r\n  }),\r\n});\r\n\r\nconst YoctoToNear = (amountYocto) =>\r\n  new Big(amountYocto).div(new Big(10).pow(24)).toString();\r\n\r\nlet buy = (price, token_id, nft_contract_id) => {\r\n  const gas = 200000000000000;\r\n  const deposit = new Big(price).toFixed(0);\r\n\r\n  Near.call(\r\n    marketId,\r\n    \"buy\",\r\n    {\r\n      nft_contract_id: nft_contract_id,\r\n      token_id: token_id,\r\n      referrer_id: \"opencann.near\",\r\n    },\r\n    gas,\r\n    deposit\r\n  );\r\n};\r\n\r\nif (!marketData.ok) {\r\n  return \"Loading\";\r\n}\r\n\r\nconst size = \"20em\";\r\n\r\nreturn marketData !== null ? (\r\n  <>\r\n    <div>\r\n      <h2>OpenCann Marketplace</h2>\r\n      <p>\r\n        This component is in open-beta and still under active construction. DO\r\n        NOT publish any sensitive or proprietary information. Best viewed on\r\n        desktop.\r\n      </p>\r\n    </div>\r\n    <Widget src=\"denysk.near/widget/PriceStats\" />\r\n    <hr></hr>\r\n    <div>\r\n      <h5>Data Sets</h5>\r\n      <p>\r\n        Showing NFTs listed by contracts learnernft.learnclub.near and\r\n        opencann.mintbase1.near.\r\n      </p>\r\n    </div>\r\n    <div className=\"d-flex gap-4 flex-wrap\">\r\n      {marketData.body.data?.mb_views_active_listings_by_contract.map(\r\n        (listing, i) => {\r\n          const priceYocto = listing.price.toLocaleString().replace(/,/g, \"\");\r\n          const priceNear = YoctoToNear(priceYocto);\r\n\r\n          return (\r\n            <div className=\"d-flex flex-column gap-1 w-15 p-3\">\r\n              <a\r\n                href={`https://mintbase.xyz/meta/${listing.metadata_id}/`}\r\n                target=\"_blank\"\r\n              >\r\n                <Widget\r\n                  src=\"mob.near/widget/NftImage\"\r\n                  props={{\r\n                    nft: {\r\n                      tokenId: listing.token_id,\r\n                      contractId: listing.nft_contract_id,\r\n                    },\r\n                    style: {\r\n                      width: size,\r\n                      height: size,\r\n                      objectFit: \"cover\",\r\n                      minWidth: size,\r\n                      minHeight: size,\r\n                      maxWidth: size,\r\n                      maxHeight: size,\r\n                      overflowWrap: \"break-word\",\r\n                    },\r\n                    className: \"\",\r\n                    fallbackUrl:\r\n                      \"https://ipfs.near.social/ipfs/bafkreihdiy3ec4epkkx7wc4wevssruen6b7f3oep5ylicnpnyyqzayvcry\",\r\n                  }}\r\n                />\r\n              </a>\r\n              <button\r\n                disabled={!accountId}\r\n                onClick={() => {\r\n                  if (!accountId) return;\r\n                  buy(priceYocto, listing.token_id, listing.nft_contract_id);\r\n                }}\r\n                style={{\r\n                  border: \"1px solid black\",\r\n                  backgroundColor: \"white\",\r\n                  color: \"black\",\r\n                  fontSize: \"18px\",\r\n                  cursor: \"pointer\",\r\n                }}\r\n              >\r\n                Buy {priceNear} N\r\n              </button>\r\n              <button\r\n                style={{\r\n                  border: \"1px solid black\",\r\n                  backgroundColor: \"lightgreen\",\r\n                  color: \"black\",\r\n                  fontSize: \"18px\",\r\n                  cursor: \"pointer\",\r\n                  width: size,\r\n                  height: \"2em\",\r\n                  objectFit: \"cover\",\r\n                  minWidth: size,\r\n                  minHeight: \"2em\",\r\n                  maxWidth: size,\r\n                  maxHeight: \"2em\",\r\n                }}\r\n              >\r\n                <Widget src=\"mob.near/widget/LikeButton\" />\r\n                Like\r\n              </button>\r\n            </div>\r\n          );\r\n        }\r\n      )}\r\n      <a\r\n        href=\"#/opencann.near/widget/ExperienceSurvey\"\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n      >\r\n        *Click here to publish a cannabis experience report.\r\n      </a>\r\n    </div>\r\n    <hr></hr>\r\n    <div>\r\n      <h5>Algorithms</h5>\r\n      <p>\r\n        Purchase jobs you would like to run on your data. Each job describes the\r\n        input and output file formats, as well as the Docker container used.\r\n      </p>\r\n      <i>Coming soon!</i>\r\n    </div>\r\n    <hr></hr>\r\n    <div>\r\n      <h5>Impact Certificates</h5>\r\n      <p>\r\n        Impact certificates allow scientists and funders an opportunity to earn\r\n        retroactive public goods funding for thier contributions to knowledge as\r\n        a public good. Impact Certificates are linked to corresponding input\r\n        data, algorithms, and output data that generated impact in the world.\r\n      </p>\r\n      <a\r\n        href=\"#/flowscience.near/widget/create.hypercert\"\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n      >\r\n        <i>Click here to publish an impact certficate</i>\r\n      </a>\r\n    </div>\r\n    <hr></hr>\r\n    <h5>Balances</h5>\r\n    <i>Coming soon!</i>\r\n    <hr></hr>\r\n    <h5>Explore</h5>\r\n    <p>\r\n      Replace \"opencann.near\" with any contract address to view public data.\r\n    </p>\r\n    <Widget src=\"opencann.near/widget/explorer\" />\r\n    <hr></hr>\r\n    <Widget src=\"mintbase.near/widget/BuiltWithMintbase\" />\r\n  </>\r\n) : (\r\n  <p>loading...</p>\r\n);\r\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/opencann.near/widget/marketplace", "fact_widget_deployments_id": "d4fd3df9f079590c410a6d377405810f", "inserted_timestamp": "2023-09-18T22:25:23.108Z", "modified_timestamp": "2023-09-18T22:25:23.108Z", "__row_index": 9}