{"tx_hash": "9ZKiDwFjKbNPg9YoPMJe5wUjRwMwvuxqrjfkJoAFEWyJ", "action_id_social": "D3odepF1fsGc7NBVXBHvBANUuAyg187MBARDHHziZfRX-0-widget", "block_id": 100264540, "block_timestamp": "2023-09-03T00:12:22.524Z", "signer_id": "opencann.near", "widget_name": "user.data.input", "source_code": "const accountId = props.accountId ?? context.accountId;\r\nconst onChange = props.onChange;\r\nconst options = props.options;\r\n\r\nif (context.loading) {\r\n  return (\r\n    <>\r\n      <h2>)\"Loading...\"</h2>\r\n    </>\r\n  );\r\n}\r\n\r\nif (!accountId) {\r\n  return (\r\n    <>\r\n      <h2>\"Please sign in with a NEAR ecosystem wallet to use this widget\"</h2>\r\n    </>\r\n  );\r\n}\r\n\r\nlet optInInfo = {};\r\nlet changeLog = [];\r\n\r\nconst initialState = {\r\n  accountId,\r\n  birthday: \"\",\r\n  astrological_sign: \"\",\r\n  age: \"\",\r\n  gender: \"\",\r\n  profession: \"\",\r\n  income: \"\",\r\n  preferred_wallet: \"\",\r\n  preferred_nft_marketplace: \"\",\r\n  preferred_crypto: \"\",\r\n  saveState: \"Started\",\r\n};\r\n\r\nState.init(initialState);\r\n\r\nfunction fetchDataFromAPI() {\r\n  const data = fetch(``, {\r\n    method: \"GET\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  });\r\n}\r\n\r\nfunction reportEventToAPI() {\r\n  const data = fetch(`https://dev.kitwallet.app/producer/${accountId}/event`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      accountId,\r\n      events: [{ type: \"updateProfile\", data: \"coolwhip\" }],\r\n    }),\r\n  });\r\n}\r\n\r\nfunction registerProfileToAPI() {\r\n  const data = fetch(`https://dev.kitwallet.app/producer`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      accountId,\r\n      profile: state,\r\n    }),\r\n  });\r\n}\r\n\r\nfunction setFormStatusOnAccount() {\r\n  State.update({ optInInfoFormStatus: \"completed\" });\r\n}\r\n\r\nfunction addChangeLogEntry() {\r\n  const dateTime = Date.now();\r\n  // const timestampUTC = dateTime.toUTCString();\r\n  const changeEvent = { thisEvent: \"form submitted\", timestamp: dateTime };\r\n  changeLog.push(changeEvent);\r\n  return changeLog;\r\n}\r\n\r\nfunction handleOnClick() {\r\n  reportEventToAPI();\r\n  registerProfileToAPI();\r\n}\r\n\r\nfunction handleOnCommit() {\r\n  setFormStatusOnAccount();\r\n}\r\n\r\nfunction handleChangeOnInput(event) {\r\n  State.update({\r\n    [event.target.id]: event.target.value,\r\n    saveState: \"in progress...\",\r\n  });\r\n}\r\n\r\nlet page = (\r\n  <div>\r\n    <h1>{`Hello, ${accountId}!`}</h1>\r\n    <p>\r\n      {`Please fill out the following information. This data is private!\r\n      Only include the data you are willing to share with analytics queries. \r\n      Everytime your data is accessed in a query, you will earn NEAR!`}\r\n    </p>\r\n    <p></p>\r\n    <div id=\"optInDataForm\">\r\n      {options.birthday.label ?? \"Birthday\"}\r\n      <input\r\n        id=\"birthday\"\r\n        type=\"date\"\r\n        value={state.birthday}\r\n        onChange={(event) => handleChangeOnInput(event)}\r\n      />\r\n      {options.astrological_sign.label ?? \"Astrological Sign\"}\r\n      <input\r\n        id=\"astrological_sign\"\r\n        type=\"text\"\r\n        value={state.astrological_sign}\r\n        onChange={(event) => handleChangeOnInput(event)}\r\n      />\r\n      {options.age.label ?? \"Age\"}\r\n      <input\r\n        id=\"age\"\r\n        type=\"text\"\r\n        value={state.age}\r\n        onChange={(event) => handleChangeOnInput(event)}\r\n      />\r\n      {options.gender.label ?? \"Gender\"}\r\n      <input\r\n        id=\"gender\"\r\n        type=\"text\"\r\n        value={state.gender}\r\n        onChange={(event) => handleChangeOnInput(event)}\r\n      />\r\n      {options.profession.label ?? \"Profession\"}\r\n      <input\r\n        id=\"profession\"\r\n        type=\"text\"\r\n        value={state.profession}\r\n        onChange={(event) => handleChangeOnInput(event)}\r\n      />\r\n      {options.income.label ?? \"Income\"}\r\n      <input\r\n        id=\"income\"\r\n        type=\"text\"\r\n        value={state.income}\r\n        onChange={(event) => handleChangeOnInput(event)}\r\n      />\r\n      {options.preferred_wallet.label ?? \"Preferred Wallet\"}\r\n      <input\r\n        id=\"preferred_wallet\"\r\n        type=\"text\"\r\n        value={state.preferred_wallet}\r\n        onChange={(event) => handleChangeOnInput(event)}\r\n      />\r\n      {options.preferred_nft_marketplace.label ?? \"Preferred NFT Marketplace\"}\r\n      <input\r\n        id=\"preferred_nft_marketplace\"\r\n        type=\"text\"\r\n        value={state.preferred_nft_marketplace}\r\n        onChange={(event) => handleChangeOnInput(event)}\r\n      />\r\n      {options.preferred_crypto.label ?? \"Preferred Crypto\"}\r\n      <input\r\n        id=\"preferred_crypto\"\r\n        type=\"text\"\r\n        value={state.preferred_crypto}\r\n        onChange={(event) => handleChangeOnInput(event)}\r\n      />\r\n      <p></p>\r\n      <CommitButton\r\n        data={{ optInInfoFormStatus: state.saveState }}\r\n        onClick={handleOnClick}\r\n        onCommit={handleOnCommit}\r\n      >\r\n        Save Opt-In Info\r\n      </CommitButton>\r\n      <button onClick={() => State.update(initialState)}>Reset Form</button>\r\n    </div>\r\n    <p></p>\r\n  </div>\r\n);\r\n\r\nreturn page;\r\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/opencann.near/widget/user.data.input", "fact_widget_deployments_id": "b5b43e9f856c23f0e9cd70aa62b4c39c", "inserted_timestamp": "2023-09-03T01:50:50.863Z", "modified_timestamp": "2023-09-03T01:50:50.863Z", "__row_index": 1}