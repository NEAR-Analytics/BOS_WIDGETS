{"tx_hash": "3QoYkhm5ZViDAGC7GJzMBpF8yvfPeXH6T6YjjV2tTbjN", "action_id_social": "14onobN2FBxheze66mBsyygnGupZL5NrdEj2D3quv3r1-0-widget", "block_id": 101412092, "block_timestamp": "2023-09-18T16:19:18.069Z", "signer_id": "opencann.near", "widget_name": "profile.conditionArray", "source_code": "const conditionPattern = props.conditionPattern ?? \"*/profile/condition/*\";\r\nconst placeholder = props.placeholder ?? \"Condition\";\r\nconst initialConditionObject = props.initialConditionObject || {};\r\n\r\nconst conditionObject = Social.keys(conditionPattern, \"final\");\r\n\r\nconst conditionArray = [\r\n  { name: \"Depression\" },\r\n  { name: \"Anxiety\" },\r\n  { name: \"Chronic Pain\" },\r\n  { name: \"ADD/ADHD\" },\r\n  { name: \"Boredom\" },\r\n];\r\n\r\nif (conditionObject === null) {\r\n  return \"Loading\";\r\n}\r\n\r\nconst normalizeProf = (prof) =>\r\n  prof\r\n    .replaceAll(/[- \\.]/g, \"_\")\r\n    .replaceAll(/[^\\w]+/g, \"\")\r\n    .replaceAll(/_+/g, \"-\")\r\n    .replace(/^-+/, \"\")\r\n    .replace(/-+$/, \"\")\r\n    .toLowerCase()\r\n    .trim(\"-\");\r\n\r\nconst conditionCount = {};\r\n\r\nconst processConditionObject = (obj) => {\r\n  Object.entries(obj).forEach((kv) => {\r\n    if (typeof kv[1] === \"object\") {\r\n      processConditionObject(kv[1]);\r\n    } else {\r\n      const prof = normalizeProf(kv[0]);\r\n      conditionCount[prof] = (conditionCount[prof] || 0) + 1;\r\n    }\r\n  });\r\n};\r\n\r\nconst getCondition = () => {\r\n  processConditionObject(conditionObject);\r\n  const condition = Object.entries(conditionCount);\r\n  condition.sort((a, b) => b[1] - a[1]);\r\n  return condition.map((t) => ({\r\n    name: t[0],\r\n    count: t[1],\r\n  }));\r\n};\r\n\r\nif (!state.allCondition) {\r\n  initState({\r\n    allCondition: getCondition(),\r\n    condition: Object.keys(initialConditionObject).map((prof) => ({\r\n      name: normalizeProf(prof),\r\n    })),\r\n    originalCondition: Object.fromEntries(\r\n      Object.keys(initialConditionObject).map((prof) => [prof, null])\r\n    ),\r\n    id: `condition-selector-${Date.now()}`,\r\n  });\r\n}\r\n\r\nconst setCondition = (condition) => {\r\n  condition = condition.map((o) => {\r\n    o.name = normalizeProf(o.name);\r\n    return o;\r\n  });\r\n  State.update({ condition });\r\n  if (props.setConditionObject) {\r\n    props.setConditionObject(\r\n      Object.assign(\r\n        {},\r\n        state.originalCondition,\r\n        Object.fromEntries(condition.map((prof) => [prof.name, \"\"]))\r\n      )\r\n    );\r\n  }\r\n};\r\n\r\nreturn (\r\n  <>\r\n    <Typeahead\r\n      id={state.id}\r\n      multiple\r\n      labelKey=\"name\"\r\n      onChange={setCondition}\r\n      options={state.allCondition}\r\n      placeholder={placeholder}\r\n      selected={state.condition}\r\n      positionFixed\r\n      allowNew\r\n    />\r\n    {props.debug && (\r\n      <div>\r\n        Debugging condition:\r\n        <pre>{JSON.stringify(state.condition)}</pre>\r\n      </div>\r\n    )}\r\n  </>\r\n);\r\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/opencann.near/widget/profile.conditionArray", "fact_widget_deployments_id": "c029a83775debc29758730e55b163ec0", "inserted_timestamp": "2023-09-18T18:24:23.115Z", "modified_timestamp": "2023-09-18T18:24:23.115Z", "__row_index": 1}