{"tx_hash": "FYkERmc76DasLBHUroQYsMA6kAsT1MkyY7DoBets6jn1", "action_id_social": "BwZoGcmpMcUWJV8iAcPMnERwzx4RLaefmtCTsykFZW6y-0-widget", "block_id": 100968867, "block_timestamp": "2023-09-12T15:46:30.213Z", "signer_id": "opencann.near", "widget_name": "MetadataEditor", "source_code": "const initialMetadata = props.initialMetadata ?? {};\r\nconst onChange = props.onChange;\r\nconst options = props.options;\r\n\r\nState.init({\r\n  initialMetadata,\r\n  metadata: initialMetadata,\r\n  reportedMetadata: initialMetadata,\r\n  linktree: initialMetadata.linktree ?? {},\r\n  image: initialMetadata.image,\r\n  backgroundImage: initialMetadata.backgroundImage,\r\n  screenshots: initialMetadata.screenshots ?? {},\r\n  demographics: initialMetadata.demographics ?? {},\r\n});\r\n\r\nconst metadata = {\r\n  name: options.name ? state.metadata.name : undefined,\r\n  description: options.name ? state.metadata.description : undefined,\r\n  linktree:\r\n    options.linktree && Object.keys(state.linktree).length > 0\r\n      ? state.linktree\r\n      : undefined,\r\n  image:\r\n    options.image && state.image && Object.keys(state.image).length > 0\r\n      ? state.image\r\n      : undefined,\r\n  backgroundImage:\r\n    options.backgroundImage &&\r\n    state.backgroundImage &&\r\n    Object.keys(state.backgroundImage).length > 0\r\n      ? state.backgroundImage\r\n      : undefined,\r\n  tags: options.tags ? state.metadata.tags : undefined,\r\n  screenshots: options.screenshots ? state.metadata.screenshots : undefined,\r\n  demographics:\r\n    options.demographics && Object.keys(state.demographics).length > 0\r\n      ? state.demographics\r\n      : undefined,\r\n};\r\n\r\nif (\r\n  onChange &&\r\n  JSON.stringify(state.reportedMetadata) !== JSON.stringify(metadata)\r\n) {\r\n  State.update({\r\n    reportedMetadata: metadata,\r\n  });\r\n  onChange(metadata);\r\n}\r\n\r\nconst debounce = (func, wait) => {\r\n  const pause = wait || 350;\r\n  let timeout;\r\n\r\n  return (args) => {\r\n    const later = () => {\r\n      clearTimeout(timeout);\r\n      func(args);\r\n    };\r\n\r\n    clearTimeout(timeout);\r\n    timeout = setTimeout(later, pause);\r\n  };\r\n};\r\n\r\nconst onNameChange = debounce((e) => {\r\n  State.update({\r\n    metadata: {\r\n      ...state.metadata,\r\n      name: e.target.value,\r\n    },\r\n  });\r\n});\r\nconst onDescriptionChange = debounce((e) => {\r\n  State.update({\r\n    metadata: {\r\n      ...state.metadata,\r\n      description: e.target.value,\r\n    },\r\n  });\r\n});\r\nconst onLinkTreeChange = debounce((e) => {\r\n  State.update({\r\n    linktree: {\r\n      ...state.linktree,\r\n      [e.target.id]: e.target.value,\r\n    },\r\n  });\r\n});\r\nconst onDemographicsChange = debounce((e) => {\r\n  State.update({\r\n    demographics: {\r\n      ...state.demographics,\r\n      [e.target.id]: e.target.value,\r\n    },\r\n  });\r\n});\r\n\r\nreturn (\r\n  <>\r\n    {options.name && (\r\n      <div className=\"mb-2\">\r\n        {options.name.label ?? \"Name\"}\r\n        <input\r\n          type=\"text\"\r\n          defaultValue={state.metadata.name}\r\n          onChange={onNameChange}\r\n        />\r\n      </div>\r\n    )}\r\n    {options.image && (\r\n      <div className=\"mb-2\">\r\n        {options.image.label ?? \"Image\"}\r\n        <Widget\r\n          src=\"near/widget/ImageEditorTabs\"\r\n          props={{\r\n            image: state.image,\r\n            onChange: (image) => State.update({ image }),\r\n          }}\r\n        />\r\n      </div>\r\n    )}\r\n    {options.backgroundImage && (\r\n      <div className=\"mb-2\">\r\n        {options.backgroundImage.label ?? \"Background image\"}\r\n        <Widget\r\n          src=\"near/widget/ImageEditorTabs\"\r\n          props={{\r\n            image: state.backgroundImage,\r\n            onChange: (backgroundImage) => State.update({ backgroundImage }),\r\n            debounce,\r\n          }}\r\n        />\r\n      </div>\r\n    )}\r\n    {options.description && (\r\n      <div className=\"mb-2\">\r\n        {options.description.label ?? \"Description\"}\r\n        <span className=\"text-secondary\"> (supports markdown)</span>\r\n        <textarea\r\n          className=\"form-control\"\r\n          rows={5}\r\n          defaultValue={state.metadata.description}\r\n          onChange={onDescriptionChange}\r\n        />\r\n      </div>\r\n    )}\r\n    {options.tags && (\r\n      <div className=\"mb-2\">\r\n        {options.tags.label ?? \"Tags\"}\r\n        <Widget\r\n          src=\"mob.near/widget/TagsEditor\"\r\n          props={{\r\n            initialTagsObject: metadata.tags,\r\n            tagsPattern: options.tags.pattern,\r\n            placeholder:\r\n              options.tags.placeholder ??\r\n              \"rust, engineer, artist, humanguild, nft, learner, founder\",\r\n            setTagsObject: (tags) => {\r\n              state.metadata.tags = tags;\r\n              State.update();\r\n            },\r\n          }}\r\n        />\r\n      </div>\r\n    )}\r\n    {options.linktree &&\r\n      (options.linktree.links ?? []).map((link) => (\r\n        <div className=\"mb-2\">\r\n          {link.label}\r\n          <div className=\"input-group\">\r\n            <span className=\"input-group-text\">{link.prefix}</span>\r\n            <input\r\n              type=\"text\"\r\n              id={link.name}\r\n              defaultValue={state.linktree[link.name]}\r\n              onChange={onLinkTreeChange}\r\n            />\r\n          </div>\r\n        </div>\r\n      ))}\r\n    {options.demographics &&\r\n      (options.demographics.data ?? []).map((data) => (\r\n        <div className=\"mb-2\">\r\n          {data.label}\r\n          <div className=\"input-group\">\r\n            <span className=\"input-group-text\">{data.prefix}</span>\r\n            <input\r\n              type=\"text\"\r\n              id={data.name}\r\n              defaultValue={state.demographics[data.name]}\r\n              onChange={onDemographicsChange}\r\n            />\r\n          </div>\r\n        </div>\r\n      ))}\r\n  </>\r\n);\r\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/opencann.near/widget/MetadataEditor", "fact_widget_deployments_id": "d075bbab1b761e0395a293d0ba596ea3", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 11}