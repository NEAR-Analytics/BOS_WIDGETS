{"tx_hash": "Dp4LmMHN1GT3YpnPJZt5QQBr8WZdWQKBvhJ8aZHeyrHY", "action_id_social": "HnGP821x7sR2TtgRmmPDnRsk2TB5Fssn2vqBmrTmLnXL-0-widget", "block_id": 100273075, "block_timestamp": "2023-09-03T03:03:23.384Z", "signer_id": "opencann.near", "widget_name": "mydata", "source_code": "const accountId = props.accountId || context.accountId;\r\n\r\nif (!accountId) {\r\n  return \"\";\r\n}\r\n\r\nconst limitPerPage = 20;\r\nlet allNfts = [];\r\nlet results = [];\r\n\r\nState.init({\r\n  currentPage: 0,\r\n});\r\n\r\nconst data = fetch(\r\n  `https://api.kitwallet.app/account/${accountId}/likelyNFTsFromBlock`\r\n);\r\n\r\nif (data.body?.list) {\r\n  allNfts = [];\r\n  results = [];\r\n\r\n  data.body.list.forEach((contractId, i) => {\r\n    const nfts = Near.view(contractId, \"nft_tokens_for_owner\", {\r\n      account_id: accountId,\r\n      from_index: \"0\",\r\n      limit: 200,\r\n    });\r\n\r\n    if (nfts?.length > 0) {\r\n      nfts.forEach((nft) => {\r\n        allNfts.push({\r\n          ...nft,\r\n          contractId,\r\n        });\r\n\r\n        allNfts = allNfts.slice(\r\n          0,\r\n          state.currentPage * limitPerPage + limitPerPage\r\n        );\r\n      });\r\n    }\r\n\r\n    if (nfts !== null) {\r\n      results.push(nfts);\r\n    }\r\n  });\r\n}\r\n\r\nconst hasFinishedLoading = data.body?.list?.length === results.length;\r\nconst showLoadMoreButton =\r\n  allNfts.length > 0 && allNfts.length % limitPerPage === 0;\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 48px;\r\n`;\r\n\r\nconst Form = styled.div`\r\n  display: block;\r\n  text-decoration: none;\r\n  padding-top: 100%;\r\n  position: relative;\r\n  border-radius: 12px;\r\n  overflow: hidden;\r\n  box-shadow: 0px 12px 16px rgba(16, 24, 40, 0.08),\r\n    0px 4px 6px rgba(16, 24, 40, 0.03);\r\n  }\r\n`;\r\n\r\nconst Items = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(4, 1fr);\r\n  gap: 12px;\r\n\r\n  @media (max-width: 550px) {\r\n    grid-template-columns: repeat(3, 1fr);\r\n  }\r\n`;\r\n\r\nconst Card = styled.a`\r\n  display: block;\r\n  text-decoration: none;\r\n  padding-top: 100%;\r\n  position: relative;\r\n  border-radius: 12px;\r\n  overflow: hidden;\r\n  box-shadow: 0px 12px 16px rgba(16, 24, 40, 0.08),\r\n    0px 4px 6px rgba(16, 24, 40, 0.03);\r\n\r\n  .nft-thumbnail {\r\n    position: absolute;\r\n    inset: 0;\r\n    object-fit: cover;\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n`;\r\n\r\nconst Text = styled.p`\r\n  margin: 0;\r\n  font-size: 14px;\r\n  line-height: 20px;\r\n  color: ${(p) => (p.bold ? \"#11181C\" : \"#687076\")};\r\n  font-weight: ${(p) => (p.bold ? \"600\" : \"400\")};\r\n  font-size: ${(p) => (p.small ? \"12px\" : \"14px\")};\r\n`;\r\n\r\nconst Button = styled.button`\r\n  display: block;\r\n  width: 100%;\r\n  padding: 8px;\r\n  height: 32px;\r\n  background: #fbfcfd;\r\n  border: 1px solid #d7dbdf;\r\n  border-radius: 50px;\r\n  font-weight: 600;\r\n  font-size: 12px;\r\n  line-height: 15px;\r\n  text-align: center;\r\n  cursor: pointer;\r\n  color: #11181c !important;\r\n  margin: 0;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    background: #ecedee;\r\n    text-decoration: none;\r\n    outline: none;\r\n  }\r\n\r\n  span {\r\n    color: #687076 !important;\r\n  }\r\n`;\r\n\r\nif (!hasFinishedLoading) return \"Loading\";\r\n\r\nif (hasFinishedLoading && allNfts.length === 0) {\r\n  return <Text>This account doesn&apos;t have any data sets yet.</Text>;\r\n}\r\n\r\nreturn (\r\n  <Wrapper>\r\n    <div>\r\n      <p>\r\n        This component is in open-beta and still under active construction. DO\r\n        NOT publish any sensitive or proprietary information.\r\n      </p>\r\n      <hr></hr>\r\n      <Widget\r\n        src=\"near/widget/Explorer.Account\"\r\n        props={{\r\n          accountId,\r\n          network: context.networkId,\r\n          language: \"en\",\r\n          baseUrl: props.baseUrl,\r\n        }}\r\n      />\r\n      <Widget src=\"opencann.near/widget/user.data.input\" props={{ ownerId }} />\r\n    </div>\r\n    <Items>\r\n      {allNfts.map((nft, i) => (\r\n        <Card\r\n          key={i}\r\n          href={`#/mob.near/widget/NftImage?tokenId=${nft.token_id}&contractId=${nft.contractId}`}\r\n        >\r\n          <Widget\r\n            src=\"mob.near/widget/NftImage\"\r\n            props={{\r\n              nft: { tokenId: nft.token_id, contractId: nft.contractId },\r\n              className: \"nft-thumbnail\",\r\n              fallbackUrl:\r\n                \"https://ipfs.near.social/ipfs/bafkreihdiy3ec4epkkx7wc4wevssruen6b7f3oep5ylicnpnyyqzayvcry\",\r\n              alt: `NFT ${nft.contractId} ${nft.token_id}`,\r\n            }}\r\n          />\r\n        </Card>\r\n      ))}\r\n    </Items>\r\n    {showLoadMoreButton && (\r\n      <Button\r\n        type=\"button\"\r\n        onClick={() => State.update({ currentPage: state.currentPage + 1 })}\r\n      >\r\n        Load More\r\n      </Button>\r\n    )}\r\n    <div>\r\n      <Widget src=\"mintbase.near/widget/ListToMarket\" props={{ ownerId }} />\r\n    </div>\r\n    <hr></hr>\r\n    <div>\r\n      <h5> List on Optimism </h5>\r\n      <Widget src=\"ciocan.near/widget/op-bridge-demo\" props={{ ownerId }} />\r\n      <Widget src=\"ciocan.near/widget/op-bridge-list\" props={{ ownerId }} />\r\n    </div>\r\n  </Wrapper>\r\n);\r\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/opencann.near/widget/mydata", "fact_widget_deployments_id": "1b0f721c2f9dcee1543a59fe94a6e91b", "inserted_timestamp": "2023-09-03T04:44:11.362Z", "modified_timestamp": "2023-09-03T04:44:11.362Z", "__row_index": 5}