{"tx_hash": "cLPLCuAiUVfPL6kKkSSvsz1hS2pzjCt3TNd2kGPtFdb", "action_id_social": "GQvGwbCemZzTT9hvkYBdkz14TS5WY2ub64nBCd2EUzst-0-widget", "block_id": 114626154, "block_timestamp": "2024-03-13T11:44:01.894Z", "signer_id": "nearblocks.near", "widget_name": "bos-components.components.Contract.Overview", "source_code": "/**\n * Component: ContractOverview\n * Author: Nearblocks Pte Ltd\n * License: Business Source License 1.1\n * Description: Contract Overview on Near Protocol.\n * @interface Props\n * @param {string} [network] - The network data to show, either mainnet or testnet\n * @param {Function} [t] - A function for internationalization (i18n) provided by the next-translate package.\n * @param {string} [id] - The account identifier passed as a string.\n * @param {ContractInfo} [contract] - Information about the user's contract.\n * @param {any} [schema] - The schema data for the component.\n * @param {ContractParseInfo} [contractInfo] - Additional parsed information about the contract.\n * @param {Function} [requestSignInWithWallet] - Function to initiate sign-in with a wallet.\n * @param {boolean} [signedIn] - Boolean indicating whether the user is currently signed in or not.\n * @param {string} [accountId] - The account ID of the signed-in user, passed as a string.\n * @param {Function} [logOut] - Function to log out.\n * @param {React.FC<{\n *   href: string;\n *   children: React.ReactNode;\n *   className?: string;\n * }>} Link - A React component for rendering links.\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/* INCLUDE: \"includes/libs.jsx\" */\nfunction getConfig(network) {\n  switch (network) {\n    case 'mainnet':\n      return {\n        ownerId: 'nearblocks.near',\n        nodeUrl: 'https://rpc.mainnet.near.org',\n        backendUrl: 'https://api3.nearblocks.io/v1/',\n        rpcUrl: 'https://archival-rpc.mainnet.near.org',\n        appUrl: 'https://nearblocks.io/',\n      };\n    case 'testnet':\n      return {\n        ownerId: 'nearblocks.testnet',\n        nodeUrl: 'https://rpc.testnet.near.org',\n        backendUrl: 'https://api3-testnet.nearblocks.io/v1/',\n        rpcUrl: 'https://archival-rpc.testnet.near.org',\n        appUrl: 'https://testnet.nearblocks.io/',\n      };\n    default:\n      return {};\n  }\n}\n\nfunction debounce(\n  delay,\n  func,\n) {\n  let timer;\n  let active = true;\n  const debounced = (arg) => {\n    if (active) {\n      clearTimeout(timer);\n      timer = setTimeout(() => {\n        active && func(arg);\n        timer = undefined;\n      }, delay);\n    } else {\n      func(arg);\n    }\n  };\n\n  debounced.isPending = () => {\n    return timer !== undefined;\n  };\n\n  debounced.cancel = () => {\n    active = false;\n  };\n\n  debounced.flush = (arg) => func(arg);\n\n  return debounced;\n}\n\nfunction timeAgo(unixTimestamp) {\n  const currentTimestamp = Math.floor(Date.now() / 1000);\n  const secondsAgo = currentTimestamp - unixTimestamp;\n\n  if (secondsAgo < 5) {\n    return 'Just now';\n  } else if (secondsAgo < 60) {\n    return `${secondsAgo} seconds ago`;\n  } else if (secondsAgo < 3600) {\n    const minutesAgo = Math.floor(secondsAgo / 60);\n    return `${minutesAgo} minute${minutesAgo > 1 ? 's' : ''} ago`;\n  } else if (secondsAgo < 86400) {\n    const hoursAgo = Math.floor(secondsAgo / 3600);\n    return `${hoursAgo} hour${hoursAgo > 1 ? 's' : ''} ago`;\n  } else {\n    const daysAgo = Math.floor(secondsAgo / 86400);\n    return `${daysAgo} day${daysAgo > 1 ? 's' : ''} ago`;\n  }\n}\n\nfunction shortenAddress(address) {\n  const string = String(address);\n\n  if (string.length <= 20) return string;\n\n  return `${string.substr(0, 10)}...${string.substr(-7)}`;\n}\n\nfunction urlHostName(url) {\n  try {\n    const domain = new URL(url);\n    return domain?.hostname ?? null;\n  } catch (e) {\n    return null;\n  }\n}\n\nfunction holderPercentage(supply, quantity) {\n  return Math.min(Big(quantity).div(Big(supply)).mul(Big(100)).toFixed(2), 100);\n}\n\nfunction isAction(type) {\n  const actions = [\n    'DEPLOY_CONTRACT',\n    'TRANSFER',\n    'STAKE',\n    'ADD_KEY',\n    'DELETE_KEY',\n    'DELETE_ACCOUNT',\n  ];\n\n  return actions.includes(type.toUpperCase());\n}\n\nfunction isJson(string) {\n  const str = string.replace(/\\\\/g, '');\n\n  try {\n    JSON.parse(str);\n    return false;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction uniqueId() {\n  return Math.floor(Math.random() * 1000);\n}\nfunction handleRateLimit(\n  data,\n  reFetch,\n  Loading,\n) {\n  if (data.status === 429 || data.status === undefined) {\n    const retryCount = 4;\n    const delay = Math.pow(2, retryCount) * 1000;\n    setTimeout(() => {\n      reFetch();\n    }, delay);\n  } else {\n    if (Loading) {\n      Loading();\n    }\n  }\n}\n\nfunction mapFeilds(fields) {\n  const args = {};\n\n  fields.forEach((fld) => {\n    let value = fld.value;\n\n    if (fld.type === 'number') {\n      value = Number(value);\n    } else if (fld.type === 'boolean') {\n      value =\n        value.trim().length > 0 &&\n        !['false', '0'].includes(value.toLowerCase());\n    } else if (fld.type === 'json') {\n      value = JSON.parse(value);\n    } else if (fld.type === 'null') {\n      value = null;\n    }\n\n    (args )[fld.name] = value + '';\n  });\n\n  return args;\n}\nfunction localFormat(number) {\n  const bigNumber = Big(number);\n  const formattedNumber = bigNumber\n    .toFixed(5)\n    .replace(/(\\d)(?=(\\d{3})+\\.)/g, '$1,'); // Add commas before the decimal point\n  return formattedNumber.replace(/\\.?0*$/, ''); // Remove trailing zeros and the dot\n}\nfunction formatWithCommas(number) {\n  return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n}\nfunction localFormat(number) {\n  const bigNumber = Big(number);\n  const formattedNumber = bigNumber\n    .toFixed(5)\n    .replace(/(\\d)(?=(\\d{3})+\\.)/g, '$1,'); // Add commas before the decimal point\n  return formattedNumber.replace(/\\.?0*$/, ''); // Remove trailing zeros and the dot\n}\nfunction formatWithCommas(number) {\n  return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n}\n/* END_INCLUDE: \"includes/libs.jsx\" */\n\n\nfunction MainComponent(props) {\n  const {\n    network,\n    t,\n    id,\n    contract,\n    schema,\n    contractInfo,\n    requestSignInWithWallet,\n    connected,\n    accountId,\n    logOut,\n    Link,\n  } = props;\n  const [pageTab, setPageTab] = useState('Contract Info');\n  const config = getConfig(network);\n  const onTab = (index) => {\n    setPageTab(tabs[index]);\n  };\n\n  const tabs = ['Contract Info', 'Contract Methods'];\n\n  return (\n    <Tabs.Root\n      defaultValue={pageTab}\n      className={'bg-white soft-shadow rounded-xl pb-1 px-4 py-3'}\n    >\n      <Tabs.List>\n        {tabs &&\n          tabs.map((tab, index) => (\n            <Tabs.Trigger\n              key={index}\n              onClick={() => {\n                onTab(index);\n              }}\n              className={`px-2 mr-1 md:px-3 border py-2 mb-3 text-xs font-medium rounded-md text-gray-500 hover:text-green-500 hover:border-green-500 cursor-pointer outline-none ${\n                pageTab === tab ? 'text-green-500 border-green-500' : ''\n              }`}\n              value={tab}\n            >\n              {tab === 'Contract Methods' && !schema ? (\n                <div className=\"flex h-full\">\n                  <h2>{tab}</h2>\n                </div>\n              ) : (\n                <h2>{tab}</h2>\n              )}\n            </Tabs.Trigger>\n          ))}\n      </Tabs.List>\n      <Tabs.Content value={tabs[0]}>\n        {\n          <Widget\n            src={`${config.ownerId}/widget/bos-components.components.Contract.Info`}\n            props={{\n              network: network,\n              t: t,\n              id: id,\n              contract: contract,\n              Link,\n            }}\n          />\n        }\n      </Tabs.Content>\n      <Tabs.Content value={tabs[1]}>\n        <div className=\"border-t p-4\">\n          {connected ? (\n            <Tooltip.Provider>\n              <Tooltip.Root>\n                <Tooltip.Trigger asChild>\n                  <button\n                    className=\"px-2 mr-1 md:px-3 bg-neargreen py-2 text-xs font-medium rounded-md text-white inline-flex items-center\"\n                    onClick={logOut}\n                  >\n                    <span className=\"h-3 w-3 inline-block rounded-full mr-2 bg-white\" />\n                    Connected\n                  </button>\n                </Tooltip.Trigger>\n                <Tooltip.Content\n                  className=\"h-auto max-w-xs bg-black bg-opacity-90 z-10 text-xs text-white px-3 py-2\"\n                  align=\"start\"\n                  side=\"bottom\"\n                >\n                  Connect to Contract\n                </Tooltip.Content>\n              </Tooltip.Root>\n            </Tooltip.Provider>\n          ) : (\n            <button\n              className=\"px-2 mr-1 md:px-3 bg-red-400 py-2 text-xs font-medium rounded-md text-white inline-flex items-center\"\n              onClick={requestSignInWithWallet}\n            >\n              <span className=\"h-3 w-3 inline-block rounded-full mr-2 bg-white animate-pulse\" />\n              Connect to Contract\n            </button>\n          )}\n        </div>\n        {!schema && (\n          <p className=\"text-xs mx-5 text-gray-500 mb-4  bg-gray-100 px-2 py-2  w-fit rounded shadow\">\n            Contracts compiled with{' '}\n            <a\n              className=\"text-green-500 mx-1\"\n              target=\"_blank\"\n              href=\"https://github.com/near/abi\"\n              rel=\"noreferrer noopener nofollow\"\n            >\n              abi\n            </a>\n            {`will have their methods and parameters automatically shown. For\n              other contracts we provide a best effort \"auto detect\" facility to\n              find successful methods and parameters from past transactions.`}\n          </p>\n        )}\n        {schema?.body?.functions.length > 0 ? (\n          <Accordion.Root\n            type=\"multiple\"\n            className=\"contract-accordian text-gray-600 px-4 pt-4 border-t w-full\"\n            collapsible\n          >\n            {schema?.body?.functions?.map((func, index) => (\n              <Widget\n                key={index}\n                src={`${config.ownerId}/widget/bos-components.components.Contract.ViewOrChangeAbi`}\n                props={{\n                  network: network,\n                  t: t,\n                  id: id,\n                  key: index,\n                  index: index,\n                  method: func,\n                  connected: connected,\n                  accountId: accountId,\n                  schema: schema,\n                  Link,\n                }}\n              />\n            ))}\n          </Accordion.Root>\n        ) : (\n          contractInfo?.methodNames?.length > 0 && (\n            <Accordion.Root\n              type=\"multiple\"\n              className=\"contract-accordian text-gray-600 px-4 pt-4 border-t w-full\"\n              collapsible\n            >\n              {contractInfo?.methodNames?.map((method, index) => (\n                <Widget\n                  key={index}\n                  src={`${config.ownerId}/widget/bos-components.components.Contract.ViewOrChange`}\n                  props={{\n                    network: network,\n                    t: t,\n                    id: id,\n                    key: index,\n                    index: index,\n                    method: method,\n                    connected: connected,\n                    accountId: accountId,\n                    Link,\n                  }}\n                />\n              ))}\n            </Accordion.Root>\n          )\n        )}\n      </Tabs.Content>\n    </Tabs.Root>\n  );\n}\n\nreturn MainComponent(props, context);", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/nearblocks.near/widget/bos-components.components.Contract.Overview", "fact_widget_deployments_id": "d451390f42b276d46da4c516c272c7d3", "inserted_timestamp": "2024-03-13T13:25:52.848Z", "modified_timestamp": "2024-03-13T13:25:52.848Z", "__row_index": 1}