{"tx_hash": "CWiiGg8QjUctQ8Yvd9QD4K18vmawc547RAUqMb4UsSXt", "action_id_social": "xA1ezL8E2f2ecGuC7RfuTFTGtgpZ74jWQwneoNEWg1B-0-widget", "block_id": 114163779, "block_timestamp": "2024-03-05T21:08:24.867Z", "signer_id": "nearblocks.near", "widget_name": "bos-components.components.Comments.InputField", "source_code": "/**\n * Component: CommentsInputField\n * Author: Nearblocks Pte Ltd\n * License: Business Source License 1.1\n * Description: The component enables users to input and compose comments, including text and image uploads.\n * @interface Props\n * @param {Function} [onChange] - A function triggered when the content changes.\n * @param {Function} [composeButton] - A function to render the compose button.\n */\n\n/* INCLUDE COMPONENT: \"includes/Common/Iframe.jsx\" */\nconst Iframe = (props) => {\n  return <>{<iframe {...props} />}</>;\n};/* END_INCLUDE COMPONENT: \"includes/Common/Iframe.jsx\" */\n\n\n\n\n\n\nfunction MainComponent(props) {\n  const [text, setText] = useState('');\n  const [img, setImg] = useState({});\n  const [msg, setMsg] = useState('Upload an Image');\n  const [markdownEditor, setMarkdownEditor] = useState(false);\n  const content = (text || img.cid || img.url) && {\n    type: 'md',\n    text: text,\n    image: img.url\n      ? { url: img.url }\n      : img.cid\n      ? { ipfs_cid: img.cid }\n      : undefined,\n  };\n  const uploadFile = (files) => {\n    setMsg('Uploading..');\n    asyncFetch('https://ipfs.near.social/add', {\n      method: 'POST',\n      headers: { Accept: 'application/json' },\n      body: files[0],\n    })\n      .then((response) => {\n        setImg(response.body);\n        setMsg('Replace');\n      })\n      .catch(() => {\n        setMsg('Upload an Image');\n      });\n  };\n  const ipfsUrl = (cid) => `https://ipfs.near.social/ipfs/${cid}`;\n\n  const onChange = (text) => {\n    setText(text);\n  };\n\n  if (props.onChange) {\n    props.onChange({ content });\n  }\n\n  const onCompose = () => {\n    setText('');\n    setImg({});\n    setMsg('Upload an Image');\n  };\n\n  const embedCss = `\n.rc-md-editor {\n  border: 0;\n}\n.rc-md-editor .editor-container>.section {\n  border: 0;\n}\n.rc-md-editor .editor-container .sec-md .input {\n  overflow-y: auto;\n  padding: 8px 0 !important;\n  line-height: normal;\n}\n`;\n  const code = `\n<script src=\"https://unpkg.com/react@18/umd/react.development.js\" crossorigin></script>\n<script src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\" crossorigin></script>\n<script src=\"https://unpkg.com/react-markdown-editor-lite@1.3.4/lib/index.js\" crossorigin></script>\n<link rel=\"stylesheet\" href=\"https://unpkg.com/react-markdown-editor-lite@1.3.4/lib/index.css\" />\n\n<style>\n${embedCss}\n</style>\n\n<div id=\"react-root\"></div>\n\n<script>\nfunction TestReact(props) {\n  const [value, setValue] = React.useState(props.initialText || \"\");\n  return React.createElement(ReactMarkdownEditorLite.default, {\n      value,\n      view: { menu: true, md: true, html: false },\n      canView: { menu: true, md: false, html: false, fullScreen: false, hideMenu: true },\n      onChange: ({ text }) => {\n        setValue(text);\n        window.top.postMessage(text, \"*\");\n      },\n      renderHTML: () => {},\n      className: \"full\",\n    });\n}\n\nconst domContainer = document.querySelector('#react-root');\nconst root = ReactDOM.createRoot(domContainer);\n\nwindow.addEventListener(\"message\", (event) => {\n  root.render(React.createElement(TestReact, {\n    initialText: event.data,\n  }));\n});\n\n</script>\n`;\n  return (\n    <div className=\"flex items-center px-3 py-2\">\n      <button\n        type=\"button\"\n        className=\"whitespace-nowrap inline-flex justify-center p-2 text-nearblue-600 rounded-lg cursor-pointer hover:bg-neargray-800 bg-neargray-700 hover:text-nearblue-600\"\n      >\n        <div className=\"inline-block\">\n          {img?.cid && (\n            <div\n              className=\"inline-block me-2 overflow-hidden align-middle\"\n              style={{ width: '2.5em', height: '2.5em' }}\n            >\n              <img\n                className=\"rounded w-100 h-100\"\n                style={{ objectFit: 'cover' }}\n                src={ipfsUrl(img?.cid)}\n                alt=\"upload preview\"\n              />\n            </div>\n          )}\n          <Files\n            multiple={false}\n            accepts={['image/*']}\n            minFileSize={1}\n            clickable\n            onChange={uploadFile}\n          >\n            {msg}\n          </Files>\n        </div>\n      </button>\n\n      <button\n        type=\"button\"\n        className=\"ml-2 p-2 text-nearblue-600 rounded-lg cursor-pointer hover:bg-neargray-800 bg-neargray-700 hover:text-nearblue-600\"\n        onClick={() => setMarkdownEditor((prevState) => !prevState)}\n      >\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          className=\"w-5 h-5\"\n          fill=\"currentColor\"\n          viewBox=\"0 0 16 16\"\n        >\n          <path d=\"M14 1a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2z\" />\n          <path d=\"M6.854 4.646a.5.5 0 0 1 0 .708L4.207 8l2.647 2.646a.5.5 0 0 1-.708.708l-3-3a.5.5 0 0 1 0-.708l3-3a.5.5 0 0 1 .708 0m2.292 0a.5.5 0 0 0 0 .708L11.793 8l-2.647 2.646a.5.5 0 0 0 .708.708l3-3a.5.5 0 0 0 0-.708l-3-3a.5.5 0 0 0-.708 0\" />\n        </svg>\n      </button>\n      {markdownEditor ? (\n        <>\n          <Iframe\n            className=\"mx-2 w-full border\"\n            srcDoc={code}\n            message={text || ''}\n            onMessage={onChange}\n          />\n        </>\n      ) : (\n        <textarea\n          key=\"textarea\"\n          className=\"block mx-4 p-2.5 w-full text-sm text-gray-900 bg-white rounded-lg border border-gray-300 dark:border-gray-600 dark:placeholder-gray-400\"\n          value={text || ''}\n          onInput={(event) =>\n            onChange(event.target.value)\n          }\n          placeholder={\"What's happening?\"}\n        />\n      )}\n\n      <div>{props.composeButton && props.composeButton(onCompose)}</div>\n    </div>\n  );\n}\n\nreturn MainComponent(props, context);", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/nearblocks.near/widget/bos-components.components.Comments.InputField", "fact_widget_deployments_id": "eccd9d217ad85c6489c7a6cfc6206d1b", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 6}