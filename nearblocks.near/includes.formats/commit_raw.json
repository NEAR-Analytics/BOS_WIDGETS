{"tx_hash": "CR9rQGkkG3L6UhhPC3QzEmWo56CqZzUcVsSCYaLXoWhB", "action_id_social": "4bgz9pcVo4q4zV3YGym3pTKDsayvMNQZHqyLmTjsWobz-0-widget", "block_id": 106995453, "block_timestamp": "2023-12-02T12:39:42.542Z", "signer_id": "nearblocks.near", "widget_name": "includes.formats", "source_code": "export function localFormat(number) {\n  const formattedNumber = Number(number).toLocaleString('en', {\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 5,\n  });\n  return formattedNumber;\n}\n\nexport function dollarFormat(number) {\n  const formattedNumber = Number(number).toLocaleString('en', {\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2,\n  });\n  return formattedNumber;\n}\n\nexport function weight(number) {\n  const suffixes = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n  let suffixIndex = 0;\n\n  while (number >= 1000 && suffixIndex < suffixes.length - 1) {\n    number /= 1000;\n    suffixIndex++;\n  }\n\n  return number.toFixed(2) + ' ' + suffixes[suffixIndex];\n}\n\nexport function convertToUTC(timestamp, hour) {\n  const date = new Date(timestamp);\n\n  // Get UTC date components\n  const utcYear = date.getUTCFullYear();\n  const utcMonth = ('0' + (date.getUTCMonth() + 1)).slice(-2); // Adding 1 because months are zero-based\n  const utcDay = ('0' + date.getUTCDate()).slice(-2);\n  const utcHours = ('0' + date.getUTCHours()).slice(-2);\n  const utcMinutes = ('0' + date.getUTCMinutes()).slice(-2);\n  const utcSeconds = ('0' + date.getUTCSeconds()).slice(-2);\n\n  // Array of month abbreviations\n  const monthAbbreviations = [\n    'Jan',\n    'Feb',\n    'Mar',\n    'Apr',\n    'May',\n    'Jun',\n    'Jul',\n    'Aug',\n    'Sep',\n    'Oct',\n    'Nov',\n    'Dec',\n  ];\n  const monthIndex = Number(utcMonth) - 1;\n  // Format the date as required (Jul-25-2022 16:25:37)\n  const formattedDate =\n    monthAbbreviations[monthIndex] +\n    '-' +\n    utcDay +\n    '-' +\n    utcYear +\n    ' ' +\n    utcHours +\n    ':' +\n    utcMinutes +\n    ':' +\n    utcSeconds;\n\n  if (hour) {\n    const currentDate = new Date();\n    const differenceInSeconds = Math.floor(\n      (currentDate.getTime() - date.getTime()) / 1000,\n    );\n\n    if (differenceInSeconds < 60) {\n      return 'a few seconds ago';\n    } else if (differenceInSeconds < 3600) {\n      const minutes = Math.floor(differenceInSeconds / 60);\n      return minutes + ' minute' + (minutes !== 1 ? 's' : '') + ' ago';\n    } else if (differenceInSeconds < 86400) {\n      const hours = Math.floor(differenceInSeconds / 3600);\n      return hours + ' hour' + (hours !== 1 ? 's' : '') + ' ago';\n    }\n\n    return formattedDate;\n  }\n\n  return formattedDate;\n}\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/nearblocks.near/widget/includes.formats", "fact_widget_deployments_id": "042d068c72664539f4b1c59ffc3e9cd4", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 5}