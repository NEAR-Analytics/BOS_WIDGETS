{"tx_hash": "5W4jx64hPSoHoJ3tTsaboHxuUwGMSixuPjXwptwH1CCA", "action_id_social": "X5t3kfeT8ZWMUdQ1wLD6DzFwqpjbbFGxDgHSfxTzvaR-0-widget", "block_id": 107681259, "block_timestamp": "2023-12-11T13:26:00.568Z", "signer_id": "nearblocks.near", "widget_name": "includes.libs", "source_code": "import { localFormat, formatWithCommas } from '@/includes/formats';\n\nexport function convertAmountToReadableString(amount, type) {\n  if (!amount) return null;\n\n  let value;\n  let suffix;\n\n  const nearNomination = Math.pow(10, 24);\n\n  const amountInNear = Number(amount) / nearNomination;\n\n  if (type === 'totalSupply' || type === 'totalStakeAmount') {\n    value = formatWithCommas((amountInNear / 1e6).toFixed(1));\n    suffix = 'M';\n  } else if (type === 'seatPriceAmount') {\n    value = formatWithCommas(Math.round(amountInNear).toString());\n  } else {\n    value = amount.toString();\n  }\n  return `${value}${suffix}`;\n}\n\nexport function convertTimestampToTime(timestamp) {\n  const hours = Math.floor(timestamp / 3600);\n  const minutes = Math.floor((timestamp % 3600) / 60);\n  const seconds = Math.floor(timestamp % 60);\n\n  return `${hours.toString().padStart(2, '0')}H ${minutes\n    .toString()\n    .padStart(2, '0')}M ${seconds.toString().padStart(2, '0')}S`;\n}\n\nexport function yoctoToNear(yocto, format) {\n  const YOCTO_PER_NEAR = Big(10).pow(24).toString();\n  const near = Big(yocto).div(YOCTO_PER_NEAR).toString();\n\n  return format ? localFormat(near) : near;\n}\n\nexport function fiatValue(big, price) {\n  // @ts-ignore\n  const value = Big(big).mul(Big(price)).toString();\n  const formattedNumber = Number(value).toLocaleString('en', {\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2,\n  });\n  return formattedNumber;\n}\n\nexport function nanoToMilli(nano) {\n  return Big(nano).div(Big(10).pow(6)).round().toNumber();\n}\n\nexport function shortenAddress(address) {\n  const string = String(address);\n\n  if (string.length <= 20) return string;\n\n  return `${string.substr(0, 10)}...${string.substr(-7)}`;\n}\n\nexport function truncateString(str, maxLength, suffix) {\n  if (str.length <= maxLength) {\n    return str;\n  }\n  return str.substring(0, maxLength - suffix.length) + suffix;\n}\n\nexport function getConfig(network) {\n  switch (network) {\n    case 'mainnet':\n      return {\n        ownerId: 'nearblocks.near',\n        nodeUrl: 'https://rpc.mainnet.near.org',\n        backendUrl: 'https://api-beta.nearblocks.io/v1/',\n        rpcUrl: 'https://archival-rpc.testnet.near.org',\n        appUrl: 'https://nearblocks.io/',\n      };\n    case 'testnet':\n      return {\n        ownerId: 'nearblocks.testnet',\n        nodeUrl: 'https://rpc.testnet.near.org',\n        backendUrl: 'https://api-testnet-beta.nearblocks.io/v1/',\n        rpcUrl: 'https://archival-rpc.testnet.near.org',\n        appUrl: 'https://testnet.nearblocks.io/',\n      };\n    default:\n      return {};\n  }\n}\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/nearblocks.near/widget/includes.libs", "fact_widget_deployments_id": "73147da4895ded24c181d55db95bfbae", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 19}