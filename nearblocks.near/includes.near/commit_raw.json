{"tx_hash": "5W4jx64hPSoHoJ3tTsaboHxuUwGMSixuPjXwptwH1CCA", "action_id_social": "X5t3kfeT8ZWMUdQ1wLD6DzFwqpjbbFGxDgHSfxTzvaR-0-widget", "block_id": 107681259, "block_timestamp": "2023-12-11T13:26:00.568Z", "signer_id": "nearblocks.near", "widget_name": "includes.near", "source_code": "import { localFormat } from '@/includes/formats';\nimport { yoctoToNear } from '@/includes/libs';\n\nexport function encodeArgs(args) {\n  if (!args || typeof args === 'undefined') return '';\n\n  return Buffer.from(JSON.stringify(args)).toString('base64');\n}\nexport function decodeArgs(args) {\n  if (!args || typeof args === 'undefined') return {};\n\n  const encodedString = Buffer.from(args).toString('base64');\n  return JSON.parse(Buffer.from(encodedString, 'base64').toString());\n}\n\nexport function txnMethod(actions) {\n  const count = actions?.length || 0;\n\n  if (!count) return 'Unknown';\n  if (count > 1) return 'Batch Transaction';\n\n  const action = actions[0];\n\n  if (action.action === 'FUNCTION_CALL') {\n    return action.method;\n  }\n\n  return action.action;\n}\n\nexport function gasPrice(yacto) {\n  const near = Big(yoctoToNear(yacto, false)).mul(Big(10).pow(12)).toString();\n\n  return `${localFormat(near)} \u24c3 / Tgas`;\n}\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/nearblocks.near/widget/includes.near", "fact_widget_deployments_id": "51f6c79c4f41158a47cc7955649a3288", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 9}