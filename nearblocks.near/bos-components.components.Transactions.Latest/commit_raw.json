{"tx_hash": "5W4jx64hPSoHoJ3tTsaboHxuUwGMSixuPjXwptwH1CCA", "action_id_social": "X5t3kfeT8ZWMUdQ1wLD6DzFwqpjbbFGxDgHSfxTzvaR-0-widget", "block_id": 107681259, "block_timestamp": "2023-12-11T13:26:00.568Z", "signer_id": "nearblocks.near", "widget_name": "bos-components.components.Transactions.Latest", "source_code": "/**\n * Component: LatestTransactions\n * Author: Nearblocks Pte Ltd\n * License: Business Source License 1.1\n * Description: Latest Transactions on Near Protocol.\n */\n\n/* INCLUDE: \"includes/formats.jsx\" */\nfunction getTimeAgoString(timestamp) {\n  const currentUTC = Date.now();\n  const date = new Date(timestamp);\n  const seconds = Math.floor((currentUTC - date.getTime()) / 1000);\n\n  const intervals = {\n    year: seconds / (60 * 60 * 24 * 365),\n    month: seconds / (60 * 60 * 24 * 30),\n    week: seconds / (60 * 60 * 24 * 7),\n    day: seconds / (60 * 60 * 24),\n    hour: seconds / (60 * 60),\n    minute: seconds / 60,\n  };\n\n  if (intervals.year > 1) {\n    return Math.floor(intervals.year) + ' years ago';\n  } else if (intervals.month > 1) {\n    return Math.floor(intervals.month) + ' months ago';\n  } else if (intervals.week > 1) {\n    return Math.floor(intervals.week) + ' weeks ago';\n  } else if (intervals.day > 1) {\n    return Math.floor(intervals.day) + ' days ago';\n  } else if (intervals.hour > 1) {\n    return Math.floor(intervals.hour) + ' hours ago';\n  } else if (intervals.minute > 1) {\n    return Math.floor(intervals.minute) + ' minutes ago';\n  } else {\n    return 'a few seconds ago';\n  }\n}\n\nfunction formatWithCommas(number) {\n  return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n}\n\nfunction formatTimestampToString(timestamp) {\n  const date = new Date(timestamp);\n\n  // Format the date to 'YYYY-MM-DD HH:mm:ss' format\n  const formattedDate = date.toISOString().replace('T', ' ').split('.')[0];\n\n  return formattedDate;\n}\n\nfunction convertToMetricPrefix(number) {\n  const prefixes = ['', 'k', 'M', 'G', 'T', 'P', 'E', 'Z', 'Y']; // Metric prefixes\n\n  let count = 0;\n  while (Math.abs(number) >= 1000 && count < prefixes.length - 1) {\n    number /= 1000;\n    count++;\n  }\n\n  return number.toFixed(2) + prefixes[count];\n}\n\nfunction gasFee(gas, price) {\n  const near = yoctoToNear(Big(gas).mul(Big(price)).toString(), true);\n\n  return `${near} \u24c3`;\n}\n\nfunction currency(number) {\n  let absNumber = Math.abs(number);\n\n  const suffixes = ['', 'K', 'M', 'B', 'T', 'Q'];\n  let suffixIndex = 0;\n\n  while (absNumber >= 1000 && suffixIndex < suffixes.length - 1) {\n    absNumber /= 1000;\n    suffixIndex++;\n  }\n\n  let shortNumber = parseFloat(absNumber.toFixed(2));\n\n  return (number < 0 ? '-' : '') + shortNumber + ' ' + suffixes[suffixIndex];\n}\n\nfunction formatDate(dateString) {\n  const inputDate = new Date(dateString);\n\n  const days = [\n    'Sunday',\n    'Monday',\n    'Tuesday',\n    'Wednesday',\n    'Thursday',\n    'Friday',\n    'Saturday',\n  ];\n  const months = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n  ];\n\n  const dayOfWeek = days[inputDate.getDay()];\n  const month = months[inputDate.getMonth()];\n  const day = inputDate.getDate();\n  const year = inputDate.getFullYear();\n\n  const formattedDate = dayOfWeek + ', ' + month + ' ' + day + ', ' + year;\n  return formattedDate;\n}\n\nfunction formatCustomDate(inputDate) {\n  var date = new Date(inputDate);\n\n  // Array of month names\n  var monthNames = [\n    'Jan',\n    'Feb',\n    'Mar',\n    'Apr',\n    'May',\n    'Jun',\n    'Jul',\n    'Aug',\n    'Sep',\n    'Oct',\n    'Nov',\n    'Dec',\n  ];\n\n  // Get month and day\n  var month = monthNames[date.getMonth()];\n  var day = date.getDate();\n\n  // Create formatted date string in \"MMM DD\" format\n  var formattedDate = month + ' ' + (day < 10 ? '0' + day : day);\n\n  return formattedDate;\n}\n\nfunction shortenHex(address) {\n  return `${address && address.substr(0, 6)}...${address.substr(-4)}`;\n}\nfunction yoctoToNear(yocto, format) {\n  const YOCTO_PER_NEAR = Big(10).pow(24).toString();\n  const near = Big(yocto).div(YOCTO_PER_NEAR).toString();\n\n  return format ? localFormat(near) : near;\n}\nfunction shortenHex(address) {\n  return `${address && address.substr(0, 6)}...${address.substr(-4)}`;\n}\n/* END_INCLUDE: \"includes/formats.jsx\" */\n/* INCLUDE: \"includes/libs.jsx\" */\nfunction getConfig(network) {\n  switch (network) {\n    case 'mainnet':\n      return {\n        ownerId: 'nearblocks.near',\n        nodeUrl: 'https://rpc.mainnet.near.org',\n        backendUrl: 'https://api-beta.nearblocks.io/v1/',\n        rpcUrl: 'https://archival-rpc.testnet.near.org',\n        appUrl: 'https://nearblocks.io/',\n      };\n    case 'testnet':\n      return {\n        ownerId: 'nearblocks.testnet',\n        nodeUrl: 'https://rpc.testnet.near.org',\n        backendUrl: 'https://api-testnet-beta.nearblocks.io/v1/',\n        rpcUrl: 'https://archival-rpc.testnet.near.org',\n        appUrl: 'https://testnet.nearblocks.io/',\n      };\n    default:\n      return {};\n  }\n}\nfunction nanoToMilli(nano) {\n  return Big(nano).div(Big(10).pow(6)).round().toNumber();\n}\n\nfunction shortenAddress(address) {\n  const string = String(address);\n\n  if (string.length <= 20) return string;\n\n  return `${string.substr(0, 10)}...${string.substr(-7)}`;\n}\n\nfunction truncateString(str, maxLength, suffix) {\n  if (str.length <= maxLength) {\n    return str;\n  }\n  return str.substring(0, maxLength - suffix.length) + suffix;\n}\n\nfunction getConfig(network) {\n  switch (network) {\n    case 'mainnet':\n      return {\n        ownerId: 'nearblocks.near',\n        nodeUrl: 'https://rpc.mainnet.near.org',\n        backendUrl: 'https://api-beta.nearblocks.io/v1/',\n        rpcUrl: 'https://archival-rpc.testnet.near.org',\n        appUrl: 'https://nearblocks.io/',\n      };\n    case 'testnet':\n      return {\n        ownerId: 'nearblocks.testnet',\n        nodeUrl: 'https://rpc.testnet.near.org',\n        backendUrl: 'https://api-testnet-beta.nearblocks.io/v1/',\n        rpcUrl: 'https://archival-rpc.testnet.near.org',\n        appUrl: 'https://testnet.nearblocks.io/',\n      };\n    default:\n      return {};\n  }\n}\nfunction shortenAddress(address) {\n  const string = String(address);\n\n  if (string.length <= 20) return string;\n\n  return `${string.substr(0, 10)}...${string.substr(-7)}`;\n}\n\nfunction truncateString(str, maxLength, suffix) {\n  if (str.length <= maxLength) {\n    return str;\n  }\n  return str.substring(0, maxLength - suffix.length) + suffix;\n}\n\nfunction getConfig(network) {\n  switch (network) {\n    case 'mainnet':\n      return {\n        ownerId: 'nearblocks.near',\n        nodeUrl: 'https://rpc.mainnet.near.org',\n        backendUrl: 'https://api-beta.nearblocks.io/v1/',\n        rpcUrl: 'https://archival-rpc.testnet.near.org',\n        appUrl: 'https://nearblocks.io/',\n      };\n    case 'testnet':\n      return {\n        ownerId: 'nearblocks.testnet',\n        nodeUrl: 'https://rpc.testnet.near.org',\n        backendUrl: 'https://api-testnet-beta.nearblocks.io/v1/',\n        rpcUrl: 'https://archival-rpc.testnet.near.org',\n        appUrl: 'https://testnet.nearblocks.io/',\n      };\n    default:\n      return {};\n  }\n}\nfunction yoctoToNear(yocto, format) {\n  const YOCTO_PER_NEAR = Big(10).pow(24).toString();\n  const near = Big(yocto).div(YOCTO_PER_NEAR).toString();\n\n  return format ? localFormat(near) : near;\n}\n\nfunction fiatValue(big, price) {\n  // @ts-ignore\n  const value = Big(big).mul(Big(price)).toString();\n  const formattedNumber = Number(value).toLocaleString('en', {\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2,\n  });\n  return formattedNumber;\n}\n\nfunction nanoToMilli(nano) {\n  return Big(nano).div(Big(10).pow(6)).round().toNumber();\n}\n\nfunction shortenAddress(address) {\n  const string = String(address);\n\n  if (string.length <= 20) return string;\n\n  return `${string.substr(0, 10)}...${string.substr(-7)}`;\n}\n\nfunction truncateString(str, maxLength, suffix) {\n  if (str.length <= maxLength) {\n    return str;\n  }\n  return str.substring(0, maxLength - suffix.length) + suffix;\n}\n\nfunction getConfig(network) {\n  switch (network) {\n    case 'mainnet':\n      return {\n        ownerId: 'nearblocks.near',\n        nodeUrl: 'https://rpc.mainnet.near.org',\n        backendUrl: 'https://api-beta.nearblocks.io/v1/',\n        rpcUrl: 'https://archival-rpc.testnet.near.org',\n        appUrl: 'https://nearblocks.io/',\n      };\n    case 'testnet':\n      return {\n        ownerId: 'nearblocks.testnet',\n        nodeUrl: 'https://rpc.testnet.near.org',\n        backendUrl: 'https://api-testnet-beta.nearblocks.io/v1/',\n        rpcUrl: 'https://archival-rpc.testnet.near.org',\n        appUrl: 'https://testnet.nearblocks.io/',\n      };\n    default:\n      return {};\n  }\n}\nfunction localFormat(number) {\n  const formattedNumber = Number(number).toLocaleString('en', {\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 5,\n  });\n  return formattedNumber;\n}\nfunction formatWithCommas(number) {\n  return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n}\n/* END_INCLUDE: \"includes/libs.jsx\" */\n\n\nfunction MainComponent() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [txns, setTxns] = useState([]);\n\n  const Loader = (props) => {\n    return (\n      <div\n        className={`bg-gray-200 h-5 rounded shadow-sm animate-pulse ${props.className}`}\n      ></div>\n    );\n  };\n\n  const config = getConfig(context.networkId);\n\n  useEffect(() => {\n    function fetchLatestTxns() {\n      setIsLoading(true);\n      asyncFetch(`${config.backendUrl}txns/latest`).then(\n        (data\n\n\n\n) => {\n          const resp = data?.body?.txns;\n          setTxns(resp);\n        },\n      );\n      setIsLoading(false);\n    }\n    fetchLatestTxns();\n    const interval = setInterval(() => {\n      fetchLatestTxns();\n    }, 5000);\n\n    return () => clearInterval(interval);\n  }, [config.backendUrl]);\n\n  return (\n    <>\n      <div className=\"relative\">\n        <ScrollArea.Root>\n          <ScrollArea.Viewport>\n            {!txns && (\n              <div className=\"flex items-center h-16 mx-3 py-2 text-gray-400 text-xs\">\n                Error!\n              </div>\n            )}\n            {!isLoading && txns.length === 0 && (\n              <div className=\"flex items-center h-16 mx-3 py-2 text-gray-400 text-xs\">\n                No transactions found!\n              </div>\n            )}\n            {isLoading && (\n              <div className=\"px-3 divide-y h-80\">\n                {[...Array(10)].map((_, i) => (\n                  <div\n                    className=\"grid grid-cols-2 md:grid-cols-3 gap-3 py-3 h-16\"\n                    key={i}\n                  >\n                    <div className=\"flex items-center \">\n                      <div className=\"flex-shrink-0 rounded-full h-10 w-10 bg-blue-900/10 flex items-center justify-center text-sm\">\n                        TX\n                      </div>\n                      <div className=\"px-2\">\n                        <div className=\"text-green-500 text-sm\">\n                          <Loader className=\"h-4\" wrapperClassName=\"h-5 w-14\" />\n                        </div>\n                        <div className=\"text-gray-400 text-xs\">\n                          <Loader className=\"h-3\" wrapperClassName=\"h-4 w-24\" />\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"col-span-2 md:col-span-1 px-2 order-2 md:order-1 text-sm\">\n                      <Loader className=\"h-4\" wrapperClassName=\"h-5 w-36\" />\n                      <div className=\"text-gray-400 text-sm\">\n                        <Loader className=\"h-4\" wrapperClassName=\"h-5 w-14\" />\n                      </div>\n                    </div>\n                    <div className=\"text-right order-1 md:order-2\">\n                      <Loader wrapperClassName=\"ml-auto w-32\" />\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n            {txns.length > 0 && (\n              <div className=\"px-3 divide-y h-80\">\n                {txns.map((txn) => {\n                  return (\n                    <div\n                      className=\"grid grid-cols-2 md:grid-cols-3 gap-3 lg:gap-3 items-center py-3\"\n                      key={txn.transaction_hash}\n                    >\n                      <div className=\" flex items-center\">\n                        <div className=\"flex-shrink-0 rounded-full h-10 w-10 bg-blue-900/10 flex items-center justify-center text-sm\">\n                          TX\n                        </div>\n                        <div className=\"overflow-hidden pl-2\">\n                          <div className=\"text-green-500 text-sm  \">\n                            <a href={`/txns/${txn.transaction_hash}`}>\n                              <a className=\"text-green-500 font-medium\">\n                                {shortenHex(txn.transaction_hash)}\n                              </a>\n                            </a>\n                          </div>\n                          <div className=\"text-gray-400 text-xs truncate\">\n                            {getTimeAgoString(\n                              nanoToMilli(Number(txn.block_timestamp)),\n                            )}\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"col-span-2 md:col-span-1 px-2 order-2 md:order-1 text-sm\">\n                        <div className=\"whitespace-nowrap truncate\">\n                          From{' '}\n                          <a href={`/address/${txn.signer_account_id}`}>\n                            <a className=\"text-green-500  font-medium\">\n                              {shortenAddress(txn.signer_account_id)}\n                            </a>\n                          </a>\n                        </div>\n                        <div className=\"whitespace-nowrap truncate\">\n                          To{' '}\n                          <a href={`/address/${txn.receiver_account_id}`}>\n                            <a className=\"text-green-500 font-medium\">\n                              {shortenAddress(txn.receiver_account_id)}\n                            </a>\n                          </a>\n                        </div>\n                      </div>\n                      <div className=\"text-right order-1 md:order-2 overflow-hidden\">\n                        <Tooltip.Provider>\n                          <Tooltip.Root>\n                            <Tooltip.Trigger asChild>\n                              <span className=\"inline-flex items-center rounded-md bg-gray-50 px-2 py-1 text-xs font-medium text-gray-600 ring-1 ring-inset ring-gray-500/10 text-gray-400 truncate\">\n                                {yoctoToNear(\n                                  txn.actions_agg?.deposit || 0,\n                                  true,\n                                )}{' '}\n                                \u24c3\n                              </span>\n                            </Tooltip.Trigger>\n                            <Tooltip.Content\n                              className=\"h-auto max-w-xs bg-black bg-opacity-90 z-10 text-xs text-white px-3 py-2 break-words\"\n                              sideOffset={5}\n                            >\n                              Deposit value\n                            </Tooltip.Content>\n                          </Tooltip.Root>\n                        </Tooltip.Provider>\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n            )}\n          </ScrollArea.Viewport>\n          <ScrollArea.Scrollbar\n            className=\"flex select-none touch-none p-0.5 bg-gray-400 transition-colors duration-[160ms] ease-out hover:bg-blend-darken data-[orientation=vertical]:w-2.5 data-[orientation=horizontal]:flex-col data-[orientation=horizontal]:h-2.5\"\n            orientation=\"vertical\"\n          >\n            <ScrollArea.Thumb className=\"flex-1 bg-gray-400 rounded-[10px] relative before:content-[''] before:absolute before:top-1/2 before:left-1/2 before:-translate-x-1/2 before:-translate-y-1/2 before:w-full before:h-full before:min-w-[44px] before:min-h-[44px]\" />\n          </ScrollArea.Scrollbar>\n          <ScrollArea.Scrollbar\n            className=\"flex select-none touch-none p-0.5 bg-gray-400 transition-colors duration-[160ms] ease-out hover:bg-blend-darken data-[orientation=vertical]:w-2.5 data-[orientation=horizontal]:flex-col data-[orientation=horizontal]:h-2.5\"\n            orientation=\"horizontal\"\n          >\n            <ScrollArea.Thumb className=\"flex-1 bg-gray-400 rounded-[10px] relative before:content-[''] before:absolute before:top-1/2 before:left-1/2 before:-translate-x-1/2 before:-translate-y-1/2 before:w-full before:h-full before:min-w-[44px] before:min-h-[44px]\" />\n          </ScrollArea.Scrollbar>\n          <ScrollArea.Corner className=\"bg-black-500\" />\n        </ScrollArea.Root>\n      </div>\n      {isLoading && (\n        <div className=\"border-t px-2 py-3 text-gray-700\">\n          <Loader className=\"h-10\" />\n        </div>\n      )}\n      {txns && txns.length > 0 && (\n        <div className=\"border-t px-2 py-3 text-gray-700\">\n          <a href=\"/txns\">\n            <a className=\"block text-center border border-green-900/10 font-thin bg-green-500 hover:bg-green-400 text-white text-xs py-3 rounded w-full focus:outline-none hover:no-underline\">\n              View all transactions\n            </a>\n          </a>\n        </div>\n      )}\n    </>\n  );\n}\n\nreturn MainComponent(props, context);", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/nearblocks.near/widget/bos-components.components.Transactions.Latest", "fact_widget_deployments_id": "fd4cc66cf3b8ef87a0101e6ba47dd783", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 4}