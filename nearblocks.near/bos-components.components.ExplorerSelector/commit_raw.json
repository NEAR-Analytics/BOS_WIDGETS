{"tx_hash": "wCjJaPRMc1wML37Fazch2HcydH64WC4fgr43KwVKzAw", "action_id_social": "6XSqrZUT56NVrkWmAZvJpVv9BUQo6ZGmxj8VQ2wyXixQ-0-widget", "block_id": 112949153, "block_timestamp": "2024-02-16T12:08:26.199Z", "signer_id": "nearblocks.near", "widget_name": "bos-components.components.ExplorerSelector", "source_code": "/**\n * Component : ExplorerSelector\n * License : Business Source License 1.1\n * Description: Explorer Selector allows users to select which explorer they would like to be redirected to\n * @interface Props\n * @param {string} [path] -  Represents the URL path within the explorer selector, facilitating navigation to the chosen page based on the selection.\n * @param {string} [network] - Identifies the network within the explorer selector by specifying its identifier (e.g., 'testnet').\n * @param {boolean} [useStyles] - Flag indicating whether to apply default gateway styles; when set to `true`, the component uses default styles, otherwise, it allows for custom styling.\n */\n\n\n\n\n\n\n\nfunction MainComponent(props) {\n  const [selected, setSelected] = useState('nearblocks');\n  const [css, setCss] = useState({});\n\n  const config = {\n    nearblocks:\n      props?.network === 'testnet'\n        ? 'https://testnet.nearblocks.io'\n        : 'https://nearblocks.io',\n    nearexplorer:\n      props?.network === 'testnet'\n        ? 'https://legacy.explorer.testnet.near.org'\n        : 'https://legacy.explorer.near.org',\n    pikespeakai: props?.network === 'testnet' ? null : 'https://pikespeak.ai',\n  };\n\n  function removePlural(word) {\n    if (word.slice(-1) === 's') {\n      return word.slice(0, -1);\n    } else {\n      return word;\n    }\n  }\n\n  /**\n   * Fetches styles asynchronously from a nearblocks gateway.\n   */\n  function fetchStyle() {\n    asyncFetch('https://beta.nearblocks.io/common.css').then(\n      (res) => {\n        if (res?.body) {\n          setCss(res.body);\n        }\n      },\n    );\n  }\n\n  function getHref(link) {\n    if (link)\n      switch (getFirstPathSegment(link)) {\n        case 'accounts':\n          return (\n            config.nearblocks + '/address/' + selectUrlAfterSecondSlash(link)\n          );\n        case 'transactions':\n          return config.nearblocks + '/txns/' + selectUrlAfterSecondSlash(link);\n        case 'stats':\n          return config.nearblocks + '/charts';\n\n        default:\n          return config.nearblocks + link;\n      }\n    else {\n      return config.nearblocks;\n    }\n  }\n  function getPikespeakHref(link) {\n    if (link)\n      switch (getFirstPathSegment(link)) {\n        case 'accounts':\n          return (\n            config.pikespeakai +\n            '/wallet-explorer/' +\n            selectUrlAfterSecondSlash(link)\n          );\n        case 'transactions':\n          return (\n            config.pikespeakai +\n            '/transaction-viewer/' +\n            selectUrlAfterSecondSlash(link)\n          );\n        case 'stats':\n          return config.pikespeakai + '/near-world/overview';\n\n        default:\n          return config.pikespeakai;\n      }\n    else {\n      return config.pikespeakai;\n    }\n  }\n  function linkPikespeakai(link) {\n    if (link)\n      switch (getFirstPathSegment(link)) {\n        case '':\n          return true;\n        case 'accounts':\n          return true;\n        case 'transactions':\n          return true;\n        case 'blocks':\n          return false;\n        case 'stats':\n          return true;\n        default:\n          return false;\n      }\n    return false;\n  }\n  function linkNearblocks(link) {\n    if (link)\n      switch (getFirstPathSegment(link)) {\n        case '':\n          return true;\n        case 'accounts':\n          return true;\n        case 'transactions':\n          return true;\n        case 'blocks':\n          return true;\n        case 'stats':\n          return true;\n        default:\n          return false;\n      }\n    return false;\n  }\n\n  function linkNearExplorer(link) {\n    if (link)\n      switch (getFirstPathSegment(link)) {\n        case '':\n          return true;\n        case 'accounts':\n          return true;\n        case 'transactions':\n          return true;\n        case 'blocks':\n          return true;\n        case 'stats':\n          return true;\n        case 'nodes':\n          return true;\n        default:\n          return false;\n      }\n    return false;\n  }\n\n  function getFirstPathSegment(url) {\n    const match = url.match(/\\/([^/]+)/);\n\n    if (match && match[1]) {\n      return match[1];\n    } else {\n      return '';\n    }\n  }\n\n  function selectUrlAfterSecondSlash(url) {\n    const segments = url.split('/');\n\n    if (segments.length >= 3) {\n      const selectedUrl = segments.slice(2).join('/');\n      return selectedUrl;\n    } else {\n      return '';\n    }\n  }\n\n  function shortenHex(address) {\n    return address?.length > 9\n      ? `${address && address.substr(0, 6)}...${address.substr(-4)}`\n      : address;\n  }\n\n  const path = props?.path || '';\n  const href = getHref(path);\n  const pikespeakHref = getPikespeakHref(path);\n  const hasLinkNearblocks = props?.path ? !linkNearblocks(path) : false;\n  const hasLinkNearExplorer = props?.path ? !linkNearExplorer(path) : false;\n  const hasLinkPeakspeak = props?.path ? !linkPikespeakai(path) : false;\n\n  function onSelect(value) {\n    setSelected(value);\n  }\n\n  useEffect(() => {\n    if (props?.useStyles) fetchStyle();\n  }, [props?.useStyles]);\n\n  const Theme = styled.div`\n    ${css}\n  `;\n\n  return (\n    <Theme>\n      <div className=\"flex justify-center flex-col items-center h-screen\">\n        <h1 className=\"text-center text-3xl mb-3\">NEAR Explorer Selector</h1>\n        {getFirstPathSegment(path) &&\n          !hasLinkNearblocks &&\n          !hasLinkNearblocks && (\n            <h1 className=\"text-center text-lg font-medium mb-3\">\n              You are searching for{' '}\n              {selectUrlAfterSecondSlash(path)\n                ? removePlural(getFirstPathSegment(path))\n                : getFirstPathSegment(path)}\n              ...\n            </h1>\n          )}\n        {selectUrlAfterSecondSlash(path) && (\n          <span className=\"text-xs text-center bg-gray-100 text-gray-500 mb-2 p-1  rounded-md\">\n            {shortenHex(selectUrlAfterSecondSlash(path))}\n          </span>\n        )}\n        <h1 className=\"text-center text-lg font-medium mb-2\">\n          Choose from the available NEAR Explorers below\n        </h1>\n        <div className=\"md:container justify-center md:flex gap-3 mt-2\">\n          {config.pikespeakai === null ? null : (\n            <a\n              href={\n                !hasLinkPeakspeak\n                  ? (pikespeakHref && pikespeakHref) ||\n                    (config.pikespeakai ?? '') + path\n                  : config.pikespeakai ?? ''\n              }\n              onClick={() => {\n                onSelect('pikespeakai');\n              }}\n              className={`h-45 w-65 relative shadow-md flex justify-center items-center flex-col m-2 rounded-lg border-2 border-solid ${\n                selected === 'pikespeakai'\n                  ? !linkPikespeakai(path)\n                    ? 'border-gray-100'\n                    : 'border-neargreen-200'\n                  : ''\n              } ${\n                !linkPikespeakai(path) || config.pikespeakai === null\n                  ? 'pointer-events-none'\n                  : ' pointer-events-auto'\n              }`}\n            >\n              {!linkPikespeakai(path) ||\n                (config.pikespeakai === null && (\n                  <div className=\"absolute top-0 left-0 w-full h-full bg-gray-100 !opacity-50 rounded-lg\"></div>\n                ))}\n              <span className=\"text-xs text-center absolute bg-neargreen-200 text-white p-1 rounded-bl-md rounded-tr right-0 top-0\">\n                New\n              </span>\n              <img\n                className=\"h-16 w-44\"\n                src=\"/images/pikespeak_logo.png\"\n                alt=\"Nearblocks\"\n              />\n              <p className=\"text-nearblue-600 mt-2\">Pikespeak</p>\n            </a>\n          )}\n          <a\n            href={\n              !hasLinkNearblocks\n                ? href || config.nearblocks + path\n                : config.nearblocks\n            }\n            onClick={() => {\n              onSelect('nearblocks');\n            }}\n            className={`h-45 w-65 relative shadow-md flex justify-center items-center flex-col m-2 rounded-lg border-2 border-solid ${\n              selected === 'nearblocks'\n                ? !linkNearblocks(path)\n                  ? 'border-gray-100'\n                  : 'border-neargreen-200'\n                : ''\n            } ${\n              !linkNearblocks(path)\n                ? 'bg-gray-100 pointer-events-none'\n                : 'pointer-events-auto'\n            }`}\n          >\n            {' '}\n            {!linkNearblocks(path) && (\n              <div className=\"absolute top-0 left-0 w-full h-full bg-gray-100 !opacity-50 rounded-lg\"></div>\n            )}\n            <span className=\"text-xs text-center absolute bg-neargreen-200 text-white p-1 rounded-bl-md rounded-tr right-0 top-0\">\n              Recommended\n            </span>\n            <img\n              className=\"h-16 w-44\"\n              src={'https://nearblocks.io/images/nearblocksblack.svg'}\n              alt=\"Nearblocks\"\n            />\n            <p className=\"text-nearblue-600 mt-2\">Nearblocks</p>\n          </a>\n          <a\n            href={\n              !hasLinkNearExplorer\n                ? config.nearexplorer + path\n                : config.nearexplorer\n            }\n            onClick={() => {\n              onSelect('nearexplorer');\n            }}\n            className={`h-45 w-65 relative shadow-md flex justify-center items-center flex-col m-2 rounded-lg border-2 border-solid ${\n              selected === 'nearexplorer'\n                ? !linkNearExplorer(path)\n                  ? 'border-gray-100'\n                  : 'border-neargreen-200'\n                : ''\n            } ${\n              !linkNearExplorer(path)\n                ? 'bg-gray-100 pointer-events-none'\n                : 'pointer-events-auto'\n            }`}\n          >\n            {' '}\n            {!linkNearExplorer(path) && (\n              <div className=\"absolute top-0 left-0 w-full h-full bg-gray-100 !opacity-50 rounded-lg\"></div>\n            )}\n            <img\n              className=\"h-16 w-44\"\n              src=\"data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%2221%22%20height%3D%2220%22%20viewBox%3D%220%200%2021%2020%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%3Cpath%20d%3D%22M16.5528%201.01528L12.3722%207.22222C12.3127%207.31161%2012.2875%207.41954%2012.3014%207.52604C12.3153%207.63254%2012.3673%207.73042%2012.4477%207.80156C12.5282%207.87271%2012.6317%207.91231%2012.7391%207.91305C12.8465%207.91378%2012.9505%207.87559%2013.0319%207.80556L17.1472%204.23611C17.1713%204.21453%2017.2012%204.20045%2017.2332%204.19557C17.2652%204.19068%2017.2979%204.19522%2017.3274%204.20862C17.3568%204.22203%2017.3817%204.24371%2017.3991%204.27104C17.4164%204.29836%2017.4254%204.33014%2017.425%204.3625V15.5375C17.425%2015.5717%2017.4144%2015.6051%2017.3948%2015.6331C17.3752%2015.6611%2017.3474%2015.6824%2017.3152%2015.6941C17.2831%2015.7058%2017.2481%2015.7073%2017.2151%2015.6984C17.182%2015.6895%2017.1525%2015.6707%2017.1306%2015.6444L4.69167%200.754167C4.49159%200.51791%204.24246%200.328063%203.9616%200.197824C3.68073%200.067585%203.37487%207.92977e-05%203.06528%207.36094e-08H2.63056C2.0655%207.36094e-08%201.52358%200.224469%201.12403%200.624025C0.724468%201.02358%200.5%201.5655%200.5%202.13056V17.8694C0.5%2018.4345%200.724468%2018.9764%201.12403%2019.376C1.52358%2019.7755%202.0655%2020%202.63056%2020C2.99488%2020.0001%203.35316%2019.9068%203.67119%2019.7291C3.98922%2019.5513%204.2564%2019.2951%204.44722%2018.9847L8.62778%2012.7778C8.68732%2012.6884%208.71248%2012.5805%208.6986%2012.474C8.68472%2012.3675%208.63274%2012.2696%208.55228%2012.1984C8.47182%2012.1273%208.36832%2012.0877%208.26092%2012.087C8.15352%2012.0862%208.04948%2012.1244%207.96806%2012.1944L3.85278%2015.7639C3.82866%2015.7855%203.79878%2015.7996%203.76679%2015.8044C3.7348%2015.8093%203.70208%2015.8048%203.67263%2015.7914C3.64317%2015.778%203.61826%2015.7563%203.60092%2015.729C3.58358%2015.7016%203.57458%2015.6699%203.575%2015.6375V4.45972C3.57501%204.42551%203.58555%204.39213%203.60519%204.36412C3.62483%204.3361%203.65261%204.31481%203.68477%204.30313C3.71693%204.29145%203.7519%204.28995%203.78494%204.29883C3.81797%204.30772%203.84748%204.32655%203.86944%204.35278L16.3069%2019.2458C16.507%2019.4821%2016.7562%2019.6719%2017.037%2019.8022C17.3179%2019.9324%2017.6237%2019.9999%2017.9333%2020H18.3681C18.648%2020.0002%2018.9252%2019.9452%2019.1838%2019.8382C19.4425%2019.7312%2019.6775%2019.5743%2019.8755%2019.3765C20.0735%2019.1786%2020.2305%2018.9437%2020.3377%2018.6851C20.4448%2018.4265%2020.5%2018.1494%2020.5%2017.8694V2.13056C20.5%201.5655%2020.2755%201.02358%2019.876%200.624025C19.4764%200.224469%2018.9345%207.36094e-08%2018.3694%207.36094e-08C18.0051%20-9.56524e-05%2017.6468%200.093176%2017.3288%200.270914C17.0108%200.448651%2016.7436%200.704924%2016.5528%201.01528Z%22%20fill%3D%22%2311181C%22%2F%3E%3C%2Fsvg%3E\"\n              alt=\"Near Explorer\"\n            />\n            <span className=\"text-tiny text-center rounded bg-warning-light text-warning-dark absolute p-1 px-1.5  bottom-2\">\n              Legacy Near Explorer was discontinued. <br />\n              See{' '}\n              <a\n                className=\"underline\"\n                href=\"https://pages.near.org/blog/an-update-on-near-ecosystem-block-explorers/\"\n              >\n                blog post\n              </a>{' '}\n              .\n            </span>\n          </a>\n        </div>\n      </div>\n    </Theme>\n  );\n}\n\nreturn MainComponent(props, context);", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/nearblocks.near/widget/bos-components.components.ExplorerSelector", "fact_widget_deployments_id": "31bccdbbe6556cb52d88a2aa06f6599a", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 13}