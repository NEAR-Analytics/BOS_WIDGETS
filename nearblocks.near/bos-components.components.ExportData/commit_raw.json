{"tx_hash": "wCjJaPRMc1wML37Fazch2HcydH64WC4fgr43KwVKzAw", "action_id_social": "6XSqrZUT56NVrkWmAZvJpVv9BUQo6ZGmxj8VQ2wyXixQ-0-widget", "block_id": 112949153, "block_timestamp": "2024-02-16T12:08:26.199Z", "signer_id": "nearblocks.near", "widget_name": "bos-components.components.ExportData", "source_code": "/**\n * Component: AddressTransactions\n * Author: Nearblocks Pte Ltd\n * License: Business Source License 1.1\n * Description: Transactions of address on Near Protocol.\n * @interface Props\n * @param {string}  [network] - The network data to show, either mainnet or testnet.\n * @param {string} [id] - The account identifier passed as a string.\n */\n\n/* INCLUDE: \"includes/libs.jsx\" */\nfunction getConfig(network) {\n  switch (network) {\n    case 'mainnet':\n      return {\n        ownerId: 'nearblocks.near',\n        nodeUrl: 'https://rpc.mainnet.near.org',\n        backendUrl: 'https://api3.nearblocks.io/v1/',\n        rpcUrl: 'https://archival-rpc.testnet.near.org',\n        appUrl: 'https://nearblocks.io/',\n      };\n    case 'testnet':\n      return {\n        ownerId: 'nearblocks.testnet',\n        nodeUrl: 'https://rpc.testnet.near.org',\n        backendUrl: 'https://api3-testnet.nearblocks.io/v1/',\n        rpcUrl: 'https://archival-rpc.testnet.near.org',\n        appUrl: 'https://testnet.nearblocks.io/',\n      };\n    default:\n      return {};\n  }\n}\n\nfunction debounce(\n  delay,\n  func,\n) {\n  let timer;\n  let active = true;\n  const debounced = (arg) => {\n    if (active) {\n      clearTimeout(timer);\n      timer = setTimeout(() => {\n        active && func(arg);\n        timer = undefined;\n      }, delay);\n    } else {\n      func(arg);\n    }\n  };\n\n  debounced.isPending = () => {\n    return timer !== undefined;\n  };\n\n  debounced.cancel = () => {\n    active = false;\n  };\n\n  debounced.flush = (arg) => func(arg);\n\n  return debounced;\n}\n\nfunction timeAgo(unixTimestamp) {\n  const currentTimestamp = Math.floor(Date.now() / 1000);\n  const secondsAgo = currentTimestamp - unixTimestamp;\n\n  if (secondsAgo < 5) {\n    return 'Just now';\n  } else if (secondsAgo < 60) {\n    return `${secondsAgo} seconds ago`;\n  } else if (secondsAgo < 3600) {\n    const minutesAgo = Math.floor(secondsAgo / 60);\n    return `${minutesAgo} minute${minutesAgo > 1 ? 's' : ''} ago`;\n  } else if (secondsAgo < 86400) {\n    const hoursAgo = Math.floor(secondsAgo / 3600);\n    return `${hoursAgo} hour${hoursAgo > 1 ? 's' : ''} ago`;\n  } else {\n    const daysAgo = Math.floor(secondsAgo / 86400);\n    return `${daysAgo} day${daysAgo > 1 ? 's' : ''} ago`;\n  }\n}\n\nfunction shortenAddress(address) {\n  const string = String(address);\n\n  if (string.length <= 20) return string;\n\n  return `${string.substr(0, 10)}...${string.substr(-7)}`;\n}\n\nfunction urlHostName(url) {\n  try {\n    const domain = new URL(url);\n    return domain?.hostname ?? null;\n  } catch (e) {\n    return null;\n  }\n}\n\nfunction holderPercentage(supply, quantity) {\n  return Math.min(Big(quantity).div(Big(supply)).mul(Big(100)).toFixed(2), 100);\n}\n\nfunction isAction(type) {\n  const actions = [\n    'DEPLOY_CONTRACT',\n    'TRANSFER',\n    'STAKE',\n    'ADD_KEY',\n    'DELETE_KEY',\n    'DELETE_ACCOUNT',\n  ];\n\n  return actions.includes(type.toUpperCase());\n}\nfunction localFormat(number) {\n  const bigNumber = Big(number);\n  const formattedNumber = bigNumber\n    .toFixed(5)\n    .replace(/(\\d)(?=(\\d{3})+\\.)/g, '$1,'); // Add commas before the decimal point\n  return formattedNumber.replace(/\\.?0*$/, ''); // Remove trailing zeros and the dot\n}\nfunction formatWithCommas(number) {\n  return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n}\n/* END_INCLUDE: \"includes/libs.jsx\" */\n\n\n\n\n\n\nconst today = new Date();\nconst startOfCurrentMonth = new Date(\n  Date.UTC(today.getFullYear(), today.getMonth(), 1),\n);\nconst endOfCurrentMonth = new Date(\n  Date.UTC(today.getFullYear(), today.getMonth() + 1, 0),\n);\n\nconst formattedStart = startOfCurrentMonth.toISOString().split('T')[0];\nconst formattedEnd = endOfCurrentMonth.toISOString().split('T')[0];\n\nconst initial = {\n  start: formattedStart,\n  end: formattedEnd,\n};\n\nfunction MainComponent({ network, id }) {\n  const [loading, setLoading] = useState(false);\n  const [startDate, setStartDate] = useState(initial.start);\n  const [endDate, setEndDate] = useState(initial.end);\n  const [exportData, setExportData] = useState('');\n\n  const config = getConfig(network);\n\n  const onDownload = () => {\n    try {\n      setLoading(true);\n\n      asyncFetch(\n        `${config?.backendUrl}account/${id}/txns/export?start=${startDate}&end=${endDate}`,\n        {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n        },\n      )\n        .then((resp) => {\n          if (resp.status === 200) {\n            const blob = new Blob([resp.body], { type: 'text/csv' });\n            const href = URL.createObjectURL(blob);\n            setExportData(href);\n          }\n        })\n        .catch((error) => {\n          console.log(error);\n        })\n        .finally(() => {\n          setLoading(false);\n        });\n    } catch (error) {\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const file = `${id}_transactions_${startDate}_${endDate}.csv`;\n\n  const handleStartDateChange = (\n    event,\n  ) => {\n    const selectedStartDate = event.target.value;\n\n    setStartDate(selectedStartDate);\n  };\n\n  const handleEndDateChange = (\n    event,\n  ) => {\n    const selectedEndDate = event.target.value;\n\n    setEndDate(selectedEndDate);\n  };\n\n  return (\n    <>\n      <div className=\"bg-neargray-25 py-16 flex flex-col items-center\">\n        <h2 className=\"text-black text-2xl font-medium\">\n          Download Data (Transactions)\n        </h2>\n        <div className=\"text-sm text-neargray-600 py-2 max-w-lg md:mx-12 mx-4\">\n          <p className=\"text-center\">\n            The information you requested can be downloaded from this page.\n            Before continuing please verify that you are not a robot by\n            completing the captcha below.\n          </p>\n          <div className=\"bg-white border rounded-md shadow-md w-full px-4 py-4 my-10\">\n            <p className=\"text-nearblue-600 my-3 mx-2\">\n              Export the earliest 5000 records starting from\n            </p>\n\n            <div className=\"lg:flex justify-between items-center text-center\">\n              <Tooltip.Provider>\n                <Tooltip.Root>\n                  <Tooltip.Trigger asChild>\n                    <div className=\"flex items-center border-gray-300 rounded-md text-center px-2 py-2 w-11/12 mx-2\">\n                      <input\n                        type=\"date\"\n                        name=\"startdate\"\n                        id=\"startdate\"\n                        className=\"border flex items-center  border-gray-300 rounded-md px-2 py-2 w-11/12 mx-2 focus:outline-none text-center\"\n                        defaultValue={initial.start}\n                        onChange={handleStartDateChange}\n                      />\n                    </div>\n                  </Tooltip.Trigger>\n                  <Tooltip.Content\n                    className=\"-mt-20 h-auto max-w-xs bg-black bg-opacity-90 z-10 text-white text-xs p-2\"\n                    align=\"start\"\n                    side=\"bottom\"\n                  >\n                    Select Start Date\n                  </Tooltip.Content>\n                </Tooltip.Root>\n              </Tooltip.Provider>\n              <p className=\"text-center\">To</p>\n              <Tooltip.Provider>\n                <Tooltip.Root>\n                  <Tooltip.Trigger asChild>\n                    <div className=\"flex items-center  border-gray-300 rounded-md text-center px-2 py-2 w-11/12 mx-2\">\n                      <input\n                        type=\"date\"\n                        name=\"enddate\"\n                        id=\"enddate\"\n                        className=\"border flex items-center  border-gray-300 rounded-md px-2 py-2 w-11/12 mx-2 focus:outline-none text-center\"\n                        defaultValue={initial.end}\n                        onChange={handleEndDateChange}\n                      />\n                    </div>\n                  </Tooltip.Trigger>\n                  <Tooltip.Content\n                    className=\"-mt-20 h-auto max-w-xs bg-black bg-opacity-90 z-10 text-white text-xs p-2\"\n                    align=\"start\"\n                    side=\"bottom\"\n                  >\n                    Select End Date\n                  </Tooltip.Content>\n                </Tooltip.Root>\n              </Tooltip.Provider>\n            </div>\n            <div className=\"w-full flex justify-center my-4\"></div>\n            <div className=\"w-full flex justify-center my-4\">\n              <div\n                onClick={onDownload}\n                className={`items-center cursor-pointer ${\n                  loading && 'animate-pulse cursor-not-allowed'\n                }  text-center bg-green-500 hover:shadow-lg  text-white text-xs py-2 rounded w-20 focus:outline-none`}\n              >\n                Generate\n              </div>\n              {exportData && (\n                <div\n                  className={`items-center cursor-pointer ${\n                    loading && 'animate-pulse cursor-not-allowed'\n                  }  text-center bg-green-500 hover:shadow-lg  text-white text-xs py-2 ml-2 rounded w-20 focus:outline-none hover:no-underline`}\n                >\n                  <a\n                    href={`${exportData}`}\n                    download={file}\n                    className=\"hover:no-underline\"\n                  >\n                    Download\n                  </a>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nreturn MainComponent(props, context);", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/nearblocks.near/widget/bos-components.components.ExportData", "fact_widget_deployments_id": "64c126b81e835ccdfcd373111b048371", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 7}