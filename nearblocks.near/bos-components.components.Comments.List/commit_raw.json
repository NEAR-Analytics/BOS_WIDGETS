{"tx_hash": "CWiiGg8QjUctQ8Yvd9QD4K18vmawc547RAUqMb4UsSXt", "action_id_social": "xA1ezL8E2f2ecGuC7RfuTFTGtgpZ74jWQwneoNEWg1B-0-widget", "block_id": 114163779, "block_timestamp": "2024-03-05T21:08:24.867Z", "signer_id": "nearblocks.near", "widget_name": "bos-components.components.Comments.List", "source_code": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction MainComponent(props) {\n  const [cachedItems, setCachedItems] = useState({});\n  const [fetchFrom, setFetchFrom] = useState(false);\n  const [nextFetchFrom, setNextFetchFrom] = useState(0);\n  const [displayCount, setDisplayCount] = useState(0);\n  const [initialNextFetchFrom, setInitialNextFetchFrom] = useState(0);\n  const [items, setItems] = useState([]);\n\n  const index = JSON.parse(JSON.stringify(props.index));\n  if (!index) {\n    return 'props.index is not defined';\n  }\n\n  const renderItem =\n    props.renderItem ??\n    ((item, _i) => (\n      <div key={JSON.stringify(item)}>\n        #{item.blockHeight}: {JSON.stringify(item)}\n      </div>\n    ));\n  const cachedRenderItem = (item, i) => {\n    const key = JSON.stringify(item);\n    if (!(key in cachedItems)) {\n      const updatedCachedItems = { ...cachedItems };\n      updatedCachedItems[key] = renderItem(item, i);\n      setCachedItems(updatedCachedItems);\n    }\n    return cachedItems[key];\n  };\n\n  index.options = index.options || {};\n  const initialRenderLimit = index.options.limit ?? 10;\n  const addDisplayCount = props.nextLimit ?? initialRenderLimit;\n\n  index.options.limit = Math.min(\n    Math.max(\n      initialRenderLimit + addDisplayCount * 2,\n      index.options.limit ?? 0,\n    ),\n    100,\n  );\n\n  const initialItems = Social.index(index.action, index.key, index.options);\n  if (initialItems === null) {\n    return '';\n  }\n\n  const computeFetchFrom = (items, limit) => {\n    if (!items || items.length < limit) {\n      return false;\n    }\n    const blockHeight = items[items.length - 1].blockHeight;\n    return index.options.order === 'desc' ? blockHeight - 1 : blockHeight + 1;\n  };\n\n  const mergeItems = (newItems) => {\n    const Items = [\n      ...new Set([...newItems, ...items].map((i) => JSON.stringify(i))),\n    ].map((i) => JSON.parse(i));\n    Items.sort((a, b) => a.blockHeight - b.blockHeight);\n    if (index.options.order === 'desc') {\n      Items.reverse();\n    }\n    return Items;\n  };\n\n  if (!fetchFrom) {\n    const nextFetchFrom = computeFetchFrom(initialItems, index.options.limit);\n    if (nextFetchFrom !== initialNextFetchFrom) {\n      setFetchFrom(false);\n      setNextFetchFrom(nextFetchFrom);\n      setDisplayCount(initialRenderLimit);\n      setInitialNextFetchFrom(nextFetchFrom);\n      setItems(initialItems);\n    } else {\n      setItems(mergeItems(initialItems));\n    }\n  }\n\n  if (fetchFrom) {\n    const limit = addDisplayCount;\n    const newItems = Social.index(\n      index.action,\n      index.key,\n      Object.assign({}, index.options, {\n        from: fetchFrom,\n        subscribe: undefined,\n        limit,\n      }),\n    );\n    if (newItems !== null) {\n      setFetchFrom(false);\n      setNextFetchFrom(computeFetchFrom(newItems, limit));\n      setItems(mergeItems(newItems));\n    }\n  }\n\n  const filteredItems = items;\n\n  const maybeFetchMore = () => {\n    if (\n      filteredItems.length - displayCount < addDisplayCount * 2 &&\n      !fetchFrom &&\n      nextFetchFrom &&\n      nextFetchFrom !== fetchFrom\n    ) {\n      setFetchFrom(nextFetchFrom);\n    }\n  };\n\n  maybeFetchMore();\n\n  const makeMoreItems = () => {\n    setDisplayCount(displayCount + addDisplayCount);\n  };\n\n  const loader = (\n    <div className=\"loader\" key={'loader'}>\n      <span\n        className=\"spinner-grow spinner-grow-sm me-1\"\n        role=\"status\"\n        aria-hidden=\"true\"\n      />\n      Loading ...\n    </div>\n  );\n  const fetchMore =\n    fetchFrom && filteredItems.length < displayCount\n      ? loader\n      : displayCount < filteredItems.length && (\n          <div key={'loader more'}>\n            <a\n              className=\"\"\n              style={{ cursor: 'pointer' }}\n              onClick={(e) => {\n                e.preventDefault && e.preventDefault();\n                makeMoreItems();\n              }}\n            >\n              {props.loadMoreText ?? 'Load more...'}\n            </a>\n          </div>\n        );\n\n  const Items = filteredItems ? filteredItems.slice(0, displayCount) : [];\n\n  const renderedItems = Items.map(cachedRenderItem);\n  return (\n    <>\n      {renderedItems.length > 0 ? (\n        <>\n          {renderedItems}\n          <div className=\"inline-flex justify-center p-2 text-green-500 rounded-full cursor-pointer\">\n            {fetchMore}\n          </div>\n        </>\n      ) : (\n        <p className=\"px-6 py-4 text-gray-400 text-lg\">No comments</p>\n      )}\n    </>\n  );\n}\n\nreturn MainComponent(props, context);", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/nearblocks.near/widget/bos-components.components.Comments.List", "fact_widget_deployments_id": "a98f36dd3dad9563cee8af96e82468e8", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 2}