{"tx_hash": "CK8S1wV8tiGeCvf6QMBz6KQhUWyWpRToTCR6acBGH835", "action_id_social": "HgMs1qV5cs8tqAiEK7urjK9T4UGv4S74N6iKvw7heJzf-0-widget", "block_id": 114606702, "block_timestamp": "2024-03-13T04:30:54.308Z", "signer_id": "nearblocks.near", "widget_name": "bos-components.components.Transactions.ReceiptKind", "source_code": "/**\n * Component: TransactionsReceiptKind\n * Author: Nearblocks Pte Ltd\n * License: Business Source License 1.1\n * Description: Details of Transaction Receipt Kind on Near Protocol.\n */\n\n/* INCLUDE: \"includes/libs.jsx\" */\nfunction getConfig(network) {\n  switch (network) {\n    case 'mainnet':\n      return {\n        ownerId: 'nearblocks.near',\n        nodeUrl: 'https://rpc.mainnet.near.org',\n        backendUrl: 'https://api3.nearblocks.io/v1/',\n        rpcUrl: 'https://archival-rpc.mainnet.near.org',\n        appUrl: 'https://nearblocks.io/',\n      };\n    case 'testnet':\n      return {\n        ownerId: 'nearblocks.testnet',\n        nodeUrl: 'https://rpc.testnet.near.org',\n        backendUrl: 'https://api3-testnet.nearblocks.io/v1/',\n        rpcUrl: 'https://archival-rpc.testnet.near.org',\n        appUrl: 'https://testnet.nearblocks.io/',\n      };\n    default:\n      return {};\n  }\n}\n\nfunction debounce(\n  delay,\n  func,\n) {\n  let timer;\n  let active = true;\n  const debounced = (arg) => {\n    if (active) {\n      clearTimeout(timer);\n      timer = setTimeout(() => {\n        active && func(arg);\n        timer = undefined;\n      }, delay);\n    } else {\n      func(arg);\n    }\n  };\n\n  debounced.isPending = () => {\n    return timer !== undefined;\n  };\n\n  debounced.cancel = () => {\n    active = false;\n  };\n\n  debounced.flush = (arg) => func(arg);\n\n  return debounced;\n}\n\nfunction timeAgo(unixTimestamp) {\n  const currentTimestamp = Math.floor(Date.now() / 1000);\n  const secondsAgo = currentTimestamp - unixTimestamp;\n\n  if (secondsAgo < 5) {\n    return 'Just now';\n  } else if (secondsAgo < 60) {\n    return `${secondsAgo} seconds ago`;\n  } else if (secondsAgo < 3600) {\n    const minutesAgo = Math.floor(secondsAgo / 60);\n    return `${minutesAgo} minute${minutesAgo > 1 ? 's' : ''} ago`;\n  } else if (secondsAgo < 86400) {\n    const hoursAgo = Math.floor(secondsAgo / 3600);\n    return `${hoursAgo} hour${hoursAgo > 1 ? 's' : ''} ago`;\n  } else {\n    const daysAgo = Math.floor(secondsAgo / 86400);\n    return `${daysAgo} day${daysAgo > 1 ? 's' : ''} ago`;\n  }\n}\n\nfunction shortenAddress(address) {\n  const string = String(address);\n\n  if (string.length <= 20) return string;\n\n  return `${string.substr(0, 10)}...${string.substr(-7)}`;\n}\n\nfunction urlHostName(url) {\n  try {\n    const domain = new URL(url);\n    return domain?.hostname ?? null;\n  } catch (e) {\n    return null;\n  }\n}\n\nfunction holderPercentage(supply, quantity) {\n  return Math.min(Big(quantity).div(Big(supply)).mul(Big(100)).toFixed(2), 100);\n}\n\nfunction isAction(type) {\n  const actions = [\n    'DEPLOY_CONTRACT',\n    'TRANSFER',\n    'STAKE',\n    'ADD_KEY',\n    'DELETE_KEY',\n    'DELETE_ACCOUNT',\n  ];\n\n  return actions.includes(type.toUpperCase());\n}\n\nfunction isJson(string) {\n  const str = string.replace(/\\\\/g, '');\n\n  try {\n    JSON.parse(str);\n    return false;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction uniqueId() {\n  return Math.floor(Math.random() * 1000);\n}\nfunction handleRateLimit(\n  data,\n  reFetch,\n  Loading,\n) {\n  if (data.status === 429 || data.status === undefined) {\n    const retryCount = 4;\n    const delay = Math.pow(2, retryCount) * 1000;\n    setTimeout(() => {\n      reFetch();\n    }, delay);\n  } else {\n    if (Loading) {\n      Loading();\n    }\n  }\n}\nfunction localFormat(number) {\n  const bigNumber = Big(number);\n  const formattedNumber = bigNumber\n    .toFixed(5)\n    .replace(/(\\d)(?=(\\d{3})+\\.)/g, '$1,'); // Add commas before the decimal point\n  return formattedNumber.replace(/\\.?0*$/, ''); // Remove trailing zeros and the dot\n}\nfunction formatWithCommas(number) {\n  return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n}\nfunction yoctoToNear(yocto, format) {\n  const YOCTO_PER_NEAR = Big(10).pow(24).toString();\n\n  const near = Big(yocto).div(YOCTO_PER_NEAR).toString();\n\n  return format ? localFormat(near) : near;\n}\n\nfunction fiatValue(big, price) {\n  const value = Big(big).mul(Big(price));\n  const stringValue = value.toFixed(6); // Set the desired maximum fraction digits\n\n  const [integerPart, fractionalPart] = stringValue.split('.');\n\n  // Format integer part with commas\n  const formattedIntegerPart = integerPart.replace(\n    /\\B(?=(\\d{3})+(?!\\d))/g,\n    ',',\n  );\n\n  // Combine formatted integer and fractional parts\n  const formattedNumber = fractionalPart\n    ? `${formattedIntegerPart}.${fractionalPart}`\n    : formattedIntegerPart;\n\n  return formattedNumber;\n}\n\nfunction nanoToMilli(nano) {\n  return Big(nano).div(Big(10).pow(6)).round().toNumber();\n}\n\nfunction truncateString(str, maxLength, suffix) {\n  if (str.length <= maxLength) {\n    return str;\n  }\n  return str.substring(0, maxLength) + suffix;\n}\n\nfunction getConfig(network) {\n  switch (network) {\n    case 'mainnet':\n      return {\n        ownerId: 'nearblocks.near',\n        nodeUrl: 'https://rpc.mainnet.near.org',\n        backendUrl: 'https://api3.nearblocks.io/v1/',\n        rpcUrl: 'https://archival-rpc.mainnet.near.org',\n        appUrl: 'https://nearblocks.io/',\n      };\n    case 'testnet':\n      return {\n        ownerId: 'nearblocks.testnet',\n        nodeUrl: 'https://rpc.testnet.near.org',\n        backendUrl: 'https://api3-testnet.nearblocks.io/v1/',\n        rpcUrl: 'https://archival-rpc.testnet.near.org',\n        appUrl: 'https://testnet.nearblocks.io/',\n      };\n    default:\n      return {};\n  }\n}\n\nfunction debounce(\n  delay,\n  func,\n) {\n  let timer;\n  let active = true;\n  const debounced = (arg) => {\n    if (active) {\n      clearTimeout(timer);\n      timer = setTimeout(() => {\n        active && func(arg);\n        timer = undefined;\n      }, delay);\n    } else {\n      func(arg);\n    }\n  };\n\n  debounced.isPending = () => {\n    return timer !== undefined;\n  };\n\n  debounced.cancel = () => {\n    active = false;\n  };\n\n  debounced.flush = (arg) => func(arg);\n\n  return debounced;\n}\n\nfunction timeAgo(unixTimestamp) {\n  const currentTimestamp = Math.floor(Date.now() / 1000);\n  const secondsAgo = currentTimestamp - unixTimestamp;\n\n  if (secondsAgo < 5) {\n    return 'Just now';\n  } else if (secondsAgo < 60) {\n    return `${secondsAgo} seconds ago`;\n  } else if (secondsAgo < 3600) {\n    const minutesAgo = Math.floor(secondsAgo / 60);\n    return `${minutesAgo} minute${minutesAgo > 1 ? 's' : ''} ago`;\n  } else if (secondsAgo < 86400) {\n    const hoursAgo = Math.floor(secondsAgo / 3600);\n    return `${hoursAgo} hour${hoursAgo > 1 ? 's' : ''} ago`;\n  } else {\n    const daysAgo = Math.floor(secondsAgo / 86400);\n    return `${daysAgo} day${daysAgo > 1 ? 's' : ''} ago`;\n  }\n}\n\nfunction shortenAddress(address) {\n  const string = String(address);\n\n  if (string.length <= 20) return string;\n\n  return `${string.substr(0, 10)}...${string.substr(-7)}`;\n}\n\nfunction urlHostName(url) {\n  try {\n    const domain = new URL(url);\n    return domain?.hostname ?? null;\n  } catch (e) {\n    return null;\n  }\n}\n\nfunction holderPercentage(supply, quantity) {\n  return Math.min(Big(quantity).div(Big(supply)).mul(Big(100)).toFixed(2), 100);\n}\n\nfunction isAction(type) {\n  const actions = [\n    'DEPLOY_CONTRACT',\n    'TRANSFER',\n    'STAKE',\n    'ADD_KEY',\n    'DELETE_KEY',\n    'DELETE_ACCOUNT',\n  ];\n\n  return actions.includes(type.toUpperCase());\n}\n\nfunction isJson(string) {\n  const str = string.replace(/\\\\/g, '');\n\n  try {\n    JSON.parse(str);\n    return false;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction uniqueId() {\n  return Math.floor(Math.random() * 1000);\n}\nfunction handleRateLimit(\n  data,\n  reFetch,\n  Loading,\n) {\n  if (data.status === 429 || data.status === undefined) {\n    const retryCount = 4;\n    const delay = Math.pow(2, retryCount) * 1000;\n    setTimeout(() => {\n      reFetch();\n    }, delay);\n  } else {\n    if (Loading) {\n      Loading();\n    }\n  }\n}\nfunction localFormat(number) {\n  const bigNumber = Big(number);\n  const formattedNumber = bigNumber\n    .toFixed(5)\n    .replace(/(\\d)(?=(\\d{3})+\\.)/g, '$1,'); // Add commas before the decimal point\n  return formattedNumber.replace(/\\.?0*$/, ''); // Remove trailing zeros and the dot\n}\nfunction formatWithCommas(number) {\n  return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n}\nfunction localFormat(number) {\n  const bigNumber = Big(number);\n  const formattedNumber = bigNumber\n    .toFixed(5)\n    .replace(/(\\d)(?=(\\d{3})+\\.)/g, '$1,'); // Add commas before the decimal point\n  return formattedNumber.replace(/\\.?0*$/, ''); // Remove trailing zeros and the dot\n}\nfunction formatWithCommas(number) {\n  return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n}\n/* END_INCLUDE: \"includes/libs.jsx\" */\n\n\nconst backgroundColorClasses = {\n  transfer: 'bg-green-50',\n  stake: 'bg-cyan-50',\n  deployContract: 'bg-orange-50',\n  addKey: 'bg-indigo-50',\n  deleteKey: 'bg-red-50',\n  functionCall: 'bg-blue-50',\n  createAccount: 'bg-fuchsia-100',\n  deleteAccount: 'bg-red-50',\n  delegateAction: 'bg-blue-50',\n};\n\nfunction MainComponent(props) {\n  const { network, t, action, onClick, isTxTypeActive } = props;\n\n  const config = getConfig(network);\n\n  const args = action.args.args;\n  const decodedArgs = args ? Buffer.from(args, 'base64') : null;\n\n  let prettyArgs;\n  try {\n    if (decodedArgs) {\n      const parsedJSONArgs = JSON.parse(decodedArgs.toString());\n      prettyArgs =\n        typeof parsedJSONArgs === 'boolean'\n          ? JSON.stringify(parsedJSONArgs)\n          : parsedJSONArgs;\n    } else {\n      prettyArgs = '';\n    }\n  } catch {\n    prettyArgs = Array.from(decodedArgs || [])\n      .map((byte) => byte.toString(16).padStart(2, '0'))\n      .join('');\n  }\n  return (\n    <div className=\"py-2.5\">\n      <div\n        className={`p-2 mr-3 min-h-25 rounded-md inline-flex items-center justify-center text-base leading-5 cursor-pointer \n        transition-all ease-in-out  \n        ${backgroundColorClasses[action.kind] || ''}`}\n        onClick={onClick}\n        role=\"button\"\n        tabIndex={0}\n      >\n        {action?.kind !== 'functionCall' && t(`txns:${action?.kind}`)}\n        {action?.kind === 'functionCall' ? (\n          <div className=\"inline-flex text-sm\">{`'${action?.args?.methodName}'`}</div>\n        ) : null}\n        {onClick ? (\n          <div className=\"ml-2\">{isTxTypeActive ? '-' : '+'}</div>\n        ) : null}\n      </div>\n      {action?.kind === 'transfer' ? (\n        <div className=\"inline-flex\">\n          <span className=\"text-xs\">\n            {action?.args?.deposit\n              ? yoctoToNear(action?.args?.deposit, false)\n              : action?.args?.deposit ?? ''}\n            \u24c3\n          </span>\n        </div>\n      ) : null}\n      {isTxTypeActive ? (\n        action?.kind === 'functionCall' ? (\n          <div className=\"py-2 ml-6\">\n            {prettyArgs && typeof prettyArgs === 'object' ? (\n              <textarea\n                readOnly\n                rows={4}\n                defaultValue={JSON.stringify(prettyArgs)}\n                className=\"block appearance-none outline-none w-full border rounded-lg bg-gray-100 p-3 my-3 resize-y\"\n              ></textarea>\n            ) : (\n              <div>\n                <div className=\"bg-gray-100 rounded-md p-3 font-semibold my-3\">\n                  <div className=\"bg-inherit text-inherit font-inherit text-base border-none p-0\">\n                    <div className=\"max-h-52 overflow-auto\">\n                      <div className=\"p-4 h-full w-full\">{prettyArgs}</div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n        ) : action?.kind === 'delegateAction' ? (\n          <div className=\"py-2 ml-6\">\n            {action?.args?.senderId}\n            {[...action.args.actions]\n              .sort(\n                (actionA, actionB) =>\n                  actionA.delegateIndex - actionB.delegateIndex,\n              )\n              .map((subaction) => (\n                <Widget\n                  key={subaction.delegateIndex}\n                  src={`${config.ownerId}/widget/bos-components.components.Transactions.ReceiptKind`}\n                  props={{\n                    network: network,\n                    t: t,\n                    action: action,\n                    isTxTypeActive: true,\n                  }}\n                />\n              ))}\n          </div>\n        ) : null\n      ) : null}\n    </div>\n  );\n}\n\nreturn MainComponent(props, context);", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/nearblocks.near/widget/bos-components.components.Transactions.ReceiptKind", "fact_widget_deployments_id": "047da4b73570f745a42213e4070fe088", "inserted_timestamp": "2024-03-13T05:25:41.389Z", "modified_timestamp": "2024-03-13T06:27:24.035Z", "__row_index": 0}