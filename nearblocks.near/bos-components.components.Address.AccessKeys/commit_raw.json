{"tx_hash": "3oZ3J1VTZBPaFwCfk7TeKKSb8WqRCyfCcuDajtNyQ4CK", "action_id_social": "HiYuetVXkHmGP9MazrEDsgJMGyTi3sYxVSt1NFWLEFK-0-widget", "block_id": 112660999, "block_timestamp": "2024-02-12T06:12:24.992Z", "signer_id": "nearblocks.near", "widget_name": "bos-components.components.Address.AccessKeys", "source_code": "/**\n * Component: AddressAccessKeys\n * Author: Nearblocks Pte Ltd\n * License: Business Source License 1.1\n * Description: Table of Accesskey List.\n * @interface Props\n * @param {string} [network] - The network data to show, either mainnet or testnet\n * @param {Function} [t] - A function for internationalization (i18n) provided by the next-translate package.\n * @param {string} [id] - The account identifier passed as a string.\n */\n\n\n\n\n\n\n\n\n/* INCLUDE: \"includes/libs.jsx\" */\nfunction getConfig(network) {\n  switch (network) {\n    case 'mainnet':\n      return {\n        ownerId: 'nearblocks.near',\n        nodeUrl: 'https://rpc.mainnet.near.org',\n        backendUrl: 'https://api3.nearblocks.io/v1/',\n        rpcUrl: 'https://archival-rpc.testnet.near.org',\n        appUrl: 'https://nearblocks.io/',\n      };\n    case 'testnet':\n      return {\n        ownerId: 'nearblocks.testnet',\n        nodeUrl: 'https://rpc.testnet.near.org',\n        backendUrl: 'https://api3-testnet.nearblocks.io/v1/',\n        rpcUrl: 'https://archival-rpc.testnet.near.org',\n        appUrl: 'https://testnet.nearblocks.io/',\n      };\n    default:\n      return {};\n  }\n}\n\nfunction debounce(\n  delay,\n  func,\n) {\n  let timer;\n  let active = true;\n  const debounced = (arg) => {\n    if (active) {\n      clearTimeout(timer);\n      timer = setTimeout(() => {\n        active && func(arg);\n        timer = undefined;\n      }, delay);\n    } else {\n      func(arg);\n    }\n  };\n\n  debounced.isPending = () => {\n    return timer !== undefined;\n  };\n\n  debounced.cancel = () => {\n    active = false;\n  };\n\n  debounced.flush = (arg) => func(arg);\n\n  return debounced;\n}\n\nfunction timeAgo(unixTimestamp) {\n  const currentTimestamp = Math.floor(Date.now() / 1000);\n  const secondsAgo = currentTimestamp - unixTimestamp;\n\n  if (secondsAgo < 5) {\n    return 'Just now';\n  } else if (secondsAgo < 60) {\n    return `${secondsAgo} seconds ago`;\n  } else if (secondsAgo < 3600) {\n    const minutesAgo = Math.floor(secondsAgo / 60);\n    return `${minutesAgo} minute${minutesAgo > 1 ? 's' : ''} ago`;\n  } else if (secondsAgo < 86400) {\n    const hoursAgo = Math.floor(secondsAgo / 3600);\n    return `${hoursAgo} hour${hoursAgo > 1 ? 's' : ''} ago`;\n  } else {\n    const daysAgo = Math.floor(secondsAgo / 86400);\n    return `${daysAgo} day${daysAgo > 1 ? 's' : ''} ago`;\n  }\n}\n\nfunction shortenAddress(address) {\n  const string = String(address);\n\n  if (string.length <= 20) return string;\n\n  return `${string.substr(0, 10)}...${string.substr(-7)}`;\n}\n\nfunction urlHostName(url) {\n  try {\n    const domain = new URL(url);\n    return domain?.hostname ?? null;\n  } catch (e) {\n    return null;\n  }\n}\n\nfunction holderPercentage(supply, quantity) {\n  return Math.min(Big(quantity).div(Big(supply)).mul(Big(100)).toFixed(2), 100);\n}\n\nfunction isAction(type) {\n  const actions = [\n    'DEPLOY_CONTRACT',\n    'TRANSFER',\n    'STAKE',\n    'ADD_KEY',\n    'DELETE_KEY',\n    'DELETE_ACCOUNT',\n  ];\n\n  return actions.includes(type.toUpperCase());\n}\nfunction localFormat(number) {\n  const bigNumber = Big(number);\n  const formattedNumber = bigNumber\n    .toFixed(5)\n    .replace(/(\\d)(?=(\\d{3})+\\.)/g, '$1,'); // Add commas before the decimal point\n  return formattedNumber.replace(/\\.?0*$/, ''); // Remove trailing zeros and the dot\n}\nfunction formatWithCommas(number) {\n  return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n}\n/* END_INCLUDE: \"includes/libs.jsx\" */\n/* INCLUDE COMPONENT: \"includes/icons/SortIcon.jsx\" */\nconst ArrowUp = (props) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n      width={24}\n      height={24}\n      {...props}\n    >\n      <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n      <path d=\"M12 10.828l-4.95 4.95-1.414-1.414L12 8l6.364 6.364-1.414 1.414z\" />\n    </svg>\n  );\n};\n\nconst SortIcon = (props) => {\n  return (\n    <ArrowUp\n      className={`h-3 w-3 fill-current transition-transform mr-1 duration-700 ${\n        props.order !== 'asc' ? 'transform rotate-180' : 'transform rotate-0'\n      }`}\n    />\n  );\n};/* END_INCLUDE COMPONENT: \"includes/icons/SortIcon.jsx\" */\n/* INCLUDE COMPONENT: \"includes/Common/Skeleton.jsx\" */\n/**\n * @interface Props\n * @param {string} [className] - The CSS class name(s) for styling purposes.\n */\n\n\n\n\n\nconst Skeleton = (props) => {\n  return (\n    <div\n      className={`bg-gray-200  rounded shadow-sm animate-pulse ${props.className}`}\n    ></div>\n  );\n};/* END_INCLUDE COMPONENT: \"includes/Common/Skeleton.jsx\" */\n/* INCLUDE COMPONENT: \"includes/Common/Paginator.jsx\" */\nconst FaChevronLeft = () => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"16\"\n      height=\"16\"\n      fill=\"currentColor\"\n      className=\"bi bi-chevron-left\"\n      viewBox=\"0 0 16 16\"\n    >\n      <path\n        fillRule=\"evenodd\"\n        d=\"M11.354 1.646a.5.5 0 0 1 0 .708L5.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0z\"\n      />\n    </svg>\n  );\n};\nconst FaChevronRight = () => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"16\"\n      height=\"16\"\n      fill=\"currentColor\"\n      className=\"bi bi-chevron-right\"\n      viewBox=\"0 0 16 16\"\n    >\n      <path\n        fillRule=\"evenodd\"\n        d=\"M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z\"\n      />\n    </svg>\n  );\n};\n\n\n\n\n\n\n\n\nconst Paginator = (props) => {\n  let pages;\n  if (props.count) {\n    pages = Math.ceil(props.count / props.limit);\n  } else {\n    pages = 1;\n  }\n  pages = pages > props.pageLimit ? props.pageLimit : pages;\n  const onPrev = () => {\n    if (props.page <= 1) return null;\n\n    const newPage = (props.page || 1) - 1;\n    props.setPage(newPage);\n    return;\n  };\n  const onNext = () => {\n    if (props.page >= pages) return null;\n\n    const newPage = (props.page || 1) + 1;\n    props.setPage(newPage);\n    return;\n  };\n  const onFirst = () => props.setPage(1);\n  const onLast = () => props.setPage(pages);\n\n  return (\n    <div className=\"bg-white px-2 py-3 flex items-center justify-between border-t md:px-4\">\n      <div className=\"flex-1 flex items-center justify-between\">\n        <div></div>\n\n        <div>\n          <div\n            className=\"relative z-0 inline-flex rounded-md\"\n            aria-label=\"Pagination\"\n          >\n            <button\n              type=\"button\"\n              disabled={props.page <= 1 || pages === 1}\n              onClick={onFirst}\n              className={`relative inline-flex items-center px-2 ml-1 md:px-3 py-2  text-xs font-medium rounded-md ${\n                props.page <= 1\n                  ? 'text-gray-500'\n                  : 'text-green-400 hover:bg-green-400 hover:text-white'\n              } bg-gray-100`}\n            >\n              First\n            </button>\n            <button\n              type=\"button\"\n              disabled={props.page <= 1 || pages === 1}\n              onClick={onPrev}\n              className={`relative inline-flex items-center px-2 ml-1 md:px-3 py-2 font-medium ${\n                props.page <= 1\n                  ? 'text-gray-500'\n                  : 'text-green-400 hover:text-white hover:bg-green-400'\n              } rounded-md  bg-gray-100`}\n            >\n              <FaChevronLeft />\n            </button>\n            <button\n              type=\"button\"\n              disabled\n              className=\"relative inline-flex items-center px-2 ml-1 md:px-3 py-2 text-xs font-medium text-gray-500 rounded-md  bg-gray-100\"\n            >\n              Page {props.page} of {pages}\n            </button>\n            <button\n              type=\"button\"\n              disabled={props.page >= pages || pages === 1}\n              onClick={onNext}\n              className={`relative inline-flex items-center ml-1 px-2 md:px-3 py-2 rounded-md font-medium ${\n                props.page >= pages\n                  ? 'text-gray-500'\n                  : 'text-green-400 hover:text-white hover:bg-green-400'\n              }  bg-gray-100`}\n            >\n              <FaChevronRight />\n            </button>\n            <button\n              type=\"button\"\n              disabled={props.page >= pages || pages === 1}\n              onClick={onLast}\n              className={`relative inline-flex items-center px-2 ml-1 md:px-3 py-2 text-xs font-medium rounded-md ${\n                props.page >= pages\n                  ? 'text-gray-500'\n                  : 'text-green-400 hover:text-white hover:bg-green-400'\n              }  bg-gray-100 `}\n            >\n              Last\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};/* END_INCLUDE COMPONENT: \"includes/Common/Paginator.jsx\" */\n\nfunction MainComponent({ network, t, id }) {\n  const [isLoading, setIsLoading] = useState(false);\n  const [showWhen, setShowWhen] = useState(true);\n  const [sorting, setSorting] = useState('desc');\n  const [count, setCount] = useState(0);\n  const [keys, Setkeys] = useState([]);\n\n  const initialPage = 1;\n  const [currentPage, setCurrentPage] = useState(initialPage);\n\n  const config = getConfig(network);\n\n  const setPage = (pageNumber) => {\n    setCurrentPage(pageNumber);\n  };\n\n  useEffect(() => {\n    setCurrentPage(currentPage);\n  }, [currentPage]);\n\n  const toggleShowWhen = () => setShowWhen((s) => !s);\n\n  const onOrder = () => {\n    setSorting((state) => (state === 'asc' ? 'desc' : 'asc'));\n  };\n\n  useEffect(() => {\n    setIsLoading(true);\n    function fetchAccountData() {\n      asyncFetch(\n        `${config?.backendUrl}account/${id}/keys?order=${sorting}&page=${currentPage}&per_page=25`,\n      )\n        .then(\n          (data\n\n\n\n) => {\n            const resp = data?.body?.keys;\n            Setkeys(resp);\n          },\n        )\n        .catch(() => {})\n        .finally(() => {\n          setIsLoading(false);\n        });\n    }\n\n    function fetchCountData() {\n      setIsLoading(true);\n      asyncFetch(`${config?.backendUrl}account/${id}/keys/count`)\n        .then(\n          (data\n\n\n\n) => {\n            const resp = data?.body?.keys?.[0]?.count || 0;\n            setCount(resp);\n          },\n        )\n        .catch(() => {})\n        .finally(() => {\n          setIsLoading(false);\n        });\n    }\n    fetchAccountData();\n    fetchCountData();\n  }, [config?.backendUrl, id, currentPage, sorting]);\n\n  return (\n    <>\n      <div className=\"overflow-x-auto \">\n        <table className=\"min-w-full divide-y border-t\">\n          <thead className=\"bg-gray-100\">\n            <tr>\n              <th\n                scope=\"col\"\n                className=\"px-6 py-4 text-left text-xs font-semibold text-nearblue-600  uppercase tracking-wider\"\n              >\n                Txn Hash\n              </th>\n              <th\n                scope=\"col\"\n                className=\"px-6 py-4 text-left text-xs font-semibold text-nearblue-600  uppercase tracking-wider\"\n              >\n                Public key\n              </th>\n              <th\n                scope=\"col\"\n                className=\"px-6 py-4 text-left text-xs font-semibold text-nearblue-600  uppercase tracking-wider\"\n              >\n                Access\n              </th>\n              <th\n                scope=\"col\"\n                className=\"px-6 py-4 text-left text-xs font-semibold text-nearblue-600  uppercase tracking-wider\"\n              >\n                Contract\n              </th>\n              <th\n                scope=\"col\"\n                className=\"px-6 py-4 text-left text-xs font-semibold text-nearblue-600  uppercase tracking-wider\"\n              >\n                Method\n              </th>\n              <th\n                scope=\"col\"\n                className=\"px-6 py-4 text-left text-xs font-semibold text-nearblue-600  uppercase tracking-wider\"\n              >\n                Allowance\n              </th>\n              <th\n                scope=\"col\"\n                className=\"px-6 py-4 text-left text-xs font-semibold text-nearblue-600  uppercase tracking-wider\"\n              >\n                Action\n              </th>\n              <th scope=\"col\" className=\"text-left\">\n                <div className=\"w-full inline-flex px-5 py-4\">\n                  <button\n                    type=\"button\"\n                    onClick={toggleShowWhen}\n                    className=\"text-left text-xs w-full font-semibold uppercase tracking-wider text-nearblue-600 focus:outline-none\"\n                  >\n                    {showWhen ? 'When' : 'Date Time (UTC)'}\n                  </button>\n                  <button type=\"button\" onClick={onOrder} className=\"px-2\">\n                    <div className=\"text-nearblue-600  font-semibold\">\n                      <SortIcon order={sorting} />\n                    </div>\n                  </button>\n                </div>\n              </th>\n            </tr>\n          </thead>\n          <tbody className=\"bg-white divide-y divide-gray-200\">\n            {isLoading &&\n              [...Array(25)].map((_, i) => (\n                <tr key={i} className=\"hover:bg-blue-900/5 h-[57px]\">\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-nearblue-600 \">\n                    <Skeleton />\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-nearblue-600 \">\n                    <Skeleton />\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-nearblue-600 \">\n                    <Skeleton />\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-tiny \">\n                    <Skeleton />\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-nearblue-600 \">\n                    <Skeleton />\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-nearblue-600 \">\n                    <Skeleton />\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-nearblue-600 \">\n                    <Skeleton />\n                  </td>\n                </tr>\n              ))}\n            {!isLoading && keys.length === 0 && (\n              <tr className=\"h-[57px]\">\n                <td\n                  colSpan={100}\n                  className=\"px-6 py-4 text-nearblue-700 text-xs\"\n                >\n                  No access keys\n                </td>\n              </tr>\n            )}\n            {keys &&\n              keys.map((key) => (\n                <Widget\n                  key={key.account_id + key.public_key}\n                  src={`${config.ownerId}/widget/bos-components.components.Address.AccessKeyRow`}\n                  props={{\n                    network: network,\n                    t: t,\n                    accessKey: key,\n                    showWhen: showWhen,\n                  }}\n                />\n              ))}\n          </tbody>\n        </table>\n      </div>\n      <Paginator\n        count={count}\n        page={currentPage}\n        limit={25}\n        pageLimit={200}\n        setPage={setPage}\n      />\n    </>\n  );\n}\n\nreturn MainComponent(props, context);", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/nearblocks.near/widget/bos-components.components.Address.AccessKeys", "fact_widget_deployments_id": "f15de34cb6b12791c1e9bc3b726217ad", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 15}