{"tx_hash": "CMESTcMQ8GoUQjipqnCue9pkuC4Re5QuENbN3jn9zcrT", "action_id_social": "5SRd5JxTgDMrarDKqQQWEksuLi3LuZELsE9h2GGPwKGP-0-widget", "block_id": 114609289, "block_timestamp": "2024-03-13T05:28:19.502Z", "signer_id": "nearblocks.near", "widget_name": "bos-components.components.Transactions.TransactionReceipt", "source_code": "/**\n * Component: TransactionsReceipt\n * Author: Nearblocks Pte Ltd\n * License: Business Source License 1.1\n * Description: Details of Transaction Receipt on Near Protocol.\n */\n\n/* INCLUDE COMPONENT: \"includes/icons/ArrowDown.jsx\" */\n/**\n * @interface Props\n * @param {string} [className] - The CSS class name(s) for styling purposes.\n */\n\n\n\n\nconst ArrowDown = (props) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n      width={24}\n      height={24}\n      {...props}\n    >\n      <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n      <path d=\"M12 13.172l4.95-4.95 1.414 1.414L12 16 5.636 9.636 7.05 8.222z\" />\n    </svg>\n  );\n};/* END_INCLUDE COMPONENT: \"includes/icons/ArrowDown.jsx\" */\n/* INCLUDE: \"includes/libs.jsx\" */\nfunction getConfig(network) {\n  switch (network) {\n    case 'mainnet':\n      return {\n        ownerId: 'nearblocks.near',\n        nodeUrl: 'https://rpc.mainnet.near.org',\n        backendUrl: 'https://api3.nearblocks.io/v1/',\n        rpcUrl: 'https://archival-rpc.mainnet.near.org',\n        appUrl: 'https://nearblocks.io/',\n      };\n    case 'testnet':\n      return {\n        ownerId: 'nearblocks.testnet',\n        nodeUrl: 'https://rpc.testnet.near.org',\n        backendUrl: 'https://api3-testnet.nearblocks.io/v1/',\n        rpcUrl: 'https://archival-rpc.testnet.near.org',\n        appUrl: 'https://testnet.nearblocks.io/',\n      };\n    default:\n      return {};\n  }\n}\n\nfunction debounce(\n  delay,\n  func,\n) {\n  let timer;\n  let active = true;\n  const debounced = (arg) => {\n    if (active) {\n      clearTimeout(timer);\n      timer = setTimeout(() => {\n        active && func(arg);\n        timer = undefined;\n      }, delay);\n    } else {\n      func(arg);\n    }\n  };\n\n  debounced.isPending = () => {\n    return timer !== undefined;\n  };\n\n  debounced.cancel = () => {\n    active = false;\n  };\n\n  debounced.flush = (arg) => func(arg);\n\n  return debounced;\n}\n\nfunction timeAgo(unixTimestamp) {\n  const currentTimestamp = Math.floor(Date.now() / 1000);\n  const secondsAgo = currentTimestamp - unixTimestamp;\n\n  if (secondsAgo < 5) {\n    return 'Just now';\n  } else if (secondsAgo < 60) {\n    return `${secondsAgo} seconds ago`;\n  } else if (secondsAgo < 3600) {\n    const minutesAgo = Math.floor(secondsAgo / 60);\n    return `${minutesAgo} minute${minutesAgo > 1 ? 's' : ''} ago`;\n  } else if (secondsAgo < 86400) {\n    const hoursAgo = Math.floor(secondsAgo / 3600);\n    return `${hoursAgo} hour${hoursAgo > 1 ? 's' : ''} ago`;\n  } else {\n    const daysAgo = Math.floor(secondsAgo / 86400);\n    return `${daysAgo} day${daysAgo > 1 ? 's' : ''} ago`;\n  }\n}\n\nfunction shortenAddress(address) {\n  const string = String(address);\n\n  if (string.length <= 20) return string;\n\n  return `${string.substr(0, 10)}...${string.substr(-7)}`;\n}\n\nfunction urlHostName(url) {\n  try {\n    const domain = new URL(url);\n    return domain?.hostname ?? null;\n  } catch (e) {\n    return null;\n  }\n}\n\nfunction holderPercentage(supply, quantity) {\n  return Math.min(Big(quantity).div(Big(supply)).mul(Big(100)).toFixed(2), 100);\n}\n\nfunction isAction(type) {\n  const actions = [\n    'DEPLOY_CONTRACT',\n    'TRANSFER',\n    'STAKE',\n    'ADD_KEY',\n    'DELETE_KEY',\n    'DELETE_ACCOUNT',\n  ];\n\n  return actions.includes(type.toUpperCase());\n}\n\nfunction isJson(string) {\n  const str = string.replace(/\\\\/g, '');\n\n  try {\n    JSON.parse(str);\n    return false;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction uniqueId() {\n  return Math.floor(Math.random() * 1000);\n}\nfunction handleRateLimit(\n  data,\n  reFetch,\n  Loading,\n) {\n  if (data.status === 429 || data.status === undefined) {\n    const retryCount = 4;\n    const delay = Math.pow(2, retryCount) * 1000;\n    setTimeout(() => {\n      reFetch();\n    }, delay);\n  } else {\n    if (Loading) {\n      Loading();\n    }\n  }\n}\nfunction localFormat(number) {\n  const bigNumber = Big(number);\n  const formattedNumber = bigNumber\n    .toFixed(5)\n    .replace(/(\\d)(?=(\\d{3})+\\.)/g, '$1,'); // Add commas before the decimal point\n  return formattedNumber.replace(/\\.?0*$/, ''); // Remove trailing zeros and the dot\n}\nfunction formatWithCommas(number) {\n  return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n}\n/* END_INCLUDE: \"includes/libs.jsx\" */\n\n\nfunction MainComponent(props) {\n  const {\n    network,\n    t,\n    receipt,\n    fellowOutgoingReceipts,\n    expandAll,\n    convertionReceipt,\n    className,\n    Link,\n  } = props;\n\n  const [isTxTypeActive, setTxTypeActive] = useState(false);\n  const switchActiveTxType = useCallback(\n    () => setTxTypeActive((x) => !x),\n    [setTxTypeActive],\n  );\n  const config = getConfig(network);\n  useEffect(() => switchActiveTxType, [expandAll, switchActiveTxType]);\n\n  const remainingFellowOutgoingReceipts = fellowOutgoingReceipts.slice(0, -1);\n  const lastFellowOutgoingReceipt = fellowOutgoingReceipts.at(-1);\n  const filterRefundNestedReceipts =\n    receipt?.outcome.nestedReceipts &&\n    receipt?.outcome.nestedReceipts.filter(\n      (nestedReceipt) =>\n        'outcome' in nestedReceipt && nestedReceipt.predecessorId !== 'system',\n    );\n  const nonRefundNestedReceipts =\n    filterRefundNestedReceipts && filterRefundNestedReceipts.slice(0, -1);\n  const lastNonRefundNestedReceipt =\n    filterRefundNestedReceipts && filterRefundNestedReceipts.at(-1);\n\n  return (\n    <>\n      <div\n        className={`border-l mt-2.5 ml-2.5 ${\n          convertionReceipt\n            ? 'pl-0 border-transparent'\n            : 'pl-12 border-green-500 '\n        } ${className} `}\n      >\n        {convertionReceipt ? (\n          <div className=\"flex flex-row mb-2.5\">\n            <div className=\"bg-gray-200 h-5 w-5 rounded-full mr-3\"></div>\n            <div className=\"text-green-500 text-sm\">\n              {receipt?.predecessorId}\n            </div>\n          </div>\n        ) : null}\n\n        {lastFellowOutgoingReceipt ? (\n          <Widget\n            src={`${config.ownerId}/widget/bos-components.components.Transactions.TransactionReceipt`}\n            props={{\n              network: network,\n              t,\n              receipt: lastFellowOutgoingReceipt,\n              expandAll: expandAll,\n              fellowOutgoingReceipts: remainingFellowOutgoingReceipts,\n              convertionReceipt: false,\n              className: 'pb-5 !mt-0',\n              Link,\n            }}\n          />\n        ) : null}\n        <div className=\"flex flex-col relative border-l border-green-500  py-2 pl-7 ml-2.5\">\n          {receipt?.actions &&\n            receipt?.actions.map((action, index) => (\n              <Widget\n                key={`${action.kind}_${index}`}\n                src={`${config.ownerId}/widget/bos-components.components.Transactions.ReceiptKind`}\n                props={{\n                  network: network,\n                  t,\n                  action: action,\n                  onClick: switchActiveTxType,\n                  isTxTypeActive: isTxTypeActive,\n                  Link,\n                }}\n              />\n            ))}\n        </div>\n        {isTxTypeActive ? (\n          <div className=\"border-l border-black ml-2.5\">\n            <Widget\n              src={`${config.ownerId}/widget/bos-components.components.Transactions.ReceiptInfo`}\n              props={{\n                network: network,\n                t,\n                receipt: receipt,\n                Link,\n              }}\n            />\n          </div>\n        ) : null}\n        <div className=\"relative flex flex-row mt-2.5\">\n          <ArrowDown\n            className={`absolute left-0.5 -top-5 ml-px  w-4 h-4 text-green-500`}\n          />\n          <div className=\"bg-gray-200 h-5 w-5 rounded-full mr-3\"></div>\n          <div className=\"text-green-500 text-sm\">{receipt?.receiverId}</div>\n        </div>\n      </div>\n      {lastNonRefundNestedReceipt ? (\n        <Widget\n          src={`${config.ownerId}/widget/bos-components.components.Transactions.TransactionReceipt`}\n          props={{\n            network: network,\n            t: t,\n            receipt: lastNonRefundNestedReceipt,\n            expandAll: expandAll,\n            fellowOutgoingReceipts: nonRefundNestedReceipts,\n            convertionReceipt: false,\n            className: '!pl-0 border-transparent',\n            Link,\n          }}\n        />\n      ) : null}\n    </>\n  );\n}\n\nreturn MainComponent(props, context);", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/nearblocks.near/widget/bos-components.components.Transactions.TransactionReceipt", "fact_widget_deployments_id": "0609bd2ee9f292ad8b1e1068705f7b71", "inserted_timestamp": "2024-03-13T06:27:24.035Z", "modified_timestamp": "2024-03-13T07:26:06.246Z", "__row_index": 8}