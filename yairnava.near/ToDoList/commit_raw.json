{"tx_hash": "AfioL1RKq8JdKmeJuaiTC63pje7zuzeaEW5YtSoVWo9H", "action_id_social": "3wEcsCLNWwD8sg2SFr14FKvGc11B55Yu8bBVuYQ9FtU1-0-widget", "block_id": 102617258, "block_timestamp": "2023-10-04T18:49:04.442Z", "signer_id": "yairnava.near", "widget_name": "ToDoList", "source_code": "const todolistContract = \"0x9098DB859F8912aCb8856fa7298Cb28dD33D65ce\";\n\nconst todolistAbi = fetch(\n  \"https://raw.githubusercontent.com/open-web-academy/Components-BOS/main/Contracts/ToDoListAbi.txt\"\n);\n\nif (!todolistAbi.ok) {\n  return \"Loading\";\n}\n\nconst iface = new ethers.utils.Interface(todolistAbi.body);\n\nconst contract = new ethers.Contract(\n  todolistContract,\n  todolistAbi.body,\n  Ethers.provider().getSigner()\n);\n\nState.init({\n  getTasks: true,\n  user_tasks: [],\n});\n\nconst submitTask = () => {\n  if (state.strTask == \"\") {\n    return console.log(\"El nombre de la tarea no debe estar vacia\");\n  }\n\n  contract.addTask(state.strTask).then((transactionHash) => {\n    setTimeout(() => {\n      getTasks();\n    }, 5000);\n  });\n};\n\nconst finishTask = (task) => {\n  console.log(task);\n  contract.updateStatus(task.id, true).then((transactionHash) => {\n    setTimeout(() => {\n      getTasks();\n    }, 5000);\n  });\n};\n\nconst getTasks = () => {\n  contract.getTaskCount().then((res) => {\n    const countTasks = res.toNumber();\n    let tasks = [];\n    for (let i = 0; i < countTasks; i++) {\n      const taskNumber = i;\n      contract.getTask(i).then((res) => {\n        const newTask = { id: taskNumber, name: res[0], status: res[1] };\n        tasks.push(newTask);\n      });\n    }\n    setTimeout(() => {\n      State.update({ user_tasks: tasks, getTasks: false });\n    }, 10000);\n  });\n};\n\nif (state.sender === undefined) {\n  const accounts = Ethers.send(\"eth_requestAccounts\", []);\n  if (accounts.length) {\n    State.update({ sender: accounts[0] });\n  }\n}\n\nif (state.user_tasks.length == 0 && state.sender) {\n  getTasks();\n}\n\nconst cssFont = fetch(\n  \"https://fonts.googleapis.com/css2?family=Manrope:wght@200;300;400;500;600;700;800\"\n).body;\nconst css = fetch(\n  \"https://nativonft.mypinata.cloud/ipfs/Qmdpe64Mm46fvWNVaCroSGa2JKgauUUUE5251Cx9nTKNrs\"\n).body;\n\nif (!cssFont || !css) return \"\";\n\nif (!state.theme) {\n  State.update({\n    theme: styled.div`\n    font-family: Manrope, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\n    ${cssFont}\n    ${css}\n`,\n  });\n}\nconst Theme = state.theme;\n\nconst getSender = () => {\n  return !state.sender\n    ? \"\"\n    : state.sender.substring(0, 6) +\n        \"...\" +\n        state.sender.substring(state.sender.length - 4, state.sender.length);\n};\n\nreturn (\n  <Theme>\n    <div class=\"LidoContainer\">\n      <div class=\"Header\">Lista de Tareas</div>\n\n      {!!state.sender ? (\n        <>\n          <div class=\"SubHeader\">Crear nueva tarea </div>\n          <div class=\"LidoStakeFormInputContainer\">\n            <span class=\"LidoStakeFormInputContainerSpan2\">\n              <input\n                class=\"LidoStakeFormInputContainerSpan2Input\"\n                value={state.strTask}\n                onChange={(e) => State.update({ strTask: e.target.value })}\n                placeholder=\"Nombre nueva tarea\"\n              />\n            </span>\n          </div>\n          <button\n            class=\"LidoStakeFormSubmitContainer\"\n            onClick={() => submitTask()}\n          >\n            <span>Guardar</span>\n          </button>\n          <div>\n            <div class=\"SubHeader\">Tareas creadas: </div>\n            {state.getTasks ? (\n              <span>Consultando tareas...</span>\n            ) : state.user_tasks.length > 0 ? (\n              <table className=\"table table-hover table-sm\">\n                <thead>\n                  <tr class=\"p-3 mb-2 bg-primary bg-gradient text-white rounded-5 text-center\">\n                    <th>Nombre</th>\n                    <th>Terminada</th>\n                    <th></th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {state.user_tasks.map((data, key) => {\n                    return (\n                      <>\n                        <tr class=\"text-center\">\n                          <td>{data.name}</td>\n                          <td>{data.status ? \"Si\" : \"No\"}</td>\n                          <td>\n                            {!data.status ? (\n                              <button\n                                class=\"btn btn-primary\"\n                                onClick={async () => {\n                                  finishTask(data);\n                                }}\n                              >\n                                Finalizar\n                              </button>\n                            ) : (\n                              <span></span>\n                            )}\n                          </td>\n                        </tr>\n                      </>\n                    );\n                  })}\n                </tbody>\n              </table>\n            ) : (\n              <span>No hay tareas guardadas</span>\n            )}\n          </div>\n        </>\n      ) : (\n        <Web3Connect\n          className=\"LidoStakeFormSubmitContainer\"\n          connectLabel=\"Connect with Web3\"\n        />\n      )}\n    </div>\n  </Theme>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/yairnava.near/widget/ToDoList", "fact_widget_deployments_id": "afd611e2d94a84ce8c04b8998494b768", "inserted_timestamp": "2023-10-04T20:42:20.913Z", "modified_timestamp": "2023-10-04T20:42:20.913Z", "__row_index": 3}