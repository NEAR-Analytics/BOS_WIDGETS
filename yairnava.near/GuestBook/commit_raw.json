{"tx_hash": "H7Jky1y1KVyhUkEgBAZCnEuEAFzqDC1JCxYVko9SDf6D", "action_id_social": "FUPRyQaorZdLx1hEuLrAV9nsNXVPvvi2qhbjMjeLtEoz-0-widget", "block_id": 114587016, "block_timestamp": "2024-03-12T20:57:26.972Z", "signer_id": "yairnava.near", "widget_name": "GuestBook", "source_code": "// Definici\u00f3n del nombre del contrato inteligente.\nconst contract = \"guest-book.near\";\n\n// Declaraci\u00f3n de los hooks de React para almacenar la informaci\u00f3n necesaria en el state del componente.\nconst [messages, setMessages] = useState([]);\nconst [newMessage, setNewMessages] = useState(\"\");\nconst [newDeposit, setNewDeposit] = useState(0);\n\n// Indicamos al componente que consulte la informaci\u00f3n del contrato despu\u00e9s de renderizarse.\nuseEffect(() => {\n  // Llamamos al m\u00e9todo getMessages del contrato inteligente.\n  const data = Near.view(contract, \"getMessages\", {}).reverse();\n  // Asignamos la informaci\u00f3n obtenida del contrato a la propiedad messages del state.\n  setMessages(data);\n}, []);\n\n// Funci\u00f3n para agregar un nuevo mensaje al libro de visitas.\nconst addNewMessage = () => {\n  // Se asegura de que el nuevo mensaje no est\u00e9 vac\u00edo antes de agregarlo.\n  if (newMessage.trim() == \"\") {\n    return;\n  }\n\n  // Se llama al contrato para agregar un nuevo mensaje, junto con el texto y el dep\u00f3sito.\n  Near.call(\n    contract,\n    \"addMessage\",\n    {\n      text: newMessage,\n    },\n    \"30000000000000\",\n    newDeposit * 1e24\n  );\n};\n\nreturn (\n  <div class=\"p-3\">\n    <h3 class=\"text-center\">Guest Book (BOS + NEAR)</h3>\n    <br />\n    {context.accountId ? (\n      <div class=\"border border-black p-3\">\n        <h3>New Message</h3>\n        <div class=\"row\">\n          <div class=\"col-sm\">\n            <input\n              placeholder=\"Message\"\n              onChange={(e) => setNewMessages(e.target.value)}\n            />\n          </div>\n          <div class=\"col-sm\">\n            <input\n              type=\"number\"\n              min=\"0\"\n              placeholder=\"Deposit\"\n              onChange={(e) => setNewDeposit(e.target.value)}\n            />\n          </div>\n        </div>\n        <button\n          class=\"btn btn-primary mt-2\"\n          onClick={async () => {\n            addNewMessage();\n          }}\n        >\n          Send Message\n        </button>\n      </div>\n    ) : (\n      <p class=\"text-center py-2\">\n        Debes iniciar sesi\u00f3n para guardar un mensaje\n      </p>\n    )}\n    <br />\n    <div class=\"border border-black p-3\">\n      <h3>List of Messages</h3>\n      <table className=\"table table-sm\">\n        <thead>\n          <tr class=\"p-3 mb-2 bg-primary text-white text-center\">\n            <th>Account</th>\n            <th>Message</th>\n            <th>Premium</th>\n          </tr>\n        </thead>\n        <tbody>\n          {messages.map((data, key) => {\n            return (\n              <tr class=\"text-center\">\n                <td>{data.sender}</td>\n                <td>{data.text}</td>\n                <td>{data.premium ? \"Yes\" : \"No\"}</td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/yairnava.near/widget/GuestBook", "fact_widget_deployments_id": "181889c0dfb00d6fc5c05f54ef25257d", "inserted_timestamp": "2024-03-12T22:26:24.909Z", "modified_timestamp": "2024-03-12T22:26:24.909Z", "__row_index": 8}