{"tx_hash": "FgegBNpawFuMjG1Y2x1xXa9UDM5s6VGPxHBrmiHR7unu", "action_id_social": "CFojTxPhPyZU9vrEqYpjg9TzUPsbmv6ZdZF2W9oDd9Nw-0-widget", "block_id": 101041503, "block_timestamp": "2023-09-13T15:06:32.929Z", "signer_id": "54af61256e5b14bb398aa022024c87efb9ce7b532bfd26a264babc71a07a2742", "widget_name": "ZomLandElectionVoters", "source_code": "const apiKey = \"36f2b87a-7ee6-40d8-80b9-5e68e587a5b5\";\nconst accounts = [\n  \"flugg.near\",\n  \"shamani.near\",\n  \"semyon.near\",\n  \"nathanbyars.near\",\n  \"marior.near\",\n  \"e0cf5b63e5586b1908e82b4c750ce19a4492b6bb722cc1e3911f90fb8e04f4d3\",\n  \"needb.near\",\n  \"you_are_out_of_place_here.near\",\n  \"sookast.near\",\n  \"nearpavel.near\",\n  \"rubycop.near\",\n  \"kaspars86.near\",\n  \"vlodkow.near\",\n  \"denbite.near\",\n  \"cryptogarik.near\",\n  \"rambergen.near\",\n  \"betrin.near\",\n  \"nz3000.near\",\n  \"anjass.near\",\n  \"liight.near\",\n  \"mi4ka.near\",\n  \"flawl3ss.near\",\n  \"nate.near\",\n  \"59583199fc8d2b7207ad71f5213b3e7c917cbf07579d0e63fe1d7cebd9a2cd00\",\n  \"938c83fcf90350e4e5ad7f1a802d3db742718e194efbc77cf5a250742f61aeb9\",\n  \"annastoilova.near\",\n  \"isho.near\",\n  \"tolmindev.near\",\n  \"2218af17e2a3f8ee57e870f5af5a45a5be3d0a733fb08e4c64f5bf4ffdbef09a\",\n  \"maryrazel.near\",\n  \"red34.near\",\n  \"toni2411992.near\",\n  \"1001k.near\",\n  \"andreloft.near\",\n  \"root.near\",\n  \"7418d5cb7d7657e526b8bccf28750939105828d0f5b34a7254bd107477d84a2c\",\n  \"cryptois.near\",\n  \"vvr.near\",\n  \"koles.near\",\n  \"3misfits.near\",\n  \"lesha_vecher.near\",\n  \"kriptoraptor.near\",\n  \"8d896e439b3111e1107403f1a8e64400de5283897a09b4dbc9102759c2bfef1c\",\n  \"rubenzmart.near\",\n  \"riqi.near\",\n  \"vlad.near\",\n  \"chezhe.near\",\n  \"mrmachine1903.near\",\n  \"georgemarlow.near\",\n  \"aryonchain.near\",\n  \"henryis.near\",\n  \"vertfromage.near\",\n  \"aliaksandrh.near\",\n  \"fgex.near\",\n  \"honestdsk.near\",\n  \"monish016.near\",\n  \"rootx.near\",\n  \"maks1mk_a.near\",\n  \"buythefear.near\",\n  \"omajari199.near\",\n  \"c3f1e6ce50f5a3e33a1db4a966bec3c35897cb6e63aa8f90aa6b6a2b34eb7c74\",\n  \"kiskesis.near\",\n  \"explorebivab.near\",\n  \"microchipgnu.near\",\n  \"p0k.near\",\n  \"vinhdao286.near\",\n  \"vu260797.near\",\n  \"ardisaz.near\",\n  \"jehoti.near\",\n  \"steven4293.near\",\n  \"rebzay.near\",\n  \"dushek.near\",\n  \"lolson.near\",\n  \"14a738378c279cb548cae697aea8b4fcf9893b598d9699af313e20de6679b303\",\n  \"billybones.near\",\n  \"monza.near\",\n  \"izullubiez.near\",\n  \"markmklsn.near\",\n  \"a99448ef6d5804ddfde7121eddd815f9d32b4128e97eceb8c41132995baa2010\",\n  \"yabloko.near\",\n  \"illli.near\",\n  \"wohon.near\",\n  \"rayha.near\",\n  \"iben.near\",\n  \"18e28ed26ef42687b19cba6d471b7ce87b5f683d253e89e5121c4e790471310f\",\n  \"mnaveed.near\",\n  \"chloe.near\",\n  \"31ad8a4fa1085cfb1605a189037762a496fb588fb3fce4ffa536adf09763ce90\",\n  \"femioguns04.near\",\n  \"reup.near\",\n  \"fandix.near\",\n  \"davletuner.near\",\n  \"yonota.near\",\n  \"e51346889b17c60253bb7ed3b6710c3d0f9c2743171763cb61b700757059da83\",\n  \"bishi.near\",\n  \"29baf90a4010321e8d7edf9c569304d3768ba041fca11302b9ffc6d487ce4007\",\n  \"hardexe.near\",\n  \"39cb88955904c2b2f3ad484e45e8241fbe0785e64ca8f56995550591dffd15db\",\n  \"neversettleinterstellar.near\",\n  \"1ce2567f7f49cb34cea72179223ec7fc4ba91077da3e01364d0c729dfbe26467\",\n  \"cronus.near\",\n  \"uncle_alex.near\",\n  \"svetik.near\",\n  \"bigdawg.near\",\n  \"anmatig.near\",\n  \"cd0c33b4dddffe6e177696a64e219cd9e9a8878965d38bb7ce4d2cc06f91437b\",\n  \"planetaworld.near\",\n  \"f3ff09992bcdb90a76b0f48cc6575924c1592bd7d1c67c6891cdf77f71009318\",\n];\n\nState.init({\n  voters: [],\n  otherVoters: {},\n  data: [],\n  community: props.community || \"zomland\",\n});\n\nasyncFetch(\n  `https://api.pikespeak.ai/election/votes-by-candidate?contract=elections.ndc-gwg.near&candidate=${props.candidate}`,\n  { headers: { \"x-api-key\": apiKey } }\n).then((resp) => {\n  State.update({ voters: resp.body.map((el) => el.voter) });\n});\n\nasyncFetch(`https://scoreboard-ophc7vkxsq-uc.a.run.app/scoreboard`, {\n  method: \"GET\",\n  headers: {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n  },\n}).then((res) => {\n  if (res.body) State.update({ data: res.body.data });\n});\n\nconst Container = styled.div`\n  flex-direction: row;\n\n  @media (max-width: 1200px) {\n    flex-direction: column;\n  }\n`;\n\nconst Section = styled.div`\n  background: #fdfeff;\n  box-shadow: 0px 0px 20px rgba(0, 0, 0, 0.1);\n  border-radius: 8px;\n  padding: 20px;\n  font-size: 14px;\n\n  @media (max-width: 1200px) {\n    width: 100%;\n  }\n`;\n\nconst Name = styled.div`\n  background-color: ${(props) =>\n    props.isVotedForOthers\n      ? \"#ccc\"\n      : props.isVoted\n      ? \"#46ff7d\"\n      : \"inherit !important\"};\n  width: 300px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  font-size: 13px;\n\n  @media (max-width: 400px) {\n    width: 120px;\n  }\n`;\n\nconst Chart = styled.div`\n  width: 150px;\n  aspect-ratio: 1;\n  position: relative;\n  display: inline-grid;\n  place-content: center;\n  margin: 5px;\n  font-size: 25px;\n  font-weight: bold;\n\n  &:before {\n    content: \"\";\n    position: absolute;\n    border-radius: 50%;\n    inset: 0;\n    background: ${(props) =>\n      `conic-gradient(#4ba6ee, calc(${props.voted}*1%), #d4e5f4 0)`};\n    -webkit-mask: radial-gradient(\n      farthest-side,\n      #0000 calc(99% - 15px),\n      #000 calc(100% - 15px)\n    );\n    mask: radial-gradient(\n      farthest-side,\n      #0000 calc(99% - 15px),\n      #000 calc(100% - 15px)\n    );\n  }\n\n  span {\n    font-weight: 800;\n    font-size: 32px;\n    line-height: 120%;\n    color: #4ba6ee;\n  }\n`;\n\nfunction getVoted(list) {\n  return state.voters.filter((u) => list.includes(u));\n}\n\nfunction isVoted(acc) {\n  return state.voters.some((u) => acc === u);\n}\n\nconst data = fetch(\n  \"https://raw.githubusercontent.com/zavodil/near-nft-owners-list/main/output_election_votes.txt\"\n);\n\nif (data.ok) {\n  let otherVoters = {};\n\n  Object.values(\n    data.body\n      .split(\"\\n\")\n      .map((line) => line.split(\"|\"))\n      .filter((data) => data.length === 5)\n  ).map((item) => {\n    const account_id = item[0];\n    if (otherVoters[account_id] == undefined) {\n      otherVoters[account_id] = {};\n    }\n    otherVoters[account_id][item[3]] = item[4].toLowerCase();\n  });\n\n  State.update({ otherVoters });\n} else return \"Loading\";\n\nconsole.log(state.otherVoters);\nconst formData = {};\n\nstate.data.map((item) => {\n  if (formData[item[\"community-name\"]])\n    formData[item[\"community-name\"]].push(item);\n  else formData[item[\"community-name\"]] = [item];\n});\n\nconst ndcAccounts = formData[state.community]\n  .map((user) => user.account)\n  .filter((user) => accounts.includes(user));\nconst totalPercentage = (getVoted(accounts).length / accounts.length) * 100;\nconst ndcPercentage = (getVoted(ndcAccounts).length / ndcAccounts.length) * 100;\nconst getOtherVoter = (acc) => state.otherVoters[acc][2];\n\nreturn (\n  <div className=\"d-flex flex-column justify-content-center w-100\">\n    <Container className=\"d-flex mt-3 mb-3 w-100 gap-3 justify-content-center\">\n      <Section className=\"d-flex flex-column gap-2 align-items-center\">\n        <h5>Total Whitelisted ({accounts.length})</h5>\n        <div className=\"d-flex flex-column gap-2\">\n          {accounts.map((accountId) => (\n            <Name\n              isVoted={isVoted(accountId)}\n              isVotedForOthers={\n                getOtherVoter(accountId).length > 0 &&\n                !getOtherVoter(accountId).includes(props.candidate)\n              }\n            >\n              <Widget\n                src=\"mob.near/widget/ProfileLine\"\n                props={{ accountId, tooltip: false }}\n              />\n            </Name>\n          ))}\n        </div>\n      </Section>\n      <Section className=\"d-flex flex-column gap-2 align-items-center\">\n        <h5>NDC Whitelisted ({ndcAccounts.length})</h5>\n        <div className=\"d-flex flex-column gap-2\">\n          {ndcAccounts.map((accountId) => (\n            <Name\n              isVoted={isVoted(accountId)}\n              isVotedForOthers={\n                getOtherVoter(accountId).length > 0 &&\n                !getOtherVoter(accountId).includes(props.candidate)\n              }\n            >\n              <Widget\n                src=\"mob.near/widget/ProfileLine\"\n                props={{ accountId, tooltip: false }}\n              />\n            </Name>\n          ))}\n        </div>\n      </Section>\n      <Section className=\"d-flex flex-column gap-2 align-items-center\">\n        <h5>Total users</h5>\n        <Chart voted={totalPercentage}>\n          <span>{totalPercentage.toFixed(1)}%</span>\n        </Chart>\n        <h5>NDC users</h5>\n        <Chart voted={ndcPercentage}>\n          <span>{ndcPercentage.toFixed(1)}%</span>\n        </Chart>\n      </Section>\n    </Container>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/54af61256e5b14bb398aa022024c87efb9ce7b532bfd26a264babc71a07a2742/widget/ZomLandElectionVoters", "fact_widget_deployments_id": "94b8dac004115efa6debc7e75796362f", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 2}