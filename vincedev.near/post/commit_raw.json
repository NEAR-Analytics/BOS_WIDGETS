{"tx_hash": "AxwuFVsRD64QuXQcDfwLKwDyL9zA2PZid2HxyV2eUFPc", "action_id_social": "BTvT1BmiLrxyaH6nL1nRj5njgFHXWytAAFmQwAwfLqPG-0-widget", "block_id": 106817346, "block_timestamp": "2023-11-29T17:01:01.175Z", "signer_id": "vincedev.near", "widget_name": "post", "source_code": "const { Feed } = VM.require(\"devs.near/widget/Module.Feed\");\nconst { ContextMenu } = VM.require(\"efiz.near/widget/Module.ContextMenu\");\n\nContextMenu = ContextMenu || (() => <></>); // make sure you have this or else it can break\nFeed = Feed || (() => <></>);\nconst MainWrapper = styled.div`\ndisplay: flex;\njustify-content: space-between;\n`;\nconst childDiv1 = styled.div`\nwidth:70%;\n`;\nconst childDiv2 = styled.div`\nwidth:28%;\n`;\n\nconst [parentArray, setParentAray] = useState([]);\nconst [hashList, setHashList] = useState([]);\nconst [trendList, setTrendList] = useState([]);\nconst [singlePostTrendList, setSinglePostTrendList] = useState([]);\nconst [search, setSearch] = useState(\"\");\nconst [postActive, setPostActive] = useState(true);\nconst [trendActive, setTrendActive] = useState(false);\nconst [activeTag, setActiveTag] = useState(\"\");\n\nconst pushToArray = (array) => {\n  setParentAray((prevArray) => [...prevArray, ...array]);\n};\n\nconst pushSearchArray = () => {\n  return [];\n};\n\nconst getSearch = (search) => {\n  setSearch(search);\n};\n\nconst extractHashtags = (text) => {\n  const hashtagRegex = /#(\\w+)/gi;\n  hashtagRegex.lastIndex = 0;\n  if (text === undefined) return [];\n  if (text) {\n    const hashtags = new Set();\n    for (const match of text?.matchAll(hashtagRegex)) {\n      if (\n        !/[\\w`]/.test(match.input.charAt(match.index - 1)) &&\n        !/[/\\w`]/.test(match.input.charAt(match.index + match[0].length))\n      ) {\n        hashtags.add(match[1].toLowerCase());\n      }\n    }\n\n    return [...hashtags];\n  }\n};\n\n// function getHashList() {\n//   // if (parentArray.length >= 10) {\n//   for (let i = 0; i < parentArray.length; i++) {\n//     const txt = parentArray[i].text;\n//     let res = extractHashtags(txt);\n//     setHashList((prevHashList)=>[...prevHashList, ...res]);\n//   }\n//   // } else {\n//   //   console.log(\"0\");\n//   // }\n// }\n\nfunction getHashList() {\n  const hashtagCounts = {};\n\n  for (let i = 0; i < parentArray.length; i++) {\n    const txt = parentArray[i].text;\n    const hashtags = extractHashtags(txt);\n\n    hashtags.map((tag) => {\n      hashtagCounts[tag] = (hashtagCounts[tag] || 0) + 1;\n    });\n  }\n\n  setHashList(Object.entries(hashtagCounts));\n}\n\nconst fetchTrendFeed = () => {\n  setTrendList(\n    parentArray.filter((it) =>\n      extractHashtags(it.text).includes(hashList[0][0])\n    )\n  );\n\n  setPostActive(false);\n  setTrendActive(true);\n};\nconst fetchAllPost = () => {\n  setTrendList([]);\n  setPostActive(true);\n  setTrendActive(false);\n};\n\nuseEffect(() => {\n  getHashList();\n}, [parentArray]);\n\nconst singlePosthashTag = (text) => {\n  setSinglePostTrendList(\n    parentArray.filter((it) => extractHashtags(it.text).includes(text))\n  );\n  setActiveTag(text);\n  setPostActive(false);\n  setTrendActive(false);\n  setTrendList([]);\n  setSearch(\"\");\n  console.log(text);\n};\n\nreturn (\n  <div\n    className=\"d-flex flex-column gap-1\"\n    style={{\n      background: \"#fefefe\",\n    }}\n  >\n    <Widget\n      src=\"vincedev.near/widget/PostxNavbar\"\n      props={{\n        getSearch: getSearch,\n        fetchTrendFeed: fetchTrendFeed,\n        fetchAllPost: fetchAllPost,\n        postActive: postActive,\n        trendActive: trendActive,\n      }}\n    />\n    <MainWrapper>\n      <childDiv1>\n        {activeTag && (\n          <div\n            style={{\n              backgroundColor: \"#F3F9FF\",\n              padding: \"24px 40px\",\n              margin: \"8px auto\",\n              borderRadius: \"8px\",\n              minWidth: \"120px\",\n              maxWidth: \"40%\",\n              fontFamily: \"Space Grotesk\",\n              fontWeight: \"bolder\",\n              fontSize: \"28px\",\n              textTransform: \"uppercase\",\n              textAlign: \"center\",\n            }}\n          >\n            #{activeTag}\n          </div>\n        )}\n        {search ? (\n          <div>\n            {parentArray\n              .filter((it) => extractHashtags(it.text).includes(search))\n              .map((eachP) => (\n                <>\n                  <Widget\n                    loading=\"loading\"\n                    src=\"blessed07.near/widget/post-content\"\n                    props={{\n                      accountId: eachP.accountId,\n                      blockHeight: eachP.blockHeight,\n                      pushToArray: pushSearchArray,\n                      forSearch: true,\n                    }}\n                  />\n                </>\n              ))}\n          </div>\n        ) : trendList?.length > 0 ? (\n          <>\n            {trendList.map((eachP) => (\n              <Widget\n                src=\"blessed07.near/widget/post-content\"\n                props={{\n                  accountId: eachP.accountId,\n                  blockHeight: eachP.blockHeight,\n                  pushToArray: pushSearchArray,\n                  forSearch: true,\n                }}\n              />\n            ))}\n          </>\n        ) : singlePostTrendList?.length > 0 ? (\n          <>\n            {singlePostTrendList.map((eachP) => (\n              <Widget\n                src=\"blessed07.near/widget/post-content\"\n                props={{\n                  accountId: eachP.accountId,\n                  blockHeight: eachP.blockHeight,\n                  pushToArray: pushSearchArray,\n                  forSearch: true,\n                }}\n              />\n            ))}\n          </>\n        ) : (\n          <Feed\n            index={[\n              {\n                action: \"post\",\n                key: \"main\",\n                options: {\n                  limit: 10,\n                  order: \"desc\",\n                  accountId: props.accounts,\n                },\n                cacheOptions: {\n                  ignoreCache: true,\n                },\n              },\n              {\n                action: \"repost\",\n                key: \"main\",\n                options: {\n                  limit: 10,\n                  order: \"desc\",\n                  accountId: props.accounts,\n                },\n                cacheOptions: {\n                  ignoreCache: true,\n                },\n              },\n            ]}\n            Item={(p) => {\n              const item = {\n                path: `${p.accountId}/post/main`,\n                blockHeight: p.blockHeight,\n                type: \"social\",\n              };\n\n              console.log(p);\n              // <Widget\n              //   loading={\n              //     <div className=\"w-100\" style={{ height: \"200px\" }} />\n              //   }\n              //   src=\"vincedev.near/widget/singlePost\"\n              //   props={{\n              //     accountId: p.accountId,\n              //     blockHeight: p.blockHeight,\n              //   }}\n              // />\n              return (\n                <ContextMenu\n                  Item={() => (\n                    <>\n                      <Widget\n                        src=\"blessed07.near/widget/post-content\"\n                        props={{\n                          accountId: p.accountId,\n                          blockHeight: p.blockHeight,\n                          pushToArray: pushToArray,\n                          forSearch: false,\n                        }}\n                      />\n                    </>\n                  )}\n                  passProps={{\n                    // PROPS THAT WILL BE PASSED TO FUNCTION\n                    show: {\n                      item,\n                    },\n                  }}\n                  handlers={{\n                    // FUNCTION DEFINITIONS\n                    show: ({ item }) => {\n                      const data = {\n                        index: {},\n                      };\n                      const notifications = [\"james.near\"].map((accountId) => ({\n                        key: accountId,\n                        value: {\n                          type: \"mention\",\n                          item,\n                        },\n                      }));\n\n                      if (notifications.length) {\n                        Social.set({\n                          notify: JSON.stringify(\n                            notifications.length > 1\n                              ? notifications\n                              : notifications[0]\n                          ),\n                        });\n                      }\n                    },\n                  }}\n                  items={{\n                    // MENU ITEM TO RENDER, WILL CALL FUNCTION WHEN CLICKED\n                    show: () => (\n                      <>\n                        <i className=\"menu__item__icon bi bi-arrow-return-right\" />\n                        Forward\n                      </>\n                    ),\n                  }}\n                />\n              );\n            }}\n          />\n        )}\n      </childDiv1>\n      <childDiv2>\n        <Widget\n          src=\"vincedev.near/widget/PostXTrendingPost\"\n          props={{\n            hashList: hashList,\n            singlePosthashTag: singlePosthashTag,\n            activeTag: activeTag,\n          }}\n        />\n      </childDiv2>\n    </MainWrapper>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/vincedev.near/widget/post", "fact_widget_deployments_id": "27dbc9035c556942950e7d3452e4729f", "inserted_timestamp": "2023-11-29T19:17:47.478Z", "modified_timestamp": "2023-12-20T00:36:59.366Z", "__row_index": 15}