{"tx_hash": "AXnZT16uxDfZcHxAbMTKoxn2XG757srYoFM5Fyst9nu4", "action_id_social": "5LJtEMQ3yYk3pYSsFuqs45EhUwdXW5vVA77KLnWrKEan-0-widget", "block_id": 120666993, "block_timestamp": "2024-06-07T22:37:40.371Z", "signer_id": "kirrruuusha.near", "widget_name": "New-Draft-0", "source_code": "State.init({\r\n  accountIdContext: \"\",\r\n  accountIdProps: \"\",\r\n  mentorPhoto: \"\",\r\n  mentorName: \"Mentor Name\",\r\n  mentorPoints: 0,\r\n  studentsCounter: 0,\r\n  students: [],\r\n  studentRequests: [],\r\n  currentAppThemeMode: \"lightMode\",\r\n  currentRoute: \"studentsPage\",\r\n  profileName: \"\",\r\n  profileDiscription: \"\",\r\n  creatProfileName: \"\",\r\n  creatProfileDiscription: \"\",\r\n  addNewStudent: \"\",\r\n  editDescription: \"\",\r\n  ifAddStudent: true,\r\n  studentArray: [],\r\n  arreyWhitIndexForAddStudent: [],\r\n  heashForDeletnumb: {},\r\n  flagForFindStdudentByID: false,\r\n  idFindStudent: \"\",\r\n  vrifyOurStudent: \"\",\r\n});\r\n\r\nconst TecherPossibilities = {\r\n  init: () => {\r\n    const accountIdContext = context.accountId;\r\n    if (!accountIdContext) {\r\n      return \"No account ID\";\r\n    }\r\n    const accountIdProps = props.accountId;\r\n    const profile = Social.getr(`${state.accountIdContext}/profile`);\r\n    State.update({\r\n      accountIdProps: accountIdProps,\r\n      accountIdContext: accountIdContext,\r\n      profileName: profile.name,\r\n      profileDiscription: profile.discription,\r\n    });\r\n  },\r\n  initProfile: () => {\r\n    Social.set({\r\n      profile: {\r\n        name: state.creatProfileName,\r\n        discription: state.creatProfileDiscription,\r\n      },\r\n    });\r\n  },\r\n  initNameProfile: () => {\r\n    Social.set({\r\n      profile: {\r\n        name: state.creatProfileName,\r\n      },\r\n    });\r\n  },\r\n  initDiscriptionProfile: () => {\r\n    Social.set({\r\n      profile: {\r\n        discription: state.creatProfileDiscription,\r\n      },\r\n    });\r\n  },\r\n  getStudent: (pageNumber, pageSize) => {\r\n    // \u0420\u0430\u0441\u0441\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u043c \u043d\u0430\u0447\u0430\u043b\u044c\u043d\u044b\u0439 \u0438 \u043a\u043e\u043d\u0435\u0447\u043d\u044b\u0439 \u0438\u043d\u0434\u0435\u043a\u0441\u044b \u0434\u043b\u044f \u043f\u0430\u0433\u0438\u043d\u0430\u0446\u0438\u0438\r\n    const startIndex = (pageNumber - 1) * pageSize;\r\n    const endIndex = startIndex + pageSize;\r\n    let studentArray = [];\r\n    let arreyWhitIndexForAddStudent = [];\r\n    let heashForDeletnumb = {};\r\n    if (state.accountIdProps) {\r\n      for (let i = startIndex; i < endIndex; i++) {\r\n        const student = Social.get(`${state.accountIdProps}/mystudents/${i}`);\r\n        if (student) {\r\n          studentArray.push(student);\r\n          heashForDeletnumb[student] = i;\r\n        } else {\r\n          arreyWhitIndexForAddStudent.push(i);\r\n        }\r\n      }\r\n    } else {\r\n      for (let i = startIndex; i < endIndex; i++) {\r\n        const student = Social.get(`${state.accountIdContext}/mystudents/${i}`);\r\n        if (student) {\r\n          studentArray.push(student);\r\n          heashForDeletnumb[student] = i;\r\n        } else {\r\n          arreyWhitIndexForAddStudent.push(i);\r\n        }\r\n      }\r\n    }\r\n    State.update({\r\n      studentArray: studentArray,\r\n      arreyWhitIndexForAddStudent: arreyWhitIndexForAddStudent,\r\n      heashForDeletnumb: heashForDeletnumb,\r\n    });\r\n  },\r\n  updateDiscription: (student) => {\r\n    Social.set({\r\n      profile: {\r\n        discriptionsStudent: {\r\n          [student]: state.editDescription,\r\n        },\r\n      },\r\n    });\r\n  },\r\n  deleteStudent: (student) => {\r\n    const indexForDeleteNumb = state.heashForDeletnumb[student];\r\n    Social.set({\r\n      mystudents: {\r\n        [indexForDeleteNumb]: null,\r\n      },\r\n      myStudentsForFind: {\r\n        [student]: false,\r\n      },\r\n    });\r\n  },\r\n  addStudent: () => {\r\n    const newStudent = state.addNewStudent;\r\n    const ifAlreadyHaveStudent = Social.get(\r\n      `${state.accountIdContext}/myStudentsForFind/${newStudent}`\r\n    );\r\n    const sliceForVerification = newStudent.slice(\r\n      newStudent.length - 5,\r\n      newStudent.length\r\n    );\r\n    if (sliceForVerification == \".near\" && ifAlreadyHaveStudent != `true`) {\r\n      let indexForAddStudent = 0;\r\n      if (\r\n        state.studentArray.length > 0 &&\r\n        state.arreyWhitIndexForAddStudent.length > 0\r\n      ) {\r\n        indexForAddStudent = state.arreyWhitIndexForAddStudent[0];\r\n      } else if (\r\n        state.studentArray.length > 0 &&\r\n        state.arreyWhitIndexForAddStudent.length == 0\r\n      ) {\r\n        while (state.arreyWhitIndexForAddStudent.length == 0) {\r\n          const student = Social.get(\r\n            `${state.accountIdContext}/mystudents/${indexForAddStudent}`\r\n          );\r\n          if (!student) {\r\n            State.update({\r\n              arreyWhitIndexForAddStudent: student,\r\n            });\r\n            break;\r\n          }\r\n          indexForAddStudent++;\r\n        }\r\n      } else if (\r\n        state.studentArray.length == 0 &&\r\n        !state.arreyWhitIndexForAddStudent.length == 0\r\n      ) {\r\n        indexForAddStudent = 0;\r\n      }\r\n      Social.set({\r\n        mystudents: {\r\n          [indexForAddStudent]: state.addNewStudent,\r\n        },\r\n        myStudentsForFind: {\r\n          [newStudent]: true,\r\n        },\r\n      });\r\n      State.update({\r\n        ifAddStudent: true,\r\n      });\r\n    } else {\r\n      State.update({\r\n        ifAddStudent: false,\r\n      });\r\n    }\r\n  },\r\n  findStudentByID: () => {\r\n    const idaccound = state.idFindStudent;\r\n    const isOurStudent = Social.get(\r\n      `${state.accountIdContext}/myStudentsForFind/${idaccound}`\r\n    );\r\n    if (isOurStudent == `true`) {\r\n      State.update({\r\n        vrifyOurStudent: idaccound,\r\n      });\r\n    } else {\r\n      State.update({\r\n        vrifyOurStudent: \"\",\r\n      });\r\n    }\r\n  },\r\n};\r\n\r\nTecherPossibilities.init();\r\nTecherPossibilities.getStudent(1, 10);\r\n\r\nfunction descriptionForStudent(account_id) {\r\n  const discriprionalIN = Social.get(`${account_id}/profile/discription`);\r\n  return discriprionalIN;\r\n}\r\n\r\nfunction ourDescriptionForStudent(account_id) {\r\n  const discriprionalIN = Social.get(\r\n    `${state.accountIdContext}/profile/discriptionsStudent/${account_id}`\r\n  );\r\n  if (discriprionalIN == null) {\r\n    return \"no info\";\r\n  }\r\n  return discriprionalIN;\r\n}\r\n\r\n//UI Kit Theme\r\nconst appTheme = {\r\n  colors: () => {\r\n    const currentThemeMode = state.currentAppThemeMode;\r\n    const colors =\r\n      currentThemeMode === \"lightMode\"\r\n        ? {\r\n            standartText: \"#000000\",\r\n            backgroundColor: \"#FFFFFF\",\r\n            primary: \"#000000\",\r\n            secondary: \"rgba(255, 0, 0, 0)\",\r\n            textBlack: \"#000000\",\r\n            textWhite: \"#FFFFFF\",\r\n          }\r\n        : {\r\n            standartText: \"#FFFFFF\",\r\n            backgroundColor: \"#333333\",\r\n            primary: \"#000000\",\r\n            secondary: \"#FFFFFF\",\r\n            textBlack: \"#000000\",\r\n            textWhite: \"#FFFFFF\",\r\n          };\r\n\r\n    return colors;\r\n  },\r\n  fontSizes: {\r\n    h1: \"2.5em\",\r\n    h2: \"2em\",\r\n    h3: \"1.75em\",\r\n    h4: \"1.5em\",\r\n    h5: \"1.25em\",\r\n    h6: \"1em\",\r\n    body: \"1em\",\r\n    b1: \"1em\",\r\n    b2: \"0.9em\",\r\n    b3: \"0.8em\",\r\n  },\r\n  margins: {\r\n    small: \"0.25em\",\r\n    medium: \"0.5em\",\r\n    large: \"1em\",\r\n    xlarge: \"2em\",\r\n  },\r\n  paddings: {\r\n    small: \"0.25em\",\r\n    medium: \"0.5em\",\r\n    large: \"1em\",\r\n    xlarge: \"2em\",\r\n  },\r\n  borderRadius: {\r\n    small: \"4px\",\r\n    medium: \"8px\",\r\n    large: \"20px\",\r\n    circle: \"50%\",\r\n  },\r\n};\r\nconst appThemeService = {\r\n  switchToLightTheme: () =>\r\n    State.update({\r\n      currentAppThemeMode: \"lightMode\",\r\n    }),\r\n  switchToDarkTheme: () =>\r\n    State.update({\r\n      currentAppThemeMode: \"darkMode\",\r\n    }),\r\n  getTheme: () => appTheme,\r\n};\r\n\r\nconst Button = styled.button`\r\n  background: ${appTheme.colors().primary};\r\n  color: ${appTheme.colors().textWhite};\r\n  font-size: ${appTheme.fontSizes.h6};\r\n  margin: ${appTheme.margins.small};\r\n  padding: ${appTheme.paddings.medium};\r\n  width: 100%;\r\n  border: none;\r\n  border-radius: ${appTheme.borderRadius.large};\r\n  align-self: center;\r\n  &:hover{\r\n      background:#333;\r\n  }\r\n`;\r\n\r\nconst Body = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: ${appTheme.colors().backgroundColor};\r\n  align-items: center; \r\n  `;\r\n\r\nconst NavigationBar = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center; \r\n  padding : ${appTheme.paddings.large};\r\n  background-color: ${appTheme.colors().backgroundColor};\r\n  justify-content: center;\r\n`;\r\n\r\nconst ProfileTab = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: ${appTheme.colors().backgroundColor};\r\n  justify-content: center;\r\n  align-items: center; \r\n`;\r\nconst Loader = styled.div`\r\n  width: 48px;\r\n  height: 48px;\r\n  display: block;\r\n  margin: 15px auto;\r\n  position: relative;\r\n  color: #FFD50D;\r\n  box-sizing: border-box;\r\n  animation: rotation 1s linear infinite;\r\n\r\n  &::after,\r\n  &::before {\r\n    content: \"\";\r\n    box-sizing: border-box;\r\n    position: absolute;\r\n    width: 24px;\r\n    height: 24px;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: scale(0.5) translate(0, 0);\r\n    background-color: #FFD50D;\r\n    border-radius: 50%;\r\n    animation: animloader 1s infinite ease-in-out;\r\n  }\r\n  &::before {\r\n    background-color: #4498E0;\r\n    transform: scale(0.5) translate(-48px, -48px);\r\n  }\r\n\r\n  @keyframes rotation {\r\n    0% {\r\n      transform: rotate(0deg);\r\n    }\r\n    100% {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n  @keyframes animloader {\r\n    50% {\r\n      transform: scale(1) translate(-50%, -50%);\r\n    }\r\n  }\r\n`;\r\nconst uiKitComponents = {\r\n  button: Button,\r\n  body: Body,\r\n  navigationBar: NavigationBar,\r\n  profileTab: ProfileTab,\r\n};\r\n\r\nconst routes = {\r\n  moduleA: \"vlmoon.near/widget/BOSModuleA\",\r\n  moduleB: \"vlmoon.near/widget/BOSModuleB\",\r\n  moduleC: \"vlmoon.near/widget/BOSModuleC\",\r\n  moduleD: \"vlmoon.near/widget/BOSModuleD\",\r\n};\r\n\r\nfunction navigateToModule(moduleRoute) {\r\n  State.update({\r\n    currentRoute: moduleRoute,\r\n  });\r\n}\r\n\r\nconst routesNavigator = {\r\n  studentsPage: () => navigateToModule(\"studentsPage\"),\r\n  myTeachersPage: () => navigateToModule(\"myTeachersPage\"),\r\n  myEventsPage: () => navigateToModule(\"myEventsPage\"),\r\n  myTasksPage: () => navigateToModule(\"myTasksPage\"),\r\n};\r\n\r\nfunction getModuleDependencies(moduleRoute) {\r\n  if (moduleRoute === \"studentsPage\") {\r\n    return [\"studentsPage\"];\r\n  } else if (moduleRoute === \"myTeachersPage\") {\r\n    return [\"myTeachersPage\"];\r\n  } else if (moduleRoute === \"myEventsPage\") {\r\n    return [\"myEventsPage\"];\r\n  } else if (moduleRoute === \"myTasksPage\") {\r\n    return [\"myTasksPage\"];\r\n  }\r\n}\r\nconst dependencies = getModuleDependencies(state.currentRoute);\r\n\r\n//Pages\r\nconst pages = {\r\n  studentsPage: <></>,\r\n  myTeachersPage: (\r\n    <>\r\n      <h1>My Teachers</h1>\r\n    </>\r\n  ),\r\n};\r\n//\r\n\r\nif (!state.profileName && !state.profileDiscription) {\r\n  return (\r\n    <div\r\n      style={{\r\n        background:\r\n          \"linear-gradient(-45deg, #5F8AFA, #FFFFFF, #FFFFFF, #FFFFFF, #A463B0)\",\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        padding: \"2rem\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n          fontFamily: \"'Manrope', sans-serif\",\r\n        }}\r\n      >\r\n        <h1>Mentor HUB</h1>\r\n        <h2>\r\n          You don't have a profile, if you want to continue, you have to create\r\n          a profile\r\n        </h2>\r\n        <h3>Input your name:</h3>\r\n        <div\r\n          style={{\r\n            marginRight: \"30em\",\r\n          }}\r\n        >\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            style={{\r\n              backgroundColor: \"black\",\r\n              color: \"white\",\r\n            }}\r\n            onChange={(e) => State.update({ creatProfileName: e.target.value })}\r\n          />\r\n        </div>\r\n        <h2>Hello, {state.creatProfileName}</h2>\r\n        <h3>Input your discription</h3>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          style={{\r\n            backgroundColor: \"black\",\r\n            color: \"white\",\r\n            marginRight: \"100em\",\r\n            paddingsRight: \"100px\",\r\n          }}\r\n          onChange={(e) =>\r\n            State.update({ creatProfileDiscription: e.target.value })\r\n          }\r\n        />\r\n        <h2>Your discriprional: {state.creatProfileDiscription}</h2>\r\n        <div\r\n          style={{\r\n            display: flex,\r\n            margin: \"0px 10px\",\r\n            alignItems: center,\r\n          }}\r\n        >\r\n          <Button\r\n            style={{ width: \"100px\" }}\r\n            onClick={TecherPossibilities.initProfile}\r\n          >\r\n            Save change\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/kirrruuusha.near/widget/New-Draft-0", "fact_widget_deployments_id": "8b9438389b274a92102861add7ce01f4", "inserted_timestamp": "2024-06-08T00:07:07.259Z", "modified_timestamp": "2024-06-08T00:07:07.259Z", "__row_index": 4}