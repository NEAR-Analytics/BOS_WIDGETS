{"tx_hash": "AS7CLK1v6SaZBQtqRNmknEN8jgg8Yw64LnTqQENySbpg", "action_id_social": "Hz2DhiT4pPjkcbfvZX3jtiPTyR6jmJ6wYtATBfDazUXR-0-widget", "block_id": 100833705, "block_timestamp": "2023-09-10T20:23:58.127Z", "signer_id": "election.ndctools.near", "widget_name": "NDC.Elections.CandidateItem", "source_code": "const {\n  candidateId,\n  votes,\n  winnerIds,\n  myVotes,\n  typ,\n  handleCountCandidates,\n  handleModals,\n  iahToken,\n  blacklisted,\n  electionStatus,\n} = props;\n\nconst widgets = {\n  voters: \"election.ndctools.near/widget/NDC.Elections.Voters\",\n  styledComponents: \"nomination.ndctools.near/widget/NDC.StyledComponents\",\n};\n\nconst apiKey = \"36f2b87a-7ee6-40d8-80b9-5e68e587a5b5\";\n\nconst Container = styled.div`\n  position: relative:\n  font-family: Avenir;\n  font-size: 16px;\n`;\n\nconst StyledLink = styled.a`\n  color: inherit !important;\n  width: 215px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  font-size: 14px;\n  padding-top: 2px;\n\n  @media (max-width: 400px) {\n    width: 120px;\n  }\n`;\n\nconst UserIcons = styled.div`\n  width: 20px;\n  color: ${(props) => (props.selected && !props.winnerId ? \"#fff\" : \"black\")};\n`;\n\nconst CandidateItemRow = styled.div`\n  @media (max-width: 400px) {\n    padding: 0 10px !important;\n  }\n\n  padding: 0 20px;\n  height: 48px;\n  border-radius: 12px;\n  margin-bottom: 8px;\n  border: 1px solid;\n  background: ${(props) =>\n    props.winnerId\n      ? \"rgb(206 233 207)\"\n      : props.selected\n      ? \"#4aa6ee\"\n      : \"#F8F8F9\"};\n  border-color: ${(props) =>\n    props.winnerId\n      ? \"rgb(137 201 139)\"\n      : props.selected\n      ? \"#4aa6ee\"\n      : \"#F8F8F9\"};\n      color: ${(props) =>\n        props.selected && !props.winnerId ? \"#fff\" : \"inherit\"};\n\n  small span {\n    color: ${(props) =>\n      props.selected && !props.winnerId ? \"#fff\" : \"inherit\"};\n  }\n\n  &:hover {\n    background: ${(props) =>\n      props.winnerId\n        ? \"rgb(206 233 207)\"\n        : props.selected\n        ? \"#4aa6ee\"\n        : \"#d4e4f461\"};\n  }\n\n  .form-check-input:checked {\n    background-color: ${(props) =>\n      props.winnerId ? \"#239f28\" : \"#0d6efd\"} !important;\n    border-color: ${(props) =>\n      props.winnerId ? \"#239f28\" : \"#0d6efd\"} !important;\n`;\n\nconst Bookmark = styled.div`\n  width: 40px;\n  cursor: pointer;\n\n  #bookmark.bi-bookmark-fill {\n    color: ${(props) =>\n      props.winnerId ? \"#198754\" : props.selected ? \"#fff\" : \"#4498E0\"};\n  }\n\n  @media (max-width: 400px) {\n    width: auto;\n    margin-right: 15px;\n  }\n`;\n\nconst Expand = styled.div`\n  width: 35px;\n  cursor: pointer;\n\n  @media (max-width: 400px) {\n    width: 20px;\n    margin-right: 10px;\n  }\n`;\n\nconst Votes = styled.div`\n  width: 15px;\n`;\n\nconst NominationLink = styled.div`\n  display: block;\n\n  @media (max-width: 400px) {\n    display: none;\n  }\n`;\n\nconst InfoRow = styled.div`\n  gap: 45px;\n\n  @media (max-width: 768px) {\n    gap: 35px;\n  }\n\n  @media (max-width: 400px) {\n    gap: 20px;\n  }\n`;\n\nconst NominationLinkMobile = styled.div`\n  display: none;\n\n  @media (max-width: 400px) {\n    display: block;\n  }\n`;\n\nconst Icon = styled.i`\n  font-size: 14px;\n`;\n\nconst Winner = styled.i`\n  margin-left: 10px;\n  font-size: 14px;\n`;\n\nconst Section = styled.div`\n  gap: 8px;\n  margin-bottom: 10px;\n`;\n\nconst currentUser = context.accountId;\n\nconst alreadyVoted = (candidateId) =>\n  myVotes.some((voter) => voter.candidate === candidateId);\n\nconst alreadyVotedForHouse = () => myVotes.some((voter) => voter.house === typ);\n\nconst handleSelect = (candidateId) => {\n  handleModals();\n\n  const selectedItems = state.selectedCandidates.includes(candidateId)\n    ? state.selectedCandidates.filter((el) => el !== candidateId)\n    : [...state.selectedCandidates, candidateId];\n  const currentVotes = seats - myVotesForHouse().length - selectedItems.length;\n  if (currentVotes < 0) return;\n\n  handleCountCandidates(currentVotes);\n  State.update({ selectedCandidates: selectedItems });\n\n  return true;\n};\n\nconst selectedBookmarks = (candidateId) => {\n  let selectedItems = state.bookmarked.includes(candidateId)\n    ? state.bookmarked.filter((el) => el !== candidateId)\n    : [...state.bookmarked, candidateId];\n\n  return [...new Set(selectedItems)];\n};\n\nconst handleBookmarkCandidate = (candidateId) => {\n  let selectedItems = selectedBookmarks(candidateId);\n  State.update({ loading: candidateId });\n\n  Social.set(\n    {\n      index: {\n        [currentUser]: JSON.stringify({\n          key: `${ndcOrganization}/${typ}`,\n          value: selectedBookmarks(candidateId),\n        }),\n      },\n    },\n    {\n      force: true,\n      onCommit: () => {\n        if (selectedItems.length === 0)\n          State.update({ selectedCandidates: result });\n\n        State.update({\n          loading: false,\n          reload: false,\n          bookmarked: selectedBookmarks(candidateId),\n        });\n      },\n      onCancel: () => State.update({ loading: false, reload: false }),\n    }\n  );\n};\n\nfunction loadSocialDBData() {\n  let _bookmarked = Social.index(currentUser, `${ndcOrganization}/${typ}`);\n  const bookmarked =\n    _bookmarked && _bookmarked[_bookmarked.length - 1]\n      ? _bookmarked[_bookmarked.length - 1].value\n      : [];\n  State.update({ bookmarked });\n}\n\nconst myVotesForHouse = () => myVotes.filter((vote) => vote.house === typ);\nconst isVisible = () => myVotesForHouse().length > 0 || winnerIds.length > 0;\n\nState.init({\n  reload: true,\n  loading: false,\n  selected: null,\n  bookmarked: [],\n  selectedCandidates: [],\n  candidates: result,\n});\n\nconst UserLink = ({ title, src, selected, winnerId }) => (\n  <div className=\"d-flex mr-3\">\n    <StyledLink href={src} target=\"_blank\">\n      <Widget\n        src=\"mob.near/widget/Profile.ShortInlineBlock\"\n        props={{ accountId: title, tooltip: false }}\n      />\n    </StyledLink>\n    <UserIcons\n      selected={selected}\n      winnerId={winnerId}\n      className=\"d-flex align-items-center\"\n    >\n      <Icon className=\"bi bi-arrow-up-right\" />\n      {winnerIds.includes(title) && (\n        <Winner className=\"bi bi-trophy-fill p-1 text-success\" />\n      )}\n    </UserIcons>\n  </div>\n);\n\nconst Loader = () => (\n  <span\n    className=\"spinner-grow spinner-grow-sm me-1\"\n    role=\"status\"\n    aria-hidden=\"true\"\n  />\n);\n\nconst ALink = ({ title, href }) => (\n  <a href={href} target={\"_blank\"} rel={\"noopener\"}>\n    {title}\n  </a>\n);\n\nloadSocialDBData();\n\nreturn (\n  <div>\n    <CandidateItemRow\n      className=\"d-flex align-items-center justify-content-between\"\n      selected={state.selected === candidateId}\n      winnerId={winnerIds.includes(candidateId)}\n    >\n      <div className=\"d-flex w-100 align-items-center\">\n        {isVisible() && (\n          <Expand>\n            <i\n              className={`${\n                state.selected === candidateId\n                  ? \"bi bi-chevron-down\"\n                  : \"bi bi-chevron-right\"\n              }`}\n              onClick={(e) =>\n                State.update({\n                  selected: state.selected === candidateId ? null : candidateId,\n                  reload: false,\n                })\n              }\n            />\n          </Expand>\n        )}\n\n        {iahToken && (\n          <Bookmark\n            selected={state.selected === candidateId}\n            winnerId={winnerIds.includes(candidateId)}\n          >\n            {state.loading === candidateId ? (\n              <Loader />\n            ) : (\n              <i\n                id=\"bookmark\"\n                onClick={() => handleBookmarkCandidate(candidateId)}\n                className={`bi ${\n                  state.bookmarked.includes(candidateId)\n                    ? \"bi-bookmark-fill\"\n                    : \"bi-bookmark\"\n                }`}\n              />\n            )}\n          </Bookmark>\n        )}\n        <div className=\"d-flex align-items-center\">\n          <div className=\"d-flex justify-items-center\">\n            <UserLink\n              selected={state.selected === candidateId}\n              winnerId={winnerIds.includes(candidateId)}\n              src={`https://near.org/near/widget/ProfilePage?accountId=${candidateId}`}\n              title={candidateId}\n            />\n          </div>\n        </div>\n      </div>\n      <InfoRow\n        className={`d-flex w-100 align-items-center ${\n          iahToken ? \"justify-content-center\" : \"justify-content-end\"\n        }`}\n      >\n        <NominationLink>\n          <Widget\n            src={widgets.styledComponents}\n            props={{\n              Link: {\n                size: \"sm\",\n                className: winnerIds.includes(candidateId)\n                  ? \"secondary success\"\n                  : \"secondary dark\",\n                text: \"Nomination\",\n                icon: <i className=\"bi bi-box-arrow-up-right\" />,\n                href: `https://near.org/nomination.ndctools.near/widget/NDC.Nomination.Candidate.Page?house=${typ}&accountId=${candidateId}`,\n                inverse: state.selected === candidateId,\n              },\n            }}\n          />\n        </NominationLink>\n        <NominationLinkMobile>\n          <Widget\n            src={widgets.styledComponents}\n            props={{\n              Link: {\n                size: \"sm\",\n                className: winnerIds.includes(candidateId)\n                  ? \"secondary success\"\n                  : \"secondary dark\",\n                text: \"\",\n                icon: <i className=\"bi bi-box-arrow-up-right\" />,\n                href: `https://near.org/nomination.ndctools.near/widget/NDC.Nomination.Candidate.Page?house=HouseOfMerit&accountId=${candidateId}`,\n                inverse: state.selected === candidateId,\n              },\n            }}\n          />\n        </NominationLinkMobile>\n        {isVisible() && <Votes>{votes}</Votes>}\n        {iahToken && (\n          <Votes>\n            <input\n              id=\"input\"\n              disabled={\n                alreadyVotedForHouse() ||\n                blacklisted ||\n                electionStatus !== \"ONGOING\"\n              }\n              onClick={() => handleSelect(candidateId)}\n              className=\"form-check-input\"\n              type=\"checkbox\"\n              checked={\n                state.selectedCandidates.includes(candidateId) ||\n                alreadyVoted(candidateId)\n              }\n            />\n          </Votes>\n        )}\n      </InfoRow>\n    </CandidateItemRow>\n\n    {state.selected === candidateId && isVisible() && (\n      <Widget\n        src={widgets.voters}\n        props={{ candidateId, electionContract, iahToken, ids }}\n      />\n    )}\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/election.ndctools.near/widget/NDC.Elections.CandidateItem", "fact_widget_deployments_id": "0329b6497e343dcb2453c66b242a9ff3", "inserted_timestamp": "2023-09-10T22:25:34.542Z", "modified_timestamp": "2023-09-10T22:25:34.542Z", "__row_index": 0}