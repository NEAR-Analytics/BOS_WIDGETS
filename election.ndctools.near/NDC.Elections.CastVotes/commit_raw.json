{"tx_hash": "67zF59PYHGbJamrZ3ijpwTREzEaqGKEGTf7W2qJCjyC5", "action_id_social": "HyTqGvh69vGJduT6QDPqm2st1kFx3zSLcuJ68r25s3tR-0-widget", "block_id": 100598537, "block_timestamp": "2023-09-07T15:41:57.489Z", "signer_id": "election.ndctools.near", "widget_name": "NDC.Elections.CastVotes", "source_code": "const {\n  winnerIds,\n  typ,\n  result,\n  seats,\n  myVotes,\n  blacklisted,\n  selectedCandidates,\n  handleCast,\n  handleSelectCandidate,\n  handleResetSelection,\n  handleVote,\n} = props;\n\nconst widgets = {\n  voters: \"election.ndctools.near/widget/NDC.Elections.Voters\",\n  styledComponents: \"nomination.ndctools.near/widget/NDC.StyledComponents\",\n  modal: \"nomination.ndctools.near/widget/NDC.Modal\",\n  verifyHuman: \"nomination.ndctools.near/widget/NDC.VerifyHuman\",\n  budget: \"election.ndctools.near/widget/NDC.Elections.BudgetPackage\",\n};\n\nconst housesMapping = {\n  CouncilOfAdvisors: \"Council Of Advisors\",\n  HouseOfMerit: \"House of Merit\",\n  TransparencyCommission: \"Transparency Commission\",\n  SetupPackage: \"Budget Package\",\n};\n\nconst CastVotesSection = styled.div`\n  background: #fdfeff;\n  box-shadow: 0px 0px 30px rgba(0, 0, 0, 0.2);\n  border-radius: 8px;\n  padding: 16px;\n\n  @media (max-width: 400px) {\n    flex-direction: column;\n  }\n\n  .wrapper {\n    @media (max-width: 400px) {\n      width: 100%;\n    }\n  }\n\n  button {\n    @media (max-width: 400px) {\n      width: 100%;\n    }\n  }\n\n  h3,\n  h4 {\n    margin: 0 3px;\n  }\n\n  h3 {\n    font-weight: 900;\n  }\n\n  .text-secondary {\n    margin: 0 10px;\n  }\n\n  &.not-verified {\n    h4 {\n      font-size: 16px;\n      margin: 0 0 5px 0;\n      font-weight: 600;\n    }\n\n    h5 {\n      margin: 0;\n      font-size: 12px;\n    }\n  }\n`;\n\nconst Info = styled.i`\n  font-size: 12px;\n  margin: 0 !important;\n`;\n\nconst ActionSection = styled.div`\n  @media (max-width: 400px) {\n    width: 100%;\n  }\n`;\n\nconst H4 = styled.h4`\n  margin-bottom: 0;\n`;\n\nconst H3 = styled.h3`\n  margin-bottom: 0;\n`;\nconsole.log(winnerIds);\nconst isBudgetWinner = (item) =>\n  result.sort((a, b) => b[1] - a[1])[0][0] === item;\n\nfunction alreadyVotedForHouse() {\n  return myVotes.some((voter) => voter.house === typ);\n}\n\nconst alreadyVoted = (candidateId) =>\n  myVotes.some((voter) => voter.candidate === candidateId);\n\nconst myVotesForHouse = () => myVotes.filter((vote) => vote.house === typ);\n\nconst CastVotes = () => (\n  <CastVotesSection className=\"d-flex align-items-center justify-content-between gap-3\">\n    <div className=\"wrapper\">\n      <div className=\"d-flex align-items-end\">\n        <H3>\n          {alreadyVotedForHouse()\n            ? 0\n            : seats - myVotesForHouse().length - selectedCandidates.length}\n        </H3>\n        <span>/</span>\n        <H4>{seats}</H4>\n        <span className=\"text-secondary\">votes left</span>\n      </div>\n      <Info className=\"text-secondary\">\n        <i class=\"bi bi-info-circle\"></i>\n        {alreadyVotedForHouse() ? (\n          <span>You've already voted for {housesMapping[typ]}</span>\n        ) : blacklisted ? (\n          <span>Your account is blacklisted</span>\n        ) : (\n          <span>Make sure you selected {seats} candidates</span>\n        )}\n      </Info>\n    </div>\n    <ActionSection className=\"d-flex gap-2\">\n      {selectedCandidates.length > 0 && (\n        <Widget\n          src={widgets.styledComponents}\n          props={{\n            Button: {\n              className: \"secondary dark justify-content-center text-nowrap\",\n              text: \"Reset Selection\",\n              onClick: handleResetSelection,\n            },\n          }}\n        />\n      )}\n      <Widget\n        src={widgets.styledComponents}\n        props={{\n          Button: {\n            className: \"primary justify-content-center\",\n            disabled: selectedCandidates.length === 0 || blacklisted,\n            text: `Cast ${selectedCandidates.length || \"\"} Vote${\n              selectedCandidates.length === 1 ? \"\" : \"s\"\n            }`,\n            onClick: handleCast,\n          },\n        }}\n      />\n    </ActionSection>\n  </CastVotesSection>\n);\nconst CastBudgetVote = () => (\n  <CastVotesSection className=\"d-flex align-items-center justify-content-between gap-3\">\n    <div className=\"wrapper\">\n      <div className=\"d-flex align-items-end\">\n        <H3>{alreadyVotedForHouse() ? 0 : 1}</H3>\n        <span>/</span>\n        <H4>{seats}</H4>\n        <span className=\"text-secondary\">votes left</span>\n      </div>\n      <Info className=\"text-secondary\">\n        {alreadyVotedForHouse() && (\n          <>\n            <i class=\"bi bi-info-circle\"></i>\n            <span>You've already voted for budget package</span>\n          </>\n        )}\n      </Info>\n    </div>\n    <ActionSection className=\"d-flex gap-2\">\n      <Widget\n        src={widgets.styledComponents}\n        props={{\n          Button: {\n            text:\n              winnerIds.length > 0\n                ? `Yes - ${result.find((item) => item[0] === \"yes\")[1]}`\n                : \"Yes\",\n            className: \"primary success justify-content-center\",\n            icon: winnerIds.length === 0 && (\n              <i className=\"bi bi-hand-thumbs-up\" />\n            ),\n            disabled:\n              blacklisted ||\n              (winnerIds.length > 0 && !isBudgetWinner(\"yes\")) ||\n              (alreadyVotedForHouse() && !alreadyVoted(\"yes\")),\n            onClick: () => {\n              if (winnerIds.length > 0 || alreadyVoted(\"yes\")) return;\n\n              const res = handleSelectCandidate(\"yes\");\n              if (res) handleVote();\n            },\n          },\n        }}\n      />\n      <Widget\n        src={widgets.styledComponents}\n        props={{\n          Button: {\n            text:\n              winnerIds.length > 0\n                ? `No - ${result.find((item) => item[0] === \"no\")[1]}`\n                : \"No\",\n            className: \"primary danger justify-content-center\",\n            icon: winnerIds.length === 0 && (\n              <i className=\"bi bi-hand-thumbs-down\" />\n            ),\n            disabled:\n              blacklisted ||\n              (winnerIds.length > 0 && !isBudgetWinner(\"no\")) ||\n              (alreadyVotedForHouse() && !alreadyVoted(\"no\")),\n            onClick: () => {\n              if (winnerIds.length > 0 || alreadyVoted(\"no\")) return;\n\n              const res = handleSelectCandidate(\"no\");\n              if (res) handleVote();\n            },\n          },\n        }}\n      />\n      <Widget\n        src={widgets.styledComponents}\n        props={{\n          Button: {\n            text:\n              winnerIds.length > 0\n                ? `Abstain - ${result.find((item) => item[0] === \"abstain\")[1]}`\n                : \"Abstain\",\n            className: \"primary justify-content-center\",\n            icon: winnerIds.length === 0 && <i className=\"bi bi-x-lg\" />,\n            disabled:\n              blacklisted ||\n              (winnerIds.length > 0 && !isBudgetWinner(\"abstain\")) ||\n              (alreadyVotedForHouse() && !alreadyVoted(\"abstain\")),\n            onClick: () => {\n              if (winnerIds.length > 0 || alreadyVoted(\"abstain\")) return;\n\n              const res = handleSelectCandidate(\"abstain\");\n              if (res) handleVote();\n            },\n          },\n        }}\n      />\n    </ActionSection>\n  </CastVotesSection>\n);\n\nreturn <>{typ === \"SetupPackage\" ? <CastBudgetVote /> : <CastVotes />}</>;\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/election.ndctools.near/widget/NDC.Elections.CastVotes", "fact_widget_deployments_id": "09f76ea0ca91530c856a284ed33bfd8b", "inserted_timestamp": "2023-09-07T17:37:57.877Z", "modified_timestamp": "2023-09-07T17:37:57.877Z", "__row_index": 4}