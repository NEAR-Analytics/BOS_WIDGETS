{"tx_hash": "8MDdCXgW9EaM2NhA4Vvq9sCEDsN1RbyRaQdeWsedF6C2", "action_id_social": "D3MbpZDnucySiC4QWyqdH3E5wyx23NoHZt1fRGhn6JLK-0-widget", "block_id": 99643485, "block_timestamp": "2023-08-25T18:17:25.424Z", "signer_id": "election.ndctools.near", "widget_name": "NDC.Elections.Main", "source_code": "let { ids, org } = props;\n\nids = props.ids ? ids : [1, 2, 3, 4];\norg = props.org ? org : \"test\"; // for testing purposes\n\nconst electionContract = \"elections-v1.gwg-testing.near\";\nconst registryContract = \"registry-v1.gwg-testing.near\";\nconst apiKey = \"36f2b87a-7ee6-40d8-80b9-5e68e587a5b5\";\n\nlet houses = [\n  Near.view(electionContract, \"proposal\", { prop_id: ids[0] }),\n  Near.view(electionContract, \"proposal\", { prop_id: ids[1] }),\n  Near.view(electionContract, \"proposal\", { prop_id: ids[2] }),\n];\n\n// TODO: uncomment when contract is done\n// let budget = Near.view(electionContract, \"proposal\", { prop_id: ids[3] });\nlet budget = {\n  id: 4,\n  typ: \"BudgetPackage\",\n  seats: 1,\n};\n\nState.init({\n  selectedHouse: ids[0],\n  humanVoted: 0,\n  myVotes: [],\n  isIAmHuman: false,\n  candidateId: \"\",\n});\n\nconst isHuman = Near.view(registryContract, \"is_human\", {\n  account: context.accountId,\n});\n\nconst getWinnerIds = () => {\n  const house = houses.find((h) => h.id === state.selectedHouse);\n  const now = new Date().getTime();\n  const end = new Date(parseInt(house.end)).getTime();\n\n  if (now < end) return [];\n\n  const res = house.result.sort((a, b) => b[1] - a[1]);\n  const winners = house.result.filter((item) => item[1] === res[0][1]);\n\n  return winners.slice(0, house.quorum).map((w) => w[0]);\n};\n\nState.update({ isIAmHuman: isHuman[0][1].length > 0 });\n\nconst totalHumal = 3000;\n\nasyncFetch(\n  `https://api.pikespeak.ai/election/total-voters?contract=${electionContract}`,\n  { headers: { \"x-api-key\": apiKey } }\n).then((resp) => {\n  if (resp.body) State.update({ humanVoted: resp.body });\n});\n\nif (context.accountId)\n  asyncFetch(\n    `https://api.pikespeak.ai/election/votes-by-voter?voter=${context.accountId}&contract=${electionContract}`,\n    { headers: { \"x-api-key\": apiKey } }\n  ).then((resp) => {\n    if (resp.body) State.update({ myVotes: resp.body });\n  });\n\nconst widgets = {\n  header: \"election.ndctools.near/widget/NDC.Elections.Header\",\n  filter: \"election.ndctools.near/widget/NDC.Elections.Filter\",\n  houses: \"election.ndctools.near/widget/NDC.Elections.Houses\",\n  budget: \"election.ndctools.near/widget/NDC.Elections.BudgetPackage\",\n  progress: \"election.ndctools.near/widget/NDC.Elections.Progress\",\n  candidates: \"election.ndctools.near/widget/NDC.Elections.Candidates\",\n  statistic: \"election.ndctools.near/widget/NDC.Elections.Statistic\",\n  activities: \"election.ndctools.near/widget/NDC.Elections.Activities\",\n};\n\nconst handleSelect = (item) => {\n  State.update({ selectedHouse: item.id });\n};\n\nconst handleFilter = (e) => State.update({ candidateId: e.target.value });\n\nconst votesLeft = (house) =>\n  house.seats - state.myVotes.filter((vote) => vote.house === house.typ).length;\n\nconst Container = styled.div`\n  padding: 20px 0;\n`;\n\nconst ActivityContainer = styled.div`\n  overflow-y: scroll;\n`;\n\nconst Left = styled.div`\n  padding: 20px;\n  background: #f8f8f9;\n  border-radius: 8px;\n`;\n\nconst Filter = styled.div`\n  margin-top: 32px;\n`;\n\nconst Right = styled.div`\n  padding: 20px;\n  margin-bottom: 20px;\n  background: #f8f8f9;\n  border-radius: 8px;\n`;\n\nconst H5 = styled.h5`\n  margin-bottom: 20px;\n`;\n\nreturn (\n  <>\n    <div>\n      {houses.map((house) => (\n        <>\n          {house.id === state.selectedHouse && (\n            <Widget\n              key={i}\n              src={widgets.header}\n              props={{\n                startTime: house.start,\n                endTime: house.end,\n                type: \"Election\",\n                isWhistleblower: true,\n              }}\n            />\n          )}\n        </>\n      ))}\n      {budget.id !== state.selectedHouse && (\n        <Filter>\n          <Widget\n            src={widgets.filter}\n            props={{\n              handleFilter,\n              candidateId: state.candidateId,\n              placeholder: \"Search by candidate name\",\n            }}\n          />\n        </Filter>\n      )}\n      <Container className=\"d-flex row\">\n        <Left className=\"h-screen col-lg d-flex flex-column justify-content-between\">\n          <div>\n            <H5>To Vote</H5>\n            <Widget\n              src={widgets.houses}\n              props={{\n                selectedHouse: state.selectedHouse,\n                houses: [...houses, budget],\n                handleSelect,\n                votesLeft: (house) => votesLeft(house),\n              }}\n            />\n          </div>\n          <Widget\n            src={widgets.progress}\n            props={{\n              houses: [...houses, budget],\n              handleSelect,\n              votesLeft: (house) => votesLeft(house),\n            }}\n          />\n        </Left>\n        <div className=\"col-lg-6 p-2 p-md-3\">\n          {houses.map((house) => (\n            <>\n              {house.id === state.selectedHouse && (\n                <Widget\n                  key={i}\n                  src={widgets.candidates}\n                  props={{\n                    electionContract,\n                    registryContract,\n                    ndcOrganization: org,\n                    isIAmHuman: state.isIAmHuman,\n                    myVotes: state.myVotes,\n                    candidateId: state.candidateId,\n                    winnerIds: getWinnerIds(),\n                    ...house,\n                  }}\n                />\n              )}\n            </>\n          ))}\n          {budget.id === state.selectedHouse && (\n            <Widget\n              src={widgets.budget}\n              props={{\n                electionContract,\n                registryContract,\n                myVotes: state.myVotes,\n                isIAmHuman: state.isIAmHuman,\n                ...budget,\n              }}\n            />\n          )}\n        </div>\n\n        <div className=\"col-lg\">\n          <Right className=\"col\">\n            <H5>General</H5>\n            <div className=\"d-flex justify-content-center\">\n              <Widget\n                src={widgets.statistic}\n                props={{\n                  voted: state.humanVoted,\n                  total: totalHumal,\n                }}\n              />\n            </div>\n          </Right>\n          {state.myVotes.length > 0 && (\n            <Right className=\"col\">\n              <H5>My voting activity</H5>\n              <ActivityContainer className=\"d-flex justify-content-center\">\n                <Widget\n                  src={widgets.activities}\n                  props={{ myVotes: state.myVotes }}\n                />\n              </ActivityContainer>\n            </Right>\n          )}\n        </div>\n      </Container>\n    </div>\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/election.ndctools.near/widget/NDC.Elections.Main", "fact_widget_deployments_id": "2a19b1ee99391454b1699bb23103b022", "inserted_timestamp": "2023-08-25T20:22:19.622Z", "modified_timestamp": "2023-08-25T20:22:19.622Z", "__row_index": 256}