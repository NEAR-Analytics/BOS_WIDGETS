{"tx_hash": "2sM3sVBFNFdtFSpGMopdBsB1HijvQ5BVQ8szX9CJ59fd", "action_id_social": "HXTPAmqvyEUD9AHqcqyd4ZMNzhjQkPTRFJxiuatTaAwq-0-widget", "block_id": 111791124, "block_timestamp": "2024-01-31T18:35:43.985Z", "signer_id": "sdks.near", "widget_name": "SDKs.Lens.API.AuthAPI", "source_code": "const $ = VM.require(`sdks.near/widget/Loader`);\nconst { Auth } = $(\"@sdks/lens/queries#alpha\");\nconst { AuthMutations } = $(\"@sdks/lens/mutations#alpha\");\nconst { Interfaces } = $(\"@sdks/lens/definitions#alpha\");\nconst { ApiHelper } = $(\"@sdks/lens/utils#alpha\");\n\nreturn {\n  profiles: (Client, profilesManagedRequest) => {\n    return Client.graphql(Auth.PROFILES_MANAGED_QUERY, {\n      profilesManagedRequest,\n    }).then((payload) => payload.body.data.profilesManaged.items || []);\n  },\n  challenge: (Client, challengeRequest) => {\n    return Client.graphql(Auth.CHALLENGE_QUERY, { challengeRequest }).then(\n      (data) => {\n        return data.body.data.challenge || Interfaces.AUTH_CHALLENGE_INTERFACE;\n      }\n    );\n  },\n  authenticate: (Client, signedAuthChallengeRequest) => {\n    return Client.graphql(AuthMutations.SIGNED_AUTH_CHALLENGE_MUTATION, {\n      signedAuthChallengeRequest,\n    }).then((payload) => {\n      return payload.body.data.authenticate || Interfaces.AUTH_INTERFACE;\n    });\n  },\n  refresh: (Client, refreshTokenRequest) => {\n    return Client.graphql(AuthMutations.REFRESH_TOKEN_MUTATION, { refreshTokenRequest }).then(\n      (payload) => payload.body.data.refresh || Interfaces.AUTH_INTERFACE\n    );\n  },\n  revoke: (Client, revokeAuthenticationRequest) => {\n    return Client.graphql(AuthMutations.REVOKE_AUTHENTICATION_MUTATION, {\n      revokeAuthenticationRequest,\n    }).then((payload) => true);\n  },\n  list: (Client, approvedAuthenticationRequest) => {\n    return Client.graphql(Auth.APPROVED_AUTHENTICATION_QUERY, {\n      approvedAuthenticationRequest: ApiHelper.clean(approvedAuthenticationRequest),\n    }).then((payload) => payload.body.data.approvedAuthentications.items || []);\n  },\n  verify: (Client, verifyRequest) => {\n    return Client.graphql(Auth.VERIFY_TOKEN_QUERY, { verifyRequest }).then(\n      (payload) => payload.body.data.verify == true\n    );\n  },\n};\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/sdks.near/widget/SDKs.Lens.API.AuthAPI", "fact_widget_deployments_id": "25c8324547e63f9faa370bc6998318e1", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 3}