{"tx_hash": "AYt6iySaHfHD226YnokT7paZL2igoPee3qYzB43pbpTp", "action_id_social": "DGowfNgovysL8M8UHpwsTA6QXN59sFtUMFFZWkuLQBW7-0-widget", "block_id": 110645083, "block_timestamp": "2024-01-17T17:02:56.925Z", "signer_id": "sdks.near", "widget_name": "Abstracts.ExternalDependencyAdapter", "source_code": "return (Store, status) => {\n  const API = {\n    name: \"\",\n    instruction: \"\",\n    responses: {},\n    value: \"\",\n    init: () => {\n      Store.init({\n        [API.name]: {\n          ongoingRequest: {},\n          responses: {},\n        },\n      });\n\n      return API;\n    },\n    getRequest: () => {\n      return status[API.name].ongoingRequest;\n    },\n    createRequest: (instruction, value, returnType) => {\n      return {\n        index: status[API.name].responses[instruction]\n          ? Object.keys(status[API.name].responses[instruction]).length\n          : 0,\n        instruction,\n        value,\n        returnType: returnType || \"object\",\n      };\n    },\n    request: (request) => {\n      let newApi = status[API.name];\n      newApi.ongoingRequest = request;\n\n      Store.update({\n        [API.name]: newApi,\n      });\n\n      return new Promise((resolve, reject) => {\n        let newApi = status[API.name];\n\n        if (request.index == 0) {\n          newApi.responses[request.instruction] = {};\n        }\n\n        newApi.responses[request.instruction][request.index] = { resolve };\n        Store.update({ [API.name]: newApi });\n      });\n    },\n    setResponse: (response) => {\n      let parsedResponse = API.parseResponse(response);\n      API.notify(\n        parsedResponse.instruction,\n        parsedResponse.index,\n        parsedResponse.result\n      );\n\n      let newApi = status[API.name];\n      newApi.responses[parsedResponse.instruction][parsedResponse.index] =\n        parsedResponse;\n\n      Store.update({\n        [API.name]: newApi,\n      });\n    },\n    parseResponse: (response) => {\n      return {\n        ...response,\n        result:\n          response.returnType == \"string\"\n            ? response.result\n            : console.log(response.result),\n      };\n    },\n    notify: (instruction, index, result) => {\n      status[API.name].responses[instruction][index].resolve(result);\n    },\n  };\n\n  return API.init();\n};\n", "metadata": {"platform": "jutsu.ai"}, "branch": {"draft": null}, "widget_modules_used": null, "widget_url": "https://near.social/#/sdks.near/widget/Abstracts.ExternalDependencyAdapter", "fact_widget_deployments_id": "879200b49b4ac4b6d70cd6d558213f46", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}