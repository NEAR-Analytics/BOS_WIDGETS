{"tx_hash": "FkwbFPMS3CZw7X1oBQ5YH9pxWMpLK6LfZBPGbqkEaZQk", "action_id_social": "6JC76JgCSxZsGQJMei4RbTf18Dv7U15MtGC8n1mSCdeQ-0-widget", "block_id": 111559892, "block_timestamp": "2024-01-28T22:55:12.307Z", "signer_id": "sdks.near", "widget_name": "SDKs.Lens.API.ProfileAPI", "source_code": "const $ = VM.require(`sdks.near/widget/Loader`);\nconst { Profile } = $(\"@sdks/lens/queries#alpha\");\nconst { ProfileMutations } = $(\"@sdks/lens/mutations#alpha\");\nconst { ApiHelper } = $(\"@sdks/lens/helpers#alpha\");\n\nreturn {\n  create: (Client, createProfileRequest) => {\n    return Client.graphql(ProfileMutations.CREATE_PROFILE_MUTATION, {\n      createProfileRequest,\n    }).then((payload) => payload.body || {});\n  },\n  fetch: (Client, profileRequest) => {\n    return Client.graphql(Profile.PROFILE_QUERY, {\n      profileRequest: ApiHelper.clean(profileRequest),\n    }).then((payload) => payload.body.data.profile || {});\n  },\n  fetchAll: (Client, profilesRequest) =>\n    Client.graphql(Profile.PROFILES_QUERY, {\n      profilesRequest: ApiHelper.clean({\n        ...profilesRequest,\n        where: {\n          ...ApiHelper.clean(profilesRequest.where),\n        },\n      }),\n    }).then((payload) => {\n      return {\n        profiles: payload.body.data.items || [],\n        pagination: payload.body.data.pageInfo || {},\n      };\n    }),\n  stats: (Client, profileStatsRequest) =>\n    Client.graphql(Profile.PROFILE_STATS_QUERY, profileStatsRequest).then(\n      (payload) => payload.body.data.stats || {}\n    ),\n  recommendations: (Client, profileRecommendationsRequest) =>\n    Client.graphql(Profile.PROFILE_RECOMMENDATIONS_QUERY, {\n      profileRecommendationsRequest,\n    }).then((payload) => {\n      return {\n        profiles: payload.body.data.items || {},\n        pagination: payload.body.data.pageInfo || {},\n      };\n    }),\n  interests: (Client, profileInterestsRequest) =>\n    Client.graphql(Profile.PROFILE_INTERESTS_QUERY, {\n      profileInterestsRequest,\n    }).then((payload) => payload.body.data.profileInterests || []),\n  report: (Client, reportProfileRequest) =>\n    Client.graphql(ProfileMutations.PROFILE_REPORT_MUTATION, {\n      reportProfileRequest,\n    }).then((payload) => \"\"),\n  block: (Client, blockProfileRequest) =>\n    Client.graphql(ProfileMutations.PROFILE_BLOCK_MUTATION, {\n      blockProfileRequest,\n    }).then((payload) => payload.body || {}),\n  history: (Client, profileActionHistoryRequest) =>\n    Client.graphql(Profile.PROFILE_ACTION_HISTORY_QUERY, {\n      profileActionHistoryRequest,\n    }).then((payload) => {\n      return {\n        history: payload.body.data.items || [],\n        pagination: payload.body.data.pageInfo || {},\n      };\n    }),\n  onChainIdentity: (Client, profileOnChainIdentityRequest) =>\n    Client.graphql(\n      Profile.PROFILE_ONCHAIN_IDENTITY_QUERY,\n      profileOnChainIdentityRequest\n    ).then((payload) => payload.body.data.profile.onChainIdentity || {}),\n  isFollowedByMe: (Client, profileRequest) =>\n    Client.graphql(Profile.PROFILE_IS_FOLLOWED_BY_ME_QUERY, {\n      profileRequest,\n    }).then((payload) => payload.body.data.profile.isFollowedByMe || false),\n  isFollowingMe: (Client, profileRequest) =>\n    Client.graphql(Profile.PROFILE_IS_FOLLOWING_ME_QUERY, {\n      profileRequest,\n    }).then((payload) => payload.body.data.profile.isFollowingMe || false),\n  canFollow: (Client, profileRequest) =>\n    Client.graphql(Profile.PROFILE_CAN_FOLLOW_QUERY, {\n      profileRequest,\n    }).then((payload) => payload.body.data.profile.canFollow || false),\n  canUnfollow: (Client, profileRequest) =>\n    Client.graphql(Profile.PROFILE_CAN_UNFOLLOW_QUERY, {\n      profileRequest,\n    }).then((payload) => payload.body.data.profile.canUnfollow || false),\n  isBlockedByMe: (Client, profileRequest) =>\n    Client.graphql(Profile.PROFILE_IS_BLOCKED_BY_ME_QUERY, {\n      profileRequest,\n    }).then((payload) => payload.body.data.profile.isBlockedByMe || false),\n  canBlock: (Client, profileRequest) =>\n    Client.graphql(Profile.PROFILE_CAN_BLOCK_QUERY, {\n      profileRequest,\n    }).then((payload) => payload.body.data.profile.canBlock || false),\n  hasBlockedMe: (Client, profileRequest) =>\n    Client.graphql(Profile.PROFILE_HAS_BLOCKED_ME_QUERY, {\n      profileRequest,\n    }).then((payload) => payload.body.data.profile.hasBlockedMe || false),\n  canUnblock: (Client, profileRequest) =>\n    Client.graphql(Profile.PROFILE_CAN_UNBLOCK_QUERY, {\n      profileRequest,\n    }).then((payload) => payload.body.data.profile.canUnblock || false),\n};\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/sdks.near/widget/SDKs.Lens.API.ProfileAPI", "fact_widget_deployments_id": "cec3946daebedab67d9450320ef9dfd5", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}