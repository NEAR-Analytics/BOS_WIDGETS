{"tx_hash": "VCFKRV2tR4kLLEWD21RN7trUa7rVYJ5gMR3ouE5SaVq", "action_id_social": "EQRwn7ajn9t1nM3MdDYAdzi1S7jnVcwjo8k9WANHfYRK-0-widget", "block_id": 110417846, "block_timestamp": "2024-01-14T22:02:12.092Z", "signer_id": "sdks.near", "widget_name": "SDKs.App.Pages.Home", "source_code": "const WIDGET_OWNER = \"sdks.near\";\n\nconst libraries = VM.require(`${WIDGET_OWNER}/widget/Manifest`)[\"libs\"] || [];\n\nState.init({\n  searchTerm: \"\",\n  libraries: [],\n});\n\nif (libraries && state.libraries.length == 0 && !state.searchTerm) {\n  State.update({\n    libraries: Object.keys(libraries),\n  });\n}\n\nconst Box = styled.div`\n    z-index:0;\n    position:relative;\n    width:100%;\n    background-color:#fff;\n`;\n\nconst Shape = styled.div`\n    @keyframes colorize {\n        50% {\n            transform: translateX(15%);\n        }\n        100% {\n            filter: blur(60px) hue-rotate(180deg);transform: translateX(-15%);\n        }\n    }\n\n    position:absolute;\n    z-index:-1;\n    opacity:.6;\n    top:0;\n    left:0;\n    bottom:0;\n    right:0;\n    margin:auto;\n    width:400px;\n    height:400px;\n    transform:rotate(30deg);\n    filter:blur(200px);\n    animation-name:colorize;\n    animation-duration:15s;\n    animation-iteration-count:infinite;\n    animation-fill-mode:both;\n    animation-direction: alternate;\n`;\n\nconst Content = styled.div`\n    z-index:2;\n    max-width:1080px;\n    margin:0 auto;\n`;\n\nconst Header = styled.div`\n    z-index:4;\n    display:flex;\n    justify-content:space-between;\n    align-items:center;\n    padding:20px;\n\n    ul {\n        display:flex;\n        flex-grow:1;\n        padding:0;\n        margin:0;\n        list-style:none;\n        align-items:center;\n        justify-content:center;\n\n        li {\n            :not(:last-of-type) {\n                margin-right:40px;\n            }\n        }\n    }\n`;\n\nconst Jumbotron = styled.div`\n    width:100%;\n    text-align:center;\n    z-index:999999;\n    margin-top:50px;\n\n    * {\n        z-index:999999;\n    }\n\n    p {\n        font-size:3rem;\n        font-weight:bold;\n        text-align:center;\n        margin:0;\n\n        + p {\n            font-size:1.5rem;\n            font-weight:normal;\n            margin: .5rem 0 1.3rem;\n        }\n    }\n\n    .actions {\n        display:flex;\n\n        .secondary {\n            margin-right:20px;\n        }\n\n        .btn-outline-primary {\n            padding: 0 2rem;\n            margin-top:1rem;\n            border:0;\n        }\n    }\n\n`;\n\nconst Search = styled.input`\n    border:0;\n    width:100%;\n    max-width:500px;\n    padding:10px 20px;\n    border-radius:5px;\n    margin-top:15px;\n    border:3px solid rgba(0,0,0,.05);\n    background-color:#fafafa;\n    font-size:1.3rem;\n    font-weight:bold;\n    outline-style:none;\n\n    ::placeholder {\n        font-size:1.3rem;\n        font-weight:bold;\n        color:rgba(0,0,0,.1);\n    }\n`;\n\nconst Libraries = styled.div`\n    display:flex;\n    flex-wrap:wrap;\n    z-index:999999;\n    justify-content:space-between;\n    max-width:750px;\n    margin:40px auto 100px;\n    padding:0 20px;\n`;\n\nconst Library = styled.div`\n    width:350px;\n    height:150px;\n    border-radius:15px;\n    background-color:#f2f2f2;\n    border:3px solid rgba(0,0,0,.05);\n    margin-bottom:20px;\n    padding:15px;\n    text-align:left;\n\n    h2 {\n        font-weight:bold;\n        font-size:1.2rem;\n        padding:0;\n        margin:0;\n    }\n`;\n\nconst QuickStart = styled.div`\n    width:100%;\n    height:80px;\n    border-radius:10px;\n    background-color:#303444;\n    margin-top:15px;\n    color:#fff;\n    padding:10px;\n    font-size:.7rem;\n\n    .type {\n        color:#BC4AE1;\n    }\n\n    .variable {\n        color:#E3CE66;\n    }\n\n    .function {\n        color:#C44E3D;\n    }\n\n    .class {\n        color:#DF2569;\n    }\n\n    .string {\n        color:#7CBC67;\n    }\n`;\n\nconst getLibraryDependencies = (library) => {\n  const dependencies = libraries[library];\n\n  if (Array.isArray(dependencies)) {\n    return dependencies\n      .map((dependency) => dependency.split(\".\").pop())\n      .join(\", \");\n  }\n\n  if (typeof dependencies == \"string\") {\n    return dependencies.split(\".\").pop();\n  }\n\n  if (typeof dependencies == \"object\") {\n    let content = Object.keys(dependencies)\n      .map((module) =>\n        dependencies[module]\n          .map((dependency) => dependency.split(\".\").pop())\n          .join(\", \")\n      )\n      .join(\", \");\n    return content.length >= 30 ? content.substring(0, 30) + \"...\" : content;\n  }\n};\n\nlet views = {\n  home: (\n    <>\n      <Box>\n        <Shape\n          style={{\n            left: \"-20%\",\n            backgroundColor: \"#B3E0F9\",\n          }}\n        />\n        <Shape\n          style={{\n            right: \"-20%\",\n            transform: \"rotate(50deg)\",\n            backgroundColor: \"#B9CCF8\",\n          }}\n        />\n        <Content>\n          <Jumbotron>\n            <p>Explore BOS Libraries.</p>\n            <Search\n              type=\"text\"\n              placeholder=\"Lens Protocol, Ethereum, NEAR...\"\n              onKeyUp={(e) => {\n                const searchTerm = e.target.value;\n\n                if (!searchTerm) {\n                  State.update({\n                    libraries: Object.keys(libraries),\n                    searchTerm,\n                  });\n                  return;\n                }\n\n                State.update({\n                  libraries: Object.keys(libraries).filter((library) =>\n                    library.includes(searchTerm)\n                  ),\n                  searchTerm,\n                });\n              }}\n            />\n            <Libraries>\n              {state.libraries.map((library) => (\n                <Library>\n                  <h2>{library}</h2>\n                  <QuickStart>\n                    <span class=\"type\">const</span>{\" \"}\n                    <span class=\"variable\">$</span> ={\" \"}\n                    <span class=\"function\">VM</span>\n                    <span class=\"type\">.</span>\n                    <span class=\"variable\">require</span>(\n                    <span class=\"string\">\"sdks.near/Loader\"</span>);\n                    <br />\n                    <span class=\"type\">const</span> {\"{\"}{\" \"}\n                    <span class=\"variable\">\n                      {getLibraryDependencies(library)}\n                    </span>{\" \"}\n                    {\"}\"} = <span class=\"function\">$</span>(\n                    <span class=\"string\">\"@sdks/{library}\"</span>);\n                    <br />\n                  </QuickStart>\n                </Library>\n              ))}\n            </Libraries>\n          </Jumbotron>\n        </Content>\n      </Box>\n    </>\n  ),\n};\n\nreturn <>{state.init ? views[\"app\"] : views[\"home\"]}</>;\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/sdks.near/widget/SDKs.App.Pages.Home", "fact_widget_deployments_id": "f177725ea4abc8bf9ecd37d20d039901", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 2}