{"tx_hash": "3i6cFkfc1tdKLtastYgR5H5A29TYcvTvRnEDSWYEYhky", "action_id_social": "2uNKrrAXSwUWLcTo8TvEDEdUHtqk16gKZ1w8ZTzsg924-0-widget", "block_id": 109775671, "block_timestamp": "2024-01-07T00:27:40.332Z", "signer_id": "sdks.near", "widget_name": "SDKs.EthereumSigner.Main", "source_code": "const VERIFIER_CONTRACT = \"0x793ABce859d651C179F2F3B0A47C438dC3D67901\";\nconst ABI = [\n  \"function verifySignature(string memory message, uint8 v, bytes32 r, bytes32 s) public pure returns (address signer)\",\n];\n\nconst EthereumSigner = {\n  sign: (message) => Ethers.provider().getSigner().signMessage(message),\n  verify: (originalMessage, signature, expectedSignerAddress) => {\n    return EthereumSigner.getSignerAddress(originalMessage, signature).then(\n      (address) => {\n        return expectedSignerAddress.toLowerCase() == address.toLowerCase();\n      }\n    ).catch((error) => {\n      return false;\n    });\n  },\n  getSignerAddress: (message, signature) => {\n    const contract = new ethers.Contract(\n      VERIFIER_CONTRACT,\n      ABI,\n      Ethers.provider()\n    );\n\n    const { v, r, s } = ethers.utils.splitSignature(signature);\n\n    return contract.callStatic.verifySignature(message, v, r, s);\n  },\n};\n\nreturn EthereumSigner;\n", "metadata": {"image": {}}, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/sdks.near/widget/SDKs.EthereumSigner.Main", "fact_widget_deployments_id": "4ab75b1ad188ee73009ff6fdfca95229", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 2}