{"tx_hash": "Fwxf4bQibJ8N62gFHEMX51gzuMFc35ZAoSephCfNECQS", "action_id_social": "AvGnSHVBtkx4HShjZ9bVcM1dzAmLjfkWcWeuQVm8Wb6A-0-widget", "block_id": 109764457, "block_timestamp": "2024-01-06T21:11:25.195Z", "signer_id": "sdks.near", "widget_name": "SDKs.EthereumSigner.Main", "source_code": "const VERIFIER_CONTRACT = \"0x793ABce859d651C179F2F3B0A47C438dC3D67901\";\nconst ABI = [\n  \"function verifySignature(string memory message, uint8 v, bytes32 r, bytes32 s) public pure returns (address signer)\",\n];\n\nconst EthereumSigner = {\n  sign: (message) => Ethers.provider().getSigner().signMessage(message),\n  verify: (originalMessage, signature, expectedSignerAddress) => {\n    return EthereumSigner.getSignerAddress(originalMessage, signature).then(\n      (address) => {\n        return expectedSignerAddress.toLowerCase() == address.toLowerCase();\n      }\n    );\n  },\n  getSignerAddress: (message, signature) => {\n    const contract = new ethers.Contract(\n      VERIFIER_CONTRACT,\n      ABI,\n      Ethers.provider()\n    );\n\n    const { v, r, s } = ethers.utils.splitSignature(signature);\n\n    return contract.callStatic.verifySignature(message, v, r, s);\n  },\n};\n\nreturn EthereumSigner;\n", "metadata": {"description": "This library allows anyone to sign and verify messages from Ethereum and any Ethereum L2.\n\nMethods:\n- sign: Requests the user to sign a message (user must have connected his Ethereum Wallet before calling this method)\n- verify: Verifies if a given message meets the expected signer address. For this, it is needed to pass the original message, the signature of the signer, and the expected signer address.\n- getSignerAddress: Gets the signer address of a given message by passing the original message and the signature.", "image": {}, "name": "EthereumSigner", "platform": "jutsu.ai"}, "branch": {"draft": null}, "widget_modules_used": null, "widget_url": "https://near.social/#/sdks.near/widget/SDKs.EthereumSigner.Main", "fact_widget_deployments_id": "f7c9c8c46bfe3ec20921b2710fe3bbf0", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 1}