{"tx_hash": "2sM3sVBFNFdtFSpGMopdBsB1HijvQ5BVQ8szX9CJ59fd", "action_id_social": "HXTPAmqvyEUD9AHqcqyd4ZMNzhjQkPTRFJxiuatTaAwq-0-widget", "block_id": 111791124, "block_timestamp": "2024-01-31T18:35:43.985Z", "signer_id": "sdks.near", "widget_name": "SDKs.Lens.API.SearchAPI", "source_code": "const $ = VM.require(`sdks.near/widget/Loader`);\nconst { Search } = $(\"@sdks/lens/queries#alpha\");\nconst { ApiHelper } = $(\"@sdks/lens/utils#alpha\");\n\nreturn {\n  profiles: (Client, profileSearchRequest) => {\n    return Client.graphql(Search.PROFILE_SEARCH_QUERY, {\n      profileSearchRequest: ApiHelper.clean(profileSearchRequest)\n    }).then((payload) => {\n      return {\n        result: payload.body.data.searchProfiles.items || [],\n        pagination: payload.body.data.searchProfiles.pageInfo || {},\n      };\n    });\n  },\n  publications: (Client, publicationSearchRequest) => {\n    return Client.graphql(Search.PUBLICATION_SEARCH_QUERY, {\n      publicationSearchRequest: ApiHelper.clean(publicationSearchRequest)\n    }).then((payload) => {\n      return {\n        result: payload.body.data.result.items || [],\n        pagination: payload.body.data.result.pageInfo || {},\n      };\n    });\n  },\n};\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/sdks.near/widget/SDKs.Lens.API.SearchAPI", "fact_widget_deployments_id": "c21e4eb2afae2de983bffe3577a895ce", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}