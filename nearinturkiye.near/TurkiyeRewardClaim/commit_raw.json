{"tx_hash": "CXat6uitSzTYTaTbKtqNt3DfCdtnNDxHouHJ8vfxVFZE", "action_id_social": "6T1jNRhJ9BZ7kaimbGbyNphVyEhBw8fof1WePCPkpTHz-0-widget", "block_id": 98145373, "block_timestamp": "2023-08-05T18:24:28.902Z", "signer_id": "nearinturkiye.near", "widget_name": "TurkiyeRewardClaim", "source_code": "const accountId = props.accountId ?? context.accountId;\n\nif (!accountId) {\n  return \"Please connect your NEAR wallet :)\";\n}\n\nconst WIDGET_AUTHOR = \"hack.near\";\nconst daoId = props.daoId ?? \"nearprotocol-turkiye.sputnik-dao.near\";\nconst bountiesPerPage = props.bountiesPerPage ?? 5; // Number of bounties to fetch at a time\n\nState.init({\n  daoId,\n  bounties: [],\n  lastBountyId: null, // To keep track of the last loaded bounty\n  hasMore: true, // Boolean to know if there are more bounties to load\n});\n\nconst loadBounties = () => {\n  const lastBountyId =\n    state.lastBountyId !== null\n      ? state.lastBountyId\n      : Near.view(daoId, \"get_last_bounty_id\");\n  if (lastBountyId === null) return;\n\n  const fromIndex = Math.max(0, lastBountyId - bountiesPerPage + 1); // Ensures fromIndex is never less than 0\n  const limit = fromIndex === 0 ? lastBountyId + 1 : bountiesPerPage; // Ensure we don't fetch the same bounties twice if fromIndex is 0\n\n  const newBounties = Near.view(daoId, \"get_bounties\", {\n    from_index: fromIndex,\n    limit: limit,\n  });\n  if (newBounties === null) return;\n\n  State.update({\n    ...state,\n    hasMore: fromIndex > 0,\n    bounties: [...state.bounties, ...newBounties.reverse()],\n    lastBountyId: fromIndex - 1,\n  });\n};\n\nconst onChangeDAO = (newDaoId) => {\n  State.update({\n    daoId: newDaoId,\n    bounties: [],\n    lastBountyId: null,\n    hasMore: true,\n  });\n};\n\nreturn (\n  <>\n    <div>\n      <h3>NEAR T\u00dcRKIYE \u00d6D\u00dcLLERI \ud83c\udf81 </h3>\n      <div className=\"mb-2\">\n        <input\n          type=\"text\"\n          placeholder=\"nearprotocol-turkiye.sputnik-dao.near\"\n          onChange={(e) => onChangeDAO(e.target.value)}\n        />\n      </div>\n\n      <div>\n        <InfiniteScroll loadMore={loadBounties} hasMore={state.hasMore}>\n          {state.bounties.map((bounty, i) => (\n            <Widget\n              key={i}\n              src={\"hack.near/widget/DAO.Reward\"}\n              props={{ daoId: state.daoId, bounty: bounty }}\n            />\n          ))}\n        </InfiniteScroll>\n      </div>\n    </div>\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/nearinturkiye.near/widget/TurkiyeRewardClaim", "fact_widget_deployments_id": "894db0f8d23f51798cac66a6538ec878", "inserted_timestamp": "2023-08-05T19:32:00.678Z", "modified_timestamp": "2023-08-05T19:32:00.678Z", "__row_index": 2}