{"tx_hash": "EhseNB4e1NM49dZyANSu92XMfnr8VjKBFQ2Pygw6zgdG", "action_id_social": "7r1FPoAz9nrrnbRYVLSG7BrRtcTAGMP34uFBWRkY8Scz-0-widget", "block_id": 101119195, "block_timestamp": "2023-09-14T16:27:29.238Z", "signer_id": "contractwizard.near", "widget_name": "ContractWizardUI", "source_code": "State.init({\n  tokenName: \"\",\n  tokenSymbol: \"\",\n  ftDecimals: 24,\n  nftBaseURI: \"\",\n  authOption: \"noAuth\",\n});\n\nconst Background = styled.div`\n    background-image: radial-gradient(#dad9e8 5%,transparent 0);\n    background-color: #fcfcfc;\n    background-size: 30px 30px;\n    height: 100vh;\n    width: 100%;\n`;\n\nconst StyledWrapper = styled.div`\n    max-width: 1200px;\n    margin: 0 auto;\n    padding: 50px;\n\n  .token-type-desc {\n    margin: 20px 0 30px 0;\n  }\n  .main-content-wrapper {\n    display: flex;\n\n    > div {\n      padding: 20px;\n    }\n\n    .left-side {\n      width: 30%;\n      padding: 0 20px 0 0;\n    }\n\n    .right-side {\n      width: 70%;\n      background-color: #1b1b18;\n      color: white;\n      border-radius: 4px\n    }\n\n    @media(max-width: 800px) {\n        flex-direction: column;\n        \n        .left-side, .right-side {\n            width: 100%;\n        }\n        .right-side {\n            margin-top: 30px;\n        }\n    }\n  }\n\n  h6 {\n    margin: 15px 0;\n  }\n\n  .token-name-wrapper {\n    label {\n        margin-top: 10px;\n    }\n  }\n`;\n\nconst TokenOptionTabs = () => (\n  <Widget\n    src=\"near/widget/DIG.Tabs\"\n    props={{\n      variant: \"line\",\n      size: \"default\",\n      items: [\n        {\n          name: \"Fungible token (FT)\",\n          value: \"1\",\n          content: <FTTokenSelection />,\n          icon: \"ph ph-coins\",\n        },\n        {\n          name: \"Non-Fungible Token (NFT)\",\n          value: \"2\",\n          content: <NFTTokenSelection />,\n          icon: \"ph ph-cards\",\n        },\n      ],\n    }}\n  />\n);\n\nconst FTTokenSelection = () => (\n  <div>\n    <div className=\"token-type-desc\">\n      Implements NEP 141 and NEP 148 token standards\n    </div>\n    <div className=\"main-content-wrapper\">\n      <div className=\"left-side\">\n        <h6>Settings</h6>\n        <div className=\"token-name-wrapper\">\n          <Widget\n            src=\"near/widget/DIG.Input\"\n            props={{\n              label: \"Name\",\n              placeholder: \"MyToken\",\n              onInput: (e) => State.update({ tokenName: e.target.value }),\n              value: state.tokenName,\n            }}\n          />\n          <Widget\n            src=\"near/widget/DIG.Input\"\n            props={{\n              label: \"Symbol\",\n              placeholder: \"MTK\",\n              onInput: (e) => State.update({ tokenSymbol: e.target.value }),\n              value: state.tokenSymbol,\n            }}\n          />\n          <Widget\n            src=\"near/widget/DIG.Input\"\n            type=\"number\"\n            props={{\n              label: \"Premint\",\n              placeholder: \"0\",\n              onInput: (e) => State.update({ tokenSymbol: e.target.value }),\n              value: state.tokenSymbol,\n            }}\n          />\n          <Widget\n            src=\"near/widget/DIG.Input\"\n            type=\"number\"\n            props={{\n              label: \"Decimals\",\n              placeholder: state.ftDecimals,\n              onInput: (e) => State.update({ ftDecimals: e.target.value }),\n              value: state.ftDecimals,\n            }}\n          />\n        </div>\n        <div>\n          <AuthLayer />\n          <BinaryOptions tokenType=\"ft\" />\n        </div>\n      </div>\n      <CodePreview />\n    </div>\n  </div>\n);\n\nconst NFTTokenSelection = () => (\n  <div>\n    <div className=\"token-type-desc\">\n      Implements NEP 171, NEP 177, NEP 178 and NEP 181 token standards\n    </div>\n    <div className=\"main-content-wrapper\">\n      <div className=\"left-side\">\n        <h6>Settings</h6>\n        <div className=\"token-name-wrapper\">\n          <Widget\n            src=\"near/widget/DIG.Input\"\n            props={{\n              label: \"Name\",\n              placeholder: \"MyToken\",\n              onInput: (e) => State.update({ tokenName: e.target.value }),\n              value: state.tokenName,\n            }}\n          />\n          <Widget\n            src=\"near/widget/DIG.Input\"\n            props={{\n              label: \"Symbol\",\n              placeholder: \"MTK\",\n              onInput: (e) => State.update({ tokenSymbol: e.target.value }),\n              value: state.tokenSymbol,\n            }}\n          />\n          <Widget\n            src=\"near/widget/DIG.Input\"\n            props={{\n              label: \"Base URI\",\n              placeholder: \"https://\",\n              onInput: (e) => State.update({ nftBaseURI: e.target.value }),\n              value: state.nftBaseURI,\n            }}\n          />\n        </div>\n        <div>\n          <AuthLayer />\n          <BinaryOptions />\n        </div>\n      </div>\n      <CodePreview />\n    </div>\n  </div>\n);\n\nconst AuthLayer = () => (\n  <>\n    <h6>Access Control</h6>\n    <Widget\n      src=\"near/widget/DIG.InputSelect\"\n      props={{\n        groups: [\n          {\n            label: \"Select option\",\n            items: [\n              {\n                label: \"No Access Control\",\n                value: \"noAuth\",\n              },\n              {\n                label: \"Ownership\",\n                value: \"ownership\",\n              },\n              {\n                label: \"Role-based access control\",\n                value: \"roleBased\",\n              },\n            ],\n          },\n        ],\n        placeholder: \"Select an option\",\n        rootProps: {\n          value: state.authOption,\n          onValueChange: (value) => {\n            State.update({ authOption: value });\n          },\n        },\n      }}\n    />\n  </>\n);\n\nconst CodePreview = () => (\n  <div className=\"right-side\">\n    <pre>console.log(\"Hello, World!\")</pre>\n  </div>\n);\n\nconst BinaryOptions = (props) => (\n  <>\n    <h6>Features</h6>\n    <Widget\n      src=\"near/widget/DIG.Checkbox\"\n      props={{\n        id: \"checkbox-item-burnable\",\n        label: \"Burnable\",\n      }}\n    />\n    <Widget\n      src=\"near/widget/DIG.Checkbox\"\n      props={{\n        id: \"checkbox-item-storageOptions\",\n        label: \"Storage Mgmt Options\",\n      }}\n    />\n    {state.authOption !== \"noAuth\" && (\n      <>\n        <Widget\n          src=\"near/widget/DIG.Checkbox\"\n          props={{\n            id: \"checkbox-item-pausable\",\n            label: \"Pausable\",\n          }}\n        />\n        <Widget\n          src=\"near/widget/DIG.Checkbox\"\n          props={{\n            id: \"checkbox-item-upgradeable\",\n            label: \"Upgradeable\",\n          }}\n        />\n        <Widget\n          src=\"near/widget/DIG.Checkbox\"\n          props={{\n            id: \"checkbox-item-mintable\",\n            label: \"Mintable\",\n          }}\n        />\n      </>\n    )}\n  </>\n);\n\nreturn (\n  <Background>\n    <StyledWrapper>\n      <h1>\n        Token Wizard <i class=\"ph-bold ph-magic-wand\"></i>\n      </h1>\n      <h5>\n        Easily generate complete code snippets for your fungible and\n        non-fungible token contracts.\n      </h5>\n      <TokenOptionTabs />\n    </StyledWrapper>\n  </Background>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/contractwizard.near/widget/ContractWizardUI", "fact_widget_deployments_id": "e1efb59e5485eeb6ad31c63bcacfe8b7", "inserted_timestamp": "2023-09-14T18:29:24.212Z", "modified_timestamp": "2023-09-14T18:29:24.212Z", "__row_index": 31}