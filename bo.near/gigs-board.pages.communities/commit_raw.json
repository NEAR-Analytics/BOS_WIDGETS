{"tx_hash": "FemTC37TQzZVJovGKYGAjz7SvZfuQTSWxU2WyVAn6x9h", "action_id_social": "DhLZjjpW68TkX5yLoyKgeUHWqwtZJcW3fkwzbGWXawCo-0-widget", "block_id": 99479440, "block_timestamp": "2023-08-23T14:35:16.233Z", "signer_id": "bo.near", "widget_name": "gigs-board.pages.communities", "source_code": "/* INCLUDE: \"common.jsx\" */\nconst nearDevGovGigsContractAccountId =\n  props.nearDevGovGigsContractAccountId ||\n  (context.widgetSrc ?? \"devgovgigs.near\").split(\"/\", 1)[0];\n\nconst nearDevGovGigsWidgetsAccountId =\n  props.nearDevGovGigsWidgetsAccountId ||\n  (context.widgetSrc ?? \"devgovgigs.near\").split(\"/\", 1)[0];\n\nfunction widget(widgetName, widgetProps, key) {\n  widgetProps = {\n    ...widgetProps,\n    nearDevGovGigsContractAccountId: props.nearDevGovGigsContractAccountId,\n    nearDevGovGigsWidgetsAccountId: props.nearDevGovGigsWidgetsAccountId,\n    referral: props.referral,\n  };\n\n  return (\n    <Widget\n      src={`${nearDevGovGigsWidgetsAccountId}/widget/gigs-board.${widgetName}`}\n      props={widgetProps}\n      key={key}\n    />\n  );\n}\n\nfunction href(widgetName, linkProps) {\n  linkProps = { ...linkProps };\n\n  if (props.nearDevGovGigsContractAccountId) {\n    linkProps.nearDevGovGigsContractAccountId =\n      props.nearDevGovGigsContractAccountId;\n  }\n\n  if (props.nearDevGovGigsWidgetsAccountId) {\n    linkProps.nearDevGovGigsWidgetsAccountId =\n      props.nearDevGovGigsWidgetsAccountId;\n  }\n\n  if (props.referral) {\n    linkProps.referral = props.referral;\n  }\n\n  const linkPropsQuery = Object.entries(linkProps)\n    .filter(([_key, nullable]) => (nullable ?? null) !== null)\n    .map(([key, value]) => `${key}=${value}`)\n    .join(\"&\");\n\n  return `/#/${nearDevGovGigsWidgetsAccountId}/widget/gigs-board.pages.${widgetName}${\n    linkPropsQuery ? \"?\" : \"\"\n  }${linkPropsQuery}`;\n}\n/* END_INCLUDE: \"common.jsx\" */\n/* INCLUDE: \"core/adapter/dev-hub\" */\nconst devHubAccountId =\n  props.nearDevGovGigsContractAccountId ||\n  (context.widgetSrc ?? \"devgovgigs.near\").split(\"/\", 1)[0];\n\nconst DevHub = {\n  get_root_members: () =>\n    Near.view(devHubAccountId, \"get_root_members\") ?? null,\n\n  has_moderator: ({ account_id }) =>\n    Near.view(devHubAccountId, \"has_moderator\", { account_id }) ?? null,\n\n  create_community: ({ inputs }) =>\n    Near.call(devHubAccountId, \"create_community\", { inputs }),\n\n  get_community: ({ handle }) =>\n    Near.view(devHubAccountId, \"get_community\", { handle }) ?? null,\n\n  get_account_community_permissions: ({ account_id, community_handle }) =>\n    Near.view(devHubAccountId, \"get_account_community_permissions\", {\n      account_id,\n      community_handle,\n    }) ?? null,\n\n  update_community: ({ handle, community }) =>\n    Near.call(devHubAccountId, \"update_community\", { handle, community }),\n\n  delete_community: ({ handle }) =>\n    Near.call(devHubAccountId, \"delete_community\", { handle }),\n\n  update_community_board: ({ handle, board }) =>\n    Near.call(devHubAccountId, \"update_community_board\", { handle, board }),\n\n  update_community_github: ({ handle, github }) =>\n    Near.call(devHubAccountId, \"update_community_github\", { handle, github }),\n\n  get_access_control_info: () =>\n    Near.view(devHubAccountId, \"get_access_control_info\") ?? null,\n\n  get_all_authors: () => Near.view(devHubAccountId, \"get_all_authors\") ?? null,\n\n  get_all_communities_metadata: () =>\n    Near.view(devHubAccountId, \"get_all_communities_metadata\") ?? null,\n\n  get_all_labels: () => Near.view(devHubAccountId, \"get_all_labels\") ?? null,\n\n  get_post: ({ post_id }) =>\n    Near.view(devHubAccountId, \"get_post\", { post_id }) ?? null,\n\n  get_posts_by_author: ({ author }) =>\n    Near.view(devHubAccountId, \"get_posts_by_author\", { author }) ?? null,\n\n  get_posts_by_label: ({ label }) =>\n    Near.view(nearDevGovGigsContractAccountId, \"get_posts_by_label\", {\n      label,\n    }) ?? null,\n\n  useQuery: (name, params) => {\n    const initialState = { data: null, error: null, isLoading: true };\n\n    const cacheState = useCache(\n      () =>\n        Near.asyncView(devHubAccountId, [\"get\", name].join(\"_\"), params ?? {})\n          .then((response) => ({\n            ...initialState,\n            data: response ?? null,\n            isLoading: false,\n          }))\n          .catch((error) => ({\n            ...initialState,\n            error: props?.error ?? error,\n            isLoading: false,\n          })),\n\n      JSON.stringify({ name, params }),\n      { subscribe: true }\n    );\n\n    return cacheState === null ? initialState : cacheState;\n  },\n};\n/* END_INCLUDE: \"core/adapter/dev-hub\" */\n\nconst CommunitiesPage = () => {\n  State.init({ isSpawnerHidden: true });\n\n  const spawnerToggle = (forcedState) =>\n    State.update((lastKnownState) => ({\n      ...lastKnownState,\n      isSpawnerHidden: !(forcedState ?? lastKnownState.isSpawnerHidden),\n    }));\n\n  const communitiesMetadata = DevHub.useQuery(\"all_communities_metadata\");\n\n  return widget(\"components.template.app-layout\", {\n    path: [{ label: \"Communities\", pageId: \"communities\", isHidden: true }],\n\n    banner: (\n      <div\n        className=\"d-flex justify-content-between p-4\"\n        style={{ backgroundColor: \"#181818\" }}\n      >\n        <div className=\"d-flex flex-column gap-3\">\n          <h1 className=\"m-0 fs-4\">\n            <a className=\"text-white\" href={href(\"communities\")}>\n              Communities\n            </a>\n          </h1>\n\n          <p className=\"m-0 text-muted fs-6\">\n            Discover NEAR developer communities\n          </p>\n        </div>\n\n        <div className=\"d-flex flex-column justify-content-center\">\n          {widget(\"components.molecule.button\", {\n            icon: { kind: \"bootstrap-icon\", variant: \"bi-people-fill\" },\n            isHidden: !state.isSpawnerHidden,\n            label: \"Create community\",\n            onClick: () => spawnerToggle(true),\n          })}\n        </div>\n      </div>\n    ),\n\n    children: (\n      <div className=\"d-flex flex-wrap align-content-start gap-4 p-4 w-100 h-100\">\n        {widget(\"components.atom.spinner\", {\n          isHidden: !(\n            communitiesMetadata.data === null && communitiesMetadata.isLoading\n          ),\n        })}\n\n        {widget(\"entity.community.spawner\", {\n          isHidden: state.isSpawnerHidden,\n          onCancel: () => spawnerToggle(false),\n        })}\n\n        {(communitiesMetadata.data ?? [])\n          .reverse()\n          .map((communityMetadata) =>\n            widget(\n              \"entity.community.card\",\n              { metadata: communityMetadata },\n              communityMetadata.handle\n            )\n          )}\n      </div>\n    ),\n  });\n};\n\nreturn CommunitiesPage(props);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bo.near/widget/gigs-board.pages.communities", "fact_widget_deployments_id": "042f71c7f9df822909913c80433b2ee4", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 25}