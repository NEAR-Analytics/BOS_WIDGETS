{"tx_hash": "E6UjJtvdpdZBwpeg3q6DWyXDqXgbqgqkxwv7WT9rtxM7", "action_id_social": "HSJDqZF4vYqUZAs8Zv9tk3wKMyWkzXyVYRq4o2cq4Ya-0-widget", "block_id": 95122459, "block_timestamp": "2023-06-27T03:42:20.335Z", "signer_id": "bo.near", "widget_name": "gigs-board.pages.Feed", "source_code": "/* INCLUDE: \"common.jsx\" */\nconst nearDevGovGigsContractAccountId =\n  props.nearDevGovGigsContractAccountId ||\n  (context.widgetSrc ?? \"devgovgigs.near\").split(\"/\", 1)[0];\n\nconst nearDevGovGigsWidgetsAccountId =\n  props.nearDevGovGigsWidgetsAccountId ||\n  (context.widgetSrc ?? \"devgovgigs.near\").split(\"/\", 1)[0];\n\nfunction widget(widgetName, widgetProps, key) {\n  widgetProps = {\n    ...widgetProps,\n    nearDevGovGigsContractAccountId: props.nearDevGovGigsContractAccountId,\n    nearDevGovGigsWidgetsAccountId: props.nearDevGovGigsWidgetsAccountId,\n    referral: props.referral,\n  };\n\n  return (\n    <Widget\n      src={`${nearDevGovGigsWidgetsAccountId}/widget/gigs-board.${widgetName}`}\n      props={widgetProps}\n      key={key}\n    />\n  );\n}\n\nfunction href(widgetName, linkProps) {\n  linkProps = { ...linkProps };\n\n  if (props.nearDevGovGigsContractAccountId) {\n    linkProps.nearDevGovGigsContractAccountId =\n      props.nearDevGovGigsContractAccountId;\n  }\n\n  if (props.nearDevGovGigsWidgetsAccountId) {\n    linkProps.nearDevGovGigsWidgetsAccountId =\n      props.nearDevGovGigsWidgetsAccountId;\n  }\n\n  if (props.referral) {\n    linkProps.referral = props.referral;\n  }\n\n  const linkPropsQuery = Object.entries(linkProps)\n    .filter(([_key, nullable]) => (nullable ?? null) !== null)\n    .map(([key, value]) => `${key}=${value}`)\n    .join(\"&\");\n\n  return `/#/${nearDevGovGigsWidgetsAccountId}/widget/gigs-board.pages.${widgetName}${\n    linkPropsQuery ? \"?\" : \"\"\n  }${linkPropsQuery}`;\n}\n/* END_INCLUDE: \"common.jsx\" */\n/* INCLUDE: \"core/adapter/dev-hub\" */\nconst contractAccountId =\n  props.nearDevGovGigsContractAccountId ||\n  (context.widgetSrc ?? \"devgovgigs.near\").split(\"/\", 1)[0];\n\nconst DevHub = {\n  edit_community_github: ({ handle, github }) =>\n    Near.call(contractAccountId, \"edit_community_github\", { handle, github }) ??\n    null,\n\n  get_access_control_info: () =>\n    Near.view(contractAccountId, \"get_access_control_info\") ?? null,\n\n  get_all_authors: () =>\n    Near.view(contractAccountId, \"get_all_authors\") ?? null,\n\n  get_all_communities: () =>\n    Near.view(contractAccountId, \"get_all_communities\") ?? null,\n\n  get_all_labels: () => Near.view(contractAccountId, \"get_all_labels\") ?? null,\n\n  get_community: ({ handle }) =>\n    Near.view(contractAccountId, \"get_community\", { handle }) ?? null,\n\n  get_post: ({ post_id }) =>\n    Near.view(contractAccountId, \"get_post\", { post_id }) ?? null,\n\n  get_posts_by_author: ({ author }) =>\n    Near.view(contractAccountId, \"get_posts_by_author\", { author }) ?? null,\n\n  get_posts_by_label: ({ label }) =>\n    Near.view(nearDevGovGigsContractAccountId, \"get_posts_by_label\", {\n      label,\n    }) ?? null,\n\n  get_root_members: () =>\n    Near.view(contractAccountId, \"get_root_members\") ?? null,\n};\n/* END_INCLUDE: \"core/adapter/dev-hub\" */\n\nconst Gradient = styled.div`\n   {\n    height: 250px;\n    text-align: center;\n    background: radial-gradient(\n      circle,\n      rgba(29, 55, 57, 1) 30%,\n      rgba(24, 24, 24, 1) 80%\n    );\n\n    font-family: Arial, sans-serif;\n  }\n\n  .text-primary-gradient {\n    color: #53fdca;\n    -webkit-text-fill-color: transparent;\n    background-image: linear-gradient(#8e76ba, #1ed2f0);\n    -webkit-background-clip: text;\n    background-clip: text;\n  }\n\n  .subtitle-above {\n    font-size: 18px;\n    letter-spacing: 1px;\n    font-family: Courier, monospace;\n  }\n\n  .subtitle-below {\n    font-size: 16px;\n  }\n\n  .slogan {\n    font-weight: 600;\n    font-size: 60px;\n  }\n`;\n\nconst header = (\n  <div className=\"d-flex flex-column\">\n    <Gradient className=\"d-flex flex-column justify-content-center\">\n      <div className=\"subtitle-above text-white opacity-75 mb-2\">\n        A decentralized community of\n      </div>\n\n      <h1 className=\"mb-3 text-white slogan\">\n        <span className=\"text-primary-gradient\">NEAR </span>Developers\n      </h1>\n\n      <div className=\"subtitle-below text-white opacity-75\">\n        Share your ideas, match solutions, and access support and funding.\n      </div>\n    </Gradient>\n\n    <div className=\"d-flex flex-column gap-4 py-4\">\n      <div className=\"d-flex justify-content-between\">\n        <h5 className=\"h5 m-0\">Featured Communities</h5>\n      </div>\n\n      <div className=\"d-flex gap-4\">\n        {(DevHub.get_all_communities() ?? [])\n          .filter(({ handle }) =>\n            [\n              \"zero-knowledge\",\n              \"protocol\",\n              \"contract-standards\",\n              \"education\",\n            ].includes(handle)\n          )\n          .map((community) =>\n            widget(\n              \"entity.community.card\",\n              { ...community, format: \"medium\" },\n              community.handle\n            )\n          )}\n      </div>\n    </div>\n\n    <div className=\"h5 pb-4\">Activity</div>\n  </div>\n);\n\nconst FeedPage = ({ author, recency, tag }) => {\n  State.init({\n    initial: { author, tag },\n    author,\n    tag,\n  });\n\n  // When rerendered with different props, State will be preserved, so we need to update the state when we detect that the props have changed.\n  if (tag !== state.initial.tag || author !== state.initial.author) {\n    State.update((lastKnownState) => ({\n      ...lastKnownState,\n      initial: { author, tag },\n      author,\n      tag,\n    }));\n  }\n\n  const onTagSearch = (tag) => {\n    State.update((lastKnownState) => ({ ...lastKnownState, tag }));\n  };\n\n  const onAuthorSearch = (author) => {\n    State.update((lastKnownState) => ({ ...lastKnownState, author }));\n  };\n\n  return widget(\"components.layout.Page\", {\n    header,\n\n    children: widget(\"feature.post-search.panel\", {\n      author: state.author,\n      authorQuery: { author: state.author },\n      children: widget(\"components.layout.Controls\"),\n      onAuthorSearch,\n      onTagSearch,\n      recency,\n      tag: state.tag,\n      tagQuery: { tag: state.tag },\n    }),\n  });\n};\n\nreturn FeedPage(props);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bo.near/widget/gigs-board.pages.Feed", "fact_widget_deployments_id": "b45b61cd4433d3208d61a0fe0458ddcf", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 20}