{"tx_hash": "A8mvC9psApG2gsVLRhQNg6Hm748zs39xLBkNRp5YBGvF", "action_id_social": "BXPrnCeuGth6G9hy79HRRHRdeU9CHivGyZLjUr2yQgAh-0-widget", "block_id": 104807258, "block_timestamp": "2023-11-03T02:14:40.903Z", "signer_id": "bo.near", "widget_name": "gigs-board.entity.post.Lookup", "source_code": "/* INCLUDE: \"common.jsx\" */\nconst nearDevGovGigsContractAccountId =\n  props.nearDevGovGigsContractAccountId ||\n  (context.widgetSrc ?? \"devgovgigs.near\").split(\"/\", 1)[0];\n\nconst nearDevGovGigsWidgetsAccountId =\n  props.nearDevGovGigsWidgetsAccountId ||\n  (context.widgetSrc ?? \"devgovgigs.near\").split(\"/\", 1)[0];\n\nfunction widget(widgetName, widgetProps, key) {\n  widgetProps = {\n    ...widgetProps,\n    nearDevGovGigsContractAccountId: props.nearDevGovGigsContractAccountId,\n    nearDevGovGigsWidgetsAccountId: props.nearDevGovGigsWidgetsAccountId,\n    referral: props.referral,\n  };\n\n  return (\n    <Widget\n      src={`${nearDevGovGigsWidgetsAccountId}/widget/gigs-board.${widgetName}`}\n      props={widgetProps}\n      key={key}\n    />\n  );\n}\n\nfunction href(widgetName, linkProps) {\n  linkProps = { ...linkProps };\n\n  if (props.nearDevGovGigsContractAccountId) {\n    linkProps.nearDevGovGigsContractAccountId =\n      props.nearDevGovGigsContractAccountId;\n  }\n\n  if (props.nearDevGovGigsWidgetsAccountId) {\n    linkProps.nearDevGovGigsWidgetsAccountId =\n      props.nearDevGovGigsWidgetsAccountId;\n  }\n\n  if (props.referral) {\n    linkProps.referral = props.referral;\n  }\n\n  const linkPropsQuery = Object.entries(linkProps)\n    .filter(([_key, nullable]) => (nullable ?? null) !== null)\n    .map(([key, value]) => `${key}=${value}`)\n    .join(\"&\");\n\n  return `/#/${nearDevGovGigsWidgetsAccountId}/widget/gigs-board.pages.${widgetName}${\n    linkPropsQuery ? \"?\" : \"\"\n  }${linkPropsQuery}`;\n}\n/* END_INCLUDE: \"common.jsx\" */\n\nState.init({\n  tag: props.tag,\n});\n\nconst updateInput = (term) => {\n  State.update({\n    term,\n  });\n};\n\nconst buttonStyle = {\n  backgroundColor: \"#0C7283\",\n  color: \"#f3f3f3\",\n};\n\nreturn (\n  <>\n    <div className=\"d-flex flex-row gap-4\">\n      <div className=\"d-flex flex-row position-relative w-25\">\n        <div className=\"position-absolute d-flex ps-3 flex-column h-100 justify-center\">\n          <i class=\"bi bi-search m-auto\"></i>\n        </div>\n        <input\n          type=\"search\"\n          className=\"ps-5 form-control border border-0 bg-light\"\n          value={state.term ?? \"\"}\n          onChange={(e) => updateInput(e.target.value)}\n          placeholder={props.placeholder ?? `Search by content`}\n        />\n      </div>\n      <div class=\"dropdown\">\n        <button\n          class=\"btn btn-light dropdown-toggle\"\n          type=\"button\"\n          data-bs-toggle=\"dropdown\"\n          aria-expanded=\"false\"\n        >\n          Sort{props.recency === \"all\" ? \": All replies\" : \": Latest\"}\n        </button>\n        <ul class=\"dropdown-menu px-2 shadow\">\n          <li>\n            <a\n              style={{ borderRadius: \"5px\" }}\n              class=\"dropdown-item link-underline link-underline-opacity-0\"\n              href={href(\"Feed\")}\n            >\n              Latest\n            </a>\n          </li>\n          {/* Sort by hottest is not yet support on indexer side\n          <li>\n            <a\n              style={{ borderRadius: \"5px\" }}\n              class=\"dropdown-item link-underline link-underline-opacity-0\"\n              href={href(\"Feed\", { recency: \"hot\" })}\n            >\n              Hottest\n            </a>\n          </li> */}\n          <li>\n            <a\n              style={{ borderRadius: \"5px\" }}\n              class=\"dropdown-item link-underline link-underline-opacity-0\"\n              href={href(\"Feed\", { recency: \"all\" })}\n            >\n              All replies\n            </a>\n          </li>\n        </ul>\n      </div>\n      <div class=\"dropdown\">\n        {widget(\"entity.post.AuthorSearch\", {\n          author: state.author,\n          onAuthorSearch: (author) => {\n            State.update({ author });\n          },\n        })}\n      </div>\n      <div>\n        {widget(\"entity.post.TagSearch\", {\n          tag: state.tag,\n          onTagSearch: (tag) => {\n            State.update({ tag });\n          },\n        })}\n      </div>\n      <div className=\"d-flex flex-row-reverse flex-grow-1\">\n        {props.children}\n      </div>\n    </div>\n    {widget(\"entity.post.List\", {\n      author: state.author,\n      tag: state.tag,\n      term: state.term,\n      recency: props.recency,\n    })}\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bo.near/widget/gigs-board.entity.post.Lookup", "fact_widget_deployments_id": "34a05470e727ecee4690124f1921be31", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 2}