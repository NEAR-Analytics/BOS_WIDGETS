{"tx_hash": "HNMHgh98WMKKj8cNkEgxRZ2H4JwXcg2uuwgm23Lkax2t", "action_id_social": "G8gS2HfsHkWMbU28RUtaZSADHugNgbLZ8qtPdYaPJPgs-0-widget", "block_id": 117167165, "block_timestamp": "2024-04-19T10:55:04.490Z", "signer_id": "bos.bluntdao.near", "widget_name": "BluntDAO.Button.Join", "source_code": "const accountId = context.accountId;\nconst newMember = props.newMember;\nconst daoId = props.daoId ?? \"blunt.sputnik-dao.near\";\nconst role = props.role ?? \"OG BLUNT VALIDATORS\";\nconst buttonText = props.buttonText ?? \"Propose OG Validator\";\nif (!accountId) {\n  return \"Please connect your NEAR wallet :)\";\n}\nconst handleProposal = () => {\n  const gas = 200000000000000;\n  const deposit = 10000000000000000000000;\n  Near.call([\n    {\n      contractName: daoId,\n      methodName: \"add_proposal\",\n      args: {\n        proposal: {\n          description: \"potential member\",\n          kind: {\n            AddMemberToRole: {\n              member_id: newMember,\n              role: role,\n            },\n          },\n        },\n      },\n      gas: gas,\n      deposit: deposit,\n    },\n  ]);\n};\nconst proposalKinds = {\n  ChangeConfig: \"config\",\n  ChangePolicy: \"policy\",\n  AddMemberToRole: \"add_member_to_role\",\n  RemoveMemberFromRole: \"remove_member_from_role\",\n  FunctionCall: \"call\",\n  UpgradeSelf: \"upgrade_self\",\n  UpgradeRemote: \"upgrade_remote\",\n  Transfer: \"transfer\",\n  SetStakingContract: \"set_vote_token\",\n  AddBounty: \"add_bounty\",\n  BountyDone: \"bounty_done\",\n  Vote: \"vote\",\n  FactoryInfoUpdate: \"factory_info_update\",\n  ChangePolicyAddOrUpdateRole: \"policy_add_or_update_role\",\n  ChangePolicyRemoveRole: \"policy_remove_role\",\n  ChangePolicyUpdateDefaultVotePolicy: \"policy_update_default_vote_policy\",\n  ChangePolicyUpdateParameters: \"policy_update_parameters\",\n};\nconst actions = {\n  AddProposal: \"AddProposal\",\n  VoteApprove: \"VoteApprove\",\n  VoteReject: \"VoteReject\",\n  VoteRemove: \"VoteRemove\",\n};\n// -- Get all the roles from the DAO policy\nlet roles = Near.view(daoId, \"get_policy\");\nroles = roles === null ? [] : roles.roles;\nconst isUserAllowedTo = (user, kind, action) => {\n  // -- Filter the user roles\n  const userRoles = [];\n  for (const role of roles) {\n    if (role.kind === \"Everyone\") {\n      userRoles.push(role);\n      continue;\n    }\n    if (!role.kind.Group) continue;\n    if (user && role.kind.Group && role.kind.Group.includes(user)) {\n      userRoles.push(role);\n    }\n  }\n  // -- Check if the user is allowed to perform the action\n  let allowed = false;\n  userRoles\n    .filter(({ permissions }) => {\n      const allowedRole =\n        permissions.includes(`${kind.toString()}:${action.toString()}`) ||\n        permissions.includes(`${kind.toString()}:*`) ||\n        permissions.includes(`*:${action.toString()}`) ||\n        permissions.includes(\"*:*\");\n      allowed = allowed || allowedRole;\n      return allowedRole;\n    })\n    .map((role) => role.name);\n  return allowed;\n};\nconst canProposeAddMember = isUserAllowedTo(\n  context.accountId,\n  proposalKinds.AddMemberToRole,\n  actions.AddProposal\n);\nconst Wrapper = styled.div`\n  .join-button {\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    gap: 8px;\n    padding: 8px 16px;\n    height: 32px;\n    border-radius: 100px;\n    font-weight: 600;\n    font-size: 12px;\n    line-height: 15px;\n    text-align: center;\n    cursor: pointer;\n    background: #fbfcfd;\n    border: 1px solid #d7dbdf;\n    color: ${props.primary ? \"#006ADC\" : \"#11181C\"} !important;\n    white-space: nowrap;\n    &:hover,\n    &:focus {\n      background: #ecedee;\n      text-decoration: none;\n      outline: none;\n    }\n    i {\n      display: inline-block;\n      transform: rotate(90deg);\n      color: #7e868c;\n    }\n  }\n`;\nreturn (\n  <>\n    {canProposeAddMember && (\n      <Wrapper>\n        <button className=\"join-button\" onClick={handleProposal}>\n          {buttonText}\n        </button>\n      </Wrapper>\n    )}\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bos.bluntdao.near/widget/BluntDAO.Button.Join", "fact_widget_deployments_id": "9aeab3e6fd46ffe6d6f4a362e7dc4379", "inserted_timestamp": "2024-04-19T12:36:52.445Z", "modified_timestamp": "2024-04-19T12:36:52.445Z", "__row_index": 0}