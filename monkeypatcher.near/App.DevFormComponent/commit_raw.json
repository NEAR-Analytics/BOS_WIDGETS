{"tx_hash": "7jKPnDNCDr2b2Z7Cj3aL2w2hiuAC9TcavWRiJFL8Mhxu", "action_id_social": "Nv7BP6URcWe3hPK7aankEyTaK8ErS9BecsG4BbtT3uc-0-widget", "block_id": 107413796, "block_timestamp": "2023-12-08T05:31:32.721Z", "signer_id": "monkeypatcher.near", "widget_name": "App.DevFormComponent", "source_code": "    const formStyles = {\n        row: {\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"flex-start\",\n            padding: \"10px\",\n            width: \"100%\",\n        },\n        rowFields: {\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"space-around\",\n            padding: \"10px\",\n            width: \"100%\",\n            alignItems: \"center\",\n        },\n        column: {\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"space-around\",\n            padding: \"10px\",\n        },\n        columnTextLeft: {\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"space-around\",\n            padding: \"10px\",\n            width: \"50%\",\n        },\n        columnTextRight: {\n            display: \"flex\",\n            flexDirection: \"column\",\n            padding: \"10px\",\n            width: \"50%\",\n        },\n        textField: {\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"space-around\",\n            alignItems: \"center\",\n            padding: \"10px\",\n        },\n        checkboxField: {\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"space-around\",\n            alignItems: \"left\",\n            padding: \"10px\",\n        },\n        formLabel: {\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"space-around\",\n            alignItems: \"center\",\n            padding: \"10px\",\n        },\n        button: {\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            margin: \"10px\",\n        },\n        listHeading: {\n            fontWeight: \"bold\",\n            fontSize: \"1.2rem\",\n        },\n        list: {\n\n        },\n        paragraph: {\n            display: \"flex\",\n            padding: \"5px\",\n        }, \n    };\n\n    const checkboxLabels = {\n        label1: 'Use Managed RPC Service (Enterprise)',\n        label2: 'Use Private RPC Service',\n        label3: 'Use Managed Indexer (Enterprise)',\n        label4: 'Use Private Indexer',\n        label5: 'Use Fast Auth Onboarding',\n    }\n\n    const dropDownItems = [\n        { value: \"0\", label: \"Please select...\" },\n        { value: \"100\", label: \"100 calls per month\" },\n        { value: \"250\", label: \"250 calls per month\" },\n        { value: \"500\", label: \"500 calls per month\" },\n        { value: \"1k\", label: \"1k calls per month\" },\n        { value: \"5k\", label: \"5k calls per month\" },\n        { value: \"10k\", label: \"10k calls per month\" },\n        { value: \"20k\", label: \"20k calls per month\" },\n        { value: \"40k\", label: \"40k calls per month\" },\n        { value: \"60k\", label: \"60k calls per month\" },\n        { value: \"80k\", label: \"80k calls per month\" },\n        { value: \"100k\", label: \"100k calls per month\" },\n        { value: \"150k\", label: \"150k calls per month\" },\n        { value: \"200k\", label: \"200k calls per month\" },\n        { value: \"250k\", label: \"250k calls per month\" },\n    ];\n\nconst [bannerMessage, setBannerMessage] = useState(<div></div>);\nconst [callValue, setCallValue] = useState(\"\");\nconst [formSuccess, setFormSuccess] = useState(false);\nconst [formData, setFormData] = useState({\n    phase1: '',\n    phase2: '',\n    phase3: '',\n    phase4: '',\n    phase5: '',\n    checkbox1: false,\n    checkbox2: false,\n    checkbox3: false,\n    checkbox4: false,\n    checkbox5: false,\n});\n\nconst handleChange = (e) => {\n    const { name, value, type, checked } = e.target;\n    if (type === 'select') {\n        setCallValue(value);\n    }\n    setFormData((prevData) => ({\n        ...prevData,\n        [name]: type === 'checkbox' ? checked : value,\n    }));\n};\n\n  const handleSubmit = (e) => {\n    const emptyValuesArray =  []\n    Object.entries(formData).map(([key, value]) => {\n        if (key.includes('phase') && value === '') {\n            emptyValuesArray.push(1);\n        };\n    });\n    if (emptyValuesArray.length > 0) {\n        setFormSuccess(false);\n        setBannerMessage(<h3 style={{fontWeight: \"bold\",color: \"red\"}}>Please select calls for all Phases!</h3>);\n    } else {\n        setFormSuccess(true);\n        props.submitDeveloperProfile(formData);\n    };\n\n  };\n\n    return (\n    <div>\n        <div style={formStyles.row}>\n            <div style={formStyles.columnTextLeft}>\n                <p style={formStyles.paragraph}>To better help you estimate the cost of your project, please fill out the form below. Each phase represents a milestone in the development process.\n                </p>\n                <span style={formStyles.listHeading}>Example Phases:</span>\n                <div style={formStyles.list}>\n                    <li>Phase 1: Prototype</li>\n                    <li>Phase 2: Alpha Release</li>\n                    <li>Phase 3: Beta Release</li>\n                    <li>Phase 4: Production Release</li>\n                    <li>Phase 5: 12 months after Production Release</li>\n                </div>\n            </div>\n            <div style={formStyles.columnTextRight}>\n                <p style={formStyles.paragraph}>The number provided = the number of active users per minute. The pulldown lists have generic thresholds you can choose to get a close idea of what your expendentitures will be at common thresholds. You should choose values for all 5 phases for this demo.\n                </p>\n                <p style={formStyles.paragraph}>\n                    Please check the boxes that apply to your project. If you are unsure, leave the box unchecked.\n                </p>\n            </div>\n        </div>\n        \n        <form onSubmit={handleSubmit}>\n        {/* Dropdown per phase */}\n        <div style={formStyles.rowFields}>\n        {Array.from({ length: 5 }, (_, index) => (\n            <div key={index} style={formStyles.column}>\n            <label style={formStyles.formLabel} htmlFor={`phase${index + 1}`}>{`Phase ${index + 1}:`}</label>\n            <select\n            name={`phase${index + 1}`}\n            onChange={e => handleChange(e)}\n            type=\"select\"\n            id={`phase${index + 1}`}\n            >\n            {dropDownItems.map((item) => (\n                <option\n                style={{textAlign: \"center\"}}  \n                key={item.label} \n                value={item.value}>\n                {item.label}\n                </option>\n            ))}\n            </select>\n            </div>\n        ))}\n        </div>\n\n        {/* Checkboxes */}\n        <div style={formStyles.rowFields}>\n        {Array.from({ length: 5 }, (_, index) => (\n            <div key={index} style={formStyles.column}>\n            <label style={formStyles.formLabel}>\n                <input\n                style={formStyles.checkboxField}\n                type=\"checkbox\"\n                name={`checkbox${index + 1}`}\n                checked={formData[`checkbox${index + 1}`]}\n                onChange={handleChange}\n                />\n                {checkboxLabels[`label${index + 1}`]}\n            </label>\n            </div>\n        ))}\n        </div>\n        \n        {/* Banner Alert */}\n        <div style={formStyles.rowFields}>\n        {bannerMessage}\n        </div>\n\n        {/* Submit Button */}\n        <div style={formStyles.rowFields}>\n        <button type=\"submit\" style={formStyles.button}>Submit</button>\n        </div>\n        </form>\n    </div>\n    );", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/monkeypatcher.near/widget/App.DevFormComponent", "fact_widget_deployments_id": "b88f281726af97be56cf53686953e28e", "inserted_timestamp": "2023-12-08T07:32:46.979Z", "modified_timestamp": "2023-12-20T03:22:11.422Z", "__row_index": 2}