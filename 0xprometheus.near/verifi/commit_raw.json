{"tx_hash": "J8ceEiKQTFbuyxrfaUFURYUL7G2PaLe7gUbamvs51jVy", "action_id_social": "7XBXjFgpxDTLgrACM68qvwnY3XZPyB31wjtri7t9X8nL-0-widget", "block_id": 112820156, "block_timestamp": "2024-02-14T14:50:01.016Z", "signer_id": "0xprometheus.near", "widget_name": "verifi", "source_code": "const accountId = context.accountId;\nif (!accountId) {\n  return <h1>Please connect your wallet!</h1>;\n}\nlet { src } = props;\n\nlet contract = \"beta-v2.integrations.near\";\n\nconsole.log(\"qer..\", src);\nconst [verificationItems, setVerificationItems] = useState([\n  {\n    title: \"Verify Account is Older than 1 year\",\n    status: true,\n    endpoint: \"/account-age\",\n    viewFunction: \"is_one_year_old\"\n  },\n  {\n    title: \"Verify Account is Older than 6 months\",\n    status: false,\n    endpoint: \"/account-age\",\n    viewFunction: \"six_month_old\"\n  },\n  {\n    title: \"Verify Account is Older than 2 year\",\n    status: false,\n    endpoint: \"/account-age\",\n    viewFunction: \"is_two_year_old\"\n  },\n  {\n    title: \"Verify Account has connected to more than 5 contracts\",\n    status: false,\n    endpoint: \"/connected-contracts\",\n    viewFunction: \"connected_to_5_contracts\"\n  }\n]);\n\nuseEffect(() => {\n  verificationItems.forEach((item, index) => {\n    const result = Near.view(contract, item.viewFunction, { account_id: accountId });\n    const newItems = [...verificationItems];\n    newItems[index].status = result;\n    setVerificationItems(newItems);\n    \n  });\n}, [verificationItems])\n\nconst [selectedIndex, setSelectedIndex] = useState(null);\n\nconst wrapper = styled.div`\n  font-family: sans-serif;\n  margin: 0;\n  padding: 20px;\n  background-color: #f2f2f2;\n`;\n\n// VerificationCard\nconst VerificationCard = styled.div`\n  background-color: #fff;\n  border-radius: 5px;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.05);\n  padding: 20px;\n  margin-bottom: 20px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  transition: transform 0.2s ease-in-out;\n  ${({ selected }) =>\n    selected &&\n    `\n      background-color: blue;\n    `}\n  button {\n    display: block;\n    background-color: #337ab7;\n    color: #fff;\n    border: none;\n    padding: 5px 10px;\n    border-radius: 5px;\n    cursor: pointer;\n    font-size: 14px;\n    transition: background-color 0.2s ease-in-out;\n\n    & + button { /* Spacing between buttons */\n      margin-top: 10px;\n    }\n\n    &:hover {\n      background-color: #2a69a5;\n      position: relative;\n      transform: scale(0.95);\n    }\n`;\n\n// VerificationTitle\nconst VerificationTitle = styled.h3`\n  font-size: 16px;\n  font-weight: bold;\n  color: #333;\n`;\n\n// VerificationStatus\nconst VerificationStatus = styled.div`\n  font-size: 14px;\n  color: red;\n`;\n\n\n// VerificationButton\nconst VerificationButton = styled.button`\n  background-color: #337ab7;\n  color: #fff;\n  border: none;\n  padding: 10px 20px;\n  border-radius: 5px;\n  cursor: pointer;\n  font-size: 16px;\n  transition: background-color 0.2s ease-in-out;\n\n  &:hover {\n    background-color: #2a69a5;\n  }\n`;\n\nconst [verifications, setVerifications] = useState({\n  accountAge: null, // null, true, or false\n  contracts: null,\n  balance: null,\n  lensHandle: null,\n});\n\nconst handleVerify = async (index) => {\n  // Make API and smart contract calls based on your logic\n  // Update verifications state based on results\n  const base_url = \"https://api.nearbadger.vercel.app\";\n\n  console.log(\"response here..\", response);\n  let action = verificationItems[index];\n  asyncFetch(`${base_url}${action.endpoint}`, {\n    method: \"POST\",\n    body: JSON.stringify({ accountId }),\n    mode: \"no-cors\",\n  })\n    .then((response) => {\n      let res = response.body;\n      Near.call(contract, \"update_contract_age\", {\n        signature: res.signature,\n        account_age: res.accountInfo,\n        max_block_height: res.max_block_height,\n      });\n    })\n    .catch((err) => console.log(err));\n};\n\nconst handleSelection = (index) => {\n  if (selectedIndex !== index) {\n    const newItems = [...verificationItems];\n    const selectedItem = newItems.splice(index, 1)[0]; // Remove selected item\n    newItems.unshift(selectedItem); // Add selected item to the front\n    setVerificationItems(newItems);\n    setSelectedIndex(0);\n  }\n};\nconst isCardSelected = selectedIndex !== null;\n\nreturn (\n  <wrapper>\n    <h2>Available Stamp Verifications</h2>\n    {verificationItems.map((item, index) => (\n      <VerificationCard\n        key={index}\n        selected={selectedIndex === index}\n        onClick={() => handleSelection(index)}\n      >\n        <VerificationTitle>{item.title}</VerificationTitle>\n        <VerificationStatus verified={true}></VerificationStatus>\n        <button\n        style={{ backgroundColor: item.status ? \"green\" : \"\" }}\n        verified={true}\n          disabled={isCardSelected && selectedIndex !== index}\n          onClick={() => handleVerify(index)}\n        >\n          verify info\n        </button>\n      </VerificationCard>\n    ))}\n  </wrapper>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/0xprometheus.near/widget/verifi", "fact_widget_deployments_id": "c7a878b927818d8455d782975dd2506b", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 4}