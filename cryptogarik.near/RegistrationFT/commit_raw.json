{"tx_hash": "7DaxcXBiGyRjmvy8Cw35cD4LWMVQNEW1ETMFmv5SZLAx", "action_id_social": "84ur5EjAJALB61w1pFMX6EL4CN1DuDNyptQWsAHiKuAT-0-widget", "block_id": 108786549, "block_timestamp": "2023-12-25T14:35:55.437Z", "signer_id": "cryptogarik.near", "widget_name": "RegistrationFT", "source_code": "const accountId = props.accountId || context.accountId;\nconst ftContract = \"token.v2.ref-finance.near\";\n\nif (!(state.accountId && state.ftContract)) {\n  State.update({\n    accountId,\n    ftContract,\n  });\n}\n\nconst onChangeAccount = (updatedAccountId) => {\n  State.update({\n    accountId: updatedAccountId,\n  });\n};\n\nconst onChangeFTContract = (ftContract) => {\n  State.update({\n    ftContract,\n  });\n};\n\nconst handleCheck = () => {\n  const accountStorageBalance = Near.view(\n    state.ftContract,\n    \"storage_balance_of\",\n    {\n      account_id: state.accountId,\n    }\n  );\n  if (accountStorageBalance) {\n    State.update({\n      accountStorageBalance,\n    });\n  } else {\n    State.update({\n      accountStorageBalance: {\n        total: \"0\",\n        available: \"0\",\n      },\n    });\n  }\n  console.log(\"accountStorageBalance: \", state.accountStorageBalance);\n};\n\nconst handleRegister = () => {\n  if (!(state.accountId && state.ftContract)) {\n    return;\n  }\n\n  Near.call({\n    contractName: state.ftContract,\n    methodName: \"storage_deposit\",\n    args: {\n      account_id: state.accountId,\n    },\n    deposit: 1250000000000000000000,\n  });\n};\n\nreturn (\n  <div>\n    <div>Check user registration in FT contract</div>\n    <div>\n      Account:\n      <input\n        type=\"text\"\n        value={state.accountId}\n        onChange={(e) => onChangeAccount(e.target.value)}\n      />\n    </div>\n    <div>\n      FT contract:\n      <input\n        type=\"text\"\n        value={state.ftContract}\n        onChange={(e) => onChangeFTContract(e.target.value)}\n      />\n    </div>\n    <div>\n      <button onClick={handleCheck}>Check</button>\n    </div>\n    {state.accountStorageBalance && (\n      <div>\n        <div>\n          <h5>Registration data (Storage balance)</h5>\n        </div>\n        {(Number(state.accountStorageBalance.total) > 0 && (\n          <div>User is registered</div>\n        )) || (\n          <div>\n            <div>User is not registered</div>\n            <div>\n              <button onClick={handleRegister}>Register</button>\n            </div>\n          </div>\n        )}\n        <div>\n          <h6>Storage balance</h6>\n        </div>\n        <div>{\"Total: \" + state.accountStorageBalance.total}</div>\n        <div>{\"Available: \" + state.accountStorageBalance.available}</div>\n      </div>\n    )}\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/cryptogarik.near/widget/RegistrationFT", "fact_widget_deployments_id": "1a32bf0ae7ecac09eba89b9bb168b92c", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}