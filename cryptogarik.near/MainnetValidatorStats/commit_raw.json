{"tx_hash": "GcDfAz3S9QbAYCTD4JWauBT9UEhMiEX8ffJNLkyqm8ox", "action_id_social": "EtzGMxFABfNiW5Q4XgAD83x1DWVtJH2WyAPDTxkZ5GQN-0-widget", "block_id": 101583412, "block_timestamp": "2023-09-20T23:16:09.865Z", "signer_id": "cryptogarik.near", "widget_name": "MainnetValidatorStats", "source_code": "const nodeName = props.nodeName || \"cryptogarik.poolv1.near\";\nconst res = fetch(\"https://rpc.mainnet.near.org\", {\n  headers: {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n  },\n  method: \"POST\",\n  body: JSON.stringify({\n    jsonrpc: \"2.0\",\n    method: `validators`,\n    params: [null],\n    id: 1,\n  }),\n});\n\nconst body = res.body;\n\nconst nearInYocto = 1000000000000000000000000;\nconst nodeData = res.body.result.current_validators.filter(\n  (item) => item.account_id === nodeName\n)?.[0];\n\nconst accountId = nodeData.account_id;\nconst active = !nodeData.is_slashed;\nconst numExpectedBlocks = nodeData.num_expected_blocks;\nconst numExpectedChunks = nodeData.num_expected_chunks;\nconst numProducedBlocks = nodeData.num_produced_blocks;\nconst numProducedChunks = nodeData.num_produced_chunks;\nconst stake = nodeData.stake;\n\nreturn (\n  <table className=\"table table-striped\">\n    <tbody>\n      <tr>\n        <td>\n          <h5>Pool</h5>\n        </td>\n        <td>\n          <h5>{accountId}</h5>\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <h5>Active</h5>\n        </td>\n        <td>\n          <h5>{active.toString()}</h5>\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <h5>Stake</h5>\n        </td>\n        <td>\n          <h5>\n            {stake &&\n              (stake / nearInYocto)\n                .toFixed(0)\n                .replace(/(\\d)(?=(\\d\\d\\d)+([^\\d]|$))/g, \"$1,\")}\n          </h5>\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <h5>Expected blocks</h5>\n        </td>\n        <td>\n          <h5>{numExpectedBlocks}</h5>\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <h5>Produced blocks</h5>\n        </td>\n        <td>\n          <h5>{numProducedBlocks}</h5>\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <h5>Uptime</h5>\n        </td>\n        <td>\n          <h5>\n            {numProducedBlocks &&\n              ((numProducedBlocks / numExpectedBlocks) * 100).toFixed(0)}{\" \"}\n            %\n          </h5>\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <h5>Expected chunks</h5>\n        </td>\n        <td>\n          <h5>{numExpectedChunks}</h5>\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <h5>Produced chunks</h5>\n        </td>\n        <td>\n          <h5>{numProducedChunks}</h5>\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <h5>Uptime %</h5>\n        </td>\n        <td>\n          <h5>\n            {numProducedChunks &&\n              ((numProducedChunks / numExpectedChunks) * 100).toFixed(0)}{\" \"}\n            %\n          </h5>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/cryptogarik.near/widget/MainnetValidatorStats", "fact_widget_deployments_id": "53be470e94c94eba64428f1a40172978", "inserted_timestamp": "2023-09-21T01:00:04.898Z", "modified_timestamp": "2023-09-21T01:00:04.898Z", "__row_index": 0}