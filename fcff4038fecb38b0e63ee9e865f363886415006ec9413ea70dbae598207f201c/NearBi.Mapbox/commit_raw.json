{"tx_hash": "BVNSd6gPo94DYDh8Qt9nXamdzxfy5VV2d2ASkiAQZeKB", "action_id_social": "8zHAWaGuRPEkZ9yAMWSk7qjwKj2ufMHhdLaV6H1JXpW8-0-widget", "block_id": 104402867, "block_timestamp": "2023-10-28T17:41:27.469Z", "signer_id": "fcff4038fecb38b0e63ee9e865f363886415006ec9413ea70dbae598207f201c", "widget_name": "NearBi.Mapbox", "source_code": "const mydata = fetch(\n  \"https://jessiejessje.github.io/hackoween/mydata_clean.json\"\n);\nconst street_name_data = JSON.stringify(mydata.body);\n\nconst token = `pk.eyJ1IjoiZWpsYnJhZW0iLCJhIjoiY2xrbmIwaW53MGE0NTNtbGsydWd2MmpyZSJ9.m1ZfEqv2fGet2zblGknT8A`;\n\nif (!street_name_data) {\n  return <p>Loading...</p>;\n}\n\nconst Container = styled.div`\n  height: 100vh;\n  display: flex;\n\n  /* reset */\n  button,\n  fieldset,\n  input {\n    all: unset;\n  }\n`;\n\nconst code = `\n\n<!DOCTYPE html>\n<html>\n    <head>\n        <meta charset='utf-8'/>\n        <title>Mapbox Directions API Example</title>\n        <meta name='viewport' content='width=device-width, initial-scale=1'>\n        <script src='https://api.tiles.mapbox.com/mapbox-gl-js/v2.14.1/mapbox-gl.js'></script>\n        <link href='https://api.tiles.mapbox.com/mapbox-gl-js/v2.14.1/mapbox-gl.css' rel='stylesheet'/>\n        <style>\n            body {\n                margin: 0;\n                padding: 0;\n            }\n\n            #map {\n                position: absolute;\n                top: 0;\n                bottom: 0;\n                width: 100%;\n                height: 100%\n            }\n            #instructions {\n                position: absolute;\n                margin: 20px;\n                width: 25%;\n                top: 0;\n                bottom: 20%;\n                padding: 20px;\n                background-color: #fff;\n                overflow-y: scroll;\n                font-family: sans-serif;\n            }\n        </style>\n    </head>\n    <body>\n        <script src='https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-directions/v4.1.1/mapbox-gl-directions.js'></script>\n        <link rel='stylesheet' href='https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-directions/v4.1.1/mapbox-gl-directions.css' type='text/css'>\n        <script src='https://unpkg.com/@turf/turf@6/turf.min.js'></script>\n\n\n        <div id='map'></div>\n\n        <div id='instructions'></div>\n\n        <script>\n            const accessToken = 'pk.eyJ1IjoiZWpsYnJhZW0iLCJhIjoiY2xrbmIwaW53MGE0NTNtbGsydWd2MmpyZSJ9.m1ZfEqv2fGet2zblGknT8A';\n            mapboxgl.accessToken = accessToken;\n\n            const map = new mapboxgl.Map({\n                container: 'map',\n                style: 'mapbox://styles/mapbox/navigation-night-v1',\n                center: [\n                    -73.9756567, 40.7701070\n                ], // New York City coordinates\n                zoom: 12\n            });\n\n\n            const start = [-73.9783516, 40.7871829];\n            const instructions = document.getElementById('instructions');\n            \n            const markers = []; \n                         \n            function removeAllMarkers() {\n                for (const marker of markers) {\n                    marker.remove(); // Remove the marker from the map\n                }\n                markers.length = 0;\n            }\n\n            async function getRoute(end) {\n\n\n                const query = await fetch('https://api.mapbox.com/directions/v5/mapbox/cycling/' + start[0] + ',' + start[1]+ ';' + end[0] + ',' + end[1] +'?steps=true&geometries=geojson&access_token='+mapboxgl.accessToken);\n                const json = await query.json();\n                const data = json.routes[0];\n\n\n                const route = data.geometry.coordinates;\n                const geojson = {\n                    type: 'Feature',\n                    properties: {},\n                    geometry: {\n                        type: 'LineString',\n                        coordinates: route\n                    }\n                };\n\n\n                // if the route already exists on the map, we'll reset it using setData\n                if (map.getSource('route')) {\n                    map.getSource('route').setData(geojson);\n                }\n\n                // otherwise, we'll make a new request else {\n                map.addLayer({\n                    id: 'route',\n                    type: 'line',\n                    source: {\n                        type: 'geojson',\n                        data: geojson\n                    },\n                    layout: {\n                        'line-join': 'round',\n                        'line-cap': 'round'\n                    },\n                    paint: {\n                        'line-color': '#FFFFCC',\n                        'line-width': 5,\n                        'line-opacity': 0.75\n                    }\n                });\n\n\n\n                if (map.getSource('route')) {\n\n                    const bufferDistance = 0.5;\n                    const buffer = turf.buffer(geojson, bufferDistance, {units: 'kilometers'});\n                    const poly = turf.polygon([buffer.geometry.coordinates[0]])\n\n                    instructions.innerHTML = \"<p><strong>NYC Memorial Street Names along the route: </strong></p><button><h4> + Collect</h4></button><br></br>\";\n\n                    removeAllMarkers(); \n                    console.log(markers, 'markers');\n\n                    for (let d of ${street_name_data}) {\n                        const spot = {\n                            type: 'Feature',\n                            geometry: {\n                                type: 'Point',\n                                coordinates: [d.long, d.lat]\n                            }\n                        };\n\n                        const isNearRoute = turf.booleanPointInPolygon(spot.geometry.coordinates, poly);\n                       \n\n                        if (isNearRoute) {\n                            const pumpkin = new Image(60,60);\n                            pumpkin.src = ('https://jessiejessje.github.io/hackoween/pumpkin.png');\n\n                            const marker = new mapboxgl.Marker({\n                                    element: pumpkin,\n                                    anchor: 'center',\n                                                               \n                                }).setLngLat([d.long, d.lat]).addTo(map);\n\n                            instructions.innerHTML += d.loc_result + \"<li>\" + d.coname + \"</li> <br></br>\";\n                            markers.push(marker);\n\n                        } else {\n                            const ghost = new Image(55,55);\n                            ghost.src = ('https://jessiejessje.github.io/hackoween/ghost.png');\n\n                            const marker = new mapboxgl.Marker({\n                                element: ghost,\n                                anchor: 'center',\n\n                            }).setLngLat([d.long, d.lat]).addTo(map);\n                            markers.push(marker);\n                        }\n\n                        \n                    }\n\n                } // end of markers\n            }\n\n\n            \n            map.on('load', () => {\n                // make an initial directions request that\n                // starts and ends at the same location\n                getRoute(start);\n\n                // Add starting point to the map\n                map.addLayer({\n                    id: 'point',\n                    type: 'circle',\n                    source: {\n                        type: 'geojson',\n                        data: {\n                            type: 'FeatureCollection',\n                            features: [\n                                {\n                                    type: 'Feature',\n                                    properties: {},\n                                    geometry: {\n                                        type: 'Point',\n                                        coordinates: start\n                                    }\n                                }\n                            ]\n                        }\n                    },\n                    paint: {\n                        'circle-radius': 10,\n                        'circle-color': '#ff7518'\n                    }\n                });\n                // this is where the code from the next step will go\n                map.on('click', (event) => {\n                    const coords = Object.keys(event.lngLat).map((key) => event.lngLat[key]);\n                    const end = {\n                        type: 'FeatureCollection',\n                        features: [\n                            {\n                                type: 'Feature',\n                                properties: {},\n                                geometry: {\n                                    type: 'Point',\n                                    coordinates: coords\n                                }\n                            }\n                        ]\n                    };\n                    if (map.getLayer('end')) {\n                        map.getSource('end').setData(end);\n\n                    } else {\n                        map.addLayer({\n                            id: 'end',\n                            type: 'circle',\n                            source: {\n                                type: 'geojson',\n                                data: {\n                                    type: 'FeatureCollection',\n                                    features: [\n                                        {\n                                            type: 'Feature',\n                                            properties: {},\n                                            geometry: {\n                                                type: 'Point',\n                                                coordinates: coords\n                                            }\n                                        }\n                                    ]\n                                }\n                            },\n                            paint: {\n                                'circle-radius': 10,\n                                'circle-color': '#ffffcc'\n                            }\n                        });\n                    } getRoute(coords);\n\n\n                });\n            });\n        </script>\n    </body>\n</html>\n\n\n\n`;\n\nreturn (\n  <Container>\n    <iframe id=\"myMap\" className=\"w-100 h-100\" srcDoc={code} />\n  </Container>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/fcff4038fecb38b0e63ee9e865f363886415006ec9413ea70dbae598207f201c/widget/NearBi.Mapbox", "fact_widget_deployments_id": "34656bb0f09c8178710c2e6b9f54b601", "inserted_timestamp": "2023-10-28T19:36:51.778Z", "modified_timestamp": "2023-10-28T19:36:51.778Z", "__row_index": 0}