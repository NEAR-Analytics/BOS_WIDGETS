{"tx_hash": "63nrcDe3YpuNgcv9ryayQJzbw8LApZZzTuTbsss45tsk", "action_id_social": "Ey8yeaqGgA6R6jTNgW3T9DD9CZsymf5KuNo5PEw6zknq-0-widget", "block_id": 112892928, "block_timestamp": "2024-02-15T16:47:52.152Z", "signer_id": "communityvoice.ndctools.near", "widget_name": "home", "source_code": "// home\r\n\r\nlet {\r\n  sharedBlockHeight,\r\n  tagShared,\r\n  isTest,\r\n  accountId,\r\n  sharedArticleId,\r\n  sharedCommentId,\r\n  sharedSearchInputValue,\r\n  topicShared,\r\n} = props;\r\n\r\nconst initLibsCalls = {\r\n  SBT: [\r\n    {\r\n      functionName: \"getSBTWhiteList\",\r\n      key: \"sbtWhiteList\",\r\n      props: {},\r\n    },\r\n  ],\r\n};\r\n\r\nState.init({\r\n  functionsToCallByLibrary: initLibsCalls,\r\n  usersSBTs: [],\r\n});\r\n\r\nconst usersSBTs = state.usersSBTs;\r\n\r\nlet newLibsCalls = state.functionsToCallByLibrary;\r\n\r\nState.update({ libsCalls: newLibsCalls });\r\n\r\nconst sbtWhiteList = state.sbtWhiteList\r\n  ? state.sbtWhiteList.map((sbt) => sbt.value)\r\n  : undefined;\r\n\r\nfunction createSbtOptions() {\r\n  return state.sbtWhiteList;\r\n}\r\n\r\n// const componentsOwner =\r\n//   \"f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb\";\r\nconst componentsOwner = \"sayalot.near\";\r\n\r\nconst authorForWidget = \"communityvoice.ndctools.near\";\r\n// const authorForWidget =\r\n// \"f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb\";\r\n// const authorForWidget = \"kenrou-it.near\";\r\n// const authorForWidget = \"silkking.near\";\r\n\r\nconst configWidget = \"home\";\r\n\r\nconst widgets = {\r\n  thisForum: `${authorForWidget}/widget/${configWidget}`,\r\n\r\n  views: {\r\n    editableWidgets: {\r\n      ndcForum: `${componentsOwner}/widget/NDC.Forum`,\r\n      create: `${componentsOwner}/widget/NDC.Forum.Create`,\r\n      header: `${componentsOwner}/widget/NDC.NavBar`,\r\n      showArticlesList: `${componentsOwner}/widget/NDC.Forum.AllArticlesList`,\r\n      showArticlesListSortedByAuthors: `${componentsOwner}/widget/NDC.AllArticlesSortByAuthors`,\r\n      articlesByAuthorCard: `${componentsOwner}/widget/NDC.ArticlesByAuthorCard`,\r\n      generalCard: `${componentsOwner}/widget/NDC.GeneralCard`,\r\n      articleView: `${componentsOwner}/widget/NDC.ArticleView`,\r\n      reactions: `${componentsOwner}/widget/NDC.Reactions`,\r\n      addComment: `${componentsOwner}/widget/NDC.AddComment`,\r\n      commentView: `${componentsOwner}/widget/NDC.CommentView`,\r\n      upVoteButton: `${componentsOwner}/widget/NDC.UpVoteButton`,\r\n      profileShortInlineBlock: `${componentsOwner}/widget/Profile.ShortInlineBlock`,\r\n      tagsEditor: `${componentsOwner}/widget/TagsEditor`,\r\n      kanbanBoard: `${componentsOwner}/widget/NDC.KanbanBoard`,\r\n      compactPost: `${componentsOwner}/widget/NDC.CompactPost`,\r\n      articleHistory: `${componentsOwner}/widget/NDC.ArticleHistory.Handler`,\r\n    },\r\n    standardWidgets: {\r\n      fasterTextInput: `f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb/widget/fasterTextInput`,\r\n      markownEditorIframe: `f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb/widget/MarkdownEditorIframe`,\r\n      styledComponents: \"rubycop.near/widget/NDC.StyledComponents\",\r\n      newStyledComponents: {\r\n        Element: {\r\n          Badge: \"nearui.near/widget/Element.Badge\",\r\n          User: \"nearui.near/widget/Element.User\",\r\n        },\r\n        Feedback: {\r\n          Spinner: \"nearui.near/widget/Feedback.Spinner\",\r\n        },\r\n        Input: {\r\n          Button: \"nearui.near/widget/Input.Button\",\r\n          Checkbox: \"nearui.near/widget/Input.Checkbox\",\r\n          Select: \"nearui.near/widget/Input.Select\",\r\n        },\r\n      },\r\n      socialMarkdown: \"mob.near/widget/SocialMarkdown\",\r\n      profileOverlayTrigger: \"mob.near/widget/Profile.OverlayTrigger\",\r\n      profileImage: \"mob.near/widget/ProfileImage\",\r\n      wikiOnSocialDB_TooltipProfiles: `testwiki.near/widget/WikiOnSocialDB_TooltipProfiles`,\r\n      navBarImg: \"mob.near/widget/Image\",\r\n    },\r\n  },\r\n\r\n  libs: {\r\n    libSBT: `sayalot.near/widget/lib.SBT`,\r\n    libComment: `sayalot.near/widget/lib.comment`,\r\n    libArticle: `sayalot.near/widget/lib.article`,\r\n    libEmojis: `sayalot.near/widget/lib.emojis`,\r\n    libUpVotes: `sayalot.near/widget/lib.upVotes`,\r\n    libNotifications: `sayalot.near/widget/lib.notifications`,\r\n  },\r\n};\r\n\r\nconst libSrcArray = [widgets.libs.libSBT];\r\n\r\nconst brand = {\r\n  brandName: \"Community Voice\",\r\n  logoHref:\r\n    \"https://ipfs.near.social/ipfs/bafkreifhkslni6dlocxya35vjft3fefk2am5uzkagmjjzobdjqlhrnbjz4\",\r\n  logoRemWidth: 12,\r\n  logoRemHeight: 4,\r\n};\r\n\r\nconst baseActions = {\r\n  commentBaseAction: \"communityVoiceComment\",\r\n  articlesBaseAction: \"communityVoiceArticle\",\r\n  upVoteBaseAction: \"communityVoiceUpVote\",\r\n  reactionBaseAction: \"communityVoiceReaction\",\r\n};\r\n\r\nconst kanbanColumns = [\"Open\", \"Claimed\", \"In Work\", \"Closed\"];\r\n\r\nconst kanbanRequiredTags = [];\r\nconst kanbanExcludedTags = [];\r\n\r\nconst CallLibrary = styled.div`\r\n    display: none;\r\n`;\r\n\r\nfunction mainStateUpdate(obj) {\r\n  State.update(obj);\r\n}\r\n\r\nfunction callLibs(\r\n  src,\r\n  stateUpdate,\r\n  functionsToCallByLibrary,\r\n  extraProps,\r\n  callerWidget\r\n) {\r\n  return (\r\n    <Widget\r\n      src={src}\r\n      props={{\r\n        mainStateUpdate,\r\n        isTest,\r\n        stateUpdate,\r\n        functionsToCallByLibrary,\r\n        callLibs,\r\n        widgets,\r\n        callerWidget,\r\n        ...extraProps,\r\n        usersSBTs,\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nreturn (\r\n  <>\r\n    {sbtWhiteList ? (\r\n      <Widget\r\n        src={widgets.ndcForum}\r\n        src={widgets.views.editableWidgets.ndcForum}\r\n        props={{\r\n          sharedBlockHeight,\r\n          tagShared,\r\n          isTest,\r\n          accountId,\r\n          sbtWhiteList,\r\n          authorForWidget,\r\n          widgets,\r\n          brand,\r\n          baseActions,\r\n          createSbtOptions,\r\n          kanbanColumns,\r\n          kanbanRequiredLabels,\r\n          kanbanExcludedLabels,\r\n          sharedArticleId,\r\n          sharedCommentId,\r\n          sharedSearchInputValue,\r\n          topicShared,\r\n          callLibs,\r\n          mainStateUpdate,\r\n        }}\r\n      />\r\n    ) : (\r\n      <Widget\r\n        src={widgets.views.standardWidgets.newStyledComponents.Feedback.Spinner}\r\n      />\r\n    )}\r\n    <CallLibrary>\r\n      {libSrcArray.map((src) => {\r\n        return callLibs(\r\n          src,\r\n          mainStateUpdate,\r\n          state.functionsToCallByLibrary,\r\n          { baseAction: baseActions.articlesBaseAction, kanbanColumns },\r\n          \"home\"\r\n        );\r\n      })}\r\n    </CallLibrary>\r\n  </>\r\n);\r\n", "metadata": {"fork_of": "f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb/widget/home@112892460"}, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/communityvoice.ndctools.near/widget/home", "fact_widget_deployments_id": "cf02c5c8aa05c6e90c3c40f2cfd935ac", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 13}