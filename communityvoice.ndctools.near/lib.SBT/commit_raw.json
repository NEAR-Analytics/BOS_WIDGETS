{"tx_hash": "AaBtG71bMpX4QKE6vcqYATp2HPZJKyJwhU25hgTYzGE9", "action_id_social": "EjBdgLEzEyyiPv4hnUgHZWsgeAkQqHU7BVktDjxipCmc-0-widget", "block_id": 115692151, "block_timestamp": "2024-03-29T03:25:03.384Z", "signer_id": "communityvoice.ndctools.near", "widget_name": "lib.SBT", "source_code": "const testnetSBTWhitelist = [\n  {\n    value: \"fractal-v2.i-am-human.testnet - class 1\",\n    title: \"Fractal\",\n    default: true,\n  },\n  {\n    value: \"community-v2.i-am-human.testnet - class 1\",\n    title: \"Community\",\n  },\n]\nconst mainnetSBTWhitelist = [\n  {\n    value: \"fractal.i-am-human.near - class 1\",\n    title: \"General\",\n    default: true,\n  },\n  { value: \"community.i-am-human.near - class 1\", title: \"OG\" },\n  { value: \"community.i-am-human.near - class 2\", title: \"Contributor\" },\n  {\n    value: \"community.i-am-human.near - class 3\",\n    title: \"Core Contributor\",\n  },\n  { value: \"elections.ndc-gwg.near - class 2\", title: \"HoM\" },\n  { value: \"elections.ndc-gwg.near - class 3\", title: \"CoA\" },\n  { value: \"elections.ndc-gwg.near - class 4\", title: \"TC\" },\n  { value: \"public\", title: \"Public\" },\n]\n\nconst getRegistryContract = (config) => {\n  return config.networkId === \"mainnet\"\n  ? \"registry.i-am-human.near\"\n  : \"registry-v2.i-am-human.testnet\";\n}\n  \nfunction getSBTWhiteList(config) {\n    return config.networkId === \"mainnet\" ? mainnetSBTWhitelist : testnetSBTWhitelist;    \n}\n\nfunction isValidUser(accountId, config) {\n  const userSBTs = getUserSBTs(accountId,config).then(userSBTs => {\n    const SBTWhiteList = getSBTWhiteList(config)\n    \n    const isValid = SBTWhiteList.some(sbt => {\n      const data = sbt.value.split(\" - class \");\n      const sbtsData = { name: data[0], classNumber: Number(data[1]) };\n      \n      const SBTsHaveMatched = userSBTs.some((userSbt) => {\n        return (\n          userSbt[0] === sbtsData.name &&\n          userSbt[1].find(\n            (sbtExtraData) =>\n            sbtExtraData.metadata.class === sbtsData.classNumber\n            )\n            );\n          });\n      \n      return SBTsHaveMatched    \n    })\n\n    return isValid\n  });\n\n  return userSBTs\n}\n  \nfunction getUserSBTs(accountId, config) {\n  const userSBTsPromise = Near.asyncView(getRegistryContract(config), \"sbt_tokens_by_owner\", {\n    account: accountId,\n  });\n\n  return userSBTsPromise;\n}\n\nreturn { isValidUser, getUserSBTs }", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/communityvoice.ndctools.near/widget/lib.SBT", "fact_widget_deployments_id": "52e5a06715e31ad881e0c4836cad75d9", "inserted_timestamp": "2024-03-29T04:30:46.452Z", "modified_timestamp": "2024-03-29T05:29:53.007Z", "__row_index": 6}