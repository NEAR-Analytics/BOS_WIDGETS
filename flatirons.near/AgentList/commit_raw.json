{"tx_hash": "F4z6vMMBU2sUePBWSFbgrBxnYt4bHn4NzJHJcq2w9tDg", "action_id_social": "Gbb57vBwaQh4KjaKfiko4JnfbCgcV6H3wCrBBxtNuac3-0-widget", "block_id": 112269048, "block_timestamp": "2024-02-07T00:13:55.472Z", "signer_id": "flatirons.near", "widget_name": "AgentList", "source_code": "const listAgents = () => {\n  return [\n    {\n      name: \"rfp-processor\",\n      displayName: \"RFP Proposal Processor\",\n      preferredProvider: \"OpenAI\",\n      preferredModel: \"AutoExpert (Chat)\",\n      prompt:\n        \"Evaluate the Proposal below as an answer to this RFP: \\nRFP: {RFP}\\nPROPOSAL:{proposal}\",\n      variables: { rfp: \"text\", proposal: \"text\" },\n      component: \"near/widget/AgentFramework.RFPProcessor\",\n      logoUrl: null,\n    },\n    {\n      name: \"investment-advisor\",\n      displayName: \"Investment Advisor\",\n      preferredProvider: \"OpenAI\",\n      preferredModel: \"gpt-4\",\n      prompt:\n        \"You are an investment advisor who will guide a user through selecting high dividend stocks.\",\n      component: \"near/widget/AgentFramework.InvestmentAdvisor\",\n      logoUrl: null,\n    },\n    {\n      name: \"travel-agent\",\n      displayName: \"Trip Planner\",\n      preferredProvider: \"OpenAI\",\n      preferredModel: \"gpt-3.5-turbo-0613\",\n      prompt:\n        \"You are an AI Travel Planner. Your goal is to sequentially help the human...\",\n      component: null,\n      logoUrl: null,\n    },\n  ];\n};\n\nconst onAgentSubmit = (inputs) =>\n  createAgent({\n    inputs: {\n      ...inputs,\n\n      bio_markdown: [\n        \"This is a sample text about your agent.\",\n        \"You can change it on the agent configuration page.\",\n      ].join(\"\\n\"),\n\n      logo_url:\n        \"https://ipfs.near.social/ipfs/bafkreibysr2mkwhb4j36h2t7mqwhynqdy4vzjfygfkfg65kuspd2bawauu\",\n\n      banner_url:\n        \"https://ipfs.near.social/ipfs/bafkreic4xgorjt6ha5z4s5e3hscjqrowe5ahd7hlfc5p4hb6kdfp6prgy4\",\n    },\n  });\n\nconst [showSpawner, setShowSpawner] = useState(false);\n\nconst [searchKey, setSearchKey] = useState(\"\");\nconst [sort, setSort] = useState(\"\");\n\nconst agentList = listAgents();\n\nconst SortedAndFiltered = (searchKey, sortBy) => {\n  let agents = (agentList ?? []).reverse();\n\n  let filtered = [...agents];\n  if (searchKey !== \"\") {\n    filtered = agents.filter((agent) =>\n      agent.name.toLowerCase().includes(searchKey.toLowerCase())\n    );\n  }\n\n  let sortedAgents = [...filtered];\n  if (sortBy !== \"\") {\n    sortedAgents.sort((a, b) => {\n      let nameA = a.name.toLowerCase();\n      let nameB = b.name.toLowerCase();\n\n      if (nameA < nameB) {\n        return -1;\n      }\n      if (nameA > nameB) {\n        return 1;\n      }\n      return 0;\n    });\n\n    if (sortBy === \"z-a\") {\n      sortedAgents.reverse();\n    }\n  }\n\n  return sortedAgents;\n};\n\nconst CardGrid = styled.div`\n  width: 100%;\n  height: 100%;\n\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: 3rem;\n\n  @media screen and (max-width: 992px) {\n    grid-template-columns: repeat(2, 1fr);\n  }\n\n  @media screen and (max-width: 768px) {\n    display: flex;\n    flex-direction: column;\n    gap: 2rem;\n  }\n`;\n\nconst InputContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  position: relative;\n  width: 100%;\n`;\n\nconst StyledDropdown = styled.div`\n  button {\n    text-align: left;\n\n    &::after {\n      position: absolute;\n      right: 8px;\n      top: 45%;\n      transform: translateX(-50%);\n    }\n  }\n`;\n\nreturn (\n  <div className=\"w-100\">\n    <div style={{ background: \"#f4f4f4\" }}>\n      <div\n        className=\"d-flex justify-content-between p-4\"\n        style={{ backgroundColor: \"\" }}\n      >\n        <div className=\"d-flex flex-column gap-3 w-100\">\n          <h1\n            className=\"m-0 fs-4\"\n            style={{ color: \"#555555\", fontSize: \"1.5rem\" }}\n          >\n            Agents\n          </h1>\n\n          <div className=\"d-flex col-12 flex-column flex-sm-row gap-4 justify-content-between align-items-center\">\n            <div className=\"d-flex flex-column flex-sm-row align-items-center gap-4 col-12 col-sm-6\">\n              <InputContainer className=\"border rounded-2\">\n                <div className=\"position-absolute d-flex ps-3 flex-column h-100 justify-center\">\n                  <i class=\"bi bi-search m-auto\"></i>\n                </div>\n                <input\n                  type=\"search\"\n                  className=\"ps-5 form-control border border-0\"\n                  value={searchKey ?? \"\"}\n                  onChange={(e) => setSearchKey(e.target.value)}\n                  placeholder={props.placeholder ?? `Search by name`}\n                />\n              </InputContainer>\n              <div class=\"dropdown w-100\">\n                <StyledDropdown>\n                  <button\n                    class=\"btn dropdown-toggle border rounded-2 bg-white w-100\"\n                    type=\"button\"\n                    data-bs-toggle=\"dropdown\"\n                    aria-expanded=\"false\"\n                  >\n                    Sort: {sort?.toUpperCase() || \"a-z\"}\n                  </button>\n                  <ul class=\"dropdown-menu dropdown-menu-end dropdown-menu-lg-start px-2 shadow\">\n                    <li\n                      onClick={() => setSort(\"\")}\n                      class=\"dropdown-item link-underline link-underline-opacity-0\"\n                    >\n                      Latest\n                    </li>\n                    <li\n                      onClick={() => setSort(\"a-z\")}\n                      class=\"dropdown-item link-underline link-underline-opacity-0\"\n                    >\n                      A-Z\n                    </li>\n                    <li\n                      onClick={() => setSort(\"z-a\")}\n                      class=\"dropdown-item link-underline link-underline-opacity-0\"\n                    >\n                      Z-A\n                    </li>\n                  </ul>\n                </StyledDropdown>\n              </div>\n            </div>\n            {context.accountId && (\n              <div className=\"d-flex flex-column justify-content-center align-self-end\">\n                <Widget\n                  src={\n                    \"devhub.near/widget/devhub.components.molecule.CommunityControl\"\n                  }\n                  props={{\n                    title: \"Agent\",\n                    onClick: () => setShowSpawner(!showSpawner),\n                  }}\n                />\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n      <div className=\"d-flex flex-wrap align-content-start gap-4 py-2 px-4 w-100 h-100\">\n        {showSpawner && (\n          <Widget\n            src=\"devhub.near/widget/devhub.entity.agent.Spawner\"\n            props={{\n              data: null,\n              onSubmit: onAgentSubmit,\n              onCancel: () => setShowSpawner(false),\n            }}\n          />\n        )}\n        <CardGrid>\n          {searchKey === \"\" && sort === \"\"\n            ? (agentsMetadata ?? []).reverse().map((agentMetadata) => (\n                <Widget\n                  src=\"devhub.near/widget/devhub.entity.community.Card\"\n                  props={{\n                    format: \"small\",\n                    isBannerEnabled: false,\n                    metadata: agentMetadata,\n                  }}\n                />\n              ))\n            : SortedAndFiltered(searchKey, sort).map((agentMetadata) => (\n                <Widget\n                  src=\"devhub.near/widget/devhub.entity.community.Card\"\n                  props={{\n                    format: \"small\",\n                    isBannerEnabled: false,\n                    metadata: agentMetadata,\n                  }}\n                />\n              ))}\n        </CardGrid>\n      </div>\n    </div>\n  </div>\n);\n", "metadata": {"fork_of": "devhub.near/widget/devhub.page.communities@110678762"}, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/flatirons.near/widget/AgentList", "fact_widget_deployments_id": "ffb72fcd51bc79caf3453238ab3e5c7d", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}