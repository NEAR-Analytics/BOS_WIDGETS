{"tx_hash": "2CykLLccTYcUDVTW49NSLMv4xcsjJ1FhLRQyHxk43gnQ", "action_id_social": "ESYaA36st83dxRtzPedyRPnCYgf2N88UZzvzYYZ3BPnX-0-widget", "block_id": 112698817, "block_timestamp": "2024-02-12T19:51:32.683Z", "signer_id": "box_factory.near", "widget_name": "MysteryBox.Manage.Screens.AddNearReward", "source_code": "console.log('props', props);\n\nconst isValidPool = (pool) => {\n  if (pool.capacity === undefined || pool.capacity === null) return false;\n\n  const capacityNum = Number(pool.capacity);\n\n  if (!Number.isInteger(capacityNum)) return false;\n\n  if (capacityNum < 1) return false;\n\n  if (pool.amount === undefined || pool.amount === null) return false;\n\n  const amountNum = Number(pool.amount);\n\n  if (Number.isNaN(amountNum)) return false;\n\n  if (amountNum < 0.1) return false;\n\n  return true;\n};\n\nconst createPool = () => ({\n  id: Date.now(),\n  rarity: 'rare',\n  capacity: '1',\n  amount: '0.1',\n});\n\nState.init({\n  pools: [createPool()],\n});\n\nconst Svg = styled.svg`\n  height: 36px;\n  cursor: pointer;\n`;\n\nconst WrapperMenu = styled.div`\n  background: rgba(24, 36, 50, 1);\n  border: 0;\n  border-radius: 30px;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n\n  flex-basis: 70%;\n\n  width: 40%;\n\n  @media (max-width: 1024px) {\n    width: 54%;\n  }\n\n  @media (max-width: 786px) {\n    width: 70%;\n  }\n\n  @media (max-width: 512px) {\n    width: 90%;\n  }\n`;\n\nconst MenuTitle = styled.p`\n  font-family: 'Kodchasan', sans-serif;\n  font-size: 24px;\n  font-weight: 700;\n  letter-spacing: 0em;\n  text-align: center;\n  color: #ffffff;\n  margin: 0;\n`;\n\nconst MenuSubtitle = styled.p`\n  font-family: 'Kodchasan', sans-serif;\n  font-size: 14px;\n  font-weight: 400;\n  letter-spacing: 0em;\n  text-align: center;\n  color: rgba(43, 204, 194, 1);\n  margin: 0;\n`;\n\nconst MenuHeader = styled.div``;\nconst MenuContent = styled.div`\n  flex-basis: 230px;\n\n  @media (max-width: 512px) {\n    flex-basis: 320px;\n  }\n\n  width: 100%;\n\n  overflow-x: hidden;\n  overflow-x: scroll;\n`;\n\nconst WrapperMenuButton = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst MenuButton = styled.button`\n  border: 0;\n  border-radius: 10px;\n\n  width: 45%;\n  height: 36px;\n\n  font-family: 'Kodchasan', sans-serif;\n  font-size: 14px;\n  font-weight: 700;\n  letter-spacing: 0em;\n  text-align: center;\n  color: #ffffff;\n\n  background: #638caf;\n`;\n\nconst WrapperAddPoolButton = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n`;\n\nconst AddPoolButton = styled.button`\n  border: 0;\n  border-radius: 10px;\n\n  width: 60%;\n  height: 24px;\n\n  font-family: 'Kodchasan', sans-serif;\n  font-size: 14px;\n  font-weight: 700;\n  letter-spacing: 0em;\n  text-align: center;\n  color: #ffffff;\n  text-transform: uppercase;\n\n  background: #638caf33;\n`;\n\nconst WrapperTable = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-evenly;\n\n  width: 100%;\n  margin-bottom: 16px;\n`;\n\nconst deletePool = (id) => {\n  console.log('deleting pool', id);\n\n  State.update((previousState) => {\n    return {\n      ...previousState,\n      pools: previousState.pools.filter((pool) => pool.id !== id),\n    };\n  });\n};\n\nconst addPool = () => {\n  console.log('add new pool');\n\n  State.update((previousState) => {\n    return {\n      ...previousState,\n      pools: [...previousState.pools, createPool()],\n    };\n  });\n};\n\nconst updadePool = (id, field, value) => {\n  console.log(`updating pool.${field}`, id, value);\n\n  State.update((previousState) => {\n    const { pools } = previousState;\n\n    const pool = pools.find((el) => el.id === id);\n\n    if (pool === -1) return previousState;\n\n    // unknown field\n    if (pool[field] === 'undefined') {\n      console.error(\n        `Can't update pool property ${field} since it doesn't exist`\n      );\n\n      return previousState;\n    }\n\n    pool[field] = value;\n\n    return {\n      ...previousState,\n      pools,\n    };\n  });\n};\n\nconst pools = state.pools || [];\n\nconst everyPoolIsValid = pools.every(isValidPool);\n\nconst shouldSubmitButtonBeDisabled = !everyPoolIsValid;\n\nconsole.log('shouldSubmitButtonBeDisabled', shouldSubmitButtonBeDisabled);\n\nconst submitTransactionToAddPools = () => {\n  console.log('submitTransactionToAddPools', pools);\n\n  if (!everyPoolIsValid) return;\n\n  const txn = pools.map((pool) => {\n    const amount = Big(pool.amount).mul(1e24);\n\n    const total = Big(pool.capacity).mul(amount);\n\n    return {\n      contractName: props.contract?.contract_id,\n      methodName: 'add_near_reward',\n      args: {\n        rarity: pool.rarity,\n        capacity: pool.capacity,\n        amount: amount.toFixed(),\n      },\n      gas: Big(10).pow(13), // 10 TGas\n      deposit: Big(10).pow(21).mul(5).plus(total).toFixed(), // 0.005N + rewards\n    };\n  });\n\n  Near.call(txn);\n};\n\nreturn (\n  <>\n    <Widget\n      src=\"box_factory.near/widget/MysteryBox.Manage.Components.Title\"\n      props={{\n        text: 'Add Near Reward',\n      }}\n    />\n    <WrapperMenu>\n        <Widget\n          src=\"box_factory.near/widget/MysteryBox.Manage.Components.MenuHeader\"\n          props={{\n            title: props.contract?.title,\n            subtitle: props.contract?.contract_id,\n          }}\n        />\n      <MenuContent>\n        {pools.map((pool) => (\n          <WrapperTable key={`pool_unique_key_${pool.id}`}>\n            <Widget\n              src=\"box_factory.near/widget/MysteryBox.Manage.Components.DeleteButton\"\n              props={{\n                onClick: () => deletePool(pool.id),\n              }}\n            />\n            <Widget\n              src=\"box_factory.near/widget/MysteryBox.Manage.Components.NearPool\"\n              props={{\n                pool: {\n                  rarity: pool.rarity,\n                  capacity: pool.capacity,\n                  amount: pool.amount,\n                },\n                onUpdate: (field, value) => {\n                  updadePool(pool.id, field, value);\n                },\n              }}\n            />\n          </WrapperTable>\n        ))}\n        <WrapperAddPoolButton>\n          <AddPoolButton onClick={addPool}>Add new pool</AddPoolButton>\n        </WrapperAddPoolButton>\n      </MenuContent>\n    </WrapperMenu>\n    <Widget\n      src={`box_factory.near/widget/MysteryBox.Manage.Components.SubmitButton`}\n      props={{\n        text: 'Submit',\n        disabled: shouldSubmitButtonBeDisabled,\n        onClick: submitTransactionToAddPools,\n      }}\n    />\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/box_factory.near/widget/MysteryBox.Manage.Screens.AddNearReward", "fact_widget_deployments_id": "ac882570991630186626eecb63de0865", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}