{"tx_hash": "2CykLLccTYcUDVTW49NSLMv4xcsjJ1FhLRQyHxk43gnQ", "action_id_social": "ESYaA36st83dxRtzPedyRPnCYgf2N88UZzvzYYZ3BPnX-0-widget", "block_id": 112698817, "block_timestamp": "2024-02-12T19:51:32.683Z", "signer_id": "box_factory.near", "widget_name": "MysteryBox.Manage.Screens.MintBox", "source_code": "console.log('props', props);\n\nconst isValidAccount = (account) => {\n  if (account.amount === undefined || account.amount === null) return false;\n\n  const amountNum = Number(account.amount);\n\n  if (!Number.isInteger(amountNum)) return false;\n\n  if (amountNum < 1) return false;\n\n  if (!account.address) return false;\n\n  /** @todo verify address */\n\n  return true;\n};\n\nconst createAccount = () => ({\n  id: Date.now(),\n  rarity: 'rare',\n  address: '',\n  amount: '1',\n});\n\nState.init({\n  accounts: [createAccount()],\n});\n\nconst WrapperMenu = styled.div`\n  background: rgba(24, 36, 50, 1);\n  border: 0;\n  border-radius: 30px;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n\n  flex-basis: 70%;\n\n  width: 40%;\n\n  @media (max-width: 1024px) {\n    width: 54%;\n  }\n\n  @media (max-width: 786px) {\n    width: 70%;\n  }\n\n  @media (max-width: 512px) {\n    width: 90%;\n  }\n`;\n\nconst MenuTitle = styled.p`\n  font-family: 'Kodchasan', sans-serif;\n  font-size: 28px;\n  font-weight: 700;\n  letter-spacing: 0em;\n  text-align: center;\n  color: #ffffff;\n  margin: 0;\n`;\n\nconst MenuSubtitle = styled.p`\n  font-family: 'Kodchasan', sans-serif;\n  font-size: 14px;\n  font-weight: 400;\n  letter-spacing: 0em;\n  text-align: center;\n  color: rgba(43, 204, 194, 1);\n  margin: 0;\n`;\n\nconst MenuHeader = styled.div``;\nconst MenuContent = styled.div`\n  flex-basis: 230px;\n\n  @media (max-width: 512px) {\n    flex-basis: 320px;\n  }\n\n  width: 100%;\n\n  overflow-x: hidden;\n  overflow-y: scroll;\n`;\n\nconst WrapperMenuButton = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst WrapperAddPoolButton = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n`;\n\nconst AddPoolButton = styled.button`\n  border: 0;\n  border-radius: 10px;\n\n  width: 60%;\n  height: 24px;\n\n  font-family: 'Kodchasan', sans-serif;\n  font-size: 14px;\n  font-weight: 700;\n  letter-spacing: 0em;\n  text-align: center;\n  color: #ffffff;\n  text-transform: uppercase;\n\n  background: #638caf33;\n`;\n\nconst WrapperTable = styled.li`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-evenly;\n\n  width: 100%;\n  margin-bottom: 16px;\n`;\n\nconst TableContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  flex-basis: 80%;\n\n  height: 70px;\n\n  background: #27384c;\n\n  border: 0;\n  border-radius: 10px;\n`;\n\nconst HeaderRow = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  background: #334a5f;\n  height: 30px;\n\n  border: 0;\n  border-radius: 10px;\n`;\n\nconst TableRow = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  flex-grow: 1;\n`;\n\nconst TableCell = styled.div`\n  flex: 1;\n  text-align: center;\n\n  font-family: 'Kodchasan', sans-serif;\n  font-size: 11px;\n  font-weight: 300;\n  letter-spacing: 0em;\n  text-align: center;\n  color: #ffffff;\n\n  display: flex;\n  justify-content: space-evenly;\n  align-items: center;\n`;\n\nconst TextCell = styled.input`\n  font-family: 'Kodchasan', sans-serif;\n  font-size: 11px;\n  font-weight: 400;\n  letter-spacing: 0em;\n  text-align: center;\n  color: #2bccc2;\n  width: 110px;\n  height: 21px;\n\n  background: #18243280;\n  border: 0;\n  border-radius: 50px;\n`;\n\nconst NumberCell = styled.input`\n  font-family: 'Kodchasan', sans-serif;\n  font-size: 14px;\n  font-weight: 700;\n  letter-spacing: 0em;\n  text-align: center;\n  color: #2bccc2;\n  width: 80px;\n  height: 21px;\n\n  background: #18243280;\n  border: 0;\n  border-radius: 50px;\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n\n  -moz-appearance: textfield;\n`;\n\nconst WrapperSocial = styled.div`\n  display: flex;\n  width: 180px;\n  align-items: center;\n  justify-content: space-around;\n`;\n\nconst SocialText = styled.p`\n  font-family: 'Kodchasan', sans-serif;\n  font-size: 12px;\n  font-weight: 700;\n  line-height: 16px;\n  letter-spacing: 0em;\n  text-align: center;\n  color: #ffffff;\n  text-transform: uppercase;\n  margin: 0;\n`;\n\nconst SocialLink = styled.a`\n  cursor: pointer;\n  text-align: none;\n  height: 16px;\n  margin: 0;\n  padding: 0;\n`;\n\nconst SocialIcon = styled.img`\n  height: 100%;\n  vertical-align: unset;\n`;\n\nconst deleteAccount = (id) => {\n  console.log('deleting account', id);\n\n  State.update((previousState) => {\n    return {\n      ...previousState,\n      accounts: previousState.accounts.filter((account) => account.id !== id),\n    };\n  });\n};\n\nconst addAccount = () => {\n  console.log('add new account');\n\n  State.update((previousState) => {\n    return {\n      ...previousState,\n      accounts: [...previousState.accounts, createAccount()],\n    };\n  });\n};\n\nconst updadeAccount = (id, field, value) => {\n  console.log(`updating account.${field}`, id, value);\n\n  State.update((previousState) => {\n    const { accounts } = previousState;\n\n    const account = accounts.find((account) => account.id === id);\n\n    if (account === -1) return previousState;\n\n    // unknown field\n    if (account[field] === 'undefined') {\n      console.error(\n        `Can't update account property ${field} since it doesn't exist`\n      );\n\n      return previousState;\n    }\n\n    account[field] = value;\n\n    return {\n      ...previousState,\n      accounts,\n    };\n  });\n};\n\nconst accounts = state.accounts || [];\n\nconst everyAccountIsValid = accounts.every(isValidAccount);\n\nconst shouldSubmitButtonBeDisabled = !everyAccountIsValid;\n\nconsole.log('shouldSubmitButtonBeDisabled', shouldSubmitButtonBeDisabled);\n\nconst submitTransactionToMintBoxes = () => {\n  console.log('submitTransactionToMintBoxes', accounts);\n\n  if (!everyAccountIsValid) return;\n\n  const accountsGrouppedByRarity = accounts.reduce((prev, curr) => {\n    const { rarity, ...other } = curr;\n\n    const previousAccounts = prev[rarity] || [];\n\n    return {\n      ...prev,\n      [rarity]: [...previousAccounts, other],\n    };\n  }, {});\n\n  console.log('accountsGrouppedByRarity', accountsGrouppedByRarity);\n\n  const txn = Object.entries(accountsGrouppedByRarity).map(\n    ([rarity, partialAccounts]) => {\n      const accounts = partialAccounts\n        .map((partialAccount) =>\n          Array(parseInt(partialAccount.amount)).fill(\n            partialAccount.address.replaceAll(' ', '')\n          )\n        )\n        .flat();\n\n      const total = accounts.reduce((prev, curr) => {\n        return prev + 2520 + 40 * curr.length;\n      }, 0);\n\n      console.log('total', total);\n\n      const totalNum = Big(680).plus(total).mul(Big(10).pow(18));\n\n      return {\n        contractName: props.contract?.contract_id,\n        methodName: 'mint_many',\n        args: {\n          rarity,\n          accounts,\n        },\n        gas: Big(10).pow(14), // 100 TGas\n        deposit: totalNum.toFixed(), // 0.00064N + accounts\n      };\n    }\n  );\n\n  Near.call(txn);\n};\n\nreturn (\n  <>\n    <Widget\n      src=\"box_factory.near/widget/MysteryBox.Manage.Components.Title\"\n      props={{\n        text: 'Mint Box',\n      }}\n    />\n    <WrapperMenu>\n      <Widget\n        src=\"box_factory.near/widget/MysteryBox.Manage.Components.MenuHeader\"\n        props={{\n          title: props.contract?.title,\n          subtitle: props.contract?.contract_id,\n        }}\n      />\n      <MenuContent>\n        {accounts.map((account) => (\n          <WrapperTable key={`account_unique_key_${account.id}`}>\n            <Widget\n              src=\"box_factory.near/widget/MysteryBox.Manage.Components.DeleteButton\"\n              props={{\n                onClick: () => deleteAccount(account.id),\n              }}\n            />\n            <TableContainer>\n              <HeaderRow>\n                <TableCell>Box Rarity</TableCell>\n                <TableCell>Account</TableCell>\n                <TableCell>Amount</TableCell>\n              </HeaderRow>\n              <TableRow>\n                <TableCell>\n                  <Widget\n                    src={`box_factory.near/widget/MysteryBox.Manage.Components.RarityButton`}\n                    props={{\n                      rarity: 'rare',\n                      active: account.rarity === 'rare',\n                      tooltip: 'Rare',\n                      onClick: () => {\n                        updadeAccount(account.id, 'rarity', 'rare');\n                      },\n                    }}\n                  />\n                  <Widget\n                    src={`box_factory.near/widget/MysteryBox.Manage.Components.RarityButton`}\n                    props={{\n                      rarity: 'epic',\n                      active: account.rarity === 'epic',\n                      tooltip: 'Epic',\n                      onClick: () => {\n                        updadeAccount(account.id, 'rarity', 'epic');\n                      },\n                    }}\n                  />\n                  <Widget\n                    src={`box_factory.near/widget/MysteryBox.Manage.Components.RarityButton`}\n                    props={{\n                      rarity: 'legendary',\n                      active: account.rarity === 'legendary',\n                      tooltip: 'Legendary',\n                      onClick: () => {\n                        updadeAccount(account.id, 'rarity', 'legendary');\n                      },\n                    }}\n                  />\n                </TableCell>\n                <TableCell>\n                  <TextCell\n                    value={account.address}\n                    onChange={(e) => {\n                      updadeAccount(account.id, 'address', e.target.value);\n                    }}\n                  />\n                </TableCell>\n                <TableCell>\n                  <NumberCell\n                    type=\"number\"\n                    min=\"1\"\n                    lang=\"en\"\n                    step=\"1\"\n                    value={account.amount}\n                    onChange={(e) => {\n                      updadeAccount(account.id, 'amount', e.target.value);\n                    }}\n                  />\n                </TableCell>\n              </TableRow>\n            </TableContainer>\n          </WrapperTable>\n        ))}\n        <WrapperAddPoolButton>\n          <AddPoolButton onClick={addAccount}>Add account</AddPoolButton>\n        </WrapperAddPoolButton>\n      </MenuContent>\n    </WrapperMenu>\n    <Widget\n      src={`box_factory.near/widget/MysteryBox.Manage.Components.SubmitButton`}\n      props={{\n        text: 'Submit',\n        disabled: shouldSubmitButtonBeDisabled,\n        onClick: submitTransactionToMintBoxes,\n      }}\n    />\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/box_factory.near/widget/MysteryBox.Manage.Screens.MintBox", "fact_widget_deployments_id": "ac745b1f27f7e18e8a78748af51bad99", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}