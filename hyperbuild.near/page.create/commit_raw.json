{"tx_hash": "CC9GcHy83rphSqwYdFGRGRyFvEi4uTU9wceCkLZk2NT3", "action_id_social": "4DSN3SK9hpm79UiPYgKx3J9sAV4XbSPNkc15u1u7PCXy-0-widget", "block_id": 120166680, "block_timestamp": "2024-05-31T23:45:45.327Z", "signer_id": "hyperbuild.near", "widget_name": "page.create", "source_code": "const { DataCreator } = VM.require(\"hyperbuild.near/widget/create.data\");\nconst { CreateHyperfile } = VM.require(\n  \"hyperbuild.near/widget/create.hyperfiles\"\n);\n//const { GitHubAPIExample } = VM.require(  \"create.near/widget/GitHub.API.Example\");\nconst { CreateMetadata } = VM.require(\"hyperbuild.near/widget/create.metadata\");\nconst TabContent = styled.div`\n  margin-top: 1rem;\n`;\nconst Form = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  width: 100%;\n`;\nconst Label = styled.label`\n  font-weight: bold;\n`;\nconst Input = styled.input`\n  padding: 5px;\n`;\nconst Select = styled.select`\n  padding: 8px;\n`;\nconst FormGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nconst Button = styled.button``;\nconst Row = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\nconst [rawData, setRawData] = useState(\"\");\nconst [source, setSource] = useState(\"\");\nconst [schema, setSchema] = useState(\"\");\nconst [adapter, setAdapter] = useState(\"\");\nconst [reference, setReference] = useState(undefined);\nconst [activeTab, setActiveTab] = useState(\"content\");\nconst [name, setName] = useState(props.name ?? \"\");\nconst [description, setDescription] = useState(props.description ?? \"\");\nconst [hyperfile, setHyperfile] = useState(\"\");\nconst [type, setType] = useState(\"\");\nconst [filePath, setFilePath] = useState(null);\nconst [defaultView, setDefaultView] =\n  useState(\"HYPERFILE\") || props.defaultView;\nfunction generateUID() {\n  const maxHex = 0xffffffff;\n  const randomNumber = Math.floor(Math.random() * maxHex);\n  return randomNumber.toString(16).padStart(8, \"0\");\n}\nconst handleCreate = () => {\n  if (create) {\n    console.log(\"it's something\", rawData);\n    // store the data somewhere, based on the adapter\n    create(rawData).then((reference) => {\n      // now we have a reference to the data\n      const thingId = generateUID();\n      const hyperfile = {\n        thing: {\n          // which we store in the social contract\n          [thingId]: {\n            \"\": JSON.stringify({\n              source: source,\n              adapter: adapter,\n              reference: reference,\n            }),\n            metadata: {\n              name: name,\n              description: description,\n              schema: schema,\n            },\n          },\n        },\n      };\n      setHyperfile(JSON.stringify(hyperfile, null, 2));\n    });\n  } else {\n    console.log(\"invalid adapter\");\n  }\n};\nconsole.log(\"source: \", source);\nconsole.log(\"schema: \", schema);\nconsole.log(\"data: \", rawData);\nconsole.log(\"adapter: \", adapter);\nreturn (\n  <div className=\"container mt-3 p-3 border bg-light\">\n    <div className=\"row\">\n      <h1>Hyperfiles Creator</h1>\n      <p>\n        <i>\n          *View the\n          <a href=\"https://opencann.notion.site/Hyperfiles-52cdfb892aff4d0ebe2178436c5edf6d\">\n            docs\n          </a>\n          to learn more about how Hyperfiles data structures work.\n        </i>\n      </p>\n      <p>\n        <ul>\n          <li>\n            Publish structured data objects, attest (add references) to data and\n            reference objects, and run jobs (coming soon).\n          </li>\n          <li>\n            Each schema contains an ordered list of types that describes the\n            structure of corresponding data objects.\n          </li>\n          <li>\n            Common types & schemas compose into a graph of related entities\n            (data + creators) and actions (references + jobs).\n          </li>\n        </ul>\n      </p>\n      <hr />\n    </div>\n    <Row style={{ gap: \"10px\", marginBottom: \"16px\" }}>\n      <h2>Create</h2>{\" \"}\n      <Select\n        value={state.defaultView}\n        onChange={(e) => setDefaultView(e.target.value)}\n      >\n        <option value=\"HYPERFILE\">Data Object</option>\n        <option value=\"ATTESTATION\">Attestation</option>\n        <option value=\"SCHEMA\">Schema</option>\n        <option value=\"TYPE\">Type</option>\n        <option value=\"JOB\">Job</option>\n      </Select>\n    </Row>\n    <ul className=\"nav nav-tabs\">\n      <li className=\"nav-item\">\n        <a\n          className={`nav-link ${activeTab === \"content\" ? \"active\" : \"\"}`}\n          onClick={() => setActiveTab(\"content\")}\n        >\n          Content\n        </a>\n      </li>\n      <li className=\"nav-item\">\n        <a\n          className={`nav-link ${activeTab === \"metadata\" ? \"active\" : \"\"}`}\n          onClick={() => setActiveTab(\"metadata\")}\n        >\n          Metadata\n        </a>\n      </li>\n    </ul>\n    <div className=\"row\">\n      <TabContent>\n        {defaultView === \"HYPERFILE\" && (\n          <div className=\"row\">\n            <TabContent>\n              {activeTab === \"content\" && (\n                <div className=\"row\">\n                  <div className=\"col\">\n                    <div className=\"p-3 border bg-light\">\n                      <Widget\n                        src=\"hyperbuild.near/widget/create.hyperfile\"\n                        props={{}}\n                      />\n                    </div>\n                  </div>\n                </div>\n              )}\n            </TabContent>\n            <TabContent>\n              {activeTab === \"metadata\" && (\n                <CreateMetadata\n                  name={name}\n                  setName={setName}\n                  description={description}\n                  setDescription={setDescription}\n                />\n              )}\n            </TabContent>\n          </div>\n        )}\n      </TabContent>\n      <TabContent>\n        {defaultView === \"ATTESTATION\" && (\n          <div className=\"row\">\n            <TabContent>\n              {activeTab === \"content\" && (\n                <div className=\"row\">\n                  <div className=\"col\">\n                    <div className=\"p-3 border bg-light\">\n                      <Widget\n                        src=\"hyperbuild.near/widget/create.reference\"\n                        props={{}}\n                      />\n                    </div>\n                  </div>\n                </div>\n              )}\n            </TabContent>\n            <TabContent>\n              {activeTab === \"metadata\" && (\n                <CreateMetadata\n                  name={name}\n                  setName={setName}\n                  description={description}\n                  setDescription={setDescription}\n                />\n              )}\n            </TabContent>\n          </div>\n        )}\n      </TabContent>\n      <TabContent>\n        {defaultView === \"SCHEMA\" && (\n          <div className=\"row\">\n            <TabContent>\n              {activeTab === \"content\" && (\n                <div className=\"row\">\n                  <div className=\"col\">\n                    <div className=\"p-3 border bg-light\">\n                      <Widget\n                        src=\"hyperbuild.near/widget/create.edit.schema\"\n                        props={{}}\n                      />\n                    </div>\n                  </div>\n                </div>\n              )}\n            </TabContent>\n            <TabContent>\n              {activeTab === \"metadata\" && (\n                <CreateMetadata\n                  name={name}\n                  setName={setName}\n                  description={description}\n                  setDescription={setDescription}\n                />\n              )}\n            </TabContent>\n          </div>\n        )}\n      </TabContent>\n      <TabContent>\n        {defaultView === \"TYPE\" && (\n          <div className=\"row\">\n            <TabContent>\n              {activeTab === \"content\" && (\n                <div className=\"row\">\n                  <div className=\"col\">\n                    <div className=\"p-3 border bg-light\">\n                      <Widget\n                        src=\"hyperbuild.near/widget/create.edit.type\"\n                        props={{}}\n                      />\n                    </div>\n                  </div>\n                </div>\n              )}\n            </TabContent>\n            <TabContent>\n              {activeTab === \"metadata\" && (\n                <CreateMetadata\n                  name={name}\n                  setName={setName}\n                  description={description}\n                  setDescription={setDescription}\n                />\n              )}\n            </TabContent>\n          </div>\n        )}\n      </TabContent>\n      <TabContent>\n        {defaultView === \"JOB\" && (\n          <div className=\"row\">\n            <TabContent>\n              {activeTab === \"content\" && (\n                <div className=\"row\">\n                  <div className=\"col\">\n                    <div className=\"p-3 border bg-light\">\n                      <Widget\n                        src=\"hyperbuild.near/widget/create.job\"\n                        props={{}}\n                      />\n                    </div>\n                  </div>\n                </div>\n              )}\n            </TabContent>\n            <TabContent>\n              {activeTab === \"metadata\" && (\n                <CreateMetadata\n                  name={name}\n                  setName={setName}\n                  description={description}\n                  setDescription={setDescription}\n                />\n              )}\n            </TabContent>\n          </div>\n        )}\n      </TabContent>\n    </div>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/hyperbuild.near/widget/page.create", "fact_widget_deployments_id": "79926ad458e22d253ede4914c9d2a6da", "inserted_timestamp": "2024-06-01T02:00:15.259Z", "modified_timestamp": "2024-06-01T02:00:15.259Z", "__row_index": 4}