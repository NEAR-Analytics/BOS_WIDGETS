{"tx_hash": "CC9GcHy83rphSqwYdFGRGRyFvEi4uTU9wceCkLZk2NT3", "action_id_social": "4DSN3SK9hpm79UiPYgKx3J9sAV4XbSPNkc15u1u7PCXy-0-widget", "block_id": 120166680, "block_timestamp": "2024-05-31T23:45:45.327Z", "signer_id": "hyperbuild.near", "widget_name": "create.data", "source_code": "const DataCreator = ({ initialData, onCreation, adapters, schema }) => {\n  const [data, setData] = useState(initialData);\n  const [selectedAdapter, setAdapter] = useState(adapters[0].value);\n\n  const handleInputChange = (name, value) => {\n    setData((prev) => ({ ...prev, [name]: value }));\n  };\n\n  const createData = async () => {\n    const adapterScript = VM.require(selectedAdapter);\n    const reference = await adapterScript.create(data);\n    onCreation(reference);\n  };\n\n  return (\n    <Form>\n      {Object.entries(schema.properties).map(([name, spec]) => (\n        <FormGroup key={name}>\n          <Label>{spec.label}</Label>\n          <Input\n            type={spec.type}\n            value={data[name]}\n            onChange={(e) => handleInputChange(name, e.target.value)}\n          />\n        </FormGroup>\n      ))}\n      <Button onClick={createData}>Create</Button>\n    </Form>\n  );\n};\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/hyperbuild.near/widget/create.data", "fact_widget_deployments_id": "750a4b69a5365c9bbf44477a3f7ca374", "inserted_timestamp": "2024-06-01T02:00:15.259Z", "modified_timestamp": "2024-06-01T02:00:15.259Z", "__row_index": 0}