{"tx_hash": "CC9GcHy83rphSqwYdFGRGRyFvEi4uTU9wceCkLZk2NT3", "action_id_social": "4DSN3SK9hpm79UiPYgKx3J9sAV4XbSPNkc15u1u7PCXy-0-widget", "block_id": 120166680, "block_timestamp": "2024-05-31T23:45:45.327Z", "signer_id": "hyperbuild.near", "widget_name": "create.things", "source_code": "const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n`;\nconst FormGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nconst Label = styled.label`\n  font-weight: bold;\n`;\nconst Input = styled.input`\n  height: 30px;\n`;\nconst Select = styled.select`\n  height: 30px;\n`;\nconst Checkbox = styled.input`\n  type: checkbox;\n`;\n// Utility to parse JSON properties safely\nconst safelyParseJSON = (json) => {\n  try {\n    return JSON.parse(json);\n  } catch (e) {\n    return []; // return an empty array if JSON is invalid\n  }\n};\nconst CreateThings = ({ item, onChange }) => {\n  // Destructure and parse properties, handling both direct object access and stringified JSON\n  const properties =\n    typeof item.type === \"string\"\n      ? safelyParseJSON(Social.get(item.type, \"final\") || \"{}\").properties\n      : item.type.properties;\n  // Handle input changes and propagate them upwards\n  const handleInputChange = (propertyName, newValue) => {\n    onChange({\n      ...item.value,\n      [propertyName]: newValue,\n    });\n  };\n  const renderInput = (property) => {\n    const value = item.value[property.name] || \"\";\n    switch (property.type) {\n      case \"boolean\":\n        return (\n          <Checkbox\n            checked={value}\n            onChange={(e) => handleInputChange(property.name, e.target.checked)}\n          />\n        );\n      case \"string\":\n      case \"number\":\n      case \"date\":\n        return (\n          <Input\n            type={property.type === \"date\" ? \"date\" : \"text\"}\n            value={value}\n            onChange={(e) => handleInputChange(property.name, e.target.value)}\n          />\n        );\n      default:\n        return (\n          <Input\n            value={value}\n            onChange={(e) => handleInputChange(property.name, e.target.value)}\n          />\n        );\n    }\n  };\n  return (\n    <Container>\n      {properties.map((property) => (\n        <FormGroup key={property.name}>\n          <Label>{`${property.name}${property.isRequired ? \" *\" : \"\"}`}</Label>\n          {renderInput(property)}\n        </FormGroup>\n      ))}\n    </Container>\n  );\n};\nexport { CreateThings };\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/hyperbuild.near/widget/create.things", "fact_widget_deployments_id": "2c5a957c46a94520d8fc32b6c4ddaf3f", "inserted_timestamp": "2024-06-01T02:00:15.259Z", "modified_timestamp": "2024-06-01T02:00:15.259Z", "__row_index": 0}