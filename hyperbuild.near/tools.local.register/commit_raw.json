{"tx_hash": "CC9GcHy83rphSqwYdFGRGRyFvEi4uTU9wceCkLZk2NT3", "action_id_social": "4DSN3SK9hpm79UiPYgKx3J9sAV4XbSPNkc15u1u7PCXy-0-widget", "block_id": 120166680, "block_timestamp": "2024-05-31T23:45:45.327Z", "signer_id": "hyperbuild.near", "widget_name": "tools.local.register", "source_code": "//props:\n//onRegisterComplete(secretKeyBase64)\nconst accountId = context.accountId;\nif (!accountId) {\n  return \"Please sign in with NEAR wallet\";\n}\nif (!props.onRegisterComplete) {\n  return \"send onRegisterComplete in props\";\n}\nconst registeredPublicKeyBase64 = Social.get(\n  `${accountId}/private_message/public_key`\n);\nif (registeredPublicKeyBase64 === null) return \"Loading\";\nfunction randomKeyPairBase64() {\n  const keyPair = nacl.box.keyPair();\n  return {\n    secretKey: Buffer.from(keyPair.secretKey).toString(\"base64\"),\n    publicKey: Buffer.from(keyPair.publicKey).toString(\"base64\"),\n  };\n}\nconst keyPair = randomKeyPairBase64();\nState.init({\n  registeredPublicKeyBase64,\n  secretKeyBase64: keyPair.secretKey,\n  publicKeyBase64: keyPair.publicKey,\n});\nreturn (\n  <div>\n    {registeredPublicKeyBase64 && (\n      <div class=\"mb-3\">\n        {\n          \"You're already registered. If your key is compromised you can re-register, but will lose access to old messages.\"\n        }\n      </div>\n    )}\n    <div class=\"mb-3\">\n      <label for=\"inputSercetKey\" class=\"form-label\">\n        Secret key:\n      </label>\n      <div class=\"mb-3 input-group\">\n        <input\n          type=\"text\"\n          value={state.secretKeyBase64}\n          class=\"form-control\"\n          readonly=\"\"\n        />\n        <button\n          class=\"btn btn-outline-primary\"\n          disabled={state.registeredProsessing}\n          onClick={() => {\n            const keyPair = randomKeyPairBase64();\n            //re-render\n            State.update({\n              secretKeyBase64: keyPair.secretKey,\n              publicKeyBase64: keyPair.publicKey,\n            });\n          }}\n        >\n          Generate Random Key\n        </button>\n      </div>\n    </div>\n    <div class=\"mb-3 form-check\">\n      <input\n        onClick={() => {\n          State.update({\n            checkboxSaveSecretKey: !state.checkboxSaveSecretKey,\n          });\n        }}\n        defaultChecked={state.checkboxSaveSecretKey}\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        id=\"flexCheckDefault\"\n      />\n      <label class=\"form-check-label\" for=\"flexCheckDefault\">\n        <b>I SAVED MY SECRET KEY</b>\n      </label>\n    </div>\n    <CommitButton\n      disabled={!state.checkboxSaveSecretKey}\n      onClick={() => {\n        State.update({ processedSecretKey: state.secretKeyBase64 });\n      }}\n      onCommit={() => {\n        State.update({\n          registeredProsessing: false,\n        });\n        props.onRegisterComplete(state.processedSecretKey);\n      }}\n      data={{ private_message: { public_key: state.publicKeyBase64 } }}\n    >\n      Register\n    </CommitButton>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/hyperbuild.near/widget/tools.local.register", "fact_widget_deployments_id": "55a90053023ebf8dc5434c98734be620", "inserted_timestamp": "2024-06-01T02:00:15.259Z", "modified_timestamp": "2024-06-01T02:00:15.259Z", "__row_index": 0}