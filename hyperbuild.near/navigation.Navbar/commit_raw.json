{"tx_hash": "3ims5V4LHmMmzSVhP6PsXuhUn2hmqfHwgrX5e1RCxVjX", "action_id_social": "FApDQFAsSF2XLAUsmoahaqWSwk3C5U3JSndJYT3n2Ffb-0-widget", "block_id": 118588109, "block_timestamp": "2024-05-09T17:47:08.651Z", "signer_id": "hyperbuild.near", "widget_name": "navigation.Navbar", "source_code": "const StyledButton = styled.button`\n  all: unset;\n  display: ${(props) => (props.type === \"icon\" ? \"flex\" : \"inline-flex\")};\n  width: ${(props) => (props.type === \"icon\" ? \"40px\" : \"auto\")};\n  height: ${(props) => (props.type === \"icon\" ? \"40px\" : \"auto\")};\n  padding: ${(props) => (props.type === \"icon\" ? \"0\" : \"10px 20px\")};\n  justify-content: center;\n  align-items: center;\n  gap: 5px;\n  border-radius: ${(props) => (props.type === \"icon\" ? \"50%\" : \"8px\")};\n  font-size: 15px;\n  letter-spacing: 2px;\n  font-weight: 555;\n  font-family: \"Courier\", sans-serif;\n  background: ${(props) =>\n    props.isActive ? \"#39f095\" : `var(--button-${props.variant}-bg, #23242B)`};\n  color: ${(props) =>\n    props.isActive ? \"#000\" : `var(--button-${props.variant}-color, #39f095)`};\n  border: ${(props) =>\n    props.variant === \"outline\"\n      ? \"1px solid rgba(255, 255, 255, 0.20)\"\n      : \"none\"};\n  transition: background 300ms, color 300ms;\n  &:hover:not(:disabled),\n  &:focus {\n    background: #39f095;\n    color: #000;\n  }\n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n`;\nconst StyledNavbar = styled.div`\n  width: 64px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  padding: 15px 23px;\n  width: 100%;\n  background-color: #0b0c14;\n  border-bottom: 1px solid var(--stroke-color, rgba(255, 255, 255, 0.2));\n  border-radius: 8px;\n  @media screen and (max-width: 768px) {\n    padding: 15px;\n  }\n`;\nconst ButtonGroup = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  gap: 0.888rem;\n  @media screen and (max-width: 768px) {\n    flex-direction: column;\n    width: 100%;\n    a {\n      display: flex;\n    }\n  }\n`;\nconst DesktopNavigation = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n  @media screen and (max-width: 768px) {\n    display: none;\n  }\n`;\nconst MobileNavigation = styled.div`\n  display: none;\n  @media screen and (max-width: 768px) {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-between;\n    width: 100%;\n  }\n`;\nconst { href } = VM.require(\"buildhub.near/widget/lib.url\") || {\n  href: () => {},\n};\nconst NavLink = ({ to, children }) => (\n  <Link\n    key={to}\n    to={href({\n      widgetSrc: \"hyperbuild.near/widget/app\",\n      params: {\n        page: to,\n      },\n    })}\n  >\n    {children}\n  </Link>\n);\nconst [showMenu, setShowMenu] = useState(false);\nconst toggleDropdown = () => setShowMenu(!showMenu);\nconst SignInOrConnect = () => (\n  <>\n    {context.accountId ? (\n      <p\n        className=\"m-2\"\n        style={{\n          color: \"#39f095\",\n          fontSize: \"16px\",\n          letterSpacing: \"2px\",\n          fontFamily: \"Courier, sans-serif\",\n        }}\n      >\n        Connected\n      </p>\n    ) : (\n      <p\n        className=\"m-2\"\n        style={{\n          color: \"#39f095\",\n          fontSize: \"16px\",\n          letterSpacing: \"2px\",\n          fontFamily: \"Courier, sans-serif\",\n        }}\n      >\n        Connect\n      </p>\n    )}\n  </>\n);\nconst Navbar = ({ page, routes, ...props }) => (\n  <StyledNavbar>\n    <div className=\"d-flex align-items-center justify-content-between w-100\">\n      <DesktopNavigation className=\"container-xl\">\n        <Link\n          style={{ flex: 1 }}\n          to={href({\n            widgetSrc: \"hyperbuild.near/widget/app\",\n            params: {\n              page: \"home\",\n            },\n          })}\n        >\n          <img\n            style={{ width: 42, objectFit: \"cover\" }}\n            src=\"https://builders.mypinata.cloud/ipfs/QmQuePz1JfSQ2jh9pDCh95rHeUvPSyDrddetaWJKDXaimZ\"\n            alt=\"Hyperfiles\"\n          />\n        </Link>\n        <ButtonGroup style={{ flex: 1 }}>\n          {routes &&\n            (Object.keys(routes) || []).map((k) => {\n              const route = routes[k];\n              if (route.hide) {\n                return null;\n              }\n              return (\n                <NavLink to={k}>\n                  <StyledButton key={k} isActive={page === k}>\n                    {route.init.icon && <i className={route.init.icon}></i>}\n                    {route.init.name}\n                  </StyledButton>\n                </NavLink>\n              );\n            })}\n        </ButtonGroup>\n        <div\n          style={{\n            flex: 1,\n            display: \"flex\",\n            justifyContent: \"flex-end\",\n            alignItems: \"center\",\n            gap: \"0.5rem\",\n          }}\n        >\n          <SignInOrConnect />\n        </div>\n      </DesktopNavigation>\n      <MobileNavigation>\n        <Link\n          to={href({\n            widgetSrc: \"hyperbuild.near/widget/app\",\n            params: {\n              page: \"home\",\n            },\n          })}\n        >\n          <img\n            style={{ width: 39, objectFit: \"cover\" }}\n            src=\"https://builders.mypinata.cloud/ipfs/QmQuePz1JfSQ2jh9pDCh95rHeUvPSyDrddetaWJKDXaimZ\"\n            alt=\"Hyperfiles\"\n          />\n        </Link>\n        <StyledButton\n          type=\"icon\"\n          variant=\"outline\"\n          className=\"rounded-2\"\n          onClick={toggleDropdown}\n        >\n          <i style={{ fontSize: 24 }} className=\"bi bi-list\"></i>\n        </StyledButton>\n      </MobileNavigation>\n    </div>\n    <MobileNavigation>\n      {showMenu && (\n        <div className=\"text-white w-100 d-flex flex-column gap-3 mt-3\">\n          <ButtonGroup className=\"align-items-stretch\">\n            {routes &&\n              (Object.keys(routes) || []).map((k) => {\n                const route = routes[k];\n                if (route.hide) {\n                  return null;\n                }\n                return (\n                  <NavLink to={k} style={{ textDecoration: \"none\" }}>\n                    <StyledButton\n                      key={k}\n                      variant={page === k && \"primary\"}\n                      className=\"w-100\"\n                      onClick={() => setShowMenu(false)}\n                    >\n                      {route.init.icon && <i className={route.init.icon}></i>}\n                      {route.init.name}\n                    </StyledButton>\n                  </NavLink>\n                );\n              })}\n          </ButtonGroup>\n          <div className=\"d-flex w-100 align-items-center gap-3 justify-content-center\">\n            <SignInOrConnect />\n          </div>\n        </div>\n      )}\n    </MobileNavigation>\n  </StyledNavbar>\n);\nreturn <Navbar page={props.page} routes={props.routes} {...props} />;\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/hyperbuild.near/widget/navigation.Navbar", "fact_widget_deployments_id": "2e5ec1953c9fd42e87f496945a3bcd33", "inserted_timestamp": "2024-05-09T19:38:52.240Z", "modified_timestamp": "2024-05-09T19:38:52.240Z", "__row_index": 0}