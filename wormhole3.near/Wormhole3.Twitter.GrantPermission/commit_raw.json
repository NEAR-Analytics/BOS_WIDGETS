{"tx_hash": "79N8ccapWiKKsjWHi2ce3BbV1ADKeDNhRX4HraHgwoEF", "action_id_social": "7NpTNrx3CCoWC2tP2FsuAXLA72JvQJ3j5Cv3D3LeL6dD-0-widget", "block_id": 95695016, "block_timestamp": "2023-07-04T16:20:12.501Z", "signer_id": "wormhole3.near", "widget_name": "Wormhole3.Twitter.GrantPermission", "source_code": "const accountId = props.accountId ?? context.accountId;\nif (!accountId) {\n  return \"Please login first\";\n}\n\nconst { config, data, permissionReady, onClick } = props;\nconst {\n  twitterId,\n  twitterAvatar,\n  twitterName,\n  twitterUsername,\n  connected,\n  permissionGranted,\n  hasProposal,\n} = data;\n\nconst Description = styled.div`\n  font-size: 16px;\n  font-weight: 500;\n  margin-top: 10px;\n  margin-bottom: 32px;\n`;\n\nconst Highlight = styled.span`\n  font-weight: bolder;\n`;\n\n// button messages\nconst messages = [];\nif (!hasProposal && !connected) {\n  messages.push(\"Bind Accounts\");\n}\nif (!permissionGranted) {\n  messages.push(\"Grant Permission\");\n}\n\n// helper functions\nfunction parseAmount(amount, decimals) {\n  return Big(amount).mul(Big(10).pow(decimals));\n}\n\nfunction parseNEAR(amount) {\n  return parseAmount(amount, 24);\n}\n\n// handle actions\nfunction handleActions() {\n  // call actions\n  const actions = [];\n  if (!hasProposal && !connected) {\n    // propose binding proposal\n    actions.push({\n      contractName: config.bindingContractId,\n      methodName: \"propose_binding\",\n      args: {\n        platform: \"twitter\",\n        handle: twitterId,\n      },\n      deposit: parseNEAR(\"0.01\").toFixed(),\n    });\n  }\n  if (!permissionGranted) {\n    // grant post permission\n    actions.push({\n      contractName: config.nearSocialContractId,\n      methodName: \"grant_write_permission\",\n      args: {\n        predecessor_id: config.senderId,\n        keys: [\n          `${accountId}/post`,\n          `${accountId}/index/post`,\n          `${accountId}/index/comment`,\n        ],\n      },\n      // 0.0178 NEAR is required for grant permission\n      // deposit a bit more for new users who don't have much storage space in NEAR social\n      // TODO: check account storage amount\n      deposit: parseNEAR(\"0.09\").toFixed(),\n    });\n  }\n  Near.call(actions);\n\n  // onClick callback\n  if (onClick) {\n    onClick();\n  }\n}\n\nreturn (\n  <div>\n    <Description>\n      {!hasProposal && !connected ? (\n        <p>\n          \ud83d\udd17 Next, bind your NEAR account <Highlight>{accountId}</Highlight>{\" \"}\n          with your twitter account:\n        </p>\n      ) : (\n        <p>\n          \ud83d\udd17 Great! You have {connected ? \"bound\" : \"proposed binding\"} your\n          NEAR account <Highlight>{accountId}</Highlight>\n          with twitter account:\n        </p>\n      )}\n      <Widget\n        src={`${config.ownerId}/widget/Wormhole3.Twitter.Profile`}\n        props={{\n          avatarUrl: twitterAvatar,\n          name: twitterName,\n          username: twitterUsername,\n        }}\n      />\n      {!permissionGranted && (\n        <>\n          <br />\n          <p class=\"mb-0\">\n            \ud83d\udd11 {hasProposal || connected ? \"Next,\" : \"And\"} grant post\n            permission to Wormhole3 post sender\n          </p>\n          <p>\n            <Highlight>{config.senderId}</Highlight>, which will sync your\n            tweets to NEAR BOS!\n          </p>\n        </>\n      )}\n    </Description>\n    <Widget\n      src={`${config.ownerId}/widget/Wormhole3.Element.Button`}\n      props={{\n        onClick: handleActions,\n        children: messages.join(\" & \"),\n        disabled: !permissionReady,\n        padding: \"large\",\n      }}\n    />\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/wormhole3.near/widget/Wormhole3.Twitter.GrantPermission", "fact_widget_deployments_id": "89c84e5de683285dbd64f13d03f377f3", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}