{"tx_hash": "4Z59Msk66hRH8T8NxXvhWxTzJvwHjgeEayubbS2KdMuW", "action_id_social": "AsMtvZG5k39oZ8a5oyutqHzSs1dEDs9MPqE9t6XnZjrq-0-widget", "block_id": 115588449, "block_timestamp": "2024-03-27T15:18:16.507Z", "signer_id": "potlock.near", "widget_name": "Index", "source_code": "const ownerId = \"potlock.near\";\nconst donationContractId = \"donate.potlock.near\";\n// const potFactoryContractId =\n//   props.env === \"staging\" ? \"potfactory.staging.potlock.near\" : \"v1.potfactory.potlock.near\";\nconst nadabotContractId =\n  props.env === \"staging\" ? \"v1.staging.nadabot.near\" : \"v1.nadabot.near\";\nconst CREATE_PROJECT_TAB = \"createproject\";\nconst EDIT_PROJECT_TAB = \"editproject\";\nconst PROJECTS_LIST_TAB = \"projects\";\nconst PROJECT_DETAIL_TAB = \"project\";\nconst CART_TAB = \"cart\";\nconst FEED_TAB = \"feed\";\nconst POTS_TAB = \"pots\";\nconst DEPLOY_POT_TAB = \"deploypot\";\nconst POT_DETAIL_TAB = \"pot\";\nconst DONORS_TAB = \"donors\";\nconst PROFILE_TAB = \"profile\";\nconst EDIT_PROFILE_TAB = \"editprofile\";\nconst loraCss = fetch(\n  \"https://fonts.googleapis.com/css2?family=Lora:ital,wght@0,400..700;1,400..700&display=swap\"\n).body;\nconst Theme = styled.div`\n  position: relative;\n  * {\n    font-family: \"Mona-Sans\";\n    font-feature-settings: \"ss01\" on, \"salt\" on;\n    font-style: normal;\n    font-weight: 400;\n  }\n  @font-face {\n    font-family: mona-sans;\n    font-style: normal;\n    font-weight: 400;\n    src: local(\"Mona-Sans\"),\n      url(https://fonts.cdnfonts.com/s/91271/Mona-Sans-Regular.woff)\n        format(\"woff\");\n  }\n  @font-face {\n    font-family: mona-sans;\n    font-style: normal;\n    font-weight: 500;\n    src: local(\"Mona-Sans\"),\n      url(https://fonts.cdnfonts.com/s/91271/Mona-Sans-Medium.woff)\n        format(\"woff\");\n  }\n  @font-face {\n    font-family: mona-sans;\n    font-style: normal;\n    font-weight: 600;\n    src: local(\"Mona-Sans\"),\n      url(https://fonts.cdnfonts.com/s/91271/Mona-Sans-SemiBold.woff)\n        format(\"woff\");\n  }\n  @font-face {\n    font-family: mona-sans;\n    font-style: normal;\n    font-weight: 700;\n    src: local(\"Mona-Sans\"),\n      url(https://fonts.cdnfonts.com/s/91271/Mona-Sans-Bold.woff) format(\"woff\");\n  }\n  ${loraCss}\n`;\nState.init({\n  successModal: {\n    isOpen:\n      (!props.tab ||\n        props.tab === PROJECTS_LIST_TAB ||\n        props.tab === PROJECT_DETAIL_TAB ||\n        props.tab === POT_DETAIL_TAB) &&\n      props.transactionHashes,\n    successfulDonation: null,\n  },\n});\nconst tabContentWidget = {\n  [CREATE_PROJECT_TAB]: \"Project.Create\",\n  [EDIT_PROJECT_TAB]: \"Project.Create\",\n  [PROJECTS_LIST_TAB]: \"Project.ListPage\",\n  [PROJECT_DETAIL_TAB]: \"Project.Detail\",\n  [CART_TAB]: \"Cart.Checkout\",\n  [FEED_TAB]: \"Components.Feed\",\n  [POTS_TAB]: \"Pots.Home\",\n  [DEPLOY_POT_TAB]: \"Pots.Deploy\",\n  [POT_DETAIL_TAB]: \"Pots.Detail\",\n  [DONORS_TAB]: \"Components.Donors\",\n  [PROFILE_TAB]: \"Profile.Detail\",\n  [EDIT_PROFILE_TAB]: \"Profile.Edit\",\n};\nconst getTabWidget = (tab) => {\n  const defaultTabWidget = tabContentWidget[PROJECTS_LIST_TAB];\n  if (tab in tabContentWidget) {\n    return tabContentWidget[props.tab];\n  }\n  return defaultTabWidget;\n};\nconst props = {\n  ...(props ?? {}),\n  ...(state ?? {}),\n  ownerId: \"potlock.near\",\n  NADABOT_CONTRACT_ID: nadabotContractId,\n  referrerId: props.referrerId,\n  hrefWithParams: (href) => {\n    // pass env & referrerId to all links\n    if (props.env) {\n      href = `${href}${href.includes(\"?\") ? \"&\" : \"?\"}env=${props.env}`;\n    }\n    if (props.referrerId) {\n      href = `${href}${href.includes(\"?\") ? \"&\" : \"?\"}referrerId=${\n        props.referrerId\n      }`;\n    }\n    return href;\n  },\n  openDonationSuccessModal: (donation) => {\n    State.update({\n      successModal: { isOpen: true, successfulDonation: donation },\n    });\n  },\n};\nif (props.transactionHashes) {\n  switch (props.tab) {\n    case CART_TAB:\n      const { clearCart } = VM.require(\"potlock.near/widget/SDK.cart\") ?? {\n        clearCart: () => {},\n      };\n      // if checkout was successful after wallet redirect, clear cart\n      clearCart();\n      break;\n    default:\n      console.log(\n        \"transactionHash callback case not handled, tab: \",\n        props.tab\n      );\n  }\n}\nif (props.tab === EDIT_PROJECT_TAB) {\n  props.edit = true;\n}\nconst tabContent = (\n  <Widget src={`${ownerId}/widget/${getTabWidget(props.tab)}`} props={props} />\n);\nconst Content = styled.div`\n  width: 100%;\n  height: 100%;\n  background: #ffffff;\n  // padding: 3em;\n  border-radius: 0rem 0rem 1.5rem 1.5rem;\n  border-top: 1px solid var(--ui-elements-light, #eceef0);\n  background: var(--base-white, #fff);\n  &.form {\n    border: none;\n    background: #fafafa;\n  }\n`;\nconst isForm = [CREATE_PROJECT_TAB].includes(props.tab);\n// console.log(\"props in Index: \", props);\nreturn (\n  <Theme>\n    <Widget src={`${ownerId}/widget/Components.Nav`} props={props} />\n    <Content className={isForm ? \"form\" : \"\"}>{tabContent}</Content>\n    <Widget src={`${ownerId}/widget/Components.Attribution`} />\n    {props.tab !== POT_DETAIL_TAB && props.tab !== POTS_TAB && (\n      <Widget src={`${ownerId}/widget/Components.Banner`} props={props} />\n    )}\n    <Widget\n      src={`${ownerId}/widget/Project.ModalSuccess`}\n      props={{\n        ...props,\n        isModalOpen: state.successModal.isOpen,\n        successfulDonation: state.successModal.successfulDonation,\n        onClose: () =>\n          State.update({\n            successModal: { isOpen: false, successfulDonation: null },\n          }),\n      }}\n    />\n  </Theme>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/potlock.near/widget/Index", "fact_widget_deployments_id": "4d573e51329ed52c2fd6e654e46460d7", "inserted_timestamp": "2024-03-27T16:32:19.732Z", "modified_timestamp": "2024-03-27T16:32:19.732Z", "__row_index": 258}