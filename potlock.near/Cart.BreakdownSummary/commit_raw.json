{"tx_hash": "5TVv1Ff2mVHr1JRoyLstKvx3CXs243LLCpvLFvYvxkT6", "action_id_social": "7kkQ6yzPrrY7pm6x4S5He5QFeYwHUPZqrpKbqyfkbz1C-0-widget", "block_id": 104858538, "block_timestamp": "2023-11-03T18:26:41.477Z", "signer_id": "potlock.near", "widget_name": "Cart.BreakdownSummary", "source_code": "const ownerId = \"potlock.near\";\nconst donationContractId = \"donate.potlock.near\";\n\nconst IPFS_BASE_URL = \"https://nftstorage.link/ipfs/\";\nBig.PE = 100;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n  width: 380px;\n  //   background: white;\n`;\n\nconst Title = styled.div`\n  color: #2e2e2e;\n  font-size: 24px;\n  font-weight: 600;\n  line-height: 32px;\n  word-wrap: break-word;\n`;\n\nconst CurrencyHeader = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  padding: 8px;\n  border-radius: 5px;\n  background: #f0f0f0;\n`;\n\nconst CurrencyHeaderText = styled.div`\n  color: #7b7b7b;\n  font-size: 12px;\n  font-weight: 400;\n  line-height: 14px;\n  word-wrap: break-word;\n`;\n\nconst BreakdownItemContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  padding: 8px;\n`;\n\nconst BreakdownItemLeft = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: flex-start;\n  width: 50%;\n  gap: 8px;\n`;\n\nconst BreakdownItemRight = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: row;\n  align-items: center;\n  justify-content: flex-end;\n`;\n\nconst BreakdownItemText = styled.div`\n  color: #2e2e2e;\n  font-size: 14px;\n  font-weight: 400;\n  line-height: 16px;\n  word-wrap: break-word;\n`;\n\nconst CurrencyIcon = styled.img`\n  width: 20px;\n  height: 20px;\n`;\n\nconst TotalContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  padding: 8px;\n  border-top: 1px #7b7b7b solid;\n`;\n\nconst TotalText = styled.div`\n  color: #2e2e2e;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 20px;\n  word-wrap: break-word;\n`;\n\nconst ErrorText = styled.div`\n  color: #dd3345;\n  font-size: 14px;\n  font-weight: 400;\n  line-height: 20px;\n  word-wrap: break-word;\n  width: 100%;\n  text-align: center;\n`;\n\n// TODO: move this to state to handle selected FT once we support multiple FTs\n// TODO: note this is duplicated in Cart.CheckoutItem\nconst SUPPORTED_FTS = {\n  NEAR: {\n    iconUrl: IPFS_BASE_URL + \"bafkreicwkm5y7ojxnnfnmuqcs6ykftq2jvzg6nfeqznzbhctgl4w3n6eja\",\n    toIndivisible: (amount) => new Big(amount).mul(new Big(10).pow(24)),\n    fromIndivisible: (amount) => amount / 10e24,\n  },\n};\n\nconst MIN_REQUIRED_DONATION_AMOUNT_PER_PROJECT = 0.1;\n\nconst [amountsByFt, totalAmount, donationTooSmall] = useMemo(() => {\n  const amountsByFt = {};\n  let donationTooSmall = false;\n  Object.entries(props.cart).forEach(([projectId, { ft, amount }]) => {\n    if (!amountsByFt[ft]) amountsByFt[ft] = 0;\n    amountsByFt[ft] += parseFloat(amount || 0);\n    if (amountsByFt[ft] < MIN_REQUIRED_DONATION_AMOUNT_PER_PROJECT) donationTooSmall = true;\n  });\n  const totalAmount = Object.values(amountsByFt).reduce((acc, amount) => acc + amount, 0);\n  return [amountsByFt, totalAmount, donationTooSmall];\n}, [props]);\n\n// TODO: handle successful transaction\n// https://everything.dev/potlock.near/widget/Index?tab=cart&transactionHashes=8pgCqfpsFe2PZsTeugM3BnqhtpUmmrPXy6v4XgJcQ6TW\n\nconst handleDonate = () => {\n  // const transactions = [\n  //     // set data on social.near\n  //     {\n  //       contractName: \"social.near\",\n  //       methodName: \"set\",\n  //       deposit: Big(JSON.stringify(socialArgs).length * 0.00003).mul(Big(10).pow(24)),\n  //       args: socialArgs,\n  //     },\n  //   ];\n  //   if (!props.edit) {\n  //     transactions.push(\n  //       // register project on potlock\n  //       {\n  //         contractName: registryId,\n  //         methodName: \"register\",\n  //         deposit: Big(0.05).mul(Big(10).pow(24)),\n  //         args: potlockRegistryArgs,\n  //       }\n  //     );\n  //     if (!existingHorizonProject) {\n  //       transactions.push(\n  //         // register on NEAR Horizon\n  //         {\n  //           contractName: horizonId,\n  //           methodName: \"add_project\",\n  //           args: horizonArgs,\n  //         }\n  //       );\n  //     }\n  //   }\n  const transactions = [];\n  Object.entries(props.cart).forEach(([projectId, { ft, amount, referrerId }]) => {\n    const amountFloat = parseFloat(amount || 0);\n    const amountIndivisible = SUPPORTED_FTS[ft].toIndivisible(amountFloat);\n    const args = { recipient_id: projectId };\n    if (referrerId) args.referrer_id = referrerId;\n    transactions.push({\n      contractName: donationContractId,\n      methodName: \"donate\",\n      args,\n      deposit: amountIndivisible.toString(),\n    });\n  });\n  Near.call(transactions);\n};\n\nreturn (\n  <Container>\n    <Title>Breakdown summary</Title>\n    <CurrencyHeader>\n      <CurrencyHeaderText>Currency</CurrencyHeaderText>\n      <CurrencyHeaderText>USD</CurrencyHeaderText>\n    </CurrencyHeader>\n    {Object.entries(amountsByFt).map(([ft, amount]) => {\n      const amountFloat = parseFloat(amount || 0);\n      return (\n        <BreakdownItemContainer>\n          <BreakdownItemLeft>\n            <CurrencyIcon src={SUPPORTED_FTS[ft].iconUrl} />\n            <BreakdownItemText>{amountFloat.toFixed(2)}</BreakdownItemText>\n          </BreakdownItemLeft>\n          <BreakdownItemRight>\n            <BreakdownItemText>\n              ${!props.nearToUsd ? \"-\" : (amountFloat * props.nearToUsd).toFixed(2)}\n            </BreakdownItemText>\n          </BreakdownItemRight>\n        </BreakdownItemContainer>\n      );\n    })}\n    <TotalContainer>\n      <TotalText>Total</TotalText>\n      <TotalText>${!props.nearToUsd ? \"-\" : (totalAmount * props.nearToUsd).toFixed(2)}</TotalText>\n    </TotalContainer>\n    <Widget\n      src={`${ownerId}/widget/Buttons.ActionButton`}\n      props={{\n        type: \"primary\",\n        text: `Donate $${(totalAmount * props.nearToUsd || 0).toFixed(2)}`,\n        disabled: !Object.keys(props.cart).length || donationTooSmall || !context.accountId,\n        onClick: handleDonate,\n        style: {\n          width: \"100%\",\n        },\n      }}\n    />\n    {donationTooSmall && (\n      <ErrorText>\n        Minimum required donation per project is {MIN_REQUIRED_DONATION_AMOUNT_PER_PROJECT} N\n      </ErrorText>\n    )}\n    {!context.accountId && <ErrorText>Please sign in to donate</ErrorText>}\n  </Container>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/potlock.near/widget/Cart.BreakdownSummary", "fact_widget_deployments_id": "2ff5c08432e16f53ae43098f5e5e4051", "inserted_timestamp": "2023-11-03T20:27:46.049Z", "modified_timestamp": "2023-11-03T20:27:46.049Z", "__row_index": 4}