{"tx_hash": "CnxjnvGQ5bFLgtv9GjQ38HnUUDsiYxT9gMSE5FbCkVcQ", "action_id_social": "HGfKcnPykmhDij5jBBnmwxFEAmZqaxpWfMxCh9XCsUYE-0-widget", "block_id": 116843197, "block_timestamp": "2024-04-14T18:11:44.276Z", "signer_id": "potlock.near", "widget_name": "Pots.FlagModal", "source_code": "const BannerBg = (props) => (\n  <svg {...props} viewBox=\"0 0 145 152\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <rect\n      x=\"157.654\"\n      y=\"-37\"\n      width=\"20\"\n      height=\"161.118\"\n      rx=\"10\"\n      transform=\"rotate(45 157.654 -37)\"\n      fill=\"white\"\n      fill-opacity=\"0.08\"\n    />\n    <rect\n      x=\"189.654\"\n      y=\"-37\"\n      width=\"20\"\n      height=\"245.972\"\n      rx=\"10\"\n      transform=\"rotate(45 189.654 -37)\"\n      fill=\"white\"\n      fill-opacity=\"0.08\"\n    />\n    <rect\n      x=\"221.654\"\n      y=\"-37\"\n      width=\"20\"\n      height=\"164.654\"\n      rx=\"10\"\n      transform=\"rotate(45 221.654 -37)\"\n      fill=\"white\"\n      fill-opacity=\"0.08\"\n    />\n    <rect\n      x=\"125.654\"\n      y=\"-37\"\n      width=\"20\"\n      height=\"177.702\"\n      rx=\"10\"\n      transform=\"rotate(45 125.654 -37)\"\n      fill=\"white\"\n      fill-opacity=\"0.08\"\n    />\n    <rect\n      x=\"93.6543\"\n      y=\"-37\"\n      width=\"20\"\n      height=\"78.4889\"\n      rx=\"10\"\n      transform=\"rotate(45 93.6543 -37)\"\n      fill=\"white\"\n      fill-opacity=\"0.08\"\n    />\n  </svg>\n);\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  border-radius: 12px;\n  background: #fff;\n  font-size: 14px;\n  box-shadow: 0px 0px 0px 1px rgba(41, 41, 41, 0.1), 0px 8px 12px -4px rgba(41, 41, 41, 0.1),\n    0px 20px 32px -10px rgba(41, 41, 41, 0.1), 0px 32px 44px -16px rgba(41, 41, 41, 0.1);\n  overflow: hidden;\n  border-radius: 6px;\n`;\n\nconst Banner = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  padding: 1.5rem 2rem;\n  gap: 0.5rem;\n  overflow: hidden;\n  background: #dd3345;\n  color: white;\n  font-size: 22px;\n  .left-pattern {\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 30%;\n    transform: translate(-10%, -10%) scaleX(-1);\n    pointer-events: none;\n  }\n  .right-pattern {\n    position: absolute;\n    right: 0;\n    top: 0;\n    width: 30%;\n    transform: translate(10%, -10%);\n    pointer-events: none;\n  }\n  @media only screen and (max-width: 480px) {\n    padding: 1.125rem;\n  }\n`;\nconst HeaderIcons = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  svg {\n    width: 14px;\n    cursor: pointer;\n    transition: all 300ms ease-in-out;\n  }\n  .close-icon {\n    margin-left: auto;\n    &:hover {\n      rotate: 90deg;\n    }\n  }\n  div {\n    cursor: pointer;\n    display: flex;\n  }\n`;\nconst Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 1.5rem 2rem;\n  gap: 1.5rem;\n  @media only screen and (max-width: 480px) {\n    padding: 1.125rem;\n  }\n`;\n\nconst Label = styled.div`\n  font-weight: 500;\n  margin-bottom: 0.5rem;\n`;\n\nconst Limit = styled.div`\n  color: #7b7b7b;\n  text-align: right;\n`;\nconst InfoCard = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 1rem;\n  padding: 0.75rem 1rem;\n  width: 100%;\n  border-radius: 6px;\n  border: 1px solid #ebebeb;\n  background: #f6f5f3;\n`;\n\nconst ButtonsWrapper = styled.div`\n  display: grid;\n  gap: 1.5rem;\n  grid-template-columns: repeat(2, 1fr);\n  button {\n    font-weight: 500;\n  }\n  .cancel {\n    border: none;\n    background: none;\n    color: #dd3345;\n  }\n`;\n\nconst { ownerId } = VM.require(\"potlock.near/widget/constants\") || {\n  ownerId: \"\",\n};\nconst MAX_REASON_LENGTH = 250;\nconst SOCIAL_CONTRACT_ID = \"social.near\";\nconst accountId = context.accountId;\n\nconst [reason, setReason] = useState(\"\");\nconst [reasonErr, setReasonErr] = useState(\"\");\n\nconst { onClose, flagAddress, potId, setSuccessFlag } = props;\n\nconst onCancel = () => {\n  onClose();\n  setReason(\"\");\n};\n\nconst fetchSocialProfile = () => {\n  return Near.asyncView(SOCIAL_CONTRACT_ID, \"get\", { keys: [`${accountId}/profile/**`] });\n};\n\nconst handleSuccess = () => {\n  const flsgSuccess = setInterval(() => {\n    fetchSocialProfile().then((profileData) => {\n      const profile = profileData[accountId].profile;\n\n      const pLBlacklistedAccounts = JSON.parse(profile.pLBlacklistedAccounts || \"{}\");\n      const potFlaggedAcc = pLBlacklistedAccounts[potId] || {};\n\n      if (potFlaggedAcc[flagAddress]) {\n        setSuccessFlag({\n          account: flagAddress,\n          reason,\n        });\n        onCancel();\n        clearInterval(flsgSuccess);\n      }\n    });\n  }, 1000);\n\n  // Clear the interval after 30 seconds\n  setTimeout(() => {\n    onCancel();\n    clearInterval(flsgSuccess);\n  }, 60000);\n};\n\nconst handleFlag = () => {\n  fetchSocialProfile().then((profileData) => {\n    const profile = profileData[accountId].profile;\n\n    const pLBlacklistedAccounts = JSON.parse(profile.pLBlacklistedAccounts || \"{}\");\n    const potFlaggedAcc = pLBlacklistedAccounts[potId] || {};\n    const socialArgs = {\n      data: {\n        [accountId]: {\n          profile: {\n            pLBlacklistedAccounts: JSON.stringify({\n              ...pLBlacklistedAccounts,\n              [potId]: {\n                ...potFlaggedAcc,\n                [flagAddress]: reason,\n              },\n            }),\n          },\n        },\n      },\n    };\n\n    const socialTransaction = {\n      contractName: SOCIAL_CONTRACT_ID,\n      methodName: \"set\",\n      args: socialArgs,\n    };\n\n    Near.asyncView(SOCIAL_CONTRACT_ID, \"get_account\", {\n      account_id: accountId,\n    }).then((account) => {\n      let depositFloat = JSON.stringify(socialArgs).length * 0.00015;\n      if (!account) {\n        depositFloat += 0.1;\n      }\n      socialTransaction.deposit = Big(depositFloat).mul(Big(10).pow(24));\n      Near.call(socialTransaction);\n      handleSuccess();\n    });\n  });\n};\n\nreturn (\n  <Widget\n    src={`${ownerId}/widget/Components.Modal`}\n    props={{\n      ...props,\n      onCancel: (e) => {\n        e.stopPropagation();\n      },\n      contentStyle: {\n        padding: \"0px\",\n      },\n      children: (\n        <Container>\n          <div>\n            <Banner>\n              <BannerBg className=\"left-pattern\" />\n              <BannerBg className=\"right-pattern\" />\n              <HeaderIcons>\n                <svg\n                  onClick={() => onCancel()}\n                  className=\"close-icon\"\n                  viewBox=\"0 0 14 14\"\n                  fill=\"none\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    d=\"M14 1.41L12.59 0L7 5.59L1.41 0L0 1.41L5.59 7L0 12.59L1.41 14L7 8.41L12.59 14L14 12.59L8.41 7L14 1.41Z\"\n                    fill=\"#FCCFCF\"\n                  />\n                </svg>\n              </HeaderIcons>\n              Flag {flagAddress}\n            </Banner>\n          </div>\n          <Content>\n            <div>\n              <Widget\n                src={`${ownerId}/widget/Inputs.TextArea`}\n                props={{\n                  label: \"Reason\",\n                  inputRows: 4,\n                  inputStyle: {\n                    background: \"#FAFAFA\",\n                  },\n                  placeholder: `Type description`,\n                  value: reason,\n                  onChange: (reason) => setReason(reason),\n                  validate: () => {\n                    if (reason.length > MAX_REASON_LENGTH) {\n                      setReasonErr(`Reason must be less than ${MAX_REASON_LENGTH} characters`);\n                      return;\n                    }\n                    setReasonErr(\"\");\n                  },\n                  error: reasonErr,\n                }}\n              />\n              <Limit>\n                {reason.length}/{MAX_REASON_LENGTH}\n              </Limit>\n            </div>\n\n            <InfoCard>\n              <div>\n                <svg\n                  width=\"20\"\n                  height=\"20\"\n                  viewBox=\"0 0 20 20\"\n                  fill=\"none\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    d=\"M9 5H11V7H9V5ZM9 9H11V15H9V9ZM10 0C4.48 0 0 4.48 0 10C0 15.52 4.48 20 10 20C15.52 20 20 15.52 20 10C20 4.48 15.52 0 10 0ZM10 18C5.59 18 2 14.41 2 10C2 5.59 5.59 2 10 2C14.41 2 18 5.59 18 10C18 14.41 14.41 18 10 18Z\"\n                    fill=\"#7B7B7B\"\n                  />\n                </svg>\n              </div>\n              <div>\n                Flagging this account will remove their donations when calculating payouts for this\n                pot\n              </div>\n            </InfoCard>\n            <ButtonsWrapper>\n              <button className=\"cancel\" onClick={onCancel}>\n                Cancel\n              </button>\n              <Widget\n                src={`${ownerId}/widget/Components.Button`}\n                props={{\n                  type: \"primary\",\n                  text: \"Confirm\",\n                  disabled: !reason || reasonErr,\n                  onClick: handleFlag,\n                }}\n              />\n            </ButtonsWrapper>\n          </Content>\n        </Container>\n      ),\n    }}\n  />\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/potlock.near/widget/Pots.FlagModal", "fact_widget_deployments_id": "c9b8688bbae5b16a3ec13e2b9fd71a26", "inserted_timestamp": "2024-04-14T21:59:53.056Z", "modified_timestamp": "2024-04-14T21:59:53.056Z", "__row_index": 0}