{"tx_hash": "7KbgAqwvurJv1iYRncyeKMDu4v5AcCm8gyeiwqnKBW5G", "action_id_social": "5piFjqpSHzBdwFJqdUsrrqLQsanE3BjWeMrcPFwiw9u5-0-widget", "block_id": 115119696, "block_timestamp": "2024-03-20T20:42:19.544Z", "signer_id": "potlock.near", "widget_name": "Project.ListPage", "source_code": "const { getTagsFromSocialProfileData, getTeamMembersFromSocialProfileData } = VM.require(\n  \"potlock.near/widget/utils\"\n) || {\n  getTagsFromSocialProfileData: () => [],\n  getTeamMembersFromSocialProfileData: () => [],\n};\n\n// Card Skeleton - Loading fallback\nconst loadingSkeleton = styled.keyframes`\n  0% {\n    opacity: 1;\n  }\n  50% {\n    opacity: 0.4;\n  }\n  100% {\n    opacity: 1;\n  }\n`;\n\nconst CardSkeletonContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 447px;\n  width: 100%;\n  max-width: 400px;\n  border-radius: 12px;\n  background: white;\n  box-shadow: 0px -2px 0px #dbdbdb inset;\n  border: 1px solid #dbdbdb;\n  margin-left: auto;\n  margin-right: auto;\n\n  animation-name: ${loadingSkeleton};\n  animation-duration: 1s;\n  animation-iteration-count: infinite;\n`;\n\nconst HeaderSkeleton = styled.div`\n  display: block;\n  width: 100%;\n  height: 168px;\n  background: #eee;\n`;\n\nconst ProfileImageSkeleton = styled.div`\n  background: #e0e0e0;\n  margin-left: 32px;\n  transform: translateY(148px);\n  width: 40px;\n  height: 40px;\n  position: absolute;\n  border-radius: 999px;\n`;\n\nconst TitleSkeleton = styled.div`\n  width: 120px;\n  height: 24px;\n  background: #eee;\n  margin-left: 24px;\n  margin-top: 24px;\n`;\n\nconst DescriptionSkeleton = styled.div`\n  width: 83%;\n  height: 48px;\n  background: #eee;\n  margin-left: 24px;\n  margin-top: 24px;\n`;\n\nconst TagSkeleton = styled.div`\n  background: #eee;\n  border-radius: 4px;\n  height: 34px;\n  width: 110px;\n  margin: 24px;\n`;\n\nconst FooterItemSkeleton = styled.div`\n  width: 150px;\n  height: 40px;\n  background: #eee;\n\n  @media screen and (max-width: 390px) {\n    width: 100px;\n  }\n`;\n\nconst DonationsInfoContainerSkeleton = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  padding: 16px 24px;\n  width: 100%;\n  border-top: 1px #f0f0f0 solid;\n`;\n\nconst DonationsInfoItemSkeleton = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 8px;\n  align-items: center;\n`;\n\nconst CardSkeleton = () => (\n  <CardSkeletonContainer>\n    <HeaderSkeleton />\n    <ProfileImageSkeleton />\n    <TitleSkeleton />\n    <DescriptionSkeleton />\n    <TagSkeleton />\n    <DonationsInfoContainerSkeleton>\n      <DonationsInfoItemSkeleton>\n        <FooterItemSkeleton />\n      </DonationsInfoItemSkeleton>\n      <DonationsInfoItemSkeleton>\n        <FooterItemSkeleton />\n      </DonationsInfoItemSkeleton>\n    </DonationsInfoContainerSkeleton>\n  </CardSkeletonContainer>\n);\n\n// ListPage Content\n\nconst { tab } = props;\nconst { ownerId } = VM.require(\"potlock.near/widget/constants\") || {\n  ownerId: \"\",\n};\nconst { yoctosToUsd } = VM.require(\"potlock.near/widget/utils\") || { yoctosToUsd: () => \"\" };\nconst IPFS_BASE_URL = \"https://nftstorage.link/ipfs/\";\nconst HERO_BACKGROUND_IMAGE_URL =\n  IPFS_BASE_URL + \"bafkreiewg5afxbkvo6jbn6jgv7zm4mtoys22jut65fldqtt7wagar4wbga\";\n\nconst headerTitleFontSizePx = 88;\n\nconst HeaderContainer = styled.div`\n  width: 100%;\n  // background: #fffaf4;\n  // background: white;\n  padding: 80px 64px;\n\n  @media (max-width: 768px) {\n    padding: 36px 24px;\n  }\n`;\n\nconst HeaderContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst HeaderTitle = styled.div`\n  color: #2e2e2e;\n  font-size: ${headerTitleFontSizePx}px;\n  font-weight: 500;\n  word-wrap: break-word;\n  position: relative;\n  text-align: center;\n  z-index: 1;\n  position: relative;\n  font-family: \"Lora\";\n  @media (max-width: 768px) {\n    font-size: 48px;\n  }\n`;\n\nconst HeaderDescription = styled.div`\n  color: #2e2e2e;\n  font-size: 32px;\n  font-weight: 400;\n  word-wrap: break-word;\n  max-width: 866px;\n  text-align: center;\n  margin-top: 32px;\n\n  @media (max-width: 768px) {\n    font-size: 24px;\n    text-align: center;\n  }\n`;\n\nconst ButtonsContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  gap: 32px;\n  margin-top: 32px;\n`;\n\nconst Underline = styled.div`\n  position: absolute;\n  top: ${headerTitleFontSizePx - 40}px;\n  left: -40px;\n  z-index: -1;\n\n  @media (max-width: 768px) {\n    top: 30px;\n    left: -30px;\n  }\n`;\n\nconst containerStyle = props.containerStyle ?? {};\n\nconst showStats = !props.tab || props.tab == \"projects\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n`;\n\nconst HeroOuter = styled.div`\n  padding: 136px 64px;\n`;\n\nconst HeroInner = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst SectionHeader = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  align-items: center;\n  margin-bottom: 24px;\n  padding: 24px 64px 24px 64px;\n\n  @media screen and (max-width: 768px) {\n    padding: 16px 24px;\n  }\n`;\n\nconst SectionTitle = styled.div`\n  font-size: 24px;\n  font-weight: 600;\n  color: #2e2e2e;\n  font-family: Mona-Sans;\n`;\n\nconst ProjectsCount = styled.div`\n  color: #7b7b7b;\n  font-size: 24px;\n  font-weight: 400;\n  margin-left: 32px;\n\n  @media screen and (max-width: 768px) {\n    margin-left: 16px;\n  }\n`;\n\nconst ProjectsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  overflow-y: hidden;\n  // padding: 0px 64px 96px 64px;\n  // background: #fafafa;\n\n  // @media screen and (max-width: 768px) {\n  //   margin-top: 200px;\n  // }\n`;\n\nconst HeroContainer = styled.div`\n  width: 100%;\n  min-height: 700px;\n  position: relative;\n\n  @media screen and (max-width: 768px) {\n    min-height: 600px;\n  }\n`;\n\nconst Hero = styled.img`\n  width: 100%;\n  height: 100%;\n  display: block;\n\n  @media screen and (max-width: 768px) {\n    display: none;\n  }\n`;\n\nconst InfoCardsContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  z-index: 1000;\n  margin: 40px 0;\n  gap: 40px;\n\n  @media screen and (max-width: 768px) {\n    flex-direction: column;\n    gap: 24px;\n    // justify-content: center;\n  }\n`;\n\nconst Button = styled.button`\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  padding: 16px 24px;\n  background: #dd3345;\n  overflow: hidden;\n  box-shadow: 0px -2.700000047683716px 0px #4a4a4a inset;\n  border-radius: 6px;\n  border: 1px solid #4a4a4a;\n  gap: 8px;\n  display: inline-flex;\n  text-align: center;\n  color: white;\n  font-size: 14px;\n  line-height: 16px;\n  font-weight: 600;\n\n  &:hover {\n    text-decoration: none;\n    cursor: pointer;\n  }\n`;\n\nconst ButtonRegisterProject = styled.a`\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  padding: 16px 24px;\n  background: #fef6ee;\n  overflow: hidden;\n  box-shadow: 0px -2.700000047683716px 0px #4a4a4a inset;\n  border-radius: 6px;\n  border: 1px solid #4a4a4a;\n  gap: 8px;\n  display: inline-flex;\n  text-align: center;\n  color: #2e2e2e;\n  font-size: 14px;\n  line-height: 16px;\n  font-weight: 600;\n\n  &:hover {\n    text-decoration: none;\n    cursor: pointer;\n  }\n`;\n\nconst Stats = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  gap: 48px;\n  margin-top: 40px;\n\n  @media screen and (max-width: 768px) {\n    gap: 16px;\n  }\n`;\n\nconst StatsTitle = styled.div`\n  color: #292929;\n  font-size: 44px;\n  display: flex;\n  flex-direction: row;\n  align-items: baseline;\n  gap: 8px;\n  font-weight: 600;\n\n  @media screen and (max-width: 768px) {\n    font-size: 30px;\n    font-weight: 500;\n    gap: 5px;\n  }\n`;\n\nconst StatsSubTitle = styled.div`\n  color: #525252;\n  font-size: 14px;\n\n  @media screen and (max-width: 768px) {\n    font-size: 12px;\n  }\n`;\n\nconst Header = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  width: 100%;\n`;\n\nconst Title = styled.div`\n  color: #292929;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: 24px;\n  letter-spacing: 1.12px;\n  text-transform: uppercase;\n`;\n\nconst TagsWrapper = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  gap: 12px;\n  flex-wrap: wrap;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: 24px;\n  color: #292929;\n`;\n\nconst Tag = styled.div`\n  display: flex;\n  padding: 8px;\n  justify-content: center;\n  align-items: center;\n  gap: 8px;\n  border-radius: 4px;\n  background: #fff;\n  box-shadow: 0px -1px 0px 0px #c7c7c7 inset, 0px 0px 0px 0.5px #c7c7c7;\n  border: 1px solid #c7c7c7;\n  cursor: pointer;\n  &:hover {\n    background: #fef6ee;\n  }\n`;\n\nconst OnBottom = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 20px 0;\n`;\n\nconst ContainerHeader = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  gap: 48px;\n  padding-top: 20px;\n  @media screen and (min-width: 740px) and (max-width: 1400px) {\n    ${props.tab !== \"pot\" && \"padding-top: 120px;\"}\n  }\n  // mobile\n  @media screen and (max-width: 739px) {\n    padding-top: 40px;\n  }\n`;\n\nconst ProjectList = styled.div`\n  display: grid;\n  gap: 31px;\n\n  // For mobile devices (1 column)\n  @media screen and (max-width: 739px) {\n    grid-template-columns: repeat(1, 1fr);\n  }\n\n  // For tablet devices (2 columns)\n  @media screen and (min-width: 740px) and (max-width: 1023px) {\n    grid-template-columns: repeat(2, 1fr);\n  }\n\n  // For desktop devices (3 columns)\n  @media screen and (min-width: 1024px) {\n    grid-template-columns: repeat(${!props.maxCols || props.maxCols > 2 ? \"3\" : \"2\"}, 1fr);\n  }\n`;\n\nState.init({\n  isModalOpen: false,\n  successfulDonation: null,\n});\n\nlet RegistrySDK =\n  VM.require(\"potlock.near/widget/SDK.registry\") ||\n  (() => ({\n    getProjects: () => {},\n    isRegistryAdmin: () => {},\n  }));\nRegistrySDK = RegistrySDK({ env: props.env });\n\nconst isRegistryAdmin = RegistrySDK.isRegistryAdmin(context.accountId);\n\nlet DonateSDK =\n  VM.require(\"potlock.near/widget/SDK.donate\") ||\n  (() => ({\n    getConfig: () => {},\n  }));\nDonateSDK = DonateSDK({ env: props.env });\n\nconst allProjects = RegistrySDK.getProjects() || [];\n\n// console.log(\"allProjects: \", allProjects);\n\nconst projects = useMemo(() => {\n  if (!isRegistryAdmin) {\n    return allProjects.filter((project) => project.status === \"Approved\");\n  }\n  allProjects.sort((a, b) => b.submitted_ms - a.submitted_ms);\n  return allProjects;\n}, allProjects);\n\n// console.log(\"projects: \", projects);\n\nconst featuredProjectIds = [\"magicbuild.near\", \"potlock.near\", \"yearofchef.near\"];\nconst featuredProjects = useMemo(\n  () => projects.filter((project) => featuredProjectIds.includes(project.id)),\n  projects\n);\nconst [totalDonation, setTotalDonation] = useState(0);\nconst [totalDonated, setTotalDonated] = useState(0);\nconst [filteredProjects, setFilteredProjects] = useState(projects);\nconst [searchTerm, setSearchTerm] = useState(\"\");\nconst [sort, setSort] = useState(\"Sort\");\nconst [tagsList, setTagsList] = useState([\n  {\n    label: \"Desci\",\n    selected: false,\n  },\n  {\n    label: \"Open Source\",\n    selected: false,\n  },\n  {\n    label: \"Non Profit\",\n    selected: false,\n  },\n  {\n    label: \"Social Impact\",\n    selected: false,\n  },\n  {\n    label: \"Climate\",\n    selected: false,\n  },\n  {\n    label: \"Public Good\",\n    selected: false,\n  },\n  {\n    label: \"Community\",\n    selected: false,\n  },\n  {\n    label: \"Education\",\n    selected: false,\n  },\n]);\n\nuseEffect(() => {\n  if (filteredProjects.length < 1) {\n    setFilteredProjects(projects);\n  }\n}, [projects]);\n\n// console.log(\"filter\", filteredProjects);\n\nconst donateConfig = DonateSDK.getConfig();\nif (donateConfig && !totalDonated && !totalDonation) {\n  const lastDonationAmount = yoctosToUsd(donateConfig.net_donations_amount);\n  setTotalDonated(lastDonationAmount);\n  setTotalDonation(donateConfig.total_donations_count);\n}\n\nconst donateRandomly = () => {\n  State.update({\n    isModalOpen: true,\n    successfulDonation: null,\n  });\n};\n\nconst containerStyleHeader = {\n  position: \"absolute\",\n  height: \"100%\",\n  top: 0,\n  left: 0,\n  marginBottom: \"24px\",\n  background: \"radial-gradient(80% 80% at 40.82% 50%, white 25%, rgba(255, 255, 255, 0) 100%)\",\n};\n\nconst SORT_FILTERS = {\n  ALL: \"All\",\n  NEW_TO_OLD: \"Newest to Oldest\",\n  OLD_TO_NEW: \"Oldest to Newest\",\n  // MOST_TO_LEAST_DONATIONS: \"Most to Least Donations\",\n  // LEAST_TO_MOST_DONATIONS: \"Least to Most Donations\",\n};\n\nconst sortHighestToLowest = (projects) => {\n  const sort = (a, b) => {\n    return parseFloat(b.total) - parseFloat(a.total);\n  };\n  const projectLength = projects.length;\n\n  for (let i = 0; i < projectLength - 1; i++) {\n    for (let j = 0; j < projectLength - 1 - i; j++) {\n      if (sort(projects[j], projects[j + 1]) > 0) {\n        const temp = projects[j];\n        projects[j] = projects[j + 1];\n        projects[j + 1] = temp;\n      }\n    }\n  }\n\n  setFilteredProjects(projects);\n};\n\nconst sortLowestToHighest = (projects) => {\n  const sort = (a, b) => {\n    return parseFloat(b.total) - parseFloat(a.total);\n  };\n  const projectLength = projects.length;\n\n  for (let i = 0; i < projectLength - 1; i++) {\n    for (let j = 0; j < projectLength - 1 - i; j++) {\n      if (sort(projects[j], projects[j + 1]) < 0) {\n        const temp = projects[j];\n        projects[j] = projects[j + 1];\n        projects[j + 1] = temp;\n      }\n    }\n  }\n\n  setFilteredProjects(projects);\n};\n\nconst sortNewToOld = (projects) => {\n  const projectLength = projects.length;\n\n  for (let i = 0; i < projectLength - 1; i++) {\n    for (let j = 0; j < projectLength - i - 1; j++) {\n      if (projects[j].submitted_ms < projects[j + 1].submitted_ms) {\n        const temp = projects[j];\n        projects[j] = projects[j + 1];\n        projects[j + 1] = temp;\n      }\n    }\n  }\n  setFilteredProjects(projects);\n};\n\nconst sortOldToNew = (projects) => {\n  const projectLength = projects.length;\n\n  for (let i = 0; i < projectLength - 1; i++) {\n    for (let j = 0; j < projectLength - i - 1; j++) {\n      if (projects[j].submitted_ms > projects[j + 1].submitted_ms) {\n        const temp = projects[j];\n        projects[j] = projects[j + 1];\n        projects[j + 1] = temp;\n      }\n    }\n  }\n  setFilteredProjects(projects);\n};\n\nconst handleSortChange = (sortType) => {\n  setSort(sortType);\n  switch (sortType) {\n    case \"All\":\n      setFilteredProjects(projects);\n      break;\n    case \"Newest to Oldest\":\n      sortNewToOld(projects);\n      break;\n    case \"Oldest to Newest\":\n      sortOldToNew(projects);\n      break;\n    case \"Most to Least Donations\":\n      sortHighestToLowest(projects);\n      break;\n    case \"Least to Most Donations\":\n      sortLowestToHighest(projects);\n      break;\n  }\n};\n\nconst searchByWords = (projects, searchTerm) => {\n  searchTerm = searchTerm.toLowerCase().trim();\n  let results = [];\n  // const dataArr = projects;\n  // let alldata = [];\n  projects.forEach((project) => {\n    const { id, status } = project;\n    const data = Social.getr(`${id}/profile`);\n    // alldata.push(data);\n    if (id.includes(searchTerm) || status.toLowerCase().includes(searchTerm)) {\n      results.push(project);\n    } else if (data) {\n      if (\n        data.description.toLowerCase().includes(searchTerm) ||\n        data.name.toLowerCase().includes(searchTerm) ||\n        getTagsFromSocialProfileData(data).join(\"\").toLowerCase().includes(searchTerm) ||\n        getTeamMembersFromSocialProfileData(data).join(\"\").toLowerCase().includes(searchTerm)\n      ) {\n        results.push(project);\n      }\n    }\n  });\n  //let projectFilterBySearch = [];\n  // projects.forEach((project) => {\n  //   const data = Social.getr(`${project.id}/profile`);\n  //   findId.forEach((id) => {\n  //     if (tagSelected.length > 0) {\n  //       if (data.category == tagSelected[0]) {\n  //         if (project.id == id) {\n  //           results.push(project);\n  //         }\n  //       }\n  //     } else {\n  //       if (project.id == id) {\n  //         results.push(project);\n  //       }\n  //     }\n  //   });\n  // });\n\n  setFilteredProjects(results);\n};\nconst handleTag = (key) => {\n  //console.log(tagsList[key].value);\n  const tags = tagsList;\n  tags[key].selected = !tagsList[key].selected;\n  const dataArr = projects;\n  let tagSelected = [];\n  tagsList.forEach((tag) => {\n    if (tag.selected) {\n      tagSelected.push(tag.label);\n    }\n  });\n  let projectFilterBySearch = [];\n  dataArr.forEach((item) => {\n    const data = Social.getr(`${item.id}/profile`);\n    const tagsForProfile = getTagsFromSocialProfileData(data);\n    tagSelected.forEach((tag) => {\n      if (tagsForProfile.includes(tag)) {\n        projectFilterBySearch.push(item);\n      }\n    });\n  });\n  if (tagSelected.length == 0) {\n    setFilteredProjects(dataArr);\n  } else {\n    setFilteredProjects(projectFilterBySearch);\n  }\n  setTagsList(tags);\n};\n\nreturn (\n  <>\n    <HeroContainer>\n      {/* <Hero src={HERO_BACKGROUND_IMAGE_URL} alt=\"hero\" /> */}\n      <HeaderContainer style={containerStyleHeader}>\n        <HeaderContent>\n          <HeaderTitle>\n            Transforming\n            <Underline>\n              <svg\n                width=\"340\"\n                height=\"42\"\n                viewBox=\"0 0 340 42\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  d=\"M7.29967 39C-14.0566 35.9491 49.9788 32.436 71.4774 30.6444C151.734 23.9564 232.915 20.5161 312.9 15\"\n                  stroke=\"#DD3345\"\n                  stroke-width=\"5\"\n                  stroke-linecap=\"round\"\n                />\n                <path\n                  d=\"M31.2997 27C9.94337 23.9491 73.9788 20.436 95.4774 18.6444C175.734 11.9564 256.915 8.51608 336.9 3\"\n                  stroke=\"#DD3345\"\n                  stroke-width=\"5\"\n                  stroke-linecap=\"round\"\n                />\n              </svg>\n            </Underline>\n          </HeaderTitle>\n          <HeaderTitle>Funding for Public Goods</HeaderTitle>\n          <HeaderDescription>\n            Discover impact projects, donate directly, & participate in funding rounds.\n          </HeaderDescription>\n        </HeaderContent>\n\n        <ButtonsContainer>\n          {/* <Widget\n            src={`${ownerId}/widget/Project.ButtonDonateRandomly`}\n            props={{\n              ...props,\n            }}\n          /> */}\n          <Button onClick={donateRandomly}>Donate Randomly</Button>\n          {state.isModalOpen && (\n            <Widget\n              src={`${ownerId}/widget/Project.ModalDonation`}\n              props={{\n                ...props,\n                isModalOpen: state.isModalOpen,\n                onClose: () =>\n                  State.update({\n                    isModalOpen: false,\n                  }),\n                openDonationModalSuccess: (donation) => {\n                  State.update({\n                    isModalOpen: false,\n                    successfulDonation: donation,\n                  });\n                },\n              }}\n            />\n          )}\n          {state.successfulDonation && (\n            <Widget\n              src={`${ownerId}/widget/Project.ModalSuccess`}\n              props={{\n                ...props,\n                successfulDonation: state.successfulDonation,\n                isModalOpen: state.successfulDonation != null,\n                onClose: () =>\n                  State.update({\n                    successfulDonation: null,\n                  }),\n              }}\n            />\n          )}\n          {/* <Widget\n            src={`${ownerId}/widget/Components.Button`}\n            props={{\n              type: \"secondary\",\n              text: \"Register Your Project\",\n              disabled: false,\n              href: props.hrefWithParams(`?tab=createproject`),\n              style: { padding: \"16px 24px\" },\n            }}\n          /> */}\n          <ButtonRegisterProject href={\"?tab=createproject\"}>\n            Register Your Project\n          </ButtonRegisterProject>\n        </ButtonsContainer>\n        <Widget src=\"potlock.near/widget/Project.DonationStats\" />\n      </HeaderContainer>\n    </HeroContainer>\n    {props.tab != \"pots\" && props.tab != \"pot\" && (\n      <ContainerHeader>\n        <Header>\n          <Title>Featured projects</Title>\n        </Header>\n\n        <ProjectList>\n          {featuredProjects.map((project) => {\n            return (\n              <Widget\n                src={`${ownerId}/widget/Project.Card`}\n                loading={\n                  <div\n                    style={{\n                      width: \"355px\",\n                      height: \"455px\",\n                      borderRadius: \"12px\",\n                      background: \"white\",\n                      boxShadow: \"0px -2px 0px #dbdbdb inset\",\n                      border: \"1px solid #dbdbdb\",\n                    }}\n                  />\n                }\n                props={{\n                  ...props,\n                  // potId,\n                  projectId: project.id,\n                  allowDonate: true,\n                  // allowDonate:\n                  //   sybilRequirementMet &&\n                  //   publicRoundOpen &&\n                  //   project.project_id !== context.accountId,\n                  // requireVerification: !sybilRequirementMet,\n                }}\n              />\n            );\n          })}\n        </ProjectList>\n        <OnBottom></OnBottom>\n      </ContainerHeader>\n    )}\n    <Header>\n      <Title>\n        all {tab == \"pots\" ? \"pots\" : \"projects\"}\n        <span style={{ color: \"#DD3345\", marginLeft: \"8px\", fontWeight: 600 }}>\n          {projects.length}\n        </span>\n      </Title>\n      <Widget\n        src={`${ownerId}/widget/Project.SearchBar`}\n        props={{\n          title: sort,\n          tab: tab,\n          numItems: filteredProjects.length,\n          itemName: tab == \"pots\" ? \"pot\" : \"project\",\n          sortList: Object.values(SORT_FILTERS),\n          FilterMenuCustomStyle: `left:auto !important; right:0;`,\n          setSearchTerm: (value) => {\n            searchByWords(projects, value);\n          },\n          handleSortChange: (filter) => {\n            handleSortChange(filter);\n          },\n        }}\n      />\n      {tab != \"pots\" && tab != \"pot\" && (\n        <TagsWrapper>\n          Tags:\n          {tagsList.map((tag, key) => (\n            <Tag\n              key={key}\n              onClick={() => handleTag(key)}\n              className={`${\n                tag.selected && \"gap-2 bg-[#FEF6EE]\"\n              } p-2 rounded border text-sm flex items-center  cursor-pointer`}\n            >\n              {tag.selected && (\n                <svg\n                  width=\"12\"\n                  height=\"10\"\n                  viewBox=\"0 0 12 10\"\n                  fill=\"none\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    d=\"M3.86204 7.58116L1.08204 4.80117L0.135376 5.74116L3.86204 9.46783L11.862 1.46783L10.922 0.527832L3.86204 7.58116Z\"\n                    fill=\"#F4B37D\"\n                  ></path>\n                </svg>\n              )}\n              {tag.label}\n            </Tag>\n          ))}\n        </TagsWrapper>\n      )}\n    </Header>\n    <ProjectsContainer>\n      {filteredProjects.length ? (\n        <Widget\n          src={`${ownerId}/widget/Project.ListSection`}\n          props={{\n            ...props,\n            items: filteredProjects,\n            shouldShuffle: !isRegistryAdmin,\n            renderItem: (project) => {\n              return (\n                <Widget\n                  src={`${ownerId}/widget/Project.Card`}\n                  loading={<CardSkeleton />}\n                  props={{\n                    ...props,\n                    // potId,\n                    projectId: project.id,\n                    allowDonate: true,\n                    // allowDonate:\n                    //   sybilRequirementMet &&\n                    //   publicRoundOpen &&\n                    //   project.project_id !== context.accountId,\n                    // requireVerification: !sybilRequirementMet,\n                  }}\n                />\n              );\n            },\n          }}\n        />\n      ) : (\n        <div style={{ alignSelf: \"flex-start\", margin: \"24px 0px\" }}>No results</div>\n      )}\n    </ProjectsContainer>\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/potlock.near/widget/Project.ListPage", "fact_widget_deployments_id": "fb505a85c4bdcebfa117a8e1f70a8df3", "inserted_timestamp": "2024-03-20T22:29:19.126Z", "modified_timestamp": "2024-03-20T22:29:19.126Z", "__row_index": 50}