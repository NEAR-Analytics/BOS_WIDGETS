{"tx_hash": "G1eb8kM4xX36MRUr93oodyBySjvFX3wZYhVNjUy9v4T5", "action_id_social": "DwCdCvjQ5wzjnHb3u8MvnG7tFjFCj2d3z1T37QepikNt-0-widget", "block_id": 113259158, "block_timestamp": "2024-02-21T02:39:37.774Z", "signer_id": "potlock.near", "widget_name": "Profile.Detail", "source_code": "const {\n  ownerId,\n  POT_FACTORY_CONTRACT_ID,\n  DONATION_CONTRACT_ID,\n  SUPPORTED_FTS: { NEAR },\n} = props;\nconst accountId = props.accountId ?? context.accountId;\n\nconst { ProfileOptions } = VM.require(`${ownerId}/widget/Profile.Options`);\n\nif (!accountId) {\n  return \"No account ID\";\n}\n\nconst [pots, setPots] = useState(null);\nconst [directDonations, setDirectDonations] = useState(null);\n// mapping of pot IDs to array of sponsorship (matching pool) donations to this pot for this user\nconst [sponsorshipDonations, setSponsorshipDonations] = useState({});\nconst [potDonations, setPotDonations] = useState([]);\n\nconst getPotConfig = (potId) => Near.asyncView(potId, \"get_config\", {});\n\nconst getSponsorshipDonations = (potId, potDetail) => {\n  return Near.asyncView(potId, \"get_matching_pool_donations\", {}).then((donations) => {\n    donations = donations.filter((donations) => donations.donor_id === accountId);\n    const updatedDonations = donations.map((donation) => ({\n      ...donation,\n      base_currency: potDetail.base_currency,\n      pot_name: potDetail.pot_name,\n      pot_id: potId,\n    }));\n    if (sponsorshipDonations[potId]) return \"\";\n    setSponsorshipDonations((prevSponsorshipDonations) => {\n      return { ...prevSponsorshipDonations, [potId]: updatedDonations };\n    });\n  });\n};\n\n// Get Direct Donations\nif (!directDonations) {\n  Near.asyncView(DONATION_CONTRACT_ID, \"get_donations_for_donor\", {\n    donor_id: accountId,\n  }).then((donations) => setDirectDonations(donations));\n}\n// Get Sponsorship Donations\nif (!pots) {\n  Near.asyncView(POT_FACTORY_CONTRACT_ID, \"get_pots\", {}).then((pots) => {\n    setPots(pots || []);\n  });\n}\nif (pots.length && !sponsorshipDonations[pots[pots.length - 1].id]) {\n  pots.forEach((pot) => {\n    getPotConfig(pot.id).then((potDetail) => {\n      getSponsorshipDonations(pot.id, potDetail);\n    });\n  });\n}\n\nconst allDonations = useMemo(() => {\n  const sponsorshipDonationsValue = Object.values(sponsorshipDonations).flat();\n  const allDonations = [...(directDonations || []), ...sponsorshipDonationsValue];\n  allDonations.sort((a, b) => b.donated_at - a.donated_at);\n  return allDonations;\n}, [sponsorshipDonations, directDonations]);\n\nconst profile = props.profile ?? Social.getr(`${accountId}/profile`);\n\nif (profile === null) {\n  return \"Loading\";\n}\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nreturn (\n  <Wrapper>\n    <Widget\n      src={`${ownerId}/widget/Profile.Body`}\n      props={{\n        ...props,\n        profile,\n        accounts: [accountId],\n        donations: allDonations,\n        nav: props.nav ?? \"feed\",\n        navOptions: ProfileOptions(props),\n      }}\n    />\n  </Wrapper>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/potlock.near/widget/Profile.Detail", "fact_widget_deployments_id": "94c16d8b4323fcf2bb0114cefa3a8bda", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 2}