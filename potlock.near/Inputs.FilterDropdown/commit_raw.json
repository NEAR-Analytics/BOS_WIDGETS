{"tx_hash": "AGGSQeepyU3KrcEWAs2Uys7fLD4TC1prErw8Sfsgoevj", "action_id_social": "N8jJNYWRpknsikaU6ASdBo1exYxdHZmGYTo6LTDKp1p-0-widget", "block_id": 116897442, "block_timestamp": "2024-04-15T12:59:57.280Z", "signer_id": "potlock.near", "widget_name": "Inputs.FilterDropdown", "source_code": "const Container = styled.div`\n  display: flex;\n  position: relative;\n  flex-direction: column;\n  align-items: flex-end;\n  font-size: 14px;\n`;\n\nconst Label = styled.div`\n  font-weight: 500;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  cursor: pointer;\n  width: fit-content;\n  padding: 0.5rem 1rem;\n  border-radius: 6px;\n  border: 1px solid #7b7b7b;\n  &.active {\n    color: #fff;\n    background: #292929;\n  }\n`;\n\nconst Menu = styled.div`\n  position: absolute;\n  top: calc(100% + 0.5rem);\n  right: 0;\n  transition: all 300ms ease-in-out;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 8px;\n  border-radius: 8px;\n  padding: 1rem;\n  background: #fff;\n  width: 500px;\n  box-shadow: 0px 0px 0px 1px rgba(123, 123, 123, 0.09), 0px 3px 3px -1px rgba(123, 123, 123, 0.16),\n    0px 9px 9px -3px rgba(123, 123, 123, 0.1), 0px 17px 14px -5px rgba(123, 123, 123, 0.08);\n  opacity: 0;\n  visibility: hidden;\n  transform: translateY(100px);\n  z-index: 1;\n  &.active {\n    opacity: 1;\n    visibility: visible;\n    transform: translateY(0);\n  }\n  .title {\n    width: 100%;\n    &:not(:first-of-type) {\n      margin-top: 2rem;\n    }\n  }\n  .option {\n    display: flex;\n    align-items: center;\n    gap: 10px;\n    border-radius: 8px;\n    border: 1px solid #dbdbdb;\n    padding: 8px 12px;\n    cursor: pointer;\n    transition: all 300ms ease-in-out;\n    svg {\n      display: none;\n      width: 14px;\n    }\n    :hover {\n      border: 1px solid #f4b37d;\n      background: #fef6ee;\n      color: #ea6a25;\n    }\n    &.selected {\n      border: 1px solid #f4b37d;\n      background: #fef6ee;\n      color: #ea6a25;\n      svg {\n        display: block;\n      }\n    }\n  }\n  @media only screen and (max-width: 768px) {\n    width: 200px !important;\n    left: 0;\n    right: auto;\n  }\n`;\n\nconst Count = styled.div`\n  font-weight: 600;\n  font-size: 12px;\n  display: flex;\n  line-height: 1;\n  width: 18px;\n  height: 18px;\n  align-items: center;\n  justify-content: center;\n  border-radius: 50%;\n  background: #ebebeb;\n  &.active {\n    background: #464646;\n    color: #f6f5f3;\n  }\n`;\n\nconst Screen = styled.div`\n  position: fixed;\n  width: 100%;\n  height: 100%;\n  left: 0;\n  top: 0;\n`;\n\nconst { onClick, menuClass, label, multipleOptions, defaultSelected } = props;\nconst labelIcon = props.labelIcon ?? \"center\";\nconst options = props.options ?? {};\n\nconst [toggleMenu, setToggleMenu] = useState(false);\nconst [selected, setSelected] = useState(defaultSelected || {});\n\nconst icons = {\n  center: (\n    <svg width=\"18\" height=\"12\" viewBox=\"0 0 18 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M7 12H11V10H7V12ZM0 0V2H18V0H0ZM3 7H15V5H3V7Z\" fill=\"#7B7B7B\" />\n    </svg>\n  ),\n  right: (\n    <svg width=\"18\" height=\"12\" viewBox=\"0 0 18 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M0 12H6V10H0V12ZM0 0V2H18V0H0ZM0 7H12V5H0V7Z\" fill=\"#7B7B7B\" />\n    </svg>\n  ),\n};\n\nfunction findIndexWithAll(listOfLists, target) {\n  for (let i = 0; i < listOfLists.length; i++) {\n    const indexInList = listOfLists[i].indexOf(target);\n    if (indexInList !== -1) {\n      return { listIndex: i, itemIndex: indexInList };\n    }\n  }\n  return { listIndex: -1, itemIndex: -1 }; // Not found\n}\n\nconst handleSelect = ({ val, type, label }) => {\n  let selectedUpdated = { ...selected };\n  const selectedList = selected[type] || [];\n\n  if (!multipleOptions) {\n    selectedUpdated = { val, label };\n  } else if (selectedList.includes(val)) {\n    selectedUpdated[type] = selectedList.filter((item) => item !== val);\n  } else {\n    selectedUpdated[type] = [...selectedList, val];\n  }\n\n  const { listIndex, itemIndex } = findIndexWithAll(Object.values(selectedUpdated), \"all\");\n\n  const types = Object.keys(selectedUpdated);\n\n  // remove filters if all is selected\n  if (val === \"all\") {\n    selectedUpdated = {\n      [type]: [val],\n    };\n  }\n  // remove all if another filter is selected\n  else if (listIndex !== -1) {\n    selectedUpdated[types[listIndex]].splice(itemIndex, 1);\n  }\n\n  setSelected(selectedUpdated);\n\n  onClick(selectedUpdated);\n  setToggleMenu(false);\n};\n\nconst count = Object.values(selected).reduce((total, list) => total + list.length, 0);\nreturn (\n  <Container>\n    {toggleMenu && <Screen onClick={() => setToggleMenu(false)} />}\n\n    <Label className={toggleMenu ? \"active\" : \"\"} onClick={() => setToggleMenu(!toggleMenu)}>\n      {label || \"Filter\"}\n      {multipleOptions && <Count className={toggleMenu ? \"active\" : \"\"}>{count}</Count>}\n      {icons[labelIcon]}\n    </Label>\n    <Menu className={`${toggleMenu ? \"active\" : \"\"} ${menuClass ?? \"\"}`}>\n      {Object.keys(options)?.map((menuLabel) => (\n        <>\n          <div className=\"title\">Filter by {menuLabel.includes(\"no label\") ? \"\" : menuLabel}</div>\n          {(options[menuLabel] || [])?.map(({ label, val }) => (\n            <div\n              className={`option ${\n                multipleOptions && (selected[menuLabel] || [])?.includes(val) && \"selected\"\n              }`}\n              key={val}\n              onClick={() => handleSelect({ label, val, type: menuLabel })}\n            >\n              <svg viewBox=\"0 0 14 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path\n                  d=\"M4.59625 8.90631L1.46875 5.77881L0.403748 6.83631L4.59625 11.0288L13.5962 2.02881L12.5387 0.971313L4.59625 8.90631Z\"\n                  fill=\"#F4B37D\"\n                />\n              </svg>\n\n              {label}\n            </div>\n          ))}\n        </>\n      ))}\n    </Menu>\n  </Container>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/potlock.near/widget/Inputs.FilterDropdown", "fact_widget_deployments_id": "90184f1dbc2f988d4d90efa899b331b9", "inserted_timestamp": "2024-04-15T14:42:15.155Z", "modified_timestamp": "2024-04-15T14:42:15.155Z", "__row_index": 0}