{"tx_hash": "APCisd4QJ3fDN1AmJ2eqszNJbmVncr5fdjJW6MfDkCJA", "action_id_social": "BnP1rscLg4VaDG4Z1aABKpFyFKQLAKU4yhnuai67jVvm-0-widget", "block_id": 116361961, "block_timestamp": "2024-04-08T02:21:35.303Z", "signer_id": "potlock.near", "widget_name": "ModalDonation.Main", "source_code": "const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  border-radius: 12px;\n  background: #fff;\n  font-size: 14px;\n  box-shadow: 0px 0px 0px 1px rgba(41, 41, 41, 0.1), 0px 8px 12px -4px rgba(41, 41, 41, 0.1),\n    0px 20px 32px -10px rgba(41, 41, 41, 0.1), 0px 32px 44px -16px rgba(41, 41, 41, 0.1);\n  overflow: hidden;\n  border-radius: 6px;\n  @media only screen and (max-width: 480px) {\n    top: 0;\n    border-radius: 0;\n    position: fixed;\n    left: 0;\n    width: 100vw;\n    height: 100vh;\n    overflow-y: scroll;\n    display: flex;\n    z-index: 1000;\n  }\n`;\n\nconst Banner = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  padding: 1.5rem 2rem;\n  gap: 0.5rem;\n  overflow: hidden;\n  background: #dd3345;\n  color: white;\n  font-size: 22px;\n  .left-pattern {\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 30%;\n    transform: translate(-10%, -10%) scaleX(-1);\n    pointer-events: none;\n  }\n  .right-pattern {\n    position: absolute;\n    right: 0;\n    top: 0;\n    width: 30%;\n    transform: translate(10%, -10%);\n    pointer-events: none;\n  }\n  @media only screen and (max-width: 480px) {\n    padding: 1.125rem;\n  }\n`;\n\nconst BannerBg = (props) => (\n  <svg {...props} viewBox=\"0 0 145 152\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <rect\n      x=\"157.654\"\n      y=\"-37\"\n      width=\"20\"\n      height=\"161.118\"\n      rx=\"10\"\n      transform=\"rotate(45 157.654 -37)\"\n      fill=\"white\"\n      fill-opacity=\"0.08\"\n    />\n    <rect\n      x=\"189.654\"\n      y=\"-37\"\n      width=\"20\"\n      height=\"245.972\"\n      rx=\"10\"\n      transform=\"rotate(45 189.654 -37)\"\n      fill=\"white\"\n      fill-opacity=\"0.08\"\n    />\n    <rect\n      x=\"221.654\"\n      y=\"-37\"\n      width=\"20\"\n      height=\"164.654\"\n      rx=\"10\"\n      transform=\"rotate(45 221.654 -37)\"\n      fill=\"white\"\n      fill-opacity=\"0.08\"\n    />\n    <rect\n      x=\"125.654\"\n      y=\"-37\"\n      width=\"20\"\n      height=\"177.702\"\n      rx=\"10\"\n      transform=\"rotate(45 125.654 -37)\"\n      fill=\"white\"\n      fill-opacity=\"0.08\"\n    />\n    <rect\n      x=\"93.6543\"\n      y=\"-37\"\n      width=\"20\"\n      height=\"78.4889\"\n      rx=\"10\"\n      transform=\"rotate(45 93.6543 -37)\"\n      fill=\"white\"\n      fill-opacity=\"0.08\"\n    />\n  </svg>\n);\n\nconst HeaderIcons = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  svg {\n    width: 14px;\n    cursor: pointer;\n    transition: all 300ms ease-in-out;\n  }\n  .close-icon {\n    margin-left: auto;\n    &:hover {\n      rotate: 90deg;\n    }\n  }\n  div {\n    cursor: pointer;\n    display: flex;\n  }\n  .back-arrow:hover svg {\n    transform: translateX(-10px);\n  }\n`;\n\nconst DENOMINATION_OPTIONS = [{ text: \"NEAR\", value: \"NEAR\", decimals: 24 }];\n\nconst { projectId, referrerId, potId, onClose, NADABOT_CONTRACT_ID, POT, multiple, potDetail } =\n  props;\n\nconst DEFAULT_DONATION_AMOUNT = \"1\";\n\nconst accountId = context.accountId;\n\nconst initialState = {\n  amount: \"\",\n  donationType: multiple ? \"auto\" : \"direct\",\n  showBreakdown: false,\n  bypassProtocolFee: false,\n  bypassChefFee: false,\n  addNote: false,\n  donationNote: \"\",\n  donationNoteError: \"\",\n  allPots: null,\n  intervalId: null,\n  ftBalances: null,\n  selectedDenomination: DENOMINATION_OPTIONS[0],\n  denominationOptions: DENOMINATION_OPTIONS,\n  selectedRound: \"\",\n  currentPage: multiple ? \"formPot\" : \"form\",\n  selectedProjects: {},\n  toggleAmount: true,\n};\n\nState.init(initialState);\n\nconst {\n  amount,\n  denomination,\n  donationType,\n  showBreakdownm,\n  bypassProtocolFee,\n  bypassChefFee,\n  addNote,\n  donationNote,\n  donationNoteError,\n  allPots,\n  intervalId,\n  nearBalance,\n  ftBalances,\n  denominationOptions,\n  selectedDenomination,\n  selectedRound,\n  currentPage,\n} = state;\n\nconst [activeRounds, setActiveRounds] = useState(null);\n\nconst profile = Social.getr(`${projectId}/profile`);\nconst profileName = profile?.name || projectId;\n\nconst MAX_NOTE_LENGTH = 60;\n\nconst { ownerId, DONATION_CONTRACT_ID, NADABOT_HUMAN_METHOD, NADA_BOT_URL, SUPPORTED_FTS } =\n  VM.require(\"potlock.near/widget/constants\") || {\n    DONATION_CONTRACT_ID: \"\",\n    NADABOT_HUMAN_METHOD: \"\",\n    ownerId: \"\",\n    NADA_BOT_URL: \"\",\n    SUPPORTED_FTS: {},\n  };\n\nlet ListsSDK =\n  VM.require(\"potlock.near/widget/SDK.lists\") ||\n  (() => ({\n    getRegistrations: () => {},\n  }));\nListsSDK = ListsSDK({ env: props.env });\n\nlet DonateSDK =\n  VM.require(\"potlock.near/widget/SDK.donate\") ||\n  (() => ({\n    getConfig: () => {},\n    asyncGetDonationsForDonor: () => {},\n  }));\nDonateSDK = DonateSDK({ env: props.env });\n\nlet PotFactorySDK =\n  VM.require(\"potlock.near/widget/SDK.potfactory\") ||\n  (() => ({\n    getPots: () => {},\n  }));\n\nPotFactorySDK = PotFactorySDK({ env: props.env });\n\nconst PotSDK = VM.require(\"potlock.near/widget/SDK.pot\") || {\n  getConfig: () => {},\n  asyncGetConfig: () => {},\n  getApprovedApplications: () => {},\n  asyncGetApplicationByProjectId: () => {},\n  asyncGetDonationsForDonor: () => {},\n  isRoundActive: () => {},\n};\n\nconst { nearToUsd, formatWithCommas } = VM.require(\"potlock.near/widget/utils\") || {\n  nearToUsd: 1,\n  formatWithCommas: () => {},\n};\n\nconst { addItemsToCart, clearCart } = VM.require(\"potlock.near/widget/SDK.cart\") || {\n  addItemsToCart: () => {},\n  clearCart: () => {},\n};\n\nconst { FormDirect } = VM.require(\"potlock.near/widget/ModalDonation.Form\") || {\n  FormDirect: () => {},\n};\nconst { FormPot } = VM.require(\"potlock.near/widget/ModalDonation.FormPot\") || {\n  FormPot: () => {},\n};\nconst { ConfirmDirect } = VM.require(\"potlock.near/widget/ModalDonation.ConfirmDirect\") || {\n  ConfirmDirect: () => {},\n};\nconst { ConfirmPot } = VM.require(\"potlock.near/widget/ModalDonation.ConfirmPot\") || {\n  ConfirmPot: () => {},\n};\n\nconst pages = {\n  form: FormDirect,\n  formPot: FormPot,\n  confirm: ConfirmDirect,\n  confirmPot: ConfirmPot,\n};\n\nconst ActivePageComponent = pages[currentPage];\n\n// get all active pots\nconst pots = useCache(\n  () =>\n    // get all pots\n    PotFactorySDK.asyncGetPots()\n      .then((pots) => {\n        const activePots = pots.map((pot) =>\n          // if active\n          PotSDK.isRoundActive(pot.id)\n            // check if project had applied\n            .then((isActive) => isActive && pot.id)\n            .catch((e) => {\n              console.error(\"error checking active round for pot: \" + pot.id, e);\n            })\n        );\n        return Promise.all(activePots);\n      })\n      .catch((e) => {\n        console.error(\"error getting pots: \", e);\n      }),\n  \"active-pots\"\n);\nuseEffect(() => {\n  if (potId && !activeRounds) {\n    setActiveRounds([potId]);\n    State.update({\n      selectedRound: potId,\n      donationType: multiple ? \"auto\" : \"pot\",\n    });\n  } else if (!activeRounds?.length && projectId) {\n    if (!pots) setActiveRounds([]);\n    (pots ?? []).forEach((pot, idx) => {\n      if (pot) {\n        PotSDK.asyncGetApplicationByProjectId(pot, projectId)\n          .then((application) => {\n            if (application.status === \"Approved\") {\n              setActiveRounds((prev) => {\n                const prevRounds = prev || [];\n                if (!prevRounds.includes(pot)) {\n                  return [...prevRounds, pot];\n                }\n              });\n              if (!selectedRound)\n                State.update({\n                  selectedRound: pot,\n                });\n            } else if (pots.length - 1 === idx && !activeRounds) {\n              setActiveRounds((prev) => [...(prev || [])]);\n            }\n          })\n          .catch((err) => {\n            console.log(err);\n            setActiveRounds((prev) => [...(prev || [])]);\n          });\n      }\n    });\n  }\n}, [pots]);\n\n// Get Ft Balances\nuseEffect(() => {\n  if (!ftBalances && !potId) {\n    asyncFetch(`https://near-mainnet.api.pagoda.co/eapi/v1/accounts/${accountId}/balances/FT`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-api-key\": \"dce81322-81b0-491d-8880-9cfef4c2b3c2\",\n      },\n    })\n      .then((ftBalancesRes) => {\n        if (ftBalancesRes) {\n          const ftBalances = ftBalancesRes.body.balances;\n          State.update({\n            ftBalances: ftBalances,\n            denominationOptions: DENOMINATION_OPTIONS.concat(\n              ftBalances\n                .map(({ amount, contract_account_id, metadata }) => ({\n                  amount,\n                  id: contract_account_id,\n                  text: metadata.symbol,\n                  value: metadata.symbol,\n                  icon: metadata.icon,\n                  decimals: metadata.decimals,\n                }))\n                .filter((option) => option.text.length < 10)\n            ),\n          });\n        }\n      })\n      .catch((err) => console.log(\"fetching Ft balances faild\"));\n  }\n}, [ftBalances]);\n\nconst nearBalanceRes = fetch(\n  `https://near-mainnet.api.pagoda.co/eapi/v1/accounts/${accountId}/balances/NEAR`,\n  {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"x-api-key\": \"dce81322-81b0-491d-8880-9cfef4c2b3c2\",\n    },\n  }\n);\n\nconst ftBalance = useMemo(() => {\n  if (selectedDenomination.text === \"NEAR\") {\n    const nearBalance = nearBalanceRes?.body?.balance;\n\n    return nearBalance ? parseFloat(Big(nearBalance.amount).div(Big(10).pow(24)).toFixed(2)) : null;\n  }\n  const balance = denominationOptions.find(\n    // this is where we need the details\n    (option) => option.text === selectedDenomination.text\n  );\n  return balance\n    ? parseFloat(Big(balance.amount).div(Big(10).pow(balance.decimals)).toFixed(2))\n    : null;\n}, [selectedDenomination, ftBalances, nearBalanceRes]);\n\nreturn (\n  <Widget\n    src={`${ownerId}/widget/Components.Modal`}\n    props={{\n      ...props,\n      onClose: (e) => {\n        e.stopPropagation();\n      },\n      contentStyle: {\n        padding: \"0px\",\n      },\n      children: (\n        <Container>\n          <div>\n            <Banner>\n              <BannerBg className=\"left-pattern\" />\n              <BannerBg className=\"right-pattern\" />\n              <HeaderIcons>\n                {![\"form\", \"formPot\"].includes(currentPage) && (\n                  <div\n                    className=\"back-arrow\"\n                    onClick={() =>\n                      State.update({\n                        currentPage: multiple ? \"formPot\" : \"form\",\n                      })\n                    }\n                  >\n                    <svg viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                      <path\n                        d=\"M16 7H3.83L9.42 1.41L8 0L0 8L8 16L9.41 14.59L3.83 9H16V7Z\"\n                        fill=\"#FCCFCF\"\n                      />\n                    </svg>\n                  </div>\n                )}\n\n                <svg\n                  onClick={() => onClose()}\n                  className=\"close-icon\"\n                  viewBox=\"0 0 14 14\"\n                  fill=\"none\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    d=\"M14 1.41L12.59 0L7 5.59L1.41 0L0 1.41L5.59 7L0 12.59L1.41 14L7 8.41L12.59 14L14 12.59L8.41 7L14 1.41Z\"\n                    fill=\"#FCCFCF\"\n                  />\n                </svg>\n              </HeaderIcons>\n              {[\"confirmPot\", \"confirm\"].includes(currentPage) ? (\n                <div> Confirm donation</div>\n              ) : currentPage === \"formPot\" ? (\n                <div>Donate to Projects in {potDetail?.pot_name}</div>\n              ) : (\n                <div> Donate to {profileName}</div>\n              )}\n            </Banner>\n          </div>\n          <ActivePageComponent\n            {...props}\n            {...state}\n            accountId={accountId}\n            updateState={State.update}\n            ftBalance={ftBalance}\n            activeRounds={activeRounds}\n            DENOMINATION_OPTION={DENOMINATION_OPTIONS}\n          />\n        </Container>\n      ),\n    }}\n  />\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/potlock.near/widget/ModalDonation.Main", "fact_widget_deployments_id": "497f281df1b3db724d368b80df03ffc5", "inserted_timestamp": "2024-04-08T03:32:13.409Z", "modified_timestamp": "2024-04-08T03:32:13.409Z", "__row_index": 0}