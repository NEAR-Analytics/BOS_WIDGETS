{"tx_hash": "EhABdPcfRUgzLjD1BBRg5N7t8si9QSqkxxMFzgAfBjJz", "action_id_social": "3YzoFGU7JRVz1y9U1WNB64Ai76i3i5dn47VREdGExbho-0-widget", "block_id": 115043517, "block_timestamp": "2024-03-19T20:23:21.366Z", "signer_id": "potlock.near", "widget_name": "Project.Card", "source_code": "const { potId, potDetail, payoutDetails } = props;\nconst { nearToUsd, ipfsUrlFromCid, yoctosToNear, yoctosToUsdWithFallback } = VM.require(\n  \"potlock.near/widget/utils\"\n) || {\n  ipfsUrlFromCid: () => \"\",\n  yoctosToNear: () => \"\",\n  yoctosToUsdWithFallback: () => \"\",\n  nearToUsd: 1,\n};\nconst { ownerId, NADA_BOT_URL, SUPPORTED_FTS } = VM.require(\"potlock.near/widget/constants\") || {\n  ownerId: \"\",\n  NADA_BOT_URL: \"\",\n  SUPPORTED_FTS: {},\n};\nconst { getTagsFromSocialProfileData } = VM.require(\"potlock.near/widget/utils\") || {\n  getTagsFromSocialProfileData: () => [],\n};\n\nconst PotSDK = VM.require(\"potlock.near/widget/SDK.pot\") || {\n  getDonationsForProject: () => {},\n};\n\nlet DonateSDK =\n  VM.require(\"potlock.near/widget/SDK.donate\") ||\n  (() => ({\n    getDonationsForRecipient: () => {},\n  }));\nDonateSDK = DonateSDK({ env: props.env });\n\n// console.log(\"props in Card: \", props);\n\nconst Card = styled.a`\n  display: flex;\n  flex-direction: column;\n  max-width: 400px;\n  width: 100%;\n  overflow: hidden;\n  border-radius: 12px;\n  background: white;\n  box-shadow: 0px -2px 0px #dbdbdb inset;\n  border: 1px solid #dbdbdb;\n  margin-left: auto;\n  margin-right: auto;\n  // height: 500px;\n  transition: all 300ms;\n  :hover {\n    text-decoration: none;\n    transform: translateY(-1rem);\n  }\n`;\n\nconst HeaderContainer = styled.div`\n  padding-left: 16px;\n  &:hover {\n    text-decoration: none;\n    cursor: pointer;\n  }\n  @media screen and (max-width: 768px) {\n    border-radius: 0;\n  }\n`;\n\nconst backgroundStyleHeightPx = 168;\n\nconst BackgroundImageContainer = styled.div`\n  svg {\n    position: absolute;\n    top: ${backgroundStyleHeightPx / 2}px;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    opacity: 0; // Start with the image invisible\n    transition: opacity 0.3s;\n    z-index: 2; // Ensure the image is on top\n    pointer-events: none;\n  }\n`;\n\nconst ProfileImageContainer = styled.div`\n  transform: translateY(138px);\n  width: 40px;\n  height: 40px;\n  position: absolute;\n\n  img {\n    width: 40px;\n    height: 40px;\n  }\n\n  &:hover {\n    cursor: pointer;\n\n    &:after {\n      background-color: rgba(45.9, 45.9, 45.9, 0.4); // Dark overlay with 40% opacity on hover\n    }\n\n    svg {\n      opacity: 1; // Make the image visible on hover\n    }\n  }\n`;\n\nconst Info = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 176px;\n  padding: 16px 24px;\n  gap: 16px;\n  flex: 1;\n`;\n\nconst Title = styled.div`\n  font-size: 16px;\n  font-weight: 600;\n  color: #2e2e2e;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  width: 100%;\n`;\n\nconst SubTitle = styled.div`\n  font-size: 16px;\n  font-weight: 400;\n  color: #2e2e2e;\n  word-wrap: break-word;\n`;\n\nconst DonationsInfoContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  padding: 16px 24px;\n  width: 100%;\n  border-top: 1px #f0f0f0 solid;\n`;\n\nconst DonationsInfoItem = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 8px;\n  align-items: center;\n`;\n\nconst DonationButton = styled.button`\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  padding: 16px 24px;\n  background: #fef6ee;\n  overflow: hidden;\n  box-shadow: 0px -2.700000047683716px 0px #4a4a4a inset;\n  border-radius: 6px;\n  border: 1px solid #4a4a4a;\n  gap: 8px;\n  display: inline-flex;\n  text-align: center;\n  color: #2e2e2e;\n  font-size: 14px;\n  line-height: 16px;\n  font-weight: 600;\n\n  &:hover {\n    text-decoration: none;\n    cursor: pointer;\n  }\n`;\n\nconst Amount = styled.div`\n  font-size: 17px;\n  font-weight: 600;\n  color: #292929;\n  line-height: 24px;\n`;\n\nconst AmountDescriptor = styled.div`\n  font-size: 11px;\n  font-weight: 400;\n  color: #525252;\n  word-wrap: break-word;\n  text-transform: uppercase;\n  line-height: 16px;\n  letter-spacing: 1.1px;\n`;\n\nconst Tags = styled.div`\n  display: flex;\n  gap: 8px;\n  flex-wrap: wrap;\n`;\n\nconst Tag = styled.span`\n  box-shadow: 0px -0.699999988079071px 0px rgba(123, 123, 123, 0.36) inset;\n  padding: 4px 8px;\n  border-radius: 4px;\n  border: 1px solid rgba(123, 123, 123, 0.36);\n  color: #2e2e2e;\n`;\n\nconst MatchingSection = styled.div`\n  display: flex;\n  padding: 8px 24px;\n  align-items: center;\n  justify-content: space-between;\n  background: #ebebeb;\n  border-radius: 0px 0px 12px 12px;\n`;\n\nconst MatchingTitle = styled.div`\n  color: #292929;\n  font-size: 11px;\n  font-weight: 400;\n  line-height: 18px;\n  letter-spacing: 1.1px;\n  text-transform: uppercase;\n  word-wrap: break-word;\n`;\n\nconst MatchingAmount = styled.div`\n  color: #292929;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 24px;\n  word-wrap: break-word;\n`;\n\n// Skeleton\nconst loadingSkeleton = styled.keyframes`\n  0% {\n    opacity: 1;\n  }\n  50% {\n    opacity: 0.4;\n  }\n  100% {\n    opacity: 1;\n  }\n`;\n\nconst CardSkeletonContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 447px;\n  width: 100%;\n  max-width: 400px;\n  border-radius: 12px;\n  background: white;\n  box-shadow: 0px -2px 0px #dbdbdb inset;\n  border: 1px solid #dbdbdb;\n  margin-left: auto;\n  margin-right: auto;\n  overflow: hidden;\n  animation-name: ${loadingSkeleton};\n  animation-duration: 1s;\n  animation-iteration-count: infinite;\n`;\n\nconst HeaderSkeleton = styled.div`\n  display: block;\n  width: 100%;\n  height: 168px;\n  background: #eee;\n`;\n\nconst ProfileImageSkeleton = styled.div`\n  background: #e0e0e0;\n  margin-left: 32px;\n  transform: translateY(148px);\n  width: 40px;\n  height: 40px;\n  position: absolute;\n  border-radius: 999px;\n`;\n\nconst TitleSkeleton = styled.div`\n  width: 120px;\n  height: 24px;\n  background: #eee;\n  margin-left: 24px;\n  margin-top: 24px;\n`;\n\nconst DescriptionSkeleton = styled.div`\n  width: 83%;\n  height: 48px;\n  background: #eee;\n  margin-left: 24px;\n  margin-top: 24px;\n`;\n\nconst TagSkeleton = styled.div`\n  background: #eee;\n  border-radius: 4px;\n  height: 34px;\n  width: 110px;\n  margin: 24px;\n`;\n\nconst FooterItemSkeleton = styled.div`\n  width: 150px;\n  height: 40px;\n  background: #eee;\n\n  @media screen and (max-width: 390px) {\n    width: 100px;\n  }\n`;\n\nconst DonationsInfoContainerSkeleton = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  padding: 16px 24px;\n  width: 100%;\n  border-top: 1px #f0f0f0 solid;\n`;\n\nconst DonationsInfoItemSkeleton = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 8px;\n  align-items: center;\n`;\n\nconst CardSkeleton = () => (\n  <CardSkeletonContainer>\n    <HeaderSkeleton />\n    <ProfileImageSkeleton />\n    <TitleSkeleton />\n    <DescriptionSkeleton />\n    <TagSkeleton />\n    <DonationsInfoContainerSkeleton>\n      <DonationsInfoItemSkeleton>\n        <FooterItemSkeleton />\n      </DonationsInfoItemSkeleton>\n      <DonationsInfoItemSkeleton>\n        <FooterItemSkeleton />\n      </DonationsInfoItemSkeleton>\n    </DonationsInfoContainerSkeleton>\n  </CardSkeletonContainer>\n);\n\nState.init({\n  donateModal: {\n    isOpen: false,\n    recipientId: null,\n    referrerId: null,\n    potId: null,\n    potDetail: null,\n    successfulDonation: null,\n  },\n});\n\nconst openDonateModal = () => {\n  State.update({\n    donateModal: {\n      isOpen: true,\n      recipientId: projectId,\n      referrerId: null,\n      potId: null,\n      potDetail: null,\n      successfulDonation: null,\n    },\n  });\n};\n\nconst projectId = props.project.id || props.projectId;\nconst profile = Social.getr(`${projectId}/profile`);\n\nif (!profile) return <CardSkeleton />;\n\nconst MAX_DESCRIPTION_LENGTH = 80;\n\nconst { name, description, plCategories } = profile;\n// const name = profile?.name || \"No name\";\n// const description = profile?.description || \"No description\";\n// const category = profile?.category || \"No category\";\n\nconst donationsForProject = potId\n  ? PotSDK.getDonationsForProject(potId, projectId)\n  : DonateSDK.getDonationsForRecipient(projectId);\n\n// console.log(donationsForProject);\nif (donationsForProject === null) return <CardSkeleton />;\n\nconst [totalAmountNear, totalDonors] = useMemo(() => {\n  if (!donationsForProject) return [\"0\", 0];\n  const donors = [];\n  let totalDonationAmountNear = new Big(0);\n  for (const donation of donationsForProject) {\n    if (!donors.includes(donation.donor_id)) {\n      donors.push(donation.donor_id);\n    }\n    if (donation.ft_id === \"near\" || donation.base_currency === \"near\") {\n      totalDonationAmountNear = totalDonationAmountNear.plus(new Big(donation.total_amount));\n    }\n  }\n  return [totalDonationAmountNear.toString(), donors.length];\n}, [donationsForProject]);\n\nconst projectUrl = props.hrefWithParams(`?tab=project&projectId=${projectId}`);\n\nconst getImageSrc = (image) => {\n  const defaultImageUrl =\n    \"https://ipfs.near.social/ipfs/bafkreih4i6kftb34wpdzcuvgafozxz6tk6u4f5kcr2gwvtvxikvwriteci\";\n  if (!image) return defaultImageUrl;\n  const { url, ipfs_cid } = image;\n  if (ipfs_cid) {\n    return ipfsUrlFromCid(ipfs_cid);\n  } else if (url) {\n    return url;\n  }\n  return defaultImageUrl;\n};\n\nconst backgroundImageStyle = {\n  objectFit: \"cover\",\n  left: 0,\n  top: 0,\n  height: \"168px\",\n  borderRadius: \"6px 6px 0px 0px\",\n  pointerEvents: \"none\",\n};\n\nconst profileImageStyle = {\n  width: \"40px\",\n  height: \"40px\",\n  position: \"absolute\",\n  bottom: \"-10px\",\n  left: \"14px\",\n  pointerEvents: \"none\",\n};\n\nconst tags = getTagsFromSocialProfileData(profile);\n\nreturn (\n  <>\n    <Card href={projectUrl} key={projectId}>\n      <HeaderContainer className=\"pt-0 position-relative\">\n        <BackgroundImageContainer>\n          {profile.backgroundImage?.nft ? (\n            <Widget\n              src=\"mob.near/widget/Image\"\n              props={{\n                image: profile.backgroundImage,\n                alt: \"background\",\n                className: \"position-absolute w-100\",\n                style: backgroundImageStyle,\n                fallbackUrl:\n                  \"https://ipfs.near.social/ipfs/bafkreih4i6kftb34wpdzcuvgafozxz6tk6u4f5kcr2gwvtvxikvwriteci\",\n              }}\n            />\n          ) : (\n            <img\n              className=\"position-absolute w-100\"\n              style={backgroundImageStyle}\n              src={getImageSrc(profile.backgroundImage)}\n              alt=\"background\"\n            />\n          )}\n        </BackgroundImageContainer>\n        <ProfileImageContainer\n          class=\"profile-picture d-inline-block\"\n          // profileImageTranslateYPx={props.profileImageTranslateYPx}\n          // profileImageTranslateYPxMobile={props.profileImageTranslateYPxMobile}\n        >\n          {profile.image?.nft ? (\n            <Widget\n              src=\"mob.near/widget/Image\"\n              props={{\n                image: profile.image,\n                alt: \"avatar\",\n                className: \"rounded-circle w-100 img-thumbnail d-block\",\n                style: profileImageStyle,\n                fallbackUrl:\n                  \"https://ipfs.near.social/ipfs/bafkreih4i6kftb34wpdzcuvgafozxz6tk6u4f5kcr2gwvtvxikvwriteci\",\n              }}\n            />\n          ) : (\n            <img\n              className=\"rounded-circle w-100 img-thumbnail d-block\"\n              style={profileImageStyle}\n              src={getImageSrc(profile.image)}\n              alt=\"avatar\"\n            />\n          )}\n        </ProfileImageContainer>\n      </HeaderContainer>\n      <Info>\n        <Title>{name}</Title>\n        <SubTitle>\n          {description.length > MAX_DESCRIPTION_LENGTH\n            ? description.slice(0, MAX_DESCRIPTION_LENGTH) + \"...\"\n            : description}\n        </SubTitle>\n        {!tags.length ? (\n          \"No tags\"\n        ) : (\n          <Tags>\n            {tags.map((tag, tagIndex) => (\n              <Tag key={tagIndex}>{tag}</Tag>\n            ))}\n          </Tags>\n        )}\n      </Info>\n      <DonationsInfoContainer>\n        <DonationsInfoItem>\n          <Amount>{totalAmountNear ? yoctosToUsdWithFallback(totalAmountNear, true) : \"-\"}</Amount>\n          <AmountDescriptor>Raised</AmountDescriptor>\n        </DonationsInfoItem>\n        {payoutDetails && (\n          <DonationsInfoItem>\n            <Amount>{payoutDetails.donorCount}</Amount>\n            <AmountDescriptor>\n              {payoutDetails.donorCount === 1 ? \"Donor\" : \"Donors\"}\n            </AmountDescriptor>\n          </DonationsInfoItem>\n        )}\n        {props.allowDonate && context.accountId && (\n          <DonationButton\n            onClick={(e) => {\n              e.preventDefault();\n              openDonateModal();\n            }}\n            disabled={!context.accountId}\n          >\n            {props.requireVerification ? \"Verify to donate\" : \"Donate\"}\n          </DonationButton>\n        )}\n        {/* <Widget\n        src={`${ownerId}/widget/Components.Button`}\n        props={{\n          type: \"secondary\",\n          text: \"Donate\",\n          onClick: () => {\n            props.openDonateToProjectModal(projectId);\n          },\n        }}\n      /> */}\n        {/* <DonationsInfoItem>\n        <Title>{totalDonors || totalDonors === 0 ? totalDonors : \"-\"}</Title>\n        <SubTitle>{totalDonors === 1 ? \"Donor\" : \"Donors\"}</SubTitle>\n      </DonationsInfoItem> */}\n      </DonationsInfoContainer>\n      {payoutDetails && (\n        <MatchingSection>\n          <MatchingTitle>Estimated matched amount</MatchingTitle>\n          <MatchingAmount>\n            {yoctosToNear(payoutDetails.matchingAmount, true) || \"- N\"}\n          </MatchingAmount>\n        </MatchingSection>\n      )}\n      {/* {props.allowDonate && (\n      <Widget\n        src={`${ownerId}/widget/Cart.AddToCart`}\n        props={{\n          ...props,\n          projectId,\n          style: {\n            borderRadius: \"0px 0px 6px 6px\",\n            boxShadow: \"0px\",\n            border: \"0px\",\n          },\n          stopPropagation: true,\n          showModal: false,\n        }}\n      />\n    )} */}\n      {/* {props.requireVerification && (\n      <Widget\n        src={`${ownerId}/widget/Pots.ButtonVerifyToDonate`}\n        props={{\n          ...props,\n          style: {\n            borderRadius: \"0px 0px 6px 6px\",\n            boxShadow: \"0px\",\n            border: \"0px\",\n          },\n          href: NADA_BOT_URL,\n        }}\n      />\n    )} */}\n    </Card>\n    {state.donateModal.isOpen && (\n      <Widget\n        src={`${ownerId}/widget/Project.ModalDonation`}\n        loading={\"\"}\n        props={{\n          ...props,\n          isModalOpen: state.donateModal.isOpen,\n          onClose: () =>\n            State.update({\n              donateModal: {\n                isOpen: false,\n                recipientId: null,\n                referrerId: null,\n                potId: null,\n                potDetail: null,\n              },\n            }),\n          openDonationModalSuccess: (donation) => {\n            State.update({\n              donateModal: {\n                isOpen: false,\n                recipientId: null,\n                referrerId: null,\n                potId: null,\n                potDetail: null,\n              },\n              successfulDonation: donation,\n            });\n          },\n          recipientId: state.donateModal.recipientId,\n          referrerId: props.referrerId,\n          potId,\n        }}\n      />\n    )}\n    {state.successfulDonation && (\n      <Widget\n        src={`${ownerId}/widget/Project.ModalSuccess`}\n        props={{\n          ...props,\n          successfulDonation: state.successfulDonation,\n          isModalOpen: state.successfulDonation != null,\n          onClose: () =>\n            State.update({\n              successfulDonation: null,\n            }),\n        }}\n      />\n    )}\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/potlock.near/widget/Project.Card", "fact_widget_deployments_id": "c2bca4de8da38aab0804d2e3ea333e6d", "inserted_timestamp": "2024-03-19T21:27:29.147Z", "modified_timestamp": "2024-03-19T22:30:05.446Z", "__row_index": 32}