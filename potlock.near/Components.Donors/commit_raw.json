{"tx_hash": "2Pef6gXRz9U1kysCUfHosVY1vmQRJh6ujKWWMP2MWuJ9", "action_id_social": "3R2QriWE7NzJcBFALmxYn4b6niPHGHgPCe2qW44dBj2A-0-widget", "block_id": 112687547, "block_timestamp": "2024-02-12T15:43:29.046Z", "signer_id": "potlock.near", "widget_name": "Components.Donors", "source_code": "const { ownerId } = props;\nconst { calcDonations, filterByDate } = VM.require(`${ownerId}/widget/Components.DonorsUtils`);\n\nconst [totalDonations, setDonations] = useState([]);\nconst [index, setIndex] = useState(0);\nconst [page, setPage] = useState(0);\nconst [currentTab, setTab] = useState(\"Leaderboard\");\nconst [filter, setFilter] = useState(\"\");\n\nconst perPage = 30;\n\nconst limit = 100;\n\nconst LoadingWrapper = styled.div`\n  font-size: 1.5rem;\n  margin-top: 1rem;\n`;\n\nconst Loading = () => <LoadingWrapper>Loading...</LoadingWrapper>;\n\n// Get all Donations\nconst donationsPart = Near.view(\"donate.potlock.near\", \"get_donations\", {\n  from_index: limit * index,\n  limit: limit,\n});\n\nif (donationsPart === null) return <Loading />;\n\nif (\n  donationsPart.length === limit &&\n  totalDonations[totalDonations.length - 1].id !== donationsPart[donationsPart.length - 1].id\n) {\n  setIndex(index + 1);\n  setDonations([...totalDonations, ...donationsPart]);\n  return <Loading />;\n}\nlet donations = [...totalDonations];\n\nif (donationsPart.length < limit) {\n  donations.push(...donationsPart);\n}\n\n// Filter Donation\ndonations = donations.filter((donation) => filterByDate(filter.value, donation));\n\nconst uniqueDonations = donations.reduce((accumulator, currentDonation) => {\n  const existingDonation = accumulator.find((item) => item.donor_id === currentDonation.donor_id);\n\n  if (existingDonation) {\n    // Update the total amount if the donor_id already exists\n    existingDonation.amount += calcDonations(currentDonation);\n  } else {\n    // Add a new entry if the donor_id doesn't exist\n    accumulator.push({\n      ...currentDonation,\n      amount: calcDonations(currentDonation),\n    });\n  }\n\n  return accumulator;\n}, []);\n\n// Sorted Unique Donors according to amount\nconst sortedDonations = uniqueDonations.sort((a, b) => b.amount - a.amount);\n\nconst Container = styled.div`\n  --primary-color: #dd3345;\n  display: flex;\n  flex-direction: column;\n\n  .leaderboard {\n    width: 100%;\n    h1 {\n      font-size: 2.5rem;\n      font-weight: 600;\n      margin-top: 20px;\n    }\n    .cards {\n      display: flex;\n      gap: 3rem;\n      margin-top: 2rem;\n      margin-bottom: 5rem;\n      > div {\n        width: 30%;\n        display: flex;\n      }\n      .top {\n        width: 40%;\n        scale: 1.05;\n      }\n      @media only screen and (max-width: 670px) {\n        flex-direction: column;\n        justify-content: center;\n        > div {\n          width: 100%;\n          display: flex;\n        }\n        .top {\n          scale: 1;\n          width: 100%;\n        }\n      }\n    }\n  }\n`;\n\nconst Tabs = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  gap: 2rem;\n  font-size: 14px;\n  color: rgb(123, 123, 123);\n  margin-bottom: 2rem;\n  div {\n    transition: all 300ms;\n    cursor: pointer;\n    font-weight: 500;\n    :hover {\n      color: black;\n    }\n    &.active {\n      color: black;\n    }\n  }\n  .select {\n    width: fit-content;\n  }\n`;\n\nconst NoResult = styled.div`\n  font-size: 2rem;\n  text-align: center;\n`;\n\nconst rank1 = Social.getr(`${sortedDonations[0].donor_id}/profile`);\nconst rank2 = Social.getr(`${sortedDonations[1].donor_id}/profile`);\nconst rank3 = Social.getr(`${sortedDonations[2].donor_id}/profile`);\n\nif (rank1 === null || rank2 === null || rank3 === null) return <Loading />;\n\n// console.log(\"rank1\", rank1);\n// console.log(\"rank2\", rank2);\n// console.log(\"rank3\", rank3);\n\nconst leaderboard = [\n  {\n    rank: \"#2\",\n    id: sortedDonations[1].donor_id,\n    amount: sortedDonations[1].amount,\n    profile: rank2,\n  },\n  {\n    rank: (\n      <img\n        src=\"https://ipfs.near.social/ipfs/bafkreigpq56kv3p4kjtneiclx6sne3qrxtg5jho34yq2j6nnxli3p7aboe\"\n        alt=\"top\"\n      />\n    ),\n    id: sortedDonations[0].donor_id,\n    name: rank1.name || sortedDonations[0].donor_id,\n    className: \"top\",\n    amount: sortedDonations[0].amount,\n    profile: rank1,\n  },\n  {\n    rank: \"#3\",\n    id: sortedDonations[2].donor_id,\n    amount: sortedDonations[2].amount,\n    profile: rank3,\n  },\n];\n\nconst tabs = [\"Leaderboard\", \"Transactions\"];\n\nreturn (\n  <Container>\n    <div className=\"leaderboard\">\n      <h1>Donors Leaderboard</h1>\n      <div className=\"cards\">\n        {leaderboard.map((donation) => (\n          <Widget\n            key={donation.id}\n            src={`${ownerId}/widget/Components.DonorsCard`}\n            props={{ ...props, donation }}\n          />\n        ))}\n      </div>\n    </div>\n    <Tabs>\n      {tabs.map((tab) => (\n        <div key={tab} className={currentTab === tab && \"active\"} onClick={() => setTab(tab)}>\n          {tab}\n        </div>\n      ))}\n      <Widget\n        src={`${ownerId}/widget/Inputs.Select`}\n        props={{\n          noLabel: true,\n          placeholder: \"Filter\",\n          containerStyles: { width: \"fit-content\", marginLeft: \"auto\", color: \"black\" },\n          options: [\n            { text: \"Today\", value: \"day\" },\n            { text: \"Last Week\", value: \"week\" },\n            { text: \"Last Month\", value: \"month\" },\n            { text: \"All Time\", value: \"all\" },\n          ],\n          value: filter,\n          onChange: (filter) => {\n            setFilter(filter);\n          },\n        }}\n      />\n    </Tabs>\n\n    {currentTab === \"Transactions\" &&\n      (donations.length ? (\n        <Widget\n          src={`${ownerId}/widget/Components.DonorsTrx`}\n          props={{ ...props, donations: donations }}\n        />\n      ) : (\n        <NoResult>No Donations</NoResult>\n      ))}\n    {currentTab === \"Leaderboard\" &&\n      (sortedDonations.length ? (\n        <Widget\n          src={`${ownerId}/widget/Components.DonorsLeaderboard`}\n          props={{ ...props, donations: sortedDonations }}\n        />\n      ) : (\n        <NoResult>No Donations</NoResult>\n      ))}\n  </Container>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/potlock.near/widget/Components.Donors", "fact_widget_deployments_id": "5d5484cf9b147a4e9a79cc0b8665d0b0", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 7}