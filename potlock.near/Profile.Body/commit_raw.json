{"tx_hash": "ASRqiHfoFKqopr9sNvjtm6b3YBPrsj8ARa5aHAC55FPN", "action_id_social": "xDEDMDBYS3Ex41nYr4KRBjx6ZtUa8TnbfgwnLdgJ5yF-0-widget", "block_id": 115657430, "block_timestamp": "2024-03-28T14:54:08.611Z", "signer_id": "potlock.near", "widget_name": "Profile.Body", "source_code": "const { projectId } = props;\nconst { getTagsFromSocialProfileData } = VM.require(\n  \"potlock.near/widget/utils\"\n) || {\n  getTagsFromSocialProfileData: () => [],\n};\nconst {\n  ownerId,\n  SUPPORTED_FTS: { NEAR },\n} = VM.require(\"potlock.near/widget/constants\") || {\n  ownerId: \"\",\n  SUPPORTED_FTS: {},\n};\nconst accountId = props.accountId ?? context.accountId;\nconst [statusReview, setStatusReview] = useState({\n  modalOpen: false,\n  notes: \"\",\n  newStatus: \"\",\n});\nlet ListsSDK =\n  VM.require(\"potlock.near/widget/SDK.lists\") ||\n  (() => ({\n    getContractId: () => \"\",\n    isRegistryAdmin: () => {},\n    getRegistration: () => {},\n  }));\nListsSDK = ListsSDK({ env: props.env });\nconst listsContractId = ListsSDK.getContractId();\nconst userIsRegistryAdmin = ListsSDK.isRegistryAdmin(context.accountId);\nconst registration = ListsSDK.getRegistration(null, projectId);\nconst handleUpdateStatus = () => {\n  Near.call([\n    {\n      contractName: listsContractId,\n      methodName: \"update_registration\",\n      args: {\n        registration_id: registration.id,\n        status: statusReview.newStatus,\n        notes: statusReview.notes,\n      },\n      deposit: NEAR.toIndivisible(0.01).toString(),\n    },\n  ]);\n};\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  overflow: hidden;\n`;\nconst Details = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 2rem;\n  width: 100%;\n  padding: 3rem 4rem 24px;\n  @media screen and (max-width: 768px) {\n    padding: 24px 1rem;\n  }\n`;\nconst SidebarContainer = styled.div`\n  width: 15%;\n  padding-left: 1rem;\n  @media screen and (max-width: 768px) {\n    width: fit-content;\n    > div:first-of-type {\n      display: none;\n    }\n  }\n`;\nconst ModalTitle = styled.div`\n  color: #525252;\n  font-size: 16px;\n  font-weight: 600;\n  line-height: 20px;\n  word-wrap: break-word;\n  margin-bottom: 8px;\n`;\nconst Row = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\nconst { PROJECT_STATUSES } = VM.require(\"potlock.near/widget/constants\") || {\n  PROJECT_STATUSES: [],\n};\nreturn (\n  <Wrapper>\n    <Widget\n      src={`${ownerId}/widget/Profile.BannerHeader`}\n      props={{\n        ...props,\n        ShowFollowers: true,\n        accountId: projectId || accountId,\n      }}\n    />\n    <Container>\n      <Widget\n        src={`${ownerId}/widget/Profile.BodyHeader`}\n        props={{\n          ...props,\n          accountId,\n        }}\n      />\n      {userIsRegistryAdmin && projectId && (\n        <Widget\n          src={`${ownerId}/widget/Inputs.Select`}\n          props={{\n            noLabel: true,\n            options: PROJECT_STATUSES.map((status) => ({\n              value: status,\n              text: status,\n            })),\n            value: {\n              text: props.registration.status,\n              value: props.registration.status,\n            },\n            onChange: (status) => {\n              if (status.value != registration.status) {\n                setStatusReview({\n                  ...statusReview,\n                  newStatus: status.value,\n                  modalOpen: true,\n                });\n              }\n            },\n            containerStyles: {\n              padding: \"16px 24px\",\n            },\n          }}\n        />\n      )}\n      <Widget\n        src={`${ownerId}/widget/Profile.Tabs`}\n        props={{\n          ...props,\n        }}\n      />\n      <Details>\n        <Widget\n          src={props.navOptions.find((option) => option.id == props.nav).source}\n          props={{\n            ...props,\n            accounts: [projectId || accountId],\n          }}\n        />\n      </Details>\n    </Container>\n    <Widget\n      src={`${ownerId}/widget/Components.Modal`}\n      props={{\n        ...props,\n        isModalOpen: statusReview.modalOpen,\n        onClose: () => setStatusReview({ ...statusReview, modalOpen: false }),\n        children: (\n          <>\n            <ModalTitle>\n              Enter Notes for changing status to {statusReview.newStatus}\n            </ModalTitle>\n            <Widget\n              src={`${ownerId}/widget/Inputs.TextArea`}\n              props={{\n                noLabel: true,\n                inputRows: 5,\n                inputStyle: {\n                  background: \"#FAFAFA\",\n                },\n                placeholder: \"Your notes here...\",\n                value: statusReview.notes,\n                onChange: (notes) =>\n                  setStatusReview({ ...statusReview, notes }),\n                validate: () => {\n                  // none necessary\n                },\n              }}\n            />\n            <Row style={{ justifyContent: \"flex-end\", marginTop: \"12px\" }}>\n              <Widget\n                src={`${ownerId}/widget/Components.Button`}\n                props={{\n                  type: \"primary\",\n                  text: \"Submit\",\n                  onClick: handleUpdateStatus,\n                }}\n              />\n            </Row>\n          </>\n        ),\n      }}\n    />\n  </Wrapper>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/potlock.near/widget/Profile.Body", "fact_widget_deployments_id": "4d156a67d4a4ff075bdf6e680400447b", "inserted_timestamp": "2024-03-28T16:30:26.314Z", "modified_timestamp": "2024-03-28T16:30:26.314Z", "__row_index": 19}