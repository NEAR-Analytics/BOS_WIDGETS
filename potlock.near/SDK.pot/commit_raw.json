{"tx_hash": "A1v3bgwEacNbrUFXQgu51z5sAstfxUoKzN4kVdnVuZDL", "action_id_social": "5SjSx3N51FQagYqEVUHHdFd6aQRQSxW7URiXf1gnxRAs-0-widget", "block_id": 114157228, "block_timestamp": "2024-03-05T18:31:37.878Z", "signer_id": "potlock.near", "widget_name": "SDK.pot", "source_code": "let PotFactorySDK =\n  VM.require(\"potlock.near/widget/SDK.potfactory\") ||\n  (() => ({\n    getPots: () => {},\n  }));\n\nreturn {\n  getConfig: (potId) => {\n    return Near.view(potId, \"get_config\", {});\n  },\n  asyncGetConfig: (potId) => {\n    return Near.asyncView(potId, \"get_config\", {});\n  },\n  getMatchingPoolDonations: (potId) => {\n    // TODO: paginate\n    return Near.view(potId, \"get_matching_pool_donations\", {});\n  },\n  asyncGetMatchingPoolDonations: (potId) => {\n    return Near.asyncView(potId, \"get_matching_pool_donations\", {});\n  },\n  getPublicRoundDonations: (potId) => {\n    return Near.view(potId, \"get_public_round_donations\", {});\n  },\n  asyncGetPublicRoundDonations: (potId) => {\n    return Near.asyncView(potId, \"get_public_round_donations\", {});\n  },\n  getDonationsForDonor: (potId, accountId) => {\n    return Near.view(potId, \"get_donations_for_donor\", { donor_id: accountId });\n  },\n  asyncGetDonationsForDonor: (potId, accountId) => {\n    return Near.asyncView(potId, \"get_donations_for_donor\", { donor_id: accountId });\n  },\n  getDonationsForProject: (potId, projectId) => {\n    return Near.view(potId, \"get_donations_for_project\", { project_id: projectId });\n  },\n  asyncGetDonationsForProject: (potId, projectId) => {\n    return Near.asyncView(potId, \"get_donations_for_project\", { project_id: projectId });\n  },\n  getDonationsForRecipient: (potId, recipientId) => {\n    return Near.view(potId, \"get_donations_for_recipient\", { recipient_id: recipientId });\n  },\n  asyncGetDonationsForRecipient: (potId, recipientId) => {\n    return Near.asyncView(potId, \"get_donations_for_recipient\", { recipient_id: recipientId });\n  },\n  getApplicationByProjectId: (potId, projectId) => {\n    return Near.view(potId, \"get_application_by_project_id\", { project_id: projectId });\n  },\n  getApprovedApplications: (potId) => {\n    return Near.view(potId, \"get_approved_applications\", {});\n  },\n  asyncGetApprovedApplications: (potId) => {\n    return Near.asyncView(potId, \"get_approved_applications\", {});\n  },\n  getApplications: (potId) => {\n    return Near.view(potId, \"get_applications\", {});\n  },\n  asyncGetApplications: (potId) => {\n    return Near.asyncView(potId, \"get_applications\", {});\n  },\n  asyncGetActiveRoundsForProject: (projectId, env) => {\n    PotFactorySDK = PotFactorySDK({ env });\n    console.log(\"PotFactorySDK: \", PotFactorySDK);\n    const pots = PotFactorySDK.getPots();\n    console.log(\"pots line 64: \", pots);\n    const activeRounds = Object.entries(pots).filter(([_id, { approvedProjects, detail }]) => {\n      console.log(\"approvedProjects: \", approvedProjects);\n      const { public_round_start_ms, public_round_end_ms } = detail;\n      const now = Date.now();\n      const approved = approvedProjects.filter((proj) => {\n        return (\n          proj.project_id === recipientId &&\n          public_round_start_ms < now &&\n          public_round_end_ms > now\n        );\n      });\n      return approved.length > 0;\n    });\n    // return Near.view(projectId, \"get_active_rounds_for_project\", {});\n  },\n  getPayoutsChallenges: (potId) => {\n    return Near.view(potId, \"get_payouts_challenges\", {});\n  },\n};\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/potlock.near/widget/SDK.pot", "fact_widget_deployments_id": "907633d06405f089cde38171927ae97f", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 2}