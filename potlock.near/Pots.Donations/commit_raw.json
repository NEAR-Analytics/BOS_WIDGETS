{"tx_hash": "AGGSQeepyU3KrcEWAs2Uys7fLD4TC1prErw8Sfsgoevj", "action_id_social": "N8jJNYWRpknsikaU6ASdBo1exYxdHZmGYTo6LTDKp1p-0-widget", "block_id": 116897442, "block_timestamp": "2024-04-15T12:59:57.280Z", "signer_id": "potlock.near", "widget_name": "Pots.Donations", "source_code": "// get donations\nconst {\n  potId,\n  allDonations,\n  potDetail: { base_currency },\n} = props;\n\nconst { ownerId, SUPPORTED_FTS } = VM.require(\"potlock.near/widget/constants\") || {\n  ownerId: \"\",\n  SUPPORTED_FTS: {},\n};\nconst { getTimePassed, _address } = VM.require(`${ownerId}/widget/Components.DonorsUtils`) || {\n  getTimePassed: () => \"\",\n  _address: (address) => address,\n};\n\nconst PotSDK = VM.require(\"potlock.near/widget/SDK.pot\") || {\n  getPublicRoundDonations: () => {},\n};\n\nState.init({\n  filteredDonations: [],\n  currentFilter: \"date\",\n  filter: {\n    date: false, // false === ascending\n    price: false, // false === ascending\n  },\n});\n\nconst { filteredDonations, currentFilter, filter } = state;\n\nuseEffect(() => {\n  if (allDonations && filteredDonations.length === 0) {\n    const sortedDonations = [...allDonations].reverse();\n    State.update({ filteredDonations: sortedDonations });\n  }\n}, [allDonations]);\nif (!allDonations) return <div class=\"spinner-border text-secondary\" role=\"status\" />;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  width: 100%;\n\n  @media screen and (min-width: 375px) and (max-width: 768px) {\n    width: 99%;\n  }\n  @media screen and (max-width: 390px) {\n    width: 98%;\n  }\n`;\n\nconst OuterTextContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 1.5rem;\n  align-items: center;\n  @media screen and (max-width: 768px) {\n    padding-right: 10px;\n  }\n`;\n\nconst OuterText = styled.div`\n  font-size: 18px;\n  font-weight: 600;\n`;\n\nconst DonationsCount = styled.div`\n  font-size: 16px;\n`;\n\nconst TableContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  border: 0.5px rgba(41, 41, 41, 0.5) solid;\n  box-shadow: 0px 4px 12px -4px rgba(82, 82, 82, 0.2);\n  border-radius: 2px;\n  width: 100%;\n  overflow-x: auto;\n  flex-wrap: nowrap;\n`;\n\nconst Sort = styled.div`\n  display: none;\n  justify-content: space-between;\n  width: 100%;\n  margin-top: 1.5rem;\n  div {\n    display: flex;\n    align-items: center;\n    font-weight: 500;\n    cursor: pointer;\n    gap: 8px;\n    color: #7b7b7b;\n    &.active {\n      color: #292929;\n    }\n    svg {\n      transition: rotate 300ms;\n    }\n  }\n  @media screen and (max-width: 768px) {\n    display: flex;\n  }\n`;\n\nconst Arrow = (props) => (\n  <svg\n    {...props}\n    style={{ rotate: !props.active ? \"0deg\" : \"180deg\" }}\n    width=\"12\"\n    height=\"12\"\n    viewBox=\"0 0 12 12\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M0 6L1.0575 7.0575L5.25 2.8725V12H6.75V2.8725L10.935 7.065L12 6L6 0L0 6Z\"\n      fill=\"#7B7B7B\"\n    />\n  </svg>\n);\n\nconst searchDonations = (searchTerm) => {\n  // filter donations that match the search term (donor_id, project_id)\n  const filteredDonations = allDonations.filter((donation) => {\n    const { donor_id, project_id } = donation;\n    const searchFields = [donor_id, project_id];\n\n    return searchFields.some((field) => field.toLowerCase().includes(searchTerm.toLowerCase()));\n  });\n  return filteredDonations;\n};\n\nconst sortDonation = (type) => {\n  const sort = !filter[type];\n  State.update({ currentFilter: type, filter: { ...filter, [type]: sort } });\n  if (type === \"price\") {\n    const sortedDonations = filteredDonations.sort((a, b) =>\n      sort ? b.total_amount - a.total_amount : a.total_amount - b.total_amount\n    );\n    State.update({ filteredDonations: sortedDonations });\n  } else if (type === \"date\") {\n    const sortedDonations = filteredDonations.sort((a, b) => {\n      return sort ? b.donated_at - a.donated_at : a.donated_at - b.donated_at;\n    });\n    State.update({ filteredDonations: sortedDonations });\n  }\n};\n\nconst handleSearch = ({ target: { value } }) => {\n  const filteredDonations = searchDonations(value);\n  State.update({ filteredDonations });\n};\n\nconst ProfileImg = (address) => (\n  <Widget\n    src={`${ownerId}/widget/Project.ProfileImage`}\n    props={{\n      ...props,\n      accountId: address,\n      style: {},\n    }}\n  />\n);\n\nreturn (\n  <Container>\n    <OuterTextContainer>\n      <OuterText>All donations</OuterText>\n      <DonationsCount>{allDonations.length}</DonationsCount>\n    </OuterTextContainer>\n    <Sort>\n      <div\n        className={`${currentFilter === \"date\" ? \"active\" : \"\"}`}\n        onClick={() => sortDonation(\"date\")}\n      >\n        Sort Date {currentFilter === \"date\" && <Arrow active={!filter.date} />}\n      </div>\n      <div\n        onClick={() => sortDonation(\"price\")}\n        className={`${currentFilter === \"price\" ? \"active\" : \"\"}`}\n      >\n        Sort Amount {currentFilter === \"price\" && <Arrow active={filter.price} />}\n      </div>\n    </Sort>\n    <Widget\n      src={`${ownerId}/widget/Pots.DonationsTable`}\n      props={{\n        ...props,\n        filteredDonations,\n        filter,\n        currentFilter,\n        handleSearch,\n        sortDonation,\n      }}\n    />\n  </Container>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/potlock.near/widget/Pots.Donations", "fact_widget_deployments_id": "0649fdd8f96c08d5097b3002666bd1d4", "inserted_timestamp": "2024-04-15T14:42:15.155Z", "modified_timestamp": "2024-04-15T14:42:15.155Z", "__row_index": 1}