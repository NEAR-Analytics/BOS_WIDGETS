{"tx_hash": "GmLYoudP2vZp1QmuuStPXv8EDkpjam3hdFX4r96h3ysz", "action_id_social": "AwWYnA2mDWLpNxcqfJDWvsvaQEyEHNE7kXkzKRjtjQnj-0-widget", "block_id": 104844197, "block_timestamp": "2023-11-03T14:00:09.368Z", "signer_id": "potlock.near", "widget_name": "Cart.CheckoutItem", "source_code": "const ownerId = \"potlock.near\";\n\nconst IPFS_BASE_URL = \"https://nftstorage.link/ipfs/\";\n\nconst ItemContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  max-width: 800px;\n  background: white;\n  border: 1px solid #dbdbdb;\n  box-shadow: 0px -2px 0px #dbdbdb inset;\n  border-radius: 6px;\n  justify-content: flex-start;\n  align-items: flex-start;\n`;\n\nconst ItemLeft = styled.div`\n  height: 100%;\n  padding: 24px 16px;\n  border-right: 1px solid #dbdbdb;\n`;\n\nconst ItemRight = styled.div`\n  display: flex;\n  flex-direction: row;\n  padding: 24px 24px 24px 16px;\n  width: 100%;\n`;\n\nconst ImageContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 32px;\n`;\n\nconst DetailsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n`;\n\nconst Title = styled.a`\n  color: #2e2e2e;\n  font-size: 16px;\n  line-height: 24px;\n  font-weight: 600;\n  word-wrap: break-word;\n`;\n\nconst Description = styled.div`\n  color: #2e2e2e;\n  font-size: 16px;\n  line-height: 24px;\n  font-weight: 400;\n  word-wrap: break-word;\n  margin-bottom: 24px;\n`;\n\nconst FtIcon = styled.img`\n  width: 20px;\n  height: 20px;\n`;\n\n// const Title = styled(Text)`\n//   font-weight: 600;\n// `;\n\n// const Description = styled(Text)`\n//   font-weight: 400;\n// `;\n\nconst { projectId, checked, handleCheckboxClick } = props;\n\nconst profile = props.profile || Social.get(`${projectId}/profile/**`, \"final\") || {};\n\n// TODO: move this to state to handle selected FT once we support multiple FTs\n// TODO: also note this is duplicated in Cart.BreakdownSummary\nconst SUPPORTED_FTS = {\n  NEAR: {\n    iconUrl: IPFS_BASE_URL + \"bafkreicwkm5y7ojxnnfnmuqcs6ykftq2jvzg6nfeqznzbhctgl4w3n6eja\",\n    toIndivisible: (amount) => amount * 10 ** 24,\n    fromIndivisible: (amount) => amount / 10 ** 24,\n  },\n};\n\nreturn (\n  <ItemContainer>\n    <ItemLeft>\n      <Widget\n        src={`${ownerId}/widget/Inputs.Checkbox`}\n        props={{\n          id: \"selector-\" + projectId,\n          checked,\n          onClick: handleCheckboxClick,\n        }}\n      />\n    </ItemLeft>\n    <ItemRight>\n      <ImageContainer>\n        <Widget\n          src=\"mob.near/widget/ProfileImage\"\n          props={{\n            accountId: projectId,\n            style: {\n              width: \"40px\",\n              height: \"40px\",\n              border: \"none\",\n              marginRight: \"24px\",\n            },\n            className: \"mb-2\",\n            imageClassName: \"rounded-circle w-100 h-100 d-block\",\n            thumbnail: false,\n          }}\n        />\n      </ImageContainer>\n      <DetailsContainer>\n        <Title href={`?tab=project&projectId=${projectId}`}>{profile.name ?? \"\"}</Title>\n        <Description>{profile.description ?? \"\"}</Description>\n        <Widget\n          src={`${ownerId}/widget/Inputs.Text`}\n          props={{\n            label: \"Amount\",\n            placeholder: \"0\",\n            value: props.cart[projectId]?.amount,\n            onChange: (amount) => {\n              if (amount === \".\") amount = \"0.\";\n              props.updateCartItem(\n                projectId,\n                amount,\n                props.cart[projectId]?.ft,\n                props.cart[projectId]?.referrerId\n              ); // TODO: update this to use selected FT ID\n            },\n            inputStyles: {\n              textAlign: \"right\",\n              borderRadius: \"0px 4px 4px 0px\",\n            },\n            prefixElement: (\n              <Widget\n                src={`${ownerId}/widget/Inputs.Select`}\n                props={{\n                  noLabel: true,\n                  placeholder: \"\",\n                  options: [\n                    { text: \"\", value: \"\" },\n                    { text: \"NEAR\", value: \"NEAR\" },\n                  ],\n                  value: { text: props.cart[projectId]?.ft, value: props.cart[projectId]?.ft },\n                  onChange: ({ text, value }) => {\n                    props.updateCartItem(projectId, undefined, value);\n                  },\n                  containerStyles: {\n                    width: \"auto\",\n                  },\n                  inputStyles: {\n                    border: \"none\",\n                    borderRight: \"1px #F0F0F0 solid\",\n                    boxShadow: \"none\",\n                    borderRadius: \"4px 0px 0px 4px\",\n                    width: \"auto\",\n                    padding: \"12px 16px\",\n                    boxShadow: \"0px -2px 0px rgba(93, 93, 93, 0.24) inset\",\n                  },\n                  iconLeft: <FtIcon src={SUPPORTED_FTS[props.cart[projectId].ft].iconUrl} />,\n                }}\n              />\n            ),\n          }}\n        />\n      </DetailsContainer>\n    </ItemRight>\n  </ItemContainer>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/potlock.near/widget/Cart.CheckoutItem", "fact_widget_deployments_id": "022bd011658132f3a6e85c2172558643", "inserted_timestamp": "2023-11-03T15:48:14.011Z", "modified_timestamp": "2023-11-03T15:48:14.011Z", "__row_index": 1}