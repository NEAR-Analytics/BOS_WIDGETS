{"tx_hash": "ExchXdWti5ByiXAm7CcZkFgURv1JKTZ72j2t1WFALKdB", "action_id_social": "48p2sQZ246zWoZmZ78KTUN3eVjv95a8aaJqBCcfkbQsg-0-widget", "block_id": 114024869, "block_timestamp": "2024-03-03T17:01:31.837Z", "signer_id": "potlock.near", "widget_name": "Cart.CheckoutItem", "source_code": "const { basisPointsToPercent } = VM.require(\"potlock.near/widget/utils\") || {\n  basisPointsToPercent: () => 0,\n};\nconst { ownerId, SUPPORTED_FTS } = VM.require(\"potlock.near/widget/constants\") || {\n  ownerId: \"\",\n  SUPPORTED_FTS: {},\n};\n\nlet DonateSDK =\n  VM.require(\"potlock.near/widget/SDK.donate\") ||\n  (() => ({\n    getConfig: () => {},\n  }));\nDonateSDK = DonateSDK({ env: props.env });\n\nconst donationContractConfig = DonateSDK.getConfig();\n\nconst IPFS_BASE_URL = \"https://nftstorage.link/ipfs/\";\nconst CHEVRON_DOWN_URL =\n  IPFS_BASE_URL + \"bafkreiabkwyfxq6pcc2db7u4ldweld5xcjesylfuhocnfz7y3n6jw7dptm\";\nconst CHEVRON_UP_URL =\n  IPFS_BASE_URL + \"bafkreibdm7w6zox4znipjqlmxr66wsjjpqq4dguswo7evvrmzlnss3c3vi\";\n\nconst getPriceUSD = () => {\n  const res = fetch(`https://api.nearblocks.io/v1/stats`, { mode: \"cors\" });\n  return res.body.stats[0].near_price;\n};\n\nconst ItemContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  max-width: 800px;\n  background: white;\n  // background: pink;\n  border: 1px solid #dbdbdb;\n  box-shadow: 0px -2px 0px #dbdbdb inset;\n  border-radius: 6px;\n  justify-content: flex-start;\n  align-items: flex-start;\n`;\n\nconst ItemLeft = styled.div`\n  height: 100%;\n  padding: 24px 16px;\n  // background: green;\n`;\n\nconst ItemRight = styled.div`\n  display: flex;\n  flex-direction: row;\n  padding: 24px 24px 24px 16px;\n  width: 100%;\n  // background: yellow;\n  border-left: 1px solid #dbdbdb;\n`;\n\nconst ImageContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 32px;\n`;\n\nconst DetailsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  overflow: hidden;\n`;\n\nconst Title = styled.a`\n  color: #2e2e2e;\n  font-size: 16px;\n  line-height: 24px;\n  font-weight: 600;\n  word-wrap: break-word;\n`;\n\nconst Description = styled.div`\n  color: #2e2e2e;\n  font-size: 16px;\n  line-height: 24px;\n  font-weight: 400;\n  word-wrap: break-word;\n  overflow-wrap: break-word;\n  margin: 16px 0px 24px 0px;\n`;\n\nconst FtIcon = styled.img`\n  width: 20px;\n  height: 20px;\n`;\n\nconst Row = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst { projectId, checked, handleCheckboxClick } = props;\n\nconst profile = props.profile || Social.get(`${projectId}/profile/**`, \"final\") || {};\n\nState.init({\n  showBreakdown: false,\n});\n\nif (!donationContractConfig) return \"\";\n\nconst cartItem = props.cart[projectId];\nconst isPotDonation = !!cartItem?.potId;\n\nreturn (\n  <ItemContainer>\n    <ItemLeft>\n      <Widget\n        src={`${ownerId}/widget/Inputs.Checkbox`}\n        props={{\n          id: \"selector-\" + projectId,\n          checked,\n          onClick: handleCheckboxClick,\n        }}\n      />\n    </ItemLeft>\n    <ItemRight>\n      <ImageContainer>\n        <Widget\n          src=\"mob.near/widget/ProfileImage\"\n          props={{\n            accountId: projectId,\n            style: {\n              width: \"40px\",\n              height: \"40px\",\n              border: \"none\",\n              marginRight: \"24px\",\n            },\n            className: \"mb-2\",\n            imageClassName: \"rounded-circle w-100 h-100 d-block\",\n            thumbnail: false,\n          }}\n        />\n      </ImageContainer>\n      <DetailsContainer>\n        <Row>\n          <Title href={props.hrefWithParams(`?tab=project&projectId=${projectId}`)}>\n            {profile.name ?? \"\"}\n          </Title>\n          <Widget\n            src={`${ownerId}/widget/Pots.Tag`}\n            props={{\n              ...props,\n              backgroundColor: isPotDonation ? \"#FEF6EE\" : \"#F6F5F3\",\n              borderColor: isPotDonation ? \"rgba(219, 82, 27, 0.36)\" : \"#DBDBDB\",\n              textColor: isPotDonation ? \"#EA6A25\" : \"#292929\",\n              text: isPotDonation\n                ? cartItem.potDetail\n                  ? cartItem.potDetail.pot_name\n                  : \"-\"\n                : \"Direct Donation\",\n            }}\n          />\n        </Row>\n        <Description>{profile.description ?? \"\"}</Description>\n        <Widget\n          src={`${ownerId}/widget/Inputs.Text`}\n          props={{\n            label: \"Amount\",\n            placeholder: \"0\",\n            value: cartItem?.amount,\n            onChange: (amount) => {\n              amount = amount.replace(/[^\\d.]/g, \"\"); // remove all non-numeric characters except for decimal\n              if (amount === \".\") amount = \"0.\";\n              props.updateCartItem({\n                projectId,\n                amount,\n                ft: cartItem?.ft,\n                price: cartItem?.price ?? getPriceUSD(),\n                referrerId: cartItem?.referrerId,\n                potId: cartItem?.potId,\n                potDetail: cartItem?.potDetail,\n                note: cartItem?.note,\n              }); // TODO: update this to use selected FT ID\n            },\n            inputStyles: {\n              textAlign: \"right\",\n              borderRadius: \"0px 4px 4px 0px\",\n            },\n            preInputChildren: (\n              <Widget\n                src={`${ownerId}/widget/Inputs.Select`}\n                props={{\n                  noLabel: true,\n                  placeholder: \"\",\n                  options: [\n                    { text: \"\", value: \"\" },\n                    { text: \"NEAR\", value: \"NEAR\" },\n                    { text: \"USD\", value: \"USD\" },\n                  ],\n                  value: { text: cartItem?.ft, value: cartItem?.ft },\n                  onChange: ({ text, value }) => {\n                    props.updateCartItem({\n                      projectId,\n                      amount: undefined,\n                      ft: value,\n                      price: cartItem?.price ?? getPriceUSD(),\n                      referrerId: cartItem?.referrerId,\n                      potId: cartItem?.potId,\n                      potDetail: cartItem?.potDetail,\n                      note: Storage.get(\"note\"),\n                    });\n                  },\n                  containerStyles: {\n                    width: \"auto\",\n                  },\n                  inputStyles: {\n                    border: \"none\",\n                    borderRight: \"1px #F0F0F0 solid\",\n                    boxShadow: \"none\",\n                    borderRadius: \"4px 0px 0px 4px\",\n                    width: \"auto\",\n                    padding: \"12px 16px\",\n                    boxShadow: \"0px -2px 0px rgba(93, 93, 93, 0.24) inset\",\n                  },\n                  iconLeft:\n                    cartItem?.ft == \"NEAR\" ? (\n                      <FtIcon src={SUPPORTED_FTS[cartItem.ft].iconUrl} />\n                    ) : (\n                      \"$\"\n                    ),\n                }}\n              />\n            ),\n          }}\n        />\n        <Widget\n          src={`${ownerId}/widget/Cart.BreakdownSummary`}\n          props={{\n            ...props,\n            referrerId,\n            amountNear: cartItem?.amount,\n            bypassProtocolFee: false, // TODO: allow user to choose\n            containerStyle: { marginTop: \"16px\" },\n          }}\n        />\n      </DetailsContainer>\n    </ItemRight>\n  </ItemContainer>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/potlock.near/widget/Cart.CheckoutItem", "fact_widget_deployments_id": "3baf37e589ac6a2f93be9d4ca69c78ee", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 20}