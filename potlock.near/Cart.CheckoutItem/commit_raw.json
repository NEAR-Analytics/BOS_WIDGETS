{"tx_hash": "BqeM3Ywrc6fsJGRBfTmgj9VLZufr74kUFAWeWG4uzbeu", "action_id_social": "CbcXWw3Bg8VRMuq2gTqPrRBAjKnvCgLnqJrKCkR4mXx5-0-widget", "block_id": 115722656, "block_timestamp": "2024-03-29T14:20:36.213Z", "signer_id": "potlock.near", "widget_name": "Cart.CheckoutItem", "source_code": "const { basisPointsToPercent } = VM.require(\"potlock.near/widget/utils\") || {\n  basisPointsToPercent: () => 0,\n};\nconst { SUPPORTED_FTS } = VM.require(\"potlock.near/widget/constants\") || {\n  SUPPORTED_FTS: {},\n};\n\nconst { removeItemsFromCart, updateItemInCart } = VM.require(\"potlock.near/widget/SDK.cart\") || {\n  removeItemsFromCart: () => {},\n  updateItemInCart: () => {},\n};\n\nconst { cartItem, checked, handleCheckboxClick } = props;\n\nconst projectId = cartItem?.id;\nconst isPotDonation = cartItem?.potId;\n\nconst profile = props.profile || Social.get(`${projectId}/profile/**`, \"final\") || {};\n\nconst IPFS_BASE_URL = \"https://nftstorage.link/ipfs/\";\nconst CHEVRON_DOWN_URL =\n  IPFS_BASE_URL + \"bafkreiabkwyfxq6pcc2db7u4ldweld5xcjesylfuhocnfz7y3n6jw7dptm\";\nconst CHEVRON_UP_URL =\n  IPFS_BASE_URL + \"bafkreibdm7w6zox4znipjqlmxr66wsjjpqq4dguswo7evvrmzlnss3c3vi\";\n\nconst ItemContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  max-width: 800px;\n  background: white;\n  // background: pink;\n  border: 1px solid #dbdbdb;\n  box-shadow: 0px -2px 0px #dbdbdb inset;\n  border-radius: 6px;\n  justify-content: flex-start;\n  align-items: flex-start;\n`;\n\nconst ItemLeft = styled.div`\n  height: 100%;\n  padding: 24px 16px;\n  // background: green;\n`;\n\nconst ItemRight = styled.div`\n  display: flex;\n  flex-direction: row;\n  padding: 24px 24px 24px 16px;\n  width: 100%;\n  // background: yellow;\n  border-left: 1px solid #dbdbdb;\n`;\n\nconst ImageContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 32px;\n`;\n\nconst DetailsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  overflow: hidden;\n`;\n\nconst Title = styled.a`\n  color: #2e2e2e;\n  font-size: 16px;\n  line-height: 24px;\n  font-weight: 600;\n  word-wrap: break-word;\n`;\n\nconst Description = styled.div`\n  color: #2e2e2e;\n  font-size: 16px;\n  line-height: 24px;\n  font-weight: 400;\n  word-wrap: break-word;\n  overflow-wrap: break-word;\n  margin: 16px 0px 24px 0px;\n`;\n\nconst FtIcon = styled.img`\n  width: 20px;\n  height: 20px;\n`;\n\nconst Row = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst Icon = styled.svg`\n  width: 20px;\n  height: 20px;\n`;\n\nconst NearIcon = (props) => (\n  <Icon\n    {...props}\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    id=\"near-logo\"\n  >\n    <rect width=\"24\" height=\"24\" rx=\"12\" fill=\"#CECECE\" />\n    <path\n      d=\"M15.616 6.61333L13.1121 10.3333C12.939 10.5867 13.2719 10.8933 13.5117 10.68L15.9756 8.53333C16.0422 8.48 16.1354 8.52 16.1354 8.61333V15.32C16.1354 15.4133 16.0155 15.4533 15.9623 15.3867L8.50388 6.45333C8.26415 6.16 7.91787 6 7.53163 6H7.26526C6.5727 6 6 6.57333 6 7.28V16.72C6 17.4267 6.5727 18 7.27858 18C7.71809 18 8.13097 17.7733 8.3707 17.3867L10.8746 13.6667C11.0477 13.4133 10.7148 13.1067 10.475 13.32L8.0111 15.4533C7.94451 15.5067 7.85128 15.4667 7.85128 15.3733V8.68C7.85128 8.58667 7.97114 8.54667 8.02442 8.61333L15.4828 17.5467C15.7225 17.84 16.0821 18 16.4551 18H16.7214C17.4273 18 18 17.4267 18 16.72V7.28C18 6.57333 17.4273 6 16.7214 6C16.2686 6 15.8557 6.22667 15.616 6.61333Z\"\n      fill=\"black\"\n    />\n  </Icon>\n);\n\nconst [itemAmount, setItemAmount] = useState(cartItem?.amount);\nconst [itemToken, setItemToken] = useState(cartItem?.token);\n\nState.init({\n  ftBalances: null,\n  denominationOptions: [\n    { text: \"NEAR\", value: \"NEAR\", selected: itemToken.text === \"NEAR\", decimals: 24 },\n  ],\n});\n\n// * REMOVING FTs FROM CHECKOUT FOR NOW *\n// const ftBalancesRes = useCache(\n//   () =>\n//     asyncFetch(\n//       `https://near-mainnet.api.pagoda.co/eapi/v1/accounts/${context.accountId}/balances/FT`,\n//       {\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//           \"x-api-key\": \"dce81322-81b0-491d-8880-9cfef4c2b3c2\",\n//         },\n//       }\n//     )\n//       .then((res) => res.body)\n//       .catch((e) => console.log(\"error fetching ft balances: \", e)),\n//   `ft-balances-${context.accountId}`\n// );\n// console.log(\"ftBalancesRes: \", ftBalancesRes);\n\n// console.log(\"state in CheckoutItem: \", state);\n\n// * REMOVING FTs FROM CHECKOUT FOR NOW *\n// useEffect(() => {\n//   if (context.accountId && !isPotDonation && ftBalancesRes && !state.ftBalances) {\n//     State.update({\n//       ftBalances: ftBalancesRes.balances,\n//       denominationOptions: state.denominationOptions.concat(\n//         ftBalancesRes.balances\n//           .map(({ amount, contract_account_id, metadata }) => ({\n//             amount,\n//             id: contract_account_id,\n//             text: metadata.symbol,\n//             value: metadata.symbol,\n//             icon: metadata.icon,\n//             decimals: metadata.decimals,\n//             selected: false,\n//           }))\n//           .filter((option) => option.text.length < 10)\n//       ),\n//     });\n//   }\n// }, [context.accountId, state.ftBalances, ftBalancesRes, isPotDonation]);\n\nreturn (\n  <ItemContainer>\n    <ItemLeft>\n      <Widget\n        src={\"potlock.near/widget/Inputs.Checkbox\"}\n        props={{\n          id: \"selector-\" + projectId,\n          checked,\n          onClick: handleCheckboxClick,\n        }}\n      />\n    </ItemLeft>\n    <ItemRight>\n      <ImageContainer>\n        <Widget\n          src=\"mob.near/widget/ProfileImage\"\n          props={{\n            accountId: projectId,\n            style: {\n              width: \"40px\",\n              height: \"40px\",\n              border: \"none\",\n              marginRight: \"24px\",\n            },\n            className: \"mb-2\",\n            imageClassName: \"rounded-circle w-100 h-100 d-block\",\n            thumbnail: false,\n          }}\n        />\n      </ImageContainer>\n      <DetailsContainer>\n        <Row>\n          <Title href={props.hrefWithParams(`?tab=project&projectId=${projectId}`)}>\n            {profile.name ?? \"\"}\n          </Title>\n          <Widget\n            src={\"potlock.near/widget/Pots.Tag\"}\n            props={{\n              ...props,\n              backgroundColor: isPotDonation ? \"#FEF6EE\" : \"#F6F5F3\",\n              borderColor: isPotDonation ? \"rgba(219, 82, 27, 0.36)\" : \"#DBDBDB\",\n              textColor: isPotDonation ? \"#EA6A25\" : \"#292929\",\n              text: isPotDonation\n                ? cartItem.potDetail\n                  ? cartItem.potDetail.pot_name\n                  : \"-\"\n                : \"Direct Donation\",\n            }}\n          />\n        </Row>\n        <Description>{profile.description ?? \"\"}</Description>\n        <Widget\n          src={\"potlock.near/widget/Inputs.Text\"}\n          props={{\n            label: \"Amount\",\n            placeholder: \"0\",\n            value: itemAmount,\n            onChange: (amount) => {\n              amount = amount.replace(/[^\\d.]/g, \"\"); // remove all non-numeric characters except for decimal\n              if (amount === \".\") amount = \"0.\";\n              setItemAmount(amount);\n            },\n            onBlur: (e) => {\n              updateItemInCart({\n                ...cartItem,\n                amount: e.target.value,\n              });\n            },\n            inputStyles: {\n              textAlign: \"right\",\n              borderRadius: \"0px 4px 4px 0px\",\n            },\n            preInputChildren: (\n              <Widget\n                src={\"potlock.near/widget/Inputs.Select\"}\n                props={{\n                  noLabel: true,\n                  placeholder: \"\",\n                  options: state.denominationOptions,\n                  value: { text: itemToken.text, value: itemToken.value },\n                  onChange: ({ text, value }) => {\n                    const token = state.denominationOptions.find((option) => option.text === text);\n                    setItemToken(token);\n                    setItemAmount(undefined);\n                    updateCartItem({\n                      ...cartItem,\n                      token: token,\n                      amount: undefined,\n                    });\n                  },\n                  containerStyles: {\n                    width: \"auto\",\n                  },\n                  inputStyles: {\n                    border: \"none\",\n                    borderRight: \"1px #F0F0F0 solid\",\n                    boxShadow: \"none\",\n                    borderRadius: \"4px 0px 0px 4px\",\n                    width: \"auto\",\n                    padding: \"12px 16px\",\n                    boxShadow: \"0px -2px 0px rgba(93, 93, 93, 0.24) inset\",\n                  },\n                  iconLeft:\n                    itemToken.text == \"NEAR\" ? <NearIcon /> : <FtIcon src={itemToken.icon} />,\n                }}\n              />\n            ),\n          }}\n        />\n        <Widget\n          src={\"potlock.near/widget/Cart.BreakdownSummary\"}\n          props={{\n            ...props,\n            ftIcon: itemToken.icon,\n            referrerId,\n            totalAmount: itemAmount,\n            bypassProtocolFee: false, // TODO: allow user to choose\n            containerStyle: { marginTop: \"16px\" },\n          }}\n        />\n      </DetailsContainer>\n    </ItemRight>\n  </ItemContainer>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/potlock.near/widget/Cart.CheckoutItem", "fact_widget_deployments_id": "c922a67ac050fde92fd3a1118987be07", "inserted_timestamp": "2024-03-29T15:31:57.070Z", "modified_timestamp": "2024-03-29T15:31:57.070Z", "__row_index": 1}