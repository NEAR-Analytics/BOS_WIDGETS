{"tx_hash": "Fj4ou2juhxZA61tjjjL5TZP4CQ6fS5EhYUabf8KpZRVA", "action_id_social": "CnSVEXWfCy2Wc4qN4kG9Mz3eSJTBinjdWsDaUuRf5CUA-0-widget", "block_id": 113356625, "block_timestamp": "2024-02-22T13:29:38.259Z", "signer_id": "potlock.near", "widget_name": "Profile.DonationsTable", "source_code": "const { ownerId, projectId, donations, nearToUsd, SUPPORTED_FTS, hrefWithEnv } = props;\n\nconst nearLogo =\n  \"https://ipfs.near.social/ipfs/bafkreicdcpxua47eddhzjplmrs23mdjt63czowfsa2jnw4krkt532pa2ha\";\n\nconst { _address } = VM.require(`${ownerId}/widget/Components.DonorsUtils`);\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  .search-bar > div {\n    background: white;\n  }\n`;\n\nconst Table = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 2rem;\n  background: white;\n  box-shadow: 0px 4px 12px -4px rgba(82, 82, 82, 0.2), 0px 2px 4px -2px rgba(82, 82, 82, 0.3);\n  border: 1px solid rgba(41, 41, 41, 0.5);\n  padding-bottom: 1rem;\n  .transaction {\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    .header {\n      background: #f6f5f3;\n      color: black;\n      font-weight: 600;\n      div {\n        width: 130px;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n      }\n      .address {\n        width: 160px;\n        text-align: center;\n      }\n    }\n\n    > div {\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      gap: 1rem;\n      padding: 1rem;\n      margin: 8px 16px;\n    }\n    @media only screen and (max-width: 992px) {\n      > div {\n        margin: 0;\n      }\n      .header .address {\n        width: 130px;\n      }\n      .header div {\n        font-size: 12px;\n        width: 100px;\n      }\n    }\n    @media only screen and (max-width: 480px) {\n      > div {\n        padding: 1rem 0.5rem;\n        gap: 0.5rem;\n      }\n      .header .address {\n        width: 120px;\n      }\n      .header div {\n        width: 50px;\n        font-size: 10px;\n      }\n    }\n  }\n`;\n\nconst TrRow = styled.div`\n  > div,\n  > span {\n    width: 130px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    color: #292929;\n  }\n\n  .price {\n    display: flex;\n    gap: 1rem;\n    align-items: center;\n    img {\n      width: 1.5rem;\n    }\n  }\n  .address {\n    color: #292929;\n    display: flex;\n    align-items: center;\n    width: 160px;\n    justify-content: flex-start;\n    padding: 10px;\n    border-radius: 2px;\n    transition: all 200ms;\n    .profile-image {\n      margin-right: 1rem;\n      width: 2rem;\n      height: 2rem;\n      margin-left: 0;\n    }\n    :hover {\n      background: #f6f5f3;\n    }\n  }\n  @media only screen and (max-width: 992px) {\n    > div,\n    > span {\n      font-size: 12px;\n      width: 100px;\n    }\n    .price {\n      gap: 0.5rem;\n      img {\n        width: 1rem;\n      }\n    }\n    .address {\n      font-size: 12px;\n      width: 120px;\n      padding: 4px;\n      .profile-image {\n        width: 1.5rem;\n        height: 1.5rem;\n      }\n    }\n  }\n  @media only screen and (max-width: 480px) {\n    > div,\n    > span {\n      font-size: 10px;\n      width: 50px;\n    }\n    .address {\n      font-size: 10px;\n      .profile-image {\n        margin-right: 0.5rem;\n      }\n    }\n  }\n`;\nconst Stats = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  gap: 3rem;\n  padding: 1rem 0;\n  .label {\n    color: #7b7b7b;\n  }\n  .item,\n  .count {\n    display: flex;\n    gap: 8px;\n    align-items: center;\n  }\n  .amount {\n    font-weight: 600;\n  }\n  .count {\n    margin-left: auto;\n  }\n  .count .amount {\n    color: #dd3345;\n  }\n  @media only screen and (max-width: 480px) {\n    font-size: 12px;\n  }\n`;\n\nconst Filter = styled.div`\n  display: flex;\n  position: relative;\n  img {\n    height: 1rem;\n    cursor: pointer;\n  }\n`;\n\nconst Search = styled.div`\n  display: flex;\n  position: relative;\n  border-bottom: 1px solid #dbdbdb;\n  img {\n    position: absolute;\n    left: 1rem;\n    top: 50%;\n    transform: translateY(-50%);\n    pointer-events: none;\n  }\n  input {\n    padding: 1rem 0;\n    padding-left: 3rem;\n    width: 100%;\n    &:focus {\n      border: none;\n      box-shadow: none;\n    }\n  }\n`;\n\nconst APPLICATIONS_FILTERS = projectId\n  ? {\n      ALL: \"All donations\",\n      DIRECT: \"Direct donations\",\n      MATCHED_DONATIONS: \"Matched donations\",\n    }\n  : {\n      ALL: \"All donations\",\n      DIRECT: \"Direct donations\",\n      SPONSORSHIP: \"Sponsorship\",\n    };\n\nconst [page, setPage] = useState(0);\nconst [totalDonations, setTotalDonation] = useState(donations);\nconst [filteredDonations, setFilteredDonations] = useState(donations);\nconst [search, setSearch] = useState(\"\");\nconst [sortVal, setSortVal] = useState(APPLICATIONS_FILTERS.ALL);\nconst perPage = 30; // need to be less than 50\n\nconst total = useMemo(() => {\n  let total = Big(0);\n  donations.forEach((donation) => {\n    total = total.plus(Big(donation.total_amount));\n  });\n  return total;\n}, [donations]);\n\nconst totalDonationAmount = SUPPORTED_FTS[\"NEAR\"].fromIndivisible(total.toString());\n\nconst stats = [{ label: \"Donated\", amount: (totalDonationAmount * nearToUsd).toFixed(2) }];\n\nuseEffect(() => {\n  setTotalDonation(donations);\n  setFilteredDonations(donations);\n}, [donations]);\n\nconst searchDonations = (searchTerm) => {\n  const filteredApplications = totalDonations.filter((item) => {\n    const searchIn = [\n      item.pot_name || \"\",\n      item.recipient_id || \"\",\n      item.donor_id || \"\",\n      item.pot_id || \"\",\n    ];\n    return searchIn.some((item) => item.toLowerCase().includes(searchTerm.toLowerCase()));\n  });\n  return filteredApplications;\n};\n\nconst sortDonations = (sortVal) => {\n  const displayedDonations = searchDonations(search);\n  let filtered;\n  switch (sortVal) {\n    case APPLICATIONS_FILTERS.ALL:\n      return displayedDonations;\n\n    case APPLICATIONS_FILTERS.DIRECT:\n      filtered = displayedDonations.filter((donation) => {\n        return !donation.pot_id;\n      });\n      return filtered;\n\n    case APPLICATIONS_FILTERS.SPONSORSHIP || APPLICATIONS_FILTERS.MATCHED_DONATIONS:\n      filtered = displayedDonations.filter((donation) => {\n        return !!donation.pot_id;\n      });\n      return filtered;\n\n    default:\n      return displayedDonations;\n  }\n};\n\nreturn (\n  <Container>\n    <Stats>\n      {stats.map((stat) => (\n        <div className=\"item\">\n          <div className=\"amount\">${stat.amount}</div>\n          <div className=\"label\">{stat.label}</div>\n        </div>\n      ))}\n      <div className=\"count\">\n        <div className=\"label\">ALL DONATIONS</div>\n        <div className=\"amount\">{donations.length}</div>\n      </div>\n    </Stats>\n    <div className=\"search-bar\">\n      <Widget\n        src={`${ownerId}/widget/Project.SearchBar`}\n        props={{\n          title: sortVal,\n          tab: tab,\n          numItems: donations.length,\n          itemName: \"donation\",\n          sortList: Object.values(APPLICATIONS_FILTERS),\n          setSearchTerm: (value) => {\n            setSearch(value);\n            const filtered = searchDonations(value);\n            setFilteredDonations(filtered);\n          },\n          handleSortChange: (sortVal) => {\n            const filtered = sortDonations(sortVal);\n            setFilteredDonations(filtered);\n            setSortVal(sortVal);\n          },\n        }}\n      />\n    </div>\n    <Table>\n      <div className=\"transaction\">\n        <div className=\"header\">\n          <div className=\"address\">{projectId ? \"Donor\" : \"Project Name\"}</div>\n          <div>Type</div>\n          <div>Amount</div>\n          <div>Extra Fee</div>\n        </div>\n        {!filteredDonations.length && <div>No donations to display</div>}\n        {filteredDonations.map((donation) => {\n          const {\n            recipient_id,\n            donor_id,\n            total_amount,\n            pot_id,\n            base_currency,\n            ft_id,\n            pot_name,\n            referrer_fee,\n            chef_fee,\n            protocol_fee,\n          } = donation;\n\n          const isPot = !!pot_id;\n          const donationAmount =\n            SUPPORTED_FTS[(base_currency || ft_id).toUpperCase()].fromIndivisible(total_amount);\n\n          const recepientUrl = isPot\n            ? `?tab=pot&potId=${pot_id}`\n            : `?tab=project&projectId=${recipient_id}`;\n          const profileUrl = `?tab=profile&accountId=${donor_id}`;\n          const url = projectId ? profileUrl : recepientUrl;\n\n          const projectName = isPot ? pot_name : recipient_id;\n          const name = projectId ? donor_id : projectName;\n\n          const fees = SUPPORTED_FTS[(base_currency || ft_id).toUpperCase()].fromIndivisible(\n            referrer_fee || 0 + chef_fee || 0 + protocol_fee || 0,\n            3\n          );\n          return (\n            <TrRow>\n              <a href={hrefWithEnv(url)} className=\"address\" target=\"_blank\">\n                {isPot ? (\n                  <img\n                    className=\"profile-image\"\n                    src=\"https://ipfs.near.social/ipfs/bafkreib447lbtzgo4mbegsush6ybv5evwreeydgmlg2agn6vxlsf5gpmdq\"\n                    alt=\"pot\"\n                  />\n                ) : (\n                  <Widget\n                    src=\"mob.near/widget/ProfileImage\"\n                    props={{ accountId: name, style: {} }}\n                  />\n                )}\n                {_address(name)}{\" \"}\n              </a>\n              <div>{isPot ? \"Sponsorship\" : \"Direct Donation\"}</div>\n              <div className=\"price\">\n                <img src={nearLogo} alt=\"NEAR\" />\n                {donationAmount}\n              </div>\n              <div className=\"price\">\n                <img src={nearLogo} alt=\"NEAR\" />\n                {fees}\n              </div>\n            </TrRow>\n          );\n        })}\n      </div>\n      <Widget\n        src=\"baam25.near/widget/pagination\"\n        props={{\n          onClick: (page) => {\n            setPage(page);\n            setTotalDonation(donations.slice(page * perPage, (page + 1) * perPage));\n            setFilteredDonations(donations.slice(page * perPage, (page + 1) * perPage));\n          },\n          data: donations,\n          page: page,\n          perPage: perPage,\n          bgColor: \"#7B7B7B\",\n        }}\n      />\n    </Table>\n  </Container>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/potlock.near/widget/Profile.DonationsTable", "fact_widget_deployments_id": "d9c1913b06dc9b79063ba5453f900b6f", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 5}