{"tx_hash": "7sNt4JFDaCifXbbt4BDJsKGpaGWu1hJrbXG12YT841UT", "action_id_social": "HEkFeNcpnUHAdVgQuvZoebNSSuYpE7EgXiuypox8Dw9d-0-widget", "block_id": 114230426, "block_timestamp": "2024-03-06T23:00:42.421Z", "signer_id": "potlock.near", "widget_name": "Project.ModalSuccess", "source_code": "const { onClose } = props;\nconst {\n  ownerId,\n  SUPPORTED_FTS: { NEAR },\n  IPFS_BASE_URL,\n} = VM.require(\"potlock.near/widget/constants\") || {\n  ownerId: \"\",\n  SUPPORTED_FTS: {},\n  IPFS_BASE_URL: \"\",\n};\nconst { yoctosToUsd } = VM.require(\"potlock.near/widget/utils\") || { yoctosToUsd: () => \"\" };\nconst loraCss = fetch(\"https://fonts.googleapis.com/css2?family=Lora&display=swap\").body;\n\nconst HEADER_ICON_URL =\n  IPFS_BASE_URL + \"bafkreiholfe7utobo5y2znjdr6ou26qmlcgf5teoxtyjo2undgfpl5kcwe\";\nconst TWITTER_ICON_URL =\n  IPFS_BASE_URL + \"bafkreibkeyodxxrf76cr5q3in4tsmhuhzmkl5cdr56rfl57x4aji47gsby\";\n\nconst DEFAULT_GATEWAY = \"https://bos.potlock.org/\";\nconst POTLOCK_TWITTER_ACCOUNT_ID = \"PotLock_\";\n\nconst DEFAULT_SHARE_HASHTAGS = [\"BOS\", \"PublicGoods\", \"Donations\"];\n\nconst Column = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: flex-start;\n`;\n\nconst Row = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: flex-start;\n`;\n\nconst ModalMain = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  gap: 24px;\n  padding: 80px 36px;\n`;\n\nconst ModalFooter = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  background: #f6f5f3;\n  gap: 12px;\n  padding: 28px 36px;\n  border-bottom-left-radius: 6px;\n  border-bottom-right-radius: 6px;\n`;\n\nconst HeaderIcon = styled.img`\n  width: 64px;\n  height: 64px;\n`;\n\nconst AmountNear = styled.div`\n  color: #292929;\n  font-size: 32px;\n  font-weight: 600;\n  line-height: 40px;\n  font-family: \"Lora\";\n  ${loraCss}\n`;\n\nconst AmountUsd = styled.div`\n  color: #7b7b7b;\n  font-size: 14px;\n  font-weight: 400;\n  line-height: 24px;\n  word-wrap: break-word;\n`;\n\nconst NearIcon = styled.svg`\n  width: 28px;\n  height: 28px;\n`;\n\nconst H1 = styled.h1`\n  color: #292929;\n  font-size: 24px;\n  font-weight: 600;\n  line-height: 32px;\n  word-wrap: break-word;\n`;\n\nconst TextBold = styled.div`\n  color: #292929;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 24px;\n  word-wrap: break-word;\n`;\n\nconst UserChip = styled.div`\n  display: flex;\n  flex-direction: row;\n  padding: 2px 12px;\n  gap: 4px;\n  border-radius: 32px;\n  background: #ebebeb;\n`;\n\nconst UserChipLink = styled.a`\n  display: flex;\n  flex-direction: row;\n  padding: 2px 12px;\n  gap: 4px;\n  border-radius: 32px;\n  background: #ebebeb;\n\n  &:hover {\n    text-decoration: none;\n  }\n`;\n\nconst ShareText = styled.div`\n  color: #7b7b7b;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 24px;\n  word-wrap: break-word;\n`;\n\nconst SocialIcon = styled.img`\n  width: 24px;\n  height: 24px;\n  cursor: pointer;\n`;\n\nState.init({\n  showBreakdown: false,\n  successfulDonation: null,\n});\n\nif (props.isModalOpen && !state.successfulDonation) {\n  let successfulDonation = props.successfulDonation;\n  let successfulApplication = props.successfulApplication;\n  // if !successfulDonation and !successfulApplication, then we need to fetch the transaction\n  // once fetched, determine whether it was a donation or an application & set on state accordingly\n  if (!successfulDonation && !successfulApplication && props.transactionHashes) {\n    const body = JSON.stringify({\n      jsonrpc: \"2.0\",\n      id: \"dontcare\",\n      method: \"tx\",\n      params: [props.transactionHashes, context.accountId],\n    });\n    const res = fetch(\"https://rpc.mainnet.near.org\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body,\n    });\n    if (res.ok) {\n      const methodName = res.body.result.transaction.actions[0].FunctionCall.method_name;\n      const successVal = res.body.result.status?.SuccessValue;\n      let decoded = JSON.parse(Buffer.from(successVal, \"base64\").toString(\"utf-8\")); // atob not working\n      if (methodName === \"donate\") {\n        // donation\n        successfulDonation = decoded;\n      } else if (methodName === \"apply\") {\n        // application\n        successfulApplication = decoded;\n      }\n    }\n  }\n  // if (successfulDonation) console.log(\"successful donation: \", successfulDonation);\n  if (successfulDonation) {\n    const { donor_id, recipient_id, project_id } = successfulDonation;\n    Near.asyncView(\"social.near\", \"get\", {\n      keys: [`${recipient_id || project_id}/profile/**`],\n    }).then((recipientData) => {\n      Near.asyncView(\"social.near\", \"get\", {\n        keys: [`${donor_id}/profile/**`],\n      }).then((donorData) => {\n        State.update({\n          successfulDonation,\n          recipientProfile: recipientData[recipient_id || project_id]?.profile || {},\n          donorProfile: donorData[donor_id]?.profile || {},\n        });\n      });\n    });\n  } else if (successfulApplication) {\n    State.update({\n      successfulApplication,\n    });\n  }\n}\n\nconst twitterIntent = useMemo(() => {\n  if (!state.recipientProfile) return;\n  const twitterIntentBase = \"https://twitter.com/intent/tweet?text=\";\n  let url =\n    DEFAULT_GATEWAY +\n    `${ownerId}/widget/Index?tab=project&projectId=${state.successfulDonation.recipient_id}&referrerId=${context.accountId}`;\n  let text = `I just donated to ${\n    state.recipientProfile\n      ? state.recipientProfile.linktree?.twitter\n        ? `@${state.recipientProfile.linktree.twitter}`\n        : state.recipientProfile.name\n      : state.successfulDonation.recipient_id\n  } on @${POTLOCK_TWITTER_ACCOUNT_ID}! Support public goods at `;\n  text = encodeURIComponent(text);\n  url = encodeURIComponent(url);\n  return twitterIntentBase + text + `&url=${url}` + `&hashtags=${DEFAULT_SHARE_HASHTAGS.join(\",\")}`;\n}, [state.successfulDonation, state.recipientProfile]);\n\nreturn (\n  <Widget\n    src={`${ownerId}/widget/Components.Modal`}\n    props={{\n      ...props,\n      contentStyle: {\n        padding: \"0px\",\n      },\n      children: state.successfulApplication ? (\n        <>\n          <ModalMain>\n            <H1>Thank you for applying!</H1>\n            <TextBold>Your application status: {state.successfulApplication.status}</TextBold>\n          </ModalMain>\n        </>\n      ) : state.successfulDonation ? (\n        <>\n          <ModalMain>\n            <HeaderIcon src={HEADER_ICON_URL} />\n            <Column>\n              <Row style={{ gap: \"9px\" }}>\n                <AmountNear>\n                  {state.successfulDonation?.total_amount\n                    ? parseFloat(\n                        NEAR.fromIndivisible(state.successfulDonation.total_amount).toString()\n                      )\n                    : \"-\"}\n                </AmountNear>\n                <NearIcon viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <rect width=\"24\" height=\"24\" rx=\"12\" fill=\"#CECECE\" />\n                  <path\n                    d=\"M15.616 6.61333L13.1121 10.3333C12.939 10.5867 13.2719 10.8933 13.5117 10.68L15.9756 8.53333C16.0422 8.48 16.1354 8.52 16.1354 8.61333V15.32C16.1354 15.4133 16.0155 15.4533 15.9623 15.3867L8.50388 6.45333C8.26415 6.16 7.91787 6 7.53163 6H7.26526C6.5727 6 6 6.57333 6 7.28V16.72C6 17.4267 6.5727 18 7.27858 18C7.71809 18 8.13097 17.7733 8.3707 17.3867L10.8746 13.6667C11.0477 13.4133 10.7148 13.1067 10.475 13.32L8.0111 15.4533C7.94451 15.5067 7.85128 15.4667 7.85128 15.3733V8.68C7.85128 8.58667 7.97114 8.54667 8.02442 8.61333L15.4828 17.5467C15.7225 17.84 16.0821 18 16.4551 18H16.7214C17.4273 18 18 17.4267 18 16.72V7.28C18 6.57333 17.4273 6 16.7214 6C16.2686 6 15.8557 6.22667 15.616 6.61333Z\"\n                    fill=\"black\"\n                  />\n                </NearIcon>\n              </Row>\n              <AmountUsd>\n                {(state.successfulDonation?.total_amount\n                  ? yoctosToUsd(state.successfulDonation.total_amount)\n                  : \"$-\") + \" USD\"}\n              </AmountUsd>\n            </Column>\n            <Row style={{ gap: \"8px\" }}>\n              <TextBold>Has been donated to</TextBold>\n              <UserChipLink\n                href={props.hrefWithParams(\n                  `?tab=project&projectId=${\n                    state.successfulDonation.recipient_id || state.successfulDonation.project_id\n                  }`\n                )}\n                target=\"_blank\"\n              >\n                {state.successfulDonation && (\n                  <Widget\n                    src={`${ownerId}/widget/Project.ProfileImage`}\n                    props={{\n                      ...props,\n                      accountId:\n                        state.successfulDonation.recipient_id ||\n                        state.successfulDonation.project_id,\n                      style: {\n                        height: \"17px\",\n                        width: \"17px\",\n                      },\n                    }}\n                  />\n                )}\n                <TextBold>{state.recipientProfile?.name || \"-\"}</TextBold>\n              </UserChipLink>\n            </Row>\n            <Widget\n              src={`${ownerId}/widget/Cart.BreakdownSummary`}\n              props={{\n                ...props,\n                referrerId: state.successfulDonation?.referrer_id,\n                amountNear: NEAR.fromIndivisible(\n                  state.successfulDonation?.total_amount || \"0\"\n                ).toString(),\n                bypassProtocolFee:\n                  !state.successfulDonation?.protocol_fee ||\n                  state.successfulDonation?.protocol_fee === \"0\", // TODO: allow user to choose\n                headerStyle: { justifyContent: \"center\" },\n              }}\n            />\n            <Row style={{ width: \"100%\", justifyContent: \"center\", gap: \"24px\" }}>\n              <Widget\n                src={`${ownerId}/widget/Components.Button`}\n                props={{\n                  type: \"secondary\",\n                  text: \"Do it again!\",\n                  onClick: () => {\n                    onClose();\n                    props.openDonateToProjectModal();\n                  },\n                  style: { width: \"100%\" },\n                }}\n              />\n              <Widget\n                src={`${ownerId}/widget/Components.Button`}\n                props={{\n                  type: \"secondary\",\n                  text: \"Explore projects\",\n                  onClick: () => {\n                    onClose();\n                  },\n                  style: { width: \"100%\" },\n                }}\n              />\n            </Row>\n          </ModalMain>\n          <ModalFooter>\n            <Row style={{ gap: \"6px\", justifyContent: \"center\" }}>\n              <TextBold>From</TextBold>\n              <UserChip>\n                {state.donorProfile && (\n                  <Widget\n                    src={`${ownerId}/widget/Project.ProfileImage`}\n                    props={{\n                      ...props,\n                      accountId: state.successfulDonation?.donor_id,\n                      style: {\n                        height: \"17px\",\n                        width: \"17px\",\n                      },\n                    }}\n                  />\n                )}\n                <TextBold>{state.donorProfile?.name || \"-\"}</TextBold>\n              </UserChip>\n            </Row>\n            <Row style={{ gap: \"8px\", justifyContent: \"center\" }}>\n              <ShareText>Share to</ShareText>\n              <a href={twitterIntent} target=\"_blank\">\n                <SocialIcon src={TWITTER_ICON_URL} />\n              </a>\n            </Row>\n          </ModalFooter>\n        </>\n      ) : (\n        \"\"\n      ),\n    }}\n  />\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/potlock.near/widget/Project.ModalSuccess", "fact_widget_deployments_id": "149d597751ef9f75ad690b14f9c8f2be", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 2}