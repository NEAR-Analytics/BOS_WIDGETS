{"tx_hash": "FTXmdpJBnzsJKCzhWUWL9Ptb7E66zdpV6Jnwrm2LgNQ2", "action_id_social": "7HNR3GA3B59QbBgZgBGzDSruCoeAV6DdTDKYheDVBDMJ-0-widget", "block_id": 113550692, "block_timestamp": "2024-02-25T11:42:20.446Z", "signer_id": "potlock.near", "widget_name": "Pots.Sponsors", "source_code": "// get donations\nconst { potId, potDetail } = props;\n\nconst { ownerId, SUPPORTED_FTS } = VM.require(\"potlock.near/widget/constants\") || {\n  ownerId: \"\",\n  SUPPORTED_FTS: {},\n};\n\nconst { NEAR } = SUPPORTED_FTS;\n\nState.init({\n  donations: null,\n});\n\nif (!state.allDonations) {\n  Near.asyncView(potId, \"get_matching_pool_donations\", {}).then((donations) => {\n    // sort by size)\n    donations.sort(\n      (a, b) =>\n        SUPPORTED_FTS.NEAR.fromIndivisible(b.total_amount) -\n        SUPPORTED_FTS.NEAR.fromIndivisible(a.total_amount)\n    );\n    // add % share of total to each donation\n    const total = SUPPORTED_FTS.NEAR.fromIndivisible(potDetail.matching_pool_balance);\n    donations = donations.map((donation) => {\n      return {\n        ...donation,\n        percentage_share: (SUPPORTED_FTS.NEAR.fromIndivisible(donation.net_amount) / total) * 100,\n      };\n    });\n    State.update({ donations });\n  });\n}\n\nif (!state.donations) return \"Loading...\";\n\nconst columns = [\"Rank\", \"Donor\", \"Amount\", \"Percentage\"];\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 24px;\n  width: 100%;\n  @media screen and (min-width: 375px) and (max-width: 768px) {\n    width: 99%;\n  }\n  @media screen and (max-width: 390px) {\n    width: 98%;\n  }\n`;\n\nconst OuterTextContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 10px;\n`;\n\nconst TableContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  border: 0.5px rgba(41, 41, 41, 0.5) solid;\n  box-shadow: 0px 4px 12px -4px rgba(82, 82, 82, 0.2);\n  border-radius: 2px;\n  width: 100%;\n  margin-top: 35px;\n`;\n\nconst Header = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  background: #f6f5f3;\n  width: 100%;\n`;\n\nconst HeaderItem = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: space-between;\n  justify-content: flex-start;\n  padding: 10px 20px;\n  width: 24%;\n  @media screen and (min-width: 390px) and (max-width: 768px) {\n    padding: 10px 15px;\n  }\n  @media screen and (max-width: 390px) {\n    padding: 10px;\n  }\n`;\n\nconst HeaderItemText = styled.div`\n  color: #292929;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 24px;\n  @media screen and (max-width: 390px) {\n    font-size: 12px;\n  }\n`;\n\nconst Row = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n`;\n\nconst RowItem = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: flex-start;\n  gap: 20px;\n  padding: 20px;\n  width: 24%;\n  @media screen and (min-width: 390px) and (max-width: 768px) {\n    padding: 10px 15px;\n    gap: 10px;\n  }\n  @media screen and (max-width: 390px) {\n    padding: 10px;\n    gap: 0px;\n  }\n`;\n\nconst RowText = styled.div`\n  color: #292929;\n  font-size: 14px;\n  font-weight: 400;\n  line-height: 24px;\n  @media screen and (max-width: 390px) {\n    font-size: 12px;\n  }\n`;\n\nconst { base_currency } = potDetail;\n\nconst maxRowItemLength = 14;\n\nreturn (\n  <>\n    <Widget\n      src={`${ownerId}/widget/Pots.NavOptionsMobile`}\n      props={{\n        ...props,\n      }}\n    />\n    <Container>\n      <Widget\n        src={`${ownerId}/widget/Pots.SponsorsBoard`}\n        props={{\n          donations: state.donations.slice(0, 6),\n          base_currency: base_currency,\n        }}\n      />\n      <TableContainer>\n        <Header>\n          {columns.map((column, index) => (\n            <HeaderItem style={index === 0 ? { width: \"5%\" } : {}}>\n              <HeaderItemText key={index}>{column}</HeaderItemText>\n            </HeaderItem>\n          ))}\n        </Header>\n        {state.donations.length === 0 ? (\n          <Row style={{ padding: \"12px\" }}>No donations to display</Row>\n        ) : (\n          state.donations.map((donation, index) => {\n            const { donor_id, total_amount, donated_at, percentage_share } = donation;\n            const totalDonationAmount =\n              SUPPORTED_FTS[base_currency.toUpperCase()].fromIndivisible(total_amount);\n\n            return (\n              <Row key={index}>\n                <RowItem style={{ width: \"5%\" }}>\n                  <RowText>#{index + 1}</RowText>\n                </RowItem>\n                <RowItem style={{ width: \"22%\" }}>\n                  <Widget\n                    src={`${ownerId}/widget/Project.ProfileImage`}\n                    props={{\n                      ...props,\n                      accountId: donor_id,\n                      style: {\n                        height: \"25px\",\n                        width: \"25px\",\n                      },\n                    }}\n                  />\n                  <RowText>\n                    {donor_id.length > maxRowItemLength\n                      ? donor_id.slice(0, maxRowItemLength) + \"...\"\n                      : donor_id}\n                  </RowText>\n                </RowItem>\n                <RowItem>\n                  <RowText>\n                    {totalDonationAmount} {base_currency.toUpperCase()}\n                  </RowText>\n                </RowItem>\n                <RowItem>\n                  <RowText>{percentage_share.toFixed(0)}%</RowText>\n                </RowItem>\n              </Row>\n            );\n          })\n        )}\n      </TableContainer>\n    </Container>\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/potlock.near/widget/Pots.Sponsors", "fact_widget_deployments_id": "fc6022cb77755f9f377aa3db55115490", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 5}