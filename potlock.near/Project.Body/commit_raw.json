{"tx_hash": "2z5xLBREZDZNFpDfVS62M9E1nqL8STrov1eUfsffeLGU", "action_id_social": "7V8snr4qdRv87eyvcVKt7F5DtFPyFgUyF4dzU4WzTaWA-0-widget", "block_id": 112619174, "block_timestamp": "2024-02-11T15:53:23.898Z", "signer_id": "potlock.near", "widget_name": "Project.Body", "source_code": "const {\n  ownerId,\n  REGISTRY_CONTRACT_ID,\n  userIsRegistryAdmin,\n  SUPPORTED_FTS: { NEAR },\n} = props;\n\nconst IPFS_BASE_URL = \"https://nftstorage.link/ipfs/\";\n\nconst profile = props.profile;\n\nif (!profile) return \"Loading...\";\n\nconst loraCss = fetch(\"https://fonts.cdnfonts.com/css/lora\").body;\n\n// const tags = Object.keys(profile.tags ?? {});\nconst tags = [profile.category.text ?? props.CATEGORY_MAPPINGS[profile.category] ?? \"\"];\n\nconst BodyContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: flex-start;\n  gap: 16px;\n\n  @media screen and (max-width: 768px) {\n    max-width: 90vw;\n  }\n`;\n\nconst NameContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n`;\n\nconst Name = styled.div`\n  font-size: 48px;\n  font-weight: 500;\n  color: #2e2e2e;\n  line-height: 56px;\n  font-family: \"Lora\";\n  ${loraCss}\n\n  @media screen and (max-width: 768px) {\n    font-size: 32px;\n    line-height: 40px;\n  }\n`;\n\nconst AccountInfoContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: flex-start;\n  margin-bottom: 16px;\n`;\n\nconst AccountId = styled.div`\n  color: #7b7b7b;\n  font-size: 16px;\n  font-weight: 400;\n\n  @media screen and (max-width: 768px) {\n    font-size: 14px;\n    line-height: 24px;\n  }\n`;\n\nconst TagsContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: flex-start;\n  gap: 12px;\n`;\n\nconst ShareIconContainer = styled.svg`\n  width: 24px;\n  height: 24px;\n\n  @media screen and (max-width: 768px) {\n    width: 16px;\n    height: 16px;\n  }\n`;\n\nconst Header = styled.div`\n  display: flex;\n  flex-direction: column;\n  // gap: 16px;\n  width: 100%;\n`;\n\nconst ModalTitle = styled.div`\n  color: #525252;\n  font-size: 16px;\n  font-weight: 600;\n  line-height: 20px;\n  word-wrap: break-word;\n  margin-bottom: 8px;\n`;\n\nconst Row = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst [statusReview, setStatusReview] = useState({ modalOpen: false, notes: \"\", newStatus: \"\" });\n\nconst ShareIcon = (\n  <ShareIconContainer>\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"100%\"\n      height=\"100%\"\n      fill=\"currentColor\"\n      viewBox=\"0 0 16 16\"\n      stroke=\"currentColor\"\n      strokeWidth=\"0.363\"\n    >\n      <path d=\"M4.715 6.542 3.343 7.914a3 3 0 1 0 4.243 4.243l1.828-1.829A3 3 0 0 0 8.586 5.5L8 6.086a1.002 1.002 0 0 0-.154.199 2 2 0 0 1 .861 3.337L6.88 11.45a2 2 0 1 1-2.83-2.83l.793-.792a4.018 4.018 0 0 1-.128-1.287z\" />\n      <path d=\"M6.586 4.672A3 3 0 0 0 7.414 9.5l.775-.776a2 2 0 0 1-.896-3.346L9.12 3.55a2 2 0 1 1 2.83 2.83l-.793.792c.112.42.155.855.128 1.287l1.372-1.372a3 3 0 1 0-4.243-4.243L6.586 4.672z\" />\n    </svg>\n  </ShareIconContainer>\n);\n\nconst projectLink = `https://near.social/potlock.near/widget/Index?tab=project&projectId=${\n  props.projectId\n}${context.accountId && `&referrerId=${context.accountId}`}`;\n\nconst Actions = () => (\n  <Widget\n    src={`${ownerId}/widget/Project.Actions`}\n    props={{\n      ...props,\n    }}\n  />\n);\n\nconst policy = Near.view(props.projectId, \"get_policy\", {}); // TODO: CHANGE BACK TO PROPS.PROJECT ID\nconst isDao = !!policy;\n\nconst userHasPermissions = useMemo(() => {\n  if (!policy) return false;\n  // TODO: break this out (NB: duplicated in Project.CreateForm)\n  const userRoles = policy.roles.filter((role) => {\n    if (role.kind === \"Everyone\") return true;\n    return role.kind.Group && role.kind.Group.includes(context.accountId);\n  });\n  const kind = \"call\";\n  const action = \"AddProposal\";\n  // Check if the user is allowed to perform the action\n  const allowed = userRoles.some(({ permissions }) => {\n    return (\n      permissions.includes(`${kind}:${action}`) ||\n      permissions.includes(`${kind}:*`) ||\n      permissions.includes(`*:${action}`) ||\n      permissions.includes(\"*:*\")\n    );\n  });\n  return allowed;\n}, [policy]);\n\nconst isOwner = props.projectId === context.accountId;\nconst isPermissionedMember = isDao && userHasPermissions;\nconst canEdit = isOwner || isPermissionedMember;\n\nconst handleUpdateStatus = () => {\n  Near.call([\n    {\n      contractName: REGISTRY_CONTRACT_ID,\n      methodName: \"admin_set_project_status\",\n      args: {\n        project_id: props.projectId,\n        status: statusReview.newStatus,\n        review_notes: statusReview.notes,\n      },\n      deposit: NEAR.toIndivisible(0.01).toString(),\n    },\n  ]);\n};\n\nconsole.log(\"props.project: \", props.project);\n\nreturn (\n  <BodyContainer>\n    <Header>\n      <NameContainer>\n        <Name>{profile.name}</Name>\n        {canEdit && (\n          <Widget\n            src={`${ownerId}/widget/Components.Button`}\n            props={{\n              type: \"secondary\",\n              text: \"Edit profile\",\n              disabled: false,\n              href: props.hrefWithEnv(`?tab=editproject&projectId=${props.projectId}`),\n            }}\n          />\n        )}\n      </NameContainer>\n      <AccountInfoContainer>\n        <AccountId>@{props.projectId}</AccountId>\n        <Widget\n          src={`${ownerId}/widget/Project.Share`}\n          props={{\n            text: projectLink,\n            // label: \"Share\",\n            clipboardIcon: ShareIcon,\n          }}\n        />\n      </AccountInfoContainer>\n      <Widget\n        src={`${ownerId}/widget/Project.Tags`}\n        props={{\n          ...props,\n          tags,\n        }}\n      />\n    </Header>\n    <Actions />\n    {userIsRegistryAdmin && (\n      <Widget\n        src={`${ownerId}/widget/Inputs.Select`}\n        props={{\n          noLabel: true,\n          options: props.PROJECT_STATUSES.map((status) => ({\n            value: status,\n            text: status,\n          })),\n          value: { text: props.project.status, value: props.project.status },\n          onChange: (status) => {\n            if (status.value != project.status) {\n              setStatusReview({ ...statusReview, newStatus: status.value, modalOpen: true });\n            }\n          },\n          containerStyles: {\n            padding: \"16px 24px\",\n          },\n        }}\n      />\n    )}\n    <Widget\n      src={`${ownerId}/widget/Project.NavOptionsMobile`}\n      props={{\n        ...props,\n      }}\n    />\n    <div style={{ width: \"100%\" }}>\n      <Widget\n        src={props.navOptions.find((option) => option.id == props.nav).source}\n        props={{\n          ...props,\n        }}\n      />\n    </div>\n    <Widget\n      src={`${ownerId}/widget/Components.Modal`}\n      props={{\n        ...props,\n        isModalOpen: statusReview.modalOpen,\n        onClose: () => setStatusReview({ ...statusReview, modalOpen: false }),\n        children: (\n          <>\n            <ModalTitle>Enter Notes for changing status to {statusReview.newStatus}</ModalTitle>\n            <Widget\n              src={`${ownerId}/widget/Inputs.TextArea`}\n              props={{\n                noLabel: true,\n                inputRows: 5,\n                inputStyle: {\n                  background: \"#FAFAFA\",\n                },\n                placeholder: \"Your notes here...\",\n                value: statusReview.notes,\n                onChange: (notes) => setStatusReview({ ...statusReview, notes }),\n                validate: () => {\n                  // none necessary\n                },\n              }}\n            />\n            <Row style={{ justifyContent: \"flex-end\", marginTop: \"12px\" }}>\n              <Widget\n                src={`${ownerId}/widget/Components.Button`}\n                props={{\n                  type: \"primary\",\n                  text: \"Submit\",\n                  onClick: handleUpdateStatus,\n                }}\n              />\n            </Row>\n          </>\n        ),\n      }}\n    />\n  </BodyContainer>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/potlock.near/widget/Project.Body", "fact_widget_deployments_id": "d29528c2cf7a8acc5030d51ebbf255e4", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 7}