{"tx_hash": "GVBwRcvTiRysYhATJXujhuifTexgSaD1Vd6xGZLfZSB9", "action_id_social": "DGCdCcmHpSu5YoVHEFU1qzZep24dyaiSRd9pPtEmPiGL-0-widget", "block_id": 110320383, "block_timestamp": "2024-01-13T17:23:45.019Z", "signer_id": "potlock.near", "widget_name": "Components.ListSection", "source_code": "const { ownerId } = props;\nconst filterList = [\n  \"Newest to Oldest\",\n  \"Oldest to Newest\",\n  \"Most to Least Donations\",\n  \"Least to Most Donations\",\n];\nconst tagsList = [\"DeFi\", \"Open source\", \"Non profit\"];\nconst donationContractId = \"donate.potlock.near\";\n\nconst [totalProjects, setTotalProjects] = useState(props.items);\nconst [displayProject, setDisplayProject] = useState([]);\nconst [lastNumberOfProject, setLastNumberOfProject] = useState(0);\nconst [searchTerm, setSearchTerm] = useState(null);\n\nif (!totalProjects) return \"loading\";\n\nconst loadProjects = () => {\n  setLastNumberOfProject(lastNumberOfProject + 9);\n  setDisplayProject(\n    totalProjects\n      .slice(0, lastNumberOfProject + 9)\n      .map((item) => (\n        <Widget\n          src={\"orasci-contributor.near/widget/Potlock.Components.ProjectCard\"}\n          props={{ ...item, totalAmount: (donations) => totalAmount(donations) }}\n          key={key}\n        />\n      ))\n  );\n};\n\nconst totalAmount = (donations) => {\n  if (!donations) return 0;\n  let totalDonationAmount = new Big(0);\n  for (const donation of donations) {\n    totalDonationAmount = totalDonationAmount.plus(new Big(donation.total_amount));\n  }\n  return props.nearToUsd\n    ? (props.nearToUsd * totalDonationAmount.div(1e24).toNumber()).toFixed(2)\n    : totalDonationAmount.div(1e24).toNumber().toFixed(2);\n};\n\nconst sortHighestToLowest = (projects) => {\n  const sort = (a, b) => {\n    return parseFloat(b.total) - parseFloat(a.total);\n  };\n  const projectLength = projects.length;\n\n  for (let i = 0; i < projectLength - 1; i++) {\n    for (let j = 0; j < projectLength - 1 - i; j++) {\n      if (sort(projects[j], projects[j + 1]) > 0) {\n        const temp = projects[j];\n        projects[j] = projects[j + 1];\n        projects[j + 1] = temp;\n      }\n    }\n  }\n\n  setTotalProjects(projects);\n  setDisplayProject([]);\n  setLastNumberOfProject(0);\n};\n\nconst sortLowestToHighest = (projects) => {\n  const sort = (a, b) => {\n    return parseFloat(b.total) - parseFloat(a.total);\n  };\n  const projectLength = projects.length;\n\n  for (let i = 0; i < projectLength - 1; i++) {\n    for (let j = 0; j < projectLength - 1 - i; j++) {\n      if (sort(projects[j], projects[j + 1]) < 0) {\n        const temp = projects[j];\n        projects[j] = projects[j + 1];\n        projects[j + 1] = temp;\n      }\n    }\n  }\n\n  setTotalProjects(projects);\n  setDisplayProject([]);\n  setLastNumberOfProject(0);\n};\n\nconst sortNewToOld = (projects) => {\n  const projectLength = projects.length;\n\n  for (let i = 0; i < projectLength - 1; i++) {\n    for (let j = 0; j < projectLength - i - 1; j++) {\n      if (projects[j].submitted_ms < projects[j + 1].submitted_ms) {\n        const temp = projects[j];\n        projects[j] = projects[j + 1];\n        projects[j + 1] = temp;\n      }\n    }\n  }\n  setTotalProjects(projects);\n  setDisplayProject([]);\n  setLastNumberOfProject(0);\n};\n\nconst sortOldToNew = (projects) => {\n  const projectLength = projects.length;\n\n  for (let i = 0; i < projectLength - 1; i++) {\n    for (let j = 0; j < projectLength - i - 1; j++) {\n      if (projects[j].submitted_ms > projects[j + 1].submitted_ms) {\n        const temp = projects[j];\n        projects[j] = projects[j + 1];\n        projects[j + 1] = temp;\n      }\n    }\n  }\n  setTotalProjects(projects);\n  setDisplayProject([]);\n  setLastNumberOfProject(0);\n};\n\nuseEffect(() => {\n  const newTotalProjects = [];\n  for (const project of totalProjects) {\n    console.log(Social.getr(`${project.id}/profile`));\n  }\n  const promises = totalProjects.map((project) => {\n    return Near.asyncView(donationContractId, \"get_donations_for_recipient\", {\n      recipient_id: project.id,\n    }).then((res) => {\n      const total = totalAmount(res);\n      newTotalProjects.push({ ...project, total });\n    });\n  });\n  Promise.all(promises).then(() => {\n    setTotalProjects(newTotalProjects);\n  });\n}, []);\n\nconst handleFilterChange = (filterType) => {\n  switch (filterType) {\n    case \"Newest to Oldest\":\n      sortNewToOld(totalProjects);\n      break;\n    case \"Oldest to Newest\":\n      sortOldToNew(totalProjects);\n      break;\n    case \"Most to Least Donations\":\n      sortHighestToLowest(totalProjects);\n      break;\n    case \"Least to Most Donations\":\n      sortLowestToHighest(totalProjects);\n      break;\n  }\n};\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  gap: 48px;\n`;\n\nconst ProjectList = styled.div`\n  display: grid;\n  gap: 31px;\n\n  // For mobile devices (1 column)\n  @media screen and (max-width: 739px) {\n    grid-template-columns: repeat(1, 1fr);\n  }\n\n  // For tablet devices (2 columns)\n  @media screen and (min-width: 740px) and (max-width: 1023px) {\n    grid-template-columns: repeat(2, 1fr);\n  }\n\n  // For desktop devices (3 columns)\n  @media screen and (min-width: 1024px) {\n    grid-template-columns: repeat(3, 1fr);\n  }\n`;\n\nconst Header = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  width: 100%;\n`;\n\nconst Title = styled.div`\n  color: #292929;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: 24px;\n  letter-spacing: 1.12px;\n  text-transform: uppercase;\n`;\n\nconst TagsWrapper = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  gap: 12px;\n  flex-wrap: wrap;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: 24px;\n  color: #292929;\n`;\n\nconst Tag = styled.div`\n  display: flex;\n  padding: 8px;\n  justify-content: center;\n  align-items: center;\n  gap: 8px;\n  border-radius: 4px;\n  background: #fff;\n  box-shadow: 0px -1px 0px 0px #c7c7c7 inset, 0px 0px 0px 0.5px #c7c7c7;\n  border: 1px solid #c7c7c7;\n  &:hover {\n    background: #fef6ee;\n  }\n`;\n\nconst OnBottom = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 20px 0;\n`;\n\nreturn (\n  <Container>\n    <Header>\n      <Title>all projects {totalProjects.length}</Title>\n\n      {/* Search bar */}\n      <Widget\n        src={\"orasci-contributor.near/widget/Potlock.Home.SearchBar\"}\n        props={{\n          projectLength: totalProjects.length,\n          setSearchTerm: (value) => {\n            setSearchTerm(value);\n          },\n          handleFilterChange: (filter) => {\n            handleFilterChange(filter);\n          },\n        }}\n      />\n      <TagsWrapper>\n        Tags:\n        {tagsList.map((tag, key) => (\n          <Tag key={key}>{tag}</Tag>\n        ))}\n      </TagsWrapper>\n    </Header>\n    <InfiniteScroll loadMore={loadProjects} hasMore={lastNumberOfProject < totalProjects.length}>\n      <ProjectList>{displayProject}</ProjectList>\n    </InfiniteScroll>\n    {lastNumberOfProject >= totalProjects.length && <OnBottom>On bottom</OnBottom>}\n  </Container>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/potlock.near/widget/Components.ListSection", "fact_widget_deployments_id": "aec224571aa8a5c4a5b2d686b7e38b37", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 1}