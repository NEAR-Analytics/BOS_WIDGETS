{"tx_hash": "4Z59Msk66hRH8T8NxXvhWxTzJvwHjgeEayubbS2KdMuW", "action_id_social": "AsMtvZG5k39oZ8a5oyutqHzSs1dEDs9MPqE9t6XnZjrq-0-widget", "block_id": 115588449, "block_timestamp": "2024-03-27T15:18:16.507Z", "signer_id": "potlock.near", "widget_name": "Pots.ChallengeModal", "source_code": "const { showChallengePayoutsModal, onCancel, existingChallengeForUser } = props;\nconst { ownerId } = VM.require(\"potlock.near/widget/constants\") || {\n  ownerId: \"\",\n};\nconst ModalHeader = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: flex-start;\n  background: white;\n  padding: 24px 24px 12px 24px;\n  border-top-left-radius: 6px;\n  border-top-right-radius: 6px;\n  font-weight: 500;\n`;\nconst ModalBody = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: flex-start;\n  padding: 24px;\n  border-top: 1px #f0f0f0 solid;\n  background: #fafafa;\n  gap: 8px;\n`;\nconst ModalFooter = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: flex-end;\n  background: #fafafa;\n  padding: 12px 24px 24px 24px;\n  border-bottom-left-radius: 6px;\n  border-bottom-right-radius: 6px;\n  gap: 24px;\n  width: 100%;\n`;\nState.init({\n  challengeReason: \"\",\n  challengeReasonError: \"\",\n});\nuseEffect(() => {\n  if (existingChallengeForUser?.reason) {\n    State.update({\n      challengeReason: existingChallengeForUser?.reason,\n    });\n  }\n}, [existingChallengeForUser]);\nconst { challengeReason, challengeReasonError } = state;\nconst handleCancelChallenge = () => {\n  onCancel();\n  State.update({ challengeReason: \"\", challengeReasonError: \"\" });\n};\nconst handleSubmitChallenge = () => {\n  PotSDK.challengePayouts(potId, challengeReason);\n  onClose();\n};\nconst MAX_CHALLENGE_TEXT_LENGTH = 1000;\nreturn (\n  <Widget\n    src={`${ownerId}/widget/Components.Modal`}\n    props={{\n      isModalOpen: showChallengePayoutsModal,\n      onClose: handleCancelChallenge,\n      contentStyle: {\n        padding: \"0px\",\n      },\n      children: (\n        <>\n          <ModalHeader>Challenge Payouts</ModalHeader>\n          <ModalBody>\n            <div>Explain the reason for your challenge</div>\n            <Widget\n              src={`${ownerId}/widget/Inputs.TextArea`}\n              props={{\n                noLabel: true,\n                inputRows: 5,\n                inputStyle: {\n                  background: \"#FAFAFA\",\n                },\n                placeholder: \"Type the reason for your challenge here\",\n                value: challengeReason,\n                onChange: (challengeReason) =>\n                  State.update({ challengeReason }),\n                validate: () => {\n                  if (challengeReason.length > MAX_CHALLENGE_TEXT_LENGTH) {\n                    State.update({\n                      challengeReasonError: `Challenge reason must be less than ${MAX_CHALLENGE_TEXT_LENGTH} characters`,\n                    });\n                    return;\n                  }\n                  State.update({ challengeReasonError: \"\" });\n                },\n                error: challengeReasonError,\n              }}\n            />\n          </ModalBody>\n          <ModalFooter>\n            <Widget\n              src={`${ownerId}/widget/Components.Button`}\n              props={{\n                type: \"tertiary\",\n                text: \"Cancel\",\n                onClick: handleCancelChallenge,\n              }}\n            />\n            <Widget\n              src={`${ownerId}/widget/Components.Button`}\n              props={{\n                type: \"primary\",\n                text: \"Submit Challenge\",\n                disabled: !challengeReason || !!challengeReasonError,\n                onClick: handleSubmitChallenge,\n              }}\n            />\n          </ModalFooter>\n        </>\n      ),\n    }}\n  />\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/potlock.near/widget/Pots.ChallengeModal", "fact_widget_deployments_id": "0faa34bc18c9e2b065b31846d42606da", "inserted_timestamp": "2024-03-27T16:32:19.732Z", "modified_timestamp": "2024-03-27T16:32:19.732Z", "__row_index": 1}