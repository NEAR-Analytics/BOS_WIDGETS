{"tx_hash": "GiHbunhdy6BQ6SeWg9ckUKUQdK1RPR9aQ5Uqa9yscmrc", "action_id_social": "AVrf2FHuudY8SDk9nZ7xbSG4KkwnLAtLeHHhZUHokuuM-0-widget", "block_id": 114631123, "block_timestamp": "2024-03-13T13:35:20.136Z", "signer_id": "potlock.near", "widget_name": "Project.DonationsInfo", "source_code": "const { accountId, projectId } = props;\n\nconst { ownerId } = VM.require(\"potlock.near/widget/constants\") || {\n  ownerId: \"\",\n};\nconst { nearToUsd, nearToUsdWithFallback } = VM.require(\"potlock.near/widget/utils\") || {\n  nearToUsd: 1,\n  nearToUsdWithFallback: () => \"\",\n};\n\nconst [isModalDonationOpen, setIsModalDonationOpen] = useState(false);\nconst [successfulDonation, setSuccessfulDonation] = useState(false);\n\nlet DonateSDK =\n  VM.require(\"potlock.near/widget/SDK.donate\") ||\n  (() => ({\n    getDonationsForRecipient: () => {},\n  }));\nDonateSDK = DonateSDK({ env: props.env });\n\nlet RegistrySDK =\n  VM.require(\"potlock.near/widget/SDK.registry\") ||\n  (() => ({\n    isProjectApproved: () => {},\n  }));\nRegistrySDK = RegistrySDK({ env: props.env });\n\nconst projectIsApproved = RegistrySDK.isProjectApproved(projectId);\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 24px;\n  gap: 24px;\n  border-radius: 10px;\n  border: 1px solid #f4b37d;\n  border-bottom-width: 3px;\n  background: #fef6ee;\n  margin-left: auto;\n  .donations-info {\n    display: flex;\n    gap: 4px;\n    flex-direction: column;\n    .amount {\n      font-weight: 500;\n      font-size: 2.5rem;\n      line-height: 1;\n      font-family: \"Lora\";\n    }\n    .donors {\n      font-size: 14px;\n      span {\n        font-weight: 600;\n      }\n    }\n  }\n  .btn-wrapper {\n    display: flex;\n    gap: 1.5rem;\n    justify-content: space-between;\n    > div,\n    button {\n      padding: 10px 0;\n      width: 160px;\n      display: flex;\n      flex-wrap: wrap;\n      justify-content: center;\n      align-items: center;\n    }\n  }\n  @media only screen and (max-width: 480px) {\n    width: 100%;\n    .donations-info .amount {\n      font-size: 2rem;\n    }\n    .btn-wrapper {\n      > div,\n      button {\n        width: 100%;\n      }\n    }\n  }\n`;\n\nconst donationsForProject = DonateSDK.getDonationsForRecipient(props.projectId);\n\nconst [totalDonations, totalDonors, totalReferralFees] = useMemo(() => {\n  if (!donationsForProject) {\n    return [\"\", \"\"];\n  }\n  const donors = [];\n  let totalDonationAmount = new Big(0);\n  let totalReferralFees = new Big(0);\n  for (const donation of donationsForProject) {\n    if (!donors.includes(donation.donor_id)) {\n      donors.push(donation.donor_id);\n    }\n    const totalAmount = new Big(donation.total_amount);\n    const referralAmount = new Big(donation.referrer_fee || \"0\");\n    const protocolAmount = new Big(donation.protocol_fee || \"0\");\n    totalDonationAmount = totalDonationAmount.plus(\n      totalAmount.minus(referralAmount).minus(protocolAmount)\n    );\n    totalReferralFees = totalReferralFees.plus(referralAmount);\n  }\n  return [\n    totalDonationAmount.div(1e24).toNumber().toFixed(2),\n    donors.length,\n    totalReferralFees.div(1e24).toNumber().toFixed(2),\n  ];\n}, [donationsForProject]);\n\nreturn (\n  <Container>\n    <div className=\"donations-info\">\n      <div className=\"amount\">{nearToUsdWithFallback(totalDonations)}</div>\n      <div className=\"donors\">\n        Raised from <span> {totalDonors}</span> Donor{totalDonors?.length === 1 ? \"\" : \"s\"}\n      </div>\n    </div>\n    <div className=\"btn-wrapper\">\n      {projectIsApproved && (\n        <Widget\n          src={`${ownerId}/widget/Components.Button`}\n          props={{\n            type: \"primary\",\n            text: \"Donate\",\n            onClick: () => setIsModalDonationOpen(true),\n          }}\n        />\n      )}\n      <Widget src={`${ownerId}/widget/Project.FollowButton`} props={{ accountId: accountId }} />\n    </div>\n\n    <Widget\n      src={`${ownerId}/widget/Project.ModalDonation`}\n      props={{\n        ...props,\n        isModalOpen: isModalDonationOpen,\n        onClose: () => setIsModalDonationOpen(false),\n        recipientId: props.projectId,\n        referrerId: props.referrerId,\n        openDonateToProjectModal: () => setIsModalDonationOpen(true),\n        openDonationModalSuccess: (donation) => {\n          setIsModalDonationOpen(false);\n          State.update({\n            successfulDonation: donation,\n          });\n        },\n        // potId: state.donateToProjectModal.potId, // TODO: add this in if project is in a pot?\n      }}\n    />\n    {successfulDonation && (\n      <Widget\n        src={`${ownerId}/widget/Project.ModalSuccess`}\n        props={{\n          ...props,\n          successfulDonation: state.successfulDonation,\n          isModalOpen: state.successfulDonation != null,\n          onClose: () =>\n            State.update({\n              successfulDonation: null,\n            }),\n        }}\n      />\n    )}\n  </Container>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/potlock.near/widget/Project.DonationsInfo", "fact_widget_deployments_id": "a71589977a5c95a32818cf7a64b98036", "inserted_timestamp": "2024-03-13T15:28:03.303Z", "modified_timestamp": "2024-03-13T15:28:03.303Z", "__row_index": 9}