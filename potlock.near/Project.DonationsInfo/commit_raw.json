{"tx_hash": "6qgGnM2WnkMYxj6se19x3rj3Fg4DRTATtbmutvgasKtG", "action_id_social": "2kdxDYm4DD9R8E9qr3pryj4EPQbCrca89m3xHCKZWipf-0-widget", "block_id": 115596619, "block_timestamp": "2024-03-27T18:11:41.743Z", "signer_id": "potlock.near", "widget_name": "Project.DonationsInfo", "source_code": "const { accountId, projectId, donations } = props;\nconst { ownerId, SUPPORTED_FTS } = VM.require(\n  \"potlock.near/widget/constants\"\n) || {\n  ownerId: \"\",\n  SUPPORTED_FTS: {},\n};\nconst { nearToUsd, nearToUsdWithFallback } = VM.require(\n  \"potlock.near/widget/utils\"\n) || {\n  nearToUsd: 1,\n  nearToUsdWithFallback: () => \"\",\n};\nconst [isModalDonationOpen, setIsModalDonationOpen] = useState(false);\nconst [successfulDonation, setSuccessfulDonation] = useState(false);\nlet DonateSDK =\n  VM.require(\"potlock.near/widget/SDK.donate\") ||\n  (() => ({\n    getDonationsForRecipient: () => {},\n  }));\nDonateSDK = DonateSDK({ env: props.env });\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 24px;\n  gap: 24px;\n  border-radius: 10px;\n  border: 1px solid #f4b37d;\n  border-bottom-width: 3px;\n  background: #fef6ee;\n  margin-left: auto;\n  .donations-info {\n    display: flex;\n    gap: 4px;\n    flex-direction: column;\n    .amount {\n      font-weight: 500;\n      font-size: 2.5rem;\n      line-height: 1;\n      font-family: \"Lora\";\n    }\n    .donors {\n      font-size: 14px;\n      span {\n        font-weight: 600;\n      }\n    }\n  }\n  .btn-wrapper {\n    display: flex;\n    gap: 1.5rem;\n    justify-content: space-between;\n    > div,\n    button {\n      padding: 10px 0;\n      width: 160px;\n      display: flex;\n      flex-wrap: wrap;\n      justify-content: center;\n      align-items: center;\n    }\n  }\n  @media only screen and (max-width: 480px) {\n    width: 100%;\n    .donations-info .amount {\n      font-size: 2rem;\n    }\n    .btn-wrapper {\n      > div,\n      button {\n        width: 100%;\n      }\n    }\n  }\n`;\nconst donationsForProject = DonateSDK.getDonationsForRecipient(props.projectId);\n// Get total donations & Unique donors count\nconst [totalDonationAmountNear, uniqueDonors] = useMemo(() => {\n  let totalNear = Big(0);\n  const uniqueDonors = [\n    ...new Set(donations.map((donation) => donation.donor_id)),\n  ];\n  donations.forEach((donation) => {\n    if (donation.ft_id === \"near\" || donation.base_currency === \"near\") {\n      totalNear = totalNear.plus(Big(donation.total_amount || donation.amount));\n    }\n  });\n  const totalDonationAmountNear = SUPPORTED_FTS[\"NEAR\"].fromIndivisible(\n    totalNear.toString()\n  );\n  return [totalDonationAmountNear, uniqueDonors?.length];\n}, [donations]);\nreturn (\n  <Container>\n    <div className=\"donations-info\">\n      <div className=\"amount\">\n        {nearToUsdWithFallback(totalDonationAmountNear)}\n      </div>\n      <div className=\"donors\">\n        Raised from <span> {uniqueDonors}</span> donor\n        {uniqueDonors === 1 ? \"\" : \"s\"}\n      </div>\n    </div>\n    <div className=\"btn-wrapper\">\n      <Widget\n        src={`${ownerId}/widget/Components.Button`}\n        props={{\n          type: \"primary\",\n          text: \"Donate\",\n          onClick: () => setIsModalDonationOpen(true),\n        }}\n      />\n      <Widget\n        src={`${ownerId}/widget/Project.FollowButton`}\n        props={{ accountId: projectId }}\n      />\n    </div>\n    <Widget\n      src={`${ownerId}/widget/Project.ModalDonation`}\n      props={{\n        ...props,\n        isModalOpen: isModalDonationOpen,\n        onClose: () => setIsModalDonationOpen(false),\n        recipientId: props.projectId,\n        referrerId: props.referrerId,\n        openDonateToProjectModal: () => setIsModalDonationOpen(true),\n        openDonationModalSuccess: (donation) => {\n          setIsModalDonationOpen(false);\n          State.update({\n            successfulDonation: donation,\n          });\n        },\n        // potId: state.donateToProjectModal.potId, // TODO: add this in if project is in a pot?\n      }}\n    />\n    {successfulDonation && (\n      <Widget\n        src={`${ownerId}/widget/Project.ModalSuccess`}\n        props={{\n          ...props,\n          successfulDonation: state.successfulDonation,\n          isModalOpen: state.successfulDonation != null,\n          onClose: () =>\n            State.update({\n              successfulDonation: null,\n            }),\n        }}\n      />\n    )}\n  </Container>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/potlock.near/widget/Project.DonationsInfo", "fact_widget_deployments_id": "9f39582a077a70585881c0d2f3b01abb", "inserted_timestamp": "2024-03-27T19:30:46.766Z", "modified_timestamp": "2024-03-27T19:30:46.766Z", "__row_index": 27}