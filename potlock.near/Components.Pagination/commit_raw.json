{"tx_hash": "E189jqQjq6iZjvvgggPqZP6bxynewR8Rc1tUD8ZYryAs", "action_id_social": "egnpzD2KrN2ch3PQmQQDjqfbhzZEdTfkEnxrTu2fdxc-0-widget", "block_id": 112977555, "block_timestamp": "2024-02-16T22:32:18.382Z", "signer_id": "potlock.near", "widget_name": "Components.Pagination", "source_code": "const perPage = props.perPage || 50;\nconst data = props.data || [];\nconst bgColor = props.bgColor || \"#dd3345\";\nconst customStyle = props.customStyle || {};\nconst page = props.page;\nconst MAX_PAGE_DISPLAY_COUNT = props.maxPageDisplayCount || 5;\n\n// Calculate the total number of pages\nconst totalPages = Math.ceil(data?.length / perPage) - 1;\n// console.log(\"totalPages: \", totalPages);\n\n// Generate an array of page numbers starting from 1\nconst pageNumbers = Array.from({ length: totalPages }, (_, index) => index + 1);\n// console.log(\"pageNumbers: \", pageNumbers);\nlet lastPageNumber = pageNumbers[pageNumbers.length - 1];\n\nconst handlePaginate = (to) => {\n  if (to !== \"...\") {\n    const toPage = parseInt(to);\n    props.setPage(toPage);\n  }\n};\n\nconst Page = ({ children }) => {\n  return (\n    <div\n      onClick={() => handlePaginate(children[0])}\n      className={`${children[0] + \"\" == page + \"\" ? \"active\" : \"\"}`}\n    >\n      {children[0]}\n    </div>\n  );\n};\n\nconst Pagination = styled.div`\n  display: flex;\n  gap: 1rem;\n  justify-content: center;\n  div {\n    border: 1px solid transparent;\n    background: ${bgColor};\n    border-radius: 2px;\n    padding: 10px;\n    font-size: 12px;\n    color: white;\n    cursor: pointer;\n    :hover {\n      opacity: 0.7;\n    }\n    &.active {\n      background: white;\n      color: ${bgColor};\n      border-color: ${bgColor};\n    }\n  }\n`;\n\n// const PaginationNumber = () => {\n//   console.log(\"page: \", page);\n//   if (pageNumbers.length < MAX_PAGE_DISPLAY_COUNT) {\n//     console.log(\"line 61\");\n//     return (\n//       <Pagination>\n//         {pageNumbers?.map((num) => (\n//           <Page>{num}</Page>\n//         ))}\n//       </Pagination>\n//     );\n//   } else if (page === pageNumbers[0]) {\n//     // first page\n//     return (\n//       <Pagination>\n//         {/* <Page>{page}</Page> e.g. 1 2 3 ... 5\n//         <Page>{page + 1}</Page>\n//         <Page>...</Page>\n//         <Page>{lastElement}</Page> */}\n//         {Array(MAX_PAGE_DISPLAY_COUNT)\n//           .fill(\"\")\n//           .map((_, index) => {\n//             if (index + 1 === MAX_PAGE_DISPLAY_COUNT) {\n//               return <Page>{lastPageNumber}</Page>;\n//             } else if (index + 1 === MAX_PAGE_DISPLAY_COUNT - 1) {\n//               return <Page>...</Page>;\n//             } else {\n//               return <Page>{index + 1}</Page>;\n//             }\n//           })}\n//       </Pagination>\n//     );\n//   } else if (page === pageNumbers[1]) {\n//     console.log(\"line 91\");\n//     // second page\n//     return (\n//       <Pagination>\n//         {/* <Page>{page}</Page> e.g. 1 2 3 ... 5\n//         <Page>{page + 1}</Page>\n//         <Page>...</Page>\n//         <Page>{lastElement}</Page> */}\n//         {Array(MAX_PAGE_DISPLAY_COUNT)\n//           .fill(\"\")\n//           .map((_, index) => {\n//             if (index + 1 === MAX_PAGE_DISPLAY_COUNT) {\n//               return <Page>{lastPageNumber}</Page>;\n//             } else if (index + 1 === MAX_PAGE_DISPLAY_COUNT - 1) {\n//               return <Page>...</Page>;\n//             } else {\n//               return <Page>{index + 1}</Page>;\n//             }\n//           })}\n//       </Pagination>\n//     );\n//   } else if (page === lastPageNumber) {\n//     console.log(\"line 90\");\n//     // last page\n//     return (\n//       <Pagination>\n//         {/* <Page>0</Page> e.g. 1 ... 3 4 5\n//         <Page>...</Page>\n//         <Page>{page - 1}</Page>\n//         <Page>{page}</Page> */}\n//         {Array(MAX_PAGE_DISPLAY_COUNT)\n//           .fill(\"\")\n//           .map((_, index) => {\n//             if (index === 0) {\n//               return <Page>{index + 1}</Page>;\n//             } else if (index === 1) {\n//               return <Page>...</Page>;\n//             } else {\n//               return <Page>{page}</Page>;\n//             }\n//           })}\n//       </Pagination>\n//     );\n//   } else if (page + 1 === lastElement) {\n//     console.log(\"line 110\");\n//     // second last page\n//     return (\n//       <Pagination>\n//         {/* <Page>0</Page> e.g. 1 ... 3 4 5\n//         <Page>...</Page>\n//         <Page>{page - 1}</Page>\n//         <Page>{page}</Page>\n//         <Page>{lastElement}</Page> */}\n//         {Array(MAX_PAGE_DISPLAY_COUNT)\n//           .fill(\"\")\n//           .map((_, index) => {\n//             if (index === 0) {\n//               return <Page>{index + 1}</Page>;\n//             } else if (index === 1) {\n//               return <Page>...</Page>;\n//             } else if (index === 2) {\n//               return <Page>{page - 1}</Page>;\n//             } else if (index === 3) {\n//               return <Page>{page}</Page>;\n//             } else {\n//               return <Page>{lastPageNumber}</Page>;\n//             }\n//           })}\n//       </Pagination>\n//     );\n//   } else if (page + 1 < lastPageNumber && page > MAX_PAGE_DISPLAY_COUNT - 2) {\n//     console.log(\"line 135\");\n//     // middle pages\n//     return (\n//       <Pagination>\n//         {/* <Page>0</Page> e.g. on page 5 of 10 this would look like: 1 ... 4 5 6 ... 10\n//         <Page>...</Page>\n//         <Page>{page - 1}</Page>\n//         <Page>{page}</Page>\n//         <Page>{page + 1}</Page>\n//         <Page>...</Page>\n//         <Page>{lastElement}</Page> */}\n//         {Array(MAX_PAGE_DISPLAY_COUNT + 2)\n//           .fill(\"\")\n//           .map((_, index) => {\n//             if (index === 0) {\n//               // page 1\n//               return <Page>{index + 1}</Page>;\n//             } else if ([page - 1, page, page + 1].includes(index + 1)) {\n//               // middle pages\n//               return <Page>{page}</Page>;\n//             } else if (index === MAX_PAGE_DISPLAY_COUNT - 1) {\n//               // last page\n//               return <Page>{lastPageNumber}</Page>;\n//             } else {\n//               // ellipsis\n//               return <Page>...</Page>;\n//             }\n//           })}\n//       </Pagination>\n//     );\n//   }\n//   //   else if (page < lastElement) {\n//   //     return (\n//   //       <Pagination>\n//   //         <Page>0</Page>\n//   //         <Page>{page}</Page>\n//   //         <Page>{page + 1}</Page>\n//   //         <Page>...</Page>\n//   //         <Page>{lastElement}</Page>\n//   //       </Pagination>\n//   //     );\n//   //   }\n// };\n\nconst PaginationNumber = () => {\n  if (pageNumbers.length < 4) {\n    return (\n      <Pagination>\n        {pageNumbers?.map((num) => (\n          <Page>{num}</Page>\n        ))}\n      </Pagination>\n    );\n  } else if (page === 1) {\n    return (\n      <Pagination>\n        <Page>1</Page>\n        <Page>{page + 1}</Page>\n        <Page>...</Page>\n        <Page>{lastPageNumber}</Page>\n      </Pagination>\n    );\n  } else if (page === lastPageNumber) {\n    return (\n      <Pagination>\n        <Page>1</Page>\n        <Page>...</Page>\n        <Page>{page - 1}</Page>\n        <Page>{page}</Page>\n      </Pagination>\n    );\n  } else if (page + 1 === lastPageNumber) {\n    return (\n      <Pagination>\n        <Page>1</Page>\n        <Page>...</Page>\n        <Page>{page - 1}</Page>\n        <Page>{page}</Page>\n        <Page>{lastPageNumber}</Page>\n      </Pagination>\n    );\n  } else if (page + 1 < lastPageNumber && page > 3) {\n    return (\n      <Pagination>\n        <Page>1</Page>\n        <Page>...</Page>\n        <Page>{page - 1}</Page>\n        <Page>{page}</Page>\n        <Page>{page + 1}</Page>\n        <Page>...</Page>\n        <Page>{lastPageNumber}</Page>\n      </Pagination>\n    );\n  } else if (page < lastPageNumber) {\n    return (\n      <Pagination>\n        <Page>1</Page>\n        <Page>{page}</Page>\n        <Page>{page + 1}</Page>\n        <Page>...</Page>\n        <Page>{lastPageNumber}</Page>\n      </Pagination>\n    );\n  }\n};\n\nreturn <PaginationNumber style={customStyle} />;\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/potlock.near/widget/Components.Pagination", "fact_widget_deployments_id": "c54d0c740e7c8d6445ac1344d095c55a", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 2}