{"tx_hash": "BqeM3Ywrc6fsJGRBfTmgj9VLZufr74kUFAWeWG4uzbeu", "action_id_social": "CbcXWw3Bg8VRMuq2gTqPrRBAjKnvCgLnqJrKCkR4mXx5-0-widget", "block_id": 115722656, "block_timestamp": "2024-03-29T14:20:36.213Z", "signer_id": "potlock.near", "widget_name": "Profile.Feed", "source_code": "const { groupId, permissions } = props;\n\nconst post = props.post === undefined ?? true;\nconst hashtags = props.hashtags || [];\n\nconst indexKey = props.indexKey ?? \"main\";\nconst { ownerId } = VM.require(\"potlock.near/widget/constants\") || {\n  ownerId: \"\",\n};\n\nconst index = [\n  {\n    action: \"post\",\n    key: indexKey,\n    options: {\n      limit: 10,\n      order: \"desc\",\n      accountId: props.accounts,\n    },\n    cacheOptions: {\n      ignoreCache: true,\n    },\n  },\n  {\n    action: \"repost\",\n    key: indexKey,\n    options: {\n      limit: 10,\n      order: \"desc\",\n      accountId: props.accounts,\n    },\n    cacheOptions: {\n      ignoreCache: true,\n    },\n  },\n];\n\nconst isPremiumFeed = props.isPremiumFeed;\nconst commentAccounts = props.commentAccounts;\nconst renderedPosts = {};\n\nconst makePostItem = (a) => ({\n  type: \"social\",\n  path: `${a.accountId}/post/main`,\n  blockHeight: a.blockHeight,\n});\n\nconst renderPost = (a) => {\n  if (a.value.type !== \"md\") {\n    return false;\n  }\n  const item = JSON.stringify(makePostItem(a));\n  if (item in renderedPosts) {\n    return false;\n  }\n  renderedPosts[item] = true;\n\n  return (\n    <div key={JSON.stringify(a)}>\n      <Widget\n        loading={<div className=\"w-100\" style={{ height: \"200px\" }} />}\n        src=\"mob.near/widget/MainPage.N.Post\"\n        props={{\n          accountId: a.accountId,\n          blockHeight: a.blockHeight,\n          isPremiumFeed,\n          commentAccounts,\n          indexKey,\n          groupId,\n          permissions,\n        }}\n      />\n    </div>\n  );\n};\n\nconst repostSvg = (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"16\"\n    height=\"16\"\n    fill=\"currentColor\"\n    viewBox=\"0 2 24 24\"\n    stroke=\"currentColor\"\n    strokeWidth=\"1\"\n  >\n    <path\n      fill-rule=\"evenodd\"\n      d=\"M4.854 1.146a.5.5 0 0 0-.708 0l-4 4a.5.5 0 1 0 .708.708L4 2.707V12.5A2.5 2.5 0 0 0 6.5 15h8a.5.5 0 0 0 0-1h-8A1.5 1.5 0 0 1 5 12.5V2.707l3.146 3.147a.5.5 0 1 0 .708-.708l-4-4z\"\n      transform=\"rotate(180, 12, 12), translate(0, 4)\"\n    />\n    <path\n      fill-rule=\"evenodd\"\n      d=\"M4.854 1.146a.5.5 0 0 0-.708 0l-4 4a.5.5 0 1 0 .708.708L4 2.707V12.5A2.5 2.5 0 0 0 6.5 15h8a.5.5 0 0 0 0-1h-8A1.5 1.5 0 0 1 5 12.5V2.707l3.146 3.147a.5.5 0 1 0 .708-.708l-4-4z\"\n      transform=\"translate(0, 4)\"\n    />\n  </svg>\n);\n\nconst extractParentPost = (item) => {\n  if (!item || item.type !== \"social\" || !item.path || !item.blockHeight) {\n    return undefined;\n  }\n  const accountId = item.path.split(\"/\")[0];\n  return `${accountId}/post/main` === item.path\n    ? { accountId, blockHeight: item.blockHeight }\n    : undefined;\n};\n\nconst renderRepost = (a) => {\n  if (a.value.type !== \"repost\") {\n    return false;\n  }\n  const post = extractParentPost(a.value.item);\n  if (!post) {\n    return false;\n  }\n  const item = JSON.stringify(makePostItem(post));\n  if (item in renderedPosts) {\n    return false;\n  }\n  renderedPosts[item] = true;\n\n  return (\n    <div key={JSON.stringify(a)}>\n      <div\n        className=\"text-muted\"\n        style={{\n          fontSize: \"13px\",\n          fontWeight: 700,\n          marginLeft: \"24px\",\n          marginBottom: \"-24px\",\n          paddingTop: \"4px\",\n          position: \"relative\",\n          zIndex: 1,\n        }}\n      >\n        {repostSvg}{\" \"}\n        <span style={{ marginLeft: \"8px\" }}>\n          Reposted by{\" \"}\n          <Widget\n            loading={a.accountId}\n            src=\"mob.near/widget/N.ProfileLine\"\n            props={{\n              accountId: a.accountId,\n              hideImage: true,\n              hideAccountId: true,\n              tooltip: true,\n            }}\n          />\n        </span>\n      </div>\n      <Widget\n        loading={<div className=\"w-100\" style={{ height: \"200px\" }} />}\n        src=\"mob.near/widget/MainPage.N.Post\"\n        props={{\n          accountId: post.accountId,\n          blockHeight: post.blockHeight,\n          reposted: true,\n          isPremiumFeed,\n          commentAccounts,\n          indexKey,\n          groupId,\n          permissions,\n        }}\n      />\n    </div>\n  );\n};\n\nconst renderItem = (item) => {\n  return item.action === \"post\" ? renderPost(item) : renderRepost(item);\n};\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  .post-btn {\n    background: rgb(46, 46, 46);\n    border-radius: 6px;\n    padding: 12px 16px;\n    border: none;\n    color: white;\n  }\n`;\n\nreturn (\n  <Container>\n    {post && <Widget src=\"potlock.near/widget/Profile.Compose\" props={{ initialText }} />}\n\n    <Widget\n      src={`${ownerId}/widget/Profile.MergedIndexFeed`}\n      props={{ ...props, index, renderItem, filter: props.filter, threshold: 800 }}\n    />\n  </Container>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/potlock.near/widget/Profile.Feed", "fact_widget_deployments_id": "bded307f948f2f5f2e576ebf57a6958e", "inserted_timestamp": "2024-03-29T15:31:57.070Z", "modified_timestamp": "2024-03-29T15:31:57.070Z", "__row_index": 10}