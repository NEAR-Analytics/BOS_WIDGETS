{"tx_hash": "9p7vEJ2unVDqixv6oYH9UZAmLi5RadGm7uFQonokEPPw", "action_id_social": "rmzM4taVEogYFTCikybZZLsxseUYfHiPMpUD27yprFQ-0-widget", "block_id": 102617203, "block_timestamp": "2023-10-04T18:48:03.197Z", "signer_id": "potlock.near", "widget_name": "Inputs.AccountId", "source_code": "const ownerId = \"potlock.near\";\nconst label = props.label ?? \"Account ID\";\nconst placeholder = props.placeholder ?? \"Enter your account ID\";\nconst value = props.value ?? \"\";\nconst onChange = props.onChange ?? (() => {});\nconst addInfo = props.addInfo ?? (() => {});\nconst accountIdRegex =\n  /^(([a-z\\d]+[\\-_])*[a-z\\d]+\\.)*([a-z\\d]+[\\-_])*[a-z\\d]+$/;\n\n// const canEdit = (accountId) => {\n//   return Near.asyncView(\n//     \"social.near\",\n//     \"is_write_permission_granted\",\n//     { predecessor_id: context.accountId, key: accountId },\n//     \"final\",\n//     false\n//   );\n// };\n\n// TODO: add some version of this back in\n// const checkIsProject = (accountId) => {\n//   return Near.asyncView(\n//     ownerId,\n//     \"check_is_project\",\n//     { account_id: accountId },\n//     \"final\",\n//     false\n//   );\n// };\n\n// const checkIsTaken = {\n//   project: checkIsProject,\n//   vendor: checkIsVendor,\n//   investor: checkIsInvestor,\n// }[props.type ?? \"project\"];\n\nState.init({\n  valid: true,\n  errorMessage: <></>,\n});\n\nconst validate = async () => {\n  if (typeof value !== \"string\") {\n    State.update({\n      valid: false,\n      errorMessage: \"Account ID must be a text value!\",\n    });\n    addInfo(false);\n    return;\n  }\n\n  if (value.length < 2) {\n    State.update({\n      valid: false,\n      errorMessage: \"Account ID must be at least 2 characters long!\",\n    });\n    addInfo(false);\n    return;\n  }\n\n  if (value.length > 64) {\n    State.update({\n      valid: false,\n      errorMessage: \"Account ID must be at most 64 characters long!\",\n    });\n    addInfo(false);\n    return;\n  }\n\n  if (!accountIdRegex.test(value)) {\n    State.update({\n      valid: false,\n      errorMessage: (\n        <>\n          Account ID must follow the rules specified{\" \"}\n          <a\n            href=\"https://nomicon.io/DataStructures/Account#account-id-rules\"\n            target=\"_blank\"\n          >\n            here\n          </a>\n          !\n        </>\n      ),\n    });\n    addInfo(false);\n    return;\n  }\n\n  // checkIsTaken(value).then((isProject) => {\n  //   if (isProject) {\n  //     State.update({\n  //       valid: false,\n  //       errorMessage: \"This account ID is already taken!\",\n  //     });\n  //     addInfo(false);\n  //     return;\n  //   }\n\n  //   if (!props.addInfo) {\n  //     // if (forbiddenIds.has(value)) {\n  //     //   State.update({\n  //     //     valid: false,\n  //     //     errorMessage: \"This account ID has already been used!\",\n  //     //   });\n  //     //   return;\n  //     // }\n  //     //\n  //     State.update({ valid: true, errorMessage: \"\" });\n  //     addInfo(false);\n  //   }\n\n  //   canEdit(value).then((editPermission) => {\n  //     if (!editPermission) {\n  //       if (value !== context.accountId) {\n  //         State.update({\n  //           valid: false,\n  //           errorMessage: \"You do not have permission to edit this account!\",\n  //         });\n  //       }\n\n  //       State.update({ valid: true, errorMessage: \"\" });\n  //       addInfo(true);\n  //       return;\n  //     }\n\n  //     State.update({ valid: true, errorMessage: \"\" });\n  //     addInfo(false);\n  //   });\n  // });\n};\n\nreturn (\n  <Widget\n    src={`${ownerId}/widget/Inputs.Text`}\n    props={{\n      label,\n      placeholder,\n      value,\n      onChange,\n      validate,\n      error: state.errorMessage,\n    }}\n  />\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/potlock.near/widget/Inputs.AccountId", "fact_widget_deployments_id": "8d5143214ed933d9c26d23b8383f6c7a", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 8}