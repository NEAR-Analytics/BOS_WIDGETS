{"tx_hash": "51h7rzmXaQECfEZwh7pqZMmBABvV52e6q864BKW6PSWW", "action_id_social": "Ghpggm4chPH3jnVP4yJvKkKGnE6DnhQyep3rnXhkGF4P-0-widget", "block_id": 113258596, "block_timestamp": "2024-02-21T02:27:31.189Z", "signer_id": "potlock.near", "widget_name": "Profile.BodyHeader", "source_code": "const { profile, ownerId, accountId, projectId } = props;\n\nconst Header = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 0 50px;\n  width: 100%;\n  gap: 0.5rem;\n  @media screen and (max-width: 768px) {\n    padding: 0 1rem;\n  }\n`;\nconst NameContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n`;\n\nconst Name = styled.div`\n  font-size: 48px;\n  font-weight: 500;\n  color: #2e2e2e;\n  line-height: 56px;\n  font-family: \"Lora\";\n  ${loraCss}\n\n  @media screen and (max-width: 768px) {\n    font-size: 32px;\n    line-height: 40px;\n  }\n`;\n\nconst AccountInfoContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: flex-start;\n  margin-bottom: 16px;\n`;\n\nconst AccountId = styled.div`\n  color: #7b7b7b;\n  font-size: 16px;\n  font-weight: 400;\n\n  @media screen and (max-width: 768px) {\n    font-size: 14px;\n    line-height: 24px;\n  }\n`;\n\nconst ShareIconContainer = styled.img`\n  width: 24px;\n  height: 24px;\n\n  @media screen and (max-width: 768px) {\n    width: 16px;\n    height: 16px;\n  }\n`;\n\nconst ShareIcon = (\n  <ShareIconContainer\n    src=\"https://ipfs.near.social/ipfs/bafkreia3xywhwwxloqjo7622r623u32vmhdxa2at6ecvd2ityga6c2rcgm\"\n    alt=\"share-icon\"\n  />\n);\n\nconst policy = Near.view(props.projectId, \"get_policy\", {});\nconst isDao = !!policy;\n\nconst userHasPermissions = useMemo(() => {\n  if (!policy) return false;\n  // TODO: break this out (NB: duplicated in Project.CreateForm)\n  const userRoles = policy.roles.filter((role) => {\n    if (role.kind === \"Everyone\") return true;\n    return role.kind.Group && role.kind.Group.includes(context.accountId);\n  });\n  const kind = \"call\";\n  const action = \"AddProposal\";\n  // Check if the user is allowed to perform the action\n  const allowed = userRoles.some(({ permissions }) => {\n    return (\n      permissions.includes(`${kind}:${action}`) ||\n      permissions.includes(`${kind}:*`) ||\n      permissions.includes(`*:${action}`) ||\n      permissions.includes(\"*:*\")\n    );\n  });\n  return allowed;\n}, [policy]);\n\nconst isOwner = projectId === context.accountId;\nconst isPermissionedMember = isDao && userHasPermissions;\nconst canEdit = isOwner || isPermissionedMember;\n\nconst projectLink = `https://near.social/potlock.near/widget/Index?tab=project&projectId=${projectId}${\n  context.accountId && `&referrerId=${context.accountId}`\n}`;\nconst profileLink = `https://near.social/potlock.near/widget/Index?tab=profile&accountId=${accountId}`;\n\nreturn (\n  <Header>\n    <NameContainer>\n      <Name>{profile.name}</Name>\n      {canEdit && (\n        <Widget\n          src={`${ownerId}/widget/Components.Button`}\n          props={{\n            type: \"secondary\",\n            text: \"Edit profile\",\n            disabled: false,\n            href: props.hrefWithEnv(`?tab=editproject&projectId=${projectId}`),\n          }}\n        />\n      )}\n    </NameContainer>\n    <AccountInfoContainer>\n      <AccountId>@{projectId || accountId}</AccountId>\n      <Widget\n        src={`${ownerId}/widget/Project.Share`}\n        props={{\n          text: projectId ? projectLink : profileLink,\n          clipboardIcon: ShareIcon,\n        }}\n      />\n    </AccountInfoContainer>\n    <Widget\n      src={`${ownerId}/widget/Profile.Tags`}\n      props={{\n        ...props,\n      }}\n    />\n    <Widget\n      src={`${ownerId}/widget/Project.Actions`}\n      props={{\n        ...props,\n      }}\n    />\n  </Header>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/potlock.near/widget/Profile.BodyHeader", "fact_widget_deployments_id": "bcbb84c8c4ef84904aebe5423a825154", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 1}