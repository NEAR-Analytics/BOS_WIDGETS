{"tx_hash": "6qgGnM2WnkMYxj6se19x3rj3Fg4DRTATtbmutvgasKtG", "action_id_social": "2kdxDYm4DD9R8E9qr3pryj4EPQbCrca89m3xHCKZWipf-0-widget", "block_id": 115596619, "block_timestamp": "2024-03-27T18:11:41.743Z", "signer_id": "potlock.near", "widget_name": "Pots.Card", "source_code": "const { potId } = props;\nconst { ownerId } = VM.require(\"potlock.near/widget/constants\") || {\n  ownerId: \"\",\n};\nconst { daysUntil, yoctosToNear, yoctosToUsd } = VM.require(\n  \"potlock.near/widget/utils\"\n) || {\n  daysUntil: () => \"\",\n  yoctosToNear: () => \"\",\n  yoctosToUsd: () => \"\",\n};\nconst PotSDK = VM.require(\"potlock.near/widget/SDK.pot\") || {\n  getConfig: () => {},\n};\nconst potConfig = PotSDK.getConfig(potId);\nconst MAX_DESCRIPTION_LENGTH = 100;\nconst MAX_TITLE_LENGTH = 36;\nconst Card = styled.a`\n  display: flex;\n  flex-direction: column;\n  min-width: 320px;\n  min-height: 300px;\n  border-radius: 8px;\n  background: white;\n  box-shadow: 0px -2px 0px 0px #464646 inset, 0px 0px 0px 1px #464646;\n  padding-bottom: 5px;\n  height: 100%;\n  &:hover {\n    text-decoration: none;\n    cursor: pointer;\n  }\n`;\nconst CardSection = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: flex-start;\n  gap: 16px;\n  padding: 32px;\n  width: 100%;\n  height: 100%;\n`;\nconst Title = styled.div`\n  color: #292929;\n  font-size: 22px;\n  font-weight: 600;\n  line-height: 28px;\n  word-wrap: break-word;\n  > div {\n    font-weight: inherit;\n    display: flex;\n    align-items: baseline;\n  }\n  .usd-amount {\n    font-size: 14px;\n    font-weight: 400;\n    margin-left: 0.25rem;\n  }\n  .text {\n    font-size: 14px;\n    color: #7b7b7b;\n    margin-left: 0.5rem;\n  }\n`;\nconst Description = styled.div`\n  color: #525252;\n  font-size: 16px;\n  font-weight: 400;\n  line-height: 28px;\n  word-wrap: break-word;\n  a {\n    color: rgb(123, 123, 123);\n  }\n`;\nconst Subtitle = styled.span`\n  color: #7b7b7b;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 20px;\n  word-wrap: break-word;\n`;\nif (!potConfig)\n  return (\n    <Card style={{ justifyContent: \"center\", alignItems: \"center\" }}>\n      {potConfig == null ? (\n        <div class=\"spinner-border text-secondary\" role=\"status\" />\n      ) : (\n        <div>Pot {potId} not found.</div>\n      )}\n    </Card>\n  );\nconst {\n  pot_name,\n  pot_description,\n  base_currency,\n  public_donations_count,\n  matching_pool_balance,\n  application_start_ms,\n  application_end_ms,\n  public_round_start_ms,\n  public_round_end_ms,\n  cooldown_end_ms,\n} = potConfig;\n// const totalAmount =\n//   props.SUPPORTED_FTS[base_currency.toUpperCase()].fromIndivisible(total_public_donations);\nconst description = !pot_description\n  ? \"No description\"\n  : pot_description.length > MAX_DESCRIPTION_LENGTH\n  ? `${pot_description.slice(0, MAX_DESCRIPTION_LENGTH)}...`\n  : pot_description;\nconst title = !pot_name\n  ? \"No title\"\n  : pot_name.length > MAX_TITLE_LENGTH\n  ? `${pot_name.slice(0, MAX_TITLE_LENGTH)}...`\n  : pot_name;\nconst now = Date.now();\nconst applicationNotStarted = now < application_start_ms;\nconst applicationOpen = now >= application_start_ms && now < application_end_ms;\nconst publicRoundNotStarted = now < public_round_start_ms;\nconst publicRoundOpen =\n  now >= public_round_start_ms && now < public_round_end_ms;\nconst publicRoundClosed = now >= public_round_end_ms && now > cooldown_end_ms;\nconst cooldownOpen = now >= public_round_end_ms && now < cooldown_end_ms;\nconst amountNear = yoctosToNear(matching_pool_balance, true);\nconst amountUsd = yoctosToUsd(matching_pool_balance);\nconst tags = [\n  /* Application tag */\n  {\n    backgroundColor: \"#EFFEFA\",\n    borderColor: \"#33DDCB\",\n    textColor: \"#023131\",\n    text: daysUntil(application_end_ms) + \" left to apply\",\n    textStyle: { fontWeight: 500, marginLeft: \"8px\" },\n    preElementsProps: {\n      colorOuter: \"#CAFDF3\",\n      colorInner: \"#33DDCB\",\n      animate: true,\n    },\n    visibility: applicationOpen,\n  },\n  /* Matching round open tag */\n  {\n    backgroundColor: \"#F7FDE8\",\n    borderColor: \"#9ADD33\",\n    textColor: \"#192C07\",\n    text: daysUntil(public_round_end_ms) + \" left to donate\",\n    textStyle: { fontWeight: 500, marginLeft: \"8px\" },\n    preElementsProps: {\n      colorOuter: \"#D7F5A1\",\n      colorInner: \"#9ADD33\",\n      animate: true,\n    },\n    visibility: publicRoundOpen,\n  },\n  /* Matching round cooldown tag */\n  {\n    backgroundColor: \"#F5F3FF\",\n    borderColor: \"#A68AFB\",\n    textColor: \"#2E0F66\",\n    text: \"Challenge period\",\n    textStyle: { fontWeight: 500, marginLeft: \"8px\" },\n    preElementsProps: {\n      colorOuter: \"#EDE9FE\",\n      colorInner: \"#A68AFB\",\n      animate: true,\n    },\n    visibility: cooldownOpen,\n  },\n  /* Matching round closed tag */\n  {\n    backgroundColor: \"#464646\",\n    borderColor: \"#292929\",\n    textColor: \"#FFF\",\n    text: \"Round closed\",\n    preElementsProps: {\n      colorOuter: \"#656565\",\n      colorInner: \"#A6A6A6\",\n      animate: false,\n    },\n    textStyle: { fontWeight: 500, marginLeft: \"8px\" },\n    visibility: publicRoundClosed,\n  },\n];\nconst Tag = (props) => (\n  <Widget\n    src={`${ownerId}/widget/Pots.Tag`}\n    props={{\n      ...props,\n      ...(props.preElementsProps\n        ? {\n            preElements: (\n              <Widget\n                src={`${ownerId}/widget/Components.Indicator`}\n                props={props.preElementsProps}\n              />\n            ),\n          }\n        : {}),\n    }}\n  />\n);\nreturn (\n  <Card href={props.hrefWithParams(`?tab=pot&potId=${potId}`)}>\n    <CardSection>\n      <Title>{title}</Title>\n      <Description>\n        <Markdown text={description} />\n      </Description>\n    </CardSection>\n    <CardSection\n      style={{\n        background: \"#F6F5F3\",\n        borderTop: \"1px #7B7B7B solid\",\n        marginTop: \"auto\",\n        height: \"fit-content\",\n      }}\n    >\n      <Title>\n        <div>\n          {amountNear}\n          {amountUsd && <span className=\"usd-amount\">{amountUsd}</span>}\n          <span className=\"text\">in pot</span>\n        </div>\n      </Title>\n      {tags.map((tag) =>\n        tag.visibility ? <Tag {...tag} key={tag.text} /> : \"\"\n      )}\n    </CardSection>\n  </Card>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/potlock.near/widget/Pots.Card", "fact_widget_deployments_id": "a3b9cf5190aa0cd6b531649ef64fd595", "inserted_timestamp": "2024-03-27T19:30:46.766Z", "modified_timestamp": "2024-03-27T19:30:46.766Z", "__row_index": 19}