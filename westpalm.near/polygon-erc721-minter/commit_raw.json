{"tx_hash": "7jh8CfY8C2ns1E4Lx9TYKhWc2bNf5xCmN1TdF99Q71HN", "action_id_social": "GwaPpkWL3A56jZkQPt3L5wKfb2iFdSj2NjGHLwwwrZ8r-0-widget", "block_id": 86622320, "block_timestamp": "2023-03-05T15:49:20.972Z", "signer_id": "westpalm.near", "widget_name": "polygon-erc721-minter", "source_code": "//WORK IN PROGRESS UNFINISHED\n// const [tokenId, setTokenId] = useState(null);\nconst erc721Abi = fetch(\n  \"https://raw.githubusercontent.com/codingshot/TokenFactory/master/abi/erc721bluntdao.abi.json\"\n);\ninitState({\n  value: 0.01,\n  tokenId: \"\",\n});\nconst setTokenId = (tokenId) => {\n  State.update({ tokenId });\n  getTokenDecimals();\n};\nasync function mintToken() {\n  try {\n    // await provider.send(\"eth_requestAccounts\", []);\n    const signer = provider.getSigner();\n    const contractAddress = \"0x5F976CF990819AB495C999e139d620B4655ae727\"; // replace with the actual contract address\n    const contract = new ethers.Contract(\n      contractAddress,\n      erc721Abi.abi,\n      signer\n    );\n    const result = await contract.mint(signer.getAddress());\n    setTokenId(result.hash);\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nreturn (\n  <div>\n    <button onClick={mintToken}>Mint NFT on Polygon</button>\n    {tokenId && <p>New token ID: {tokenId}</p>}\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/westpalm.near/widget/polygon-erc721-minter", "fact_widget_deployments_id": "cb049a6f9064e3a5ccf7229954cd4610", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}