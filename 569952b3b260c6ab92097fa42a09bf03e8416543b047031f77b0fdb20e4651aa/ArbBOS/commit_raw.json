{"tx_hash": "Dy4EzKDvrJwmXvfhYUGHzDEF71QJkBrKp14HfBtsLBFG", "action_id_social": "4J5ttBdYKEBKWBMLDLMv9QHZPNmubTC9kD5EzrbuMkiS-0-widget", "block_id": 102062180, "block_timestamp": "2023-09-27T09:30:11.448Z", "signer_id": "569952b3b260c6ab92097fa42a09bf03e8416543b047031f77b0fdb20e4651aa", "widget_name": "ArbBOS", "source_code": null, "metadata": null, "branch": {"draft": {"": "const tokens = [\n  {\n    addressL2: \"0x0000000000000000000000000000000000000000\",\n    addressL1: \"0x0000000000000000000000000000000000000000\",\n    decimals: 18,\n    symbol: \"ETH\",\n    name: \"Ether\",\n    description: \"native\",\n    icon: \"https://ipfs.near.social/ipfs/bafkreidgsseicw5dmbvqyot4rf2vp3nr2xetonjl5473j7mdoovagcjtlq\",\n  },\n  {\n    addressL2: \"0x912CE59144191C1204E64559FE8253a0e49E6548\",\n    addressL1: \"0xb50721bcf8d664c30412cfbc6cf7a15145234ad1\",\n    decimals: 18,\n    symbol: \"ARB\",\n    name: \"Arbitrum\",\n    icon: \"https://ipfs.near.social/ipfs/bafkreid7njdklgdliaqs57sth2ixfrxpss6xe5vjprcgcp6rwqcb4zl3me\",\n  },\n  {\n    addressL2: \"0xFF970A61A04b1cA14834A43f5dE4533eBDDB5CC8\",\n    addressL1: \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n    decimals: 6,\n    symbol: \"USDC.e\",\n    name: \"Bridged USDC\",\n    icon: \"https://ipfs.near.social/ipfs/bafkreibap4eeutlrps4izfkm523w4j33ohdeg656ffn3j6oplfhd3ev5te\",\n  },\n  {\n    addressL2: \"0xFd086bC7CD5C481DCC9C85ebE478A1C0b69FCbb9\",\n    addressL1: \"0xdac17f958d2ee523a2206206994597c13d831ec7\",\n    decimals: 6,\n    symbol: \"USDT\",\n    name: \"Tether USD\",\n    icon: \"https://ipfs.near.social/ipfs/bafkreih45jy7ggj45ck34rf736kb67smsoa52wd7e46c2grh6etd3bhe5i\",\n  },\n  {\n    addressL2: \"0x0c880f6761F1af8d9Aa9C466984b80DAb9a8c9e8\",\n    addressL1: \"0x6b175474e89094c44da98b954eedeac495271d0f\",\n    decimals: 18,\n    symbol: \"PENDLE\",\n    name: \"Pendle\",\n    icon: \"https://ipfs.near.social/ipfs/bafkreigmom3zubq5otiuafmhrkg444q4higxd2oaa7ykq4zteyfqah5tz4\",\n  },\n\n  {\n    addressL2: \"0x82aF49447D8a07e3bd95BD0d56f35241523fBab1\",\n    addressL1: \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\",\n    decimals: 18,\n    symbol: \"WETH\",\n    name: \"Wrapped Ether\",\n    icon: \"https://ipfs.near.social/ipfs/bafkreihyzmiuawyekwiyofkzm25xzrrfenhvadi6lb42juvq7tah2u7ha4\",\n  },\n  {\n    addressL2: \"0x2f2a2543B76A4166549F7aaB2e75Bef0aefC5B0f\",\n    addressL1: \"0x2260fac5e5542a773aa44fbcfedf7c193bc2c599\",\n    decimals: 8,\n    symbol: \"WBTC\",\n    name: \"Wrapped BTC\",\n    icon: \"https://ipfs.near.social/ipfs/bafkreigdklwcldjo4w7viyrym54hdb43wgpv23mbicetszygzapttbgo7q\",\n  },\n\n  {\n    addressL2: \"0x13ad51ed4f1b7e9dc168d8a00cb3f4ddd85efa60\",\n    addressL1: \"0x5a98fcbea516cf06857215779fd812ca3bef1b32\",\n    decimals: 18,\n    symbol: \"LDO\",\n    name: \"Lido DAO Token\",\n    icon: \"https://ipfs.near.social/ipfs/bafkreicxqxlsum25dqpcz4ffvwgcyr7dqropovpziyalnlbmf7dvicj5rm\",\n  },\n];\n\nconst ETH = {\n  addressL2: \"0x0000000000000000000000000000000000000000\",\n  addressL1: \"0x0000000000000000000000000000000000000000\",\n  decimals: 18,\n  symbol: \"ETH\",\n  name: \"Ether\",\n  description: \"native\",\n  icon: \"https://storage.googleapis.com/prod-pendle-bucket-a/images/assets/simple/55ac44e4-bb2e-4637-92d8-3031b672670a.svg\",\n};\n\nconst chains = {\n  l2: {\n    id: 42161,\n    name: \"Arbitrum One\",\n  },\n  l1: {\n    id: 1,\n    name: \"Ethereum\",\n  },\n};\n\nState.init({\n  inputToken: ETH,\n  amount: \"\",\n  balance: \"\",\n});\n\nconst config = {\n  tokens: tokens,\n  eth: ETH,\n  chains,\n  bridges: {\n    l1GatewayRouter: \"0x72Ce9c846789fdB6fC1f34aC4AD25Dd9ef7031ef\",\n    l2GatewayRouter: \"0x5288c571Fd7aD117beA99bF60FE0846C4E84F933\",\n    l1ERC20Gateway: \"0xa3A7B6F88361F48403514059F1F16C8E78d60EeC\",\n    l2ERC20Gateway: \"0x09e9222E96E7B4AE2a407B98d48e330053351EEe\",\n    l1CustomGateway: \"0xcEe284F754E854890e311e3280b767F80797180d\",\n    l2CustomGateway: \"0x096760F208390250649E3e8763348E783AEF5562\",\n    l1WethGateway: \"0xd92023E9d9911199a6711321D1277285e6d4e2db\",\n    l2WethGateway: \"0x6c411aD3E74De3E7Bd422b94A27770f5B86C623B\",\n    l2Weth: \"0x82aF49447D8a07e3bd95BD0d56f35241523fBab1\",\n    l1Weth: \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\",\n    l1ProxyAdmin: \"0x9aD46fac0Cf7f790E5be05A0F15223935A0c0aDa\",\n    l2ProxyAdmin: \"0xd570aCE65C43af47101fC6250FD6fC63D1c22a86\",\n    l1MultiCall: \"0x5ba1e12693dc8f9c48aad8770482f4739beed696\",\n    l2Multicall: \"0x842eC2c7D803033Edf55E478F461FC547Bc54EB2\",\n  },\n  ethBridges: {\n    bridge: \"0x8315177aB297bA92A06054cE80a67Ed4DBd7ed3a\",\n    inbox: \"0x4Dbd4fc535Ac27206064B68FfCf827b0A60BAB3f\",\n    sequencerInbox: \"0x1c479675ad559DC151F6Ec7ed3FbF8ceE79582B6\",\n    outbox: \"0x0B9857ae2D4A3DBe74ffE1d7DF045bb7F96E4840\",\n    rollup: \"0x5eF0D09d1E6204141B4d37530808eD19f60FBa35\",\n    arb_sys: \"0x0000000000000000000000000000000000000064\",\n    classicOutboxes: {\n      \"0x667e23ABd27E623c11d4CC00ca3EC4d0bD63337a\": 0,\n      \"0x760723CD2e632826c38Fef8CD438A4CC7E7E1A40\": 30,\n    },\n\n    nodeInterface: \"0x00000000000000000000000000000000000000C8\",\n  },\n};\n\nconst sender = Ethers.send(\"eth_requestAccounts\", [])[0];\n\nif (sender) {\n  Ethers.provider()\n    .getNetwork()\n    .then(({ chainId }) => {\n      State.update({ chainId, sender });\n    })\n    .catch((e) => {\n      console.error(e.message);\n    });\n}\n\nconst NetworkTitle = (\n  <div className=\"flex-row-center-between network-title\">\n    <div\n      className={`network-filed ${\n        state.chainId === chains.l1.id ? \"bold selected\" : \"\"\n      }`}\n      onClick={() => {\n        Ethers.send(\"wallet_switchEthereumChain\", [\n          { chainId: `0x${Number(chains.l1.id).toString(16)}` },\n        ]);\n      }}\n    >\n      <img\n        src=\"https://ipfs.near.social/ipfs/bafkreiepixgqwndkrqhyd5mqsvnqkq6zn2ar4a6ikftiksxnntkjrlajl4\"\n        width=\"32\"\n        style={{\n          border: \"1px solid rgba(0,0,0,0.3)\",\n          borderRadius: \"100%\",\n        }}\n      ></img>\n\n      <div>Ethereum</div>\n    </div>\n\n    <div\n      className={`network-filed ${\n        state.chainId === chains.l2.id ? \"bold selected\" : \"\"\n      }`}\n      onClick={() => {\n        Ethers.send(\"wallet_switchEthereumChain\", [\n          { chainId: `0x${Number(chains.l2.id).toString(16)}` },\n        ]);\n      }}\n    >\n      <img\n        src=\"https://ipfs.near.social/ipfs/bafkreihepr7vxfstwedrlyx54kffqcnzs2mzebcrdtorrcv3tmm4vevacq\"\n        width={\"32\"}\n        style={{\n          border: \"1px solid rgba(0,0,0,0.3)\",\n          borderRadius: \"100%\",\n        }}\n      ></img>\n\n      <div>Arbitrum One</div>\n    </div>\n  </div>\n);\n\nconst Layout = styled.div`\n  margin: auto;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  width: 700px;\n\n  .title {\n    font-weight: 700px;\n    font-size: 24px;\n    padding-bottom: 20px;\n  }\n\n  .bold {\n    font-weight: 600;\n    font-size: 20px;\n  }\n  .network-title {\n    display: flex;\n    align-items: center;\n    gap: 32px;\n    padding-bottom: 40px;\n  }\n\n  .network-filed {\n    display: flex;\n    align-items: center;\n    gap: 12px;\n\n    padding: 6px;\n\n    cursor: pointer;\n\n    :hover {\n      background: rgba(0, 0, 0, 0.1);\n      border-radius: 10px;\n    }\n  }\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  padding: 20px;\n\n  border-radius: 16px;\n\n  border: 1px solid black;\n\n  align-items: center;\n  margin: auto;\n  gap: 12px;\n  width: 700px;\n  color: black;\n\n  .selected {\n    border: 1px solid black;\n    border-radius: 10px;\n    padding: 6px;\n  }\n\n  h5 {\n    opacity: 0.5;\n  }\n\n  .flex-row-center {\n    display: flex;\n    align-items: center;\n  }\n\n  .flex-row-center-between {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  }\n\n  .flex-row-center-center {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n\n  .balance-filed {\n    cursor: pointer;\n    text-decoration: underline;\n  }\n`;\n\nconst InputWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 12px;\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  border-radius: 12px;\n  padding: 8px;\n`;\n\nconst TokenFiled = styled.div`\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  gap: 8px;\n  .icon {\n    width: 24px;\n    height: 24px;\n    border-radius: 100%;\n    border: 1px solid black;\n  }\n`;\n\nconst Seperator = styled.div`\n  width: 100%;\n  border: 1px solid #e0e0e0;\n  opacity: 0.8;\n  margin: 12px 0px;\n`;\n\nconst PannelWrapper = styled.div`\n  display: flex;\n  width: 100%;\n  flex-direction: column;\n\n  gap: 18px;\n`;\n\nif (!state.sender) {\n  return (\n    <Layout>\n      <div className=\"title\">Arbitrum Bridge on BOS</div>\n\n      <Web3Connect className=\"connect-button\" connectLabel=\"Connect Wallet\" />\n    </Layout>\n  );\n}\n\nif (state.chainId !== chains.l1.id && state.chainId !== chains.l2.id) {\n  return (\n    <Layout>\n      <div className=\"title\">Arbitrum Bridge on BOS</div>\n\n      {NetworkTitle}\n    </Layout>\n  );\n}\n\nreturn (\n  <Layout>\n    <div className=\"title\">Arbitrum Bridge on BOS</div>\n    {NetworkTitle}\n\n    <Wrapper>\n      <PannelWrapper>\n        <div className=\"bold\"> Pending Withdraws </div>\n        <Widget\n          src=\"weige.near/widget/PendingList\"\n          props={{\n            config,\n            sender: state.sender,\n            chainId: state.chainId,\n          }}\n        />\n      </PannelWrapper>\n\n      <Seperator />\n\n      <PannelWrapper>\n        <div className=\"bold\"> Transfer Panel </div>\n\n        <InputWrapper>\n          <Input\n            value={state.amount}\n            onChange={(e) => {\n              const targetValue = e.target.value;\n              if (targetValue !== \"\" && !targetValue.match(/^\\d*(\\.\\d*)?$/)) {\n                return;\n              }\n              const amount = targetValue.replace(/^0+/, \"0\"); // remove prefix 0\n              State.update({\n                amount,\n              });\n            }}\n            placeholder=\"bridge amount...\"\n          />\n\n          <TokenFiled\n            onClick={() =>\n              State.update({\n                showList: true,\n              })\n            }\n          >\n            <img src={state.inputToken.icon} className=\"icon\" alt=\"\" />\n\n            <div>{state.inputToken.symbol}</div>\n\n            <div>\u25bd</div>\n          </TokenFiled>\n        </InputWrapper>\n\n        <div className=\"flex-row-center-between\">\n          <span>Balance:</span>\n\n          <span\n            className=\"balance-filed\"\n            onClick={() =>\n              State.update({\n                amount: state.balance,\n              })\n            }\n          >\n            {state.balance}\n          </span>\n        </div>\n      </PannelWrapper>\n\n      {state.showList && (\n        <Widget\n          src=\"weige.near/widget/TokenList\"\n          props={{\n            ...props,\n            ...state,\n            tokens: tokens,\n            config,\n            sender: state.sender,\n            onClose: () => State.update({ showList: false }),\n            onSelectToken: (token) =>\n              State.update({ inputToken: token, showList: false }),\n          }}\n        />\n      )}\n\n      <Widget\n        src=\"weige.near/widget/get-balance\"\n        props={{\n          ...state,\n          config,\n          address:\n            state.chainId === chains.l1.id\n              ? state.inputToken.addressL1\n              : state.inputToken.addressL2,\n          onLoad: ({ balance }) => State.update({ balance }),\n        }}\n      />\n\n      <Widget\n        src=\"weige.near/widget/TransferButton\"\n        props={{\n          ...props,\n          ...state,\n          callback: () => State.update({ reload: !state.reload }),\n          config,\n        }}\n      />\n\n      <Widget\n        src=\"weige.near/widget/get-l1-token-gateway\"\n        props={{\n          inputToken: state.inputToken,\n          config,\n          onLoad: (address) =>\n            State.update({\n              l1TokenGateway: address,\n            }),\n        }}\n      />\n    </Wrapper>\n  </Layout>\n);\n"}}, "widget_modules_used": null, "widget_url": "https://near.social/#/569952b3b260c6ab92097fa42a09bf03e8416543b047031f77b0fdb20e4651aa/widget/ArbBOS", "fact_widget_deployments_id": "52326195edf1ade583b65d05c8c81692", "inserted_timestamp": "2023-09-27T11:30:26.850Z", "modified_timestamp": "2023-09-27T11:30:26.850Z", "__row_index": 0}