{"tx_hash": "yEMkd3gtQH9NAjnca5GA9939kxNciS4Aa7iEyDhWsJu", "action_id_social": "6tQX8fpHCbz4SupiKTTEwgxXkFvSES3wKfyNd2sJH7XU-0-widget", "block_id": 101165992, "block_timestamp": "2023-09-15T07:35:28.029Z", "signer_id": "efiz.near", "widget_name": "Module.Thing", "source_code": "function Thing({ path, blockHeight, options }) {\n  if (!blockHeight) {\n    blockHeight = \"final\";\n  }\n\n  // split the path\n  const parts = path.split(\"/\");\n  const creatorId = parts[0];\n\n  let type;\n  if (parts.length === 1) {\n    // every root of a path is an account\n    type = \"account\";\n  } else {\n    // otherwise the \"standard\" is the type (widget, post, type, thing...)\n    // for thing, we'll extract the actual \"Type\" later\n    type = parts[1];\n  }\n\n  let view = \"THING\";\n\n  const Container = styled.div`\n    border: 1px solid #ccc;\n    height: fit-content;\n  `;\n\n  const Header = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: flex-end;\n    border-bottom: 1px solid #ccc;\n  `;\n\n  const IconBox = styled.div`\n    font-family: \"Times New Roman\";\n    font-size: 2em;\n    line-height: 1.25;\n    font-weight: 400;\n    cursor: pointer;\n  `;\n\n  const Content = styled.div`\n    padding: 1px;\n    min-height: 300px;\n  `;\n\n  const Button = styled.button`\n    text-transform: lowercase !important;\n  `;\n\n  const ButtonRow = styled.div`\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    justify-content: flex-end;\n    gap: 4px;\n  `;\n\n  // PLUGINS\n  // This should move to settings\n  const plugins = {\n    EDIT: {\n      state: {\n        active: {\n          icon: \"bi bi-arrow-counterclockwise\",\n          label: \"Cancel Edit\",\n        },\n        inactive: {\n          icon: \"bi bi-pencil\",\n          label: \"Edit\",\n        },\n      },\n      src: \"efiz.near/widget/every.thing.edit\",\n      creatorRequired: true,\n    },\n    EDITV2: {\n      state: {\n        active: {\n          icon: \"bi bi-arrow-counterclockwise\",\n          label: \"Cancel Edit\",\n        },\n        inactive: {\n          icon: \"bi bi-pencil\",\n          label: \"Edit v2\",\n        },\n      },\n      src: \"efiz.near/widget/every.thing.editor.provider\",\n      creatorRequired: true,\n    },\n    RAW: {\n      state: {\n        active: {\n          icon: \"bi bi-arrow-up-left-circle\",\n          label: \"Show Thing\",\n        },\n        inactive: {\n          icon: \"bi bi-filetype-raw\",\n          label: \"Raw\",\n        },\n      },\n      src: \"efiz.near/widget/every.thing.raw\",\n    },\n    HISTORY: {\n      state: {\n        active: {\n          icon: \"bi bi-clock\",\n          label: \"Hide History\",\n        },\n        inactive: {\n          icon: \"bi bi-clock-history\",\n          label: \"Show History\",\n        },\n      },\n      src: \"efiz.near/widget/Every.Thing.History\",\n    },\n    DUPLICATE: {\n      state: {\n        active: {\n          icon: \"bi bi-arrow-counterclockwise\",\n          label: \"Cancel Duplicate\",\n        },\n        inactive: {\n          icon: \"bi bi-back\",\n          label: \"Duplicate\",\n        },\n      },\n      src: \"efiz.near/widget/every.thing.edit\",\n    },\n    BUILD: {\n      state: {\n        active: {\n          icon: \"bi bi-arrow-counterclockwise\",\n          label: \"Cancel Build\",\n        },\n        inactive: {\n          icon: \"bi bi-hammer\",\n          label: \"Build\",\n        },\n      },\n      src: \"efiz.near/widget/every.thing.build\",\n      creatorRequired: true,\n    },\n    EDGES: {\n      state: {\n        active: {\n          icon: \"bi bi-arrow-counterclockwise\",\n          label: \"Show Thing\",\n        },\n        inactive: {\n          icon: \"bi bi-link\",\n          label: \"Edges\",\n        },\n      },\n      src: \"efiz.near/widget/every.edge\",\n    },\n    CAMERA: {\n      state: {\n        active: {\n          icon: \"bi bi-arrow-counterclockwise\",\n          label: \"Show Thing\",\n        },\n        inactive: {\n          icon: \"bi bi-camera\",\n          label: \"Camera\",\n        },\n      },\n      src: \"efiz.near/widget/Camera\",\n      typeRequired: \"every.near/type/marketplace\",\n    },\n  };\n\n  // DROPDOWN //\n  function Modifier() {\n    const renderIcon = () => {\n      return (\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 24 24\"\n          fill=\"black\"\n          width=\"24px\"\n          height=\"24px\"\n        >\n          <circle cx=\"12\" cy=\"12\" r=\"8\" />\n        </svg>\n      );\n    };\n\n    function createButton(key, data) {\n      const stateVal = state.view === key ? \"active\" : \"inactive\";\n      if (data.creatorRequired && context.accountId !== creatorId) {\n        return <></>;\n      } else {\n        return (\n          <button\n            className={\"btn\"}\n            onClick={() =>\n              State.update({ view: stateVal === \"active\" ? \"THING\" : key })\n            }\n          >\n            <i className={data.state[stateVal].icon}></i>\n            {data.state[stateVal].label}\n          </button>\n        );\n      }\n    }\n\n    function nearPad() {\n      return (\n        <a\n          className={`btn`}\n          href={`https://nearpad.dev/editor/${path}`}\n          target=\"_blank\"\n        >\n          <i className=\" me-1\">\n            <svg\n              focusable=\"false\"\n              aria-hidden=\"true\"\n              viewBox=\"2 2 18 18\"\n              width=\"16px\"\n              height=\"16px\"\n            >\n              <path d=\"M12.16 3h-.32L9.21 8.25h5.58zm4.3 5.25h5.16l-2.07-4.14C19.21 3.43 18.52 3 17.76 3h-3.93l2.63 5.25zm4.92 1.5h-8.63V20.1zM11.25 20.1V9.75H2.62zM7.54 8.25 10.16 3H6.24c-.76 0-1.45.43-1.79 1.11L2.38 8.25h5.16z\"></path>\n            </svg>\n          </i>\n          <span>Open NEARpad</span>\n        </a>\n      );\n    }\n\n    return (\n      <Widget\n        src=\"efiz.near/widget/Common.Dropdown\"\n        props={{\n          renderIcon: renderIcon,\n          elements:\n            type === \"widget\"\n              ? [nearPad()]\n              : Object.keys(plugins)?.map((it) =>\n                  createButton(it, plugins[it])\n                ),\n        }}\n      />\n    );\n  }\n\n  function Thing() {\n    // Renders the path according to type\n    switch (type) {\n      case \"thing\": {\n        // get the thing data\n        const thing = JSON.parse(Social.get(path, blockHeight) || \"null\");\n        type = thing.type || null;\n        // get the type data\n        const typeObj = JSON.parse(Social.get(type, blockHeight) || \"null\");\n        if (typeObj === null) {\n          console.log(\n            `edge case: thing ${path} had an invalid type: ${thingType}`\n          );\n        }\n        // determine the widget to render this thing (is there a default view?)\n        const widgetSrc =\n          options?.templateOverride ||\n          thing.template?.src ||\n          typeObj?.widgets?.view;\n        // Template\n        if (!widgetSrc) {\n          return (\n            <Widget\n              src=\"efiz.near/widget/MonacoEditor\"\n              props={{\n                code: JSON.stringify(thing),\n                path,\n                language: \"javascript\",\n              }}\n            />\n          );\n        }\n        return (\n          <Widget\n            src={widgetSrc}\n            props={{ data: thing.data, path, blockHeight }}\n          />\n        );\n      }\n      case \"post\": {\n        return (\n          <Widget\n            src=\"every.near/widget/every.post.view\"\n            props={{\n              path,\n              blockHeight: a.blockHeight,\n            }}\n          />\n        );\n      }\n      case \"widget\": {\n        return <Widget src={path} props={props} />;\n      }\n      case \"account\": {\n        return (\n          <Widget src=\"efiz.near/widget/Tree\" props={{ rootPath: path }} />\n        );\n      }\n      case \"settings\": {\n        // Standardize path to {accountId}/settings/**\n        parts.splice(2);\n        parts.push(\"**\");\n        path = parts.join(\"/\");\n        return (\n          <Widget\n            src=\"efiz.near/widget/Every.Setting\"\n            props={{ path, blockHeight }}\n          />\n        );\n      }\n      case \"type\": {\n        return (\n          <Widget\n            src=\"every.near/widget/every.type.create\"\n            props={{ typeSrc: path }}\n          />\n        );\n      }\n    }\n    // DEFAULT:\n    return <p>The type: {type} is not yet supported.</p>;\n  }\n\n  function Plugin() {\n    const plugin = plugins[state.view];\n    return (\n      <Container>\n        <Header style={{ justifyContent: \"flex-start\" }}>\n          <Button\n            onClick={() => {\n              State.update({ view: \"THING\" });\n            }}\n          >\n            back\n          </Button>\n        </Header>\n        <Widget src={plugin.src} props={{ path, blockHeight }} />\n      </Container>\n    );\n  }\n\n  return (\n    <Container id={path}>\n      <Header>\n        <ButtonRow>\n          <Modifier />\n        </ButtonRow>\n      </Header>\n      <Content>{state.view === \"THING\" ? <Thing /> : <Plugin />}</Content>\n    </Container>\n  );\n}\n\nreturn { Thing };\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/efiz.near/widget/Module.Thing", "fact_widget_deployments_id": "c7d45c75fa976e7899d78018e83d2757", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}