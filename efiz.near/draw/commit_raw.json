{"tx_hash": "GtyZeog27hV3dfbaRsY7iogbieUua2d2gPYkz4vczuyq", "action_id_social": "3wnkoF7CBBvGWKDXCEqsMeFBCbi9ihADFba2FygtTsTt-0-widget", "block_id": 102023330, "block_timestamp": "2023-09-26T21:14:20.668Z", "signer_id": "efiz.near", "widget_name": "draw", "source_code": "const [storeEvents, setStoreEvents] = useState([]);\nconst [uiEvents, setUiEvents] = useState([]);\nconst [viewMode, setViewMode] = useState(\"ui\");\n\nfunction handleChangeEvent(event) {\n  function logChangeEvent(eventName) {\n    setStoreEvents((events) => [...events, eventName]);\n  }\n\n  // Process added records\n  for (const record of Object.values(event.changes.added)) {\n    logChangeEvent(\n      `Added: ${record.typeName} (ID: ${record.id}, X: ${record.x}, Y: ${record.y})`\n    );\n  }\n\n  // Process updated records\n  for (const [from, to] of Object.values(event.changes.updated)) {\n    logChangeEvent(\n      `Updated: ${from.typeName} (ID: ${from.id}, X: ${from.x} -> ${to.x}, Y: ${from.y} -> ${to.y})`\n    );\n  }\n\n  // Process removed records\n  for (const record of Object.values(event.changes.removed)) {\n    logChangeEvent(\n      `Removed: ${record.typeName} (ID: ${record.id}, X: ${record.x}, Y: ${record.y})`\n    );\n  }\n}\n\nfunction handleUiEvent(name, data) {\n  setUiEvents((events) => [...events, `${name} ${JSON.stringify(data)}`]);\n}\n\nfunction EventLog({ changeEvents, uiEvents }) {\n  let eventsToShow = [];\n  if (viewMode === \"ui\") {\n    eventsToShow = uiEvents;\n  } else if (viewMode === \"change\") {\n    eventsToShow = changeEvents;\n  }\n\n  return (\n    <div>\n      <ul>\n        {eventsToShow.map((eventName, index) => (\n          <li key={index}>{eventName}</li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nreturn (\n  <div style={{ display: \"flex\" }}>\n    <div style={{ width: \"60vw\", height: \"80vh\" }}>\n      <Canvas\n        handleChangeEvent={handleChangeEvent}\n        handleUiEvent={handleUiEvent}\n        persistanceKey={\"hello\"}\n      />\n    </div>\n    <div>\n      <h3>Event Log</h3>\n      <div style={{ padding: \"10px\" }}>\n        <button onClick={() => setViewMode(\"ui\")}>UI Events</button>\n        <button onClick={() => setViewMode(\"change\")}>Change Events</button>\n      </div>\n      <div\n        style={{\n          width: \"40vw\",\n          height: \"80vh\",\n          padding: 8,\n          background: \"#eee\",\n          border: \"none\",\n          fontFamily: \"monospace\",\n          fontSize: 12,\n          borderLeft: \"solid 2px #333\",\n          display: \"flex\",\n          flexDirection: \"column-reverse\",\n          overflow: \"auto\",\n        }}\n      >\n        <EventLog changeEvents={storeEvents} uiEvents={uiEvents} />\n      </div>\n    </div>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/efiz.near/widget/draw", "fact_widget_deployments_id": "6e0dd99035e5955c1a7310d79ff95b35", "inserted_timestamp": "2023-09-26T23:20:08.789Z", "modified_timestamp": "2023-09-26T23:20:08.789Z", "__row_index": 1}