{"tx_hash": "EtfREEms7M5UD8gnc1bbRo79jRcyzTfN2xa8uEdphEVU", "action_id_social": "6DHns1qbf4y8WQSBRLFU5FCF6nfnfkBZSyVNzpGBqncX-0-widget", "block_id": 95233171, "block_timestamp": "2023-06-28T14:30:04.770Z", "signer_id": "efiz.near", "widget_name": "test", "source_code": "function onCapture(src) {\n  State.update({ imgSrc: src });\n}\n\nfunction handleMint() {}\n\nconst YoctoToNear = (amountYocto) =>\n  new Big(amountYocto).div(new Big(10).pow(24)).toString();\n\nconst accountId = props.accountId || context.accountId;\nconst contractId = props.contractId || context.contractId || \"toolipse.near\";\nconst marketId = \"simple.market.mintbase1.near\";\nconst AFFILIATE_ACCOUNT = props.affiliateAccount || \"toolipse.near\";\n\nconst STORAGE_PRICE_PER_BYTE_EXPONENT = 19;\nconst STORAGE_BYTES = {\n  COMMON: 80, // one royalty owner, one split owner, or one approval\n  TOKEN_BASE: 440,\n  MINTING_BASE: 92,\n  MINTING_FEE: 100, // minting fee of 1 milliNEAR expressed as bytes\n};\n\nfunction calculateMintingDeposit({ nTokens, nRoyalties, nSplits, metadata }) {\n  const nSplitsAdj = nSplits < 1 ? 0 : nSplits - 1;\n  const bytesPerToken =\n    STORAGE_BYTES.TOKEN_BASE +\n    nSplitsAdj * STORAGE_BYTES.COMMON +\n    STORAGE_BYTES.COMMON;\n  const metadataBytesEstimate = JSON.stringify(metadata).length;\n\n  const totalBytes =\n    STORAGE_BYTES.MINTING_BASE +\n    STORAGE_BYTES.MINTING_FEE +\n    metadataBytesEstimate +\n    bytesPerToken * nTokens +\n    STORAGE_BYTES.COMMON * nRoyalties;\n\n  return `${Math.ceil(totalBytes)}${\"0\".repeat(\n    STORAGE_PRICE_PER_BYTE_EXPONENT\n  )}`;\n}\n\nconst handleImageUpload = (imgSrc) => {\n  if (imgSrc) {\n    State.update({\n      img: {\n        uploading: true,\n        cid: null,\n      },\n    });\n    const body = imgSrc;\n    asyncFetch(\"https://ipfs.near.social/add\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n      },\n      body,\n    }).then((res) => {\n      const cid = res.body.cid;\n\n      State.update({\n        img: {\n          cid,\n        },\n      });\n\n      handleMint(cid);\n    });\n  } else {\n    State.update({\n      img: null,\n    });\n  }\n};\n\nfunction handleMint(cid) {\n  const nTokens = 1;\n  const nRoyalties = Object.keys({})?.length;\n  const nSplits = 0;\n  const metadata = {\n    reference: \"zEQztMC23HShpHFTXcfnQ3GCqgo3WkbvcOfm2AfYFQg\",\n    media: cid,\n  };\n  const gas = 300000000000000;\n  const deposit = calculateMintingDeposit({\n    nSplits,\n    nTokens,\n    nRoyalties,\n    metadata,\n  });\n\n  Near.call(\n    \"efiz.mintbase1.near\",\n    \"nft_batch_mint\",\n    {\n      owner_id: \"efiz.near\",\n      metadata,\n      num_to_mint: nTokens,\n      royalty_args: null,\n      token_ids_to_mint: null,\n      split_owners: null,\n    },\n    gas,\n    deposit\n  );\n}\n\nconst Button = styled.button`\n`;\n\nreturn (\n  <>\n    {(state.imgSrc && (\n      <div>\n        <h3>Captured Image:</h3>\n        <img src={state.imgSrc} alt=\"Captured\" />\n        <Button onClick={handleImageUpload}>mint</Button>\n      </div>\n    )) || (\n      <Widget\n        src=\"efiz.near/widget/Common.Camera\"\n        props={{ onCapture: onCapture, height: \"800px\" }}\n      />\n    )}\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/efiz.near/widget/test", "fact_widget_deployments_id": "dd4e11a347c51d39fcd203a379e05dff", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 63}