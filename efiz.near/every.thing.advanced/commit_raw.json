{"tx_hash": "U5CejQjotxgmiHH8Ny3hsroD2AL5p5FisiRborsps8r", "action_id_social": "2M1vYqUcQyKyx2v1rCVPenwZ9cJKrLVp4zpZaVAJhwjX-0-widget", "block_id": 97507340, "block_timestamp": "2023-07-28T05:26:51.728Z", "signer_id": "efiz.near", "widget_name": "every.thing.advanced", "source_code": "const typeName = props.typeName || \"thing\";\nconst metadataTemplate = props.metadataTemplate || \"efiz.near/widget/docs.card\";\n\nState.init({\n  accountId: props.accountId || null,\n  tag: props.tag || null,\n  selectedElements: [],\n  isExpanded: false,\n  selectedOption: \"all\",\n});\n\nconst ArrowIcon = styled.span`\n  display: inline-block;\n  width: 0;\n  height: 0;\n  border-left: 6px solid transparent;\n  border-right: 6px solid transparent;\n  border-top: 6px solid ${(props) => (props.isExpanded ? \"#fff\" : \"#000\")};\n  margin-right: 5px;\n  transition: transform 0.3s;\n  transform: rotate(${(props) => (props.isExpanded ? \"180deg\" : \"0\")});\n`;\n\nconst Line = styled.div`\n  width: 100%;\n  height: 1px;\n  background-color: ${(props) => (props.isExpanded ? \"#fff\" : \"#000\")};\n  margin-top: 10px;\n  transition: background-color 0.3s;\n`;\n\nconst AdvancedContainer = styled.div`\n  margin: 20px 0;\n`;\n\nconst AdvancedButton = styled.button`\n  width: 100%;\n  padding: 10px;\n  border: none;\n  background-color: ${(props) => (props.isExpanded ? \"#007bff\" : \"#28a745\")};\n  color: #fff;\n  font-size: 16px;\n  text-align: left;\n  cursor: pointer;\n`;\n\nconst FiltersContainer = styled.div`\n  margin-top: 10px;\n  display: ${(props) => (props.isExpanded ? \"block\" : \"none\")};\n`;\n\nconst RadioButton = styled.div`\n  margin-top: 10px;\n`;\n\nconst handleToggle = () => {\n  State.update({ isExpanded: !state.isExpanded });\n};\n\nconst handleRadioChange = (event) => {\n  State.update({ selectedOption: event.target.value });\n};\n\nfunction handleFilter({ accountId, tag }) {\n  if (accountId) {\n    State.update({ accountId });\n  }\n  if (tag) {\n    State.update({ tag });\n  }\n}\n\nfunction Advanced() {\n  return (\n    <AdvancedContainer>\n      <AdvancedButton onClick={handleToggle} isExpanded={state.isExpanded}>\n        <ArrowIcon onClick={handleToggle} isExpanded={state.isExpanded} />\n        {isExpanded ? \"Hide Advanced\" : \"Show Advanced\"}\n      </AdvancedButton>\n      <FiltersContainer isExpanded={state.isExpanded}>\n        <Widget\n          src=\"efiz.near/widget/every.thing.filters\"\n          props={{ handleFilter }}\n        />\n        <RadioButton>\n          <div className=\"form-check\">\n            <input\n              className=\"form-check-input\"\n              type=\"radio\"\n              name=\"filterOption\"\n              id=\"allOption\"\n              value=\"all\"\n              checked={state.selectedOption === \"all\"}\n              onChange={handleRadioChange}\n            />\n\n            <label htmlFor=\"allOption\">All</label>\n          </div>\n        </RadioButton>\n        <RadioButton>\n          <div className=\"form-check\">\n            <input\n              className=\"form-check-input\"\n              type=\"radio\"\n              name=\"filterOption\"\n              id=\"taggedByCreatorOption\"\n              value=\"taggedByCreator\"\n              checked={state.selectedOption === \"taggedByCreator\"}\n              onChange={handleRadioChange}\n            />\n\n            <label htmlFor=\"taggedByCreatorOption\">Tagged by Creator</label>\n          </div>\n        </RadioButton>\n        <RadioButton>\n          <div className=\"form-check\">\n            <input\n              className=\"form-check-input\"\n              type=\"radio\"\n              name=\"filterOption\"\n              id=\"taggedByCommunityOption\"\n              value=\"taggedByCommunity\"\n              checked={state.selectedOption === \"taggedByCommunity\"}\n              onChange={handleRadioChange}\n            />\n\n            <label htmlFor=\"taggedByCommunityOption\">Tagged by Community</label>\n          </div>\n        </RadioButton>\n        <RadioButton>\n          <div className=\"form-check\">\n            <input\n              className=\"form-check-input\"\n              type=\"radio\"\n              name=\"filterOption\"\n              id=\"curatedByCategoryOption\"\n              value=\"curatedByCategory\"\n              checked={state.selectedOption === \"curatedByCategory\"}\n              onChange={handleRadioChange}\n            />\n\n            <label htmlFor=\"curatedByCategoryOption\">Curated by Category</label>\n          </div>\n        </RadioButton>\n      </FiltersContainer>\n    </AdvancedContainer>\n  );\n}\n\nconst data = {};\n\nswitch (state.selectedOption) {\n  case \"all\": {\n    const pattern = `${state.accountId ?? \"*\"}/${typeName}/*`;\n    data = Social.keys(pattern, \"final\", {\n      return_type: \"BlockHeight\",\n      limit: 1,\n    });\n    break;\n  }\n  case \"taggedByCreator\": {\n    const pattern = `${state.accountId ?? \"*\"}/${typeName}/*/metadata/tags/${\n      state.tag ?? \"*\"\n    }`;\n    const keys = Social.keys(pattern, \"final\");\n\n    if (keys) {\n      keys = Object.entries(keys).flatMap(([key, value]) =>\n        Object.keys(value[typeName]).map((w) => `${key}/${typeName}/${w}`)\n      );\n      data = Social.keys(keys, \"final\", {\n        return_type: \"BlockHeight\",\n        limit: 1,\n      });\n    }\n    break;\n  }\n  case \"taggedByCommunity\": {\n    const pattern = `*/every/${typeName}/${state.accountId ?? \"*\"}/*/tags/${\n      state.tag ?? \"*\"\n    }`;\n    const keys = Social.keys(pattern, \"final\");\n\n    if (keys) {\n      keys = Object.entries(keys).flatMap(([key, value]) =>\n        Object.entries(value.every[typeName]).flatMap(([w, it]) =>\n          Object.keys(it).map((itKey) => `${w}/${typeName}/${itKey}`)\n        )\n      );\n      data = Social.keys(keys, \"final\", {\n        return_type: \"BlockHeight\",\n        limit: 1,\n      });\n    }\n    break;\n  }\n  case \"curatedByCategory\": {\n    const category = \"test\";\n    const pattern = `*/test/thing/*/categories/${category}`;\n    const keys = Social.get(pattern, \"final\");\n    if (keys) {\n      keys = Object.entries(keys).flatMap(([k, v]) => {\n        return Object.entries(v.test[typeName]).flatMap(([ka, kn]) =>\n          Object.entries(kn.categories).flatMap(([key, value]) => value)\n        );\n      });\n      data = Social.keys(keys, \"final\", {\n        return_type: \"BlockHeight\",\n        limit: 1,\n      });\n    }\n    break;\n  }\n}\n\nconst processData = (data) => {\n  const accounts = Object.entries(data);\n\n  const allItems = accounts\n    .map((account) => {\n      const accountId = account[0];\n      return Object.entries(account[1][typeName]).map((kv) => ({\n        accountId,\n        typeName: kv[0],\n        blockHeight: kv[1],\n      }));\n    })\n    .flat();\n\n  allItems.sort((a, b) => b.blockHeight - a.blockHeight);\n  return allItems;\n};\n\nconst handleSelect = (id) => {\n  if (state.selectedElements.includes(id)) {\n    State.update({\n      selectedElements: state.selectedElements.filter(\n        (elementId) => elementId !== id\n      ),\n    });\n  } else {\n    State.update({\n      selectedElements: [...state.selectedElements, id],\n    });\n  }\n};\n\nconst renderItem = (a) => {\n  const path = `${a.accountId}/${typeName}/${a.typeName}`;\n  return (\n    <div className=\"m-1\" key={JSON.stringify(a)} style={{ minHeight: \"10em\" }}>\n      <div className=\"form-check\">\n        <input\n          type=\"checkbox\"\n          checked={state.selectedElements.includes(path)}\n          onChange={() => handleSelect(path)}\n          className=\"form-check-input\"\n        />\n      </div>\n      <Widget\n        src={metadataTemplate}\n        props={{\n          path,\n        }}\n      />\n    </div>\n  );\n};\n\nif (data && JSON.stringify(data) !== JSON.stringify(state.data || {})) {\n  State.update({\n    data,\n    allItems: processData(data),\n  });\n}\n\nreturn (\n  <div>\n    <Advanced />\n    <div className=\"px-2 mx-auto\">\n      <button onClick={() => Social.set(state.selectedElements)}>save</button>\n      <Widget\n        src=\"efiz.near/widget/ItemFeed\"\n        props={{ items: state.allItems || [], renderItem }}\n      />\n    </div>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/efiz.near/widget/every.thing.advanced", "fact_widget_deployments_id": "a9873dc7941f857f400f60b4b99dcd80", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}