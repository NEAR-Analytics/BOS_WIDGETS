{"tx_hash": "wmXdxKg17ywdWBTLgEraSGpt3xrJJF7YZSH9Z3FD8Ep", "action_id_social": "GBGeW1XJTZ5tVLKuCWhW91oEF2q1pDWvpvd8dmT7CWBi-0-widget", "block_id": 98528310, "block_timestamp": "2023-08-11T00:43:40.036Z", "signer_id": "efiz.near", "widget_name": "docs.card", "source_code": "const path = props.path ?? \"mob.near/widget/WidgetSource\";\nconst [accountId, type, thingName] = path.split(\"/\");\nconst blockHeight = props.blockHeight;\nconst metadata = props.metadata ?? Social.getr(`${path}/metadata`);\nconst tags = Object.keys(metadata.tags ?? {});\n\nconst name = metadata.name;\nconst image = metadata.image;\nconst description = metadata.description;\nconst handleProposal = () => {};\nconst handleCreate = () => {};\n\nState.init({\n  tag: \"\",\n});\n\nfunction setTag() {\n  const data = {};\n  const tag = state.tag.toLowerCase();\n  if (context.accountId === accountId) {\n    data = {\n      [type]: {\n        [thingName]: {\n          // name\n          metadata: {\n            tags: {\n              [tag]: \"\",\n            },\n          },\n        },\n      },\n    };\n  } else {\n    data = {\n      every: {\n        [type]: {\n          [accountId]: {\n            [thingName]: {\n              metadata: {\n                tags: {\n                  [tag]: \"\",\n                },\n              },\n            },\n          },\n        },\n      },\n    };\n  }\n  Social.set(data);\n}\n\nconst tagsPattern = `*/every/${type}/${accountId}/${thingName}/tags/*`;\nconst tagsObject = Social.keys(tagsPattern, \"final\");\n\nif (tagsObject === null) {\n  return \"Loading\";\n}\n\nconst tagsCount = {};\nconst tagsAuthors = {};\n\nconst processTagsObject = (obj) => {\n  Object.entries(obj).forEach((kv) => {\n    if (kv[1] === null) {\n      const tag = kv[0];\n\n      tagsCount[tag] = (tagsCount[tag] || 0) - 1;\n    } else if (typeof kv[1] === \"object\") {\n      processTagsObject(kv[1]);\n    } else {\n      const tag = kv[0];\n      tagsCount[tag] = (tagsCount[tag] || 0) + 1;\n    }\n  });\n};\n\nconst getTags = () => {\n  processTagsObject(tagsObject);\n  const tags = Object.entries(tagsCount);\n  tags.sort((a, b) => b[1] - a[1]);\n  return tags.map((t) => {\n    return {\n      name: t[0],\n      count: t[1],\n      title: t[1] + (t[1] > 1 ? \" votes\" : \" vote\"),\n    };\n  });\n};\n\nconst communityTags = getTags();\n\nconst Wrapper = styled.div`\n  border-radius: 12px;\n  border: 1px solid #eceef0;\n  box-shadow: 0px 1px 3px rgba(16, 24, 40, 0.1),\n    0px 1px 2px rgba(16, 24, 40, 0.06);\n  \n  transform: translateY(0);\n  transition: transform 0.2s ease;\n\n  &:hover {\n    transform: translateY(-3px);\n  }\n\n  a {\n    color: #4498e0;\n    font-size: 0.8rem;\n    font-weight: 600;\n    text-decoration: none;\n\n    &:hover {\n      color: #4498e0cc;\n  }\n`;\n\nconst shorten = (str, len) => {\n  if (str.includes(\" \") || str.length <= len) {\n    return str;\n  }\n  return str.slice(0, len) + \"...\";\n};\n\nfunction getSourcePath(path) {\n  switch (type) {\n    case \"thing\": {\n      return `/every.near/widget/every.thing.view?path=${path}`;\n    }\n    case \"type\": {\n      return `/every.near/widget/every.thing.view?path=${path}`;\n    }\n    case \"widget\": {\n      return `/mob.near/widget/WidgetSource?src=${path}`;\n    }\n  }\n}\n\nfunction getEditPath(path) {\n  switch (type) {\n    case \"thing\": {\n      return `/every.near/widget/every.thing.create?path=${path}`;\n    }\n    case \"type\": {\n      return `/every.near/widget/every.type.create?path=${path}`;\n    }\n    case \"widget\": {\n      return `https://nearpad.dev/${path}`;\n    }\n  }\n}\n\nreturn (\n  <Wrapper className=\"shadow p-4 d-flex flex-column gap-2 h-100\">\n    <div className=\"row\">\n      <div className=\"col\">\n        <div\n          className=\"d-inline-block m-auto\"\n          style={{ width: \"8em\", height: \"8em\" }}\n        >\n          <Widget\n            src=\"mob.near/widget/Image\"\n            props={{\n              image,\n              className: \"w-100 h-100\",\n              style: { objectFit: \"cover\", borderRadius: \"2em\" },\n              thumbnail: false,\n              fallbackUrl:\n                \"https://ipfs.near.social/ipfs/bafkreido7gsk4dlb63z3s5yirkkgrjs2nmyar5bxyet66chakt2h5jve6e\",\n              alt: thingName,\n            }}\n          />\n        </div>\n      </div>\n      <div className=\"col\">\n        <small className=\"text-muted d-flex justify-content-end\">\n          <i className=\"bi bi-clock me-1\"></i>\n          <Widget\n            src=\"mob.near/widget/TimeAgo\"\n            props={{ keyPath: path, blockHeight }}\n          />\n        </small>\n      </div>\n    </div>\n    <div className=\"d-flex justify-content-between m-1\">\n      <div>\n        <h3>{shorten(name || thingName, 16)}</h3>\n        <p className=\"text-muted overflow-hidden small my-3 mx-1\">\n          {shorten(description || \"\", 100)}\n          {(!description || description?.length < 1) && \"No description\"}\n        </p>\n      </div>\n    </div>\n    <div className=\"justify-content-between mt-auto\">\n      <div className=\"row\">\n        <div className=\"mb-2\">\n          <div className=\"d-flex justify-content-between align-items-center gap-2\">\n            {state.showInput && context.accountId === accountId ? (\n              <div className=\"d-flex gap-2\">\n                <input\n                  value={state.tagValue}\n                  onChange={(e) => State.update({ tag: e.target.value })}\n                />\n                <button\n                  className=\"btn btn-secondary btn-sm\"\n                  onClick={() => setTag()}\n                >\n                  add\n                </button>\n              </div>\n            ) : (\n              <div className=\"text-muted\">Creator Tags</div>\n            )}\n            {context.accountId === accountId && (\n              <button\n                className=\"btn btn-secondary btn-sm\"\n                onClick={() => State.update({ showInput: !state.showInput })}\n              >\n                +\n              </button>\n            )}\n          </div>\n          {tags.length > 0 &&\n            tags.map((tag, i) => {\n              const tagBadge = (\n                <span key={i} className=\"me-1 mb-1 badge bg-secondary\">\n                  #{tag}\n                </span>\n              );\n              return tagBadge;\n            })}\n        </div>\n        <div className=\"d-flex justify-content-between align-items-center gap-2\">\n          {state.showInput && context.accountId !== accountId ? (\n            <div className=\"d-flex gap-2\">\n              <input\n                value={state.tagValue}\n                onChange={(e) => State.update({ tag: e.target.value })}\n              />\n              <button\n                className=\"btn btn-secondary btn-sm\"\n                onClick={() => setTag()}\n                disabled={!state.tag}\n              >\n                add\n              </button>\n            </div>\n          ) : (\n            <div className=\"text-muted\">Community Tags</div>\n          )}\n          {context.accountId !== accountId && (\n            <button\n              className=\"btn btn-secondary btn-sm\"\n              onClick={() => State.update({ showInput: !state.showInput })}\n            >\n              +\n            </button>\n          )}\n        </div>\n        {communityTags.length > 0 && (\n          <div>\n            {communityTags.map((tag, i) => {\n              const tagBadge = (\n                <div>\n                  <span\n                    className={\"badge bg-success position-relative\"}\n                    title={tag.title}\n                    style={\n                      tag.count > 1\n                        ? {\n                            marginRight: \"0.9em\",\n                            paddingRight: \"0.85em\",\n                          }\n                        : { marginRight: \"0.25em\" }\n                    }\n                  >\n                    #{tag.name}\n                    {tag.count > 1 && (\n                      <span\n                        className={`badge translate-middle rounded-pill bg-danger position-absolute top-50 start-100`}\n                      >\n                        {tag.count}\n                      </span>\n                    )}\n                  </span>\n                </div>\n              );\n              return tagBadge;\n            })}\n          </div>\n        )}\n      </div>\n    </div>\n    <div className=\"d-flex gap-2 justify-content-around gap-3 my-3\">\n      <a\n        href={`/every.near/widget/every.thing.view?path=${path}`}\n        target=\"_blank\"\n      >\n        <i className=\"bi me-1 bi-eye\" />\n        View\n      </a>\n      <a href={getSourcePath(path)} target=\"_blank\">\n        <i className=\"bi me-1 bi-file-earmark-code\" />\n        Source\n      </a>\n      <a\n        href={`/bozon.near/widget/WidgetHistory?widgetPath=${path}`}\n        target=\"_blank\"\n      >\n        <i className=\"bi me-1 bi-clock-history\" />\n        History\n      </a>\n      <a href={`https://nearpad.dev/editor/${path}`} target=\"_blank\">\n        <i className=\"bi me-1 bi-pencil-square\" />\n        Edit\n      </a>\n    </div>\n\n    <div className=\"d-flex gap-2 justify-content-between\">\n      <div className=\"flex-grow-1 text-truncate\">\n        <Widget src=\"mob.near/widget/Profile\" props={{ accountId }} />\n      </div>\n      {type === \"widget\" && (\n        <Widget\n          src=\"hack.near/widget/star.button\"\n          props={{ widgetPath, accountId }}\n        />\n      )}\n    </div>\n  </Wrapper>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/efiz.near/widget/docs.card", "fact_widget_deployments_id": "84fd900807cf389d1f49e1f4b667f102", "inserted_timestamp": "2023-08-11T02:25:48.151Z", "modified_timestamp": "2023-08-11T02:25:48.151Z", "__row_index": 16}