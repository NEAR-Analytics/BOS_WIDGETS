{"tx_hash": "BoqhVtiKBtXDkHu2LaKwPrn2DvhCbafv5eZCEHz4u9pN", "action_id_social": "2WsjL7jAMfdP1Qags8MwkY8QkiepEDmkz1jdLj8TQcbh-0-widget", "block_id": 95923935, "block_timestamp": "2023-07-07T15:23:06.431Z", "signer_id": "efiz.near", "widget_name": "every.post.v2", "source_code": "const sources = props.sources;\nconst typeWhitelist = props.typeWhitelist;\nconst hashtagWhitelist = props.hashtagWhitelist;\nconst accountWhitelist = props.accountWhitelist;\nconst accountBlacklist = props.accountBlacklist;\nconst feedOrder = props.feedOrder || \"desc\";\nconst disableCaching = props.disableCaching || false;\n\nconst { Test } = VM.require(\"efiz.near/widget/test.template\"); // takes the data and renders, this can be a thing, or provided via a map.\n// Post template\n// template for the item in the feed...\n\nlet index = [];\nconst options = {\n  limit: 10,\n  order: feedOrder,\n  accountId: accountWhitelist.length ? accountWhitelist : undefined,\n};\n// posts indexed via a hashtag are saved differently\n// than posts indexed via a domain/action\nif (hashtagWhitelist.length) {\n  // get all posts saved under the hashtags\n  // and we will filter domains and keys later\n  index = hashtagWhitelist.map((it) => ({\n    action: \"hashtag\",\n    key: it.toLowerCase(),\n    options,\n  }));\n} else {\n  // else, get all posts saved under the domain/action key pairs\n  index = sources?.map((it) => ({\n    action: it.domain,\n    key: it.key,\n    options,\n  }));\n}\n\nfunction extractPath(a) {\n  let path;\n  if (hashtagWhitelist.length) {\n    // May want to revisit this again\n    // The path doesn't represent where this came from\n    // For example, a comment is indexed under the parent post's key\n    // but is saved under a regular post/comment path\n    path = a.value.path;\n  } else {\n    if (a.value.type === \"md\") {\n      path = `${a.accountId}/${a.action}/${a.key}`;\n    } else {\n      path = a.value.path;\n    }\n  }\n  return path;\n}\n\nconst renderItem = (a) => {\n  // Filter out post if account is in blacklist\n  // Filter out post if type is not in whitelist\n  if (\n    (accountBlacklist.length && accountBlacklist.includes(a.accountId)) ||\n    (hashtagWhitelist.length && !typeWhitelist.includes(a.value.type))\n  ) {\n    return <></>;\n  }\n\n  const path = extractPath(a);\n  const blockHeight = a.blockHeight;\n\n  return <Test path={path} blockHeight={blockHeight} />;\n};\n\nreturn (\n  <Widget\n    src=\"efiz.near/widget/MergedIndexFeed\"\n    props={{ index, renderItem, disableCaching }}\n  />\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/efiz.near/widget/every.post.v2", "fact_widget_deployments_id": "b13996c846d6980c3a303a3453e1e1b4", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}