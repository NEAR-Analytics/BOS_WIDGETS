{"tx_hash": "Aq6tT997WsjWebt5GTi5EfJ2S7QCxNk9MbWG4oAP4PAm", "action_id_social": "Ge7vnxg9uYyMXoHhiyYRHrzLzjyY5G6c5M8Jso7ywvDN-0-widget", "block_id": 98364622, "block_timestamp": "2023-08-08T18:51:36.063Z", "signer_id": "efiz.near", "widget_name": "SimpleMDE", "source_code": "/**\n * iframe embedding a SimpleMDE component\n * https://github.com/sparksuite/simplemde-markdown-editor\n */\nconst data = props.data;\nconst onChange = props.onChange;\nconst height = props.height ?? \"500px\";\n\nfunction togglePreview() {\n  State.update({ showPreview: !state.showPreview });\n}\nconst code = `\n<style>\n#react-root {\n    height: 100vh;\n}\n</style>\n<script src=\"https://unpkg.com/react@18/umd/react.development.js\" crossorigin></script>\n<script src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\" crossorigin></script>\n<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/simplemde/latest/simplemde.min.css\">\n<script src=\"https://cdn.jsdelivr.net/simplemde/latest/simplemde.min.js\"></script>\n<script src=\"https://cdn.jsdelivr.net/highlight.js/latest/highlight.min.js\"></script>\n<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/highlight.js/latest/styles/github.min.css\">\n\n<div id=\"react-root\"></div>\n\n<script>\nfunction MarkdownEditor(props) {\n    const [value, setValue] = React.useState(props.initialText || \"\");\n    React.useEffect(() => {\n        // edit options here\n        const simplemde = new SimpleMDE({\n            element: document.getElementById(\"markdown-input\"),\n            autofocus: true,\n            renderingConfig: {\n                singleLineBreaks: false,\n                codeSyntaxHighlighting: true,\n            },\n            toolbar: [\"heading\", \"bold\", \"italic\", \"quote\", \"code\", \"link\", \"unordered-list\", \"ordered-list\",\n                {\n                    name: \"custom\",\n                    action: function customFunction(editor){\n                        \n                        const cursorPos = editor.codemirror.getCursor();\n                        const lineText = editor.codemirror.getLine(cursorPos.line);\n                        if (lineText.trim() === \"\") {\n                            editor.codemirror.replaceRange('- [ ] ', cursorPos);\n                        } else {\n                            editor.codemirror.replaceRange('\\\\n - [ ] ', cursorPos);\n                        }\n                    },\n                    className: \"fa fa-star\",\n                    title: \"Custom Button\",\n                },\n                {\n                    name: 'upload',\n                    action: () => this.showDialogUpload(),\n                    className: 'fa fa-upload',\n                    title: 'Upload File',\n                },\n                {\n                    name: 'table',\n                    action: SimpleMDE.drawTable,\n                    className: 'fa fa-table',\n                    title: 'Insert Table',\n                },\n                {\n                    name: 'preview',\n                    action: () => {window.parent.postMessage({ handler: \"preview\" }, \"*\")},\n                    className: 'fa fa-eye no-disable',\n                    title: 'Toggle Preview',\n                }, {\n                    name: 'side-by-side',\n                    action: SimpleMDE.toggleSideBySide,\n                    className: 'fa fa-columns no-disable ',\n                    title: 'Toggle Side by Side',\n                }, {\n                    name: 'fullscreen',\n                    action: SimpleMDE.toggleFullScreen,\n                    className: 'fa fa-arrows-alt no-disable',\n                    title: 'Toggle Fullscreen',\n                }   \n            ],\n        });\n\n        simplemde.codemirror.on('change', () => {\n            const content = simplemde.value();\n            window.parent.postMessage({ handler: \"update\", content }, \"*\");\n        });\n\n        setValue(props.initialText || \"\");\n    }, [props.initialText]);\n\n    return React.createElement('textarea', { id: 'markdown-input', value: value });\n}\n\nconst domContainer = document.querySelector('#react-root');\nconst root = ReactDOM.createRoot(domContainer);\n\nwindow.addEventListener(\"message\", (event) => {\n    root.render(React.createElement(MarkdownEditor, {\n        initialText: event.data.content,\n    }));\n});\n</script>\n`;\nreturn (\n  <>\n    {state.showPreview ? (\n      <Widget\n        src=\"efiz.near/widget/SocialMarkdown\"\n        props={{ text: state.text }}\n      />\n    ) : (\n      <iframe\n        className=\"w-100\"\n        style={{\n          height: height,\n        }}\n        srcDoc={code}\n        message={data.content ?? \"\"}\n        onMessage={(e) => {\n          console.log(e.handler);\n          switch (e.handler) {\n            case \"update\": {\n              State.update({ text: event.content });\n              //   onChange({ content: event.content });\n            }\n            case \"preview\": {\n              togglePreview();\n            }\n          }\n        }}\n      />\n    )}\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/efiz.near/widget/SimpleMDE", "fact_widget_deployments_id": "4cee6f7354ddf841c629e7a08d9bbaf9", "inserted_timestamp": "2023-08-08T20:25:48.821Z", "modified_timestamp": "2023-08-08T20:25:48.821Z", "__row_index": 2}