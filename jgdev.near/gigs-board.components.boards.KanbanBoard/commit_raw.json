{"tx_hash": "BcYe9d89evL3vjVgdMnwpbvibpPbNXySho5zk1qFTWu8", "action_id_social": "8jUgEYkCNyTF1npBCbQmHvbFhY773i4jcLadCZxM2aWT-0-widget", "block_id": 94645739, "block_timestamp": "2023-06-20T22:27:53.588Z", "signer_id": "jgdev.near", "widget_name": "gigs-board.components.boards.KanbanBoard", "source_code": "/* INCLUDE: \"common.jsx\" */\r\nconst nearDevGovGigsContractAccountId =\r\n  props.nearDevGovGigsContractAccountId ||\r\n  (context.widgetSrc ?? \"devgovgigs.near\").split(\"/\", 1)[0];\r\n\r\nconst nearDevGovGigsWidgetsAccountId =\r\n  props.nearDevGovGigsWidgetsAccountId ||\r\n  (context.widgetSrc ?? \"devgovgigs.near\").split(\"/\", 1)[0];\r\n\r\nfunction widget(widgetName, widgetProps, key) {\r\n  widgetProps = {\r\n    ...widgetProps,\r\n    nearDevGovGigsContractAccountId: props.nearDevGovGigsContractAccountId,\r\n    nearDevGovGigsWidgetsAccountId: props.nearDevGovGigsWidgetsAccountId,\r\n    referral: props.referral,\r\n  };\r\n\r\n  return (\r\n    <Widget\r\n      src={`${nearDevGovGigsWidgetsAccountId}/widget/gigs-board.${widgetName}`}\r\n      props={widgetProps}\r\n      key={key}\r\n    />\r\n  );\r\n}\r\n\r\nfunction href(widgetName, linkProps) {\r\n  linkProps = { ...linkProps };\r\n\r\n  if (props.nearDevGovGigsContractAccountId) {\r\n    linkProps.nearDevGovGigsContractAccountId =\r\n      props.nearDevGovGigsContractAccountId;\r\n  }\r\n\r\n  if (props.nearDevGovGigsWidgetsAccountId) {\r\n    linkProps.nearDevGovGigsWidgetsAccountId =\r\n      props.nearDevGovGigsWidgetsAccountId;\r\n  }\r\n\r\n  if (props.referral) {\r\n    linkProps.referral = props.referral;\r\n  }\r\n\r\n  const linkPropsQuery = Object.entries(linkProps)\r\n    .filter(([_key, nullable]) => (nullable ?? null) !== null)\r\n    .map(([key, value]) => `${key}=${value}`)\r\n    .join(\"&\");\r\n\r\n  return `/#/${nearDevGovGigsWidgetsAccountId}/widget/gigs-board.pages.${widgetName}${\r\n    linkPropsQuery ? \"?\" : \"\"\r\n  }${linkPropsQuery}`;\r\n}\r\n/* END_INCLUDE: \"common.jsx\" */\r\n\r\nconst requiredLabels = props.requiredLabels ?? [\"near-social\"];\r\nconst excludedLabels = props.excludedLabels ?? [\"nft\"];\r\nconst columns = props.columns ?? [\r\n  { label: \"widget\", title: \"Widget\" },\r\n  { label: \"integration\", title: \"Integration\" },\r\n  { label: \"feature-request\", title: \"Feature Request\" },\r\n];\r\n\r\nconst labelsToIdSet = (labels) => {\r\n  const ids = labels.map(\r\n    (label) =>\r\n      Near.view(nearDevGovGigsContractAccountId, \"get_posts_by_label\", {\r\n        label,\r\n      }) ?? []\r\n  );\r\n  const idsFlat = ids.flat(1);\r\n  return new Set(idsFlat);\r\n};\r\n\r\nconst requiredPostsSet = labelsToIdSet(requiredLabels);\r\nconst excludedPostsSet = labelsToIdSet(excludedLabels);\r\n\r\nconst postsPerLabel = columns.map((column) => {\r\n  let allIds = (\r\n    Near.view(nearDevGovGigsContractAccountId, \"get_posts_by_label\", {\r\n      label: column.label,\r\n    }) ?? []\r\n  ).reverse();\r\n  if (requiredLabels.length > 0) {\r\n    return {\r\n      ...column,\r\n      posts: allIds.filter(\r\n        (i) => requiredPostsSet.has(i) && !excludedPostsSet.has(i)\r\n      ),\r\n    };\r\n  } else {\r\n    // No extra filtering is required.\r\n    return { ...column, posts: allIds };\r\n  }\r\n});\r\n\r\nreturn (\r\n  <div>\r\n    <div class=\"row mb-2\">\r\n      {props.boardId ? (\r\n        <div class=\"col\">\r\n          <small class=\"text-muted\">\r\n            <a\r\n              class=\"card-link\"\r\n              href={href(\"Boards\", { selectedBoardId: props.boardId })}\r\n              role=\"button\"\r\n              target=\"_blank\"\r\n              title=\"Link to this board\"\r\n            >\r\n              <div class=\"hstack gap-3\">\r\n                <div class=\"bi bi-share\"></div>\r\n                <div>Link to this board</div>\r\n              </div>\r\n            </a>\r\n          </small>\r\n        </div>\r\n      ) : null}\r\n\r\n      {requiredLabels.length > 0 ? (\r\n        <div class=\"col\">\r\n          <small class=\"text-muted\">\r\n            Required labels:\r\n            {requiredLabels.map((label) => (\r\n              <a href={href(\"Feed\", { label })} key={label}>\r\n                <span class=\"badge text-bg-primary me-1\">{label}</span>\r\n              </a>\r\n            ))}\r\n          </small>\r\n        </div>\r\n      ) : null}\r\n      {excludedLabels.length > 0 ? (\r\n        <div class=\"col\">\r\n          <small class=\"text-muted\">\r\n            Excluded labels:\r\n            {excludedLabels.map((label) => (\r\n              <a href={href(\"Feed\", { label })} key={label}>\r\n                <span class=\"badge text-bg-primary me-1\">{label}</span>\r\n              </a>\r\n            ))}\r\n          </small>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n    <div class=\"row\">\r\n      {postsPerLabel.map((column) => (\r\n        <div class=\"col-3\" key={column.label}>\r\n          <div class=\"card\">\r\n            <div class=\"card-body border-secondary\">\r\n              <h6 class=\"card-title\">\r\n                {column.title}({column.posts.length})\r\n              </h6>\r\n              {column.posts.map((postId) =>\r\n                widget(\"components.posts.CompactPost\", { id: postId }, postId)\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  </div>\r\n);\r\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/jgdev.near/widget/gigs-board.components.boards.KanbanBoard", "fact_widget_deployments_id": "e66d4a5e5425f5c50b323af675e0f41f", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 33}