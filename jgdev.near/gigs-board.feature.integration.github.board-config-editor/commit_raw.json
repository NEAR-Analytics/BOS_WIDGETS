{"tx_hash": "BcYe9d89evL3vjVgdMnwpbvibpPbNXySho5zk1qFTWu8", "action_id_social": "8jUgEYkCNyTF1npBCbQmHvbFhY773i4jcLadCZxM2aWT-0-widget", "block_id": 94645739, "block_timestamp": "2023-06-20T22:27:53.588Z", "signer_id": "jgdev.near", "widget_name": "gigs-board.feature.integration.github.board-config-editor", "source_code": "/* INCLUDE: \"common.jsx\" */\r\nconst nearDevGovGigsContractAccountId =\r\n  props.nearDevGovGigsContractAccountId ||\r\n  (context.widgetSrc ?? \"devgovgigs.near\").split(\"/\", 1)[0];\r\n\r\nconst nearDevGovGigsWidgetsAccountId =\r\n  props.nearDevGovGigsWidgetsAccountId ||\r\n  (context.widgetSrc ?? \"devgovgigs.near\").split(\"/\", 1)[0];\r\n\r\nfunction widget(widgetName, widgetProps, key) {\r\n  widgetProps = {\r\n    ...widgetProps,\r\n    nearDevGovGigsContractAccountId: props.nearDevGovGigsContractAccountId,\r\n    nearDevGovGigsWidgetsAccountId: props.nearDevGovGigsWidgetsAccountId,\r\n    referral: props.referral,\r\n  };\r\n\r\n  return (\r\n    <Widget\r\n      src={`${nearDevGovGigsWidgetsAccountId}/widget/gigs-board.${widgetName}`}\r\n      props={widgetProps}\r\n      key={key}\r\n    />\r\n  );\r\n}\r\n\r\nfunction href(widgetName, linkProps) {\r\n  linkProps = { ...linkProps };\r\n\r\n  if (props.nearDevGovGigsContractAccountId) {\r\n    linkProps.nearDevGovGigsContractAccountId =\r\n      props.nearDevGovGigsContractAccountId;\r\n  }\r\n\r\n  if (props.nearDevGovGigsWidgetsAccountId) {\r\n    linkProps.nearDevGovGigsWidgetsAccountId =\r\n      props.nearDevGovGigsWidgetsAccountId;\r\n  }\r\n\r\n  if (props.referral) {\r\n    linkProps.referral = props.referral;\r\n  }\r\n\r\n  const linkPropsQuery = Object.entries(linkProps)\r\n    .filter(([_key, nullable]) => (nullable ?? null) !== null)\r\n    .map(([key, value]) => `${key}=${value}`)\r\n    .join(\"&\");\r\n\r\n  return `/#/${nearDevGovGigsWidgetsAccountId}/widget/gigs-board.pages.${widgetName}${\r\n    linkPropsQuery ? \"?\" : \"\"\r\n  }${linkPropsQuery}`;\r\n}\r\n/* END_INCLUDE: \"common.jsx\" */\r\n/* INCLUDE: \"shared/lib/form\" */\r\n/**\r\n *! TODO: Extract into separate library module\r\n *! once `useForm` is converted into a form factory widget\r\n */\r\nconst traversalUpdate = ({\r\n  input,\r\n  target: treeOrBranch,\r\n  path: [currentBranchKey, ...remainingBranch],\r\n  params,\r\n  via: nodeUpdate,\r\n}) => ({\r\n  ...treeOrBranch,\r\n\r\n  [currentBranchKey]:\r\n    remainingBranch.length > 0\r\n      ? traversalUpdate({\r\n          input,\r\n\r\n          target:\r\n            typeof treeOrBranch[currentBranchKey] === \"object\"\r\n              ? treeOrBranch[currentBranchKey]\r\n              : {\r\n                  ...((treeOrBranch[currentBranchKey] ?? null) !== null\r\n                    ? { __archivedLeaf__: treeOrBranch[currentBranchKey] }\r\n                    : {}),\r\n                },\r\n\r\n          path: remainingBranch,\r\n          via: nodeUpdate,\r\n        })\r\n      : nodeUpdate({\r\n          input,\r\n          lastKnownState: treeOrBranch[currentBranchKey],\r\n          params,\r\n        }),\r\n});\r\n\r\nconst fieldDefaultUpdate = ({\r\n  input,\r\n  lastKnownState,\r\n  params: { arrayDelimiter },\r\n}) => {\r\n  switch (typeof input) {\r\n    case \"boolean\":\r\n      return input;\r\n\r\n    case \"object\":\r\n      return Array.isArray(input) && typeof lastKnownState === \"string\"\r\n        ? input.join(arrayDelimiter ?? \",\")\r\n        : input;\r\n\r\n    case \"string\":\r\n      return Array.isArray(lastKnownState)\r\n        ? input.split(arrayDelimiter ?? \",\").map((string) => string.trim())\r\n        : input;\r\n\r\n    default: {\r\n      if ((input ?? null) === null) {\r\n        switch (typeof lastKnownState) {\r\n          case \"boolean\":\r\n            return !lastKnownState;\r\n\r\n          default:\r\n            return lastKnownState;\r\n        }\r\n      } else return input;\r\n    }\r\n  }\r\n};\r\n\r\nconst useForm = ({ stateKey: formStateKey }) => ({\r\n  formState: state[formStateKey],\r\n\r\n  formUpdate:\r\n    ({ path: fieldPath, via: fieldCustomUpdate, ...params }) =>\r\n    (fieldInput) =>\r\n      State.update((lastKnownState) =>\r\n        traversalUpdate({\r\n          input: fieldInput?.target?.value ?? fieldInput,\r\n          target: lastKnownState,\r\n          path: [formStateKey, ...fieldPath],\r\n          params,\r\n\r\n          via:\r\n            typeof fieldCustomUpdate === \"function\"\r\n              ? fieldCustomUpdate\r\n              : fieldDefaultUpdate,\r\n        })\r\n      ),\r\n});\r\n/* END_INCLUDE: \"shared/lib/form\" */\r\n/* INCLUDE: \"shared/lib/gui\" */\r\nconst Card = styled.div`\r\n  &:hover {\r\n    box-shadow: rgba(3, 102, 214, 0.3) 0px 0px 0px 3px;\r\n  }\r\n`;\r\n\r\nconst CompactContainer = styled.div`\r\n  width: fit-content !important;\r\n  max-width: 100%;\r\n`;\r\n/* END_INCLUDE: \"shared/lib/gui\" */\r\n/* INCLUDE: \"shared/lib/uuid\" */\r\nconst uuid = () =>\r\n  [Date.now().toString(16)]\r\n    .concat(\r\n      Array.from(\r\n        { length: 4 },\r\n        () => Math.floor(Math.random() * 0xffffffff) & 0xffffffff\r\n      ).map((value) => value.toString(16))\r\n    )\r\n    .join(\"-\");\r\n\r\nconst uuidIndexed = (data) => {\r\n  const id = uuid();\r\n\r\n  return Object.fromEntries([[id, { ...data, id }]]);\r\n};\r\n/* END_INCLUDE: \"shared/lib/uuid\" */\r\n/* INCLUDE: \"shared/mocks\" */\r\nconst communities = {\r\n  \"zero-knowledge\": {\r\n    overviewId: 397,\r\n    eventsId: 401,\r\n\r\n    icon: \"https://ipfs.near.social/ipfs/bafkreiajwq6ep3n7veddozji2djv5vviyisabhycbweslvpwhsoyuzcwi4\",\r\n\r\n    cover:\r\n      \"https://ipfs.near.social/ipfs/bafkreihgxg5kwts2juldaeasveyuddkm6tcabmrat2aaq5u6uyljtyt7lu\",\r\n\r\n    title: \"Zero Knowledge\",\r\n    desc: \"Building a zero knowledge ecosystem on NEAR.\",\r\n    telegram: \"NearZeroKnowledge\",\r\n  },\r\n\r\n  protocol: {\r\n    overviewId: 412,\r\n    eventsId: 413,\r\n\r\n    icon: \"https://ipfs.near.social/ipfs/bafkreidpitdafcnhkp4uyomacypdgqvxr35jtfnbxa5s6crby7qjk2nv5a\",\r\n\r\n    cover:\r\n      \"https://ipfs.near.social/ipfs/bafkreicg4svzfz5nvllomsahndgm7u62za4sib4mmbygxzhpcl4htqwr4a\",\r\n\r\n    title: \"Protocol\",\r\n    desc: \"Supporting the ongoing innovation of the NEAR Protocol.\",\r\n\r\n    integrations: {\r\n      github: {\r\n        boards: {\r\n          \"18855b9c9f2-216091d-6484800b-42593f54-6102b48a\": {\r\n            id: \"18855b9c9f2-216091d-6484800b-42593f54-6102b48a\",\r\n\r\n            columns: {\r\n              \"18855f4a93e-76a9b704-14c3ebdb-1e6c0f05-22653630\": {\r\n                id: \"18855f4a93e-76a9b704-14c3ebdb-1e6c0f05-22653630\",\r\n\r\n                description:\r\n                  \"NEPs that need a moderator review or author revision.\",\r\n\r\n                labelSearchTerms: [\"WG-protocol\", \"S-draft\"],\r\n                title: \"\ud83d\udcc4 Draft\",\r\n              },\r\n\r\n              \"18877dc932c-c309c28--4b95e909--220e9bbb--51ff54c9\": {\r\n                description:\r\n                  \"NEPS that need a review by Subject Matter Experts.\",\r\n\r\n                labelSearchTerms: [\"WG-protocol\", \"S-review\"],\r\n                title: \"\ud83d\udc40 Review\",\r\n                id: \"18877dc932c-c309c28--4b95e909--220e9bbb--51ff54c9\",\r\n              },\r\n\r\n              \"18877dd71e5-47d177b8-5505178-640a5937--17968e87\": {\r\n                description:\r\n                  \"NEPS in the final review stage that need the work group voting indications.\",\r\n\r\n                labelSearchTerms: [\"WG-protocol\", \"S-voting\"],\r\n                title: \"\u2714 Voting\",\r\n                id: \"18877dd71e5-47d177b8-5505178-640a5937--17968e87\",\r\n              },\r\n\r\n              \"18877e14753--5b0ca250-1edea464-523fd579--5ebde527\": {\r\n                description:\r\n                  \"NEPS that were reviewed and approved by a work group.\",\r\n\r\n                labelSearchTerms: [\"WG-protocol\", \"S-approved\"],\r\n                title: \"\u2705 Approved NEPs\",\r\n                id: \"18877e14753--5b0ca250-1edea464-523fd579--5ebde527\",\r\n              },\r\n\r\n              \"18877e2f94c-4cc0ff57--1fb016c6--39ce0459-23922e81\": {\r\n                description:\r\n                  \"NEPS that were reviewed and approved by a work group or NEP moderators.\",\r\n\r\n                labelSearchTerms: [\"WG-protocol\", \"A-NEP-GrammarFix\"],\r\n                title: \"\ud83d\udd27 Approved Fixes\",\r\n                id: \"18877e2f94c-4cc0ff57--1fb016c6--39ce0459-23922e81\",\r\n              },\r\n\r\n              \"18877e40c46--76d23f4d-578f24a8--2cfcd190--74aa77be\": {\r\n                description:\r\n                  \"NEPs that were retracted by the author or had no activity for over two months.\",\r\n\r\n                labelSearchTerms: [\"WG-protocol\", \"S-retracted\"],\r\n                title: \"\u274c RETRACTED\",\r\n                id: \"18877e40c46--76d23f4d-578f24a8--2cfcd190--74aa77be\",\r\n              },\r\n            },\r\n\r\n            dataTypesIncluded: { Issue: false, PullRequest: true },\r\n            description: \"Latest NEAR Enhancement Proposals by status\",\r\n            repoURL: \"https://github.com/near/NEPs\",\r\n            ticketState: \"all\",\r\n            title: \"NEAR Protocol NEPs\",\r\n          },\r\n        },\r\n      },\r\n    },\r\n\r\n    telegram: \"NEAR_Protocol_Community_Group\",\r\n  },\r\n\r\n  tooling: {\r\n    overviewId: 416,\r\n    eventsId: 417,\r\n\r\n    icon: \"https://ipfs.near.social/ipfs/bafkreie2eaj5czmpfe6pe53kojzcspgozebdsonffwvbxtpuipnwahybvi\",\r\n\r\n    cover:\r\n      \"https://ipfs.near.social/ipfs/bafkreiehzr7z2fhoqqmkt3z667wubccbch6sqtsnvd6msodyzpnf72cszy\",\r\n\r\n    title: \"Tooling\",\r\n    desc: \"Supporting the ongoing innovation of tooling.\",\r\n\r\n    integrations: {\r\n      github: {\r\n        boards: {\r\n          \"18855b9c9f2-216091d-6484800b-42593f54-6102b48a\": {\r\n            id: \"18855b9c9f2-216091d-6484800b-42593f54-6102b48a\",\r\n\r\n            columns: {\r\n              \"18855f4a93e-76a9b704-14c3ebdb-1e6c0f05-22653630\": {\r\n                id: \"18855f4a93e-76a9b704-14c3ebdb-1e6c0f05-22653630\",\r\n\r\n                description:\r\n                  \"NEPs that need a moderator review or author revision.\",\r\n\r\n                labelSearchTerms: [\"WG-tools\", \"S-draft\"],\r\n                title: \"\ud83d\udcc4 Draft\",\r\n              },\r\n\r\n              \"18877dc932c-c309c28--4b95e909--220e9bbb--51ff54c9\": {\r\n                description:\r\n                  \"NEPS that need a review by Subject Matter Experts.\",\r\n\r\n                labelSearchTerms: [\"WG-tools\", \"S-review\"],\r\n                title: \"\ud83d\udc40 Review\",\r\n                id: \"18877dc932c-c309c28--4b95e909--220e9bbb--51ff54c9\",\r\n              },\r\n\r\n              \"18877dd71e5-47d177b8-5505178-640a5937--17968e87\": {\r\n                description:\r\n                  \"NEPS in the final review stage that need the work group voting indications.\",\r\n\r\n                labelSearchTerms: [\"WG-tools\", \"S-voting\"],\r\n                title: \"\u2714 Voting\",\r\n                id: \"18877dd71e5-47d177b8-5505178-640a5937--17968e87\",\r\n              },\r\n\r\n              \"18877e14753--5b0ca250-1edea464-523fd579--5ebde527\": {\r\n                description:\r\n                  \"NEPS that were reviewed and approved by a work group.\",\r\n\r\n                labelSearchTerms: [\"WG-tools\", \"S-approved\"],\r\n                title: \"\u2705 Approved NEPs\",\r\n                id: \"18877e14753--5b0ca250-1edea464-523fd579--5ebde527\",\r\n              },\r\n\r\n              \"18877e2f94c-4cc0ff57--1fb016c6--39ce0459-23922e81\": {\r\n                description:\r\n                  \"NEPS that were reviewed and approved by a work group or NEP moderators.\",\r\n\r\n                labelSearchTerms: [\"WG-tools\", \"A-NEP-GrammarFix\"],\r\n                title: \"\ud83d\udd27 Approved Fixes\",\r\n                id: \"18877e2f94c-4cc0ff57--1fb016c6--39ce0459-23922e81\",\r\n              },\r\n\r\n              \"18877e40c46--76d23f4d-578f24a8--2cfcd190--74aa77be\": {\r\n                description:\r\n                  \"NEPs that were retracted by the author or had no activity for over two months.\",\r\n\r\n                labelSearchTerms: [\"WG-tools\", \"S-retracted\"],\r\n                title: \"\u274c RETRACTED\",\r\n                id: \"18877e40c46--76d23f4d-578f24a8--2cfcd190--74aa77be\",\r\n              },\r\n            },\r\n\r\n            dataTypesIncluded: { Issue: false, PullRequest: true },\r\n            description: \"Latest NEAR Enhancement Proposals by status\",\r\n            repoURL: \"https://github.com/near/NEPs\",\r\n            ticketState: \"all\",\r\n            title: \"NEAR Tooling NEPs\",\r\n          },\r\n        },\r\n      },\r\n    },\r\n\r\n    telegram: \"NEAR_Tools_Community_Group\",\r\n  },\r\n\r\n  \"contract-standards\": {\r\n    overviewId: 414,\r\n    eventsId: 415,\r\n\r\n    icon: \"https://ipfs.near.social/ipfs/bafkreiepgdnu7soc6xgbyd4adicbf3eyxiiwqawn6tguaix6aklfpir634\",\r\n\r\n    cover:\r\n      \"https://ipfs.near.social/ipfs/bafkreiaowjqxds24fwcliyriintjd4ucciprii2rdxjmxgi7f5dmzuscey\",\r\n\r\n    title: \"Contract Standards\",\r\n    desc: \"Coordinating the contribution to the NEAR dapp standards.\",\r\n\r\n    integrations: {\r\n      github: {\r\n        boards: {\r\n          \"18855b9c9f2-216091d-6484800b-42593f54-6102b48a\": {\r\n            id: \"18855b9c9f2-216091d-6484800b-42593f54-6102b48a\",\r\n\r\n            columns: {\r\n              \"18855f4a93e-76a9b704-14c3ebdb-1e6c0f05-22653630\": {\r\n                id: \"18855f4a93e-76a9b704-14c3ebdb-1e6c0f05-22653630\",\r\n\r\n                description:\r\n                  \"NEPs that need a moderator review or author revision.\",\r\n\r\n                labelSearchTerms: [\"WG-contract-standards\", \"S-draft\"],\r\n                title: \"\ud83d\udcc4 Draft\",\r\n              },\r\n\r\n              \"18877dc932c-c309c28--4b95e909--220e9bbb--51ff54c9\": {\r\n                description:\r\n                  \"NEPS that need a review by Subject Matter Experts.\",\r\n\r\n                labelSearchTerms: [\"WG-contract-standards\", \"S-review\"],\r\n                title: \"\ud83d\udc40 Review\",\r\n                id: \"18877dc932c-c309c28--4b95e909--220e9bbb--51ff54c9\",\r\n              },\r\n\r\n              \"18877dd71e5-47d177b8-5505178-640a5937--17968e87\": {\r\n                description:\r\n                  \"NEPS in the final review stage that need the work group voting indications.\",\r\n\r\n                labelSearchTerms: [\"WG-contract-standards\", \"S-voting\"],\r\n                title: \"\u2714 Voting\",\r\n                id: \"18877dd71e5-47d177b8-5505178-640a5937--17968e87\",\r\n              },\r\n\r\n              \"18877e14753--5b0ca250-1edea464-523fd579--5ebde527\": {\r\n                description:\r\n                  \"NEPS that were reviewed and approved by a work group.\",\r\n\r\n                labelSearchTerms: [\"WG-contract-standards\", \"S-approved\"],\r\n                title: \"\u2705 Approved NEPs\",\r\n                id: \"18877e14753--5b0ca250-1edea464-523fd579--5ebde527\",\r\n              },\r\n\r\n              \"18877e2f94c-4cc0ff57--1fb016c6--39ce0459-23922e81\": {\r\n                description:\r\n                  \"NEPS that were reviewed and approved by a work group or NEP moderators.\",\r\n\r\n                labelSearchTerms: [\"WG-contract-standards\", \"A-NEP-GrammarFix\"],\r\n                title: \"\ud83d\udd27 Approved Fixes\",\r\n                id: \"18877e2f94c-4cc0ff57--1fb016c6--39ce0459-23922e81\",\r\n              },\r\n\r\n              \"18877e40c46--76d23f4d-578f24a8--2cfcd190--74aa77be\": {\r\n                description:\r\n                  \"NEPs that were retracted by the author or had no activity for over two months.\",\r\n\r\n                labelSearchTerms: [\"WG-contract-standards\", \"S-retracted\"],\r\n                title: \"\u274c RETRACTED\",\r\n                id: \"18877e40c46--76d23f4d-578f24a8--2cfcd190--74aa77be\",\r\n              },\r\n            },\r\n\r\n            dataTypesIncluded: { Issue: false, PullRequest: true },\r\n            description: \"Latest NEAR Enhancement Proposals by status\",\r\n            repoURL: \"https://github.com/near/NEPs\",\r\n            ticketState: \"all\",\r\n            title: \"NEAR Contract Standards NEPs\",\r\n          },\r\n        },\r\n      },\r\n    },\r\n\r\n    telegram: \"nearnft\",\r\n  },\r\n};\r\n/* END_INCLUDE: \"shared/mocks\" */\r\n\r\nconst dataTypesLocked = {\r\n  Issue: true,\r\n  PullRequest: true,\r\n};\r\n\r\nconst boardConfigDefaults = {\r\n  id: uuid(),\r\n  columns: {},\r\n  dataTypesIncluded: { Issue: false, PullRequest: true },\r\n  description: \"\",\r\n  repoURL: \"\",\r\n  ticketState: \"all\",\r\n  title: \"\",\r\n};\r\n\r\nconst GithubBoardConfigEditor = ({ label, pageURL }) => {\r\n  const communityGitHubKanbanBoards =\r\n    communities[label].integrations?.github?.boards ?? {};\r\n\r\n  State.init({\r\n    boardConfig: null,\r\n\r\n    editingMode: \"form\",\r\n    isEditingAllowed: false, // According to user permission level\r\n    isEditorEnabled: false,\r\n\r\n    ...Storage.get(\r\n      \"state\",\r\n      `${nearDevGovGigsWidgetsAccountId}/widget/gigs-board.components.community.CommunityHeader`\r\n    ),\r\n  });\r\n\r\n  const onEditorToggle = (forcedState) =>\r\n    State.update((lastKnownState) => ({\r\n      ...lastKnownState,\r\n      isEditorEnabled: forcedState ?? !lastKnownState.isEditorEnabled,\r\n    }));\r\n\r\n  const onEditingModeChange = ({ target: { value } }) =>\r\n    State.update((lastKnownState) => ({\r\n      ...lastKnownState,\r\n      editingMode: value,\r\n    }));\r\n\r\n  if (\r\n    state.boardConfig === null &&\r\n    Object.keys(communityGitHubKanbanBoards).length > 0\r\n  ) {\r\n    State.update((lastKnownState) => ({\r\n      ...lastKnownState,\r\n      boardConfig: Object.values(communityGitHubKanbanBoards)[0],\r\n    }));\r\n  }\r\n\r\n  const boardsCreateNew = () =>\r\n    State.update((lastKnownState) => ({\r\n      ...lastKnownState,\r\n      boardConfig: boardConfigDefaults,\r\n      isEditorEnabled: true,\r\n    }));\r\n\r\n  const { formState, formUpdate } = useForm({ stateKey: \"boardConfig\" });\r\n\r\n  const columnsCreateNew = ({ lastKnownState }) =>\r\n    Object.keys(lastKnownState).length < 6\r\n      ? {\r\n          ...lastKnownState,\r\n\r\n          ...uuidIndexed({\r\n            description: \"\",\r\n            labelSearchTerms: [],\r\n            title: \"New column\",\r\n          }),\r\n        }\r\n      : lastKnownState;\r\n\r\n  const columnsDeleteById =\r\n    (id) =>\r\n    ({ lastKnownState }) =>\r\n      Object.fromEntries(\r\n        Object.entries(lastKnownState).filter(([columnId]) => columnId !== id)\r\n      );\r\n\r\n  const form =\r\n    formState !== null ? (\r\n      <>\r\n        <div className=\"d-flex gap-3 flex-column flex-lg-row\">\r\n          <div className=\"input-group-text border-0 d-flex flex-column flex-1 flex-shrink-0\">\r\n            <span id={`${formState.id}-title`}>Title</span>\r\n\r\n            <input\r\n              aria-describedby={`${formState.id}-title`}\r\n              className=\"form-control\"\r\n              onChange={formUpdate({ path: [\"title\"] })}\r\n              placeholder=\"NEAR Protocol NEPs\"\r\n              type=\"text\"\r\n              value={formState.title}\r\n            />\r\n          </div>\r\n\r\n          <div\r\n            className={[\r\n              \"input-group-text border-0\",\r\n              \"d-flex flex-column justify-content-evenly flex-4 w-100\",\r\n            ].join(\" \")}\r\n          >\r\n            <span id={`${formState.id}-repoURL`}>GitHub repository URL</span>\r\n\r\n            <input\r\n              aria-describedby={`${formState.id}-repoURL`}\r\n              className=\"form-control\"\r\n              onChange={formUpdate({ path: [\"repoURL\"] })}\r\n              placeholder=\"https://github.com/example-org/example-repo\"\r\n              type=\"text\"\r\n              value={formState.repoURL}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"d-flex gap-3 flex-column flex-lg-row\">\r\n          <CompactContainer className=\"d-flex gap-3 flex-column justify-content-start p-3 ps-0\">\r\n            <span\r\n              className=\"d-inline-flex gap-2\"\r\n              id={`${formState.id}-dataTypesIncluded`}\r\n            >\r\n              <i class=\"bi bi-database-fill\" />\r\n              <span>Tracked data</span>\r\n            </span>\r\n\r\n            {Object.entries(formState.dataTypesIncluded).map(\r\n              ([typeName, enabled]) =>\r\n                widget(\r\n                  \"components.atom.toggle\",\r\n                  {\r\n                    active: enabled,\r\n                    className: \"w-100\",\r\n                    disabled: dataTypesLocked[typeName],\r\n                    key: typeName,\r\n                    label: typeName,\r\n\r\n                    onSwitch: formUpdate({\r\n                      path: [\"dataTypesIncluded\", typeName],\r\n                    }),\r\n                  },\r\n\r\n                  typeName\r\n                )\r\n            )}\r\n          </CompactContainer>\r\n\r\n          <CompactContainer className=\"d-flex gap-3 flex-column justify-content-start p-3 ps-0\">\r\n            <span\r\n              className=\"d-inline-flex gap-2\"\r\n              id={`${formState.id}-dataTypesIncluded`}\r\n            >\r\n              <i class=\"bi bi-database-fill\" />\r\n              <span>Ticket state</span>\r\n            </span>\r\n\r\n            {widget(\"components.atom.button-switch\", {\r\n              currentValue: formState.ticketState,\r\n              key: \"ticketState\",\r\n              onChange: formUpdate({ path: [\"ticketState\"] }),\r\n\r\n              options: [\r\n                { label: \"All\", value: \"all\" },\r\n                { label: \"Open\", value: \"open\" },\r\n                { label: \"Closed\", value: \"closed\" },\r\n              ],\r\n\r\n              title: \"Editing mode selection\",\r\n            })}\r\n          </CompactContainer>\r\n\r\n          <div className=\"input-group-text border-0 d-flex flex-column w-100\">\r\n            <span id={`${formState.id}-description`}>Description</span>\r\n\r\n            <textarea\r\n              aria-describedby={`${formState.id}-description`}\r\n              className=\"form-control h-75\"\r\n              onChange={formUpdate({ path: [\"description\"] })}\r\n              placeholder=\"Latest NEAR Enhancement Proposals by status.\"\r\n              type=\"text\"\r\n              value={formState.description}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"d-flex align-items-center justify-content-between\">\r\n          <span className=\"d-inline-flex gap-2 m-0\">\r\n            <i className=\"bi bi-list-task\" />\r\n            <span>Columns ( max. 6 )</span>\r\n          </span>\r\n        </div>\r\n\r\n        <div className=\"d-flex flex-column align-items-center gap-3\">\r\n          {Object.values(formState.columns).map(\r\n            ({ id, description, labelSearchTerms, title }) => (\r\n              <div\r\n                class=\"d-flex flex-column gap-3 rounded-2 p-3 w-100 bg-secondary bg-opacity-25\"\r\n                key={id}\r\n              >\r\n                <div class=\"d-flex gap-3\">\r\n                  <div\r\n                    className=\"d-flex flex-column flex-grow-1\"\r\n                    style={{ width: \"inherit\" }}\r\n                  >\r\n                    <span id={`${formState.id}-column-${id}-title`}>Title</span>\r\n\r\n                    <input\r\n                      aria-describedby={`${formState.id}-column-${id}-title`}\r\n                      className=\"form-control\"\r\n                      onChange={formUpdate({\r\n                        path: [\"columns\", id, \"title\"],\r\n                      })}\r\n                      placeholder=\"\ud83d\udc40 Review\"\r\n                      type=\"text\"\r\n                      value={title}\r\n                    />\r\n                  </div>\r\n\r\n                  <button\r\n                    class=\"btn btn-outline-danger\"\r\n                    onClick={formUpdate({\r\n                      path: [\"columns\"],\r\n                      via: columnsDeleteById(id),\r\n                    })}\r\n                    title=\"Delete column\"\r\n                  >\r\n                    <i class=\"bi bi-file-earmark-minus-fill\" />\r\n                  </button>\r\n                </div>\r\n\r\n                <div\r\n                  className=\"d-flex flex-column\"\r\n                  style={{ width: \"inherit\" }}\r\n                >\r\n                  <span id={`${formState.id}-column-${id}-description`}>\r\n                    Description\r\n                  </span>\r\n\r\n                  <input\r\n                    aria-describedby={`${formState.id}-column-${id}-description`}\r\n                    className=\"form-control\"\r\n                    onChange={formUpdate({\r\n                      path: [\"columns\", id, \"description\"],\r\n                    })}\r\n                    placeholder=\"NEPs that need a review by Subject Matter Experts.\"\r\n                    type=\"text\"\r\n                    value={description}\r\n                  />\r\n                </div>\r\n\r\n                <div\r\n                  className=\"d-flex flex-column\"\r\n                  style={{ width: \"inherit\" }}\r\n                >\r\n                  <span\r\n                    className=\"text-wrap\"\r\n                    id={`${formState.id}-column-${title}-searchTerms`}\r\n                  >\r\n                    Search terms for all the labels MUST be presented in\r\n                    included tickets, comma-separated\r\n                  </span>\r\n\r\n                  <input\r\n                    aria-describedby={`${formState.id}-column-${title}-searchTerms`}\r\n                    aria-label=\"Search terms for included labels\"\r\n                    className=\"form-control\"\r\n                    onChange={formUpdate({\r\n                      path: [\"columns\", id, \"labelSearchTerms\"],\r\n                    })}\r\n                    placeholder=\"WG-, draft, review, proposal, ...\"\r\n                    type=\"text\"\r\n                    value={labelSearchTerms.join(\", \")}\r\n                  />\r\n                </div>\r\n              </div>\r\n            )\r\n          )}\r\n        </div>\r\n      </>\r\n    ) : null;\r\n\r\n  return (\r\n    <div className=\"d-flex flex-column gap-4\">\r\n      {state.isEditorEnabled && formState !== null ? (\r\n        <div\r\n          className={[\r\n            \"d-flex flex-column gap-3\",\r\n            \"border border-2 border-primary rounded-2 p-3 w-100\",\r\n          ].join(\" \")}\r\n        >\r\n          <div className=\"d-flex align-items-center justify-content-between gap-3\">\r\n            <h5 className=\"h5 d-inline-flex gap-2 m-0\">\r\n              <i className=\"bi bi-wrench-adjustable-circle-fill\" />\r\n              <span>Board configuration</span>\r\n            </h5>\r\n\r\n            {widget(\"components.atom.button-switch\", {\r\n              currentValue: state.editingMode,\r\n              key: \"editingMode\",\r\n              onChange: onEditingModeChange,\r\n\r\n              options: [\r\n                { label: \"Form\", value: \"form\" },\r\n                { label: \"JSON\", value: \"JSON\" },\r\n              ],\r\n\r\n              title: \"Editing mode selection\",\r\n            })}\r\n          </div>\r\n\r\n          {state.editingMode === \"form\" ? (\r\n            form\r\n          ) : (\r\n            <div className=\"d-flex flex-column flex-grow-1 border-0 bg-transparent w-100\">\r\n              <textarea\r\n                className=\"form-control\"\r\n                disabled\r\n                rows=\"12\"\r\n                type=\"text\"\r\n                value={JSON.stringify(formState, null, \"\\t\")}\r\n              />\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"d-flex align-items-center justify-content-end gap-3\">\r\n            <button\r\n              className=\"btn btn-outline-secondary d-inline-flex gap-2 me-auto\"\r\n              disabled={Object.keys(formState.columns).length >= 6}\r\n              onClick={formUpdate({\r\n                path: [\"columns\"],\r\n                via: columnsCreateNew,\r\n              })}\r\n            >\r\n              <i class=\"bi bi-plus-lg\" />\r\n              <span>New column</span>\r\n            </button>\r\n\r\n            <button\r\n              className=\"btn btn-outline-danger d-inline-flex gap-2 align-items-center\"\r\n              onClick={() => onEditorToggle(false)}\r\n              style={{ width: \"fit-content\" }}\r\n            >\r\n              <span>Cancel</span>\r\n            </button>\r\n\r\n            <button\r\n              disabled={!formState.hasChanges}\r\n              className=\"btn btn-primary d-inline-flex gap-2 align-items-center\"\r\n              style={{ width: \"fit-content\" }}\r\n            >\r\n              <i className=\"bi bi-file-arrow-up-fill\" />\r\n              <span>Save</span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n\r\n      {state.boardConfig !== null ? (\r\n        widget(\"entity.github-repo.board\", {\r\n          ...state.boardConfig,\r\n          editorTrigger: () => onEditorToggle(true),\r\n          isEditable: state.isEditingAllowed,\r\n          pageURL,\r\n        })\r\n      ) : (\r\n        <div\r\n          className=\"d-flex flex-column align-items-center justify-content-center gap-4\"\r\n          style={{ height: 384 }}\r\n        >\r\n          <h5 className=\"h5 d-inline-flex gap-2 m-0\">\r\n            This community doesn't have GitHub boards.\r\n          </h5>\r\n\r\n          <button\r\n            className=\"btn btn-primary d-inline-flex gap-2\"\r\n            onClick={boardsCreateNew}\r\n          >\r\n            <i class=\"bi bi-kanban-fill\" />\r\n            <span>Create one</span>\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nreturn GithubBoardConfigEditor(props);\r\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/jgdev.near/widget/gigs-board.feature.integration.github.board-config-editor", "fact_widget_deployments_id": "c9fabd879e57a43baf43ded844548235", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 5}