{"tx_hash": "BV6xzPSqtiRYGztTjtaTZrtjX6JtFQmUQ5QLD1yUQMD", "action_id_social": "6bDaWH5XbKebemhw1bstrCEMLM1WvaLBBpNwAZor7oRN-0-widget", "block_id": 92925132, "block_timestamp": "2023-05-28T19:06:37.459Z", "signer_id": "jgdev.near", "widget_name": "gigs-board.components.community.FeaturedCommunity", "source_code": "/* INCLUDE: \"common.jsx\" */\nconst nearDevGovGigsContractAccountId =\n  props.nearDevGovGigsContractAccountId ||\n  (context.widgetSrc ?? \"devgovgigs.near\").split(\"/\", 1)[0];\nconst nearDevGovGigsWidgetsAccountId =\n  props.nearDevGovGigsWidgetsAccountId ||\n  (context.widgetSrc ?? \"devgovgigs.near\").split(\"/\", 1)[0];\n\nfunction widget(widgetName, widgetProps, key) {\n  widgetProps = {\n    ...widgetProps,\n    nearDevGovGigsContractAccountId: props.nearDevGovGigsContractAccountId,\n    nearDevGovGigsWidgetsAccountId: props.nearDevGovGigsWidgetsAccountId,\n    referral: props.referral,\n  };\n  return (\n    <Widget\n      src={`${nearDevGovGigsWidgetsAccountId}/widget/gigs-board.${widgetName}`}\n      props={widgetProps}\n      key={key}\n    />\n  );\n}\n\nfunction href(widgetName, linkProps) {\n  linkProps = { ...linkProps };\n  if (props.nearDevGovGigsContractAccountId) {\n    linkProps.nearDevGovGigsContractAccountId =\n      props.nearDevGovGigsContractAccountId;\n  }\n  if (props.nearDevGovGigsWidgetsAccountId) {\n    linkProps.nearDevGovGigsWidgetsAccountId =\n      props.nearDevGovGigsWidgetsAccountId;\n  }\n  if (props.referral) {\n    linkProps.referral = props.referral;\n  }\n  const linkPropsQuery = Object.entries(linkProps)\n    .map(([key, value]) => `${key}=${value}`)\n    .join(\"&\");\n  return `/#/${nearDevGovGigsWidgetsAccountId}/widget/gigs-board.pages.${widgetName}${\n    linkPropsQuery ? \"?\" : \"\"\n  }${linkPropsQuery}`;\n}\n\nconst WrapperWidget = ({ children, id, storageType }) => {\n  // This function handles the state change for the children widgets\n  const handleStateChange = (key, value) => {\n    // Use the unique identifier to create a unique storage key\n    const storageKey = `${id}_${key}`;\n\n    if (storageType === \"local\") {\n      // Update the local storage with the new state\n      localStorage.setItem(storageKey, JSON.stringify(value));\n    } else if (storageType === \"sync\") {\n      // Update the sync storage with the new state\n      // Replace this with the appropriate API call for your sync storage\n      syncStorage.setItem(storageKey, JSON.stringify(value));\n    }\n  };\n\n  // This function initializes the state of the children widgets\n  const initState = (key, defaultValue) => {\n    // Use the unique identifier to create a unique storage key\n    const storageKey = `${id}_${key}`;\n\n    let storedValue;\n    if (storageType === \"local\") {\n      storedValue = localStorage.getItem(storageKey);\n    } else if (storageType === \"sync\") {\n      // Retrieve the value from sync storage\n      // Replace this with the appropriate API call for your sync storage\n      storedValue = syncStorage.getItem(storageKey);\n    }\n\n    if (storedValue) {\n      return JSON.parse(storedValue);\n    }\n    return defaultValue;\n  };\n\n  // Render the children widgets and pass the state management functions as props\n  return React.Children.map(children, (child) =>\n    React.cloneElement(child, { handleStateChange, initState })\n  );\n};\n/* END_INCLUDE: \"common.jsx\" */\n\nconst Hover = styled.div`\n  &:hover {\n    box-shadow: 0px 1px 3px rgba(16, 24, 40, 0.1),\n      0px 1px 2px rgba(16, 24, 40, 0.06);\n  }\n`;\n\nreturn (\n  <Hover className=\"card\">\n    <a\n      href={href(\"community.Overview\", {\n        label: props.label,\n      })}\n      class=\"text-decoration-none text-reset\"\n    >\n      <img src={props.cover} class=\"card-img-top\"></img>\n      <div class=\"h5 pt-3 ps-3\">{props.title}</div>\n      <div class=\"ps-3 pb-2 text-secondary\">{props.desc}</div>\n    </a>\n  </Hover>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/jgdev.near/widget/gigs-board.components.community.FeaturedCommunity", "fact_widget_deployments_id": "b76ab00cec1cf38585aa05df56b3bba5", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 20}