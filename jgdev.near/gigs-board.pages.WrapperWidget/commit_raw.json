{"tx_hash": "CvEFgSRvMf9iWr9Ab2DqXKD5pC3Hhc9zo3qZQt98FxBw", "action_id_social": "6jRBZjkPHw8S54y7vBfWpmC7govE4M32JXoQ1MWYmGvN-0-widget", "block_id": 94332251, "block_timestamp": "2023-06-16T19:28:29.398Z", "signer_id": "jgdev.near", "widget_name": "gigs-board.pages.WrapperWidget", "source_code": "/* INCLUDE: \"common.jsx\" */\nconst nearDevGovGigsContractAccountId =\n  props.nearDevGovGigsContractAccountId ||\n  (context.widgetSrc ?? \"devgovgigs.near\").split(\"/\", 1)[0];\n\nconst nearDevGovGigsWidgetsAccountId =\n  props.nearDevGovGigsWidgetsAccountId ||\n  (context.widgetSrc ?? \"jgdev.near\").split(\"/\", 1)[0];\n\nfunction widget(widgetName, widgetProps, key) {\n  widgetProps = {\n    ...widgetProps,\n    nearDevGovGigsContractAccountId: props.nearDevGovGigsContractAccountId,\n    nearDevGovGigsWidgetsAccountId: props.nearDevGovGigsWidgetsAccountId,\n    referral: props.referral,\n  };\n\n  return (\n    <Widget\n      src={`${nearDevGovGigsWidgetsAccountId}/widget/gigs-board.${widgetName}`}\n      props={widgetProps}\n      key={key}\n    />\n  );\n}\n\nfunction href(widgetName, linkProps) {\n  linkProps = { ...linkProps };\n\n  if (props.nearDevGovGigsContractAccountId) {\n    linkProps.nearDevGovGigsContractAccountId =\n      props.nearDevGovGigsContractAccountId;\n  }\n\n  if (props.nearDevGovGigsWidgetsAccountId) {\n    linkProps.nearDevGovGigsWidgetsAccountId =\n      props.nearDevGovGigsWidgetsAccountId;\n  }\n\n  if (props.referral) {\n    linkProps.referral = props.referral;\n  }\n\n  const linkPropsQuery = Object.entries(linkProps)\n    .filter(([_key, nullable]) => (nullable ?? null) !== null)\n    .map(([key, value]) => `${key}=${value}`)\n    .join(\"&\");\n\n  return `/#/${nearDevGovGigsWidgetsAccountId}/widget/gigs-board.pages.${widgetName}${\n    linkPropsQuery ? \"?\" : \"\"\n  }${linkPropsQuery}`;\n}\n/* END_INCLUDE: \"common.jsx\" */\n\nconst WrapperWidget = ({ children, id, storageType }) => {\n  // This function handles the state change for the children widgets\n  const handleStateChange = (key, value) => {\n    // Use the unique identifier to create a unique storage key\n    const storageKey = `${id}_${key}`;\n\n    if (storageType === \"local\") {\n      // Update the local storage with the new state\n      Storage.set(storageKey, JSON.stringify(value));\n    } else if (storageType === \"sync\") {\n      // Update the sync storage with the new state\n      // Replace this with the appropriate API call for your sync storage\n      Storage.set(storageKey, JSON.stringify(value));\n    }\n\n    // Update component state\n    State.update({ [storageKey]: value });\n  };\n\n  // This function initializes the state of the children widgets\n  const initState = (key, defaultValue) => {\n    // Use the unique identifier to create a unique storage key\n    const storageKey = `${id}_${key}`;\n\n    let storedValue;\n    if (storageType === \"local\") {\n      storedValue = Storage.get(storageKey);\n    }\n\n    if (storedValue) {\n      return JSON.parse(storedValue);\n    }\n\n    return defaultValue;\n  };\n\n  // Render the children widgets and pass the state management functions as props\n  return children.map((child) =>\n    Widget({ src: child, props: { handleStateChange, initState } })\n  );\n};\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/jgdev.near/widget/gigs-board.pages.WrapperWidget", "fact_widget_deployments_id": "84b578fbd808b8fb803bb380c3a11f1c", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 7}