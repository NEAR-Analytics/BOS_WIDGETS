{"tx_hash": "BcYe9d89evL3vjVgdMnwpbvibpPbNXySho5zk1qFTWu8", "action_id_social": "8jUgEYkCNyTF1npBCbQmHvbFhY773i4jcLadCZxM2aWT-0-widget", "block_id": 94645739, "block_timestamp": "2023-06-20T22:27:53.588Z", "signer_id": "jgdev.near", "widget_name": "gigs-board.pages.Create", "source_code": "/* INCLUDE: \"common.jsx\" */\r\nconst nearDevGovGigsContractAccountId =\r\n  props.nearDevGovGigsContractAccountId ||\r\n  (context.widgetSrc ?? \"devgovgigs.near\").split(\"/\", 1)[0];\r\n\r\nconst nearDevGovGigsWidgetsAccountId =\r\n  props.nearDevGovGigsWidgetsAccountId ||\r\n  (context.widgetSrc ?? \"devgovgigs.near\").split(\"/\", 1)[0];\r\n\r\nfunction widget(widgetName, widgetProps, key) {\r\n  widgetProps = {\r\n    ...widgetProps,\r\n    nearDevGovGigsContractAccountId: props.nearDevGovGigsContractAccountId,\r\n    nearDevGovGigsWidgetsAccountId: props.nearDevGovGigsWidgetsAccountId,\r\n    referral: props.referral,\r\n  };\r\n\r\n  return (\r\n    <Widget\r\n      src={`${nearDevGovGigsWidgetsAccountId}/widget/gigs-board.${widgetName}`}\r\n      props={widgetProps}\r\n      key={key}\r\n    />\r\n  );\r\n}\r\n\r\nfunction href(widgetName, linkProps) {\r\n  linkProps = { ...linkProps };\r\n\r\n  if (props.nearDevGovGigsContractAccountId) {\r\n    linkProps.nearDevGovGigsContractAccountId =\r\n      props.nearDevGovGigsContractAccountId;\r\n  }\r\n\r\n  if (props.nearDevGovGigsWidgetsAccountId) {\r\n    linkProps.nearDevGovGigsWidgetsAccountId =\r\n      props.nearDevGovGigsWidgetsAccountId;\r\n  }\r\n\r\n  if (props.referral) {\r\n    linkProps.referral = props.referral;\r\n  }\r\n\r\n  const linkPropsQuery = Object.entries(linkProps)\r\n    .filter(([_key, nullable]) => (nullable ?? null) !== null)\r\n    .map(([key, value]) => `${key}=${value}`)\r\n    .join(\"&\");\r\n\r\n  return `/#/${nearDevGovGigsWidgetsAccountId}/widget/gigs-board.pages.${widgetName}${\r\n    linkPropsQuery ? \"?\" : \"\"\r\n  }${linkPropsQuery}`;\r\n}\r\n/* END_INCLUDE: \"common.jsx\" */\r\n\r\nconst parentId = props.parentId ?? null;\r\nconst postId = props.postId ?? null;\r\nconst mode = props.mode ?? \"Create\";\r\n\r\nconst referralLabels = props.referral ? [`referral:${props.referral}`] : [];\r\nconst labelStrings = (props.labels ? props.labels.split(\",\") : []).concat(\r\n  referralLabels\r\n);\r\nconst labels = labelStrings.map((s) => {\r\n  return { name: s };\r\n});\r\n\r\ninitState({\r\n  seekingFunding: false,\r\n  //\r\n  author_id: context.accountId,\r\n  // Should be a list of objects with field \"name\".\r\n  labels,\r\n  // Should be a list of labels as strings.\r\n  // Both of the label structures should be modified together.\r\n  labelStrings,\r\n  postType: \"Idea\",\r\n  name: props.name ?? \"\",\r\n  description: props.description ?? \"\",\r\n  amount: props.amount ?? \"\",\r\n  token: props.token ?? \"NEAR\",\r\n  supervisor: props.supervisor ?? \"neardevgov.near\",\r\n  githubLink: props.githubLink ?? \"\",\r\n  warning: \"\",\r\n});\r\n\r\n// This must be outside onClick, because Near.view returns null at first, and when the view call finished, it returns true/false.\r\n// If checking this inside onClick, it will give `null` and we cannot tell the result is true or false.\r\nlet grantNotify = Near.view(\"social.near\", \"is_write_permission_granted\", {\r\n  predecessor_id: nearDevGovGigsContractAccountId,\r\n  key: context.accountId + \"/index/notify\",\r\n});\r\nif (grantNotify === null) {\r\n  return;\r\n}\r\n\r\nconst onSubmit = () => {\r\n  let labels = state.labelStrings;\r\n\r\n  let body = {\r\n    name: state.name,\r\n    description: generateDescription(\r\n      state.description,\r\n      state.amount,\r\n      state.token,\r\n      state.supervisor\r\n    ),\r\n  };\r\n\r\n  if (state.postType === \"Solution\") {\r\n    body = {\r\n      ...body,\r\n      post_type: \"Submission\",\r\n      submission_version: \"V1\",\r\n    };\r\n  } else {\r\n    // Idea\r\n    body = {\r\n      ...body,\r\n      post_type: \"Idea\",\r\n      idea_version: \"V1\",\r\n    };\r\n  }\r\n\r\n  if (!context.accountId) return;\r\n\r\n  let txn = [];\r\n  if (mode == \"Create\") {\r\n    txn.push({\r\n      contractName: nearDevGovGigsContractAccountId,\r\n      methodName: \"add_post\",\r\n      args: {\r\n        parent_id: parentId,\r\n        labels,\r\n        body: body,\r\n      },\r\n      deposit: Big(10).pow(21).mul(3),\r\n      gas: Big(10).pow(12).mul(100),\r\n    });\r\n  } else if (mode == \"Edit\") {\r\n    txn.push({\r\n      contractName: nearDevGovGigsContractAccountId,\r\n      methodName: \"edit_post\",\r\n      args: {\r\n        id: postId,\r\n        labels,\r\n        body: body,\r\n      },\r\n      deposit: Big(10).pow(21).mul(2),\r\n      gas: Big(10).pow(12).mul(100),\r\n    });\r\n  }\r\n  if (mode == \"Create\" || mode == \"Edit\") {\r\n    if (grantNotify === false) {\r\n      txn.unshift({\r\n        contractName: \"social.near\",\r\n        methodName: \"grant_write_permission\",\r\n        args: {\r\n          predecessor_id: nearDevGovGigsContractAccountId,\r\n          keys: [context.accountId + \"/index/notify\"],\r\n        },\r\n        deposit: Big(10).pow(23),\r\n        gas: Big(10).pow(12).mul(30),\r\n      });\r\n    }\r\n    Near.call(txn);\r\n  }\r\n};\r\n\r\nconst onIdeaClick = () => {\r\n  State.update({ postType: \"Idea\", seekingFunding: false });\r\n};\r\n\r\nconst onSolutionClick = () => {\r\n  State.update({ postType: \"Solution\" });\r\n};\r\n\r\nconst normalizeLabel = (label) =>\r\n  label\r\n    .replaceAll(/[- \\.]/g, \"_\")\r\n    .replaceAll(/[^\\w]+/g, \"\")\r\n    .replaceAll(/_+/g, \"-\")\r\n    .replace(/^-+/, \"\")\r\n    .replace(/-+$/, \"\")\r\n    .toLowerCase()\r\n    .trim(\"-\");\r\n\r\nconst checkLabel = (label) => {\r\n  Near.asyncView(nearDevGovGigsContractAccountId, \"is_allowed_to_use_labels\", {\r\n    editor: context.accountId,\r\n    labels: [label],\r\n  }).then((allowed) => {\r\n    if (allowed) {\r\n      State.update({ warning: \"\" });\r\n    } else {\r\n      State.update({\r\n        warning:\r\n          'The label \"' +\r\n          label +\r\n          '\" is protected and can only be added by moderators',\r\n      });\r\n      return;\r\n    }\r\n  });\r\n};\r\n\r\nconst setLabels = (labels) => {\r\n  labels = labels.map((o) => {\r\n    o.name = normalizeLabel(o.name);\r\n    return o;\r\n  });\r\n  if (labels.length < state.labels.length) {\r\n    let oldLabels = new Set(state.labels.map((label) => label.name));\r\n    for (let label of labels) {\r\n      oldLabels.delete(label.name);\r\n    }\r\n    let removed = oldLabels.values().next().value;\r\n    Near.asyncView(\r\n      nearDevGovGigsContractAccountId,\r\n      \"is_allowed_to_use_labels\",\r\n      { editor: context.accountId, labels: [removed] }\r\n    ).then((allowed) => {\r\n      if (allowed) {\r\n        let labelStrings = labels.map(({ name }) => name);\r\n        State.update({ labels, labelStrings });\r\n      } else {\r\n        State.update({\r\n          warning:\r\n            'The label \"' +\r\n            removed +\r\n            '\" is protected and can only be updated by moderators',\r\n        });\r\n        return;\r\n      }\r\n    });\r\n  } else {\r\n    let labelStrings = labels.map((o) => {\r\n      return o.name;\r\n    });\r\n    State.update({ labels, labelStrings });\r\n  }\r\n};\r\nconst existingLabelStrings =\r\n  Near.view(nearDevGovGigsContractAccountId, \"get_all_allowed_labels\", {\r\n    editor: context.accountId,\r\n  }) ?? [];\r\nconst existingLabelSet = new Set(existingLabelStrings);\r\nconst existingLabels = existingLabelStrings.map((s) => {\r\n  return { name: s };\r\n});\r\n\r\nconst labelEditor = (\r\n  <div className=\"col-lg-12 mb-2\">\r\n    <p className=\"fs-6 fw-bold mb-1\">Labels</p>\r\n    <Typeahead\r\n      multiple\r\n      labelKey=\"name\"\r\n      onInputChange={checkLabel}\r\n      onChange={setLabels}\r\n      options={existingLabels}\r\n      placeholder=\"near.social, widget, NEP, standard, protocol, tool\"\r\n      selected={state.labels}\r\n      positionFixed\r\n      allowNew={(results, props) => {\r\n        return (\r\n          !existingLabelSet.has(props.text) &&\r\n          props.selected.filter((selected) => selected.name === props.text)\r\n            .length == 0 &&\r\n          Near.view(\r\n            nearDevGovGigsContractAccountId,\r\n            \"is_allowed_to_use_labels\",\r\n            { editor: context.accountId, labels: [props.text] }\r\n          )\r\n        );\r\n      }}\r\n    />\r\n  </div>\r\n);\r\n\r\nconst nameDiv = (\r\n  <div className=\"col-lg-6 mb-2\">\r\n    <p className=\"fs-6 fw-bold mb-1\">Title</p>\r\n    <input\r\n      type=\"text\"\r\n      value={state.name}\r\n      onChange={(event) => State.update({ name: event.target.value })}\r\n    />\r\n  </div>\r\n);\r\n\r\nconst descriptionDiv = (\r\n  <div className=\"col-lg-12 mb-2\">\r\n    <p className=\"fs-6 fw-bold mb-1\">Description</p>\r\n    <textarea\r\n      value={state.description}\r\n      type=\"text\"\r\n      rows={6}\r\n      className=\"form-control\"\r\n      onChange={(event) => State.update({ description: event.target.value })}\r\n    />\r\n  </div>\r\n);\r\n\r\nconst isFundraisingDiv = (\r\n  // This is jank with just btns and not radios. But the radios were glitchy af\r\n  <>\r\n    <div class=\"mb-2\">\r\n      <p class=\"fs-6 fw-bold mb-1\">\r\n        Are you seeking funding for your solution?\r\n        <span class=\"text-muted fw-normal\">(Optional)</span>\r\n      </p>\r\n      <div class=\"form-check form-check-inline\">\r\n        <label class=\"form-check-label\">\r\n          <button\r\n            className=\"btn btn-light p-0\"\r\n            style={{\r\n              backgroundColor: state.seekingFunding ? \"#0C7283\" : \"inherit\",\r\n              color: \"#f3f3f3\",\r\n              border: \"solid #D9D9D9\",\r\n              borderRadius: \"100%\",\r\n              height: \"20px\",\r\n              width: \"20px\",\r\n            }}\r\n            onClick={() => State.update({ seekingFunding: true })}\r\n          />\r\n          Yes\r\n        </label>\r\n      </div>\r\n      <div class=\"form-check form-check-inline\">\r\n        <label class=\"form-check-label\">\r\n          <button\r\n            className=\"btn btn-light p-0\"\r\n            style={{\r\n              backgroundColor: !state.seekingFunding ? \"#0C7283\" : \"inherit\",\r\n              color: \"#f3f3f3\",\r\n              border: \"solid #D9D9D9\",\r\n              borderRadius: \"100%\",\r\n              height: \"20px\",\r\n              width: \"20px\",\r\n            }}\r\n            onClick={() => State.update({ seekingFunding: false })}\r\n          />\r\n          No\r\n        </label>\r\n      </div>\r\n    </div>\r\n  </>\r\n);\r\n\r\nconst fundraisingDiv = (\r\n  <div class=\"d-flex flex-column mb-2\">\r\n    <div className=\"col-lg-6  mb-2\">\r\n      Currency\r\n      <select\r\n        onChange={(event) => State.update({ token: event.target.value })}\r\n        class=\"form-select\"\r\n        aria-label=\"Default select example\"\r\n      >\r\n        <option selected value=\"NEAR\">\r\n          NEAR\r\n        </option>\r\n        <option value=\"USDC\">USDC</option>\r\n        <option value=\"USD\">USD</option>\r\n      </select>\r\n    </div>\r\n    <div className=\"col-lg-6 mb-2\">\r\n      Requested amount <span class=\"text-muted fw-normal\">(Numbers Only)</span>\r\n      <input\r\n        type=\"number\"\r\n        value={parseInt(state.amount) > 0 ? state.amount : \"\"}\r\n        min={0}\r\n        onChange={(event) =>\r\n          State.update({\r\n            amount: Number(\r\n              event.target.value.toString().replace(/e/g, \"\")\r\n            ).toString(),\r\n          })\r\n        }\r\n      />\r\n    </div>\r\n    <div className=\"col-lg-6 mb-2\">\r\n      <p class=\"mb-1\">\r\n        Requested sponsor <span class=\"text-muted fw-normal\">(Optional)</span>\r\n      </p>\r\n      <p style={{ fontSize: \"13px\" }} class=\"m-0 text-muted fw-light\">\r\n        If you are requesting funding from a specific sponsor, please enter\r\n        their username.\r\n      </p>\r\n      <div class=\"input-group flex-nowrap\">\r\n        <span class=\"input-group-text\" id=\"addon-wrapping\">\r\n          @\r\n        </span>\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          placeholder=\"Enter username\"\r\n          value={state.supervisor}\r\n          onChange={(event) => State.update({ supervisor: event.target.value })}\r\n        />\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nfunction generateDescription(text, amount, token, supervisor) {\r\n  const funding = `###### Requested amount: ${amount} ${token}\\n###### Requested sponsor: @${supervisor}\\n`;\r\n  if (amount > 0 && token && supervisor) return funding + text;\r\n  return text;\r\n}\r\n\r\nreturn (\r\n  <div class=\"bg-light d-flex flex-column flex-grow-1\">\r\n    {widget(\"components.layout.Banner\")}\r\n    <div class=\"mx-5 mb-5\">\r\n      <div aria-label=\"breadcrumb\">\r\n        <ol class=\"breadcrumb\">\r\n          <li class=\"breadcrumb-item\">\r\n            <a\r\n              style={{\r\n                color: \"#3252A6\",\r\n              }}\r\n              className=\"fw-bold\"\r\n              href={href(\"Feed\")}\r\n            >\r\n              DevHub\r\n            </a>\r\n          </li>\r\n          <li class=\"breadcrumb-item active\" aria-current=\"page\">\r\n            Create new\r\n          </li>\r\n        </ol>\r\n      </div>\r\n      <h4>Create a new post</h4>\r\n      <p>{state.seekingFunding}</p>\r\n      <div class=\"card border-light\">\r\n        <div class=\"card-body\">\r\n          <p class=\"card-title fw-bold fs-6\">What do you want to create?</p>\r\n          <div class=\"d-flex flex-row gap-2\">\r\n            <button\r\n              onClick={onIdeaClick}\r\n              type=\"button\"\r\n              class={`btn btn-outline-secondary`}\r\n              style={\r\n                state.postType === \"Idea\"\r\n                  ? {\r\n                      backgroundColor: \"#0C7283\",\r\n                      color: \"#f3f3f3\",\r\n                    }\r\n                  : {}\r\n              }\r\n            >\r\n              <i class=\"bi bi-lightbulb\"></i>\r\n              Idea\r\n            </button>\r\n            <button\r\n              onClick={onSolutionClick}\r\n              type=\"button\"\r\n              class={`btn btn-outline-secondary`}\r\n              style={\r\n                state.postType !== \"Idea\"\r\n                  ? {\r\n                      backgroundColor: \"#0C7283\",\r\n                      color: \"#f3f3f3\",\r\n                    }\r\n                  : {}\r\n              }\r\n            >\r\n              <i class=\"bi bi-rocket\"></i>\r\n              Solution\r\n            </button>\r\n          </div>\r\n          <p class=\"text-muted w-75 my-1\">\r\n            {state.postType === \"Idea\"\r\n              ? \"Get feedback from the community about a problem, opportunity, or need.\"\r\n              : \"Provide a specific proposal or implementation to an idea, optionally requesting funding. If your solution relates to an existing idea, please reply to the original post with a solution.\"}\r\n          </p>\r\n          {state.warning && (\r\n            <div\r\n              class=\"alert alert-warning alert-dismissible fade show\"\r\n              role=\"alert\"\r\n            >\r\n              {state.warning}\r\n              <button\r\n                type=\"button\"\r\n                class=\"btn-close\"\r\n                data-bs-dismiss=\"alert\"\r\n                aria-label=\"Close\"\r\n                onClick={() => State.update({ warning: \"\" })}\r\n              ></button>\r\n            </div>\r\n          )}\r\n          <div className=\"row\">\r\n            {nameDiv}\r\n            {descriptionDiv}\r\n            {labelEditor}\r\n            {state.postType === \"Solution\" && isFundraisingDiv}\r\n            {state.seekingFunding && fundraisingDiv}\r\n          </div>\r\n          <button\r\n            style={{\r\n              width: \"7rem\",\r\n              backgroundColor: \"#0C7283\",\r\n              color: \"#f3f3f3\",\r\n            }}\r\n            className=\"btn btn-light mb-2 p-3\"\r\n            onClick={onSubmit}\r\n          >\r\n            Submit\r\n          </button>\r\n        </div>\r\n        <div class=\"bg-light d-flex flex-row p-1 border-bottom\"></div>\r\n        <div class=\"card-body\">\r\n          <p class=\"text-muted m-0\">Preview</p>\r\n          <div>\r\n            {widget(\"components.posts.Post\", {\r\n              isPreview: true,\r\n              id: 0, // irrelevant\r\n              post: {\r\n                author_id: state.author_id,\r\n                likes: [],\r\n                snapshot: {\r\n                  editor_id: state.editor_id,\r\n                  labels: state.labelStrings,\r\n                  post_type: state.postType,\r\n                  name: state.name,\r\n                  description: generateDescription(\r\n                    state.description,\r\n                    state.amount,\r\n                    state.token,\r\n                    state.supervisor\r\n                  ),\r\n                  github_link: state.githubLink,\r\n                },\r\n              },\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/jgdev.near/widget/gigs-board.pages.Create", "fact_widget_deployments_id": "ba80f201ad0173509caaa912d11be494", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 59}