{"tx_hash": "BcYe9d89evL3vjVgdMnwpbvibpPbNXySho5zk1qFTWu8", "action_id_social": "8jUgEYkCNyTF1npBCbQmHvbFhY773i4jcLadCZxM2aWT-0-widget", "block_id": 94645739, "block_timestamp": "2023-06-20T22:27:53.588Z", "signer_id": "jgdev.near", "widget_name": "gigs-board.components.community.CommunityHeader", "source_code": "/* INCLUDE: \"common.jsx\" */\r\nconst nearDevGovGigsContractAccountId =\r\n  props.nearDevGovGigsContractAccountId ||\r\n  (context.widgetSrc ?? \"devgovgigs.near\").split(\"/\", 1)[0];\r\n\r\nconst nearDevGovGigsWidgetsAccountId =\r\n  props.nearDevGovGigsWidgetsAccountId ||\r\n  (context.widgetSrc ?? \"devgovgigs.near\").split(\"/\", 1)[0];\r\n\r\nfunction widget(widgetName, widgetProps, key) {\r\n  widgetProps = {\r\n    ...widgetProps,\r\n    nearDevGovGigsContractAccountId: props.nearDevGovGigsContractAccountId,\r\n    nearDevGovGigsWidgetsAccountId: props.nearDevGovGigsWidgetsAccountId,\r\n    referral: props.referral,\r\n  };\r\n\r\n  return (\r\n    <Widget\r\n      src={`${nearDevGovGigsWidgetsAccountId}/widget/gigs-board.${widgetName}`}\r\n      props={widgetProps}\r\n      key={key}\r\n    />\r\n  );\r\n}\r\n\r\nfunction href(widgetName, linkProps) {\r\n  linkProps = { ...linkProps };\r\n\r\n  if (props.nearDevGovGigsContractAccountId) {\r\n    linkProps.nearDevGovGigsContractAccountId =\r\n      props.nearDevGovGigsContractAccountId;\r\n  }\r\n\r\n  if (props.nearDevGovGigsWidgetsAccountId) {\r\n    linkProps.nearDevGovGigsWidgetsAccountId =\r\n      props.nearDevGovGigsWidgetsAccountId;\r\n  }\r\n\r\n  if (props.referral) {\r\n    linkProps.referral = props.referral;\r\n  }\r\n\r\n  const linkPropsQuery = Object.entries(linkProps)\r\n    .filter(([_key, nullable]) => (nullable ?? null) !== null)\r\n    .map(([key, value]) => `${key}=${value}`)\r\n    .join(\"&\");\r\n\r\n  return `/#/${nearDevGovGigsWidgetsAccountId}/widget/gigs-board.pages.${widgetName}${\r\n    linkPropsQuery ? \"?\" : \"\"\r\n  }${linkPropsQuery}`;\r\n}\r\n/* END_INCLUDE: \"common.jsx\" */\r\n\r\nconst Header = styled.div`\r\n  overflow: hidden;\r\n  background: #f3f3f3;\r\n  margin-top: -25px;\r\n  margin-bottom: 25px;\r\n`;\r\n\r\nconst NavUnderline = styled.ul`\r\n  a {\r\n    color: #3252a6;\r\n    text-decoration: none;\r\n  }\r\n\r\n  a.active {\r\n    font-weight: bold;\r\n    border-bottom: 2px solid #0c7283;\r\n  }\r\n`;\r\n\r\nconst BreadcrumbLink = styled.a`\r\n   {\r\n    color: #3252a6;\r\n    text-decoration: none;\r\n  }\r\n`;\r\n\r\nconst BreadcrumbBold = styled.b`\r\n   {\r\n    color: #3252a6;\r\n  }\r\n`;\r\n\r\nconst topicTabs = [\r\n  {\r\n    defaultActive: true,\r\n    iconClass: \"bi bi-house-door\",\r\n    path: \"community.Overview\",\r\n    title: \"Overview\",\r\n  },\r\n  {\r\n    iconClass: \"bi bi-chat-square-text\",\r\n    path: \"community.Discussions\",\r\n    title: \"Discussions\",\r\n  },\r\n  {\r\n    iconClass: \"bi bi-coin\",\r\n    path: \"community.Sponsorship\",\r\n    title: \"Sponsorship\",\r\n  },\r\n  {\r\n    iconClass: \"bi bi-calendar\",\r\n    path: \"community.Events\",\r\n    title: \"Events\",\r\n  },\r\n  {\r\n    iconClass: \"bi bi-github\",\r\n    path: \"community.github\",\r\n    title: \"GitHub\",\r\n  },\r\n  {\r\n    iconClass: \"bi bi-telegram\",\r\n    path: \"community.Telegram\",\r\n    title: \"Telegram\",\r\n  },\r\n];\r\n\r\nconst CommunityHeader = ({ label, tab }) => {\r\n  State.init({ shared: { isEditorEnabled: false } });\r\n  Storage.set(\"state\", state.shared);\r\n\r\n  const onEditorToggle = () =>\r\n    State.update((lastState) => ({\r\n      ...lastState,\r\n\r\n      shared: {\r\n        ...lastState.shared,\r\n        isEditorEnabled: !lastState.shared.isEditorEnabled,\r\n      },\r\n    }));\r\n\r\n  return (\r\n    <Header className=\"d-flex flex-column gap-3 px-4 pt-3\">\r\n      <ol className=\"breadcrumb\">\r\n        <li className=\"breadcrumb-item\">\r\n          <BreadcrumbLink href={href(\"Feed\")}>DevHub</BreadcrumbLink>\r\n        </li>\r\n\r\n        <li className=\"breadcrumb-item active\" aria-current=\"page\">\r\n          <BreadcrumbBold>{props.title}</BreadcrumbBold>\r\n        </li>\r\n      </ol>\r\n\r\n      <div className=\"d-flex justify-content-between\">\r\n        <div className=\"d-flex align-items-center\">\r\n          <img src={props.icon} width=\"95px\" height=\"95px\"></img>\r\n\r\n          <div>\r\n            <div className=\"h5 pt-3 ps-3\">{props.title}</div>\r\n            <div className=\"ps-3 pb-2 text-secondary\">{props.desc}</div>\r\n          </div>\r\n        </div>\r\n\r\n        {widget(\"components.atom.toggle\", {\r\n          active: state.shared.isEditorEnabled,\r\n          className: \"visually-hidden\",\r\n          direction: \"rtl\",\r\n          key: \"community-editor-toggle\",\r\n          label: \"( WIP ) Editor mode\",\r\n          onSwitch: onEditorToggle,\r\n        })}\r\n      </div>\r\n\r\n      <NavUnderline className=\"nav\">\r\n        {topicTabs.map(({ defaultActive, iconClass, path, title }) =>\r\n          title ? (\r\n            <li className=\"nav-item\" key={title}>\r\n              <a\r\n                aria-current={defaultActive && \"page\"}\r\n                className={[\r\n                  \"d-inline-flex gap-2\",\r\n                  tab === title ? \"nav-link active\" : \"nav-link\",\r\n                ].join(\" \")}\r\n                href={href(path, { label })}\r\n              >\r\n                {iconClass && <i className={iconClass} />}\r\n                <span>{title}</span>\r\n              </a>\r\n            </li>\r\n          ) : null\r\n        )}\r\n      </NavUnderline>\r\n    </Header>\r\n  );\r\n};\r\n\r\nreturn CommunityHeader(props);\r\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/jgdev.near/widget/gigs-board.components.community.CommunityHeader", "fact_widget_deployments_id": "00a6db425b3b5df18ee30f731db6470e", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 7}