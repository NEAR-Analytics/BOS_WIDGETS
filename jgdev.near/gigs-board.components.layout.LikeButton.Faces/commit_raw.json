{"tx_hash": "BcYe9d89evL3vjVgdMnwpbvibpPbNXySho5zk1qFTWu8", "action_id_social": "8jUgEYkCNyTF1npBCbQmHvbFhY773i4jcLadCZxM2aWT-0-widget", "block_id": 94645739, "block_timestamp": "2023-06-20T22:27:53.588Z", "signer_id": "jgdev.near", "widget_name": "gigs-board.components.layout.LikeButton.Faces", "source_code": "/* INCLUDE: \"common.jsx\" */\r\nconst nearDevGovGigsContractAccountId =\r\n  props.nearDevGovGigsContractAccountId ||\r\n  (context.widgetSrc ?? \"devgovgigs.near\").split(\"/\", 1)[0];\r\n\r\nconst nearDevGovGigsWidgetsAccountId =\r\n  props.nearDevGovGigsWidgetsAccountId ||\r\n  (context.widgetSrc ?? \"devgovgigs.near\").split(\"/\", 1)[0];\r\n\r\nfunction widget(widgetName, widgetProps, key) {\r\n  widgetProps = {\r\n    ...widgetProps,\r\n    nearDevGovGigsContractAccountId: props.nearDevGovGigsContractAccountId,\r\n    nearDevGovGigsWidgetsAccountId: props.nearDevGovGigsWidgetsAccountId,\r\n    referral: props.referral,\r\n  };\r\n\r\n  return (\r\n    <Widget\r\n      src={`${nearDevGovGigsWidgetsAccountId}/widget/gigs-board.${widgetName}`}\r\n      props={widgetProps}\r\n      key={key}\r\n    />\r\n  );\r\n}\r\n\r\nfunction href(widgetName, linkProps) {\r\n  linkProps = { ...linkProps };\r\n\r\n  if (props.nearDevGovGigsContractAccountId) {\r\n    linkProps.nearDevGovGigsContractAccountId =\r\n      props.nearDevGovGigsContractAccountId;\r\n  }\r\n\r\n  if (props.nearDevGovGigsWidgetsAccountId) {\r\n    linkProps.nearDevGovGigsWidgetsAccountId =\r\n      props.nearDevGovGigsWidgetsAccountId;\r\n  }\r\n\r\n  if (props.referral) {\r\n    linkProps.referral = props.referral;\r\n  }\r\n\r\n  const linkPropsQuery = Object.entries(linkProps)\r\n    .filter(([_key, nullable]) => (nullable ?? null) !== null)\r\n    .map(([key, value]) => `${key}=${value}`)\r\n    .join(\"&\");\r\n\r\n  return `/#/${nearDevGovGigsWidgetsAccountId}/widget/gigs-board.pages.${widgetName}${\r\n    linkPropsQuery ? \"?\" : \"\"\r\n  }${linkPropsQuery}`;\r\n}\r\n/* END_INCLUDE: \"common.jsx\" */\r\n\r\nconst accountId = context.accountId;\r\n\r\nconst likesByUsers = props.likesByUsers || {};\r\nconst limit = props.limit ?? 3;\r\n\r\nlet likes = Object.keys(likesByUsers).reverse();\r\n\r\nconst graphLikes = [];\r\nconst nonGraph = [];\r\n\r\nconst graph =\r\n  (accountId &&\r\n    Social.keys(`${accountId}/graph/follow/*`, \"final\")[accountId].graph\r\n      .follow) ||\r\n  {};\r\n\r\nlikes.forEach((accountId) => {\r\n  if (accountId in graph) {\r\n    graphLikes.push(accountId);\r\n  } else {\r\n    nonGraph.push(accountId);\r\n  }\r\n});\r\n\r\nlet faces = [...graphLikes, ...nonGraph];\r\n\r\nif (faces.length < limit + 3) {\r\n  limit = faces.length;\r\n}\r\n\r\nconst renderFaces = faces.splice(0, limit);\r\n\r\nconst Faces = styled.span`\r\n  .face {\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: -0.1em;\r\n    height: 1.5em;\r\n    width: 1.5em;\r\n    min-width: 1.5em;\r\n    vertical-align: top;\r\n    img {\r\n      object-fit: cover;\r\n      border-radius: 50%;\r\n      width: 100%;\r\n      height: 100%;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Others = styled.span`\r\n  &:hover {\r\n    color: white !important;\r\n  }\r\n`;\r\n\r\nconst numLikes = likes.length - limit;\r\n\r\nreturn (\r\n  <>\r\n    <Faces className=\"ms-1\">\r\n      {renderFaces.map((accountId, i) => (\r\n        <a\r\n          key={i}\r\n          href={`#/mob.near/widget/ProfilePage?accountId=${accountId}`}\r\n          className=\"text-decoration-none d-inline-block\"\r\n        >\r\n          <Widget\r\n            src=\"mob.near/widget/Profile.OverlayTrigger\"\r\n            props={{\r\n              accountId,\r\n              children: (\r\n                <Widget\r\n                  src=\"mob.near/widget/ProfileImage\"\r\n                  props={{\r\n                    metadata,\r\n                    accountId,\r\n                    widgetName,\r\n                    style: { zIndex: 10 - i },\r\n                    className: \"face\",\r\n                    tooltip: false,\r\n                    imageStyle: {},\r\n                    imageClassName: \"\",\r\n                  }}\r\n                />\r\n              ),\r\n            }}\r\n          />\r\n        </a>\r\n      ))}\r\n    </Faces>\r\n    {numLikes > 0 ? (\r\n      <OverlayTrigger\r\n        placement=\"auto\"\r\n        overlay={\r\n          <Tooltip>\r\n            <div\r\n              className=\"text-truncate text-start\"\r\n              style={{ maxWidth: \"16em\" }}\r\n            >\r\n              {faces.slice(0, 10).map((accountId, i) => (\r\n                <Fragment key={i}>\r\n                  <Widget\r\n                    src=\"mob.near/widget/ProfileLine\"\r\n                    props={{ accountId, link: false }}\r\n                  />\r\n                  <br />\r\n                </Fragment>\r\n              ))}\r\n              {faces.length > 10 ? \"...\" : \"\"}\r\n            </div>\r\n          </Tooltip>\r\n        }\r\n      >\r\n        <span className=\"ms-1\">\r\n          and {numLikes} other{numLikes === 1 ? \"\" : \"s\"}\r\n        </span>\r\n      </OverlayTrigger>\r\n    ) : (\r\n      \"\"\r\n    )}\r\n  </>\r\n);\r\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/jgdev.near/widget/gigs-board.components.layout.LikeButton.Faces", "fact_widget_deployments_id": "e0f08dde9deea85e36d201cccd21b39a", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 26}