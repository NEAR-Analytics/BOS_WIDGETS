{"tx_hash": "EyTHyki9iHwhFVeo5P7r6z2wMYXR1Y6FuUVUbcq4k2Y8", "action_id_social": "D2m8gGhhtGdo3e3ZornfZF6ckxb34ASzTvuawN1TphJg-0-widget", "block_id": 97101678, "block_timestamp": "2023-07-22T23:02:35.235Z", "signer_id": "4ac12ee4ebd5536d7b130a9c5f8eebb1136145312c9e523289bf346268aeebfd", "widget_name": "Merchant.view", "source_code": "const USER = \"4ac12ee4ebd5536d7b130a9c5f8eebb1136145312c9e523289bf346268aeebfd\";\n\nconst factoryAddress = props.factory;\nconst Container = styled.div`\n    background-color: #1c1f2a;\n    padding: 2rem 2rem\n`;\n\nState.init({\n  collections: [],\n});\n\nconst collectionABI = fetch(\n  \"https://raw.githubusercontent.com/knwtechs/subscript.io-contracts/main/artifacts/contracts/SubscriptionsCollection.sol/SubscriptionsCollection.json\"\n);\nif (!collectionABI.ok) {\n  return \"Contract unavailable.\";\n}\n\nconst factoryABI = fetch(\n  \"https://raw.githubusercontent.com/knwtechs/subscript.io-contracts/main/artifacts/contracts/SubscriptionsFactory.sol/SubscriptionsFactory.json\"\n);\nif (!factoryABI.ok) {\n  return \"Contract unavailable.\";\n}\n\nif (!Ethers.provider()) {\n  return (\n    <div class=\"row d-flex justify-content-center pt-4\">\n      <div class=\"col-8 col-md-4 text-center\">\n        <Web3Connect connectLabel=\"Connect with Web3\" />\n      </div>\n    </div>\n  );\n}\n\nconst subscriptionsFactoryContract = new ethers.Contract(\n  factoryAddress,\n  JSON.parse(factoryABI.body)[\"abi\"],\n  Ethers.provider().getSigner()\n);\n\nconst getMerchantCollections = (merchant) => {\n  const filter = {\n    address: factoryAddress,\n    topics: [\n      ethers.utils.id(\n        \"NewCollectionCreated(string,address,uint256[],int256[],uint256,address,string,uint256)\"\n      ),\n      null,\n      ethers.utils.hexZeroPad(ethers.utils.getAddress(merchant), 32),\n    ],\n    fromBlock: 0,\n    toBlock: \"latest\",\n  };\n  Ethers.provider()\n    .getLogs(filter)\n    .then((logs) => {\n      const collections = [];\n      for (let i = 0; i < logs.length; i++) {\n        console.log(subscriptionsFactoryContract.interface.parseLog(logs[i]));\n        const collectionAddress =\n          subscriptionsFactoryContract.interface.parseLog(logs[i]).args[1];\n        console.log(\"collectionAddress: \", collectionAddress);\n        collections.push(collectionAddress);\n      }\n      State.update({ collections: collections });\n      console.log(collections);\n    })\n    .catch((err) => console.log(err));\n};\n\nif (Ethers.provider()) {\n  getMerchantCollections(props.merchant);\n} else return <Web3Connect connectLabel=\"Connect with Web3\" />;\n\nreturn (\n  <Container>\n    <div class=\"table-responsive\">\n      <table class=\"table\">\n        <thead>\n          <tr>\n            <th scope=\"col\" class=\"text-white\">\n              Icon\n            </th>\n            <th scope=\"col\" class=\"text-white\">\n              Name\n            </th>\n            <th scope=\"col\" class=\"text-white\">\n              Supply\n            </th>\n            <th scope=\"col\" class=\"text-white\">\n              Max Supply\n            </th>\n            <th scope=\"col\" class=\"text-white\">\n              Price\n            </th>\n            <th scope=\"col\" class=\"text-white\">\n              Total earnings\n            </th>\n            <th scope=\"col\" class=\"text-white\">\n              Date created\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {state.collections.map((e) => (\n            <Widget\n              src={`${USER}/widget/Merchant.info`}\n              props={{\n                collectionAddress: e,\n                abi: JSON.parse(collectionABI.body)[\"abi\"],\n              }}\n            />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  </Container>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/4ac12ee4ebd5536d7b130a9c5f8eebb1136145312c9e523289bf346268aeebfd/widget/Merchant.view", "fact_widget_deployments_id": "1aaa423272b3289da0336e3780b0c665", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 4}