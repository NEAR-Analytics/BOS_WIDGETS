{"tx_hash": "9AbQVmgqpYogdjTPCmt1gG8ZQq9zDRrwBdQ1kaU6CYnp", "action_id_social": "Az9qy8BM9MQYsh8gQVLTCMh8r9vjh4fRPi46mpPLA5Q1-0-widget", "block_id": 97068576, "block_timestamp": "2023-07-22T12:33:13.603Z", "signer_id": "4ac12ee4ebd5536d7b130a9c5f8eebb1136145312c9e523289bf346268aeebfd", "widget_name": "Merchant.create", "source_code": "// STYLED\nconst APP_TITLE = \"SubScript.io\";\nconst USER = \"4ac12ee4ebd5536d7b130a9c5f8eebb1136145312c9e523289bf346268aeebfd\";\n\nconst Box = styled.div`\ndisplay: flex;\nflex-direction: row;\njustify-content: flex-start;\nalign-items: center;\ngap: 0.5em;\n\n\nbutton {\nborder: none;\nbackground: none;\npadding: 0;\nwidth: 1.5em;\nheight: 1.5em;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nborder: 1.5px solid #a8acb3;\ntransition: background 200ms ease-out;\noutline: none!important;\n\n\n&[data-state=\"checked\"] {\nbackground: #a59bdb;\n}\n}\n`;\n\nconst Container = styled.div`\nmin-height: 100vh;\nbackground-color: #1c1f2a;\n`;\n\nconst Heading = styled.h1`\ntext-align: center;\ncolor: #8f73ff;\nfont-weight: 700;\nfont-size: 24pt;\nletter-spacing: 3pt;\ntext-transform: uppercase;\ndisplay: flex;\njustify-content: center;\npadding-top: 10px\n`;\n\nconst MainCard = styled.div`\nborder: 2px solid rgba(255,255,255,.7);\nborder-radius: 25px;\nbackground-color: #1c1f2a;\npadding: 2rem;\nwidth: 32rem\n`;\n\n// CHECK FOR SEPOLIA NETWORK\nif (\n  state.chainId === undefined &&\n  ethers !== undefined &&\n  Ethers.send(\"eth_requestAccounts\", [])[0]\n) {\n  Ethers.provider()\n    .getNetwork()\n    .then((chainIdData) => {\n      if (chainIdData?.chainId) {\n        State.update({ chainId: chainIdData.chainId });\n      }\n    });\n}\nif (state.chainId !== undefined && state.chainId !== 11155111) {\n  return <p>Switch to Sepolia</p>;\n}\n\n// CHECK FOR WALLET CONNECTION\nif (state.sender === undefined) {\n  const accounts = Ethers.send(\"eth_requestAccounts\", []);\n  if (accounts.length) {\n    State.update({ sender: accounts[0] });\n  }\n}\n\n// FETCH SENDER BALANCE\nif (state.balance === undefined && state.sender) {\n  Ethers.provider()\n    .getBalance(state.sender)\n    .then((balance) => {\n      State.update({ balance: Big(balance).div(Big(10).pow(18)).toFixed(2) });\n    });\n}\n\n// CONTRACT INSTANCE\nif (Ethers.provider()) {\n  const contractAddress = \"0x1A1F1D20C404D9C2399a56166256d25fe3e2A93D\";\n  const factoryABI = fetch(\n    \"https://raw.githubusercontent.com/knwtechs/subscript.io-contracts/main/artifacts/contracts/SubscriptionsFactory.sol/SubscriptionsFactory.json\"\n  );\n  if (!factoryABI.ok) {\n    return \"Contract unavailable.\";\n  }\n  const subscriptionsFactoryContract = new ethers.Contract(\n    contractAddress,\n    JSON.parse(factoryABI.body)[\"abi\"],\n    Ethers.provider().getSigner()\n  );\n} //else return <Widget src={`${USER}/widget/Common.menu`} />;\n\n// INIT STATE\nState.init({\n  product_name,\n  timeframe,\n  uri,\n  startTimestamp,\n  price: 0,\n  usdPrice: 0,\n  supply: -1,\n  cap_supply: false,\n});\n\nif (!state.supply) {\n  State.update({ supply: -1 });\n}\n\nif (!state.cap_supply) {\n  State.update({ cap_supply: false });\n}\n\n// PRODUCT NAME\nconst onNameChange = ({ target }) => {\n  State.update({ product_name: target.value });\n};\nconst validateName = () => {\n  return state.product_name.length > 0;\n};\n\n// TIMEFRAME\nconst onTimeframeChange = ({ target }) => {\n  State.update({ timeframe: target.value });\n};\nconst validateTimeframe = () => {\n  return state.timeframe >= 1;\n};\n\n// URI\nconst onUriChange = ({ target }) => {\n  State.update({ uri: target.value });\n};\nconst validateUri = () => {\n  return state.uri.length > 0;\n};\n\n// START TIMESTAMP\nconst onStartTimestampChange = ({ target }) => {\n  console.log(target.value);\n  State.update({ startTimestamp: target.value });\n};\nconst validateStartTimestamp = () => {\n  const timestamp = new Date(state.startTimestamp).getTime();\n  return timestamp >= 0;\n};\n\n// PRICE\nconst onPriceChange = ({ target }) => {\n  State.update({\n    price: target.value,\n    usdPrice: (target.value * state.ethusd).toFixed(2),\n  });\n};\nconst validatePrice = () => {\n  return state.price > 0;\n};\n\n// SUPPLY\nconst onCheckboxChange = (checked) => {\n  State.update({ cap_supply: checked, supply: checked ? 5000 : -1 });\n};\nconst onSupplyChange = ({ target }) => {\n  State.update({ supply: target.value });\n};\nconst validateSupply = () => {\n  return state.supply >= -1;\n};\n\nconst isFormValid = () => {\n  console.log({\n    name: state.product_name,\n    price: state.price,\n    timeframe: state.timeframe,\n    uri: state.uri,\n    cap_supply: state.cap_supply,\n    supply: state.supply,\n    sender: state.sender,\n  });\n\n  return (\n    (state.product_name.length > 0 &&\n      state.price > 0 &&\n      state.timeframe > 0 &&\n      state.uri.length > 0 &&\n      state.sender.length > 0 &&\n      state.cap_supply &&\n      state.supply >= -1) ||\n    (!state.cap_supply && state.supply == -1)\n  );\n};\n\n// CONTRACT INTERACTION\nconst createCollection = async () => {\n  if (isFormValid()) {\n    console.log(\"form valid, performing contract call.\");\n    const amount = Big(state.price).mul(Big(10).pow(18)).toString();\n    const start = Big(\n      Math.floor(new Date(state.startTimestamp).getTime() / 1000)\n    ).toString();\n    const frame = Big(state.timeframe).mul(86400).toString();\n    console.log(\"Amount: \", amount);\n    console.log(\"Start: \", start);\n    console.log(\"Frame: \", frame);\n\n    subscriptionsFactoryContract\n      .createCollection(\n        state.product_name,\n        [amount],\n        [Big(state.supply).toString()],\n        frame,\n        state.sender,\n        state.uri,\n        start\n      )\n      .sendTransaction()\n      .then((transactionHash) => {\n        console.log(\"transactionHash is \" + transactionHash);\n      })\n      .catch(function (err) {\n        console.log(err);\n      });\n  } else {\n    console.log(\"form not ready\");\n  }\n};\n\n// ETH/USD PRICE\nconst cg_ethusd = fetch(\n  \"https://api.coingecko.com/api/v3/simple/price?ids=ethereum&vs_currencies=usd\"\n);\nif (!cg_ethusd.ok) {\n  /*return (\n    <Widget\n      src={`${USER}/widget/Common.error`}\n      props={{ message: `PRICE_API ${cg_ethusd.error}` }}\n    />\n  );\n  */\n  if (!state.ethusd) {\n    State.update({ ethusd: 1800 });\n  }\n} else {\n  if (!state.ethusd) {\n    State.update({ ethusd: cg_ethusd[\"ethereum\"][\"usd\"] });\n  }\n}\n\nconst css = fetch(\n  \"https://cdn.jsdelivr.net/npm/bootstrap@4.4.1/dist/css/bootstrap.min.css\"\n);\nif (!css.ok)\n  return (\n    <Widget\n      src={`${USER}/widget/Common.error`}\n      props={{ message: `CSS_FETCH ${css.error}` }}\n    />\n  );\n\nif (!state.theme) {\n  State.update({\n    theme: styled.div`\n${css.body}\n`,\n  });\n}\nconst Theme = state.theme;\n\nreturn (\n  <Theme>\n    {/*<Widget src={`${USER}/widget/Common.menu`} />*/}\n    <Container>\n      <div class=\"row d-flex justify-content-center w-100\">\n        <Heading class=\"my-5\">{APP_TITLE}</Heading>\n        <p class=\"text-light text-center font-italic\">\n          Handling subscriptions with ERC-1155 it&apos;s never been that easy.\n        </p>\n      </div>\n      <div class=\"row d-flex justify-content-center\">\n        <MainCard onSubmit={handleSubmit}>\n          <div class=\"row d-flex justify-content-center\">\n            <div class=\"col\">\n              <h2 class=\"text-white text-center\">Create a new product</h2>\n            </div>\n          </div>\n          {/* PRODUCT NAME */}\n          <div class=\"row d-flex justify-content-center\">\n            <div class=\"col-12\">\n              <div class=\"form-group\">\n                <label for=\"product_name\" class=\"text-white\">\n                  Product Name\n                </label>\n                <input\n                  type=\"text\"\n                  value={state.product_name}\n                  onChange={onNameChange}\n                  class=\"form-control\"\n                  id=\"product_name\"\n                  placeholder=\"Netflix\"\n                  active={\n                    !state.product_name\n                      ? \"blank\"\n                      : validateName()\n                      ? \"valid\"\n                      : \"invalid\"\n                  }\n                />\n              </div>\n            </div>\n          </div>\n          {/* PRODUCT PRICE + TIMEFRAME */}\n          <div class=\"row d-flex justify-content-center\">\n            <div class=\"col-6\">\n              <div class=\"form-group\">\n                <label for=\"price\" class=\"text-white\">\n                  Recurrent price\n                </label>\n\n                <div class=\"input-group mb-3\">\n                  <div class=\"input-group-prepend\">\n                    <span class=\"input-group-text\" id=\"basic-addon1\">\n                      \u039e\n                    </span>\n                  </div>\n                  <input\n                    type=\"number\"\n                    class=\"form-control\"\n                    value={state.price}\n                    onChange={onPriceChange}\n                    id=\"price\"\n                    placeholder=\"0.011\"\n                    active={\n                      !state.price\n                        ? \"blank\"\n                        : validatePrice()\n                        ? \"valid\"\n                        : \"invalid\"\n                    }\n                  />\n                  <div class=\"input-group-append\">\n                    <span class=\"input-group-text\">{state.usdPrice} $</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"col-6\">\n              <div class=\"form-group\">\n                <label for=\"timeframe\" class=\"text-white\">\n                  Billing period\n                </label>\n                <div class=\"input-group mb-3\">\n                  <input\n                    type=\"number\"\n                    class=\"form-control\"\n                    value={state.timeframe}\n                    onChange={onTimeframeChange}\n                    step={1}\n                    id=\"timeframe\"\n                    placeholder=\"30\"\n                    active={\n                      !state.price\n                        ? \"blank\"\n                        : validateTimeframe()\n                        ? \"valid\"\n                        : \"invalid\"\n                    }\n                  />\n                  <div class=\"input-group-append\">\n                    <span class=\"input-group-text\" id=\"basic-addon1\">\n                      Days\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* URI */}\n          <div class=\"row d-flex justify-content-center\">\n            <div class=\"col-12\">\n              <div class=\"form-group\">\n                <label for=\"uri\" class=\"text-white\">\n                  Metadata URI\n                </label>\n                <input\n                  type=\"text\"\n                  class=\"form-control\"\n                  value={state.uri}\n                  onChange={onUriChange}\n                  id=\"uri\"\n                  name=\"uri\"\n                  placeholder=\"https://cloudflare-ipfs.com/ipfs/QmXoypizjW3WknFiJnKLwHCnL72vedxjQkDDP1mXWo6uco/w\"\n                  active={\n                    !state.uri ? \"blank\" : validateUri() ? \"valid\" : \"invalid\"\n                  }\n                />\n              </div>\n            </div>\n          </div>\n          {/* START TIMESTAMP */}\n          <div class=\"row d-flex justify-content-center\">\n            <div class=\"col-12\">\n              <div class=\"form-group\">\n                <label for=\"startTimestamp\" class=\"text-white\">\n                  Mint starts at\n                </label>\n                <input\n                  type=\"datetime-local\"\n                  class=\"form-control\"\n                  value={state.startTimestamp}\n                  onChange={onStartTimestampChange}\n                  id=\"startTimestamp\"\n                  active={\n                    !state.startTimestamp\n                      ? \"blank\"\n                      : validateStartTimestamp()\n                      ? \"valid\"\n                      : \"invalid\"\n                  }\n                />\n              </div>\n            </div>\n          </div>\n\n          {/* SUPPLY CHECKBOX */}\n          <div class=\"row d-flex justify-content-center\">\n            <div class=\"col-12\">\n              <div class=\"form-check px-0\">\n                <Box>\n                  <Checkbox.Root\n                    checked={state.cap_supply}\n                    onCheckedChange={onCheckboxChange}\n                    id={\"cap_supply_checkbox\"}\n                  >\n                    <Checkbox.Indicator>\n                      <svg\n                        width=\"20\"\n                        height=\"20\"\n                        viewBox=\"0 0 15 15\"\n                        fill=\"none\"\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                      >\n                        <path\n                          d=\"M11.4669 3.72684C11.7558 3.91574 11.8369 4.30308 11.648 4.59198L7.39799 11.092C7.29783 11.2452 7.13556 11.3467 6.95402 11.3699C6.77247 11.3931 6.58989 11.3355 6.45446 11.2124L3.70446 8.71241C3.44905 8.48022 3.43023 8.08494 3.66242 7.82953C3.89461 7.57412 4.28989 7.55529 4.5453 7.78749L6.75292 9.79441L10.6018 3.90792C10.7907 3.61902 11.178 3.53795 11.4669 3.72684Z\"\n                          fill=\"currentColor\"\n                          fill-rule=\"evenodd\"\n                          clip-rule=\"evenodd\"\n                        ></path>\n                      </svg>\n                    </Checkbox.Indicator>\n                  </Checkbox.Root>\n                  <span htmlFor={\"cap_supply_checkbox\"} class=\"text-white\">\n                    I want to cap the token supply\n                  </span>\n                </Box>\n              </div>\n            </div>\n          </div>\n\n          {/* MAX SUPPLY */}\n          {state.cap_supply && (\n            <div class=\"row d-flex justify-content-center mt-2\">\n              <div class=\"col-12\">\n                <div class=\"form-group\">\n                  <input\n                    type=\"number\"\n                    value={state.supply}\n                    onChange={onSupplyChange}\n                    class=\"form-control\"\n                    id=\"supply\"\n                    placeholder=\"5000\"\n                    active={\n                      !state.supply\n                        ? \"blank\"\n                        : validateSupply()\n                        ? \"valid\"\n                        : \"invalid\"\n                    }\n                  />\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* SUBMIT */}\n          <div class=\"row d-flex justify-content-center mt-2\">\n            <div class=\"col-12 text-center\">\n              {state.sender ? (\n                <button\n                  class=\"btn btn-secondary btn-block\"\n                  style={{ fontWeight: 500 }}\n                  type=\"submit\"\n                  onClick={createCollection}\n                  disabled={!isFormValid}\n                >\n                  Create Product\n                </button>\n              ) : (\n                <Web3Connect connectLabel=\"Connect with Web3\" />\n              )}\n            </div>\n          </div>\n        </MainCard>\n      </div>\n    </Container>\n    {/*<Widget src={`${USER}/widget/Common.footer`} />*/}\n  </Theme>\n);\n", "metadata": {"platform": "nearpad"}, "branch": {"draft": null}, "widget_modules_used": null, "widget_url": "https://near.social/#/4ac12ee4ebd5536d7b130a9c5f8eebb1136145312c9e523289bf346268aeebfd/widget/Merchant.create", "fact_widget_deployments_id": "96fd7aab436e4f36b609c81dc8207bf9", "inserted_timestamp": "2000-01-01T00:00:00.000Z", "modified_timestamp": "2000-01-01T00:00:00.000Z", "__row_index": 0}