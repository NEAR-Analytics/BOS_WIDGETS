{"tx_hash": "3ZvNkXZQCofCYyNev7oVff2CPReSPPmBukn9yhj7SzX6", "action_id_social": "3ih4ebjzR5wtx2q8suKWYBX7gnM7HcZEKE5ivbXu8Bwu-0-widget", "block_id": 111893943, "block_timestamp": "2024-02-02T00:53:23.024Z", "signer_id": "mattlock.near", "widget_name": "bridge-ui", "source_code": "/*\n// the shape of props data\n{\n  \"isLoading\": true,\n  \"log\": \"The TX hash is: 0x2c5d223e47ecd9ac68fbdcd3eeb2bc4615ce6f7209d295104131c1440056497e Etherscan\",\n  \"explorerLink\": \"https://etherscan.io/tx/123\",\n  \"title\": \"zkBridge\",\n  \"deposit\": defaultDeposit,\n  \"withdraw\": defaultWithdraw,\n  \"amount\": \"0.1\"\n}\n*/\n\nconst defaultDeposit = {\n  network: {\n    id: \"l1\",\n    name: \"Ethereum\",\n  },\n  assets: [\n    {\n      id: \"eth\",\n      name: \"ETH\",\n      selected: true,\n      balance: \"0.00\",\n    },\n    {\n      id: \"usdc\",\n      name: \"USDC\",\n      selected: false,\n      balance: \"0.00\",\n    },\n  ],\n};\nconst defaultWithdraw = {\n  network: {\n    id: \"l2\",\n    name: \"zkSync Era\",\n  },\n  assets: [\n    {\n      id: \"eth\",\n      name: \"ETH\",\n      selected: false,\n      balance: \"0.00\",\n    },\n    {\n      id: \"usdc\",\n      name: \"USDC\",\n      selected: true,\n      balance: \"0.00\",\n    },\n  ],\n};\n\nconst {\n  deposit,\n  withdraw,\n  allWithdrawals,\n  allDeposits,\n  depositDisabled,\n  withdrawDisabled,\n  onTabChange,\n  onAction,\n  title,\n  isLoading,\n  log,\n  explorerLink,\n  tokens,\n  tab,\n  L1ExplorerLink,\n  L2ExplorerLink,\n} = props;\nif (!tokens) {\n  tokens = {\n    eth: {\n      icon: \"https://assets.coingecko.com/coins/images/279/standard/ethereum.png?1696501628\",\n      decimals: 18,\n    },\n    usdc: {\n      icon: \"https://assets.coingecko.com/coins/images/6319/standard/usdc.png?1696506694\",\n      decimals: 6,\n    },\n  };\n}\nif (!deposit) deposit = defaultDeposit;\nif (!withdraw) withdraw = defaultWithdraw;\nif (!allWithdrawals) allWithdrawals = [];\nif (!allDeposits) allDeposits = [];\nconst { action, amount } = state;\nconst { assets } = deposit;\nconst isDeposit = !action || action === \"deposit\";\nconst actionTitle = isDeposit ? \"Deposit\" : \"Withdraw\";\n\nif (assets && !state.selectedAsset) {\n  initState({\n    selectedAsset: assets.find((a) => a.selected) || assets?.[0],\n    isTokenListOpen: false,\n  });\n}\n\nconst selectedAsset = state.selectedAsset\n  ? assets?.find((a) => a.id === state.selectedAsset.id)\n  : undefined;\n\nconst selectedAssetWithdraw = state.selectedAsset\n  ? withdraw?.assets?.find((a) => a.id === state.selectedAsset.id)\n  : undefined;\n\nconst handleAction = () => {\n  if (onAction)\n    onAction({\n      networkId: deposit.network.id,\n      amount,\n      assetId: selectedAsset.id,\n      action: isDeposit ? \"deposit\" : \"withdraw\",\n    });\n};\n\nconst handleMax = () => {\n  State.update({ amount: selectedAsset.balance });\n};\n\nconst handleAmountChange = (e) => {\n  State.update({ amount: e.target.value });\n};\n\nconst handleAssetChange = (e) => {\n  State.update({ selectedAsset: assets?.find((a) => a.id === e.target.value) });\n};\n\nconst handleTabChange = (tab) => {\n  if (isDeposit && tab === \"deposit\") return;\n  if (!isDeposit && tab === \"withdraw\") return;\n  State.update({ action: tab, amount: 0 });\n  if (onTabChange) onTabChange(tab);\n};\n\nconst Theme = styled.div`\n  --bg-color: #181a27;\n  --border-color: #2c334b;\n  --label-color: #82a7ff;\n  --chain-name-color: #fff;\n  --input-border-color: #332c4b;\n  --button-color: #004bfc;\n  --button-text-color: #fff;\n  --thirdary-text-color: #7c7f96;\n  --arrow-color: #82a7ff;\n  --swap-icon-color: #787da1;\n  --tx-button-color: #64b5ff;\n  --processing-color: #979abe;\n  --success-color: #1abd00;\n  --dialog-bg-color: #373a53;\n  --dialog-info-color: #ff61d3;\n  --token-list-hover-color: rgba(24, 26, 39, 0.3);\n\n\n    max-width: 400px;\n    width: 100%;\n    margin: 0 auto;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    padding-top: 1rem;\n    border-radius: 0.5rem;\n    border: 1px solid var(--border-color);\n    margin-top: 1rem;\n    background: var(--bg-color);\n    color: white;\n\n  .tokens {\n    .selected {\n      position: relative;\n      min-width: 108px;\n    }\n    .token-list {\n      min-width: 108px;\n      position: absolute;\n      top: 8px;\n      left: 8px;\n    }\n    .token-row {\n      display: flex;\n      align-items: center;\n      padding: 8px;\n      > img {\n        width: 32px;\n        margin-right: 8px;\n      }\n      &:hover {\n        border-color: var(--bs-btn-active-bg);\n        background-color: var(--dialog-bg-color);\n        border-radius: 8px;\n      }\n      &:nth-child(2) {\n        margin-top: 16px;\n      }\n    }\n    .selected, .token-list {\n      background: var(--bg-color);\n      border: 1px solid var(--border-color);\n      border-radius: 8px;\n    }\n  }\n\n\n    * {\n        font-family: 'Inter custom',sans-serif;\n    }\n\n    .title {\n      margin-top: 8px;\n    }\n\n    .actionTabs {\n      background-color: var(--bs-btn-active-bg);\n      border: 1px solid var(--border-color);\n      height: 38px;\n\n      input:checked + label {\n        color: var(--button-text-color);\n      }\n    }\n\n    button {\n      border: 1px solid var(--border-color);\n      color: var(--button-text-color);\n      background-color: var(--bs-btn-active-bg) !important;\n      &:hover {\n        background-color: var(--border-color) !important;\n      }\n    }\n\n    .action {\n      background: black;\n      color: white;\n    }\n\n    .balance {\n      input {\n        height: 48px;\n        padding: 8px;\n        background: var(--bg-color);\n        color: white;\n        border: 1px solid var(--border-color);\n      }\n    }\n\n    .assets {\n      select {\n        background: #f5f6fd;\n        color: black;\n      }\n    }\n\n    .alert {\n      word-break: break-word;\n      background-color: var(--dialog-bg-color);\n      color: white;\n      border-color: rgb(13, 110, 253);\n    }\n\n    .tx-list {\n      max-height: 94px;\n      overflow: hidden;\n      overflow-y: scroll;\n    }\n`;\n\nconst renderTxLink = (tx) => {\n  if (L1ExplorerLink || L2ExplorerLink) {\n    return tab === \"deposit\" ? L1ExplorerLink + tx : L2ExplorerLink + tx;\n  }\n  const isZk =\n    chainId === ZKSYNC_CHAIN_ID || chainId === ZKSYNC_GOERLI_CHAIN_ID;\n  return (\n    <a\n      href={`https://${\n        network === \"testnet\" ? \"goerli.\" : \"\"\n      }explorer.zksync.io/tx/${tx}`}\n      target=\"_blank\"\n    >\n      {tx.substring(0, 6)} ... {tx.substring(tx.length - 4)}\n    </a>\n  );\n};\n\nconst renderTx = (tx, i) => {\n  const { transactionHash: h, finalized, isEth } = tx;\n  return (\n    <>\n      <p style={{ textAlign: \"left\" }}>\n        {isEth ? \"ETH \" : \"USDC\"}\n        {renderTxLink(h)}\n        {typeof finalized === \"boolean\" && (\n          <>\n            <span>{finalized ? \"(finalized)\" : \"(not finalized)\"}</span>\n            {!finalized && false && (\n              <p style={{ marginTop: 16 }}>\n                <button onClick={() => handleFinalizeEthWithdrawal(i)}>\n                  Finalize\n                </button>\n              </p>\n            )}\n          </>\n        )}\n      </p>\n    </>\n  );\n};\n\n// console.log(\"deposit\", deposit);\n// console.log(\"withdraw\", withdraw);\n// console.log(\"selectedAsset\", selectedAsset);\n// console.log(\"selectedAssetWithdraw\", selectedAssetWithdraw);\n\nconst actionDisabled =\n  isLoading ||\n  (actionTitle === \"Deposit\" && depositDisabled) ||\n  (actionTitle === \"Withdraw\" && withdrawDisabled);\n\nconst { isTokenListOpen } = state;\n\nreturn (\n  <Theme>\n    <div className=\"d-flex gap-4 align-items-center mb-3 justify-content-center\">\n      <h5 className=\"title\">{title || \"Bridge\"}</h5>\n      <div className=\"actionTabs btn-group\" role=\"group\" aria-label=\"Deposit\">\n        <input\n          id=\"deposit\"\n          type=\"radio\"\n          className=\"btn-check\"\n          name=\"btnradioaction\"\n          autocomplete=\"off\"\n          checked={isDeposit}\n          onClick={() => handleTabChange(\"deposit\")}\n        />\n        <label className=\"btn btn-outline-primary\" for=\"deposit\">\n          Deposit\n        </label>\n        <input\n          id=\"withdraw\"\n          type=\"radio\"\n          className=\"btn-check\"\n          name=\"btnradioaction\"\n          autocomplete=\"off\"\n          checked={!isDeposit}\n          onClick={() => handleTabChange(\"withdraw\")}\n        />\n        <label className=\"btn btn-outline-primary\" for=\"withdraw\">\n          Withdraw\n        </label>\n      </div>\n    </div>\n    <div className=\"border border-secondary border-bottom-0 border-light\" />\n\n    <div className=\"p-4\">\n      <div className=\"d-flex justify-content-between\">\n        <div className=\"assets d-flex flex-column gap-2\">\n          <span>{deposit.network.name}</span>\n          <div className=\"tokens\">\n            <div className=\"selected\">\n              {selectedAsset && (\n                <div\n                  className=\"token-row\"\n                  onClick={() => {\n                    State.update({\n                      isTokenListOpen: !isTokenListOpen,\n                    });\n                  }}\n                >\n                  <img src={tokens[selectedAsset.id].icon} />\n                  <div>{selectedAsset.name}</div>\n                </div>\n              )}\n              {isTokenListOpen && (\n                <div className=\"token-list\">\n                  {assets &&\n                    assets.map((asset) => (\n                      <div\n                        className=\"token-row\"\n                        onClick={() => {\n                          State.update({\n                            selectedAsset: asset,\n                            isTokenListOpen: false,\n                          });\n                        }}\n                      >\n                        <img src={tokens[asset.id].icon} />\n                        <div>{asset.name}</div>\n                      </div>\n                    ))}\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n        <div className=\"d-flex flex-column gap-2\">\n          <div className=\"d-flex justify-content-between\">\n            <span>Balance: {selectedAsset.balance}</span>\n          </div>\n          <div className=\"balance input-group\">\n            <input\n              style={{ maxWidth: \"120px\" }}\n              type=\"number\"\n              min=\"0\"\n              step=\"0.1\"\n              defaultValue={props.amount}\n              value={amount}\n              placeholder=\"0.00\"\n              onChange={handleAmountChange}\n            />\n            <button onClick={handleMax}>max</button>\n          </div>\n        </div>\n      </div>\n    </div>\n    {false && (\n      <>\n        <div className=\"border border-secondary border-bottom-0 border-light\" />\n        <div className=\"p-4\">\n          <div>\n            Balance on {withdraw.network.name}: {selectedAssetWithdraw.balance}\n          </div>\n        </div>\n      </>\n    )}\n    <div className=\"border border-secondary border-bottom-0 border-light\" />\n    <div className=\"p-4 d-grid gap-3\">\n      <button\n        className=\"action btn btn-primary\"\n        onClick={handleAction}\n        disabled={actionDisabled}\n      >\n        {isLoading ? \"Loading...\" : actionTitle}\n      </button>\n      {log && (\n        <div className=\"alert\" role=\"alert\">\n          <div>{log}</div>\n          {explorerLink && (\n            <a href={explorerLink} className=\"alert-link\" target=\"_blank\">\n              Block Explorer Link\n            </a>\n          )}\n        </div>\n      )}\n    </div>\n    <div className=\"border border-secondary border-bottom-0 border-light\" />\n    <div className=\"p-4 d-grid gap-3\">\n      <div>\n        <h4 style={{ marginTop: 16 }}>Withdrawals: {allWithdrawals.length}</h4>\n        <div className=\"tx-list\">{allWithdrawals.map(renderTx)}</div>\n        <h4 style={{ marginTop: 16 }}>Deposits: {allDeposits.length}</h4>\n        <div className=\"tx-list\">{allDeposits.map(renderTx)}</div>\n      </div>\n    </div>\n  </Theme>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/mattlock.near/widget/bridge-ui", "fact_widget_deployments_id": "2448b3378d07be4aa0485d8bfeff9c36", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 19}