{"tx_hash": "8uCGUMiys2YCDptuYLFCv5QUYRcbP8tSPhtSbLAoVsTN", "action_id_social": "5mbEffREdrJnVjnBqNye6NnNqcfeH4mJqKF6v68KLawA-0-widget", "block_id": 105324117, "block_timestamp": "2023-11-09T21:52:13.366Z", "signer_id": "refoundonbos.near", "widget_name": "create.post.form", "source_code": "const { handleCreateProject, defaultProject, buttonChildren, buttonProps } =\n  props;\n\nState.init({\n  error: undefined,\n  project: defaultProject ?? {\n    logo: undefined,\n    title: undefined,\n    description: undefined,\n    tags: [],\n  },\n});\n\nconst update = (k, v) => State.update({ [k]: v });\nconst updateP = (k, v) => update(\"project\", { ...state.project, [k]: v });\n\nconst beforeHandleCreateProject = () => {\n  update(\"error\", undefined);\n  if (!state.project.title) {\n    update(\"error\", \"Title is required\");\n  }\n  if (!state.error) {\n    handleCreateProject(state.project);\n  }\n};\n\nconst IT = \"nearui.near/widget/Input.ExperimentalText\";\nconst SI = \"nearui.near/widget/Social.ImageUpload\";\nconst IB = \"nearui.near/widget/Input.Button\";\nreturn (\n  <div className=\"p-4 bg-white rounded-4 row\">\n    <div className=\"d-flex flex-column gap-3 col\">\n      <h3>{buttonChildren}</h3>\n      <h6 className=\"mb-0\">Images(Up To 5)</h6>\n      {state.project.image && (\n        <img src={state.project.image} alt=\"\" height={100} width={100} />\n      )}\n      <Widget\n        src={SI}\n        props={{\n          onChange: (v) => updateP(\"image\", v),\n          value: state.project.image,\n        }}\n      />\n\n      <Widget\n        src={IT}\n        props={{\n          label: \"Title\",\n          placeholder: \"My project\",\n          inputProps: {\n            defaultValue: state.project.title,\n          },\n          onChange: (v) => updateP(\"title\", v),\n        }}\n      />\n\n      <Widget\n        src={IT}\n        props={{\n          label: \"Location\",\n          placeholder: \"\",\n          inputProps: {\n            defaultValue: state.project.location,\n          },\n          onChange: (v) => updateP(\"location\", v),\n        }}\n      />\n\n      <Widget\n        src={IT}\n        props={{\n          label: \"Tags\",\n          placeholder: \"Separate with commas\",\n          inputProps: {\n            defaultValue: state.project.tags.join(\", \"),\n          },\n          onChange: (v) =>\n            updateP(\n              \"tags\",\n              (v || \"\")\n                .split(\",\")\n                .filter((v) => v !== \"\")\n                .map((v) => v.trim())\n            ),\n        }}\n      />\n\n      <Widget\n        src={IT}\n        props={{\n          label: \"Pricing\",\n          placeholder: \"\",\n          inputProps: {\n            defaultValue: state.project.pricing,\n          },\n          onChange: (v) => updateP(\"pricing\", v),\n        }}\n      />\n    </div>\n    <div className=\"d-flex flex-column gap-2 col\">\n      <br></br>\n      <button>Take a Photo</button>\n      <Widget\n        src={IT}\n        props={{\n          label: \"Description\",\n          placeholder: \"Describe your project\",\n          textarea: true,\n          inputProps: {\n            defaultValue: state.project.description,\n          },\n          onChange: (v) => updateP(\"description\", v),\n        }}\n      />\n\n      <Widget\n        src={IT}\n        props={{\n          label: \"Date Taken\",\n          placeholder: \"\",\n          inputProps: {\n            defaultValue: state.project.dateTaken,\n          },\n          onChange: (v) => updateP(\"dateTaken\", v),\n        }}\n      />\n      <div className=\"row\">\n        <div className=\"col\">\n          <Widget\n            src={IB}\n            props={{\n              children: buttonChildren ?? \"Cancel\",\n              variant: \"alert\",\n              onClick: () => beforeHandleCreateProject(),\n            }}\n          />\n        </div>\n        <div className=\"col\">\n          {/* <Widget\n            src={IB}\n            props={{\n              children: buttonChildren ?? \"Create Project\",\n              variant: \"success\",\n              onClick: () => beforeHandleCreateProject(),\n            }}\n          /> */}\n          <Link href=\"https://near.org/refoundonbos.near/widget/create.post.success\">\n            <button>Create Project</button>\n          </Link>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/refoundonbos.near/widget/create.post.form", "fact_widget_deployments_id": "d984ac3f6d0f2d992ba9da506f45db02", "inserted_timestamp": "2023-11-09T23:43:56.239Z", "modified_timestamp": "2023-11-09T23:43:56.239Z", "__row_index": 6}