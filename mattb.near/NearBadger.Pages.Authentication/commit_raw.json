{"tx_hash": "G6v2HjbrSKPhuE4bYYFyJqkoN8ZtdrZLvuNNvt9qP6Gj", "action_id_social": "3BmfrW2iUnWkriA8hHxoxHvrreAMftaSHDXRDdNdZV2K-0-widget", "block_id": 112778817, "block_timestamp": "2024-02-14T00:15:45.131Z", "signer_id": "mattb.near", "widget_name": "NearBadger.Pages.Authentication", "source_code": "const { accountId } = props;\n\nconst NEARBADGER_VERIFIERS_API = \"https://api.nearbadger.vercel.app/\";\nconst VERIFY_PLATFORM_ENDPOINT = \"verify\";\nconst CHALLENGE_ENDPONT = \"challenge\";\nconst LOGO_URL =\n  \"https://ipfs.near.social/ipfs/bafkreiagecke7lqgrdbzraafedvei47zshhtptelx5n2j4lldetm5or26q\";\nconst LENS_LOGO_URL =\n  \"https://ipfs.near.social/ipfs/bafkreiggkmczb7v43nicdia4n7xqkgynopby5k3nxs3zj6fij5eeurh23i\";\nconst FARCASTER_LOGO_URL =\n  \"https://ipfs.near.social/ipfs/bafkreia2gbtoqi6ysk2grk3v3n2qkwgfjogml5icntyp5ykdij6q457lay\";\nconst FARCASTER_BLACK_LOGO_URL = \"https://ipfs.near.social/ipfs/bafkreif2ff55fa77acvcclxlccsidhyz5sos3abs5yln7daotbp35nwa7a\";\n\nconst [platform, setPlatform] = useState(\"\");\n\nconst Main = styled.div`\n    display:flex;\n    align-items:center;\n    justify-content:center;\n    flex-direction:column;\n    width:100%;\n    height:100vh;\n`;\n\nconst Modal = styled.div`\n    display:flex;\n    align-items:center;\n    justify-content:center;\n    flex-direction:column;\n    border:1px solid rgba(0,0,0,.1);\n    border-radius:20px;\n    padding:5rem 2rem;\n`;\n\nconst Logo = styled.img`\n    max-width:80px;\n    margin-bottom:1rem;\n    opacity:.8;\n    + p {\n      margin-bottom:1.5rem;\n      font-size:.9rem;\n    }\n`;\n\nconst AuthButton = styled.div`\n    position:relative;\n    padding:.4rem .7rem .4rem 2.7rem;\n    border-radius:7px;\n    background-color:${({ background }) => `${background || \"#eaeaea\"}`};\n    font-size:.8rem;\n    font-weight:bold;\n    border:1px solid ${({ border }) => `${border || \"rgba(0,0,0,.05)\"}`};\n    color:${({ color }) => `${color || \"#000\"}`};\n    min-width:240px;\n    text-align:center;\n    cursor:pointer;\n    box-shadow: 0 0 0 0px rgba(0,0,0,.05);\n    transition: all .2s;\n\n    :not(:last-of-type) {\n        margin-bottom:10px;\n    }\n\n    :hover {\n        box-shadow: 0 0 0 3px rgba(0,0,0,.05);\n        transition: all .2s;\n    }\n    \n    .badge {\n      border-radius:0;\n      display:flex;\n      align-items:center;\n      justify-content:center;\n      height:100%;\n      position:absolute;\n      left:0;\n      top:0;\n      border-right:1px solid ${({ border }) =>\n        `${border || \"rgba(0,0,0,.05)\"}`};\n      padding:${({ padding }) => `${padding || \"0 7px\"}`};\n      min-width:40px;\n\n      img {\n        display:block;\n        position:relative;\n        padding:0;\n        margin:0;\n        left:0;\n        width:${({ badgeSize }) => `${badgeSize || \"20px\"}`};\n        pointer-events:none;\n      }\n    }\n`;\n\nconst Disclaimer = styled.p`\n    margin-top:20px;\n    max-width:300px;\n    font-size:.7rem;\n    text-align:center;\n`;\n\nconst Header = styled.h3`\n    display:flex;\n    align-items:center;\n    justify-content:center;\n    font-weight:bold;\n    margin-bottom:1.5rem;\n\n    img {\n        max-width:20px;\n        margin-right:5px;\n    }\n`;\n\nconst Step = styled.p`\n    display:flex;\n    align-items:center;\n    font-weight:bold;\n`;\n\nconst StepDescription = styled.div`\n    margin-bottom:2rem;\n    font-size:.8rem;\n\n    :last-of-type {\n        margin-bottom:2.5rem;\n    }\n\n    button {\n        align-self:center;\n        border-radius:50px;\n        font-weight:bold;\n        color:#000;\n        background-color:#F2F2F2;\n        border:1px solid rgba(0,0,0,.05);\n        padding:.3rem 1rem;\n        font-size:.8rem;\n        cursor:pointer;\n        transition: all .2s;\n        text-decoration:none!important;\n        margin-right:10px;\n        \n        :hover {\n            box-shadow: 0 0 0 3px rgba(0,0,0,.05);\n            transition: all .2s;\n            color:#000;\n        }\n    }\n`;\n\nconst FinishButton = styled.a`\n    align-self:center;\n    border-radius:50px;\n    font-weight:bold;\n    color:#000;\n    background-color:#F2F2F2;\n    border:1px solid rgba(0,0,0,.05);\n    padding:.8rem 2rem;\n    font-size:17px;\n    cursor:pointer;\n    transition: all .2s;\n    text-decoration:none!important;\n    margin-right:10px;\n    \n    :hover {\n        box-shadow: 0 0 0 3px rgba(0,0,0,.05);\n        transition: all .2s;\n        color:#000;\n    }\n`;\n\nconst AuthProcessWrapper = styled.div`\n    display:flex;\n    flex-direction:column;\n    width:100%;\n    justify-content:center;\n`;\n\nconst AuthMethods = () => {\n  return (\n    <>\n      <AuthButton onClick={() => setPlatform(\"lens\")}>\n        <span className=\"badge\">\n          <img src={LENS_LOGO_URL} width=\"100%\" />\n        </span>\n        Authenticate on Lens\n      </AuthButton>\n      <AuthButton\n        onClick={() => setPlatform(\"farcaster\")}\n        background=\"#8A63D1\"\n        color=\"#FFF\"\n        border=\"rgba(0,0,0,.15)\"\n        badgeSize=\"17px\"\n      >\n        <span className=\"badge\">\n          <img src={FARCASTER_LOGO_URL} width=\"100%\" />\n        </span>\n        Authenticate on Farcaster\n      </AuthButton>\n    </>\n  );\n};\n\nconst AuthProcess = ({ platform }) => {\n  const process = {\n    lens: (\n      <AuthProcessWrapper>\n        <Header>\n          <img src={LENS_LOGO_URL} width=\"100%\" />\n          Lens Protocol\n        </Header>\n        <Step>1. Connect your EVM wallet</Step>\n        <StepDescription>\n            <Web3Connect \n                connectLabel=\"Connect wallet\"\n                disconnectLabel=\"Disconnect wallet\"\n            />\n        </StepDescription>\n        <Step>2. Choose a profile</Step>\n        <StepDescription>\n            No profiles to show yet.\n        </StepDescription>\n        <Step>3. Sign a message</Step>\n        <StepDescription>\n            <button>Sign message</button>\n        </StepDescription>\n        <FinishButton>Finish</FinishButton>\n      </AuthProcessWrapper>\n    ),\n    farcaster: (\n      <AuthProcessWrapper>\n        <Header>\n          <img src={FARCASTER_BLACK_LOGO_URL} width=\"100%\" />\n          Farcaster\n        </Header>\n        <Step>1. Connect your EVM wallet</Step>\n        <StepDescription>\n            <Web3Connect \n                connectLabel=\"Connect wallet\"\n                disconnectLabel=\"Disconnect wallet\"\n            />\n        </StepDescription>\n        <Step>2. Choose a profile</Step>\n        <StepDescription>\n            No profiles to show yet.\n        </StepDescription>\n        <Step>3. Sign a message</Step>\n        <StepDescription>\n            <button>Sign message</button>\n        </StepDescription>\n        <FinishButton>Finish</FinishButton>\n      </AuthProcessWrapper>\n    ),\n  };\n\n  return process[platform] || <>Auth method not found</>;\n};\n\nreturn (\n  <Main>\n    <Modal>\n      <Logo src={LOGO_URL}></Logo>\n      <p>This app requires {accountId || \"you\"} to verify a profile</p>\n      {!platform && <AuthMethods />}\n      {platform && <AuthProcess platform={platform} />}\n\n      <Disclaimer>\n        Authenticating your account doesn't grant nearbadger write access to your\n        account\n      </Disclaimer>\n    </Modal>\n  </Main>\n);\n", "metadata": {"platform": "jutsu.ai"}, "branch": {"draft": null}, "widget_modules_used": null, "widget_url": "https://near.social/#/mattb.near/widget/NearBadger.Pages.Authentication", "fact_widget_deployments_id": "4b895653821d659efff11022441eb330", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 7}