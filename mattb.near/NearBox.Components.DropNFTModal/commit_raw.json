{"tx_hash": "BZNWTxZwgCK1TtSfz2AZqofUFkQpS2QbQ6P8nh92Bsq7", "action_id_social": "FmqfzxxYioC3jQifajX9nV4esRR4rjC44wz56r98KwtZ-0-widget", "block_id": 100985985, "block_timestamp": "2023-09-12T21:10:10.351Z", "signer_id": "mattb.near", "widget_name": "NearBox.Components.DropNFTModal", "source_code": "State.init({\n  step: 0,\n  nft: {\n    image: null,\n    name: \"\",\n    description: \"\",\n    to: \"\",\n    message: \"\",\n  },\n});\n\nconst DarkOverlay = styled.div`\n    display:flex;\n    align-items:center;\n    justify-content:center;\n    width:100%;\n    height:100vh;\n    background-color:rgba(0,0,0,.6);\n    backdrop-filter:blur(10px);\n    overflow-y:scroll;\n`;\n\nconst Box = styled.div`\n    position:relative;\n    width:100%;\n    max-width:500px;\n    border-radius:20px;\n    background-color:#fff;\n    box-shadow: 0 0 10px 10px rgba(0,0,0,.1);\n    padding:1.5rem;\n`;\n\nconst Title = styled.h1`\n    font-size:1.6rem;\n    font-weight:bold;\n    margin-bottom:1.5rem;\n`;\n\nconst Text = styled.p`\n\n`;\n\nconst ImageUploadCard = styled.div`\n    display:flex;\n    cursor:pointer;\n    flex-flow: column nowrap;\n    align-items: center;\n    justify-content:center;\n    width:100%;\n    height:100%;\n    max-width:300px;\n    max-height:300px;\n    border: 4px dashed rgba(0,0,0,.1);\n    border-radius: 1rem;\n    margin:30px auto;\n    padding:1.5rem;\n    text-align: center;\n    background:#fff;\n    transition: all .2s;\n\n    &:hover {\n        max-width:310px;\n        max-height:310px;\n        transform:scale(1.01);\n        transition: all .2s;\n        border-color:rgba(0,0,0,.3);\n    }\n`;\n\nconst Elipse = styled.div`\n  display:flex;\n  align-items:center;\n  justify-content:center;\n  border: 4px solid rgba(0,0,0,.1);\n  background:#fff;\n  height: 100px;\n  width: 100px;\n  border-radius: 20px;\n`;\n\nconst Controls = styled.div`\n    width:100%;\n    margin-top:2.5rem;\n`;\n\nconst StepButton = styled.button`\n    display:flex;\n    justify-content:center;\n    align-items:center;\n    width:100%;\n    height:50px;\n    background-color: #0178D4;\n    border:0;\n    font-weight:bold;\n    color:#fff;\n    margin-top:.5rem;\n    border-radius:5px;\n    font-size:.9rem;\n\n    :disabled {\n      opacity:.6;\n    }\n`;\n\nconst Input = styled.input`\n    width:100%;\n    border:0;\n    border-bottom: 1px solid rgba(0,0,0,.1);\n    padding:.2rem 0;\n    font-size:.8rem;\n    outline-style:none;\n    transition: all .2s;\n    \n    :not(:first-of-type) {\n      margin-top:1.5rem;\n    }\n\n    :placeholder {\n        font-size:.8rem;\n    }\n\n    :hover {\n        border-color: rgba(0,0,0,.2);\n        transition: all .2s;\n    }\n\n    :focus {\n        border-color: #0178D4;\n        transition: all .2s;\n    }\n`;\n\nconst Details = styled.div`\n  textarea {\n        width:100%;\n        height:200px;\n        border:0;\n        border-radius:10px;\n        resize:none;\n        box-sizing:border-box;\n        font-size:1.2rem;\n        outline-style:none;\n        margin-top:2rem;\n        border:1px solid rgba(0,0,0,.1);\n        padding:1rem;\n    }\n`;\n\nconst NFT = styled.div`\n  position:relative;\n  width:100%;\n  margin-bottom:2rem;\n  text-align:center;\n\n  img {\n      width:100%;\n      max-width:300px;\n      border-radius:.8rem;\n  }\n  .replace-btn {\n      position:absolute;\n      bottom:0;\n      right:0;\n\n      img {\n          display:none!important;\n      }\n\n  }\n`;\n\nlet steps = [\n  <>\n    <Title>Drop an NFT</Title>\n    <Text>\n      Thanks to GenaDrop, now you can mint an NFT on NEAR and automatically\n      notify the user straight in their inbox.\n    </Text>\n    <ImageUploadCard>\n      <Elipse>\n        <span\n          style={{\n            opacity: \".2\",\n            \"font-weight\": \"bold\",\n          }}\n        >\n          NFT\n        </span>\n      </Elipse>\n      <>\n        <IpfsImageUpload\n          image={state.nft.image}\n          className=\"btn text-decoration-none link-primary pe-auto\"\n        />\n        <div>\n          <Text>jpg, jpeg, png, webp, gif</Text>\n          <Text>\n            <strong>Max. 20MB</strong>\n          </Text>\n        </div>\n      </>\n    </ImageUploadCard>\n  </>,\n  <Details>\n    <Title>NFT Details</Title>\n\n    <NFT>\n      <img\n        src={`https://ipfs.near.social/ipfs/` + state.nft.image.cid}\n        alt=\"Uploaded Image\"\n      />\n      <div className=\"replace-btn\">\n        <IpfsImageUpload\n          image={state.nft.image}\n          className=\"btn text-decoration-none link-primary pe-auto\"\n        />\n      </div>\n    </NFT>\n    <Input\n      placeholder={\"Give your NFT a name\"}\n      value={state.nft.name}\n      onChange={(e) =>\n        State.update({\n          nft: {\n            ...state.nft,\n            name: e.target.value,\n          },\n        })\n      }\n    />\n    <Input\n      placeholder={\"Short description\"}\n      value={state.nft.description}\n      onChange={(e) =>\n        State.update({\n          nft: {\n            ...state.nft,\n            description: e.target.value,\n          },\n        })\n      }\n    />\n    <Input\n      placeholder={\"Send to account.near\"}\n      value={state.nft.to}\n      onChange={(e) =>\n        State.update({\n          nft: {\n            ...state.nft,\n            to: e.target.value,\n          },\n        })\n      }\n    />\n\n    <textarea\n      placeholder={\"Write a message\"}\n      value={state.nft.message}\n      onChange={(e) =>\n        State.update({\n          nft: {\n            ...state.nft,\n            message: e.target.value,\n          },\n        })\n      }\n    />\n  </Details>\n];\n\nreturn (\n  <DarkOverlay>\n    <Box>\n      {steps[state.step] ?? \"...\"}\n      <Controls>\n        {steps[state.step + 1] && (\n          <StepButton onClick={() => State.update({ step: state.step + 1 })}>\n            Next\n          </StepButton>\n        )}\n        {steps[state.step - 1] && (\n          <StepButton onClick={() => State.update({ step: state.step - 1 })}>\n            Back\n          </StepButton>\n        )}\n        {!steps[state.step + 1] && (\n          <StepButton onClick={() => State.update({ step: state.step - 1 })}>\n            Finish\n          </StepButton>\n        )}\n      </Controls>\n    </Box>\n  </DarkOverlay>\n);\n", "metadata": {"platform": "jutsu.ai"}, "branch": {"draft": null}, "widget_modules_used": null, "widget_url": "https://near.social/#/mattb.near/widget/NearBox.Components.DropNFTModal", "fact_widget_deployments_id": "2cd62184a3106a33c3dcf033ab50e7e4", "inserted_timestamp": "2023-09-12T23:17:17.961Z", "modified_timestamp": "2023-09-12T23:17:17.961Z", "__row_index": 5}