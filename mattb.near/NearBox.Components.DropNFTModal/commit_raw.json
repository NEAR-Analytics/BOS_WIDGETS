{"tx_hash": "Fmio7BppiTZVoXs3y2FN1reY3i3jLeiabNHu5wFqYeGr", "action_id_social": "5bkbkRD8b96ywFR7AHDzgxQtyQ7m2gJ6TeGjprykWyUJ-0-widget", "block_id": 101508221, "block_timestamp": "2023-09-19T23:08:29.404Z", "signer_id": "mattb.near", "widget_name": "NearBox.Components.DropNFTModal", "source_code": "const { MailChain, onClose } = props;\nconst {\n  DarkOverlay,\n  Box,\n  Title,\n  Text,\n  ImageUploadCard,\n  Elipse,\n  Controls,\n  StepButton,\n  Input,\n  Details,\n  NFT,\n} = VM.require(\"mattb.near/widgets/NearBox.Styles.DropNFTModal\");\n\nState.init({\n  sdk: null,\n  step: 0,\n  nft: {\n    image: null,\n    name: \"\",\n    description: \"\",\n    to: \"\",\n    message: \"\",\n  },\n});\n\nlet steps = [\n  <>\n    <Title>Drop an NFT</Title>\n    <Text>\n      Thanks to GenaDrop, now you can mint an NFT on NEAR and automatically\n      notify the user straight in their inbox.\n    </Text>\n    <ImageUploadCard>\n      <Elipse>\n        <span\n          style={{\n            opacity: \".2\",\n            \"font-weight\": \"bold\",\n          }}\n        >\n          NFT\n        </span>\n      </Elipse>\n      <>\n        <IpfsImageUpload\n          image={state.nft.image}\n          className=\"btn text-decoration-none link-primary pe-auto\"\n        />\n        <div>\n          <Text>jpg, jpeg, png, webp, gif</Text>\n          <Text>\n            <strong>Max. 20MB</strong>\n          </Text>\n        </div>\n      </>\n    </ImageUploadCard>\n  </>,\n  <Details>\n    <Title>NFT Details</Title>\n\n    <NFT>\n      <img\n        src={`https://ipfs.near.social/ipfs/${state.nft.image.cid}`}\n        alt=\"Uploaded Image\"\n      />\n      <div className=\"replace-btn\">\n        <IpfsImageUpload\n          image={state.nft.image}\n          className=\"btn text-decoration-none link-primary pe-auto\"\n        />\n      </div>\n    </NFT>\n    <Input\n      placeholder={\"Give your NFT a name\"}\n      value={state.nft.name}\n      onChange={(e) =>\n        State.update({\n          nft: {\n            ...state.nft,\n            name: e.target.value,\n          },\n        })\n      }\n    />\n    <Input\n      placeholder={\"Short description\"}\n      value={state.nft.description}\n      onChange={(e) =>\n        State.update({\n          nft: {\n            ...state.nft,\n            description: e.target.value,\n          },\n        })\n      }\n    />\n    <Input\n      placeholder={\"Send to account.near\"}\n      value={state.nft.to}\n      onChange={(e) =>\n        State.update({\n          nft: {\n            ...state.nft,\n            to: e.target.value,\n          },\n        })\n      }\n    />\n\n    <textarea\n      placeholder={\"Write a message\"}\n      value={state.nft.message}\n      onChange={(e) =>\n        State.update({\n          nft: {\n            ...state.nft,\n            message: e.target.value,\n          },\n        })\n      }\n    />\n  </Details>,\n];\n\nreturn (\n  <DarkOverlay\n    onClick={() => {\n      if (state.boxClicked) {\n        State.update({ boxClicked: false });\n      } else {\n        onClose();\n      }\n    }}\n  >\n    <Widget\n      src=\"mattb.near/widget/GenaDrop.GenaDropSDK\"\n      props={{\n        onLoad: (sdk) => State.update({ sdk }),\n        loaded: state.sdk,\n      }}\n    />\n\n    <Box\n      onClick={(e) => {\n        State.update({ boxClicked: true });\n      }}\n    >\n      {steps[state.step] ?? \"\"}\n      <Controls>\n        {steps[state.step + 1] && (\n          <StepButton\n            onClick={() => State.update({ step: state.step + 1 })}\n            disabled={!state.nft.image}\n          >\n            Next\n          </StepButton>\n        )}\n        {steps[state.step - 1] && (\n          <StepButton onClick={() => State.update({ step: state.step - 1 })}>\n            Back\n          </StepButton>\n        )}\n        {!steps[state.step + 1] && (\n          <StepButton\n            onClick={() => {\n              MailChain.notifyNFT(\n                state.nft.to,\n                `https://ipfs.near.social/ipfs/${state.nft.image.cid}`,\n                state.nft.message\n              );\n              state.sdk.mintOnNear(\n                state.nft.to,\n                state.nft.name,\n                state.nft.description,\n                state.nft.image.cid\n              );\n            }}\n            disabled={!state.nft.name || !state.nft.to}\n          >\n            Finish\n          </StepButton>\n        )}\n      </Controls>\n    </Box>\n  </DarkOverlay>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/mattb.near/widget/NearBox.Components.DropNFTModal", "fact_widget_deployments_id": "5fec09cfde416deb7ff77431db7972b2", "inserted_timestamp": "2023-09-20T00:52:48.334Z", "modified_timestamp": "2023-09-20T00:52:48.334Z", "__row_index": 6}