{"tx_hash": "UvsZcuGiMYXWgVzDEYkMUp8YeY4QPYNYhUfyJXuPksj", "action_id_social": "3CNSdP3wqbNtPZU1GN8SMxi4TvG8TXXSeNyhg2PQqyRe-0-widget", "block_id": 97121693, "block_timestamp": "2023-07-23T05:16:48.059Z", "signer_id": "mattb.near", "widget_name": "Geoquete.Components.QuestList", "source_code": "State.init({\n  sdk: null,\n  quests: [],\n  account: null,\n});\n\nif (!state.account) {\n  const accounts = Ethers.send(\"eth_requestAccounts\", []);\n  if (accounts.length > 0) {\n    State.update({ account: accounts[0] });\n  }\n}\n\nconst Main = styled.div`\n    width:100%;\n    height:100vh;\n    display:flex;\n    align-items:flex-start;\n    justify-content:space-evenly;\n    flex-wrap:wrap;\n\n    & > div {\n        margin-top:15px;\n        \n        &:not(:last-of-type) {\n            margin-right:15px;\n        }\n    }\n\n`;\n\nconst loadQuests = () => {\n  for (let i = 0; i < 5; i++) {\n    state.sdk.getQuest(i).then((rawResponse) => {\n      const response = state.sdk.decode(\"viewQuest\", rawResponse);\n\n      if (\n        response[\"creator\"] === \"0x0000000000000000000000000000000000000000\"\n      ) {\n        return;\n      }\n\n      const quest = {\n        id: i,\n        creator: response[\"creator\"],\n        creatorFee: state.sdk.hexToInteger(response[\"creatorFee\"][\"_hex\"]),\n        location: response[\"location\"],\n        payoutCompleted: response[\"payoutCompleted\"],\n        players: response[\"players\"],\n        description: response[\"description\"],\n        questName: response[\"questName\"],\n        questPrize: state.sdk.hexToInteger(response[\"questPrize\"][\"_hex\"]),\n        questStatus: response[\"questStatus\"],\n        winner: response[\"winner\"],\n      };\n\n      let quests = state.quests;\n      quests.push(quest);\n      State.update({ quests: quests });\n    });\n  }\n};\n\nif (state.sdk && state.quests.length == 0) {\n  loadQuests();\n}\n\nreturn (\n  <Main>\n    <div\n      style={{\n        display: \"none\",\n      }}\n    >\n      <Widget\n        src=\"mattb.near/widget/Geoquete.Libs.GeoqueteSDK\"\n        props={{\n          onLoad: (sdk) => State.update({ sdk: sdk }),\n          loaded: !!state.sdk,\n        }}\n      />\n    </div>\n\n    {state.quests.map((quest) => (\n      <Widget\n        src=\"mattb.near/widget/Geoquete.Components.Quest\"\n        props={{\n          quest,\n          onJoin: (questId) => {\n            console.log(state.account);\n            state.sdk.allowSpend(1000000000).then((rawResponse) => {\n              state.sdk.joinQuest(questId).then((response) => {\n                console.log(response);\n              });\n            });\n          },\n        }}\n      />\n    ))}\n  </Main>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/mattb.near/widget/Geoquete.Components.QuestList", "fact_widget_deployments_id": "531cf14bae4aff4968db50e58ad36366", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}