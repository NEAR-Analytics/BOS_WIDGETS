{"tx_hash": "6aDq3u4iFGa8b13JDkjTrngwUdnK2MyKDxFoERGxovV4", "action_id_social": "G5a2vRAnsqamGUSdZk9wzwf115EKFYmL8ARkrAmmLQXb-0-widget", "block_id": 99582577, "block_timestamp": "2023-08-24T23:03:45.360Z", "signer_id": "mattb.near", "widget_name": "NearBook.Components.App.Editor", "source_code": "const TEXT_FORMATS = {\n  bold: \"**\",\n};\n\nconst getRichText = () => {\n  let text = state.document.rawText;\n\n  if (state.format) {\n    let positions = 0;\n\n    state.format.map((val) => {\n      if (val.end) {\n        text =\n          text.substring(0, val.start + positions) +\n          TEXT_FORMATS[val.type] +\n          text.substring(val.start + positions, val.end + positions) +\n          TEXT_FORMATS[val.type] +\n          text.substring(val.end + positions, text.length);\n\n        positions += TEXT_FORMATS[val.type].length * 2;\n      }\n    });\n\n    return text;\n  }\n\n  return text;\n};\n\nState.init({\n  format: [],\n  bold: false,\n  document: {\n    richText: getRichText(),\n    rawText: \"\",\n  },\n});\n\nconst Editor = styled.div`\n    display:flex;\n    flex-direction:column;\n    width:100%;\n    height:calc(100vh - 50px - 4rem);\n`;\n\nconst Toolbar = styled.div`\n    display:flex;\n    align-items:center;\n    width:100%;\n    height:50px;\n    background-color:#fff;\n    border: 1px solid rgba(0,0,0,.05);\n`;\n\nconst Logo = styled.div`\n    display:flex;\n    align-items:center;\n    justify-content:center;\n    width:50px;\n    height:100%;\n    border-right:1px solid rgba(0,0,0,.05);\n    font-weight:bold;\n    font-size:1.7rem;\n`;\n\nconst Document = styled.div`\n    flex-grow:1;\n    background-color:rgba(0,0,0,.02);\n    padding: 2rem;\n    box-sizing:border-box;\n`;\n\nconst Wrapper = styled.div`\n    display:flex;\n    flex-direction:column;\n    width:100%;\n    height:100%;\n    max-width:800px;\n    margin: 0 auto;\n`;\n\nconst TitleInput = styled.input`\n    border:0;\n    color:rgba(0,0,0,.9);\n    font-weight:bold;\n    background-color:transparent;\n    outline-style:none;\n    font-size:2rem;\n    margin-bottom:1rem;\n\n    ::placeholder {\n        color:rgba(0,0,0,.6)!important;\n        font-weight:bold!important;\n        font-size:2rem;\n    }\n`;\n\nconst DocumentBody = styled.div`\n    position:relative;\n    display:flex;\n    flex-direction:column;\n    font-size:1rem;\n    height:100%;\n`;\n\nconst BodyArea = styled.textarea`\n    border:0;\n    width:100%;\n    flex-grow:1;\n    background-color:transparent;\n    outline-style:none;\n    font-size:1rem;\n    color:transparent;\n    caret-color:black;\n\n    ::placeholder {\n        color:rgba(0,0,0,.4)!important;\n        font-size:1rem;\n    }\n`;\n\nconst Options = styled.ul`  \n    display:flex;\n    list-style:none;\n    padding:0;\n    margin:0;\n    padding:1rem;\n\n    li {\n        display:flex;\n        align-items:center;\n        justify-content:center;\n        width:30px;\n        height:30px;\n        border-radius:7px;\n        border:2px solid rgba(0,0,0,.05);\n        font-size:.8rem;\n        font-weight:bold;\n        cursor:pointer;\n        transition:all .2s;\n\n        :not(:last-of-type) {\n            margin-right:5px;\n        }\n\n        :hover {\n            transition:all .2s;\n            box-shadow: 0 0 0 2px rgba(0,0,0,.05);\n        }\n    }\n`;\n\nconst TextVisualizer = styled.div`\n    position:absolute;\n    top:0;\n    left:0;\n\n    * {\n        margin:0;\n        padding:0;\n    }\n`;\n\nreturn (\n  <Editor>\n    <Toolbar>\n      <Logo>n</Logo>\n      <Options>\n        <li\n          onMouseDown={(e) => {\n            e.preventDefault();\n          }}\n          onClick={(e) => {\n            State.update({ bold: !state.bold });\n\n            if (state.bold) {\n              State.update({\n                format: [\n                  ...state.format,\n                  {\n                    type: \"bold\",\n                    start: state.document.rawText.length,\n                    end: null,\n                  },\n                ],\n              });\n            } else {\n              let newFormat = state.format.map((val, idx) => {\n                if (val.type === \"bold\" && !val.end) {\n                  val.end = state.document.rawText.length;\n                }\n\n                return val;\n              });\n              State.update({\n                format: newFormat,\n              });\n\n              State.update({\n                document: {\n                  ...state.document,\n                  richText: getRichText(),\n                },\n              });\n            }\n          }}\n        >\n          B\n        </li>\n        <li>I</li>\n        <li>U</li>\n      </Options>\n    </Toolbar>\n    <Document>\n      <Wrapper>\n        <TitleInput type=\"text\" placeholder=\"This is the title.\" />\n        <DocumentBody>\n          <TextVisualizer>\n            <Markdown text={state.document.richText} />\n          </TextVisualizer>\n          <BodyArea\n            value={state.document.rawText}\n            onChange={(event) => {\n              State.update({\n                document: {\n                  ...state.document,\n                  rawText: event.target.value,\n                },\n              });\n\n              State.update({\n                document: {\n                  ...state.document,\n                  richText: getRichText(),\n                },\n              });\n\n              console.log(state);\n            }}\n            placeholder=\"This is the body of your document. Type something.\"\n          />\n        </DocumentBody>\n      </Wrapper>\n    </Document>\n  </Editor>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/mattb.near/widget/NearBook.Components.App.Editor", "fact_widget_deployments_id": "0a2131b450c507a78256afd9796effef", "inserted_timestamp": "2023-08-25T00:51:17.096Z", "modified_timestamp": "2023-08-25T00:51:17.096Z", "__row_index": 2}