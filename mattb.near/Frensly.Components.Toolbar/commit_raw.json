{"tx_hash": "12mL4wGsSWePEvPNHUvvYv99Kqkzuht6uVS378ZDYpWD", "action_id_social": "yjJABSATDJVzvctToTaDqcmMTPbsj4hCJZKk2zbxx1P-0-widget", "block_id": 112120531, "block_timestamp": "2024-02-04T23:55:09.048Z", "signer_id": "mattb.near", "widget_name": "Frensly.Components.Toolbar", "source_code": "const LensLib = VM.require(\"mattb.near/widget/NearBadger.Libs.Lens\");\n\nconst routeMap = [\n  {\n    name: \"Home\",\n    to: \"home\",\n  },\n  {\n    name: \"Explore\",\n    to: \"explore\",\n  },\n  {\n    name: \"Frensly people\",\n    to: \"frensly\",\n  },\n];\n\nconst FRENSLY_LOGO =\n  \"https://ipfs.near.social/ipfs/bafkreibmkg7wbgfnliss4ow7uy4tn2trd7qejpfjzblhf45p2ffw2ppryu\";\nconst LENS_MINI_LOGO =\n  \"https://ipfs.near.social/ipfs/bafkreiggkmczb7v43nicdia4n7xqkgynopby5k3nxs3zj6fij5eeurh23i\";\nconst FRENSLY_SAD = \"https://ipfs.near.social/ipfs/bafkreidulgxhimcprctnjwby7ar7grznr7htje57ivzleicq2rot3grra4\";\n\nconst Toolbar = styled.div`\n    display:flex;\n    align-items:center;\n    justify-content:space-between;\n    padding:1.8rem 1.8rem 0;\n\n    button {\n      border-radius:30px;\n      border:0;\n      font-size:.8rem;\n      font-weight:bold;\n      color:#000;\n      background-color:#f2f2f2;\n      border:1px solid rgba(0,0,0,.05);\n      padding:.5rem 1.2rem;\n      transition:all .2s;\n\n      img {\n        max-width:20px;\n        margin-right:5px;\n      }\n\n      :hover {\n        box-shadow: 0 0 0 3px rgba(0,0,0,.05);\n        border:1px solid rgba(0,0,0,.05);\n        background-color:#f2f2f2;\n        color:#000;\n      }\n    }\n`;\n\nconst Menu = styled.div`\n  display:flex;\n  align-items:center;\n`;\n\nconst Logo = styled.div`\n    display:flex;\n    align-items:flex-end;\n    justify-content:flex-end;\n    transform-origin: top left;\n    transition: all .2s;\n\n    &.rotate {\n      transform:rotate(-20deg);\n    }\n    \n    img {\n       max-width:60px;\n    }\n\n    p {\n        padding:0;\n        margin:0;\n        font-size:1.6rem;\n        font-weight:bold;\n        margin-left:10px;\n        text-decoration:underline;\n    }\n`;\n\nconst MenuOptions = styled.ul`\n  display:flex;\n  list-style:none;\n  align-items:center;\n  padding:0;\n  margin:0;\n  margin-left:20px;\n\n  li {\n      :not(:last-of-type) {\n        margin-right:15px;\n      }\n      \n      a {\n          display:block;\n          border-radius:30px;\n          border:0;\n          font-size:.8rem;\n          font-weight:bold;\n          color:#000;\n          background-color:#f2f2f2;\n          border:1px solid rgba(0,0,0,.05);\n          padding:.5rem 1.2rem;\n          transition:all .2s;\n      }\n   }\n`;\n\nconst SearchWrapper = styled.div`\n   position:relative;\n   width:250px;\n   height:35px;\n`;\n\nconst Search = styled.input`\n  position:relative;\n  border-radius:20px;\n  color:#000;\n  background-color:#f2f2f2;\n  border:1px solid rgba(0,0,0,.05);\n  padding:0 1rem;\n  font-size:13px;\n  cursor:pointer;\n  transition: all .2s;\n  outline-style:none!important;\n  margin-left:20px;\n  width:230px;\n  height:35px;\n  transition: all .2s;\n\n  &.searching, :focus {\n    z-index:9999;\n    position:absolute;\n    transition: all .2s;\n    top:0;\n    left:0;\n    width:400px;\n    height:70px;\n    background-color:#fff;\n    border:2px solid rgba(0,0,0,.05);\n    box-shadow: 0 0 10px 5px rgba(0,0,0,.05);\n\n    :hover {\n      box-shadow: 0 0 10px 5px rgba(0,0,0,.05);\n    }\n\n    ~ div {\n      transition: all .15s;\n      pointer-events:all;\n      width:400px;\n      min-height:200px;\n      padding: 1rem 1rem 1rem 1rem;\n    }\n  }\n\n  :hover {\n      box-shadow: 0 0 0 3px rgba(0,0,0,.05);\n      transition: all .2s;\n      color:#000;\n  }\n`;\n\nconst SearchResults = styled.div`\n  position:absolute;\n  overflow:hidden;\n  display:flex;\n  flex-wrap:wrap;\n  align-items:center;\n  justify-content:center;\n  pointer-events:none;\n  left:0;\n  top:55px;\n  z-index:9999999;\n  width:0;\n  min-height:0;\n  background-color:#fff;\n  border-bottom-left-radius:20px;\n  border-bottom-right-radius:20px;\n  border:2px solid rgba(0,0,0,.05);\n  margin-left:20px;\n  border-top:0;\n  transition: all .1s;\n  padding:0;\n  \n  &.searching {\n    transition: all .2s;\n    opacity:1;\n    pointer-events:all;\n    width:400px;\n    min-height:200px;\n  }\n`;\n\nconst SearchResultWrapper = styled.div`\n  display:flex;\n  flex-direction:column;\n  min-width:100px;\n  min-height:50px;\n  max-height:150px;\n  flex:1;\n  padding:5px;\n`;\n\nconst SearchResult = styled.div`\n  display:flex;\n  flex-direction:column;\n  min-width:100px;\n  min-height:50px;\n  padding:.8rem;\n  box-sizing:border-box;\n  background-color:rgba(0,0,0,.05);\n  border-radius:10px;\n  align-items:center;\n  justify-content:center;\n  border:1px solid rgba(0,0,0,.05);\n  font-size:.8rem;\n  flex:1;\n  text-align:center;\n  overflow:hidden;\n  \n  p {\n    margin:0;\n    \n    &.lens-handle {\n      font-size:1rem;\n      font-weight:bold;\n      margin:10px 0 5px;\n      max-width:100%;\n      overflow:hidden;\n      text-overflow:ellipsis;\n      white-space:no-wrap;\n    }\n    \n    &.near-account-id {\n      opacity:.4;\n    }\n  }  \n`;\n\nconst Avatar = styled.div`\n  display:flex;\n  align-items:center;\n  justify-content:center;\n  width:40px;\n  min-height:40px;\n  border-radius:100%;\n  background-position:center;\n  background-size:cover;\n  background-repeat:no-repeat;\n  background-color:rgba(0,0,0,.05);\n  box-shadow: 0 0 0 3px rgba(0,0,0,.05);\n`;\n\nconst Loading = styled.div`\n  width:100%;\n  height:100%;\n  position:absolute;\n  top:0;\n  left:0;\n  display:flex;\n  align-items:center;\n  justify-content:center;\n  transition: all .2s;\n  pointer-events:none;\n  background-color:rgba(255,255,255,1);\n  z-index:9999;\n\n  @keyframes rotation {\n    0% {\n        transform: rotate(0deg);\n    }\n    100% {\n        transform: rotate(360deg);\n    }\n  }\n\n  .spinner {\n    width: 40px;\n    height: 40px;\n    border: 5px solid rgba(0,0,0,.1);\n    border-bottom-color: rgba(0,0,0,.4);\n    border-radius: 50%;\n    display: inline-block;\n    box-sizing: border-box;\n    animation: rotation .5s linear infinite;\n  }\n`;\n\nconst NoResult = styled.div`\n  align-self:center;\n  text-align:center;\n  opacity:.4;\n  \n  p {\n    font-weight:bold;\n    font-size:1rem;\n    margin-top:10px;\n  }\n \n  img {\n    max-width:100px;\n    width:100%;\n  }\n`;\n\nreturn (Store, status, { Route }) => {\n  Route = Route || styled.a``;\n\n  const debounce = (func, wait) => {\n    let timeout;\n\n    return function executedFunction(...args) {\n      const later = () => {\n        clearTimeout(timeout);\n        func(...args);\n      };\n\n      clearTimeout(timeout);\n      timeout = setTimeout(later, wait);\n    };\n  }\n\n  const search = (searchTerm) => {\n    Store.update({ loadingSearch: true });\n\n    return new Promise((resolve, reject) => {\n      let identities = Social.get(\"*/identity/lens/*\", \"final\");\n\n      let check = () => {\n        setTimeout(() => {\n          if (identities === null) {\n            check();\n          } else {\n            if (searchTerm in identities) {\n              resolve([{\n                accountId: searchTerm,\n                value: identities[searchTerm]\n              }]);\n            } else if (`${searchTerm}.near` in identities) {\n              resolve([{\n                accountId: `${searchTerm}.near`,\n                value: identities[`${searchTerm}.near`]\n              }]);\n            } else {\n              let foundKeys = Object.keys(identities).filter((profileName) => profileName.includes(searchTerm));\n\n              if (foundKeys.length > 0) {\n                resolve(Object.entries(identities).map(([key, value]) => foundKeys.includes(key) ? {\n                  accountId: key,\n                  value\n                } : null).filter((val) => val));\n              } else {\n                resolve([]);\n              }\n            }\n\n            Store.update({ loadingSearch: false });\n          }\n        }, 300);\n      }\n\n      check();\n    });\n  }\n\n  return (\n    <Toolbar>\n      <Menu>\n        <Logo className={`${status.searching || status.searchTerm ? \"rotate\" : \"\"}`}>\n          <img src={FRENSLY_LOGO} />\n        </Logo>\n        <SearchWrapper>\n          <Search type=\"text\" id=\"search\" name=\"search\" placeholder=\"Search frens\" onChange={(e) => {\n            Store.update({\n              searchTerm: e.target.value\n            });\n\n            if (e.target.value) {\n              search(e.target.value).then((result) => {\n                Store.update({\n                  searchResult: result.map((info) => {\n                    return {\n                      accountId: info.accountId,\n                      handle: info.value.identity.lens.name\n                    };\n                  })\n                });\n              });\n            }\n          }} className={status.searchTerm ? \"searching\" : \"\"} value={status.searchTerm} onFocus={() => Store.update({ searching: true })} onBlur={() => Store.update({ searchTerm: \"\", searching: false })}></Search>\n          <SearchResults className={status.searchTerm ? \"searching\" : \"\"}>\n            {status.searchTerm && status.searchResult?.length == 0 && <NoResult>\n              <img src={FRENSLY_SAD} />\n              <p>No frens found</p>\n            </NoResult>}\n            {status.loadingSearch && <Loading>\n              <div className=\"spinner\"></div>\n            </Loading>}\n            {status.searchTerm !== \"\" && status.searchResult && status.searchResult.map((result) => {\n              return <SearchResultWrapper>\n                <SearchResult>\n                  <Avatar></Avatar>\n                  <div>\n                    <p className=\"lens-handle\">@{result.handle}</p>\n                    <p className=\"near-account-id\">{result.accountId}</p>\n                  </div>\n                </SearchResult>\n              </SearchResultWrapper>\n            })}\n          </SearchResults>\n        </SearchWrapper>\n        <MenuOptions>\n          {routeMap.map((route) => (\n            <li>\n              <Route props={{ to: route.to }}>{route.name}</Route>\n            </li>\n          ))}\n        </MenuOptions>\n      </Menu>\n      <button>\n        <span>\n          <img src={LENS_MINI_LOGO} />\n        </span>\n        Login\n      </button>\n    </Toolbar>\n  );\n};\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/mattb.near/widget/Frensly.Components.Toolbar", "fact_widget_deployments_id": "022e0924cf2e034c0afda3dfb5b7da0b", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 15}