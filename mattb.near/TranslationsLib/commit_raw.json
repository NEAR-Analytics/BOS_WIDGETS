{"tx_hash": "HnYsShz3oCo72evgW4HBhpmrgrxnKkyDJTgPgmwrYVjZ", "action_id_social": "DqnptEaqcLkz6FzkyFe9ejEh8ny7fd46R4kjpEW6JV7e-0-widget", "block_id": 101430824, "block_timestamp": "2023-09-18T22:38:25.032Z", "signer_id": "mattb.near", "widget_name": "TranslationsLib", "source_code": "const TranslationsLib = {\n  translations: {},\n  availableLanguages: null,\n  currentLanguage: null,\n  translationsLoaded: false,\n  load: (url, language) => {\n    TranslationsLib.url = url;\n    TranslationsLib.currentLanguage = language;\n    TranslationsLib.tryLoadByUrl(url, language);\n    TranslationsLib.tryLoadByRequire(url, language);\n  },\n  setTranslations: (translations, language) => {\n    if (!!translations[language]) {\n      TranslationsLib.availableLanguages = Object.keys(translations);\n      TranslationsLib.translations = translations[language];\n      TranslationsLib.translationsLoaded = true;\n      TranslationsLib.refresh();\n    } else {\n      TranslationsLib.throw(\n        \"Provided translations file is empty or is not an object\"\n      );\n    }\n  },\n  tryLoadByUrl: (url, language) => {\n    if (url.indexOf(\"https://\")) {\n      let data = fetch(url);\n      TranslationsLib.setTranslations(data.body, language);\n    }\n  },\n  tryLoadByRequire: (path, language) => {\n    try {\n      TranslationsLib.setTranslations(VM.require(path), language);\n    } catch (error) {\n      console.log(error);\n    }\n  },\n  throw: (message) => {\n    console.log(message);\n  },\n  refresh: () => {\n    if (!!onRefresh && typeof onRefresh === \"function\") {\n      onRefresh(TranslationsLib);\n    }\n  },\n  get: (id, defaultText) => {\n    let translation = id.indexOf(\".\")\n      ? TranslationsLib.getTranslationByBreadcrumb(id)\n      : TranslationsLib.getTranslation(id);\n\n    return translation || defaultText;\n  },\n  getTranslationByBreadcrumb: (breadcrumb) => {\n    return breadcrumb\n            .split('.')\n            .reduce(\n                (path, nextPath) => (path || {})[nextPath],\n                TranslationsLib.translations\n            );\n  },\n  getTranslation: (id) => id in TranslationsLib.translations &&\n    typeof TranslationsLib.translations[id] === \"string\"\n      ? TranslationsLib.translations[id]\n      : \"\",\n  switchLanguage: (language) =>\n    TranslationsLib.load(TranslationsLib.url, language),\n  getAvailableLanguages: () => TranslationsLib.availableLanguages,\n};\n\nreturn TranslationsLib;", "metadata": {}, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/mattb.near/widget/TranslationsLib", "fact_widget_deployments_id": "610a86aa7bf264e54b716eda3d147c19", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}