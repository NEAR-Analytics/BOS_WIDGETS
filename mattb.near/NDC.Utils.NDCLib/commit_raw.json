{"tx_hash": "8rSALU1jHGsXf4s4YvJt1GrPDuVk5tTYJvdxjMC6uRqR", "action_id_social": "ChdcxiwQqH6iRVb44uDra6kqhmYs8GNdcbKRV5kYsgeL-0-widget", "block_id": 96306906, "block_timestamp": "2023-07-12T15:02:28.610Z", "signer_id": "mattb.near", "widget_name": "NDC.Utils.NDCLib", "source_code": "const { onLoad, onRefresh, loaded } = props;\n\nconst ARTICLES_ADDRESS = \"ndcWikiArticle\";\nconst ALLOWED_AUTHORS = [\n  \"neardigitalcollective.near\",\n  \"blaze.near\",\n  \"jlw.near\",\n  \"kazanderdad.near\",\n  \"joep.near\",\n  \"sarahkornfeld.near\",\n  \"yuensid.near\",\n  \"shubham007.near\",\n  \"psalm.near\",\n  \"fiftycent.near\",\n];\nconst ARTICLES_NOT_ALLOWED = [91092435, 91092174, 91051228, 91092223, 91051203];\nconst WIDGET_AUTHOR = \"neardigitalcollective.near\";\n\nconst NDCLib = {\n  getFormattedDate: (unixTimestamp) => {\n    const date = new Date(Number(unixTimestamp));\n    return {\n      date: date.toLocaleDateString(),\n      time: date.toLocaleTimeString(),\n    };\n  },\n  getAccountName: (accountId) => {\n    return Social.getr(`${accountId}/profile`).name || \"-\";\n  },\n  getDocsArticle: (lastEditor, addressForArticles) => {\n    return (\n      JSON.parse(\n        Social.get(`${lastEditor}/${addressForArticles}/main`, blockHeight)\n      ) || {}\n    );\n  },\n  getDocsArticleIndex: (post) => {\n    let titles = [];\n\n    post.body.split(\"\\n\").map((line, idx) => {\n      if (line[0] === \"#\" && line[1] !== \"#\") {\n        titles = titles.map((title) => {\n          if (title.contentEnd == null) {\n            title.contentEnd = idx - 1;\n          }\n          return title;\n        });\n\n        titles.push({\n          title: line.substring(1, line.length).trim(),\n          contentStart: idx,\n          contentEnd: null,\n        });\n      }\n    });\n\n    return titles;\n  },\n  getDocsArticleFull: (lastEditor, addressForArticles) => {\n    let article = NDCLib.getDocsArticle(lastEditor, addressForArticles);\n\n    return {\n      post: article,\n      index: NDCLib.getDocsArticleIndex(article),\n    };\n  },\n  getDocsArticles: () => {\n    const articlesIndex =\n      Social.index(ARTICLES_ADDRESS, \"main\", {\n        order: \"desc\",\n        accountId: undefined,\n      }) || [];\n\n    let articles = articlesIndex\n      .reduce((acc, { accountId, blockHeight }) => {\n        const postData = Social.get(\n          `${accountId}/${ARTICLES_ADDRESS}/main`,\n          blockHeight\n        );\n\n        return [...acc, { ...JSON.parse(postData), blockHeight }];\n      }, [])\n      .filter((article) =>\n        ALLOWED_AUTHORS.some(\n          (address) =>\n            address === article.author &&\n            !ARTICLES_NOT_ALLOWED.includes(article.blockHeight)\n        )\n      );\n\n    return articles.reduce((acc, article) => {\n      if (!acc.some(({ articleId }) => articleId === article.articleId)) {\n        return [...acc, article];\n      } else {\n        return acc;\n      }\n    }, []);\n  },\n  getAccountProfileImage: (accountId) => {\n    return `https://ipfs.near.social/ipfs/${\n      Social.getr(`${accountId}/profile`).image.ipfs_cid || \"\"\n    }`;\n  },\n};\n\nif (!loaded && onLoad && typeof onLoad === \"function\") {\n  onLoad(NDCLib);\n}\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/mattb.near/widget/NDC.Utils.NDCLib", "fact_widget_deployments_id": "5671d14101c1f20f6494ae3299a1b690", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}