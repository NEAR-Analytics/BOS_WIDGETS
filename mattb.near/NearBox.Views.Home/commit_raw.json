{"tx_hash": "HnBLZdraNrQWdYXjoaXVrtRD8frFL5Cp2fNktYBLg4az", "action_id_social": "EEZYJCgyAQP1MKmSDViXPkX8Qvmd66pgvmeo1rBqBV51-0-widget", "block_id": 101580851, "block_timestamp": "2023-09-20T22:28:46.029Z", "signer_id": "mattb.near", "widget_name": "NearBox.Views.Home", "source_code": "const { MailChain } = props;\nconst WIDGET_OWNER = \"mattb.near\";\n\nState.init({\n  user: {\n    mail: \"\",\n    phrase: \"\",\n  },\n  currentView: \"home\",\n  toast: {\n    type: \"\",\n    message: \"\",\n  },\n  logged: false,\n  disconnected: false,\n  loadedCredentials: false,\n  sdk: null\n});\n\nif (!!MailChain && !state.sdk) {\n  State.update({\n    sdk: MailChain\n  });\n}\n\nif (!state.logged && !state.disconnected && !state.loadedCredentials) {\n  Storage.privateGet(\"user\");\n\n  setTimeout(() => {\n    State.update({\n      user: Storage.privateGet(\"user\") || {\n        mail: \"\",\n        phrase: \"\",\n      },\n      loadedCredentials: true,\n    });\n\n    if (!state.logged && state.user.mail && state.user.phrase) {\n      login();\n    }\n  }, 200);\n}\n\nconst login = () => {\n  state.sdk.connect(state.user)\n    .then((data) => {\n      if (data.address !== state.user.mail) {\n        State.update({\n          toast: {\n            type: \"error\",\n            message: \"The email provided doesn't match\",\n          },\n        });\n      } else {\n        State.update({\n          logged: true,\n          currentView: \"app\",\n          toast: {\n            type: \"success\",\n            message: \"Logged in successfully\",\n          },\n        });\n      }\n    })\n    .catch((data) => {\n      State.update({\n        toast: {\n          type: \"error\",\n          message:\n            \"An error occurred while trying to connect. Please, try again.\",\n        },\n      });\n    });\n};\n\nconst Main = styled.div`\n    width:100%;\n    height:100vh;\n    background-color:rgba(0,0,0,.02);\n`;\n\nconst Header = styled.div`\n    display:flex;\n    justify-content:center;\n    width:100%;\n    padding:.5rem 1rem;\n    box-sizing:border-box;\n    border-top:5px solid #0178D4;\n`;\n\nconst Logo = styled.div`\n    display:flex;\n    align-items:center;\n    font-weight:bold;\n    font-size:2rem;\n    color:#0178D4;\n\n    p {\n        margin:0;\n        padding:0;\n    }\n\n    span {\n        display:block;\n        margin-right:.5rem;\n        position:relative;\n        width:30px;\n        height:20px;\n        background-color:#0178D4;\n        border-radius:4px;\n        overflow:hidden;\n        z-index:0;\n        top:2px;\n\n        &::after {\n            content: '';\n            z-index:2;\n            position:absolute;\n            display:block;\n            width: 0; \n            height: 0; \n            border-left: 15px solid transparent;\n            border-right: 15px solid transparent;\n            border-top: 15px solid #0366B4;\n            left:0;\n            right:0;\n            top:-4px;\n            margin: auto;\n        }\n\n        &::before {\n            content: '';\n            z-index:1;\n            position:absolute;\n            display:block;\n            width: 0; \n            height: 0; \n            border-left: 15px solid transparent;\n            border-right: 15px solid transparent;\n            border-bottom: 15px solid rgba(0,0,0,.08);\n            left:0;\n            right:0;\n            bottom:-4px;\n            margin: auto;\n        }\n    }\n`;\n\nconst Content = styled.div`\n    display:flex;\n    align-items:center;\n    justify-content:center;\n    flex-direction:column;\n`;\n\nconst Login = styled.div`\n    margin-top:1rem;\n    width:300px;\n    background-color:#fff;\n    box-shadow: 0 0 10px 5px rgba(0,0,0,.05);\n    padding:1.5rem;\n    border-radius:5px;\n\n    h1 {\n        font-size:1.5rem;\n        font-weight:bold;\n    }\n`;\n\nconst Input = styled.input`\n    margin-top:1.2rem;\n    width:100%;\n    border:0;\n    border-bottom: 3px solid rgba(0,0,0,.1);\n    padding:.2rem 0;\n    font-size:.8rem;\n    outline-style:none;\n    transition: all .2s;\n\n    :placeholder {\n        font-size:.8rem;\n    }\n\n    :hover {\n        border-color: rgba(0,0,0,.2);\n        transition: all .2s;\n    }\n\n    :focus {\n        border-color: #0178D4;\n        transition: all .2s;\n    }\n`;\n\nconst ConnectButton = styled.button`\n    display:flex;\n    justify-content:center;\n    align-items:center;\n    width:100%;\n    height:50px;\n    background-color: #0178D4;\n    border:0;\n    font-weight:bold;\n    color:#fff;\n    margin-top:2rem;\n    border-radius:5px;\n    font-size:.9rem;\n`;\n\nconst CreateButton = styled.a`\n    display:flex;\n    justify-content:center;\n    align-items:center;\n    width:100%;\n    height:50px;\n    background-color: #0178D4;\n    border:0;\n    font-weight:bold;\n    color:#fff;\n    border-radius:5px;\n    font-size:.9rem;\n    text-decoration:none;\n\n    :hover, :focus {\n        color:#fff;\n    }\n`;\n\nconst Powered = styled.div`\n    opacity:.5;\n    margin-top:3rem;\n    font-size:.8rem;\n    text-align:center;\n    vertical-align:top;\n\n    span {\n      display:inline-block;\n      position:relative;\n      top: -2px;\n      width:5px;\n      height:5px;\n      border-radius:100%;\n      margin-left:3px;\n    }\n\n    .enabled {\n      background-color:green;\n    }\n\n    .disabled {\n      background-color:red;\n    }\n`;\n\nconst Division = styled.div`\n    position:relative;\n    width:100%;\n    max-width:300px;\n    padding:2rem 0;\n    text-align:center;\n    z-index:0;\n\n    p {\n        display:inline-block;\n        padding:0;\n        margin:0;\n        background-color:#fafafa;\n        padding:0 .5rem;\n        color:rgba(0,0,0,.5);\n    }\n\n    ::after {\n        z-index:-1;\n        content:'';\n        position:absolute;\n        width:100%;\n        height:2px;\n        top:0;\n        bottom:0;\n        left:0;\n        right:0;\n        margin:auto;\n        background-color:rgba(0,0,0,.05);\n    }\n`;\n\nconst NewAccount = styled.div`\n    width:100%;\n    max-width:300px;\n`;\n\nconst views = {\n  home: (\n    <Main>\n      <Header>\n        <Widget src={`${WIDGET_OWNER}/widget/NearBox.Components.Logo`} />\n      </Header>\n      <Content>\n        <Login>\n          <h1>Sign in</h1>\n          <Input\n            type=\"text\"\n            placeholder=\"user@mailchain.com\"\n            value={state.user.mail}\n            onChange={(e) =>\n              State.update({\n                user: {\n                  ...state.user,\n                  mail: e.target.value,\n                },\n              })\n            }\n          />\n          <Input\n            type=\"text\"\n            placeholder=\"Secret Recovery Phrase\"\n            value={state.user.phrase}\n            onChange={(e) =>\n              State.update({\n                user: {\n                  ...state.user,\n                  phrase: e.target.value,\n                },\n              })\n            }\n          />\n          <ConnectButton\n            onClick={() => {\n              Storage.privateSet(\"user\", state.user);\n              login();\n            }}\n          >\n            Connect\n          </ConnectButton>\n        </Login>\n        <Division>\n          <p>or</p>\n        </Division>\n        <NewAccount>\n          <CreateButton\n            target=\"_blank\"\n            href=\"https://app.mailchain.com/register\"\n          >\n            Create an account\n          </CreateButton>\n        </NewAccount>\n        <Powered>\n          Powered by <strong>MailChain</strong>\n          <span\n            className={\n              typeof MailChain !== \"undefined\" ? \"enabled\" : \"disabled\"\n            }\n          ></span>\n        </Powered>\n      </Content>\n    </Main>\n  ),\n  app: (\n    <Widget\n      src={`${WIDGET_OWNER}/widget/NearBox.Views.App`}\n      props={{\n        MailChain: state.sdk,\n        onMessageSent: () => {\n          State.update({\n            toast: {\n              type: \"success\",\n              message: \"Email sent\",\n            },\n          });\n        },\n        onLogout: () => {\n          State.update({\n            currentView: \"home\",\n            user: {\n              mail: \"\",\n              phrase: \"\",\n            },\n            logged: false,\n            disconnected: true,\n          });\n          MailChain.disconnect();\n\n          State.update({\n            toast: {\n              type: \"success\",\n              message: \"Your account has been disconnected\",\n            },\n          });\n        },\n      }}\n    />\n  ),\n};\n\nreturn (\n  <>\n    <Widget\n      src={`${WIDGET_OWNER}/widget/NearBox.Components.Toast`}\n      props={{\n        message: state.toast.message,\n        type: state.toast.type,\n        onClose: () => {\n          State.update({\n            toast: {\n              ...toast,\n              message: \"\",\n            },\n          });\n        },\n      }}\n    />\n    {state.currentView in views ? views[state.currentView] : views[\"home\"]}\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/mattb.near/widget/NearBox.Views.Home", "fact_widget_deployments_id": "932910b01c59ada45009d3ab818fa4c5", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}