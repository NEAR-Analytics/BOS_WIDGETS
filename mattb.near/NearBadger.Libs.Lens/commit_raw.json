{"tx_hash": "DP4xGjPSyuMgnGoXPqfd5UyhkwMCDcMofrHqWPeqzNbK", "action_id_social": "3YGvoM7qLf8M2hvz9tuZWVzZYYbagciw7wnteq1DqKpd-0-widget", "block_id": 109839655, "block_timestamp": "2024-01-07T19:04:11.762Z", "signer_id": "mattb.near", "widget_name": "NearBadger.Libs.Lens", "source_code": "const LensVerifier = VM.require(\"sdks.near/widget/SDKs.Verifiers.Lens\");\n\nconst LensLib = {\n  createProof: (address, nearAccount, onCommit, onCancel) => {\n    LensVerifier.createProof(address, nearAccount)\n      .then(({ handle, signature }) => {\n        let identity = {\n          lens: {\n            name: handle,\n            signature,\n          },\n        };\n\n        Social.set(\n          {\n            identity,\n            index: {\n              identity: JSON.stringify({\n                key: \"lens\",\n                value: {\n                  ...identity.lens,\n                },\n              }),\n            },\n          },\n          {\n            onCommit,\n            onCancel,\n          }\n        );\n      })\n      .catch((error) => {\n        console.error(error);\n        if (typeof onCancel === \"function\") {\n          onCancel();\n        }\n      });\n  },\n  verify: (handle, nearAccount, signature) =>\n    LensVerifier.verify(handle, nearAccount, signature),\n  listVerifiedProfiles: (limit) => {\n    return LensLib.getIdentity({\n      limit: limit || 5,\n    });\n  },\n  getVerifiedProfiles: (nearAccounts) => {\n    return LensLib.getIdentity({\n      accountId: nearAccounts,\n    });\n  },\n  getVerifiedProfile: (nearAccount) => {\n    return LensLib.getIdentity({\n      accountId: nearAccount,\n      limit: 1,\n    });\n  },\n  getIdentity: (options) => {\n    return Social.index(\"identity\", \"lens\", {\n      order: \"desc\",\n      ...options,\n    });\n  },\n};\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/mattb.near/widget/NearBadger.Libs.Lens", "fact_widget_deployments_id": "91b13010f80f05aa12df43466ccb65e9", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 1}