{"tx_hash": "ByxkwsZen9qyQVFFoQhHnTXpLCg8t2vvZ98FWEiAjeW5", "action_id_social": "5kdxbu6sVutvyXA3ahHVzeEQLdPujTRpBKArMZ5wfKNW-0-widget", "block_id": 97417483, "block_timestamp": "2023-07-27T01:32:24.081Z", "signer_id": "mattb.near", "widget_name": "NDCDocs.Components.Article", "source_code": "let { previousArticle, nextArticle } = props;\n\nconst OWNER_ACCOUNT = \"mattb.near\";\nconst addressForComments = \"NDCDOCS-comments\";\nconst addressForArticles = \"ndcWikiArticle\";\nconst authorForWidget = \"neardigitalcollective.near\";\nconst accountId = props.accountId || context.accountId;\n\nconst lastEditor = props.lastEditor;\nconst blockHeight =\n  props.blockHeight === \"now\" ? \"now\" : parseInt(props.blockHeight);\nconst subscribe = !!props.subscribe;\nconst raw = !!props.raw;\n\nconst path = `${context.widgetSrc}?lastEditor=${lastEditor}&blockHeight=${blockHeight}&subscribe=${subscribe}&raw=${raw}`;\n\nconst notifyAccountId = accountId;\n\nState.init({\n  currentSection: 0,\n  index: null,\n  article: null,\n  showMenu: false,\n});\n\nState.update({\n  article:\n    JSON.parse(\n      Social.get(`${lastEditor}/${addressForArticles}/main`, blockHeight)\n    ) || {},\n});\n\nconst getDate = (timestamp) => {\n  const date = new Date(Number(timestamp));\n  return date.toDateString();\n};\n\nfunction getIndex() {\n  let titles = [];\n\n  state.article.body.split(\"\\n\").map((line, idx) => {\n    if (line[0] === \"#\" && line[1] !== \"#\") {\n      titles = titles.map((title) => {\n        if (title.contentEnd == null) {\n          title.contentEnd = idx - 1;\n        }\n        return title;\n      });\n\n      titles.push({\n        title: line.substring(1, line.length).trim(),\n        contentStart: idx,\n        contentEnd: null,\n      });\n    }\n  });\n\n  State.update({ index: titles });\n}\n\nfunction getProfileImage(accountId) {\n  let image = Social.getr(`${accountId}/profile`).image || {\n    ipfs_cid: \"\",\n  };\n\n  return `https://ipfs.near.social/ipfs/${image.ipfs_cid}`;\n}\n\nfunction getName(accountId) {\n  return Social.getr(`${accountId}/profile`).name || \"-\";\n}\n\ngetIndex();\n\nconst Main = styled.div`\n    display:flex;\n    position:relative;\n    overflow:hidden;\n`;\n\nconst SideBarWrapper = styled.div`\n  min-width:250px;\n  position:relative;\n  z-index:99999;\n  height:100vh;\n  display:none;\n\n  @media screen and (max-width:800px) {\n    position:absolute;\n    left:0;\n    background-color:#fff;\n    width:100%;\n  }\n\n  &.show {\n    display:block;\n  }\n`;\n\nconst SideBar = styled.div`\n    display:flex;\n    flex-direction:column;\n    width:250px;\n    height:calc(100vh - 1.5rem);\n    border-right:3px solid rgba(0,0,0,.02);\n    box-sizing:border-box;\n    padding:1.5rem;\n    background-color:#fff;\n\n    @media screen and (max-width:800px) {\n      width:100%;\n    }\n\n    h1 {\n      font-size:1.4rem;\n      font-weight:bold;\n    }\n\n    div:nth-child(1) {\n        flex-grow:1;\n        overflow-y:auto;\n    }\n\n    ul {\n        list-style:none;\n\n        li {\n            cursor:pointer;\n            position:relative;\n\n            a {\n              color:#000;\n            }\n            \n            h2 {\n                font-size:.8rem;\n                padding:.5rem;\n                transition: all .2s;\n            }\n\n            &::after {\n                position:absolute;\n                top:0;\n                bottom:0;\n                left:-10px;\n                margin:auto;\n                content: '';\n                width:5px;\n                height:5px;\n                border-radius:100%;\n                background-color:#E5E5E5;\n                box-shadow: 0 0 0 4px #fff;\n                transition: all .2s;\n            }\n\n            &:not(:last-of-type) {\n                &::before {\n                    content: '';\n                    position:absolute;\n                    width:2px;\n                    height:100%;\n                    left:-8.5px;\n                    background-color:#E5E5E5;\n                    transform:translateY(50%);\n                    \n                }\n            }\n\n            &.selected {\n                h2 {\n                    position:relative;\n                    transition: all .2s;\n                    font-weight:bold;\n                }\n\n                &::after {\n                    transition: all .2s;\n                    width:10px;\n                    height:10px;\n                    left:-12.5px;\n                }\n            }\n        }\n    }\n`;\n\nconst Content = styled.div`\n    flex-grow:1;\n    box-sizing:border-box;\n    padding:2rem;\n    min-height:100vh;\n\n    @media screen and (min-width:800px) {\n      padding:1.2rem;\n    }\n\n    h1 {\n        font-weight:bold;\n    }\n\n    .markdown {\n      position:relative;\n      padding:10px 0;\n\n      .link {\n        cursor:pointer;\n        opacity:0;\n        width:20px;\n        height:20px;\n        position:absolute;\n        top:15px;\n        left:-20px;\n        transition:all .2s;\n      }\n\n      &:hover {\n        .link {\n          opacity:.7;\n          transition:all .2s;\n        }\n      }\n      \n      &:first-of-type {\n        padding-top:0;\n\n        .link {\n          top:5px;\n        }\n      }\n    }\n`;\n\nconst Wrapper = styled.div`\n  max-width:800px;\n  margin:0 auto;\n\n  & > div > img, & > div > p img {\n      display:block;\n      height:400px;\n      border-radius:20px;\n      background-color:rgba(0,0,0,.05);\n      margin:30px auto;\n  }\n\n  h1 {\n    font-size:1.8rem;\n    margin-bottom:13px;\n\n    &:first-of-type {\n      margin-top:0;\n    }\n  }\n\n  h4 {\n    font-size:1.2rem;\n  }\n\n`;\n\nconst Header = styled.div`\n  position:relative;\n  box-sizing:border-box;\n  padding:1rem;\n  align-items:center;\n  width:100%;\n  display:flex;\n  border-bottom:1px solid rgba(0,0,0,.05);\n  background-color:#fff;\n  z-index:9999;\n\n  @media screen and (max-width: 800px) {\n    position:fixed;\n  }\n\n  > p {\n    margin:0;\n    padding:0;\n    margin-left:10px;\n    font-weight:bold;\n  }\n`;\n\nconst HeaderWrapper = styled.div`\n    position:relative;\n    height:70px;\n    \n    @media screen and (max-width:800px) {\n        display:block;\n    }\n`;\n\nconst MenuButton = styled.div`\n    cursor:pointer;\n    width:40px;\n    height:40px;\n    border-radius:10px;\n    background-color:rgba(0,0,0,.05);\n    background-image:url(https://ipfs.near.social/ipfs/bafkreiexzn4c2sc53i5k5u7zaazdkf6j2zhzvifsxp7skcucwaxm46aggi);\n    background-position:center;\n    background-repeat:no-repeat;\n    background-size:20px 20px;\n    transition: all .2s;\n    border: 2px solid rgba(0,0,0,.0);\n\n    &:hover {\n        transition: all .2s;\n        box-shadow: 0 0 10px 5px rgba(0,0,0,.02);\n        border: 2px solid rgba(0,0,0,.02);\n    }\n\n`;\n\nconst ArticleDetails = styled.div`\n    display:flex;\n    margin:auto;\n    width:100%;\n    box-sizing:border-box;\n    padding: .5rem 0;\n    margin:0 auto 1rem;\n\n    div:first-of-type {\n      display:flex;\n      align-items:center;\n    }\n\n    div + div {\n      padding-left:10px;\n\n      .name {\n        font-weight:bold;\n        margin:0;\n      }\n\n      .handle, .last-modification {\n        font-size:.7rem;\n        margin:0;\n        opacity:.5;\n      }\n\n      .last-modification {\n        opacity:.5;\n      }\n\n    }\n`;\n\nconst Avatar = styled.div`\n    border-radius:100%;\n    width:40px;\n    height:40px;\n    background-color:rgba(0,0,0,.05);\n    background-position:center;\n    background-size:cover;\n    background-repeat:no-repeat;\n`;\n\nreturn (\n  <>\n    <HeaderWrapper>\n      <Header>\n        <MenuButton\n          onClick={() => State.update({ showMenu: !state.showMenu })}\n        ></MenuButton>\n        <p>NDCDocs</p>\n      </Header>\n    </HeaderWrapper>\n    <Main>\n      <SideBarWrapper className={state.showMenu ? \"show\" : \"\"}>\n        <SideBar>\n          <div>\n            <h1>{state.article.articleId}</h1>\n            <ul>\n              {state.index.map((obj, key) => (\n                <li\n                  onClick={() => State.update({ currentSection: key })}\n                  className={key === state.currentSection ? \"selected\" : \"\"}\n                >\n                  <a href={`#${obj.contentStart}`}>\n                    <h2>{obj.title}</h2>\n                  </a>\n                </li>\n              ))}\n            </ul>\n          </div>\n        </SideBar>\n      </SideBarWrapper>\n      <Content>\n        <Wrapper>\n          <ArticleDetails>\n            <div>\n              <Avatar\n                style={{\n                  \"background-image\": `url(\"${getProfileImage(\n                    state.article.author\n                  )}\")`,\n                }}\n              ></Avatar>\n            </div>\n            <div>\n              <p className=\"name\">{getName(state.article.author)}</p>\n              <p className=\"handle\">\n                @{state.article.author} \u00b7{\" \"}\n                <strong>{getDate(state.article.timeCreate)}</strong>\n              </p>\n              <p className=\"last-modification\">\n                Last edit by <strong>@{state.article.lastEditor}</strong> on{\" \"}\n                <strong>{getDate(state.article.timeLastEdit)}</strong>\n              </p>\n            </div>\n          </ArticleDetails>\n          {state.index.map((content) => (\n            <div id={content.contentStart} className=\"markdown\">\n              <OverlayTrigger\n                key={content.contentStart}\n                placement=\"left\"\n                overlay={<Tooltip id={`tooltip-left`}>Copy link</Tooltip>}\n              >\n                <div\n                  className=\"link\"\n                  onClick={() =>\n                    clipboard.writeText(`${path}#${content.contentStart}`)\n                  }\n                >\n                  \ud83d\udd17\n                </div>\n              </OverlayTrigger>\n              <Markdown\n                text={state.article.body\n                  .split(\"\\n\")\n                  .slice(\n                    content.contentStart,\n                    content.contentEnd || state.article.body.split(\"\\n\").length\n                  )\n                  .join(\"\\n\")}\n              />\n            </div>\n          ))}\n        </Wrapper>\n        <Widget\n          src={`${OWNER_ACCOUNT}/widget/NDCDocs.Components.Controls`}\n          props={{\n            previousArticle,\n            nextArticle,\n          }}\n        />\n      </Content>\n    </Main>\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/mattb.near/widget/NDCDocs.Components.Article", "fact_widget_deployments_id": "7628f9d01bd58b5666c7f4dd3149edcd", "inserted_timestamp": "2000-01-01T00:00:00.000Z", "modified_timestamp": "2000-01-01T00:00:00.000Z", "__row_index": 28}