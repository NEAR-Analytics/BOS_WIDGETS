{"tx_hash": "AGYnRm9YPsV4gAuez54VZiHMzcHgH5U9QaZPipzcYysy", "action_id_social": "3LXVgvxVjTDSBoghdcRuxxXQqu7Po7ekVTpzfmG1qBrp-0-widget", "block_id": 109951655, "block_timestamp": "2024-01-09T03:47:54.465Z", "signer_id": "bos.questverse.near", "widget_name": "components.quest.claim", "source_code": "const isAvailable = true;\nconst isClaimed = false;\n\nconst accountId = props.accountId ?? context.accountId;\nconst questId = props.questId;\n\nif (!accountId || !questId) {\n  return \"No account or quest id provided\";\n}\n\nconst data = {\n  [accountId]: {\n    index: {\n      quest: JSON.stringify({\n        key: questId,\n        value: {\n          type,\n          accountId,\n        },\n      }),\n    },\n  },\n};\n\nconst type = isClaimed ? \"disclaim\" : \"claim\";\n\nconst claimQuest = () => {\n  const claimArgs = {\n    claim: {\n      account_id: accountId,\n      quest_id: String(questId),\n    },\n    signature: \"signed_signature\"\n  };\n  const transactions = [\n    {\n      contractName: \"social.near\",\n      methodName: \"set\",\n      args: { data },\n    },\n    {\n      contractName: \"v0.questverse.near\",\n      methodName: \"claim_reward_unverified\",\n      args: claimArgs,\n    },\n  ];\n  Near.call(transactions);\n};\n\nreturn (\n  <div className=\"m-3\">\n    <button\n      className={`btn ${\n        isClaimed ? \"btn-outline-secondary\" : \"btn-outline-dark\"\n      }`}\n      onClick={claimQuest}\n    >\n      {isClaimed ? \"claimed\" : \"claim\"}\n    </button>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bos.questverse.near/widget/components.quest.claim", "fact_widget_deployments_id": "5b91d62f79395bc5292603791aeab984", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 1}