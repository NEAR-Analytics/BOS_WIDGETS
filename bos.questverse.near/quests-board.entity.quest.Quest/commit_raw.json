{"tx_hash": "FQxf13bkW63Doc7Ag3yGxcD5zhvNfG5gzRVsfJhMmhCR", "action_id_social": "8EhRRHjdzNDZunzmz8DAcRmopULaRG77kFrbxcHL6fL7-0-widget", "block_id": 107259127, "block_timestamp": "2023-12-06T05:38:52.610Z", "signer_id": "bos.questverse.near", "widget_name": "quests-board.entity.quest.Quest", "source_code": "console.log(\"loading for each quest\");\n/* INCLUDE: \"common.jsx\" */\nconst creatorQuest = {\n  id: 823740323,\n  title: \"Creator Quest\",\n  description: \"Publish at least 3 widgets\",\n  imageUrl: \"Publish at least 3 widgets\",\n  questType: \"Native\",\n  startTime: 1695018482000,\n  endTime: 1695630800000,\n  rewardAmount: 1,\n  totalParticipantsAllowed: 50,\n  indexerConfigId: \"creator_quest\",\n  deployerAccountId: \"roshaan.near\",\n};\n\nconst composerQuest = {\n  id: 873740323,\n  quest_order: 1,\n  title: \"Composer Quest\",\n  description: \"Compose Two or more components together into one\",\n  questType: \"Native\",\n  startTime: 1695018482000,\n  endTime: 1695018482000,\n  rewardAmount: 0.005,\n  totalParticipantsAllowed: 50,\n  indexerConfigId: \"composer_quest\",\n  deployerAccountId: \"near\",\n};\n\nconst contractorQuest = {\n  id: 893740323,\n  quest_order: 1,\n  title: \"Contractor Quest\",\n  description: \"Deploy a smart contract and be a BOS developer\",\n  questType: \"Native\",\n  startTime: 1695018482000,\n  endTime: 1699018482000,\n  rewardAmount: 10,\n  totalParticipantsAllowed: 30,\n  indexerConfigId: \"contractor_quest\",\n  deployerAccountId: \"devgovgigs.near\",\n};\n\nconst governanceQuest = {\n  id: 813740323,\n  quest_order: 1,\n  title: \"Near NDC\",\n  description: \"Join a Dao & Vote on a proposal.\",\n  questType: \"NFT\",\n  startTime: 1694700077000,\n  endTime: 1695018482000,\n  rewardAmount: 1,\n  totalParticipantsAllowed: 15,\n  indexerConfigId: \"governance_quest\",\n  deployerAccountId: \"election.ndctools.near\",\n};\n\nconst mockedQuests = {\n  873740323: composerQuest,\n  823740323: creatorQuest,\n  893740323: contractorQuest,\n  813740323: governanceQuest,\n};\nconst nearQuestVerseContractAccountId =\n  props.nearQuestVerseContractAccountId ||\n  (context.widgetSrc ?? \"quests.near\").split(\"/\", 1)[0];\n\nconst nearQuestVerseWidgetsAccountId =\n  props.nearQuestVerseWidgetsAccountId ||\n  (context.widgetSrc ?? \"quests.near\").split(\"/\", 1)[0];\n\nfunction widget(widgetName, widgetProps, key) {\n  widgetProps = {\n    ...widgetProps,\n    nearQuestVerseContractAccountId: props.nearQuestVerseContractAccountId,\n    nearQuestVerseWidgetsAccountId: props.nearQuestVerseWidgetsAccountId,\n    referral: props.referral,\n  };\n\n  return (\n    <Widget\n      src={`${nearQuestVerseWidgetsAccountId}/widget/quests-board.${widgetName}`}\n      props={widgetProps}\n      key={key}\n    />\n  );\n}\n\nfunction href(widgetName, linkProps) {\n  linkProps = { ...linkProps };\n\n  if (props.nearQuestVerseContractAccountId) {\n    linkProps.nearQuestVerseContractAccountId =\n      props.nearQuestVerseContractAccountId;\n  }\n\n  if (props.nearQuestVerseWidgetsAccountId) {\n    linkProps.nearQuestVerseWidgetsAccountId =\n      props.nearQuestVerseWidgetsAccountId;\n  }\n\n  const linkPropsQuery = Object.entries(linkProps)\n    .filter(([_key, nullable]) => (nullable ?? null) !== null)\n    .map(([key, value]) => `${key}=${value}`)\n    .join(\"&\");\n\n  return `/#/${nearQuestVerseWidgetsAccountId}/widget/quests-board.entity.quest.${widgetName}${linkPropsQuery ? \"?\" : \"\"\n    }${linkPropsQuery}`;\n}\n/* END_INCLUDE: \"common.jsx\" */\n/* INCLUDE: \"core/lib/gui/attractable\" */\nconst AttractableDiv = styled.div`\n  box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075) !important;\n  transition: box-shadow 0.6s;\n\n  &:hover {\n    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15) !important;\n  }\n`;\n\nconst AttractableLink = styled.a`\n  box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075) !important;\n  transition: box-shadow 0.6s;\n\n  &:hover {\n    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15) !important;\n  }\n`;\n\nconst AttractableImage = styled.img`\n  box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075) !important;\n  transition: box-shadow 0.6s;\n\n  &:hover {\n    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15) !important;\n  }\n`;\n/* END_INCLUDE: \"core/lib/gui/attractable\" */\n\nconst ButtonWithHover = styled.button`\n  background-color: #fff;\n  &:hover {\n    background-color: #e9ecef;\n    color: #000;\n  }\n`;\n\nconst questId = props.quest.id ?? (props.id ? parseInt(props.id) : 0);\nconsole.log(JSON.stringify(props), \"printing all props\");\nconst quest =\n  props.quest ??\n  mockedQuests[questId] ??\n  Near.view(nearQuestVerseContractAccountId, \"get_quest_by_id\", {\n    quest_id: questId,\n  });\nif (!quest) {\n  return <div>Loading ...</div>;\n}\nconsole.log(\"quest\", quest);\nconst currentTimestamp = props.timestamp;\nconst compareTimestamp = props.compareTimestamp ?? \"\";\nconst swapTimestamps = currentTimestamp < compareTimestamp;\n\nfunction readableDate(timestamp) {\n  var a = new Date(timestamp);\n  console.log(a, \"a\");\n  return a.toDateString() + \" \" + a.toLocaleTimeString();\n}\n\nconst startTimestamp = readableDate(quest.startTime);\nconst endTimestamp = readableDate(quest.endTime);\n\nconst is_quest_expired = quest.endTime < Date.now() * 1000000;\nconst is_quest_active = quest.startTime < Date.now() * 1000000;\nconst is_quest_upcoming = quest.startTime > Date.now() * 1000000;\n\nconst quest_status = () => {\n  if (is_quest_expired) {\n    return \"Expired\";\n  } else if (is_quest_active) {\n    return \"Active\";\n  } else if (is_quest_upcoming) {\n    return \"Upcoming\";\n  }\n};\n\nconst shareButton = (\n  <a\n    class=\"card-link text-dark\"\n    href={href(\"Quest\", { id: questId })}\n    role=\"button\"\n    target=\"_blank\"\n    title=\"Open in new tab\"\n  >\n    <div class=\"bi bi-share\"></div>\n  </a>\n);\n\n// card-header\nconst header = (\n  <div className=\"p-3 pt-4\" key=\"header\">\n    <small class=\"text-muted\">\n      <div class=\"row justify-content-between\">\n        <div class=\"col-4\">\n          {widget(\"components.molecule.profile-card\", {\n            accountId: quest.deployerAccountId,\n          })}\n        </div>\n        <div class=\"col-5\">\n          <div class=\"d-flex justify-content-end\">\n            Quest Status: {quest_status()}\n  </div>\n          <div class=\"d-flex justify-content-end\">\n            {shareButton}\n          </div>\n        </div>\n      </div>\n    </small>\n  </div>\n);\n\nconst editUrl = `https://near.org/#/dev-queryapi.dataplatform.near/widget/QueryApi.App?selectedIndexerPath=morgs.near/bos_quests/view=editor-window`;\nconst tokenMapping = {\n  NEAR: \"NEAR\",\n  Native: \"NEAR\",\n  NFT: \"Digital Collectible\",\n};\n\n// const reverseTokenMapping = Object.keys(tokenMapping).reduce(\n//   (reverseMap, key) => {\n//     const value = tokenMapping[key];\n//     if (typeof value === \"object\") {\n//       reverseMap[JSON.stringify(value)] = key;\n//     }\n//     return reverseMap;\n//   },\n//   {}\n// );\nfunction tokenResolver(reward_type) {\n    const tokenString = tokenMapping[reward_type];\n    return tokenString || null;\n}\nconst questExtra = (\n  <div key=\"quest-extra\">\n    <h6>\n      <a class=\"text-muted\" href={editUrl}>\n        Live Indexer: Dataplatform.near/{quest.indexerConfigId}\n      </a>\n    </h6>\n    <h6 class=\"card-subtitle mb-2 text-muted\">\n      Reward amount: {quest.rewardAmount} {tokenResolver(quest.questType)}\n    </h6>\n    <h6 class=\"card-subtitle mb-2 text-muted\">\n      Total Participants Allowed: {quest.totalParticipantsAllowed}\n    </h6>\n    <h6 class=\"card-subtitle mb-2 text-muted\">\n      Quest Starts {startTimestamp}\n    </h6>\n    <h6 class=\"card-subtitle mb-2 text-muted\">Quest Ends {endTimestamp}</h6>\n  </div>\n);\n\n// TODO Replace likes on Quests with Quest Signups.\n//\n//\n// const containsLike = quest.likes.find((l) => l.author_id == context.accountId);\nconst likeBtnClass = containsLike ? fillIcons.Like : emptyIcons.Like;\n// This must be outside onLike, because Near.view returns null at first, and when the view call finished, it returns true/false.\n// If checking this inside onLike, it will give `null` and we cannot tell the result is true or false.\n// let grantNotify = Near.view(\"social.near\", \"is_write_permission_granted\", {\n//   predecessor_id: nearQuestVerseContractAccountId,\n//   key: context.accountId + \"/index/notify\",\n// });\n// if (grantNotify === null) {\n//   return;\n// }\n// const onLike = () => {\n//   if (!context.accountId) {\n//     return;\n//   }\n//   let likeTxn = [\n//     {\n//       contractName: nearQuestVerseContractAccountId,\n//       methodName: \"add_like\",\n//       args: {\n//         post_id: postId,\n//       },\n//       deposit: Big(10).pow(21).mul(2),\n//       gas: Big(10).pow(12).mul(100),\n//     },\n//   ];\n//\n//   if (grantNotify === false) {\n//     likeTxn.unshift({\n//       contractName: \"social.near\",\n//       methodName: \"grant_write_permission\",\n//       args: {\n//         predecessor_id: nearQuestVerseContractAccountId,\n//         keys: [context.accountId + \"/index/notify\"],\n//       },\n//       deposit: Big(10).pow(23),\n//       gas: Big(10).pow(12).mul(30),\n//     });\n//   }\n//   Near.call(likeTxn);\n// };\n//\n  const Button = styled.button`\n  height: 40px;\n  font-size: 14px;\n  background-color: #1778F2;\n`;\n\nconst buttonsFooter =\n  <div class=\"d-flex justify-content-end\" key=\"buttons-footer\">\n    <div class=\"col-8\">\n      <div class=\"d-flex justify-content-end\" aria-label=\"Basic outlined example\">\n        <Button\n          type=\"button\"\n          style={{\"color\":\"white\"}}\n          onClick={onParticipate}\n        >\n        Sign Up for Quest!\n        </Button>\n      </div>\n    </div>\n  </div>;\n\n//\n\nconst timestampElement = (quest) => {\n  return (\n    <a\n      class=\"text-muted\"\n      href={href(\"Quest\", {\n        id: quest.questId,\n        timestamp: quest.startTime,\n      })}\n    >\n      Starts: {readableDate(quest.startTime).substring(4)}\n      Ends: {readableDate(quest.endTime).substring(4)}\n      <Widget\n        src=\"mob.near/widget/ProfileImage\"\n        props={{\n          accountId: quest.deployer_id,\n          style: {\n            width: \"1.25em\",\n            height: \"1.25em\",\n          },\n          imageStyle: {\n            transform: \"translateY(-12.5%)\",\n          },\n        }}\n      />\n    </a>\n  );\n};\n\nconst renderQuest = (quest) => {\n  const Card = styled.div`\n    position: relative;\n    width: 100%;\n    border-radius: 12px;\n    background: #fff;\n    border: 1px solid #eceef0;\n    box-shadow: 0px 1px 3px rgba(16, 24, 40, 0.1),\n      0px 1px 2px rgba(16, 24, 40, 0.06);\n    overflow: hidden;\n    margin-bottom: 24px;\n  `;\n\n  const CardBody = styled.div`\n    padding: 16px;\n    display: flex;\n    gap: 16px;\n    align-items: center;\n\n    > * {\n      min-width: 0;\n    }\n  `;\n\n  const CardContent = styled.div`\n    width: 100%;\n  `;\n\n  const CardFooter = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    gap: 16px;\n    padding: 16px;\n    border-top: 1px solid #eceef0;\n  `;\n\n  const CardTag = styled.p`\n    margin: 0;\n    font-size: 9px;\n    line-height: 14px;\n    background: #eceef0;\n    color: #687076;\n    font-weight: 400;\n    white-space: nowrap;\n    position: absolute;\n    top: 0;\n    right: 0;\n    border-bottom-left-radius: 3px;\n    padding: 0 4px;\n\n    i {\n      margin-right: 3px;\n    }\n  `;\n\n  const TextLink = styled.a`\n    display: block;\n    margin: 0;\n    font-size: 14px;\n    line-height: 18px;\n    color: ${(p) => (p.bold ? \"#11181C !important\" : \"#687076 !important\")};\n    font-weight: ${(p) => (p.bold ? \"600\" : \"400\")};\n    font-size: ${(p) => (p.small ? \"12px\" : \"14px\")};\n    overflow: ${(p) => (p.ellipsis ? \"hidden\" : \"visible\")};\n    text-overflow: ${(p) => (p.ellipsis ? \"ellipsis\" : \"unset\")};\n    white-space: nowrap;\n    outline: none;\n\n    &:focus,\n    &:hover {\n      text-decoration: underline;\n    }\n  `;\n\n  const Text = styled.p`\n    margin: 0;\n    font-size: 14px;\n    line-height: 20px;\n    color: ${(p) => (p.bold ? \"#11181C\" : \"#687076\")};\n    font-weight: ${(p) => (p.bold ? \"600\" : \"400\")};\n    font-size: ${(p) => (p.small ? \"12px\" : \"14px\")};\n    overflow: ${(p) => (p.ellipsis ? \"hidden\" : \"\")};\n    text-overflow: ${(p) => (p.ellipsis ? \"ellipsis\" : \"\")};\n    white-space: nowrap;\n\n    i {\n      margin-right: 3px;\n    }\n  `;\n\n  const Thumbnail = styled.a`\n    display: block;\n    width: 60px;\n    height: 60px;\n    flex-shrink: 0;\n    border: 1px solid #eceef0;\n    border-radius: 8px;\n    overflow: hidden;\n    outline: none;\n    transition: border-color 200ms;\n\n    &:focus,\n    &:hover {\n      border-color: #d0d5dd;\n    }\n\n    img {\n      object-fit: cover;\n      width: 100%;\n      height: 100%;\n    }\n  `;\n\n  const Row = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    width: 100%;\n  `;\n  const TagsWrapper = styled.div`\n    position: relative;\n    margin-top: 4px;\n  `;\n\n  const ButtonLink = styled.a`\n    padding: 8px;\n    height: 32px;\n    border: 1px solid #d7dbdf;\n    border-radius: 100px;\n    font-weight: 600;\n    font-size: 12px;\n    line-height: 15px;\n    text-align: center;\n    cursor: pointer;\n    color: ${(p) => (p.primary ? \"#006ADC\" : \"#11181C\")} !important;\n    background: #fbfcfd;\n    white-space: nowrap;\n\n    &:hover,\n    &:focus {\n      background: #ecedee;\n      text-decoration: none;\n      outline: none;\n    }\n  `;\n\n  return (\n    <Card>\n      <CardBody>\n        <Thumbnail>\n          <Widget\n            src=\"mob.near/widget/Image\"\n            props={{\n              image: metadata.image,\n              fallbackUrl: quest.imageUrl,\n              alt: \"Near QueryApi indexer\",\n            }}\n          />\n        </Thumbnail>\n        <Row>\n          <div className={{ display: \"flex\", \"flex-direction\": \"row\" }}>\n            <TextLink as=\"a\" bold ellipsis>\n              {quest.title}\n            </TextLink>\n          </div>\n    Description: <div>{quest.description}</div>\n        </Row>\n      </CardBody>\n    </Card>\n  );\n};\n\nconst emptyIcons = {\n  Native: \"bi-currency-bitcoin\",\n  Nft: \"bi-palette-fill\",\n  Like: \"bi-heart\",\n  Reply: \"bi-reply\",\n};\n\n// <i class={`bi ${emptyIcons[quest.questType]}`}> </i>\nconst questTitle =\n  quest.quest_order != 1 ? (\n    <div key=\"post-title\"></div>\n  ) : (\n    <h5 class=\"card-title mb-2\" key=\"post-title\">\n      <div className=\"row justify-content-between\">\n        <div class=\"col-9\">\n          {quest.title}\n        </div>\n      </div>\n    </h5>\n  );\n\nconst contentArray = quest.description.split(\"\\n\");\nconst needClamp = contentArray.length > 5;\n\ninitState({\n  quest: undefined,\n  clamp: needClamp,\n});\n\nconsole.log(\"load props here Quest 2, \", props);\nconst clampedContent = needClamp\n  ? contentArray.slice(0, 3).join(\"\\n\")\n  : quest.description;\n\n// Should make sure the posts under the currently top viewed post are limited in size.\nconst descriptionArea = (\n  <div class=\"pt-2\">\n    <div class={state.clamp ? \"clamp\" : \"\"}>\n      {widget(\"components.molecule.markdown-viewer\", {\n        text: `Description: ${state.clamp ? clampedContent : quest.description}`,\n      })}\n    </div>\n    {state.clamp ? (\n      <div class=\"d-flex justify-content-start\">\n        <a\n          class=\"btn-link text-dark fw-bold text-decoration-none\"\n          onClick={() => State.update({ clamp: false })}\n        >\n          See more\n        </a>\n      </div>\n    ) : (\n      <></>\n    )}\n  </div>\n);\n// isSecondaryQuest ? (\n// <LimitedMarkdown className=\"overflow-auto\" key=\"description-area\">\n//   {widget(\"components.molecule.markdown-viewer\", {\n//     text: quest.description,\n//   })}\n// </LimitedMarkdown>\n// ) :\n\nconst renderedQuest = () => {\n  <div class=\"row\" key=\"quests-list\">\n    <div>renderQuest(quest)</div>\n  </div>;\n};\n\nconsole.log(\"load props here Quest 1, \", props);\nreturn (\n  <AttractableDiv className={`card`}>\n    {header}\n    <div className=\"card-body\">\n      <>\n        {questTitle}\n        {questExtra}\n        {descriptionArea}\n      </>\n      {buttonsFooter}\n    </div>\n  </AttractableDiv>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bos.questverse.near/widget/quests-board.entity.quest.Quest", "fact_widget_deployments_id": "84ac18ae946b3c2040572a86ff6def6c", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}