{"tx_hash": "8t1RJJkAq6DkwYANkqEsPdxBFr1yNFvdw11qkFqB3dbz", "action_id_social": "9ZxXF1JknS36nQT8HZWzKzCtLJAm27WSYVfVQPXteiEV-0-widget", "block_id": 107259057, "block_timestamp": "2023-12-06T05:37:28.086Z", "signer_id": "bos.questverse.near", "widget_name": "quests-board.entity.quest.Card", "source_code": "const ownerId = \"quests.near\";\nconst questId = props.questId;\nconst full = props.full ?? false;\nconst large = props.large ?? true;\n\nconst creatorQuest = {\n  id: 823740323,\n  title: \"Creator Quest: Create BOS components!\",\n  description: \"Publish at least 3 widgets on the BOS\",\n  imageUrl: \"Publish at least 3 widgets\",\n  questType: \"Native\",\n  startTime: 1695018482000,\n  endTime: 1695630800000,\n  rewardAmount: 1,\n  totalParticipantsAllowed: 50,\n  indexerConfigId: \"creator_quest\",\n  deployerAccountId: \"roshaan.near\",\n  status: \"Active\",\n  tags: [\"onboarding\", \"developer\"],\n  signUps: [\"roshaan.near\"],\n  completed: [\"roshaan.near\"],\n};\n\nconst composerQuest = {\n  id: 873740323,\n  quest_order: 1,\n  title: \"Composer Quest - Use another users BOS component in your frontend!\",\n  description:\n    \"Compose Two or more components. Caveat is that you need use another user's component in your app. Please fill out all the metadata category for your app to qualify for the quest.\",\n  questType: \"Native\",\n  startTime: 1695018482000,\n  endTime: 1695018482000,\n  rewardAmount: 0.005,\n  totalParticipantsAllowed: 50,\n  indexerConfigId: \"composer_quest\",\n  deployerAccountId: \"near\",\n  status: \"Expired\",\n  tags: [\"onboarding\", \"developer\"],\n  signUps: [\"roshaan.near\", \"nearlymartin.near\"],\n  completed: [\"roshaan.near\"],\n};\n\nconst contractorQuest = {\n  id: 893740323,\n  quest_order: 1,\n  title: \"Contractor Quest - Can you deploy a smart contract?\",\n  description: \"Deploy a smart contract and be a BOS developer\",\n  questType: \"Native\",\n  startTime: 1695018482000,\n  endTime: 1699018482000,\n  rewardAmount: 10,\n  totalParticipantsAllowed: 30,\n  indexerConfigId: \"contractor_quest\",\n  deployerAccountId: \"devgovgigs.near\",\n  status: \"Expired\",\n  tags: [\"onboarding\", \"developer\"],\n  signUps: [\"roshaan.near\"],\n  completed: [\"roshaan.near\"],\n};\n\nconst governanceQuest = {\n  id: 813740323,\n  quest_order: 1,\n  title: \"Learn to engage with on-chain Governance\",\n  description: \"Join a Dao & Vote on a proposal created by someone else\",\n  questType: \"NFT\",\n  startTime: 1694700077000,\n  endTime: 1695018482000,\n  rewardAmount: 1,\n  totalParticipantsAllowed: 15,\n  indexerConfigId: \"governance_quest\",\n  deployerAccountId: \"election.ndctools.near\",\n  status: \"Upcoming\",\n  tags: [\"onboarding\", \"developer\"],\n  signUps: [\"roshaan.near\", \"nearlymartin.near\", \"plugrel.near\"],\n  completed: [\"roshaan.near\"],\n};\n\nconst mockedQuests = {\n  873740323: composerQuest,\n  823740323: creatorQuest,\n  893740323: contractorQuest,\n  813740323: governanceQuest,\n};\n\nState.init({\n  quest: props.quest,\n  questIsFetched: false,\n  profile: null,\n  profileIsFetched: false,\n});\n\nif (!state.questIsFetched) {\n  if (mockedQuests.hasOwnProperty(questId)) {\n    let quest = mockedQuests[questId];\n\n    State.update({ quest, questIsFetched: true });\n  } else {\n    Near.asyncView(\n      ownerId,\n      \"get_quest_by_id\",\n      { quest_id: questId },\n      \"final\",\n      false\n    ).then((quest) => State.update({ quest, questIsFetched: true }));\n  }\n}\n\nif (state.quest && !state.profileIsFetched) {\n  Near.asyncView(\n    \"social.near\",\n    \"get\",\n    { keys: [`${state.quest.deployerAccountId}/profile/**`] },\n    \"final\",\n    false\n  ).then((data) =>\n    State.update({\n      profile: data[state.quest.deployerAccountId].profile,\n      profileIsFetched: true,\n    })\n  );\n}\nif (!state.questIsFetched || !state.profileIsFetched) {\n  return <>Loading...</>;\n}\n\nconst Title = styled.h3`\n  font-style: normal;\n  font-weight: 600;\n  font-size: 1.5em;\n  line-height: 1.4em;\n  color: #101828;\n  flex: none;\n  flex-grow: 1;\n`;\n\nconst Text = styled.span`\n  display: inline-block;\n  width: 120px;\n  font-style: normal;\n  font-weight: 600;\n  font-size: 1em;\n  color: #101828;\n`;\nconst Details = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding: 0.5em 0px 0px;\n  gap: 1.5em;\n  flex: none;\n  align-self: stretch;\n  flex-grow: 0;\n`;\n\nconst Header = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 0.5em 0px 0px;\n  gap: 1.5em;\n  flex: none;\n  align-self: stretch;\n  width: 100%;\n  justify-content: space-between;\n`;\n\nconst Item = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding: 0px;\n  gap: 0.4em;\n  flex: none;\n  flex-grow: 0;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 0.75em;\n  line-height: 1em;\n  color: #11181c;\n`;\n\nconst TitleContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding: 0.5em 0px 0px;\n  gap: 1.5em;\n  flex: none;\n  align-self: stretch;\n  flex-grow: 0;\n`;\n\nconst time = (\n  <Item>\n    <svg\n      width=\"15\"\n      height=\"16\"\n      viewBox=\"0 0 15 16\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M1.5 14.75L1.5 2M1.5 8.75H7.05C7.47004 8.75 7.68006 8.75 7.84049 8.66825C7.98161 8.59635 8.09635 8.48161 8.16825 8.34049C8.25 8.18006 8.25 7.97004 8.25 7.55V2.45C8.25 2.02996 8.25 1.81994 8.16825 1.65951C8.09635 1.51839 7.98161 1.40365 7.84049 1.33175C7.68006 1.25 7.47004 1.25 7.05 1.25H2.7C2.27996 1.25 2.06994 1.25 1.90951 1.33175C1.76839 1.40365 1.65365 1.51839 1.58175 1.65951C1.5 1.81994 1.5 2.02996 1.5 2.45V8.75ZM8.25 2.75H13.05C13.47 2.75 13.6801 2.75 13.8405 2.83175C13.9816 2.90365 14.0963 3.01839 14.1683 3.15951C14.25 3.31994 14.25 3.52996 14.25 3.95V9.05C14.25 9.47004 14.25 9.68006 14.1683 9.84049C14.0963 9.98161 13.9816 10.0963 13.8405 10.1683C13.6801 10.25 13.47 10.25 13.05 10.25H9.45C9.02996 10.25 8.81994 10.25 8.65951 10.1683C8.51839 10.0963 8.40365 9.98161 8.33175 9.84049C8.25 9.68006 8.25 9.47004 8.25 9.05V2.75Z\"\n        stroke=\"#7E868C\"\n        stroke-width=\"1.35\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n      />\n    </svg>\n    {new Date(Number(state.quest.startTime)).toLocaleDateString()} -\n    {new Date(Number(state.quest.endTime)).toLocaleDateString()}\n  </Item>\n);\nconst currency = state.quest.questType === \"Native\" ? \"Near\" : \"NFT\";\n\nconst rewardAmount = (\n  <Item>\n    <svg\n      width=\"18\"\n      height=\"14\"\n      viewBox=\"0 0 18 14\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M4.5 6.25V9.25M13.5 4.75V7.75M12.75 1C14.5865 1 15.5799 1.28107 16.0741 1.49908C16.1399 1.52812 16.1728 1.54263 16.2678 1.63328C16.3247 1.68761 16.4287 1.84705 16.4554 1.92107C16.5 2.04455 16.5 2.11205 16.5 2.24706V10.3084C16.5 10.9899 16.5 11.3307 16.3978 11.5059C16.2938 11.6841 16.1936 11.7669 15.999 11.8354C15.8076 11.9027 15.4215 11.8285 14.6491 11.6801C14.1085 11.5762 13.4674 11.5 12.75 11.5C10.5 11.5 8.25 13 5.25 13C3.41347 13 2.42015 12.7189 1.92591 12.5009C1.86009 12.4719 1.82718 12.4574 1.7322 12.3667C1.67526 12.3124 1.57134 12.153 1.5446 12.0789C1.5 11.9554 1.5 11.8879 1.5 11.7529L1.5 3.69164C1.5 3.01006 1.5 2.66928 1.60221 2.49411C1.70618 2.31592 1.80644 2.23309 2.00104 2.16461C2.19235 2.09729 2.57853 2.17149 3.35087 2.31989C3.89146 2.42376 4.53261 2.5 5.25 2.5C7.5 2.5 9.75 1 12.75 1ZM10.875 7C10.875 8.03553 10.0355 8.875 9 8.875C7.96447 8.875 7.125 8.03553 7.125 7C7.125 5.96447 7.96447 5.125 9 5.125C10.0355 5.125 10.875 5.96447 10.875 7Z\"\n        stroke=\"#7E868C\"\n        stroke-width=\"1.35\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n      />\n    </svg>\n    <b>{currency}</b>{\" \"}\n    {Number(state.quest.rewardAmount).toLocaleString(\"en-US\", {\n      notation: \"compact\",\n    })}\n  </Item>\n);\n\nconst participantsAllowed = (\n  <Item>\n    <svg\n      width=\"14\"\n      height=\"16\"\n      viewBox=\"0 0 14 16\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M13 14.75C13 13.7033 13 13.18 12.8708 12.7541C12.58 11.7953 11.8297 11.045 10.8709 10.7542C10.445 10.625 9.92167 10.625 8.875 10.625H5.125C4.07833 10.625 3.55499 10.625 3.12914 10.7542C2.17034 11.045 1.42003 11.7953 1.12918 12.7541C1 13.18 1 13.7033 1 14.75M10.375 4.625C10.375 6.48896 8.86396 8 7 8C5.13604 8 3.625 6.48896 3.625 4.625C3.625 2.76104 5.13604 1.25 7 1.25C8.86396 1.25 10.375 2.76104 10.375 4.625Z\"\n        stroke=\"#7E868C\"\n        stroke-width=\"1.35\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n      />\n    </svg>\n    {state.quest.totalParticipantsAllowed}\n  </Item>\n);\n\nconst body = (\n  <>\n    <Header>\n      <Details>\n        <Widget\n          src={`${ownerId}/widget/quests-board.components.profile.Icon`}\n          props={{ accountId: state.quest.deployerAccountId, size: \"30px\" }}\n        />\n        <Widget\n          src={`${ownerId}/widget/quests-board.components.profile.NameAndAccount`}\n          props={{\n            accountId: state.quest.deployerAccountId,\n            name: state.profile.name,\n            nameSize: \".95em\",\n            accountSize: \".75em\",\n          }}\n        />\n      </Details>\n      <Widget\n        src={`${ownerId}/widget/quests-board.components.molecule.StatusIndicator`}\n        props={{\n          status: state.quest.status,\n        }}\n      />\n    </Header>\n    <a\n      href={`/${ownerId}/widget/Index?tab=quest&deployerAccountId=${state.quest.deployerAccountId}&qid=${qid}`}\n    >\n      <Title className=\"pt-2\">{state.quest.title}</Title>\n    </a>\n    <Details>\n      {time}\n      {rewardAmount}\n      {participantsAllowed}\n    </Details>\n    <Widget\n      src={`${ownerId}/widget/quests-board.components.molecule.DescriptionArea`}\n      props={{ description: state.quest.description }}\n    />\n    <Widget\n      src={`${ownerId}/widget/quests-board.components.molecule.Tags`}\n      props={{\n        tags: state.quest.tags.reduce((ob, tag) => ({ ...ob, [tag]: \"\" }), {}),\n      }}\n    />\n  </>\n);\n\nconst FooterButton = styled.a`\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  padding: 0.5em 1em;\n  gap: 0.5em;\n  height: 2.5em;\n  background: #fafafa;\n  border: 1px solid #eceef0;\n  border-radius: 50px;\n  flex: none;\n  order: 0;\n  flex-grow: 0;\n  font-style: normal;\n  font-weight: 600;\n  font-size: 0.9em;\n  line-height: 1em;\n  text-align: center;\n  color: ${({ blue }) => (blue ? \"#006ADC\" : \"#101828\")};\n  width: 48%;\n`;\n\nconst Footer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  gap: 1em;\n  width: 100%;\n`;\n\nconst ProposeButton = styled.div`\n  width: 48%;\n`;\n\nconst ButtonWithHover = styled.button`\n  background-color: #fff;\n  &:hover {\n    background-color: #e9ecef;\n    color: #000;\n  }\n`;\n\nconst onSignUp = () => {\n  console.log(\"signing up for quest\");\n};\nconst isUserSignedUp = state.quest.signUps.find((l) => l == context.accountId);\nconst footer = (\n  <Footer>\n    <div class=\"row\" key=\"buttons-footer\">\n      <div class=\"col-8\">\n        <Text>Sign Ups ({state.quest.signUps.length || 0})</Text>\n        <div class=\"btn-group\" role=\"group\" aria-label=\"Basic outlined example\">\n          <ButtonWithHover\n            type=\"button\"\n            class=\"btn\"\n            style={{ border: \"0px\", marginLeft: \"2px\" }}\n            onClick={onSignUp}\n          >\n            <Widget\n              src={`${ownerId}/widget/quests-board.components.layout.LikeButton.Faces`}\n              props={{ userSignUps: state.quest.signUps }}\n            />\n          </ButtonWithHover>\n        </div>\n      </div>\n      <div class=\"col-8\">\n        <Text> Finished By ({state.quest.completed.length || 0})</Text>\n        <div class=\"btn-group\" role=\"group\" aria-label=\"Basic outlined example\">\n          <ButtonWithHover\n            type=\"button\"\n            class=\"btn\"\n            style={{ border: \"0px\", marginLeft: \"2px\" }}\n            onClick={onSignUp}\n          >\n            <Widget\n              src={`${ownerId}/widget/quests-board.components.layout.LikeButton.Faces`}\n              props={{ userSignUps: state.quest.completed }}\n            />\n          </ButtonWithHover>\n        </div>\n      </div>\n    </div>\n    <FooterButton\n      href={`/${ownerId}/widget/Index?tab=quest&deployerAccountId=${deployerAccountId}&qid=${qid}`}\n    >\n      Accept\n    </FooterButton>\n  </Footer>\n);\n\nif (large) {\n  return (\n    <Widget\n      src={`${ownerId}/widget/quests-board.components.molecule.Card`}\n      props={{ body, footer, full }}\n    />\n  );\n}\nreturn (\n  <Widget\n    src={`${ownerId}/widget/quests-board.components.molecule.Card`}\n    props={{ body }}\n  />\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bos.questverse.near/widget/quests-board.entity.quest.Card", "fact_widget_deployments_id": "ff864719192758b1892996efc97b92c4", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}