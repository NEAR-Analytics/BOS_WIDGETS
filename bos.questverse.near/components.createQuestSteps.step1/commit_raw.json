{"tx_hash": "76XA46igNquWkSyz8dKYTEmdKp1Jf9aPpzooFHmGVRej", "action_id_social": "Ft165Mehi8tho9yZ7vvTWfUMeti32j4vsw61m4Tuq48s-0-widget", "block_id": 110007493, "block_timestamp": "2024-01-09T20:14:51.509Z", "signer_id": "bos.questverse.near", "widget_name": "components.createQuestSteps.step1", "source_code": "const { formState, errors, renderFooter } = props;\nconst { fetch_step_one_data } = VM.require(\n  \"bos.questverse.near/widget/data.data_step1\"\n);\nconst JSON = fetch_step_one_data();\nconst options = JSON.options;\n\nconst initialForm = {\n  selectedOption: formState.indexerConfig.selectedOption,\n  selectedAction: formState.indexerConfig.selectedAction,\n  formData: formState.initialForm.formData,\n  title: formState.initialForm.title,\n  description: formState.initialForm.description,\n  img_url: formState.initialForm.img_url,\n};\n\nState.init({\n  form: initialForm,\n});\n\nconst handleOptionsChange = (value) => {\n  State.update({\n    form: {\n      ...state.form,\n      selectedOption: value,\n      selectedAction: null,\n    },\n  });\n};\n\nconst handleInputChange = (value, fieldName) => {\n  State.update({\n    form: {\n      ...state.form,\n      formData: { ...state.form.formData, [fieldName]: value },\n    },\n  });\n};\n\nconst onValueChange = (key, value) => {\n  State.update({\n    form: {\n      ...state.form,\n      [key]: value,\n    },\n  });\n};\n\nconst renderActionsDropdown = () => {\n  if (state.form.selectedOption !== null) {\n    const selectedOptionObj = options.find(\n      (option) => option.name === state.form.selectedOption\n    );\n    if (selectedOptionObj && selectedOptionObj.actions) {\n      const actions = Object.keys(selectedOptionObj.actions);\n      return (\n        <div>\n          <h5 className=\"h5 fw-bold p-2\">Choose Action To Index</h5>\n          <Widget\n            src=\"nearui.near/widget/Input.Select\"\n            props={{\n              placeholder: \"Select Action\",\n              size: \"md\",\n              options: actions\n                .filter((action) => action !== null && action !== \"\")\n                .map((action) => ({\n                  title: action,\n                  value: action,\n                })),\n              value: state.form.selectedAction || \"\",\n              onChange: (v) => onValueChange(\"selectedAction\", v),\n            }}\n          />\n          {state.form.selectedAction &&\n            renderSubFields(\n              selectedOptionObj.actions[state.form.selectedAction]\n            )}\n        </div>\n      );\n    }\n  }\n  return null;\n};\n\nconst renderSubFields = (fields) => {\n  return (\n    <div>\n      <h3 className=\"h5 fw-bold p-2\">Customize Quest</h3>\n      {Object.keys(fields).map((field, index) => (\n        <div key={index}>\n          <Widget\n            src=\"nearui.near/widget/Input.ExperimentalText\"\n            props={{\n              label: <>{field}</>,\n              placeholder: field,\n              size: \"sm\",\n              onChange: (event) => handleInputChange(event, field),\n              error: errors[\"formData\"],\n              inputProps: {\n                name: field,\n                defaultValue: state.form.formData[`${field}`],\n              },\n            }}\n          />\n        </div>\n      ))}\n    </div>\n  );\n};\n\nreturn (\n  <div className=\"mt-4 ndc-card p-4\">\n    <div className=\"d-flex flex-column gap-4\">\n      <h2 className=\"h5 fw-bold\">\n        <span\n          className=\"rounded-circle d-inline-flex align-items-center justify-content-center fw-bolder h5 me-2\"\n          style={{\n            width: \"48px\",\n            height: \"48px\",\n            border: \"1px solid #82E299\",\n          }}\n        >\n          1\n        </span>\n        Quest Details & Action\n      </h2>\n      <h5 className=\"h5 fw-bold pt-4\">Select Project</h5>\n      <Widget\n        src=\"nearui.near/widget/Input.Select\"\n        props={{\n          placeholder: \"Select Project\",\n          size: \"md\",\n          options: options.map((option) => ({\n            title: option.name,\n            value: option.name,\n          })),\n          value: state.form.selectedOption || \"\",\n          onChange: (v) => handleOptionsChange(v),\n        }}\n      />\n      {renderActionsDropdown()}\n      {renderFooter(state.form)}\n    </div>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bos.questverse.near/widget/components.createQuestSteps.step1", "fact_widget_deployments_id": "a0c310a88d79132734d1985b2f6ba798", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}