{"tx_hash": "13XBrMRMjtWxehEnfJ3huAeFzFWAA5AtLQ5aJ6TLdbJS", "action_id_social": "HtU9xqwSTCA3NnAWAedq5KSPb1JWdqbMCEnnfkigbSeF-0-widget", "block_id": 107453461, "block_timestamp": "2023-12-08T17:41:29.415Z", "signer_id": "bos.questverse.near", "widget_name": "components.createQuestSteps.stepOne", "source_code": "// import TYPES from \"./types.json\"\nconst TYPES = props.data;\nconsole.log('types', TYPES);\n// function formatDate(date) {\n//   const year = date.getFullYear();\n//   const month = (date.getMonth() + 1).toString().padStart(2, \"0\");\n//   const day = date.getDate().toString().padStart(2, \"0\");\n//   return [year, month, day].join(\"-\");\n// }\n\n// const TODAY = formatDate(new Date());\n// const DAY_IN_SECONDS = 24 * 60 * 60 * 1000;\n\nState.init({\n  selectedCurrency: null,\n  selectedOption: null,\n  selectedFields: [],\n});\n\nfunction handleCurrencyChange(e) {\n  State.update({\n    selectedCurrency: e.target.value,\n    selectedOption: null,\n    selectedFields: [],\n  });\n}\n\nfunction handleOptionChange(e) {\n  console.log(e.target.value);\n  const currency = TYPES.project_types[0].crypto_currencies.find(\n    (crypto) => crypto.name === state.selectedCurrency\n  );\n  const action = currency.actions[e.target.value];\n  State.update({\n    selectedOption: e.target.value,\n    selectedFields: action.fields,\n  });\n}\n\nreturn (\n  <div>\n    <div className=\"stepOne\">\n      {/* <form action=\"123\" onSubmit=\"...\"> */}\n      <label htmlFor=\"currency\">Select Currency:</label>\n      <select id=\"currency\" onChange={handleCurrencyChange}>\n        <option value=\"\">Select</option>\n        {TYPES.project_types[0].crypto_currencies.map((crypto) => (\n          <option key={crypto.name} value={crypto.name}>\n            {crypto.name}\n          </option>\n        ))}\n      </select>\n\n      {state.selectedCurrency && (\n        <div>\n          <label htmlFor=\"option\">Select Option:</label>\n          <select id=\"option\" onChange={handleOptionChange}>\n            <option value=\"\">Select</option>\n            {TYPES.project_types[0].crypto_currencies\n              .find((crypto) => crypto.name === state.selectedCurrency)\n              .options.map((option) => (\n                <option key={option} value={option}>\n                  {option}\n                </option>\n              ))}\n          </select>\n        </div>\n      )}\n      {state.selectedFields.length > 0 && (\n        <div>\n          {state.selectedFields.map((field, index) => (\n            <div key={index}>\n              <label htmlFor={field.name}>{field.name}:</label>\n              <select id={field.name}>\n                <option value=\"\">Select</option>\n                {field.options.map((opt) => (\n                  <option key={opt} value={opt}>\n                    {opt}\n                  </option>\n                ))}\n              </select>\n            </div>\n          ))}\n        </div>\n      )}\n      {/* </form> */}\n      {/* <button type=\"submit\"> Submit</button> */}\n    </div>\n  </div>\n);\n//creation ->\n\n/**\n Import components to turn it into a carosel\n */\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bos.questverse.near/widget/components.createQuestSteps.stepOne", "fact_widget_deployments_id": "11301c6012fb2348f47f71a4c3d8596c", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}