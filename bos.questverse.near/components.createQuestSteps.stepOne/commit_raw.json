{"tx_hash": "3UXvz8XJUGjjTHdLWmrpVE4SBc7nZ1j9aBessNVshoVC", "action_id_social": "Ku19ALNCyvTrhjUFCY9sNtpX8ADyZBFgX49fCGMve3f-0-widget", "block_id": 107477855, "block_timestamp": "2023-12-09T00:55:35.770Z", "signer_id": "bos.questverse.near", "widget_name": "components.createQuestSteps.stepOne", "source_code": "const JSON = props.data;\nconst options = JSON.options;\n\nState.init({\n  selectedOption: null,\n  selectedAction: null,\n  formData: {},\n});\n\nconst handleOptionChange = (e) => {\n  State.update({\n    selectedOption: e.target.value,\n    selectedAction: null,\n    formData: {},\n  });\n};\n\nconst handleActionChange = (e) => {\n  State.update({\n    selectedAction: e.target.value,\n    formData: {},\n  });\n};\n\nconst handleInputChange = (e, fieldName) => {\n  const value = e.target.value;\n  State.update({\n    formData: { ...state.formData, [fieldName]: value },\n  });\n};\n\nconst renderActionsDropdown = () => {\n  if (state.selectedOption !== null) {\n    const selectedOptionObj = options.find(\n      (option) => option.name === state.selectedOption\n    );\n    if (selectedOptionObj && selectedOptionObj.actions) {\n      const actions = Object.keys(selectedOptionObj.actions);\n      return (\n        <div>\n          <label>Select Action:</label>\n          <select onChange={handleActionChange} value={state.selectedAction || \"\"}>\n            <option value=\"\">Select Action</option>\n            {actions.map((action, index) => (\n              <option key={index} value={action}>\n                {action}\n              </option>\n            ))}\n          </select>\n          {state.selectedAction &&\n            renderSubFields(selectedOptionObj.actions[state.selectedAction])}\n        </div>\n      );\n    }\n  }\n  return null;\n};\n\nconst renderSubFields = (fields) => {\n  return (\n    <div>\n      {Object.keys(fields).map((field, index) => (\n        <div key={index}>\n          <label>{field}</label>\n          <input\n            type=\"text\"\n            placeholder={fields[field]}\n            onChange={(event) => handleInputChange(event, field)}\n          />\n        </div>\n      ))}\n    </div>\n  );\n};\n\nreturn (\n  <div>\n    <label>Select Option:</label>\n    <select onChange={handleOptionChange} value={state.selectedOption || \"\"}>\n      <option value=\"\">Select Option</option>\n      {options.map((option, index) => (\n        <option key={index} value={option.name}>\n          {option.name}\n        </option>\n      ))}\n    </select>\n    {renderActionsDropdown()}\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bos.questverse.near/widget/components.createQuestSteps.stepOne", "fact_widget_deployments_id": "4d5d15c4d1cc387b072543c46cef3246", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 1}