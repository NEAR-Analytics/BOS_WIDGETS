{"tx_hash": "Hi3f1ZC89Whqui9PAgTfs1uz2qKQ5SXcCaJvCx7yvmBD", "action_id_social": "95WBfTzjSVj9wHC7pxZSZbb7qNaYNZTAqtzRzTiqYcYa-0-widget", "block_id": 107506092, "block_timestamp": "2023-12-09T09:23:14.846Z", "signer_id": "bos.questverse.near", "widget_name": "data.data_indexers", "source_code": "function fetch_indexers_config({ }) {\n  return {\n    all: {\n      \"any-interaction\": {\n        code: '  const h = block.header().height;\\n  // await context.set(\"height\", h);\\n  const daoTxs = block\\n    .actions()\\n    .filter((action) => action.receiverId.includes({{accountId}}))\\n    .flatMap((action) =>\\n      action.operations\\n        .map((operation) => operation[\"FunctionCall\"])\\n        .map((functionCallOperation) => ({\\n          ...functionCallOperation,\\n          args: base64decode(functionCallOperation.args),\\n          receiptId: action.receiptId, // providing receiptId as we need it\\n        }))\\n    );\\n\\n  if (daoTxs.length > 0) {\\n    console.log(\"Found DAO Txs in Block...\");\\n    console.log(daoTxs);\\n  }\\n',\n        filter_json:\n          '{\"indexer_rule_kind\":\"Action\",\"matching_rule\":{\"rule\":\"ACTION_ANY\",\"affected_account_id\":\"social.near\",\"status\":\"SUCCESS\"}}',\n        config: \"\\n\",\n        schema:\n          \"CREATE TABLE quest_tracker (\\n  id SERIAL PRIMARY KEY,\\n  account_id TEXT NOT NULL,\\n  is_completed BOOLEAN NOT NULL DEFAULT FALSE,\\n  block_height DECIMAL(58, 0) NOT NULL\\n);\\n\\nCREATE TABLE details (\\n  account_id TEXT NOT NULL,\\n  num_of_interactions DECIMAL(58, 0) NOT NULL\\n);\\n\\n-- Indexes\\nCREATE INDEX idx_account_id ON quest_tracker(account_id);\\n\",\n      },\n    },\n    \"astrodao.near\": {\n      config: '{\\n\"type\": \"multi\",\\n\"contract_id\": \"*.sputnik-dao.near\"\\n}\\n',\n      filter_json:\n        '{\"indexer_rule_kind\":\"Action\",\"matching_rule\":{\"rule\":\"ACTION_ANY\",\"affected_account_id\":\"*.sputnik-dao.near\",\"status\":\"SUCCESS\"}}',\n      join_dao: {\n        code: ' const DAO_ACCOUNT_ID = \"{{dao_account_id}}\";\\n  const GROUP = \"{{role}}\";\\n\\n  function base64decode(encodedValue) {\\n    let buff = Buffer.from(encodedValue, \"base64\");\\n    return JSON.parse(buff.toString(\"utf-8\"));\\n  }\\n  const h = block.header().height;\\n  const txs = block\\n    .actions()\\n    .filter((action) => action.receiverId.includes(DAO_ACCOUNT_ID))\\n    .flatMap((action) =>\\n      action.operations\\n        .map((operation) => operation[\"FunctionCall\"])\\n        .filter((operation) => operation?.methodName === \"add_proposal\")\\n        .map((functionCallOperation) => ({\\n          ...functionCallOperation,\\n          args: base64decode(functionCallOperation.args),\\n          receiptId: action.receiptId, // providing receiptId as we need it\\n        }))\\n    );\\n\\n  if (txs.length > 0) {\\n    console.log(\"Found DAO Txs in Block...\");\\n    const blockHeight = block.blockHeight;\\n    const blockTimestamp = block.header().timestampNanosec;\\n    await Promise.all(\\n      txs.map(async (action) => {\\n        console.log(action);\\n        const addMemberArgs = action?.proposal?.kind?.AddMemberToRole;\\n\\n        // if creates a post\\n        if (addMemberArgs.role == GROUP) {\\n          context.db.QuestTracker.insert({\\n            account_id: addMemberArgs.member_id,\\n            block_height: blockHeight,\\n            is_completed: true,\\n          });\\n          context.db.Details.insert({\\n            account_id: addMemberArgs.member_id,\\n            proposal_id: 0,\\n            receipt: action.receipt,\\n          });\\n        }\\n      })\\n    );\\n  }\\n',\n        filter_json:\n          '{\"indexer_rule_kind\":\"Action\",\"matching_rule\":{\"rule\":\"ACTION_ANY\",\"affected_account_id\":\"social.near\",\"status\":\"SUCCESS\"}}',\n        schema:\n          'CREATE TABLE\\n  quest_tracker (\\n    id SERIAL PRIMARY KEY,\\n    account_id VARCHAR NOT NULL,\\n    is_completed BOOLEAN NOT NULL DEFAULT FALSE,\\n    block_height DECIMAL(58, 0) NOT NULL\\n  );\\n\\nCREATE TABLE\\n  details (\\n    \"account_id\" VARCHAR NOT NULL,\\n    \"proposal_id\" DECIMAL(58, 0) NOT NULL,\\n    \"receipt\" VARCHAR NOT NULL\\n  );\\n\\nCREATE INDEX\\n  idx_account_id ON quest_tracker (account_id);\\n',\n        start_from_blockheight: 0,\n      },\n      vote_proposal: {},\n    },\n    \"devgogs.near\": {\n      attest_post: {},\n      config: '{\\n\"contract_id\": \"devgogs.near\"\\n}\\n',\n      filter_json:\n        '{\"indexer_rule_kind\":\"Action\",\"matching_rule\":{\"rule\":\"ACTION_ANY\",\"affected_account_id\":\"social.near\",\"status\":\"SUCCESS\"}}',\n      fund_project: {},\n      interact_with_community: {},\n      reply_to_post: {},\n    },\n    mintbase: {\n      buy_nft: {},\n      config: '{\\n  \"type\": \"multi\",\\n  \"contract_id\": \"*.mintbase1.near\"\\n}\\n',\n      filter_json:\n        '{\"indexer_rule_kind\":\"Action\",\"matching_rule\":{\"rule\":\"ACTION_ANY\",\"affected_account_id\":\"social.near\",\"status\":\"SUCCESS\"}}',\n      list_nft: {},\n    },\n    \"near-horizon\": {\n      config: '{\\n\"contract_id\": \"nearhorizon.near\"\\n}\\n',\n      filter_json:\n        '{\"indexer_rule_kind\":\"Action\",\"matching_rule\":{\"rule\":\"ACTION_ANY\",\"affected_account_id\":\"social.near\",\"status\":\"SUCCESS\"}}',\n    },\n    \"nft.genadrop.near\": {\n      config: '{\\n\"contract_id\": \"nft.genadrop.near\"\\n}\\n',\n      filter_json:\n        '{\"indexer_rule_kind\":\"Action\",\"matching_rule\":{\"rule\":\"ACTION_ANY\",\"affected_account_id\":\"social.near\",\"status\":\"SUCCESS\"}}',\n    },\n    paras: {},\n    \"potluck.near\": {\n      donate: {},\n    },\n    \"social.near\": {\n      complete_widget_metadata_infoany_widget_data: {},\n      config: '{\\n\"contract_id\": \"social.near\"\\n}\\n',\n      filter_json:\n        '{\"indexer_rule_kind\":\"Action\",\"matching_rule\":{\"rule\":\"ACTION_ANY\",\"affected_account_id\":\"social.near\",\"status\":\"SUCCESS\"}}',\n      create_componnet_with_x_widgets: {},\n      follow_user: {\n        indexerFunction: \"\",\n        filter_json:\n          '{\"indexer_rule_kind\":\"Action\",\"matching_rule\":{\"rule\":\"ACTION_ANY\",\"affected_account_id\":\"social.near\",\"status\":\"SUCCESS\"}}',\n        schema: \"\",\n      },\n      \"like-post\": {\n        indexerFunction: \"\",\n        filter_json:\n          '{\"indexer_rule_kind\":\"Action\",\"matching_rule\":{\"rule\":\"ACTION_ANY\",\"affected_account_id\":\"social.near\",\"status\":\"SUCCESS\"}}',\n        schema: \"\",\n      },\n    },\n  };\n}\n\nreturn { fetch_indexers_config };\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bos.questverse.near/widget/data.data_indexers", "fact_widget_deployments_id": "7df933965ca3ed5aceb11b01e3a34243", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}