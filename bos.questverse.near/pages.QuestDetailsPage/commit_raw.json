{"tx_hash": "AGYnRm9YPsV4gAuez54VZiHMzcHgH5U9QaZPipzcYysy", "action_id_social": "3LXVgvxVjTDSBoghdcRuxxXQqu7Po7ekVTpzfmG1qBrp-0-widget", "block_id": 109951655, "block_timestamp": "2024-01-09T03:47:54.465Z", "signer_id": "bos.questverse.near", "widget_name": "pages.QuestDetailsPage", "source_code": "const questContract = \"questsmock.near\";\nconst verifiedCheck = (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"16\"\n    height=\"13\"\n    viewBox=\"0 0 16 13\"\n    fill=\"none\"\n  >\n    <rect y=\"0.5\" width=\"16\" height=\"12\" rx=\"6\" fill=\"#B0B0B0\" />\n    <path\n      d=\"M5 6.69231L7 9L11 4\"\n      stroke=\"white\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    />\n  </svg>\n);\n\nconst CardRoot = styled.div`\n    width: 100%;\n    max-width: 1440px;\n    border: 1px solid #EFEFEF;\n    background: #FFF;\n    box-shadow: 2px 2px 12px 0px rgba(0, 0, 0, 0.05);\n    display: flex;\n    *{\n      font-family: Helvetica Neue;\n      line-height: 110%;\n    }\n    flex-flow: column nowrap;\n    gap: 1rem;\n    margin: 0 auto 20px auto;\n    h1 {\n        overflow: hidden;\n        color: #000;\n        text-overflow: ellipsis;\n        whitespace: nowrap;\n        font-family: Helvetica Neue;\n        font-size: 24px;\n        font-style: normal;\n        font-weight: 700;\n        line-height: normal;\n        text-transform: uppercase;\n    }\nh6, h5{\n    font-weight: 900;\n    color: #B0B0B0;;\n}\n`;\nconst Image = styled.div`\n    height: 100px;\n    widt:100px;\n    margin-right: 10px;\n    background-image: url(${\n      questData.img_url ??\n      \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRub7hFLkStCvZiaSeiUGznP4uzqPPcepghhg&usqp=CAU\"\n    });\n    background-size: cover;\n\n    img {\n      width: 100%;\n      height: 100%;\n      object-fit: cover;\n    }\n    position: relative;\n    width: 100%;\n    // background: black;\n`;\n\nconst ImageProfile = styled.div`\n\n  img {\n    position: absolute;\n    width: 66px;\n    height: 66px;\n    flex-shrink: 0;\n    border: 1px solid white;\n    border-radius: 50%;\n    top: 45px;\n    z-index: 99;\n    object-fit: cover;\n    background: black;\n    left: 16px;\n  }\n`;\n\nconst HeaderText = styled.div`\n    margin-bottom: 2rem;\n    flex:0.8;\n  p {\n    margin-bottom: 10px;\n    overflow: hidden;\n    color: #B0B0B0;\n    text-overflow: ellipsis;\n    font-family: Helvetica Neue;\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: normal;\n  }\n`;\n\nconst CardBody = styled.div`\nmargin-top: 20px;\npadding: 0 16px;\ndisplay:inherit;\nflex-flow: inherit;\ngap: inherit;\n  h1 {\n    color: #000;\nfont-family: Helvetica Neue;\nfont-size: 24px;\nfont-style: normal;\nfont-weight: 700;\nline-height: normal;\ntext-transform: uppercase;\n  }\n  p {\n    overflow: hidden;\ncolor: #000;\ntext-overflow: ellipsis;\nwhitespace: nowrap;\nfont-family: Helvetica Neue;\nfont-size: 16px;\nfont-style: normal;\nfont-weight: 400;\nline-height: 148%;\n  }\n`;\n\nconst TagsSec = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  .tags{\n    display: flex;\n    gap: 0.5rem;\n      color: #B0B0B0;\n      font-size: 12px;\n      font-weight: 400;\n      .tag{\n        display: flex;\n        padding: 2px 16px;\n        justify-content: center;\n        align-items: center;\n        gap: 8px;\n        border-radius: 50px;\n        background: #F8F8F8;\n      }\n  }\n`;\n\nconst Button = styled.div`\nwidth: 100%;\ndisplay: flex;\nalign-items: center;\njustify-content: center;\nmargin-top: 10px;\n  button {\n    border: 1px solid black;\n    border-radius: 0;\n    color: white;\n    background: black;\n    text-align: center\n    display: flex;\n    width: 296px;\n    padding: 7px 0px;\n    cursor: pointer;\n  }\n  button:disabled {\n    background: grey;\n    border: grey;\n    cursor: not-allowed;\n  }\n  button:hover {\n    background: white;\n    color: black;\n    border-color: black;\n  }\n`;\n\nconst Username = styled.div`\n  display: flex;\n  align-items: center;\n  p{\n    margin-bottom: 10px;\n    overflow: hidden;\n    color: #B0B0B0;\n    text-overflow: ellipsis;\n    font-weight: 400;\n    line-height: normal;\n    text-transform: uppercase;\n  }\n  svg {\n    margin-bottom: 10px;\n    margin-left: 5px;\n  }\n`;\n\nconst Card = styled.div`\n    background: #FFF;\n    box-shadow: 2px 2px 12px 0px rgba(0, 0, 0, 0.07);\n    border-radius: .5rem;\n    padding: 1rem;\n    .quest-reward{\n      font-size: 20px;\n      display: flex;\n      align-items: center;\n      gap: .3rem;\n    }\n    .near-icon{\n      width:16px;\n    }\n`;\n\nconst questData = Near.view(questContract, \"get_quest_by_id\", {\n  questId: props.questId ?? 926381045,\n});\n\nconst startTime = questData.start_time;\nconst endTime = questData.end_time;\n\nfunction formatDate(timestamp) {\n  const date = new Date(timestamp);\n  const options = {\n    weekday: \"short\",\n    day: \"numeric\",\n    month: \"long\",\n    year: \"numeric\",\n  };\n  return date.toLocaleDateString(\"en-US\", options);\n}\n\nfunction formatTime(timestamp) {\n  const date = new Date(timestamp);\n  const hours = date.getHours().toString().padStart(2, \"0\");\n  const minutes = date.getMinutes().toString().padStart(2, \"0\");\n  return `${hours}:${minutes}`;\n}\n\nconst formattedStartDate = formatDate(startTime);\nconst formattedStartHour = formatTime(startTime);\n\nconst formattedEndDate = formatDate(endTime);\nconst formattedEndHour = formatTime(endTime);\n\n// console.log(`Start date: ${formattedStartDate}`);\n// console.log(`Start time: ${formattedStartHour}`);\n// console.log(`End date: ${formattedEndDate}`);\n// console.log(`End time: ${formattedEndHour}`);\n\nconst claimsData = Near.view(\"v1.questverse.near\", \"quests\");\n\nconst tags =\n  questData && questData.tags.map((tag) => <span className=\"tag\">#{tag}</span>);\n\nconst TaskContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 12px;\n  gap: .6rem;\n  background: #EFEFEF;\n    box-shadow: 2px 2px 12px 0px rgba(0, 0, 0, 0.07);\n    border-radius: .5rem;\n    padding: 1rem;\n    border-left: 10px solid ${({ completed }) =>\n      completed\n        ? `\n      #000\n    `\n        : `#B0B0B0`};\n\n    .completed{\n      border-radius: 50px;\n      background: #B0B0B0;\n      color: #fff;\n      padding: 4px 8px;\n    }\n`;\n\nconst SubtaskText = styled.div`\n  flex: 1;\n  font-size: 16px;\n`;\n\nconst TaskButton = styled.button`\n${({ white }) =>\n  white\n    ? `background-color: #fff;\n  color: #000;\n  :hover{\n    background-color: #000;\n  color: #fff;\n  }\n  ;`\n    : `background-color: #000;\n  color: #fff;\n  :hover{\n    background-color: #fff;\n  color: #000;\n  }\n  `}\n  padding: 5px 10px;\n  border-radius: 5px;\n  cursor: pointer\n  box-shadow: 2px 2px 12px 0px rgba(0, 0, 0, 0.07);\n  border: none;\n  display: ${({ completed }) => completed && \"none\"};\n`;\n\nconst SubtaskImage = styled.img`\n  width: 20px;\n  height: 20px;\n  margin-right: 10px;\n`;\n\nconst Count = styled.span`\ndisplay: flex;\nwidth: 32px;\nheight: 32px;\njustify-content: center;\nalign-items: center;\nborder-radius: 50%;\ncolor: ${({ completed }) =>\n  completed\n    ? `\n      #fff\n    `\n    : `#B0B0B0`};\nborder: 1px solid ${({ completed }) =>\n  completed\n    ? `\n      #fff\n    `\n    : `#B0B0B0`};\nbackground: ${({ completed }) =>\n  completed\n    ? `\n      #000\n    `\n    : `#fff`};\n`;\n\nconst TaskMain = styled.div`\nflex: 1;\n`;\nconst TaskReward = styled.div`\n  span{\n    display: flex;\npadding: 4px 8px;\njustify-content: center;\nalign-items: center;\ngap: 4px;\nfont-weight: 700;\nborder-radius: 50px;\nbackground: #FFF;\n  opacity: 0.5;\n  width: 70px;\nimg{\n  width: 15px !important;\n}\n  }\n`;\n\nconst SubtaskList = ({ tasks }) => {\n  return (\n    <ul>\n      {tasks.map((task, index) => (\n        <TaskContainer key={index} completed={task.completed}>\n          <Count completed={task.completed}>{index + 1}</Count>\n          <TaskMain>\n            <SubtaskText>{task.text}</SubtaskText>\n            {!task.completed && (\n              <>\n                <TaskButton white onClick={() => handleStart(index)}>\n                  Start\n                </TaskButton>\n                <TaskButton onClick={() => handleVerify(index)}>\n                  Verify\n                </TaskButton>\n              </>\n            )}\n          </TaskMain>\n\n          {task.completed ? (\n            <span className=\"completed\">Completed</span>\n          ) : (\n            <TaskReward>\n              <span>\n                {questData.reward_amount}{\" \"}\n                <img\n                  src={`https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTrJuxjGxj4QmyreE6ix4ygqm5pK9Nn_rdc8Ndw6lmJcd0SSnm2zBIc2xJ_My1V0WmK2zg&usqp=CAU`}\n                  className=\"near-icon\"\n                />\n              </span>\n            </TaskReward>\n          )}\n        </TaskContainer>\n      ))}\n    </ul>\n  );\n};\n\nconst handleStart = (task) => {\n  console.log(`start ${task + 1}`);\n};\nconst handleVerify = (task) => {\n  console.log(`verify ${task + 1}`);\n};\n\n//check if completed base on time difference\nconst currentTimestamp = Date.now();\nconst isCompleted = () =>\n  currentTimestamp > questData.end_time ? true : false;\nconsole.log(isCompleted());\n\nconst tasks = [\n  {\n    text: questData.description,\n    completed: true,\n  },\n  // sample\n  {\n    text: questData.description,\n    completed: false,\n  },\n];\n\nreturn (\n  <CardRoot>\n    <CardBody>\n      <div className=\"row\">\n        <Image></Image>\n        <HeaderText>\n          <h1>{questData.title ?? `Lorem Ipsum Misson/Quest/Task`}</h1>\n          <Username>\n            <p>{questData.indexer_config_id ?? \"Lorem Ipsum User\"}</p>\n            {verifiedCheck}\n          </Username>\n        </HeaderText>\n      </div>\n      <Card>\n        <h5>Action Details</h5>\n        <Card>\n          <p>\n            {(questData.description.length > 100\n              ? `${questData.description.slice(0, 100)}...`\n              : questData.description) ??\n              `Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.`.slice(\n                0,\n                100\n              )}\n          </p>\n          <TagsSec>\n            <div className=\"tags\">{tags}</div>\n          </TagsSec>\n        </Card>\n      </Card>\n      <Card className=\"details-card\">\n        <h5>Details</h5>\n        <div className=\"row gap-2\">\n          <Card className=\"col-5\">\n            <h6>Reward</h6>\n            <p className=\"quest-reward\">\n              {questData.reward_amount}{\" \"}\n              <img\n                src={`https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTrJuxjGxj4QmyreE6ix4ygqm5pK9Nn_rdc8Ndw6lmJcd0SSnm2zBIc2xJ_My1V0WmK2zg&usqp=CAU`}\n                className=\"near-icon\"\n              />\n            </p>\n          </Card>\n          <Card className=\"col-5\">\n            <h6>Rewards Remaining</h6>\n            <p className=\"quest-reward\">\n              {questData.reward_amount - 1}{\" \"}\n              <img\n                src={`https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTrJuxjGxj4QmyreE6ix4ygqm5pK9Nn_rdc8Ndw6lmJcd0SSnm2zBIc2xJ_My1V0WmK2zg&usqp=CAU`}\n                className=\"near-icon\"\n              />\n            </p>\n          </Card>\n          <div className=\"w-100\"></div>\n\n          <Card className=\"col-5\">\n            <h6>Start date</h6>\n            <p>{formattedStartDate}</p>\n          </Card>\n          <Card className=\"col-5\">\n            <h6>End date</h6>\n            <p>{formattedEndDate}</p>\n          </Card>\n        </div>\n      </Card>\n      <Card>\n        <h5>{tasks.length} tasks:</h5>\n        <SubtaskList tasks={tasks} />\n      </Card>\n      <Card className=\"details-card\">\n        <h5>Claim Rewards</h5>\n        <p>Claim your rewards to complete the quest and earn: </p>\n        <p className=\"quest-reward\">\n          {questData.reward_amount}{\" \"}\n          <img\n            src={`https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTrJuxjGxj4QmyreE6ix4ygqm5pK9Nn_rdc8Ndw6lmJcd0SSnm2zBIc2xJ_My1V0WmK2zg&usqp=CAU`}\n            className=\"near-icon\"\n          />\n        </p>\n      </Card>\n    </CardBody>\n    <Button>\n      <button disabled={isCompleted()}>\n        {isCompleted() ? \"Expired\" : \"Claim Rewards\"}\n      </button>\n    </Button>\n  </CardRoot>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bos.questverse.near/widget/pages.QuestDetailsPage", "fact_widget_deployments_id": "a9b5287066a64d6084f600cb1f35d53c", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}