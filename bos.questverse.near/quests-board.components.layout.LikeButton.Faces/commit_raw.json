{"tx_hash": "FQxf13bkW63Doc7Ag3yGxcD5zhvNfG5gzRVsfJhMmhCR", "action_id_social": "8EhRRHjdzNDZunzmz8DAcRmopULaRG77kFrbxcHL6fL7-0-widget", "block_id": 107259127, "block_timestamp": "2023-12-06T05:38:52.610Z", "signer_id": "bos.questverse.near", "widget_name": "quests-board.components.layout.LikeButton.Faces", "source_code": "/* INCLUDE: \"common.jsx\" */\nconst nearQuestVerseContractAccountId =\n  props.nearQuestVerseContractAccountId ||\n  (context.widgetSrc ?? \"quests.near\").split(\"/\", 1)[0];\n\nconst nearQuestVerseWidgetsAccountId =\n  props.nearQuestVerseWidgetsAccountId ||\n  (context.widgetSrc ?? \"quests.near\").split(\"/\", 1)[0];\n\nfunction widget(widgetName, widgetProps, key) {\n  widgetProps = {\n    ...widgetProps,\n    nearQuestVerseContractAccountId: props.nearQuestVerseContractAccountId,\n    nearQuestVerseWidgetsAccountId: props.nearQuestVerseWidgetsAccountId,\n    referral: props.referral,\n  };\n\n  return (\n    <Widget\n      src={`${nearQuestVerseWidgetsAccountId}/widget/quests-board.${widgetName}`}\n      props={widgetProps}\n      key={key}\n    />\n  );\n}\n\nfunction href(widgetName, linkProps) {\n  linkProps = { ...linkProps };\n\n  if (props.nearQuestVerseContractAccountId) {\n    linkProps.nearQuestVerseContractAccountId =\n      props.nearQuestVerseContractAccountId;\n  }\n\n  if (props.nearQuestVerseWidgetsAccountId) {\n    linkProps.nearQuestVerseWidgetsAccountId =\n      props.nearQuestVerseWidgetsAccountId;\n  }\n\n  if (props.referral) {\n    linkProps.referral = props.referral;\n  }\n\n  const linkPropsQuery = Object.entries(linkProps)\n    .filter(([_key, nullable]) => (nullable ?? null) !== null)\n    .map(([key, value]) => `${key}=${value}`)\n    .join(\"&\");\n\n  return `/#/${nearQuestVerseWidgetsAccountId}/widget/quests-board.pages.${widgetName}${\n    linkPropsQuery ? \"?\" : \"\"\n  }${linkPropsQuery}`;\n}\n/* END_INCLUDE: \"common.jsx\" */\nconst accountId = context.accountId;\n\nconst limit = props.limit ?? 3;\n\nlet likes = props.userSignUps;\nlet faces = likes;\n\nif (faces.length < limit + 3) {\n  limit = faces.length;\n}\n\nconst renderFaces = faces.slice(0, limit);\n\nconst Faces = styled.span`\n  display: flex;\n  .face {\n    display: flex;\n    position: relative;\n    margin: -0.1em;\n    height: 1.5em;\n    width: 1.5em;\n    min-width: 1.5em;\n    vertical-align: top;\n    flex-direction: column;\n    img {\n      object-fit: cover;\n      border-radius: 50%;\n      width: 100%;\n      height: 100%;\n    }\n  }\n`;\n\nconst Others = styled.span`\n  &:hover {\n    color: white !important;\n  }\n`;\n\nconst numLikes = likes.length - limit;\n\nreturn (\n  <>\n    <Faces className=\"ms-1\">\n      {renderFaces.map((accountId, i) => (\n        <a\n          key={i}\n          href={`#/mob.near/widget/ProfilePage?accountId=${accountId}`}\n          className=\"text-decoration-none d-inline-block\"\n        >\n          <Widget\n            src=\"mob.near/widget/Profile.OverlayTrigger\"\n            props={{\n              accountId,\n              children: (\n                <Widget\n                  src=\"mob.near/widget/ProfileImage\"\n                  props={{\n                    metadata,\n                    accountId,\n                    widgetName,\n                    style: { zIndex: 10 - i, flexDirection: \"column\" },\n                    className: \"face\",\n                    tooltip: false,\n                    imageStyle: {},\n                    imageClassName: \"\",\n                  }}\n                />\n              ),\n            }}\n          />\n        </a>\n      ))}\n    </Faces>\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bos.questverse.near/widget/quests-board.components.layout.LikeButton.Faces", "fact_widget_deployments_id": "6b73bc715d38d42d8098092f9b87736b", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}