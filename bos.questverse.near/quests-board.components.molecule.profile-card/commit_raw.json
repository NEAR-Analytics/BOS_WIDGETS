{"tx_hash": "8t1RJJkAq6DkwYANkqEsPdxBFr1yNFvdw11qkFqB3dbz", "action_id_social": "9ZxXF1JknS36nQT8HZWzKzCtLJAm27WSYVfVQPXteiEV-0-widget", "block_id": 107259057, "block_timestamp": "2023-12-06T05:37:28.086Z", "signer_id": "bos.questverse.near", "widget_name": "quests-board.components.molecule.profile-card", "source_code": "/* INCLUDE: \"common.jsx\" */\nconst nearQuestVerseContractAccountId =\n  props.nearQuestVerseContractAccountId ||\n  (context.widgetSrc ?? \"quests.near\").split(\"/\", 1)[0];\n\nconst nearQuestVerseWidgetsAccountId =\n  props.nearQuestVerseWidgetsAccountId ||\n  (context.widgetSrc ?? \"quests.near\").split(\"/\", 1)[0];\n\nfunction widget(widgetName, widgetProps, key) {\n  widgetProps = {\n    ...widgetProps,\n    nearQuestVerseContractAccountId: props.nearQuestVerseContractAccountId,\n    nearQuestVerseWidgetsAccountId: props.nearQuestVerseWidgetsAccountId,\n    referral: props.referral,\n  };\n\n  return (\n    <Widget\n      src={`${nearQuestVerseWidgetsAccountId}/widget/quests-board.${widgetName}`}\n      props={widgetProps}\n      key={key}\n    />\n  );\n}\n\nfunction href(widgetName, linkProps) {\n  linkProps = { ...linkProps };\n\n  if (props.nearQuestVerseContractAccountId) {\n    linkProps.nearQuestVerseContractAccountId =\n      props.nearQuestVerseContractAccountId;\n  }\n\n  if (props.nearQuestVerseWidgetsAccountId) {\n    linkProps.nearQuestVerseWidgetsAccountId =\n      props.nearQuestVerseWidgetsAccountId;\n  }\n\n  if (props.referral) {\n    linkProps.referral = props.referral;\n  }\n\n  const linkPropsQuery = Object.entries(linkProps)\n    .filter(([_key, nullable]) => (nullable ?? null) !== null)\n    .map(([key, value]) => `${key}=${value}`)\n    .join(\"&\");\n\n  return `/#/${nearQuestVerseWidgetsAccountId}/widget/quests-board.pages.${widgetName}${\n    linkPropsQuery ? \"?\" : \"\"\n  }${linkPropsQuery}`;\n}\n/* END_INCLUDE: \"common.jsx\" */\n\nconst ProfileCard = (props) => {\n  const accountId = props.accountId ?? context.accountId;\n  const link = props.link ?? true;\n  const hideAccountId = props.hideAccountId;\n  const hideName = props.hideName;\n  const hideImage = props.hideImage;\n\n  const profile = props.profile ?? Social.getr(`${accountId}/profile`);\n\n  const name = profile.name ?? accountId;\n  const title = props.title ?? `${name} @${accountId}`;\n  const tooltip =\n    props.tooltip && (props.tooltip === true ? title : props.tooltip);\n\n  let inner = (\n    <div className=\"d-flex flex-row justify-content-center align-items-center\">\n      {!hideImage && (\n        <Widget\n          key=\"image\"\n          src=\"mob.near/widget/ProfileImage\"\n          props={{\n            style: { width: \"3em\", height: \"3em\", marginRight: \"0.3em\" },\n            profile,\n            accountId,\n            className: \"d-inline-block\",\n            imageClassName: \"rounded-circle w-100 h-100 align-top\",\n          }}\n        />\n      )}\n      <div className=\"d-flex flex-column\">\n        {!hideName && (\n          <span key=\"name\" className=\"fw-bold\">\n            {name}\n          </span>\n        )}\n        {!hideAccountId && (\n          <span key=\"accountId\" className=\"text-muted\">\n            @{accountId}\n          </span>\n        )}\n      </div>\n    </div>\n  );\n\n  inner = link ? (\n    <a\n      href={\n        link !== true\n          ? link\n          : `#/mob.near/widget/ProfilePage?accountId=${accountId}`\n      }\n      className=\"link-dark text-truncate d-inline-flex\"\n    >\n      {inner}\n    </a>\n  ) : (\n    <span className=\"text-truncate d-inline-flex\">{inner}</span>\n  );\n\n  if (props.tooltip === true) {\n    return (\n      <Widget\n        src=\"mob.near/widget/Profile.OverlayTrigger\"\n        props={{ accountId, children: inner }}\n      />\n    );\n  }\n  if (tooltip) {\n    inner = (\n      <OverlayTrigger placement=\"auto\" overlay={<Tooltip>{tooltip}</Tooltip>}>\n        {inner}\n      </OverlayTrigger>\n    );\n  }\n  return (\n    <div className=\"d-flex flex-row align-items-center\">\n      {inner}\n      <Widget\n        src=\"neardevgov.near/widget/BadgesList\"\n        props={{\n          accountId,\n          mode: \"compact\",\n        }}\n      />\n    </div>\n  );\n};\n\nreturn ProfileCard(props);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bos.questverse.near/widget/quests-board.components.molecule.profile-card", "fact_widget_deployments_id": "829592d168e1a1b745aab0cece8fb6bb", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}