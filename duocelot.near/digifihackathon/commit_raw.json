{"tx_hash": "CPehzvCZdmw6tNHLnCvQgyg5MmC3cFTpdpTqF4bfx7Dq", "action_id_social": "3EUVLyrAF1w5RMLkWuEBBQCXP6NXJ1uUKyGdB5XqUC2n-0-widget", "block_id": 100712273, "block_timestamp": "2023-09-09T05:03:24.196Z", "signer_id": "duocelot.near", "widget_name": "digifihackathon", "source_code": "const accountId = props.accountId ?? context.accountId;\r\nconst profile = props.profile ?? Social.getr(`${accountId}/profile`);\r\n\r\n// Initialize state\r\nState.init({\r\n  isLoaded: false,\r\n  entries: [],\r\n  prompt: \"\",\r\n});\r\n\r\nconst handleApply = () => {\r\n  if (state.prompt.trim()) {\r\n    State.update({ entries: [...state.entries, state.prompt], prompt: \"\" });\r\n  }\r\n};\r\n\r\nfunction convertToCSV(objArray) {\r\n  const array = typeof objArray !== \"object\" ? JSON.parse(objArray) : objArray;\r\n  let str = \"\";\r\n\r\n  for (let i = 0; i < array.length; i++) {\r\n    let line = \"\";\r\n    for (let index in array[i]) {\r\n      if (line !== \"\") line += \",\";\r\n      line += array[i][index];\r\n    }\r\n    str += line + \"\\r\\n\";\r\n  }\r\n  return str;\r\n}\r\n\r\nfunction downloadCSV(tags) {\r\n  let csv = convertToCSV(tags);\r\n  let blob = new Blob([\"\\ufeff\" + csv], { type: \"text/csv;charset=utf-8;\" });\r\n  let link = document.createElement(\"a\");\r\n\r\n  if (link.download !== undefined) {\r\n    let url = URL.createObjectURL(blob);\r\n    link.setAttribute(\"href\", url);\r\n    link.setAttribute(\"download\", \"tags.csv\");\r\n    link.style.visibility = \"hidden\";\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  }\r\n}\r\n\r\nconst Tabs = styled.div`\r\n  display: flex;\r\n  height: 48px;\r\n  border-bottom: 1px solid #eceef0;\r\n  margin-bottom: 72px;\r\n  overflow: auto;\r\n  scroll-behavior: smooth;\r\n\r\n  @media (max-width: 1024px) {\r\n    background: #f8f9fa;\r\n    border-top: 1px solid #eceef0;\r\n    margin: 0 -12px 48px;\r\n\r\n    > * {\r\n      flex: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nconst TabsButton = styled.a`\r\n  display: inline-flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 100%;\r\n  font-weight: 600;\r\n  font-size: 12px;\r\n  padding: 0 12px;\r\n  position: relative;\r\n  color: ${(p) => (p.selected ? \"#11181C\" : \"#687076\")};\r\n  background: none;\r\n  border: none;\r\n  outline: none;\r\n  text-align: center;\r\n  text-decoration: none !important;\r\n\r\n  &:hover {\r\n    color: #11181c;\r\n  }\r\n\r\n  &::after {\r\n    content: \"\";\r\n    display: ${(p) => (p.selected ? \"block\" : \"none\")};\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    height: 3px;\r\n    background: #59e692;\r\n  }\r\n`;\r\n\r\nconst allNumbers = Array.from(Array(100).keys());\r\n\r\nState.init({\r\n  displayNums: [],\r\n  lastNumber: 0,\r\n});\r\n\r\nconst loadNumbers = (page) => {\r\n  allNumbers\r\n    .slice(state.lastNumber, state.lastNumber + 10)\r\n    .map((n) => numberToElem(n))\r\n    .forEach((i) => state.displayNums.push(i));\r\n  state.lastNumber += 10;\r\n  State.update();\r\n};\r\n\r\nconst numberToElem = (number) => <div> {number} </div>;\r\n\r\nreturn (\r\n  <div\r\n    style={{\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      background: \"linear-gradient(to right, white, black, white)\",\r\n      backgroundSize: \"100% 100%\",\r\n      backgroundPosition: \"center\",\r\n      position: \"relative\",\r\n      overflow: \"hidden\",\r\n      zIndex: 0,\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n    }}\r\n  >\r\n    <div style={{ width: \"80%\" }}>\r\n      <div\r\n        style={{\r\n          background: \"#415697\",\r\n          height: \"262px\",\r\n          width: \"100%\",\r\n          color: \"#fff\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <img\r\n          src=\"https://ipfs.near.social/ipfs/bafkreid25lsb6p73u3zpb7et23qc66fe63knsi22xneuzo3of4m4dnjqgu\"\r\n          alt=\"coinTAG\"\r\n          style={{\r\n            height: \"200px\",\r\n            width: \"200px\",\r\n          }}\r\n        />\r\n      </div>\r\n      <div\r\n        style={{\r\n          background: \"#1b2441\",\r\n          height: \"181px\",\r\n          width: \"100%\",\r\n          color: \"#fff\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <Widget\r\n          src=\"mob.near/widget/ProfileImage\"\r\n          props={{\r\n            profile,\r\n            fast,\r\n            accountId,\r\n            style: { width: \"4rem\", height: \"4rem\", marginRight: \"10px\" },\r\n            className: \"mb-2\",\r\n            imageClassName: \"rounded-circle w-100 h-100 img-thumbnail d-block\",\r\n            thumbnail: false,\r\n          }}\r\n        />\r\n        <span>Bem Vindo {accountId}</span>\r\n      </div>\r\n      <div\r\n        style={{\r\n          backgroundColor: \"white\",\r\n          height: \"250px\",\r\n          padding: \"20px 0\",\r\n          width: \"100%\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"space-between\",\r\n          position: \"relative\",\r\n        }}\r\n      >\r\n        <p\r\n          style={{\r\n            color: \"black\",\r\n            fontFamily: '\"Press Start 2P\", sans-serif',\r\n            marginBottom: \"10px\",\r\n          }}\r\n        >\r\n          Escreva a TAG\r\n        </p>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            marginBottom: \"10px\",\r\n            width: \"100%\",\r\n            gap: \"10px\",\r\n            paddingLeft: \"10px\",\r\n            paddingRight: \"10px\",\r\n          }}\r\n        >\r\n          <input\r\n            type=\"text\"\r\n            value={state.prompt}\r\n            style={{\r\n              flex: 2,\r\n              backgroundColor: \"black\",\r\n              color: \"white\",\r\n              fontFamily: '\"Press Start 2P\", sans-serif',\r\n              border: \"1px solid white\",\r\n            }}\r\n            onChange={(e) => {\r\n              state.prompt = e.target.value;\r\n              State.update(state);\r\n            }}\r\n          />\r\n          <button\r\n            style={{\r\n              flex: 1,\r\n              backgroundColor: state.prompt.trim() ? \"#000\" : \"#aaa\",\r\n              color: state.prompt.trim() ? \"#fff\" : \"#888\",\r\n              cursor: state.prompt.trim() ? \"pointer\" : \"not-allowed\",\r\n              marginLeft: \"10px\",\r\n              marginRight: \"10px\",\r\n            }}\r\n            onClick={handleApply}\r\n            disabled={!state.prompt.trim()}\r\n          >\r\n            APLICAR\r\n          </button>\r\n        </div>\r\n        <button onClick={() => downloadCSV(state.tags)}>Export CSV</button>\r\n      </div>\r\n      <div\r\n        style={{\r\n          background: \"orange\",\r\n          height: \"330px\",\r\n          width: \"100%\",\r\n          color: \"#000\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"flex-start\", // Changed to flex-start\r\n          padding: \"10px 0\",\r\n          overflowY: \"auto\",\r\n        }}\r\n      >\r\n        {state.entries.map((entry, index) => (\r\n          <div\r\n            key={index}\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"space-between\",\r\n              width: \"80%\",\r\n              padding: \"5px\",\r\n              background: \"white\",\r\n              borderRadius: \"5px\",\r\n              margin: \"10px 0\",\r\n              marginLeft: \"10px\",\r\n              marginRight: \"10px\",\r\n            }}\r\n          >\r\n            <span>{entry}</span>\r\n            <input type=\"checkbox\" className=\"squareCheckbox\" />\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div\r\n        style={{\r\n          background: \"#415697\",\r\n          height: \"126px\",\r\n          width: \"100%\",\r\n          color: \"#333\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <div>\r\n          <InfiniteScroll\r\n            loadMore={loadNumbers}\r\n            hasMore={state.displayNums.length < allNumbers.length}\r\n          >\r\n            <p>{state.displayNums}</p>\r\n            <Widget\r\n              src=\"near/widget/Explorer.Account\"\r\n              props={{\r\n                accountId,\r\n                network: context.networkId,\r\n                language: \"en\",\r\n                baseUrl: props.baseUrl,\r\n              }}\r\n            />\r\n          </InfiniteScroll>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/duocelot.near/widget/digifihackathon", "fact_widget_deployments_id": "24bea75dc805f7c8fa1db4c142368355", "inserted_timestamp": "2023-09-09T06:54:13.064Z", "modified_timestamp": "2023-09-09T06:54:13.064Z", "__row_index": 21}