{"tx_hash": "FdqvWSksd2vMCAezx7m9uM3jZhRanLys2TTCHnaMQjYZ", "action_id_social": "5tbeFkrv7mnUaMvL2CcpiqEuuiQaiiq4UKpCv5GHhcWR-0-widget", "block_id": 106027275, "block_timestamp": "2023-11-19T03:35:13.643Z", "signer_id": "db30db3dd6d9a0b66da535706e04d4f9fc7f5d0ff5cd3f5da99f6f0d267a593f", "widget_name": "CanaryRegistry", "source_code": "let canaryContract;\nconst goerliContract = \"0x7a8a94eDb80b1524eee1ccB664b8A4a81578d2C2\";\n\nconst network = \"goerli\"; // \"gorli\" // \"rinkeby\" // \"mainnet\"\n\nswitch (network) {\n  case \"gorli\":\n    canaryContract = goerliContract;\n    break;\n  default:\n    canaryContract = goerliContract;\n    break;\n}\n\nconst canaryAbi = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"canaryId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"string\",\n        name: \"name\",\n        type: \"string\",\n      },\n      {\n        indexed: false,\n        internalType: \"string\",\n        name: \"message\",\n        type: \"string\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"frequency\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"threshold\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"address[]\",\n        name: \"feeders\",\n        type: \"address[]\",\n      },\n    ],\n    name: \"CanaryCreated\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"canaryId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"feeder\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"timestamp\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"CanaryFed\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"canaryId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"timestamp\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"CanaryFullyFed\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"canaries\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"string\",\n        name: \"name\",\n        type: \"string\",\n      },\n      {\n        internalType: \"string\",\n        name: \"message\",\n        type: \"string\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"frequency\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"threshold\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"initializationTimestamp\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"expiryTimestamp\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"feederCount\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"creator\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"canaryId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"feed\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"string\",\n        name: \"name\",\n        type: \"string\",\n      },\n      {\n        internalType: \"string\",\n        name: \"message\",\n        type: \"string\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"frequency\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"threshold\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address[]\",\n        name: \"feeders\",\n        type: \"address[]\",\n      },\n    ],\n    name: \"hatchCanary\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"canaryId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"isCanaryAlive\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nlet tableData = fetch(\n  \"https://api.studio.thegraph.com/query/16231/canary-registry-test/v0.0.24\",\n  {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({\n      query: `{\n        canaries {\n          id\n          name\n          message\n          creator\n          expiryTimestamp\n          isAlive\n          createdAt\n        }\n      }`,\n    }),\n  }\n);\n\nfunction createCanary(name, message, frequency, threshold, feeders) {\n  const canaryRegistry = new ethers.Contract(\n    canaryContract,\n    canaryAbi,\n    Ethers.provider().getSigner()\n  );\n  const freq = ethers.BigNumber.from(frequency * 86400);\n  const thres = ethers.BigNumber.from(threshold);\n  canaryRegistry.hatchCanary(name, message, freq, thres, feeders);\n}\n\nfunction feedCanary(canaryId) {\n  const canaryRegistry = new ethers.Contract(\n    canaryContract,\n    canaryAbi,\n    Ethers.provider().getSigner()\n  );\n  canaryRegistry.feed(canaryId);\n}\n\nState.init({ creators: [] });\n\n// TODO: stop the flicker\nlet updating = false;\nfunction reverseEnsLookup(address, i) {\n  Ethers.provider()\n    .lookupAddress(address)\n    .then((name) => {\n      if (name) {\n        const newCreators = Array.from(state.creators);\n        newCreators[i] = name;\n        State.update({ creators: newCreators }).then(() => (updating = false));\n      } else {\n        const newCreators = Array.from(state.creators);\n        newCreators[i] = address;\n        State.update({ creators: newCreators }).then(() => (updating = false));\n      }\n    });\n}\n\nuseEffect(() => {\n  if (state.creators.length != table.body.data.canaries.length) {\n    tableData.body.data.canaries.map((e, i) => reverseEnsLookup(e.creator, i));\n  }\n}, [state.creators]);\n\nfunction formatExpiry(timestamp) {\n  const days = Math.floor((timestamp - Date.now() / 1000) / 86400);\n  if (days < 0) {\n    return \"expired\";\n  }\n  return days.toString() + \" days\";\n}\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  border: 1px solid red;\n  gap: 25px;\n  padding: 5px;\n`;\n\nState.init({ inputFeederAddresses: [] });\n\nconst Form = () => (\n  <>\n    <CreateCanary />\n    <input\n      placeholder=\"Name\"\n      value={state.inputName}\n      onChange={(e) => State.update({ inputName: e.target.value })}\n    />\n    <input\n      placeholder=\"Message\"\n      value={state.inputMessage}\n      onChange={(e) => State.update({ inputMessage: e.target.value })}\n    />\n    <input\n      type=\"number\"\n      placeholder=\"Frequency (days)\"\n      value={state.inputFrequency}\n      onChange={(e) => State.update({ inputFrequency: e.target.value })}\n    />\n    <input\n      placeholder=\"Input feeder addresses (comma separated)\"\n      value={state.inputFeederAddresses}\n      onChange={(e) =>\n        State.update({ inputFeederAddresses: e.target.value.split(\",\") })\n      }\n    />\n    <input\n      type=\"number\"\n      min=\"1\"\n      max={state.inputFeederCount}\n      placeholder=\"Feeder threshold\"\n      onChange={(e) => State.update({ inputFeederCount: e.target.value })}\n    />\n    <button\n      onClick={() =>\n        createCanary(\n          state.inputName,\n          state.inputMessage,\n          state.inputFrequency,\n          state.inputFeederCount,\n          state.inputFeederAddresses\n        )\n      }\n    >\n      Create Canary\n    </button>\n  </>\n);\n\nconst FormStyle = styled.div`\n  border: 1px solid black;\n  border-radius: 5px;\n  padding: 3px;\n  width: 30rem;\n  text-align: center;\n`;\n\nconst CreateCanary = () => {\n  return <div class=\"create-canary-form\">New Canary</div>;\n};\n\nconst CanaryTable = ({ data }) => {\n  if (!data) return \"\";\n\n  const columns = [\n    \"ID\",\n    \"Name\",\n    \"Message\",\n    \"Creator\",\n    \"Expiry\",\n    \"Is Alive\",\n    \"Feed\",\n  ];\n\n  return (\n    <table\n      style={{ borderSpacing: \"0\", width: \"100%\", borderCollapse: \"collapse\" }}\n    >\n      <thead>\n        <tr style={{ borderBottom: \"1px solid #ddd\", background: \"#f2f2f2\" }}>\n          {columns.map((column) => (\n            <th key={column} style={{ padding: \"8px\", textAlign: \"left\" }}>\n              {column}\n            </th>\n          ))}\n        </tr>\n      </thead>\n      <tbody>\n        {data.canaries.map((canary, i) => (\n          <tr key={canary.id} style={{ borderBottom: \"1px solid #ddd\" }}>\n            <td\n              style={{\n                padding: \"8px\",\n                maxWidth: \"50px\",\n                overflow: \"hidden\",\n                whiteSpace: \"nowrap\",\n                textOverflow: \"ellipsis\",\n              }}\n            >\n              {canary.id}\n            </td>\n            <td\n              style={{\n                padding: \"8px\",\n                maxWidth: \"150px\",\n                overflow: \"hidden\",\n                whiteSpace: \"nowrap\",\n                textOverflow: \"ellipsis\",\n              }}\n            >\n              {canary.name}\n            </td>\n            <td\n              style={{\n                padding: \"8px\",\n                maxWidth: \"150px\",\n                overflow: \"hidden\",\n                whiteSpace: \"nowrap\",\n                textOverflow: \"ellipsis\",\n              }}\n            >\n              {canary.message}\n            </td>\n            <td\n              style={{\n                padding: \"8px\",\n                maxWidth: \"200px\",\n                overflow: \"hidden\",\n                whiteSpace: \"nowrap\",\n                textOverflow: \"ellipsis\",\n              }}\n            >\n              {state.creators[i]}\n            </td>\n            <td\n              style={{\n                padding: \"8px\",\n                maxWidth: \"150px\",\n                overflow: \"hidden\",\n                whiteSpace: \"nowrap\",\n                textOverflow: \"ellipsis\",\n              }}\n            >\n              {formatExpiry(canary.expiryTimestamp)}\n            </td>\n            <td\n              style={{\n                padding: \"8px\",\n                maxWidth: \"80px\",\n                overflow: \"hidden\",\n                whiteSpace: \"nowrap\",\n                textOverflow: \"ellipsis\",\n              }}\n            >\n              {canary.isAlive.toString()}\n            </td>\n            <td\n              style={{\n                padding: \"8px\",\n                maxWidth: \"80px\",\n                overflow: \"hidden\",\n                whiteSpace: \"nowrap\",\n                textOverflow: \"ellipsis\",\n              }}\n            >\n              <button onClick={() => feedCanary(canary.id)}>Feed</button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nreturn (\n  <Wrapper>\n    <Web3Connect connectLabel=\"Connect with Web3\" />\n    <FormStyle>\n      <Form />\n    </FormStyle>\n    <CanaryTable data={tableData.body.data} />\n    {chainId}\n  </Wrapper>\n);\n", "metadata": {"platform": "jutsu.ai"}, "branch": {"draft": null}, "widget_modules_used": null, "widget_url": "https://near.social/#/db30db3dd6d9a0b66da535706e04d4f9fc7f5d0ff5cd3f5da99f6f0d267a593f/widget/CanaryRegistry", "fact_widget_deployments_id": "1a1bed067587e10bccc0ecb190e9d78b", "inserted_timestamp": "2023-11-19T05:37:07.769Z", "modified_timestamp": "2023-11-19T05:37:07.769Z", "__row_index": 1}