{"tx_hash": "HLREgMzkmc83oaQ1PkR6MNSHm1FfZsbYJekpgNWHwqpp", "action_id_social": "7XzFM4Pc9GaFJX373mJaD7s41GZHPwkUPtaceyGPfWmP-0-widget", "block_id": 112073244, "block_timestamp": "2024-02-04T08:08:26.287Z", "signer_id": "fchambi.near", "widget_name": "ToDoList", "source_code": "const todolistContract = \"0x5fA5241aa08edc190Cf049F3F746D9D2a2B8F3D9\";\n\nconst todolistAbi = fetch(\n  \"https://gist.githubusercontent.com/fchambi/bf964ee8fe8b4fa8cca495a2df9f9b5b/raw/e5f998945121c227c91fe3109f74d166aa0cc364/.txt\"\n);\n\nif (!todolistAbi.ok) {\n  return \"Loading\";\n}\n\nconst iface = new ethers.utils.Interface(todolistAbi.body);\n\nif (state.sender === undefined) {\n  const accounts = Ethers.send(\"eth_requestAccounts\", []);\n  if (accounts.length) {\n    State.update({ sender: accounts[0] });\n  }\n}\n\nState.init({\n  user_tasks: [],\n});\nconst submitTask = () => {\n  if (state.strTask === \"\" || state.amountToSend === \"\") {\n    return console.log(\n      \"El nombre de la tarea y la cantidad no deben estar vac\u00edos\"\n    );\n  }\n\n  try {\n    const amountToSend = ethers.utils.parseUnits(state.amountToSend, \"ether\");\n\n    console.log(\"Parsed amount to send:\", amountToSend.toString());\n\n    const contract = new ethers.Contract(\n      todolistContract,\n      todolistAbi.body,\n      Ethers.provider().getSigner()\n    );\n\n    let normalAmount = amountToSend.toString();\n    let amount = ethers.utils.parseEther(normalAmount);\n    let wallet = state.strTask;\n    Near.call[\n      {\n        contractName: todolistContract,\n        methodName: \"creategreenBoxNativeCoin\",\n        args: { wallet, normalAmount },\n        gas: gas,\n        deposit: amount,\n      }\n    ];\n\n    contract\n      .creategreenBoxNativeCoin(state.strTask, { value: amount })\n      .then((transactionHash) => {\n        console.log(\"Transaction submitted. Hash:\", transactionHash);\n        setTimeout(() => {}, 5000);\n      })\n      .catch((error) => {\n        console.error(\"Transaction failed:\", error);\n      });\n  } catch (parseError) {\n    console.error(\"Error parsing amount:\", parseError);\n  }\n};\n\nif (state.sender === undefined) {\n  const accounts = Ethers.send(\"eth_requestAccounts\", []);\n  if (accounts.length) {\n    State.update({ sender: accounts[0] });\n  }\n}\n\nconst cssFont = fetch(\n  \"https://fonts.googleapis.com/css2?family=Manrope:wght@200;300;400;500;600;700;800\"\n).body;\nconst css = fetch(\n  \"https://nativonft.mypinata.cloud/ipfs/Qmdpe64Mm46fvWNVaCroSGa2JKgauUUUE5251Cx9nTKNrs\"\n).body;\n\nif (!cssFont || !css) return \"\";\n\nif (!state.theme) {\n  State.update({\n    theme: styled.div`\n    font-family: Manrope, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\n    ${cssFont}\n    ${css}\n`,\n  });\n}\nconst Theme = state.theme;\n\nconst getSender = () => {\n  return !state.sender\n    ? \"\"\n    : state.sender.substring(0, 6) +\n        \"...\" +\n        state.sender.substring(state.sender.length - 4, state.sender.length);\n};\n\nreturn (\n  <Theme>\n    <div class=\"LidoContainer\">\n      <div class=\"Header\">Comprar Nodo de Gusanos</div>\n\n      {state.sender ? (\n        <>\n          <div class=\"SubHeader\">Wallet </div>\n          <div class=\"LidoStakeFormInputContainer\">\n            <span class=\"LidoStakeFormInputContainerSpan2\">\n              <input\n                class=\"LidoStakeFormInputContainerSpan2Input\"\n                value={state.strTask}\n                onChange={(e) => State.update({ strTask: e.target.value })}\n                placeholder=\"Direccion\"\n              />\n            </span>\n            <span class=\"LidoStakeFormInputContainerSpan2\">\n              <input\n                class=\"LidoStakeFormInputContainerSpan2Input\"\n                value={state.amountToSend}\n                onChange={(e) => State.update({ amountToSend: e.target.value })}\n                placeholder=\"Cantidad a enviar\"\n              />\n            </span>\n          </div>\n          <button\n            class=\"LidoStakeFormSubmitContainer\"\n            onClick={() => submitTask()}\n          >\n            <span>Comprar</span>\n          </button>\n        </>\n      ) : (\n        <Web3Connect\n          className=\"LidoStakeFormSubmitContainer\"\n          connectLabel=\"Connect with Web3\"\n        />\n      )}\n    </div>\n  </Theme>\n);\n", "metadata": {"fork_of": "fchambi.near/widget/ToDoList@112073021"}, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/fchambi.near/widget/ToDoList", "fact_widget_deployments_id": "fd95e1a59b735c24eb62fe0ce4d62a18", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 25}