{"tx_hash": "9wC2UzSHgdtXiQ7Ha4G5RDvbHeeqJDVvb1R78RR8etX6", "action_id_social": "3K72E73nm6ofpkKB38PctSb86hqWp4MZwfnFK5LFXjEm-0-widget", "block_id": 99550381, "block_timestamp": "2023-08-24T12:52:00.417Z", "signer_id": "sourcescan.near", "widget_name": "SourceScan.Contracts.Approved", "source_code": "State.init({\n  placement: props.placement || \"top\",\n  value: null,\n  error: false,\n});\n\nconst compareWasm = () => {\n  const options = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      jsonrpc: \"2.0\",\n      id: \"dontcare\",\n      method: \"query\",\n      params: {\n        request_type: \"view_code\",\n        finality: \"final\",\n        account_id: props.accountId,\n      },\n    }),\n  };\n  asyncFetch(props.rpcUrl, options)\n    .then((rpc_res) => {\n      asyncFetch(`${props.apiHost}/ipfs/${props.cid}/wasm_code_base64`)\n        .then((ipfs_res) => {\n          if (rpc_res.body.result.code_base64 !== ipfs_res.body) {\n            State.update({\n              value: false,\n            });\n            return;\n          } else {\n            asyncFetch(`${props.apiHost}/api/ipfs/getTxHash`, {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n              },\n              body: `{ \"cid\": \"${props.cid}\" }`,\n            })\n              .then((res) => {\n                State.update({ value: res.body.tx_hash === props.deploy_tx });\n              })\n              .catch((err) => {\n                console.log(err);\n                State.update({ error: true });\n              });\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n};\n\ncompareWasm();\n\nconst CheckIcon = (width, height) => {\n  const SVG = styled.svg`\n    width: ${width}\n    height: ${height}\n  `;\n\n  return (\n    <SVG\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 20 20\"\n      fill=\"currentColor\"\n    >\n      <path\n        fill-rule=\"evenodd\"\n        d=\"M16.704 4.153a.75.75 0 01.143 1.052l-8 10.5a.75.75 0 01-1.127.075l-4.5-4.5a.75.75 0 011.06-1.06l3.894 3.893 7.48-9.817a.75.75 0 011.05-.143z\"\n        clip-rule=\"evenodd\"\n      />\n    </SVG>\n  );\n};\n\nconst CrossIcon = (width, height) => {\n  const SVG = styled.svg`\n    width: ${width}\n    height: ${height}\n  `;\n\n  return (\n    <SVG\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 20 20\"\n      fill=\"currentColor\"\n    >\n      <path d=\"M6.28 5.22a.75.75 0 00-1.06 1.06L8.94 10l-3.72 3.72a.75.75 0 101.06 1.06L10 11.06l3.72 3.72a.75.75 0 101.06-1.06L11.06 10l3.72-3.72a.75.75 0 00-1.06-1.06L10 8.94 6.28 5.22z\" />\n    </SVG>\n  );\n};\n\nreturn (\n  <>\n    {state.value === null ? (\n      <Widget src={`${props.ownerId}/widget/SourceScan.Common.Spinner`} />\n    ) : state.value === true ? (\n      <OverlayTrigger\n        key={state.placement}\n        placement={state.placement}\n        overlay={<Tooltip id={`tooltip-${placement}`}>{\"Approved\"}</Tooltip>}\n      >\n        <CheckIcon width={\"20px\"} height={\"20px\"} />\n      </OverlayTrigger>\n    ) : (\n      <OverlayTrigger\n        key={state.placement}\n        placement={state.placement}\n        overlay={\n          <Tooltip id={`tooltip-${placement}`}>\n            {state.error ? \"Error\" : \"Not approved\"}\n          </Tooltip>\n        }\n      >\n        <CrossIcon width={\"32px\"} height={\"32px\"} />\n      </OverlayTrigger>\n    )}\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/sourcescan.near/widget/SourceScan.Contracts.Approved", "fact_widget_deployments_id": "f9f96568337c7dd3c2d8107c0972f633", "inserted_timestamp": "2023-08-24T16:19:29.457Z", "modified_timestamp": "2023-08-24T16:19:29.457Z", "__row_index": 0}