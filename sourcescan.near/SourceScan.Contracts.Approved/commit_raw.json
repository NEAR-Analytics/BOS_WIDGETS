{"tx_hash": "FWNTGqudKwvYXhhXM78zPFPh7TTMQN15Yhn9qyQ7xMta", "action_id_social": "EebwKkrP7ctVZVujdbhxFs4KGZ7BPWZDr79C9nGUvVci-0-widget", "block_id": 100453525, "block_timestamp": "2023-09-05T15:17:40.915Z", "signer_id": "sourcescan.near", "widget_name": "SourceScan.Contracts.Approved", "source_code": "const useNetwork = (mainnet, testnet) => {\n  return context.networkId === \"mainnet\" ? mainnet : testnet;\n};\n\nState.init({\n  ownerId: useNetwork(\"sourcescan.near\", \"sourcescan.testnet\"),\n  value: null,\n  error: false,\n});\n\nconst compareWasm = () => {\n  const options = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      jsonrpc: \"2.0\",\n      id: \"dontcare\",\n      method: \"query\",\n      params: {\n        request_type: \"view_code\",\n        finality: \"final\",\n        account_id: props.accountId,\n      },\n    }),\n  };\n  asyncFetch(props.rpcUrl, options)\n    .then((rpc_res) => {\n      asyncFetch(`${props.apiHost}/ipfs/${props.cid}/wasm_code_base64`)\n        .then((ipfs_res) => {\n          if (rpc_res.body.result.code_base64 !== ipfs_res.body) {\n            State.update({\n              value: false,\n            });\n            return;\n          } else {\n            asyncFetch(`${props.apiHost}/api/ipfs/getTxHash`, {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n              },\n              body: `{ \"cid\": \"${props.cid}\" }`,\n            })\n              .then((res) => {\n                State.update({ value: res.body.tx_hash === props.deploy_tx });\n              })\n              .catch((err) => {\n                console.log(err);\n                State.update({ error: true });\n              });\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n};\n\ncompareWasm();\n\nreturn (\n  <>\n    {state.value === null ? (\n      <Widget src={`${props.ownerId}/widget/SourceScan.Common.Spinner`} />\n    ) : state.value === true ? (\n      <Widget\n        src={`${state.ownerId}/widget/SourceScan.Common.Icons.CheckIcon`}\n        props={{\n          width: \"20px\",\n          height: \"20px\",\n          tooltip: { placement: props.placement, label: \"Approved\" },\n        }}\n      />\n    ) : (\n      <Widget\n        src={`${state.ownerId}/widget/SourceScan.Common.Icons.CrossIcon`}\n        props={{\n          width: \"20px\",\n          height: \"20px\",\n          tooltip: {\n            placement: props.placement,\n            label: state.error ? \"Error\" : \"Not approved\",\n          },\n        }}\n      />\n    )}\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/sourcescan.near/widget/SourceScan.Contracts.Approved", "fact_widget_deployments_id": "b4360e0cfa6baf5a2b4cdcadabc213c9", "inserted_timestamp": "2023-09-05T17:25:02.365Z", "modified_timestamp": "2023-09-05T17:25:02.365Z", "__row_index": 0}