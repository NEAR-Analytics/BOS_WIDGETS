{"tx_hash": "BxDkZXpctEzJiCYD3yQDQGErLXpwaFKokuUyZvC2Euf1", "action_id_social": "5Jfhx8XUCyoAvoZM8U22kvqa6dK8aDRj1Gsr7GoYc6sd-0-widget", "block_id": 99805279, "block_timestamp": "2023-08-27T21:40:43.727Z", "signer_id": "sourcescan.near", "widget_name": "SourceScan.Contracts.Info", "source_code": "const useNetwork = (mainnet, testnet) => {\n  return context.networkId === \"mainnet\" ? mainnet : testnet;\n};\n\nfunction customDecodeURIComponent(encodedStr) {\n  const specialChars = {\n    \"%21\": \"!\",\n    \"%23\": \"#\",\n    \"%24\": \"$\",\n    \"%26\": \"&\",\n    \"%27\": \"'\",\n    \"%28\": \"(\",\n    \"%29\": \")\",\n    \"%2A\": \"*\",\n    \"%2B\": \"+\",\n    \"%2C\": \",\",\n    \"%2F\": \"/\",\n    \"%3A\": \":\",\n    \"%3B\": \";\",\n    \"%3D\": \"=\",\n    \"%3F\": \"?\",\n    \"%40\": \"@\",\n    \"%5B\": \"[\",\n    \"%5D\": \"]\",\n  };\n\n  return encodedStr.replace(/%[0-9a-fA-F]{2}/g, (match) => {\n    return specialChars[match] || match;\n  });\n}\n\nState.init({\n  ownerId: useNetwork(\"sourcescan.near\", \"sourcescan.testnet\"),\n  theme:\n    typeof props.theme === \"string\"\n      ? JSON.parse(customDecodeURIComponent(props.theme))\n      : props.theme || {\n          bg: \"#e3e8ef\",\n          color: \"#4c5566\",\n          border: \"1px dashed #748094\",\n          text: {\n            fontSize: \"18px\",\n          },\n          heading: {\n            fontSize: \"20px\",\n            fontWeight: \"600\",\n            underline: true,\n          },\n        },\n  contract: null,\n});\n\nconsole.log(state.theme);\n\nconst getContract = async () => {\n  Near.asyncView(state.ownerId, \"get_contract\", {\n    contract_id: props.contractId,\n  })\n    .then((res) => {\n      console.log(res);\n      State.update({\n        contract: res,\n      });\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n};\n\nif (!props.contractId) {\n  return \"Please provide a contractId to the component\";\n} else {\n  getContract();\n}\n\nconst Main = styled.div`\n  background-color: ${state.theme.bg};\n  padding: 18px;\n  width: 50%;\n  border: ${state.theme.border};\n  border-radius: 16px;\n  display: flex;\n  flex-direction: column;\n  text-align: start;\n  align-items: start;\n  justify-content: start;\n  gap: 30px;\n\n  @media only screen and (max-width: 600px) {\n    width: 80%;\n    text-align: center;\n    align-items: center;\n    justify-content: center;\n  }\n`;\n\nconst Stack = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: start;\n  align-items: start;\n  text-align: start;\n  gap: 5px;\n\n  @media only screen and (max-width: 600px) {\n    text-align: center;\n    align-items: center;\n    justify-content: center;\n  }\n`;\n\nconst HStack = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  gap: 5px;\n`;\n\nconst UHeading = styled.div`\n  font-size: ${state.theme.heading.fontSize};\n  font-weight: ${state.theme.heading.fontWeight};\n  color: ${state.theme.color};\n  text-decoration: ${state.theme.heading.underline ? \"underline\" : \"none\"};\n  text-underline-offset: 6px;\n  text-decoration-style: dashed;\n  text-decoration-color: gray;\n`;\n\nconst Heading = styled.div`\n  font-size: ${state.theme.heading.fontSize};\n  font-weight: ${state.theme.heading.fontWeight};\n  color: ${state.theme.color};\n`;\n\nconst Desktop = styled.div`\n  display: flex;\n\n  @media only screen and (max-width: 600px) {\n    display: none;\n  }\n`;\n\nconst Mobile = styled.div`\n  display: none;\n\n  @media only screen and (max-width: 600px) {\n    display: flex;\n  }\n`;\n\nconst Text = styled.div`\n  font-size: ${state.theme.text.fontSize};\n  color: ${state.theme.color};\n`;\n\nconst Center = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst A = styled.a`\n  text-decoration: none;\n  color: ${state.theme.color};\n\n  :hover {\n    text-decoration: none;\n    color: ${state.theme.color};\n  }\n`;\n\nconst truncateStringInMiddle = (str, maxLength) => {\n  if (str.length <= maxLength) {\n    return str;\n  }\n\n  const halfMaxLength = Math.floor(maxLength / 2);\n  const firstHalf = str.slice(0, halfMaxLength);\n  const secondHalf = str.slice(-halfMaxLength);\n\n  return firstHalf + \"...\" + secondHalf;\n};\n\nreturn (\n  <Center>\n    {!state.contract ? (\n      <Widget\n        src={`${state.ownerId}/widget/SourceScan.Common.Spinner`}\n        props={{ width: \"64px\", height: \"64px\" }}\n      />\n    ) : (\n      <Main>\n        <HStack>\n          <Heading>{props.contractId}</Heading>\n          <A\n            href={`https://${\n              context.networkId === \"mainnet\" ? \"\" : \"testnet.\"\n            }nearblocks.io/address/${props.contractId}`}\n            target={\"_blank\"}\n          >\n            <Widget\n              src={`${state.ownerId}/widget/SourceScan.Common.Icons.LinkIcon`}\n              props={{ width: \"18px\", height: \"18px\" }}\n            />\n          </A>\n        </HStack>\n        <Stack>\n          <UHeading>Security Checks</UHeading>\n        </Stack>\n        <Stack>\n          <UHeading>Deploy Tx</UHeading>\n\n          <HStack>\n            <Desktop>\n              <Text>{state.contract.deploy_tx}</Text>\n            </Desktop>\n            <Mobile>\n              <Text>{truncateStringInMiddle(state.contract.deploy_tx, 8)}</Text>\n            </Mobile>\n            <A\n              href={`https://${\n                context.networkId === \"mainnet\" ? \"\" : \"testnet.\"\n              }nearblocks.io/txns/${state.contract.deploy_tx}`}\n              target={\"_blank\"}\n            >\n              <Widget\n                src={`${state.ownerId}/widget/SourceScan.Common.Icons.LinkIcon`}\n                props={{ width: \"18px\", height: \"18px\" }}\n              />\n            </A>\n          </HStack>\n        </Stack>\n        <Stack>\n          <UHeading>Entry Point</UHeading>\n          <Text>{state.contract.entry_point}</Text>\n        </Stack>\n        <Stack>\n          <UHeading>Lang</UHeading>\n          <Text>{state.contract.lang}</Text>\n        </Stack>\n        <Stack>\n          <UHeading>IPFS</UHeading>\n          <HStack>\n            <Desktop>\n              <Text>{state.contract.cid}</Text>\n            </Desktop>\n            <Mobile>\n              <Text>{truncateStringInMiddle(state.contract.cid, 8)}</Text>\n            </Mobile>\n            <A\n              href={`https://sourcescan.2bb.dev/ipfs/${state.contract.cid}`}\n              target={\"_blank\"}\n            >\n              <Widget\n                src={`${state.ownerId}/widget/SourceScan.Common.Icons.LinkIcon`}\n                props={{ width: \"18px\", height: \"18px\" }}\n              />\n            </A>\n          </HStack>\n        </Stack>\n        {state.contract.github ? <UHeading>Github</UHeading> : null}\n      </Main>\n    )}\n  </Center>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/sourcescan.near/widget/SourceScan.Contracts.Info", "fact_widget_deployments_id": "1dcb2e99b527963fa0310601efe3588f", "inserted_timestamp": "2023-08-27T23:36:34.561Z", "modified_timestamp": "2023-08-27T23:36:34.561Z", "__row_index": 5}