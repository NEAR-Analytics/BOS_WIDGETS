{"tx_hash": "5DHf1awhSjavgbcF1Z9U5ictM3B91AvVJzMqzxg6U1v", "action_id_social": "2kCDhUqzydhSE4KDjKBVSbgJvV9BdUq3Wegn3LBabtuH-0-widget", "block_id": 97021258, "block_timestamp": "2023-07-21T21:49:26.291Z", "signer_id": "sourcescan.near", "widget_name": "SourceScan.Contracts.Table", "source_code": "State.init({\n  contracts: props.contracts,\n  theme: props.theme || \"light\",\n});\n\nconst getConfig = (network) => {\n  switch (network) {\n    case \"mainnet\":\n      return {\n        rpcUrl: \"https://rpc.mainnet.near.org\",\n        contractId: \"v1.sourcescan.near\",\n        apiHost: \"https://sourcescan.2bb.dev\",\n      };\n    case \"testnet\":\n      return {\n        rpcUrl: \"https://rpc.testnet.near.org\",\n        contractId: \"v5.sourcescan.testnet\",\n        apiHost: \"https://sourcescan.2bb.dev\",\n      };\n    default:\n      throw Error(`Unconfigured environment '${network}'.`);\n  }\n};\nconst config = getConfig(context.networkId);\n\nif (props.contracts)\n  State.update({\n    contracts: props.contracts,\n  });\n\nconst dark = {\n  bg: \"#28282b\",\n  color: \"#e6eaee\",\n  border: \"#748094\",\n};\n\nconst light = {\n  bg: \"#e3e8ef\",\n  color: \"#4c5566\",\n  border: \"#748094\",\n};\n\nconst useTheme = (light, dark) => {\n  return state.theme === \"light\" ? light : dark;\n};\n\nconst Table = styled.table`\n  border: 1px solid ${useTheme(light.border, dark.border)};\n  background-color: ${useTheme(light.bg, dark.bg)}; \n  color: ${useTheme(light.color, dark.color)};\n  border-collapse: separate;\n  border-spacing: 0;\n  border-radius: 10px;\n\n  th {\n    padding: 15px;\n  }\n\n  td {\n    max-width: 200px;\n    border-top: 0.5px dashed ${useTheme(light.border, dark.border)};\n    padding: 15px;\n  }\n`;\n\nconst Truncated = styled.p`\n  white-space: nowrap; \n  overflow: hidden;\n  text-overflow: ellipsis; /\n`;\n\nreturn (\n  <Table>\n    <thead>\n      <tr>\n        <th>Contract</th>\n        <th>Lang</th>\n        <th>Source</th>\n        <th>Approved</th>\n      </tr>\n    </thead>\n    <tbody>\n      {state.contracts\n        ? state.contracts.map((contract) => {\n            const contractId = contract[0];\n            const lang = contract[1].lang;\n            const cid = contract[1].cid;\n\n            return (\n              <tr>\n                <td>{contractId}</td>\n                <td>{lang}</td>\n                <td>\n                  <Truncated>{cid}</Truncated>\n                </td>\n                <td>\n                  <Widget\n                    src=\"sourcescan.near/widget/SourceScan.Contracts.Approved\"\n                    props={{\n                      rpcUrl: config.rpcUrl,\n                      apiHost: config.apiHost,\n                      accountId: contractId,\n                      cid: cid,\n                    }}\n                  />\n                </td>\n              </tr>\n            );\n          })\n        : null}\n    </tbody>\n  </Table>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/sourcescan.near/widget/SourceScan.Contracts.Table", "fact_widget_deployments_id": "66eed33ea0da4a222a2d0a12e4cf5178", "inserted_timestamp": "2000-01-01T00:00:00.000Z", "modified_timestamp": "2000-01-01T00:00:00.000Z", "__row_index": 22}