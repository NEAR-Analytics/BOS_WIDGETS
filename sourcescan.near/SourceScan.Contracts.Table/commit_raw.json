{"tx_hash": "BSRP9LfUashNgkdC9x8VVirpiqysG8DGcuomrxRDFZg1", "action_id_social": "D9vjhyo2ab752GYQqM2qJrbebZDybya2vfEVA5rR6BPF-0-widget", "block_id": 100434646, "block_timestamp": "2023-09-05T08:36:55.108Z", "signer_id": "sourcescan.near", "widget_name": "SourceScan.Contracts.Table", "source_code": "const useNetwork = (mainnet, testnet) => {\n  return context.networkId === \"mainnet\" ? mainnet : testnet;\n};\n\nState.init({\n  contracts: props.contracts,\n  theme: props.theme || {\n    name: \"light\",\n    bg: \"#e3e8ef\",\n    color: \"#4c5566\",\n    border: \"#748094\",\n    hover: {\n      bg: \"#eef2f6\",\n      border: \"#d8dfe7\",\n    },\n  },\n  ownerId: useNetwork(\"sourcescan.near\", \"sourcescan.testnet\"),\n});\n\nif (props.contracts)\n  State.update({\n    contracts: props.contracts,\n  });\n\nconst Center = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n`;\n\nconst Table = styled.table`\n  border: 1px solid ${state.theme.border};\n  background-color: ${state.theme.bg};\n  color: ${state.theme.color};\n  border-collapse: separate;\n  border-spacing: 0;\n  border-radius: 10px;\n  text-align: start;\n  width: 50%;\n\n  thead {\n    text-transform: uppercase;\n    font-size: 12px;\n    font-weight: 100;\n    color: ${state.theme.border};\n  }\n\n  th {\n    padding: 15px;\n  }\n\n  td {\n    border-top: 0.5px dashed ${state.theme.border};\n    padding: 15px;\n  }\n\n  @media only screen and (max-width: 750px) {\n    border: none;\n\n    thead {\n      display: none;\n    }\n\n    th {\n      display: block;\n      width: 100%;\n    }\n\n    tr {\n      border-radius: 10px;\n      display: block;\n      width: full;\n      border: 1px solid ${state.theme.border};\n      margin-bottom: 40px;\n    }\n\n    td {\n      position: relative;\n      display: flex;\n      align-items: end;\n      justify-content: end;\n      text-align: end;\n      border: none;\n    }\n\n    td:before {\n      width: 100%;\n      content: attr(data-label);\n      text-transform: uppercase;\n      padding-right: 20px;\n      font-size: 12px;\n      font-weight: 100;\n      color: ${state.theme.border};\n      font-weight: bold;\n      text-align: start;\n    }\n  }\n`;\n\nconst HStack = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: start;\n  align-items: start;\n  gap: 8px;\n`;\n\nconst Desktop = styled.div`\n  display: flex;\n\n  @media only screen and (max-width: 750px) {\n    display: none;\n  }\n`;\n\nconst Mobile = styled.div`\n  display: none;\n\n  @media only screen and (max-width: 750px) {\n    display: flex;\n    width: 250%;\n  }\n`;\n\nconst A = styled.a`\n  text-decoration: none;\n  color: ${state.theme.color};\n\n  :hover {\n    text-decoration: none;\n    color: ${state.theme.color};\n  }\n`;\n\nconst Button = styled.a`\n  height: 36px;\n  width: 96px;\n  text-align: center;\n  font-weight: 600;\n  border-radius: 6px;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  border: 1px dashed ${state.theme.border};\n  color: ${state.theme.color};\n  background-color: ${state.theme.bg};\n  transition: background-color 0.1s ease-in-out;\n\n  &:hover,\n  &:focus {\n    background: #ecedee;\n    text-decoration: none;\n    outline: none;\n    color: ${state.theme.color};\n  }\n  :hover {\n    background-color: ${state.theme.hover.bg};\n  }\n`;\n\nconst truncateStringInMiddle = (str, maxLength) => {\n  if (str.length <= maxLength) {\n    return str;\n  }\n\n  const halfMaxLength = Math.floor(maxLength / 2);\n  const firstHalf = str.slice(0, halfMaxLength);\n  const secondHalf = str.slice(-halfMaxLength);\n\n  return firstHalf + \"...\" + secondHalf;\n};\n\nconst infoHref = (contractId) => {\n  return `#/${state.ownerId}/widget/SourceScan?page=contract&contractId=${contractId}`;\n};\n\nreturn (\n  <>\n    {state.contracts.length === 0 ? (\n      <>Nothing here...</>\n    ) : (\n      <Table>\n        <thead>\n          <tr>\n            <th>Contract</th>\n            <th>Lang</th>\n            <th>IPFS</th>\n            <th>Github</th>\n            <th>Approved</th>\n            <Desktop>\n              <th></th>\n            </Desktop>\n          </tr>\n        </thead>\n        <tbody>\n          {state.contracts\n            ? state.contracts.map((contract, i) => {\n                const contractId = contract[0];\n                const lang = contract[1].lang;\n                const cid = contract[1].cid;\n                const deploy_tx = contract[1].deploy_tx;\n                const github = contract[1].github;\n                return (\n                  <tr key={i}>\n                    <td data-label={\"Contract\"}>{contractId}</td>\n                    <td data-label={\"Lang\"}>{lang}</td>\n                    <td data-label={\"IPFS\"}>\n                      <HStack>\n                        {truncateStringInMiddle(cid, 8)}\n                        <A\n                          href={`${props.apiHost}/ipfs/${cid}`}\n                          target={\"_blank\"}\n                        >\n                          <Widget\n                            src={`${state.ownerId}/widget/SourceScan.Common.Icons.LinkIcon`}\n                            props={{ width: \"20px\", height: \"20px\" }}\n                          />\n                        </A>\n                      </HStack>\n                    </td>\n                    <td data-label={\"Github\"}>\n                      {github ? (\n                        <HStack>\n                          {github.owner}/{github.repo}\n                          <A\n                            href={`https://github.com/${github.owner}/${github.repo}/tree/${github.sha}`}\n                            target={\"_blank\"}\n                          >\n                            <Widget\n                              src={`${state.ownerId}/widget/SourceScan.Common.Icons.LinkIcon`}\n                              props={{ width: \"20px\", height: \"20px\" }}\n                            />\n                          </A>\n                        </HStack>\n                      ) : (\n                        \"None\"\n                      )}\n                    </td>\n                    <td data-label={\"Approved\"}>\n                      <Center>\n                        <Widget\n                          src={`${state.ownerId}/widget/SourceScan.Contracts.Approved`}\n                          props={{\n                            rpcUrl: props.rpcUrl,\n                            apiHost: props.apiHost,\n                            accountId: contractId,\n                            cid: cid,\n                            ownerId: state.ownerId,\n                            deploy_tx: deploy_tx,\n                          }}\n                        />\n                      </Center>\n                    </td>\n                    <td>\n                      <Desktop>\n                        <OverlayTrigger\n                          key={state.placement}\n                          placement={state.placement}\n                          overlay={\n                            <Tooltip id={`tooltip-${placement}`}>\n                              Show More\n                            </Tooltip>\n                          }\n                        >\n                          <A href={infoHref(contractId)} target={\"_self\"}>\n                            <Widget\n                              src={`${state.ownerId}/widget/SourceScan.Common.Icons.InfoIcon`}\n                              props={{ width: \"20px\", height: \"20px\" }}\n                            />\n                          </A>\n                        </OverlayTrigger>\n                      </Desktop>\n                      <Mobile>\n                        <Button href={infoHref(contractId)} target={\"_self\"}>\n                          More\n                        </Button>\n                      </Mobile>\n                    </td>\n                  </tr>\n                );\n              })\n            : null}\n        </tbody>\n      </Table>\n    )}\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/sourcescan.near/widget/SourceScan.Contracts.Table", "fact_widget_deployments_id": "923d101c8872f4855e43e34edaddf470", "inserted_timestamp": "2023-09-05T11:17:28.887Z", "modified_timestamp": "2023-09-05T11:17:28.887Z", "__row_index": 42}