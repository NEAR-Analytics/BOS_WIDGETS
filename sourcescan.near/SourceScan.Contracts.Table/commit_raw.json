{"tx_hash": "EdtcEgdQFS9aLRBHNEHe91fsW8uZDiR5HRZUovVvaiNH", "action_id_social": "BYAVxFt8aXVfyvQuCeawf86R3mr1ieFevD1pHuGW7q2k-0-widget", "block_id": 99615308, "block_timestamp": "2023-08-25T09:10:53.947Z", "signer_id": "sourcescan.near", "widget_name": "SourceScan.Contracts.Table", "source_code": "const useNetwork = (mainnet, testnet) => {\n  return context.networkId === \"mainnet\" ? mainnet : testnet;\n};\n\nState.init({\n  contracts: props.contracts,\n  theme: props.theme || \"light\",\n  ownerId: useNetwork(\"sourcescan.near\", \"sourcescan.testnet\"),\n});\n\nif (props.contracts)\n  State.update({\n    contracts: props.contracts,\n  });\n\nconst dark = {\n  bg: \"#28282b\",\n  color: \"#e6eaee\",\n  border: \"#748094\",\n};\n\nconst light = {\n  bg: \"#e3e8ef\",\n  color: \"#4c5566\",\n  border: \"#748094\",\n};\n\nconst useTheme = (light, dark) => {\n  return state.theme === \"light\" ? light : dark;\n};\n\nconst Center = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Table = styled.table`\n  border: 1px solid ${useTheme(light.border, dark.border)};\n  background-color: ${useTheme(light.bg, dark.bg)};\n  color: ${useTheme(light.color, dark.color)};\n  border-collapse: separate;\n  border-spacing: 0;\n  border-radius: 10px;\n  text-align: start;\n  width: 50%;\n\n  thead {\n    text-transform: uppercase;\n    font-size: 12px;\n    font-weight: 100;\n    color: ${useTheme(light.border, dark.border)};\n  }\n\n  th {\n    padding: 15px;\n  }\n\n  td {\n    border-top: 0.5px dashed ${useTheme(light.border, dark.border)};\n    padding: 15px;\n  }\n\n  @media only screen and (max-width: 800px) {\n    thead {\n      display: none;\n    }\n\n    th {\n      display: block;\n      width: 100%;\n    }\n\n    tr {\n      margin-bottom: 0.625rem;\n    }\n\n    td {\n      position: relative;\n      display: flex;\n      align-items: end;\n      justify-content: end;\n      text-align: end;\n    }\n\n    td:before {\n      width: 100%;\n      content: attr(data-label);\n      text-transform: uppercase;\n      padding-right: 20px;\n      font-size: 12px;\n      font-weight: 100;\n      color: ${useTheme(light.border, dark.border)};\n      font-weight: bold;\n      text-align: start;\n    }\n  }\n`;\n\nconst HStack = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: start;\n  align-items: start;\n  gap: 8px;\n`;\n\nconst LinkIcon = (width, height) => {\n  const SVG = styled.svg`\n    width: ${width}\n    height: ${height}\n  `;\n\n  return (\n    <SVG\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 20 20\"\n      fill=\"currentColor\"\n    >\n      <path\n        fillRule=\"evenodd\"\n        d=\"M4.25 5.5a.75.75 0 00-.75.75v8.5c0 .414.336.75.75.75h8.5a.75.75 0 00.75-.75v-4a.75.75 0 011.5 0v4A2.25 2.25 0 0112.75 17h-8.5A2.25 2.25 0 012 14.75v-8.5A2.25 2.25 0 014.25 4h5a.75.75 0 010 1.5h-5z\"\n        clipRule=\"evenodd\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        d=\"M6.194 12.753a.75.75 0 001.06.053L16.5 4.44v2.81a.75.75 0 001.5 0v-4.5a.75.75 0 00-.75-.75h-4.5a.75.75 0 000 1.5h2.553l-9.056 8.194a.75.75 0 00-.053 1.06z\"\n        clipRule=\"evenodd\"\n      />\n    </SVG>\n  );\n};\n\nconst InfoIcon = (width, height) => {\n  const SVG = styled.svg`\n    width: ${width}\n    height: ${height}\n  `;\n\n  return (\n    <SVG\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n      fill={`${useTheme(light.color, dark.color)}`}\n    >\n      <path\n        fill-rule=\"evenodd\"\n        d=\"M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12zm8.706-1.442c1.146-.573 2.437.463 2.126 1.706l-.709 2.836.042-.02a.75.75 0 01.67 1.34l-.04.022c-1.147.573-2.438-.463-2.127-1.706l.71-2.836-.042.02a.75.75 0 11-.671-1.34l.041-.022zM12 9a.75.75 0 100-1.5.75.75 0 000 1.5z\"\n        clip-rule=\"evenodd\"\n      />\n    </SVG>\n  );\n};\n\nconst A = styled.a`\n  text-decoration: none;\n  color: ${useTheme(light.color, dark.color)};\n\n  :hover {\n    text-decoration: none;\n    color: ${useTheme(light.color, dark.color)};\n  }\n`;\n\nconst truncateStringInMiddle = (str, maxLength) => {\n  if (str.length <= maxLength) {\n    return str;\n  }\n\n  const halfMaxLength = Math.floor(maxLength / 2);\n  const firstHalf = str.slice(0, halfMaxLength);\n  const secondHalf = str.slice(-halfMaxLength);\n\n  return firstHalf + \"...\" + secondHalf;\n};\n\nreturn (\n  <Center>\n    {state.contracts.length === 0 ? (\n      <>Nothing here...</>\n    ) : (\n      <Table>\n        <thead>\n          <tr>\n            <th>Contract</th>\n            <th>Lang</th>\n            <th>IPFS</th>\n            <th>Github</th>\n            <th>Approved</th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          {state.contracts\n            ? state.contracts.map((contract, i) => {\n                const contractId = contract[0];\n                const lang = contract[1].lang;\n                const cid = contract[1].cid;\n                const deploy_tx = contract[1].deploy_tx;\n                const github = contract[1].github;\n                return (\n                  <tr key={i}>\n                    <td data-label={\"Contract\"}>{contractId}</td>\n                    <td data-label={\"Lang\"}>{lang}</td>\n                    <td data-label={\"IPFS\"}>\n                      <HStack>\n                        {truncateStringInMiddle(cid, 8)}\n                        <A\n                          href={`${props.apiHost}/ipfs/${cid}`}\n                          target={\"_blank\"}\n                        >\n                          <LinkIcon width={\"20px\"} height={\"20px\"} />\n                        </A>\n                      </HStack>\n                    </td>\n                    <td data-label={\"Github\"}>\n                      {github ? (\n                        <HStack>\n                          {github.owner}/{github.repo}\n                          <A\n                            href={`https://github.com/${github.owner}/${github.repo}/tree/${github.sha}`}\n                            target={\"_blank\"}\n                          >\n                            <LinkIcon width={\"20px\"} height={\"20px\"} />\n                          </A>\n                        </HStack>\n                      ) : (\n                        \"None\"\n                      )}\n                    </td>\n                    <td data-label={\"Approved\"}>\n                      <Center>\n                        <Widget\n                          src={`${state.ownerId}/widget/SourceScan.Contracts.Approved`}\n                          props={{\n                            rpcUrl: props.rpcUrl,\n                            apiHost: props.apiHost,\n                            accountId: contractId,\n                            cid: cid,\n                            ownerId: state.ownerId,\n                            deploy_tx: deploy_tx,\n                          }}\n                        />\n                      </Center>\n                    </td>\n                    <td>\n                      <OverlayTrigger\n                        key={state.placement}\n                        placement={state.placement}\n                        overlay={\n                          <Tooltip id={`tooltip-${placement}`}>\n                            Show More\n                          </Tooltip>\n                        }\n                      >\n                        <A\n                          href={`/${state.ownerId}/widget/SourceScan.Contracts.Info?contractId=${contractId}`}\n                          target={\"_blank\"}\n                        >\n                          <InfoIcon width={\"20px\"} height={\"20px\"} />\n                        </A>\n                      </OverlayTrigger>\n                    </td>\n                  </tr>\n                );\n              })\n            : null}\n        </tbody>\n      </Table>\n    )}\n  </Center>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/sourcescan.near/widget/SourceScan.Contracts.Table", "fact_widget_deployments_id": "4fbcf549ded9b7f25ec6487d612baf37", "inserted_timestamp": "2023-08-25T10:49:55.083Z", "modified_timestamp": "2023-08-25T10:49:55.083Z", "__row_index": 37}