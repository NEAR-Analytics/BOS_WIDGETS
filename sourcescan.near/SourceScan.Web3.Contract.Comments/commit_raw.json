{"tx_hash": "FyJgK3Ro1qUndZQTsUWsftip8UEEMRhpZxsDwpzEA7eJ", "action_id_social": "9YZ7NPSqoaLjayCW5CQ5EkxDAwT5DTGu7uCuqrXjErBR-0-widget", "block_id": 110964025, "block_timestamp": "2024-01-21T13:29:22.613Z", "signer_id": "sourcescan.near", "widget_name": "SourceScan.Web3.Contract.Comments", "source_code": "const { getConfig, limits } = VM.require(\n  `sourcescan.near/widget/SourceScan.libs.constants`\n)\nif (!getConfig) {\n  return <div>loading...</div>\n}\nconst config = getConfig(context.networkId)\nconst contractId = props.contractId\n\nconst { useTheme } = VM.require(\n  `${config.ownerId}/widget/SourceScan.libs.theme`\n)\nif (!useTheme) {\n  return <div>loading...</div>\n}\nconst theme = useTheme(Storage.privateGet('theme'))\n\nconst [limit, setLimit] = useState(limits[0])\nconst [selectedPage, setSelectedPage] = useState(1)\nconst [fromIndex, setFromIndex] = useState(0)\nconst handleOptionsChange = (e) => {\n  setLimit(parseInt(e.target.value))\n  setSelectedPage(1)\n  setFromIndex(0)\n}\n\nconst handlePageChange = (x) => {\n  setSelectedPage(x + 1)\n  setFromIndex(x * limit)\n}\n\nconst [pages, setPages] = useState(1)\nconst [comments, setComments] = useState(null)\nuseEffect(() => {\n  if (!contractId) return\n\n  Near.asyncView(config.contractId, 'get_comments', {\n    account_id: contractId,\n    from_index: fromIndex,\n    limit: limit,\n  })\n    .then((res) => {\n      setComments(res[0])\n      setPages(res[1])\n    })\n    .catch((err) => {\n      console.log(err)\n    })\n}, [contractId, limit, selectedPage, fromIndex])\n\nconst CommentsContainer = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  gap: 32px;\n`\n\nreturn (\n  <CommentsContainer>\n    <Widget\n      src={`${config.ownerId}/widget/SourceScan.Inputs.Limits`}\n      props={{\n        label: 'Comments per page',\n        handleOptionsChange: handleOptionsChange,\n        theme: theme,\n        limits: limits,\n        selectedLimit: limit,\n      }}\n    />\n    {comments ? (\n      comments.map((comment, i) => (\n        <Widget\n          key={i}\n          src={`${config.ownerId}/widget/SourceScan.Web3.CommentView`}\n          props={{ comment: comment }}\n        />\n      ))\n    ) : (\n      <Widget\n        src={`${config.ownerId}/widget/SourceScan.Common.Spinner`}\n        props={{ width: '20px', height: '20px' }}\n      />\n    )}\n    <Widget\n      src={`${config.ownerId}/widget/SourceScan.Inputs.Pagination`}\n      props={{\n        theme: theme,\n        pages: pages,\n        selectedPage: selectedPage,\n        handlePageChange: handlePageChange,\n      }}\n    />\n  </CommentsContainer>\n)\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/sourcescan.near/widget/SourceScan.Web3.Contract.Comments", "fact_widget_deployments_id": "4d8fa9d43c22422fa86586d4e20f9a25", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 8}