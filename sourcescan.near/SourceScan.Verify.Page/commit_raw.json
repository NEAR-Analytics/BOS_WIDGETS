{"tx_hash": "2tiKSri9Jwn2kk84EHMBD8YgStbJiHrKMknYmGnw6Un7", "action_id_social": "2gvJez2MBv8JAPgSxVNgGqZEbB1msBATRA1Y8WV2pE5t-0-widget", "block_id": 107165444, "block_timestamp": "2023-12-04T22:37:28.852Z", "signer_id": "sourcescan.near", "widget_name": "SourceScan.Verify.Page", "source_code": "const useNetwork = (mainnet, testnet) => {\n  return context.networkId === \"mainnet\" ? mainnet : testnet;\n};\n\nState.init({\n  ownerId: useNetwork(\"sourcescan.near\", \"sourcescan.testnet\"),\n  apiHost: props.apiHost || \"https://sourcsecan.2bb.dev\",\n  appUrl: props.appUrl,\n  theme: props.theme || {\n    name: \"light\",\n    bg: \"#e3e8ef\",\n    color: \"#4c5566\",\n    border: \"#748094\",\n    hover: {\n      bg: \"#eef2f6\",\n      border: \"#d8dfe7\",\n    },\n    text: {\n      fontSize: \"16px\",\n    },\n    heading: {\n      fontSize: \"18px\",\n      fontWeight: \"600\",\n    },\n  },\n  loading: false,\n  error: false,\n  contractId: null,\n  codeHash: null,\n});\n\nconst A = styled.a`\n  text-decoration: none;\n  color: ${state.theme.color};\n\n  :hover {\n    text-decoration: none;\n    color: ${state.theme.color};\n  }\n`;\n\nconst Stack = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  align-items: center;\n  justify-content: center;\n  gap: 55px;\n`;\n\nconst HStack = styled.div`\n  display: flex;\n  flex-direction: row;\n  text-align: center;\n  align-items: center;\n  justify-content: center;\n  gap: 25px;\n`;\n\nconst ImportStack = styled.div`\n  display: flex;\n  flex-direction: row;\n  text-align: center;\n  align-items: center;\n  justify-content: center;\n  gap: 25px;\n\n  @media only screen and (max-width: 750px) {\n    flex-direction: column;\n    gap: 30px;\n  }\n`;\n\nconst Commit = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  text-align: center;\n  align-items: center;\n  justify-content: space-between;\n  gap: 25px;\n  border-bottom: 1px dashed ${state.theme.border};\n\n  @media only screen and (max-width: 750px) {\n    flex-direction: column;\n    justify-content: center;\n    margin-top: 25px;\n  }\n`;\n\nconst NHStack = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  gap: 5px;\n`;\n\nconst CommitsContainer = styled.div`\n  height: 100%;\n  padding: 10px;\n  border-radius: 6px;\n  border-style: dashed;\n  border-color: ${state.theme.border};\n  flex-direction: row;\n  text-align: center;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst CommitInfo = styled.div`\n  width: 100%;\n  display: flex;\n  padding: 15px;\n  flex-direction: row;\n  text-align: start;\n  align-items: center;\n  justify-content: space-between;\n  gap: 25px;\n\n  @media only screen and (max-width: 750px) {\n    flex-direction: column;\n    text-align: center;\n    justify-content: center;\n  }\n`;\n\nconst SearchStack = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  gap: 15px;\n\n  @media only screen and (max-width: 750px) {\n    flex-direction: column;\n    gap: 30px;\n  }\n`;\n\nconst Text = styled.div`\n  font-size: ${state.theme.text.fontSize};\n  font-weight: ${state.theme.text.fontWeight};\n  color: ${state.theme.color};\n`;\n\nconst MHeading = styled.div`\n  font-size: ${state.theme.heading.fontSize};\n  font-weight: ${state.theme.heading.fontWeight};\n  color: ${state.theme.color};\n  width: 250px;\n`;\n\nconst Heading = styled.div`\n  font-size: ${state.theme.heading.fontSize};\n  font-weight: ${state.theme.heading.fontWeight};\n  color: ${state.theme.color};\n`;\n\nconst Select = styled.select`\n  cursor: pointer;\n  border: 1px solid ${state.theme.border};\n  background-color: transparent;\n  border-radius: 6px;\n  height: 36px;\n  width: 200px;\n  padding-left: 10px;\n  padding-right: 10px;\n  text-align: start;\n  transition: border 0.1s ease-in-out;\n  color: ${state.theme.color};\n\n  :hover {\n    border: 1px solid ${state.theme.hover.border};\n  }\n`;\n\nconst Button = styled.button`\n  height: 36px;\n  width: 96px;\n  font-weight: 600;\n  border-radius: 6px;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  border: 1px dashed ${state.theme.border};\n  color: ${state.theme.color};\n  background-color: ${state.theme.bg};\n  transition: background-color 0.1s ease-in-out;\n\n  :hover {\n    background-color: ${state.theme.hover.bg};\n  }\n`;\n\nconst RButton = styled.button`\n  background-color: ${state.theme.bg};\n  border: 1px solid ${state.theme.border};\n  width: 20px;\n  height: 20px;\n  border-radius: 50px;\n`;\n\nconst SelectedRButton = styled.button`\n  background-color: ${state.theme.border};\n  border: 1px solid ${state.theme.border};\n  width: 20px;\n  height: 20px;\n  border-radius: 50px;\n`;\n\nconst clearState = () => {\n  State.update({\n    loading: false,\n    error: false,\n    contractId: null,\n    codeHash: null,\n  });\n};\n\nconst handleSubmit = (value) => {\n  clearState();\n\n  State.update({ loading: true });\n\n  const options = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      jsonrpc: \"2.0\",\n      id: \"dontcare\",\n      method: \"query\",\n      params: {\n        request_type: \"view_code\",\n        finality: \"final\",\n        account_id: value,\n      },\n    }),\n  };\n  asyncFetch(props.rpcUrl, options)\n    .then((rpc_res) => {\n      if (rpc_res.body.error) {\n        State.update({ error: rpc_res.body.error.cause.name });\n      }\n\n      State.update({\n        contractId: value,\n        codeHash: rpc_res.body.result.hash,\n      });\n    })\n    .catch((err) => {\n      console.log(err);\n    })\n    .finally(() => {\n      State.update({ loading: false });\n    });\n};\n\nconst truncateStringInMiddle = (str, maxLength) => {\n  if (str.length <= maxLength) {\n    return str;\n  }\n\n  const halfMaxLength = Math.floor(maxLength / 2);\n  const firstHalf = str.slice(0, halfMaxLength);\n  const secondHalf = str.slice(-halfMaxLength);\n\n  return firstHalf + \"...\" + secondHalf;\n};\n\nreturn (\n  <Stack>\n    <Heading>1. Select contract to verify</Heading>\n    <SearchStack>\n      <Widget\n        src={`${state.ownerId}/widget/SourceScan.Inputs.SearchBar`}\n        props={{\n          inputWidth: \"180px\",\n          placeholder: \"Account ID\",\n          theme: state.theme,\n          handleSubmit: handleSubmit,\n          value: state.contractId,\n        }}\n      />\n    </SearchStack>\n    {state.error && state.error !== \"NO_CONTRACT_CODE\" ? (\n      <Widget\n        src={`${state.ownerId}/widget/SourceScan.Common.ErrorAlert`}\n        props={{\n          message: \"Error while loading contract from rpc\",\n        }}\n      />\n    ) : (\n      <>\n        {state.contractId ? (\n          <NHStack>\n            <Heading>{state.contractId}</Heading>\n            <A\n              href={`https://${\n                context.networkId === \"mainnet\" ? \"\" : \"testnet.\"\n              }nearblocks.io/address/${state.contractId}`}\n              target={\"_blank\"}\n            >\n              <Widget\n                src={`${state.ownerId}/widget/SourceScan.Common.Icons.LinkIcon`}\n                props={{ width: \"18px\", height: \"18px\" }}\n              />\n            </A>\n          </NHStack>\n        ) : null}\n        {state.contractId ? (\n          <>\n            <Widget\n              src={`${state.ownerId}/widget/SourceScan.Verify.Github`}\n              props={{\n                rpcUrl: props.rpcUrl,\n                theme: state.theme,\n                apiHost: state.apiHost,\n                appUrl: state.appUrl,\n                contractId: state.contractId,\n              }}\n            />\n          </>\n        ) : state.loading ? (\n          <Widget\n            src={`${state.ownerId}/widget/SourceScan.Common.Spinner`}\n            props={{ width: \"64px\", height: \"64px\" }}\n          />\n        ) : null}\n      </>\n    )}\n  </Stack>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/sourcescan.near/widget/SourceScan.Verify.Page", "fact_widget_deployments_id": "d98361c9379768c7ce89dde77d662aeb", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 1}