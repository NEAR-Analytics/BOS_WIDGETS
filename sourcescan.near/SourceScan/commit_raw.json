{"tx_hash": "9xunk4JtJ7MxNq5zZDa88cKS1W6MCNGSm98wARFwhK2K", "action_id_social": "8HN5ukBVjgg7x8B67H5XRFk4T55sdCzzb1KUAdb18JuK-0-widget", "block_id": 97070408, "block_timestamp": "2023-07-22T13:07:35.067Z", "signer_id": "sourcescan.near", "widget_name": "SourceScan", "source_code": "const limits = [1, 10, 20, 50];\n\nconst getConfig = (network) => {\n  switch (network) {\n    case \"mainnet\":\n      return {\n        app: \"https://sourcescan.2bb.dev\",\n        ownerId: \"sourcescan.near\",\n        rpcUrl: \"https://rpc.mainnet.near.org\",\n        contractId: \"v1.sourcescan.near\",\n        apiHost: \"https://sourcescan.2bb.dev\",\n      };\n    case \"testnet\":\n      return {\n        app: \"https://sourcescan.testnet.2bb.dev\",\n        ownerId: \"sourcescan.testnet\",\n        rpcUrl: \"https://rpc.testnet.near.org\",\n        contractId: \"v5.sourcescan.testnet\",\n        apiHost: \"https://sourcescan.2bb.dev\",\n      };\n    default:\n      throw Error(`Unconfigured environment '${network}'.`);\n  }\n};\n\nState.init({\n  theme: \"light\",\n  from_index: 0,\n  limit: limits[0],\n  contracts: null,\n  pages: 1,\n  selectedPage: 1,\n  search: \"\",\n  config: getConfig(context.networkId),\n});\n\nconst dark = {\n  bg: \"#28282b\",\n  color: \"#e6eaee\",\n  border: \"#748094\",\n};\n\nconst light = {\n  bg: \"#e3e8ef\",\n  color: \"#4c5566\",\n  border: \"#748094\",\n};\n\nconst useTheme = (light, dark) => {\n  return state.theme === \"light\" ? light : dark;\n};\n\nconst Main = styled.div`\n  @import url('https://fonts.googleapis.com/css2?family=Source+Code+Pro:wght@300&display=swap');\n\n  font-family: 'Source Code Pro', monospace;\n  \n  width: 100%;\n  height: 100vh;\n  color: ${useTheme(light.color, dark.color)};\n  background-color: ${useTheme(light.bg, dark.bg)};\n`;\n\nconst Stack = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 30px;\n`;\n\nconst HStack = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 5px;\n`;\n\nconst Right = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end; \n`;\n\nconst Center = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst switchTheme = () => {\n  State.update({\n    theme: state.theme === \"light\" ? \"dark\" : \"light\",\n  });\n};\n\nconst handleSubmit = (value) => {\n  console.log(value);\n  State.update({ search: value });\n  searchContracts();\n};\n\nconst searchContracts = async () => {\n  Near.asyncView(state.config.contractId, \"search\", {\n    key: state.search,\n    from_index: state.from_index,\n    limit: state.limit,\n  })\n    .then((res) => {\n      console.log(res);\n      State.update({\n        pages: res[1],\n        contracts: res[0],\n      });\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n};\n\nif (!state.contracts) searchContracts();\n\nconst handleOptionsChange = (e) => {\n  State.update({\n    limit: parseInt(e.target.value),\n    selectedPage: 1,\n    from_index: 0,\n  });\n  searchContracts();\n};\n\nconst handlePageChange = (x) => {\n  State.update({\n    selectedPage: x + 1,\n    from_index: x * state.limit,\n  });\n  searchContracts();\n};\n\nreturn (\n  <Main>\n    <Stack>\n      <Widget\n        src={`${state.config.ownerId}/widget/SourceScan.Layout.Navbar`}\n        props={{\n          theme: state.theme,\n          ownerId: state.config.ownerId,\n          switchTheme: switchTheme,\n        }}\n      />\n      <Center>\n        <HStack>\n          <Widget\n            src={`${state.config.ownerId}/widget/SourceScan.Inputs.SearchBar`}\n            props={{\n              theme: state.theme,\n              handleSubmit: handleSubmit,\n              value: state.search,\n            }}\n          />\n          <Widget\n            src={`${state.config.ownerId}/widget/SourceScan.Inputs.Limits`}\n            props={{\n              handleOptionsChange: handleOptionsChange,\n              theme: state.theme,\n              limits: limits,\n              selectedLimit: state.limit,\n            }}\n          />\n        </HStack>\n      </Center>\n      <Center>\n        <Stack>\n          <Widget\n            src={`${state.config.ownerId}/widget/SourceScan.Contracts.Table`}\n            props={{\n              theme: state.theme,\n              contracts: state.contracts,\n              rpcUrl: state.config.rpcUrl,\n              apiHost: state.config.apiHost,\n            }}\n          />\n          <Center>\n            <Widget\n              src={`${state.config.ownerId}/widget/SourceScan.Inputs.Pagination`}\n              props={{\n                theme: state.theme,\n                pages: state.pages,\n                selectedPage: state.selectedPage,\n                handlePageChange: handlePageChange,\n              }}\n            />\n          </Center>\n        </Stack>\n      </Center>\n    </Stack>\n  </Main>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/sourcescan.near/widget/SourceScan", "fact_widget_deployments_id": "c3fb538ff4f1fc02699e9e3e32f43190", "inserted_timestamp": "2000-01-01T00:00:00.000Z", "modified_timestamp": "2000-01-01T00:00:00.000Z", "__row_index": 39}