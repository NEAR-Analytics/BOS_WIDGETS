{"tx_hash": "872e8icZza3ZL2tCNyDYB9dW8PeRp5KDUKj7RLB4t5qa", "action_id_social": "J6QAxekqVp9r4BcBLitNaaq3BoHBXAAXf6Upaa9YrXte-0-widget", "block_id": 97065753, "block_timestamp": "2023-07-22T11:40:20.528Z", "signer_id": "sourcescan.near", "widget_name": "SourceScan", "source_code": null, "metadata": {"description": "#### Smart Contract Source Code Verificator and Explorer\n\nCreated by **[Andrey Gruzdev](https://near.org/near/widget/ProfilePage?accountId=agruzdev.near)** during **ETHGlobal Paris 2023**\n\n[DevHub Proposal](https://near.social/#/devgovgigs.near/widget/gigs-board.pages.Post?id=853)\n\n**Proposed Solution:**\n\nThe proposed solution involves compiling WebAssembly (WASM) code through a centralized compilation server, ensuring reproducibility. The compiled WASM code can then be deployed and verified on-chain. The infrastructure is decentralized, with storage and smart contracts on the NEAR protocol, handling account and CID binding.\n\n**Key Features:**\n\n1. **Reproducible Compilation:** WASM code compiled through the central compilation server can be reproduced in the same Docker image.\n\n2. **On-chain Verification:** Users can deploy and verify their smart contract source code on-chain.\n\n3. **Language Support:** The solution already supports TypeScript and Rust contracts compilation and verification.\n\n4. **Decentralized Infrastructure:** Most of the infrastructure, such as storage and smart contracts on the NEAR protocol, is decentralized.\n\n5. **Compilation Centralization:** The compilation process itself is centralized.\n\n6. **Backwards Compatibility:** The solution ensures that current contracts can verify their existing code through an upgrade without migration."}, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/sourcescan.near/widget/SourceScan", "fact_widget_deployments_id": "e62e3e86501d6dbc9228b3b62657b9e8", "inserted_timestamp": "2000-01-01T00:00:00.000Z", "modified_timestamp": "2000-01-01T00:00:00.000Z", "__row_index": 33}