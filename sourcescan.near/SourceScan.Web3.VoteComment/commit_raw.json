{"tx_hash": "DzWSBaC1T2hHEED215jjwhbodVY5CZsY3fP8gBkcxrxs", "action_id_social": "5yt1nCnYMDdZ4QqqACknX7yZXP6gcEdmiQwBwgTB9EwV-0-widget", "block_id": 110962927, "block_timestamp": "2024-01-21T13:11:24.420Z", "signer_id": "sourcescan.near", "widget_name": "SourceScan.Web3.VoteComment", "source_code": "const { getConfig } = VM.require(\n  `sourcescan.near/widget/SourceScan.libs.constants`\n)\nconst config = getConfig(context.networkId)\nif (!config) return null\n\nconst { Button, CStack } = VM.require(\n  `${config.ownerId}/widget/SourceScan.UI.Components`\n)\nconst { UpVoteIcon, DownVoteIcon } = VM.require(\n  `${config.ownerId}/widget/SourceScan.UI.Icons`\n)\n\n// Upvote, Downvote\nconst type = props.type\nconst isUpvote = type === 'Upvote'\nconst comment = props.comment\n\nconst [votes, setVotes] = useState(-1)\n\nuseEffect(() => {\n  if (!comment) return\n\n  let votes = 0\n  comment.votes.forEach((vote) => {\n    if (vote.vote_type === type) votes++\n  })\n  setVotes(votes)\n}, [comment])\n\nconst vote = () => {\n  Near.call(config.contractId, 'vote_comment', {\n    comment_id: comment.id,\n    is_upvote: isUpvote,\n  })\n}\n\nreturn (\n  <CStack>\n    <div onClick={vote}>\n      {type === 'Upvote' ? (\n        <UpVoteIcon width={'24px'} height={'24px'} />\n      ) : (\n        <DownVoteIcon width={'24px'} height={'24px'} />\n      )}\n    </div>\n    <div>{votes}</div>\n  </CStack>\n)\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/sourcescan.near/widget/SourceScan.Web3.VoteComment", "fact_widget_deployments_id": "ed27bb75c2f2299882bcf1e013ee2171", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 7}