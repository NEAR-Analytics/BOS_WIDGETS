{"tx_hash": "G2GwHAGwaDJjdQM3yVk8T4RRFdxz6JfLQcPYx731a2HX", "action_id_social": "2e9VgKMKBpKjDVmUSfiuqK9NQZvFDbAkg3Hw79YURBT4-0-widget", "block_id": 98841510, "block_timestamp": "2023-08-15T06:27:35.229Z", "signer_id": "easypoll-v0.ndc-widgets.near", "widget_name": "EasyPoll.Data.GetAnswers", "source_code": "const src = props.src;\nconst blocking = props.blocking ?? true;\nconst poll = props.poll;\nconst { verifiedHumansOnly, endTimestamp, startTimestamp, ogHumansOnly } = poll;\nconst indexVersion = props.indexVersion ?? \"4.0.0\";\nconst Children = props.children ?? (() => <></>);\nconst Loading = props.Loading ?? (() => <></>);\n\nlet all = Social.index(`easypoll-${indexVersion}-answer`, `${src}`);\nif (all === null && blocking) {\n  return <Loading />;\n} else if (all === null) {\n  return <Children data={[]}></Children>;\n}\n\nconst expensiveWork = () => {\n  let filtered = all\n    // should be 1 per user\n    .map((e) => e[\"accountId\"])\n    .map((e, i, final) => final.indexOf(e) === i && i)\n    .filter((e) => all[e])\n    .map((e) => all[e])\n    //\n    .filter((v, i) => {\n      // should respect startTimestamp\n      if (v.value.timestamp < startTimestamp) return false;\n      // should respect endTimestamp\n      if (v.value.timestamp > endTimestamp) return false;\n\n      return true;\n    });\n\n  let finish = true;\n  // should respect human only\n  if (verifiedHumansOnly) {\n    for (let i = 0; i < filtered.length; i++) {\n      const v = filtered[i].accountId;\n\n      const res = Near.view(\"registry.i-am-human.near\", \"sbt_tokens_by_owner\", {\n        account: `${v}`,\n        issuer: \"fractal.i-am-human.near\",\n      });\n\n      if (res === null) {\n        finish = false;\n      }\n      const isVerified = res !== null ? res?.[0]?.[1]?.[0] : null;\n\n      if (!isVerified) {\n        filtered.splice(i, 1);\n        i--;\n      }\n    }\n  }\n\n  // should respect og only\n  if (ogHumansOnly) {\n    for (let i = 0; i < filtered.length; i++) {\n      const v = filtered[i].accountId;\n\n      const res = Near.view(\"registry.i-am-human.near\", \"sbt_tokens_by_owner\", {\n        account: `${v}`,\n        issuer: \"community.i-am-human.near\",\n      });\n\n      if (res === null) {\n        finish = false;\n      }\n      const isVerified = res !== null ? res?.[0]?.[1]?.[0] : null;\n\n      if (!isVerified) {\n        filtered.splice(i, 1);\n        i--;\n      }\n    }\n  }\n\n  if (finish && !state) {\n    console.log(\n      `Finished filtering answers: ${filtered.length} valid / ${all.length} total`\n    );\n    State.init({\n      filtered,\n    });\n  }\n};\n\nif (!state) {\n  expensiveWork();\n}\n\nif (!state.filtered && blocking) {\n  return <Loading />;\n} else if (!state.filtered) {\n  return <Children data={[]}></Children>;\n}\n\nreturn <Children data={state.filtered || []}></Children>;\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/easypoll-v0.ndc-widgets.near/widget/EasyPoll.Data.GetAnswers", "fact_widget_deployments_id": "de0d95abfd2fbae33065812e9376c721", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}