{"tx_hash": "B5PjBsvWkVMkGwLDQy6TRjb9wUfHJfreVuGnn2a2q6yz", "action_id_social": "DRw1NReGANPXi3Ny39HQ66TarvCKF4qgtsFborweBGEn-0-widget", "block_id": 116696618, "block_timestamp": "2024-04-12T16:32:51.229Z", "signer_id": "adminalpha.near", "widget_name": "AI.Schema.ModelName", "source_code": "const { genSchema: genericGenSchema } = VM.require(\n  \"near/widget/Entities.Template.GenericSchema\",\n);\n\nconst genSchema = (ignored) => {\n  const namespace = \"near\";\n  const entityType = \"modelName\";\n  const entityTitle = \"Model Name\";\n\n  const genericSchema = genericGenSchema(namespace, entityType, entityTitle);\n  return {\n    ...genericSchema,\n    proprietary: {\n      type: \"boolean\",\n      inputProps: {\n        min: 4,\n        max: 255,\n        placeholder: `Whether this is a proprietary model or open source`,\n        required: false,\n      },\n      label: \"Is proprietary\",\n      order: 6,\n    },\n    // we can have both!\n    //     relationships: [\n    //         {\n    //             namespace: \"near\",\n    //             entityType: \"provider\",\n    //         }\n    //     ],\n    //     providers: {\n    //         type: \"object\",\n    //         schema: \"near.provider\",\n    //     }\n    // }\n  };\n};\n\nreturn { genSchema };\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/adminalpha.near/widget/AI.Schema.ModelName", "fact_widget_deployments_id": "a27c98307a65dae56aa94ab7f0f43560", "inserted_timestamp": "2024-04-12T18:33:43.909Z", "modified_timestamp": "2024-04-12T18:33:43.909Z", "__row_index": 0}