{"tx_hash": "B5PjBsvWkVMkGwLDQy6TRjb9wUfHJfreVuGnn2a2q6yz", "action_id_social": "DRw1NReGANPXi3Ny39HQ66TarvCKF4qgtsFborweBGEn-0-widget", "block_id": 116696618, "block_timestamp": "2024-04-12T16:32:51.229Z", "signer_id": "adminalpha.near", "widget_name": "AI.Schema.Agent", "source_code": "const { genSchema: genericGenSchema } = VM.require(\n  \"near/widget/Entities.Template.GenericSchema\",\n);\n\nconst genSchema = (ignored) => {\n  const namespace = \"near\";\n  const entityType = \"agent\";\n  const entityTitle = \"Agent\";\n\n  const genericSchema = genericGenSchema(namespace, entityType, entityTitle);\n  return {\n    ...genericSchema,\n    prompt: {\n      type: \"string\",\n      inputProps: {\n        min: 2,\n        max: 8192,\n        placeholder: \"The prompt for the agent.\",\n        required: true,\n      },\n      multiline: true,\n      label: \"Prompt\",\n      order: 3,\n    },\n    component: {\n      type: \"string\",\n      inputProps: {\n        min: 0,\n        max: 255,\n        placeholder:\n          \"The component used to run the agent, default is near/widget/AI.Agent.AgentChat\",\n        required: false,\n      },\n      label: \"Component\",\n      order: 4,\n    },\n    // preferredProvider: {\n    //     inputProps: {\n    //         min: 2,\n    //         max: 255,\n    //         placeholder: \"The preferred provider for the agent.\",\n    //         required: false,\n    //     },\n    //     label: \"Preferred Provider\",\n    //     order: 4,\n    // },\n    // preferredModel: {\n    //   inputProps: {\n    //     min: 2,\n    //     max: 255,\n    //     placeholder: \"The preferred model for the agent.\",\n    //     required: false,\n    //   },\n    //   label: \"Preferred Model\",\n    //   order: 5,\n    // },\n    // variables: {\n    //     inputProps: {\n    //         min: 2,\n    //         max: 255,\n    //         placeholder: \"The variables for the agent.\",\n    //         required: false,\n    //     },\n    //     label: \"A comma separated list of variables that should be passed into the prompt. Example: ['rfp', 'proposal'].\",\n    //     order: 6,\n    // },\n    // tools: {\n    //     inputProps: {\n    //         min: 2,\n    //         max: 255,\n    //         placeholder: \"A JSON array of Tools or Functions the agent should have access to.\",\n    //         required: false,\n    //     },\n    //\n    //     label: \"Tools\",\n    //     order: 9,\n    // },\n    // properties: {\n    //   inputProps: {\n    //     min: 2,\n    //     max: 1024,\n    //     placeholder: \"JSON properties for the agent.\",\n    //     required: false,\n    //   },\n    //\n    //   label: \"Properties\",\n    //   order: 10,\n    // },\n  };\n};\n\nreturn { genSchema };\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/adminalpha.near/widget/AI.Schema.Agent", "fact_widget_deployments_id": "3f99d1c3bf4cdf0d92369c1851aa712c", "inserted_timestamp": "2024-04-12T18:33:43.909Z", "modified_timestamp": "2024-04-12T18:33:43.909Z", "__row_index": 0}