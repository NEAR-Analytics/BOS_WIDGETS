{"tx_hash": "CCqHVyWiRiiZsoGVWDMmh3SGEKnsFBTjHq5bHc6fG1gM", "action_id_social": "6rkXqLtAnUZH8xDRdi2u8XDyph45kvcXd6TdRSgWzcps-0-widget", "block_id": 107126296, "block_timestamp": "2023-12-04T08:48:21.784Z", "signer_id": "7714d4c7fee098f763e79289fcd0984d48e63e1778a9aab568ff713fdbe49761", "widget_name": "Buy-ZLP", "source_code": "return (\n  <>\n    <DaisyUIWrapper>\n      <div class=\"card max-w-2xl mx-auto bg-gray-900 text-white\">\n        <div class=\"px-4 pt-4\">\n          <div class=\"relative flex justify-center\">\n            <LogoZkEra />\n            {chainId && (\n              <button\n                class=\"btn btn-xs btn-outline absolute right-0 top-0 text-white hover:bg-gray-900\"\n                style={{ \"border-color\": \"#43f574\" }}\n                onClick={() => {\n                  State.update({ showSettings: !state.showSettings });\n                }}\n              >\n                {chainId === \"unsupported\"\n                  ? \"Unsupported network\"\n                  : CHAINS[chainId].NETWORK_INFO.chainName}\n              </button>\n            )}\n\n            {/* settings menu */}\n            {state.showSettings && (\n              <div class=\"absolute right-0 top-8 bg-gray-900 rounded p-3\">\n                <div class=\"flex flex-col gap-2\">\n                  <button\n                    class={`btn btn-xs btn-outline${\n                      chainId === ZKSYNC_MAINNET ? \" pointer-events-none\" : \"\"\n                    }`}\n                    onClick={() => {\n                      chainId === ZKSYNC_MAINNET\n                        ? State.update({ showSettings: false })\n                        : handleClickSwitchNetwork(ZKSYNC_MAINNET);\n                    }}\n                  >\n                    {CHAINS[ZKSYNC_MAINNET].NETWORK_INFO.chainName}\n                  </button>\n                  <button\n                    class={`btn btn-xs btn-outline${\n                      chainId === ZKSYNC_TESTNET ? \" pointer-events-none\" : \"\"\n                    }`}\n                    onClick={() => {\n                      chainId === ZKSYNC_TESTNET\n                        ? State.update({ showSettings: false })\n                        : handleClickSwitchNetwork(ZKSYNC_TESTNET);\n                    }}\n                  >\n                    {CHAINS[ZKSYNC_TESTNET].NETWORK_INFO.chainName}\n                  </button>\n                </div>\n              </div>\n            )}\n          </div>\n\n          <label class=\"label\">\n            <span class=\"label-text text-lg text-white\">Buy ZLP</span>\n          </label>\n\n          <div class=\"bg-gray-800 rounded p-2 mb-2\">\n            <label class=\"label pl-4\">\n              <span class=\"label-text text-gray-400\">\n                {payValueDisplay\n                  ? `Pay: $${formatAmount(\n                      payValueDisplay,\n                      USD_DECIMALS,\n                      2,\n                      true\n                    )} `\n                  : \"Pay\"}\n              </span>\n              <span class=\"label-text text-gray-400\">\n                Balance:\n                <span class=\"text-white\">\n                  {formatAmount(\n                    fromToken && fromToken.balance,\n                    fromToken && fromToken.decimals,\n                    4,\n                    true\n                  )}\n                </span>\n              </span>\n            </label>\n            <div class=\"flex\">\n              <input\n                class=\"input w-full bg-gray-800 text-2xl focus:outline-none\"\n                onChange={(e) => handleChangePayValue(e.target.value)}\n                value={payValue}\n                placeholder=\"0.0\"\n              />\n              <div class=\"flex items-center space-x-1\">\n                <button\n                  style={{ background: \"#43f574\" }}\n                  class=\"btn btn-sm border-none font-normal rounded-4 px-2 mx-1 hover:bg-green-600 focus:bg-green-600 text-black\"\n                  onClick={handleClickMax}\n                >\n                  MAX\n                </button>\n                {getIconForToken()}\n                <select\n                  onChange={(e) => {\n                    handleChangeFromToken(e.target.value);\n                  }}\n                  class=\"select-ghost bg-gray-800  text-2xl\"\n                >\n                  {tokensInfo.map((token) => (\n                    <option value={token.address}>{token.symbol}</option>\n                  ))}\n                </select>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"bg-gray-800 rounded p-2\">\n            <label class=\"label pl-4 pr-2\">\n              <span class=\"label-text text-gray-400\">\n                {receiveValueDisplay\n                  ? `Receive: $${formatAmount(\n                      receiveValueDisplay,\n                      USD_DECIMALS,\n                      2,\n                      true\n                    )} `\n                  : \"Receive\"}\n              </span>\n              <span class=\"label-text\">\n                <span class=\"label-text text-gray-400\">\n                  Balance:\n                  <span class=\"text-white\">\n                    {formatAmount(zlpBalance, ZLP_DECIMALS, 4, true)}\n                  </span>\n                </span>\n              </span>\n            </label>\n            <div class=\"flex\">\n              <input\n                onChange={(e) => handleChangeReceiveValue(e.target.value)}\n                class=\"input w-full bg-gray-800 text-2xl focus:outline-none\"\n                value={receiveValue}\n                placeholder=\"0.0\"\n              />\n              <div class=\"flex items-center space-x-1 \">\n                <IconZLP />\n                <span class=\"text-2xl pl-1 pr-2\">ZLP</span>\n              </div>\n            </div>\n          </div>\n\n          <label class=\"label pt-3\">\n            <span class=\"label-text text-gray-400\">Fees</span>\n            <span class=\"label-text\">\n              {feeBasisPoints\n                ? `${formatAmount(feeBasisPoints, 2, 2, true)}%`\n                : \"-\"}\n            </span>\n          </label>\n        </div>\n\n        <div class=\"px-4 pb-4\">\n          {sender ? (\n            <button\n              disabled={loading}\n              style={{ background: \"#43f574\" }}\n              class={`btn w-full hover:bg-green-600 focus:bg-green-600 mt-2 text-black ${\n                primaryButtonDisabled && \"cursor-not-allowed\"\n              }`}\n              onClick={\n                chainId === \"unsupported\"\n                  ? () => handleClickSwitchNetwork(ZKSYNC_MAINNET)\n                  : !primaryButtonDisabled && handleClickSubmitBuyZlp\n              }\n            >\n              {primaryButtonText}\n            </button>\n          ) : (\n            <button\n              disabled={sender && payValue <= 0}\n              style={{ background: \"#43f574\" }}\n              class=\"relative btn w-full hover:bg-green-600 focus:bg-green-600 mt-2 text-black\"\n            >\n              Connect Wallet\n              <Web3Connect\n                className=\"opacity-0 absolute w-full h-full\"\n                connectLabel=\"Connect with Web3\"\n              />\n            </button>\n          )}\n        </div>\n      </div>\n    </DaisyUIWrapper>\n\n    <Toast />\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/7714d4c7fee098f763e79289fcd0984d48e63e1778a9aab568ff713fdbe49761/widget/Buy-ZLP", "fact_widget_deployments_id": "92429e52d61541eb3418baec797867d0", "inserted_timestamp": "2023-12-04T10:26:54.176Z", "modified_timestamp": "2023-12-20T03:22:11.422Z", "__row_index": 2}