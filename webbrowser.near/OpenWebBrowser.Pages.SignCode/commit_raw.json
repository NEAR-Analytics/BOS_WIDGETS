{"tx_hash": "G2VV9BZf3nvD7GmcDbp5bDQa4jH79nn8XQcLBYfdZ6zJ", "action_id_social": "9mDr9GyxFuTbsf76WbKQ7h29fbrHHga6wbvQQUfLBHma-0-widget", "block_id": 113954537, "block_timestamp": "2024-03-02T15:08:08.489Z", "signer_id": "webbrowser.near", "widget_name": "OpenWebBrowser.Pages.SignCode", "source_code": "const { signMessage } = props;\n\nconst Main = styled.div`\n    width:100%;\n    height:100vh;\n`;\n\nconst [selectedOption, setSelectedOption] = useState(\"\");\n\nconst widgets = Social.getr(`${context.accountId}/widget`);\nconst getSelectedOptionEncoded = () => {\n  const code = widgets[selectedOption][\"\"];\n  const encoded = ethers.utils.sha256(Buffer.from(code));\n\n  return encoded?.substring(2, encoded.length);\n};\n\nreturn (\n  <Main>\n    <select\n      onChange={(e) => {\n        setSelectedOption(e.target.value);\n      }}\n    >\n      <option>Choose a component</option>\n      {Object.keys(widgets)?.map((option) => (\n        <option>{option}</option>\n      ))}\n    </select>\n    <button\n      onClick={() => {\n        signMessage(getSelectedOptionEncoded()).then(({signature, nonce}) => {\n          Social.set({\n            routes: {\n              index: {\n                component: selectedOption,\n                signature: {\n                  value: signature,\n                  nonce\n                },\n              },\n            },\n          });\n        });\n      }}\n    >\n      Sign\n    </button>\n  </Main>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/webbrowser.near/widget/OpenWebBrowser.Pages.SignCode", "fact_widget_deployments_id": "8d23000764e372f3e781169c2b479175", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 1}