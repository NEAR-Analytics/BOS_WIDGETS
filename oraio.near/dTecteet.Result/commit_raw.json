{"tx_hash": "DUC5AH64ZSSjLaUgur7bZfVKG9GXkLBNZhiatEyTPzzj", "action_id_social": "4mmasyCjHPXbmGRMydQYVuSEw5ZjpLoeQFt2oNyHtFG7-0-widget", "block_id": 106839140, "block_timestamp": "2023-11-30T01:29:39.302Z", "signer_id": "oraio.near", "widget_name": "dTecteet.Result", "source_code": "State.init({\n  theme: props.theme || {\n    name: \"light\",\n    bg: \"#e3e8ef\",\n    color: \"#4c5566\",\n    border: \"#748094\",\n    hover: {\n      bg: \"#eef2f6\",\n    },\n  },\n});\n\n/*Here is the global font style to be used */\nconst Globalstyle = styled.div`\n*{\n  margin:0;\n  padding:0;\n  box-sizing: border-box;\n  font-family: Poppins, 'sans-serif';\n}.body;\n`;\n//   border: 1px solid ${state.theme.border};\n//   background-color: ${state.theme.bg};\n//   color: ${state.theme.color};\n/*This section handles the screen size respinsiveness at maximum of 750px (Mobile first design) */\nconst Main = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  background-color: ${state.theme.bg};\n  overflow-y: auto;\n  height: 100vh;\n  padding-bottom: 80px;\n\n  @media only screen and (max-width: 750px) {\n    padding-bottom: 160px;\n\n  }\n`;\n\nconst Maincontent = styled.div`\n  width: 100%;\n`;\n\nconst Section1 = styled.div`\n  width: 100%;\n  height: auto;\n`;\n\nconst Section2 = styled.div`\n  width: 100%;\n  height: auto;\n`;\nconst Resultdiv = styled.div`\ndisplay: flex;\nalign-items: flex-start;\njustify-content: center;\nwidth: 100vw;\ncolor: ${state.theme.color};\ntext-align: left;\nfont-family: Poppins, 'sans-serif';\nfont-size: 20px;\nfont-style: normal;\nfont-weight: 500;\nline-height: 211.496%; /* 42.299px */\npadding: 10px 20%;\n    .resultWrapper{\n        width: 45%; \n        flex-shrink: 0;\n        border-radius: 10px;\n        padding: 15px;\n        margin-right: 20px;\n    }\n    .result{\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        padding: 30px;\n        width: 100%;\n        height: auto;\n        flex-shrink: 0;\n        border-radius: 10px;\n        background: ${state.theme.bg};\n        border: 1px solid ${state.theme.border};\n    }\n    .list-result {\n        width: 100%;\n    }\n    .list-result p{\n        font-size: 13px;\n        word-wrap: break-word;\n        margin: 10px 0;\n    }\n    .list{\n        background: ${state.theme.bg};\n        border: 1px solid ${state.theme.border};\n        width: auto;\n        border-radius: 5px;\n        padding: 4px;\n        text-align: center;\n        font-size: 12px;\n\n    }\n  @media only screen and (max-width: 750px) {\n    font-size: 12px;\n    padding: 5px 10%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n\n    .resultWrapper{\n        width: 90%; \n    }\n\n    .result{\n        width: auto;\n        height: auto;\n        flex-shrink: 0;\n        border-radius: 10px;\n    }\n\n  }\n`;\n\nconst near = props.near;\nconst ether = props.ether;\nconst external = props.external;\n\nreturn (\n  <>\n    {near || ether || external ? (\n      <Globalstyle>\n        <Main>\n          <Widget />\n          <Maincontent>\n            <Section1></Section1>\n\n            <Section2>\n              <Resultdiv>\n                <div className=\"resultWrapper\">\n                  <h3>NEAR APIs</h3>\n                  <div className=\"result\">\n                    <div className=\"list-result\">\n                      {near\n                        ? Object.entries(near).map(([url, apis]) => (\n                            <div>\n                              <p>{url}</p>\n                              {apis.map((api) => (\n                                <span className=\"list\">{api}</span>\n                              ))}\n                            </div>\n                          ))\n                        : \"No Near APIs found\"}\n                    </div>\n                  </div>\n                </div>\n                <div className=\"resultWrapper\">\n                  <h3>Etherjs APIs</h3>\n                  <div className=\"result\">\n                    <div className=\"list-result\">\n                      {ether\n                        ? Object.entries(ether).map(([url, apis]) => (\n                            <div>\n                              <p>{url}</p>\n                              {apis.map((api) => (\n                                <span className=\"list\">{api}</span>\n                              ))}\n                            </div>\n                          ))\n                        : \"No Etherjs APIs found\"}\n                    </div>\n                  </div>\n                </div>\n                <div className=\"resultWrapper\">\n                  <h3>External APIs</h3>\n                  <div className=\"result\">\n                    <div className=\"list-result\">\n                      {external\n                        ? Object.entries(external).map(([url, apis]) => (\n                            <div>\n                              <p>{url}</p>\n                              {apis.map((api) => (\n                                <span className=\"list\">{api}</span>\n                              ))}\n                            </div>\n                          ))\n                        : \"No External APIs found\"}\n                    </div>\n                  </div>\n                </div>\n              </Resultdiv>\n            </Section2>\n          </Maincontent>\n        </Main>\n      </Globalstyle>\n    ) : (\n      \"\"\n    )}\n  </>\n);\n", "metadata": {"platform": "jutsu.ai"}, "branch": {"draft": null}, "widget_modules_used": null, "widget_url": "https://near.social/#/oraio.near/widget/dTecteet.Result", "fact_widget_deployments_id": "5eb9f1c3339afe5c3c03f918a7ab4dd6", "inserted_timestamp": "2023-11-30T03:20:02.845Z", "modified_timestamp": "2023-12-20T02:50:47.065Z", "__row_index": 1}