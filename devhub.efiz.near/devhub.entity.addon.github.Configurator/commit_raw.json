{"tx_hash": "BKVQdkHnrvDtqoscGr7zQkJTS47AHYERN4XQNsM3P39v", "action_id_social": "D1wgCdZB9EJMLLUsNz6bc3Rviquc2VfbCS3ctnAHvKQq-0-widget", "block_id": 108492825, "block_timestamp": "2023-12-21T16:56:39.490Z", "signer_id": "devhub.efiz.near", "widget_name": "devhub.entity.addon.github.Configurator", "source_code": "// THIS IS A WORK IN PROGRESS.\n// The code for the configurator and viewer is very intertwined\n// and there is constant \"negative affirmative\" prop drilling happening, making it hard to follow\nconst { data, onSubmit, permissions } = props;\n\nconst Struct = VM.require(\"devhub.efiz.near/widget/core.lib.struct\");\n\nif (!Struct) {\n  return <p>Loading modules...</p>;\n}\n\nconst defaultFieldUpdate = ({\n  input,\n  lastKnownValue,\n  params: { arrayDelimiter },\n}) => {\n  switch (typeof input) {\n    case \"boolean\":\n      return input;\n\n    case \"object\": {\n      if (Array.isArray(input) && typeof lastKnownValue === \"string\") {\n        return input.join(arrayDelimiter ?? \",\");\n      } else {\n        return Array.isArray(lastKnownValue)\n          ? [...lastKnownValue, ...input]\n          : { ...lastKnownValue, ...input };\n      }\n    }\n\n    case \"string\":\n      return Array.isArray(lastKnownValue)\n        ? input.split(arrayDelimiter ?? \",\").map((string) => string.trim())\n        : input;\n\n    default: {\n      if ((input ?? null) === null) {\n        switch (typeof lastKnownValue) {\n          case \"boolean\":\n            return !lastKnownValue;\n\n          default:\n            return lastKnownValue;\n        }\n      } else return input;\n    }\n  }\n};\n\nconst useForm = ({ initialValues, onUpdate, stateKey, uninitialized }) => {\n  const initialFormState = {\n    hasUnsubmittedChanges: false,\n    values: initialValues ?? {},\n  };\n\n  const formState = state[stateKey] ?? null,\n    isSynced = Struct.isEqual(formState?.values ?? {}, initialFormState.values);\n\n  const formReset = () =>\n    State.update((lastKnownComponentState) => ({\n      ...lastKnownComponentState,\n      [stateKey]: initialFormState,\n      hasUnsubmittedChanges: false,\n    }));\n\n  const formUpdate =\n    ({ path, via: customFieldUpdate, ...params }) =>\n    (fieldInput) => {\n      const updatedValues = Struct.deepFieldUpdate(\n        formState?.values ?? {},\n        path, // Pass the path directly\n        (node) => {\n          return {\n            ...node,\n            // Update the last key in the path\n            [path[path.length - 1]]:\n              typeof customFieldUpdate === \"function\"\n                ? customFieldUpdate(\n                    fieldInput?.target?.value ?? fieldInput,\n                    node[path[path.length - 1]],\n                    params\n                  )\n                : defaultFieldUpdate(\n                    fieldInput?.target?.value ?? fieldInput,\n                    node[path[path.length - 1]],\n                    params\n                  ),\n          };\n        }\n      );\n\n      State.update((lastKnownComponentState) => ({\n        ...lastKnownComponentState,\n\n        [stateKey]: {\n          hasUnsubmittedChanges: !Struct.isEqual(\n            updatedValues,\n            initialFormState.values\n          ),\n\n          values: updatedValues,\n        },\n      }));\n\n      if (\n        typeof onUpdate === \"function\" &&\n        !Struct.isEqual(updatedValues, initialFormState.values)\n      ) {\n        onUpdate(updatedValues);\n      }\n    };\n\n  if (\n    !uninitialized &&\n    (formState === null || (!formState.hasUnsubmittedChanges && !isSynced))\n  ) {\n    formReset();\n  }\n\n  return {\n    ...(formState ?? initialFormState),\n    isSynced,\n    reset: formReset,\n    stateKey,\n    update: formUpdate,\n  };\n};\n\nconst uuid = () =>\n  [Date.now().toString(16)]\n    .concat(\n      Array.from(\n        { length: 4 },\n        () => Math.floor(Math.random() * 0xffffffff) & 0xffffffff\n      ).map((value) => value.toString(16))\n    )\n    .join(\"-\");\n\nconst withUUIDIndex = (data) => {\n  const id = uuid();\n\n  return Object.fromEntries([[id, { ...data, id }]]);\n};\n\nconst settings = {\n  maxColumnsNumber: 20,\n};\n\nconst GithubKanbanBoardTicketFeaturesSchema = {\n  id: { label: \"GitHub ID\" },\n  author: { label: \"Author\" },\n  labels: { label: \"Labels\" },\n  type: { label: \"Type\" },\n};\n\nconst GithubKanbanBoardTicketTypesSchema = {\n  Issue: { label: \"Issue\" },\n  PullRequest: { label: \"Pull Request\" },\n};\n\nconst GithubKanbanBoardDefaults = {\n  columns: {},\n  dataTypesIncluded: { Issue: false, PullRequest: true },\n  description: \"\",\n  repoURL: \"\",\n  ticketState: \"all\",\n  title: \"\",\n\n  metadata: {\n    id: uuid(),\n    type: \"github.kanban_board\",\n\n    ticket: {\n      type: \"github.kanban_ticket\",\n      features: { id: true, author: true, labels: true, type: true },\n    },\n  },\n};\n\nconst toMigrated = ({ metadata, id, ...restParams }) => ({\n  metadata: {\n    ...GithubKanbanBoardDefaults.metadata,\n    ...metadata,\n    id: id ?? metadata.id,\n  },\n\n  ...restParams,\n});\n\nconst [editingMode, setEditingMode] = useState(\"form\");\n\n// This is a workaround because of how the data was decided to be saved.\nconst dynamicKey = Object.keys(data).find((key) => key !== \"metadata\");\ndata = data[dynamicKey];\n\nconst form = useForm({\n  initialValues: Struct.typeMatch(data) ? toMigrated(data) : {},\n  stateKey: \"view\",\n  uninitialized: !Struct.typeMatch(data),\n});\n\nconst newViewInit = () =>\n  State.update((lastKnownState) => ({\n    ...lastKnownState,\n\n    board: {\n      hasUnsubmittedChanges: false,\n      values: GithubKanbanBoardDefaults,\n    },\n  }));\n\nconst columnsCreateNew = ({ lastKnownValue }) =>\n  Object.keys(lastKnownValue || {}).length < settings.maxColumnsNumber\n    ? {\n        ...(lastKnownValue ?? {}),\n\n        ...withUUIDIndex({\n          description: \"\",\n          labelSearchTerms: [],\n          title: \"New column\",\n        }),\n      }\n    : lastKnownValue;\n\nconst columnsDeleteById =\n  (id) =>\n  ({ lastKnownValue }) =>\n    Object.fromEntries(\n      Object.entries(lastKnownValue).filter(([columnId]) => columnId !== id)\n    );\n\nconst onCancel = () => {\n  form.reset();\n};\n\nconst onSave = () =>\n  onSubmit({\n    kanbanBoards: { [form.values.metadata.id]: form.values },\n  });\n\nfunction Form() {\n  return (\n    <>\n      <div className=\"d-flex flex-column\">\n        <div className=\"d-flex gap-1 flex-column flex-xl-row\">\n          <Widget\n            src=\"devhub.efiz.near/widget/devhub.components.molecule.Input\"\n            props={{\n              className: \"w-100\",\n              key: `${form.values.metadata.id}-repoURL`,\n              label: \"Repository URL\",\n              onChange: form.update({ path: [\"repoURL\"] }),\n              placeholder: \"https://github.com/example-org/example-repo\",\n              value: form.values.repoURL,\n            }}\n          />\n          <Widget\n            src=\"devhub.efiz.near/widget/devhub.components.molecule.Input\"\n            props={{\n              className: \"w-100\",\n              key: `${form.values.metadata.id}-title`,\n              label: \"Title\",\n              onChange: form.update({ path: [\"title\"] }),\n              placeholder: \"NEAR Protocol NEPs\",\n              value: form.values.title,\n            }}\n          />\n        </div>\n\n        <Widget\n          src=\"devhub.efiz.near/widget/devhub.components.molecule.Input\"\n          props={{\n            className: \"w-100\",\n            key: `${form.values.metadata.id}-description`,\n            label: \"Description\",\n            onChange: form.update({ path: [\"description\"] }),\n            placeholder: \"Latest NEAR Enhancement Proposals by status.\",\n            value: form.values.description,\n          }}\n        />\n      </div>\n\n      <div className=\"d-flex gap-4 flex-row flex-wrap justify-content-between\">\n        <Widget\n          src=\"devhub.efiz.near/widget/devhub.components.molecule.Input\"\n          props={{\n            heading: \"Ticket types\",\n            classNames: { root: \"col-12 col-md-4 h-auto\" },\n            externalState: form.values.dataTypesIncluded,\n            isActive: true,\n            isEmbedded: true,\n            isUnlocked: permissions.can_configure,\n            onChange: form.update({ path: [\"dataTypesIncluded\"] }),\n            schema: GithubKanbanBoardTicketTypesSchema,\n          }}\n        />\n\n        <div\n          className={[\n            \"col-12 col-md-3\",\n            \"d-flex gap-3 flex-column justify-content-center p-4\",\n          ].join(\" \")}\n        >\n          <span\n            className=\"d-inline-flex gap-2\"\n            id={`${form.values.metadata.id}-ticketState`}\n          >\n            <i class=\"bi bi-cone-striped\" />\n            <span>Ticket state</span>\n          </span>\n\n          <Widget\n            src=\"devhub.efiz.near/widget/devhub.components.molecule.Switch\"\n            props={{\n              currentValue: form.values.ticketState,\n              key: \"ticketState\",\n              onChange: form.update({ path: [\"ticketState\"] }),\n\n              options: [\n                { label: \"All\", value: \"all\" },\n                { label: \"Open\", value: \"open\" },\n                { label: \"Closed\", value: \"closed\" },\n              ],\n            }}\n          />\n        </div>\n        <Widget\n          src=\"devhub.efiz.near/widget/devhub.components.organism.Configurator\"\n          props={{\n            heading: \"Card fields\",\n            classNames: { root: \"col-12 col-md-4 h-auto\" },\n            externalState: form.values.metadata.ticket.features,\n            isActive: true,\n            isEmbedded: true,\n            isUnlocked: permissions.can_configure,\n            onChange: form.update({ path: [\"metadata\", \"ticket\", \"features\"] }),\n            schema: GithubKanbanBoardTicketFeaturesSchema,\n          }}\n        />\n      </div>\n\n      <div className=\"d-flex align-items-center justify-content-between\">\n        <span className=\"d-inline-flex gap-2 m-0\">\n          <i className=\"bi bi-list-task\" />\n          <span>{`Columns ( max. ${settings.maxColumnsNumber} )`}</span>\n        </span>\n      </div>\n\n      <div className=\"d-flex flex-column align-items-center gap-3 w-100\">\n        {Object.values(form.values.columns ?? {}).map(\n          ({ id, description, labelSearchTerms, title }) => (\n            <div\n              className=\"d-flex gap-3 rounded-4 border p-3 w-100 attractable\"\n              key={`column-${id}-configurator`}\n            >\n              <div className=\"d-flex flex-column gap-1 w-100\">\n                <Widget\n                  src=\"devhub.efiz.near/widget/devhub.components.molecule.Input\"\n                  props={{\n                    className: \"flex-grow-1\",\n                    key: `${form.values.metadata.id}-column-${id}-title`,\n                    label: \"Title\",\n                    onChange: form.update({ path: [\"columns\", id, \"title\"] }),\n                    placeholder: \"\ud83d\udc40 Review\",\n                    value: title,\n                  }}\n                />\n                <Widget\n                  src=\"devhub.efiz.near/widget/devhub.components.molecule.Input\"\n                  props={{\n                    format: \"comma-separated\",\n                    key: `${form.values.metadata.id}-column-${title}-labelSearchTerms`,\n\n                    label: `Search terms for all the labels\n\t\t\t\t\t\t\t\t\t\t\tMUST be presented in included tickets`,\n\n                    onChange: form.update({\n                      path: [\"columns\", id, \"labelSearchTerms\"],\n                    }),\n\n                    placeholder: \"WG-, draft, review, proposal, ...\",\n                    value: labelSearchTerms.join(\", \"),\n                  }}\n                />\n                <Widget\n                  src=\"devhub.efiz.near/widget/devhub.components.molecule.Input\"\n                  props={{\n                    className: \"flex-grow-1\",\n                    key: `${form.values.metadata.id}-column-${id}-description`,\n                    label: \"Description\",\n\n                    onChange: form.update({\n                      path: [\"columns\", id, \"description\"],\n                    }),\n\n                    placeholder:\n                      \"NEPs that need a review by Subject Matter Experts.\",\n\n                    value: description,\n                  }}\n                />\n              </div>\n\n              <div\n                className=\"d-flex flex-column gap-3 border-start p-3 pe-0\"\n                style={{ marginTop: -16, marginBottom: -16 }}\n              >\n                <button\n                  className=\"btn btn-outline-danger\"\n                  onClick={form.update({\n                    path: [\"columns\"],\n                    via: columnsDeleteById(id),\n                  })}\n                  title=\"Delete column\"\n                >\n                  <i className=\"bi bi-trash-fill\" />\n                </button>\n              </div>\n            </div>\n          )\n        )}\n\n        <div className=\"d-flex gap-3 justify-content-end w-100\">\n          <Widget\n            src=\"devhub.efiz.near/widget/devhub.components.molecule.Button\"\n            props={{\n              classNames: {\n                root: \"d-flex btn btn-outline-danger shadow-none border-0\",\n              },\n              label: \"Cancel\",\n              onClick: onCancel,\n            }}\n          />\n          <Widget\n            src=\"devhub.efiz.near/widget/devhub.components.molecule.Button\"\n            props={{\n              classNames: { root: \"btn btn-success\" },\n              disabled: form.isSynced,\n\n              icon: {\n                type: \"svg_icon\",\n                variant: \"floppy_drive\",\n                width: 14,\n                height: 14,\n              },\n              label: \"Save\",\n              onClick: onSave,\n            }}\n          />\n        </div>\n      </div>\n    </>\n  );\n}\n\nreturn (\n  <div\n    className=\"d-flex flex-column gap-4 w-100\"\n    style={{ maxWidth: \"100%\", marginTop: \"40px\" }}\n  >\n    <div className={\"d-flex flex-column gap-4 w-100\"}>\n      <div className=\"d-flex align-items-center justify-content-between gap-3 w-100\">\n        <h5 className=\"h5 d-inline-flex gap-2 m-0\">\n          <i className=\"bi bi-gear-wide-connected\" />\n          <span>GitHub board configuration</span>\n        </h5>\n        <Widget\n          src=\"devhub.efiz.near/widget/devhub.components.molecule.Switch\"\n          props={{\n            currentValue: editingMode,\n            key: \"editingMode\",\n            onChange: (e) => setEditingMode(e.target.value),\n\n            options: [\n              { label: \"Form\", value: \"form\" },\n              { label: \"JSON\", value: \"JSON\" },\n            ],\n\n            title: \"Editing mode selection\",\n          }}\n        />\n      </div>\n      {editingMode === \"JSON\" ? (\n        <div className=\"d-flex flex-column flex-grow-1 border-0 bg-transparent w-100\">\n          <textarea\n            className=\"form-control\"\n            rows=\"12\"\n            type=\"text\"\n            value={JSON.stringify(form.values ?? {}, null, \"\\t\")}\n          />\n        </div>\n      ) : (\n        <Form />\n      )}\n    </div>\n    {form.values ? (\n      <Widget\n        src={`devhub.efiz.near/widget/devhub.entity.addon.${form.values.metadata.type}`}\n        props={{\n          ...form.values,\n\n          configurationControls: [\n            {\n              label: \"New column\",\n\n              disabled:\n                Object.keys(form.values.columns || {}).length >=\n                settings.maxColumnsNumber,\n\n              icon: { type: \"bootstrap_icon\", variant: \"bi-plus-lg\" },\n\n              onClick: form.update({\n                path: [\"columns\"],\n                via: columnsCreateNew,\n              }),\n            },\n          ],\n\n          isSynced: form.isSynced,\n          link,\n          permissions,\n        }}\n      />\n    ) : (\n      <div\n        className=\"d-flex flex-column align-items-center justify-content-center gap-4\"\n        style={{ height: 384 }}\n      >\n        <h5 className=\"h5 d-inline-flex gap-2 m-0\">\n          This community doesn't have a GitHub board\n        </h5>\n        <Widget\n          src=\"devhub.efiz.near/widget/devhub.components.molecule.Button\"\n          props={{\n            icon: { type: \"bootstrap_icon\", variant: \"bi-github\" },\n            isHidden: !permissions.can_configure,\n            label: \"Create GitHub board\",\n            onClick: newViewInit,\n          }}\n        />\n      </div>\n    )}\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/devhub.efiz.near/widget/devhub.entity.addon.github.Configurator", "fact_widget_deployments_id": "5dc29ce8a68c6666ed47d002930badd0", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 24}