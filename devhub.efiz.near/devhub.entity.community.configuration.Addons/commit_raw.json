{"tx_hash": "EW8n2iUjHwWFJhk595RWEKDwXuMt3h31FQkoRuYxMSkZ", "action_id_social": "7N32YBHK9qJMy2b7jkoawaCrJsUgs9h4zrU84HTm1z1Z-0-widget", "block_id": 104119376, "block_timestamp": "2023-10-24T17:58:04.554Z", "signer_id": "devhub.efiz.near", "widget_name": "devhub.entity.community.configuration.Addons", "source_code": "const availableAddons = [\n  {\n    id: \"wiki\",\n    title: \"Wiki\",\n    icon: \"bi bi-book\",\n    description: \"Create a wiki for your community\",\n    view_widget: \"devhub-dev.testnet/widget/devhub.entity.addon.wiki.Viewer\",\n    configurator_widget:\n      \"devhub-dev.testnet/widget/devhub.entity.addon.wiki.Configurator\",\n  },\n  {\n    id: \"telegram\",\n    title: \"Telegram\",\n    icon: \"bi bi-telegram\",\n    description: \"Connect your telegram\",\n    view_widget:\n      \"devhub-dev.testnet/widget/devhub.entity.addon.telegram.Viewer\",\n    configurator_widget:\n      \"devhub-dev.testnet/widget/devhub.entity.addon.telegram.Configurator\",\n  },\n  {\n    id: \"github\",\n    title: \"Github\",\n    icon: \"bi bi-github\",\n    description: \"Connect your github\",\n    view_widget: \"devhub-dev.testnet/widget/devhub.entity.addon.github.Viewer\",\n    configurator_widget:\n      \"devhub-dev.testnet/widget/devhub.entity.addon.github.Configurator\",\n  },\n  {\n    id: \"kanban\",\n    title: \"Kanban\",\n    icon: \"bi bi-columns-gap\",\n    description: \"Connect your github kanban board\",\n    view_widget: \"devhub-dev.testnet/widget/devhub.entity.addon.kanban.Viewer\",\n    configurator_widget:\n      \"devhub-dev.testnet/widget/devhub.entity.addon.kanban.Configurator\",\n  },\n  {\n    id: \"blog\",\n    title: \"Blog\",\n    icon: \"bi bi-newspaper\",\n    description: \"Create a blog for your community\",\n    view_widget: \"devhub-dev.testnet/widget/devhub.entity.addon.blog.Viewer\",\n    configurator_widget:\n      \"devhub-dev.testnet/widget/devhub.entity.addon.blog.Configurator\",\n  },\n];\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n`;\n\nconst Item = styled.div`\n  padding: 10px;\n  margin: 5px;\n  display: flex;\n  align-items: center;\n  gap: 10px;\n`;\n\nconst Icon = styled.span`\n  margin-right: 10px;\n`;\n\nconst EditableField = styled.input`\n  flex: 1;\n`;\n\nconst ToggleButton = styled.input`\n  margin-left: 10px;\n`;\n\nfunction generateRandom6CharUUID() {\n  const gen = () => {\n    const r = (Math.random() * 36) | 0;\n    return r.toString(36);\n  };\n  return \"xxxxxx\".replace(/x/g, gen());\n}\n\nconst AddonItem = ({\n  data,\n  onUpdate,\n  onMove,\n  onRemove,\n  index,\n  isTop,\n  isBottom,\n}) => {\n  const handleNameChange = (event) => {\n    const newName = event.target.value;\n    onUpdate({ ...data, display_name: newName });\n  };\n\n  const handleEnableChange = () => {\n    onUpdate({ ...data, enabled: !data.enabled });\n  };\n\n  const moveItemUp = () => {\n    if (!isTop) {\n      onMove(index, index - 1);\n    }\n  };\n\n  const moveItemDown = () => {\n    if (!isBottom) {\n      onMove(index, index + 1);\n    }\n  };\n\n  const removeItem = () => {\n    onRemove(data.id);\n  };\n\n  return (\n    <div>\n      <Item>\n        <div>\n          <div style={{ display: \"flex\", gap: \"0\" }}>\n            <button\n              className=\"btn btn-sm btn-secondary rounded-0\"\n              onClick={moveItemUp}\n              disabled={isTop}\n            >\n              <i className=\"bi bi-arrow-up\"></i>\n            </button>\n            <button\n              className=\"btn btn-sm btn-secondary rounded-0\"\n              onClick={moveItemDown}\n              disabled={isBottom}\n            >\n              <i className=\"bi bi-arrow-down\"></i>\n            </button>\n          </div>\n        </div>\n        <EditableField\n          className=\"form-control border border-2\"\n          type=\"text\"\n          value={data.display_name}\n          disabled={!data.enabled}\n          onChange={handleNameChange}\n        />\n        <Widget\n          src={\"${REPL_DEVHUB}/widget/devhub.components.atom.Toggle\"}\n          props={{\n            label: \"Enabled:\",\n            value: data.enabled,\n            onChange: handleEnableChange,\n          }}\n        />\n        <button className=\"btn btn-outline-danger\" onClick={removeItem}>\n          <i className=\"bi bi-trash-fill\" />\n        </button>\n      </Item>\n    </div>\n  );\n};\n\nfunction arraysAreEqual(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < arr1.length; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nconst AddonsConfigurator = ({ data, onSubmit }) => {\n  // This is a workaround because no identifier in the data\n  const initialList = data.map((item) => ({\n    ...item,\n    id: generateRandom6CharUUID(),\n  }));\n\n  const [originalList, setOriginalList] = useState(initialList);\n  const [list, setList] = useState(initialList);\n  const [changesMade, setChangesMade] = useState(false);\n\n  useEffect(() => {\n    setOriginalList(data);\n  }, [data]);\n\n  const updateItem = (updatedItem) => {\n    const updatedList = list.map((item) =>\n      item.id === updatedItem.id ? updatedItem : item\n    );\n    setList(updatedList);\n    setChangesMade(!arraysAreEqual(originalList, updatedList));\n  };\n\n  const moveItem = (fromIndex, toIndex) => {\n    const updatedList = [...list];\n    const [movedItem] = updatedList.splice(fromIndex, 1);\n    updatedList.splice(toIndex, 0, movedItem);\n    setList(updatedList);\n    setChangesMade(!arraysAreEqual(originalList, updatedList));\n  };\n\n  const [selectedAddon, setSelectedAddon] = useState(null);\n\n  const handleAddItem = () => {\n    const newItem = {\n      id: generateRandom6CharUUID(),\n      addon_id: selectedAddon.id,\n      display_name: selectedAddon.title,\n      enabled: true,\n      parameters: \"{}\",\n    };\n    const updatedList = [...list, newItem];\n    setList(updatedList);\n    setChangesMade(!arraysAreEqual(originalList, updatedList));\n  };\n\n  const removeItem = (id) => {\n    console.log(id);\n    const updatedList = list.filter((item) => item.id !== id);\n    setList(updatedList);\n    setChangesMade(!arraysAreEqual(originalList, updatedList));\n  };\n\n  return (\n    <Container>\n      {list.map((item, index) => (\n        <AddonItem\n          key={item.id}\n          data={item}\n          onUpdate={updateItem}\n          onMove={moveItem}\n          onRemove={removeItem}\n          index={index}\n          isTop={index === 0}\n          isBottom={index === list.length - 1}\n        />\n      ))}\n      {availableAddons && list.length < 7 && (\n        <div className=\"d-flex justify-content-center\">\n          <div className=\"d-flex gap-2 flex-grow-1 px-4\">\n            <Widget\n              src={\"${REPL_NEAR}/widget/DIG.InputSelect\"}\n              props={{\n                groups: [\n                  {\n                    items: (availableAddons || []).map((it) => ({\n                      label: it.title,\n                      value: it.id,\n                    })),\n                  },\n                ],\n                rootProps: {\n                  value: selectedAddon.id ?? null,\n                  placeholder: \"Select an addon\",\n                  onValueChange: (value) =>\n                    setSelectedAddon(\n                      (availableAddons || []).find((it) => it.id === value)\n                    ),\n                },\n              }}\n            />\n            <button\n              className=\"btn btn-success\"\n              onClick={handleAddItem}\n              disabled={!selectedAddon}\n            >\n              <i className=\"bi bi-plus\" />\n            </button>\n          </div>\n        </div>\n      )}\n      <div\n        className={\"d-flex align-items-center justify-content-end gap-3 mt-4\"}\n      >\n        <Widget\n          src={\"${REPL_DEVHUB}/widget/devhub.components.molecule.Button\"}\n          props={{\n            classNames: { root: \"btn-success\" },\n            disabled: !changesMade,\n            icon: {\n              type: \"bootstrap_icon\",\n              variant: \"bi-check-circle-fill\",\n            },\n            label: \"Submit\",\n            onClick: () => onSubmit(list),\n          }}\n        />\n      </div>\n    </Container>\n  );\n};\n\nreturn AddonsConfigurator(props);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/devhub.efiz.near/widget/devhub.entity.community.configuration.Addons", "fact_widget_deployments_id": "b74f3280678f34a1c2212f486619bc08", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 1}