{"tx_hash": "EW8n2iUjHwWFJhk595RWEKDwXuMt3h31FQkoRuYxMSkZ", "action_id_social": "7N32YBHK9qJMy2b7jkoawaCrJsUgs9h4zrU84HTm1z1Z-0-widget", "block_id": 104119376, "block_timestamp": "2023-10-24T17:58:04.554Z", "signer_id": "devhub.efiz.near", "widget_name": "gigs-board.entity.community.sidebar", "source_code": "/* INCLUDE: \"common.jsx\" */\nconst nearDevGovGigsContractAccountId =\n  props.nearDevGovGigsContractAccountId ||\n  (context.widgetSrc ?? \"devgovgigs.near\").split(\"/\", 1)[0];\n\nconst nearDevGovGigsWidgetsAccountId =\n  props.nearDevGovGigsWidgetsAccountId ||\n  (context.widgetSrc ?? \"devgovgigs.near\").split(\"/\", 1)[0];\n\nfunction widget(widgetName, widgetProps, key) {\n  widgetProps = {\n    ...widgetProps,\n    nearDevGovGigsContractAccountId: props.nearDevGovGigsContractAccountId,\n    nearDevGovGigsWidgetsAccountId: props.nearDevGovGigsWidgetsAccountId,\n    referral: props.referral,\n  };\n\n  return (\n    <Widget\n      src={`${nearDevGovGigsWidgetsAccountId}/widget/gigs-board.${widgetName}`}\n      props={widgetProps}\n      key={key}\n    />\n  );\n}\n\nfunction href(widgetName, linkProps) {\n  linkProps = { ...linkProps };\n\n  if (props.nearDevGovGigsContractAccountId) {\n    linkProps.nearDevGovGigsContractAccountId =\n      props.nearDevGovGigsContractAccountId;\n  }\n\n  if (props.nearDevGovGigsWidgetsAccountId) {\n    linkProps.nearDevGovGigsWidgetsAccountId =\n      props.nearDevGovGigsWidgetsAccountId;\n  }\n\n  if (props.referral) {\n    linkProps.referral = props.referral;\n  }\n\n  const linkPropsQuery = Object.entries(linkProps)\n    .filter(([_key, nullable]) => (nullable ?? null) !== null)\n    .map(([key, value]) => `${key}=${value}`)\n    .join(\"&\");\n\n  return `/#/${nearDevGovGigsWidgetsAccountId}/widget/gigs-board.pages.${widgetName}${\n    linkPropsQuery ? \"?\" : \"\"\n  }${linkPropsQuery}`;\n}\n/* END_INCLUDE: \"common.jsx\" */\n\n/* INCLUDE: \"core/adapter/dev-hub\" */\nconst devHubAccountId =\n  props.nearDevGovGigsContractAccountId ||\n  (context.widgetSrc ?? \"devgovgigs.near\").split(\"/\", 1)[0];\n\nconst DevHub = {\n  get_root_members: () =>\n    Near.view(devHubAccountId, \"get_root_members\") ?? null,\n\n  has_moderator: ({ account_id }) =>\n    Near.view(devHubAccountId, \"has_moderator\", { account_id }) ?? null,\n\n  create_community: ({ inputs }) =>\n    Near.call(devHubAccountId, \"create_community\", { inputs }),\n\n  get_community: ({ handle }) =>\n    Near.view(devHubAccountId, \"get_community\", { handle }) ?? null,\n\n  get_account_community_permissions: ({ account_id, community_handle }) =>\n    Near.view(devHubAccountId, \"get_account_community_permissions\", {\n      account_id,\n      community_handle,\n    }) ?? null,\n\n  update_community: ({ handle, community }) =>\n    Near.call(devHubAccountId, \"update_community\", { handle, community }),\n\n  delete_community: ({ handle }) =>\n    Near.call(devHubAccountId, \"delete_community\", { handle }),\n\n  update_community_board: ({ handle, board }) =>\n    Near.call(devHubAccountId, \"update_community_board\", { handle, board }),\n\n  update_community_github: ({ handle, github }) =>\n    Near.call(devHubAccountId, \"update_community_github\", { handle, github }),\n\n  get_access_control_info: () =>\n    Near.view(devHubAccountId, \"get_access_control_info\") ?? null,\n\n  get_all_authors: () => Near.view(devHubAccountId, \"get_all_authors\") ?? null,\n\n  get_all_communities_metadata: () =>\n    Near.view(devHubAccountId, \"get_all_communities_metadata\") ?? null,\n\n  get_all_labels: () => Near.view(devHubAccountId, \"get_all_labels\") ?? null,\n\n  get_post: ({ post_id }) =>\n    Near.view(devHubAccountId, \"get_post\", { post_id }) ?? null,\n\n  get_posts_by_author: ({ author }) =>\n    Near.view(devHubAccountId, \"get_posts_by_author\", { author }) ?? null,\n\n  get_posts_by_label: ({ label }) =>\n    Near.view(nearDevGovGigsContractAccountId, \"get_posts_by_label\", {\n      label,\n    }) ?? null,\n\n  useQuery: (name, params) => {\n    const initialState = { data: null, error: null, isLoading: true };\n\n    const cacheState = useCache(\n      () =>\n        Near.asyncView(devHubAccountId, [\"get\", name].join(\"_\"), params ?? {})\n          .then((response) => ({\n            ...initialState,\n            data: response ?? null,\n            isLoading: false,\n          }))\n          .catch((error) => ({\n            ...initialState,\n            error: props?.error ?? error,\n            isLoading: false,\n          })),\n\n      JSON.stringify({ name, params }),\n      { subscribe: true }\n    );\n\n    return cacheState === null ? initialState : cacheState;\n  },\n};\n/* END_INCLUDE: \"core/adapter/dev-hub\" */\n\nfunction trimHttps(url) {\n  if (url.startsWith(\"https://\")) {\n    return url.substring(8);\n  }\n  return url;\n}\n\nconst CommunitySummary = (community) => {\n  const socialLinks = [\n    ...((community.website_url?.length ?? 0) > 0\n      ? [\n          {\n            href: `https://${trimHttps(community.website_url)}`,\n            iconClass: \"bi bi-globe\",\n            name: trimHttps(community.website_url),\n          },\n        ]\n      : []),\n\n    ...((community.github_handle?.length ?? 0) > 0\n      ? [\n          {\n            href: `https://github.com/${community.github_handle}`,\n            iconClass: \"bi bi-github\",\n            name: community.github_handle,\n          },\n        ]\n      : []),\n\n    ...((community.twitter_handle?.length ?? 0) > 0\n      ? [\n          {\n            href: `https://twitter.com/${community.twitter_handle}`,\n            iconClass: \"bi bi-twitter\",\n            name: community.twitter_handle,\n          },\n        ]\n      : []),\n\n    ...(community.telegram_handle.length > 0\n      ? community.telegram_handle.map((telegram_handle) => ({\n          href: `https://t.me/${telegram_handle}`,\n          iconClass: \"bi bi-telegram\",\n          name: telegram_handle,\n        }))\n      : []),\n  ];\n\n  return (\n    <>\n      {widget(\"components.molecule.markdown-viewer\", {\n        text: community.bio_markdown,\n      })}\n      <small class=\"text-muted mb-3\">\n        {widget(\"components.atom.tag\", { linkTo: \"Feed\", ...community })}\n      </small>\n\n      <div className=\"mt-3\">\n        {socialLinks.map((link, index) => (\n          <a\n            className={`mt-1 btn-outline-light text-reset border-0 d-flex align-items-center`}\n            href={link.href}\n            style={{ marginLeft: index !== 0 ? \"0px\" : \"0px\" }}\n            key={link.href}\n            target=\"_blank\"\n          >\n            <i className={link.iconClass}></i>\n            <span\n              className=\"ms-1\"\n              style={{\n                overflow: \"hidden\",\n                whiteSpace: \"nowrap\",\n                textOverflow: \"ellipsis\",\n              }}\n            >\n              {link.name}\n            </span>\n          </a>\n        ))}\n      </div>\n    </>\n  );\n};\n\nconst Sidebar = ({ handle }) => {\n  const community = DevHub.get_community({ handle }) ?? null;\n\n  if ((handle ?? null) === null) {\n    return (\n      <div class=\"alert alert-danger\" role=\"alert\">\n        Error: community handle is required in sidebar\n      </div>\n    );\n  }\n\n  return community === null ? (\n    <div>Loading...</div>\n  ) : (\n    <div class=\"d-flex flex-column align-items-end\">\n      {widget(\"components.molecule.tile\", {\n        fullWidth: true,\n        minHeight: 0,\n        children: CommunitySummary(community),\n        noBorder: true,\n        borderRadius: \"rounded\",\n      })}\n\n      <hr style={{ width: \"100%\", borderTop: \"1px solid #00000033\" }} />\n\n      {widget(\"components.molecule.tile\", {\n        heading: \"Admins\",\n\n        children: (community?.admins ?? []).map((accountId) => (\n          <div key={accountId} className=\"d-flex\" style={{ fontWeight: 500 }}>\n            {widget(\"components.molecule.profile-card\", { accountId })}\n          </div>\n        )),\n\n        fullWidth: true,\n        minHeight: 0,\n        noBorder: true,\n        borderRadius: \"rounded\",\n        style: { overflowX: \"scroll\" },\n      })}\n    </div>\n  );\n};\n\nreturn Sidebar(props);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/devhub.efiz.near/widget/gigs-board.entity.community.sidebar", "fact_widget_deployments_id": "7678f35b604a224af844e995062fb647", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 4}