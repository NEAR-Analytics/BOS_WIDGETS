{"tx_hash": "Fk5PKCEEXzCGQXLvtmyV1PVdArjU7RcTg2VGehyvmZ9C", "action_id_social": "4DcxboZHwWZnyAfVQBt9gMz9uYRDYnHfUsQyrjqKB7AG-0-widget", "block_id": 120090728, "block_timestamp": "2024-05-30T21:48:17.280Z", "signer_id": "trylivepeer.near", "widget_name": "Library.PlayerSandbox", "source_code": "const ContentContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n  color: #a5a5a5;\n  h4 {\n    font-size: 18px;\n    font-weight: 700;\n    margin-top: 16px;\n  }\n  .player-component {\n    margin-bottom: 16px;\n  }\n`;\nreturn (\n  <ContentContainer>\n    <h4>1. Set up API key:</h4>\n    <div className=\"player-component\">\n      <Player.ApiKey />\n    </div>\n    <h4>2. Create an asset object:</h4>\n    <div className=\"player-component\">\n      <Player.GetUploadUrl />\n    </div>\n    <h4>3. Upload the asset directly:</h4>\n    <div className=\"player-component\">\n      <Player.DirectUploadAsset />\n    </div>\n    <h4>3a. Or with resumable upload (more reliable):</h4>\n    <div className=\"player-component\">\n      <Player.ResumableUploadAsset />\n    </div>\n    <h4>4. Get the `src` object</h4>\n    <div className=\"player-component\">\n      <Player.GetSrc />\n    </div>\n    <h4>5. Display the asset</h4>\n    <div className=\"player-component\">\n      <Player.Display value={props.key} props={props.playerProps} />\n    </div>\n    <div className=\"player-component\">\n      <Player.Debug />\n    </div>\n  </ContentContainer>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/trylivepeer.near/widget/Library.PlayerSandbox", "fact_widget_deployments_id": "df0a3db01a3e024fc9cc295e2162e7d4", "inserted_timestamp": "2024-05-30T23:45:54.850Z", "modified_timestamp": "2024-05-30T23:45:54.850Z", "__row_index": 0}