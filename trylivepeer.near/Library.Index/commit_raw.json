{"tx_hash": "Fk5PKCEEXzCGQXLvtmyV1PVdArjU7RcTg2VGehyvmZ9C", "action_id_social": "4DcxboZHwWZnyAfVQBt9gMz9uYRDYnHfUsQyrjqKB7AG-0-widget", "block_id": 120090728, "block_timestamp": "2024-05-30T21:48:17.280Z", "signer_id": "trylivepeer.near", "widget_name": "Library.Index", "source_code": "const { HeroBanner } = VM.require(\n  \"trylivepeer.near/widget/Components.hero-banner\"\n) || {\n  HeroBanner: () => <></>,\n};\nconst { href } = VM.require(\"devs.near/widget/lib.url\") || {\n  href: () => {},\n};\n// TODO: React objects shouldn't be dereferenced\n// const { Draggable } = VM.require(\n//   \"trylivepeer.near/widget/Library.Draggable\"\n// ) || {\n//   href: () => <p>Draggable not present</p>,\n// };\n// TODO: why this is not working?\n//const { Debugger } = VM.require(\"trylivepeer.near/widget/Player.Debug\") || {\n//  href: () => <span>Debugger not present</span>,\n//};\nconst { tab } = props;\nconst tabs = {\n  library: [\n    { label: \"Overview\", widget: \"trylivepeer.near/widget/Library.Overview\" },\n  ],\n  // livepeer: [\n  // subaccounts video -> every -> near\n  // / widget namespace\n  // / name of the widget\n  // . designated file structure\n  //   { label: \"player\", widget: \"trylivepeer.near/widget/Library.Player\" },\n  //   { label: \"creator\", widget: \"trylivepeer.near/widget/Library.Creator\" },\n  // ],\n  player: [\n    { label: \"Player\", widget: \"trylivepeer.near/widget/Library.Player\" },\n    {\n      label: \"GetUploadUrl\",\n      widget: \"trylivepeer.near/widget/Library.GetUploadUrl\",\n    },\n    {\n      label: \"DirectUpload\",\n      widget: \"trylivepeer.near/widget/Library.DirectUploadAsset\",\n    },\n    {\n      label: \"ResumableUpload\",\n      widget: \"trylivepeer.near/widget/Library.ResumableUploadAsset\",\n    },\n    {\n      label: \"GetSrc\",\n      widget: \"trylivepeer.near/widget/Library.GetSrc\",\n    },\n    {\n      label: \"PlayerApiKey\",\n      widget: \"trylivepeer.near/widget/Library.PlayerApiKey\",\n    },\n    {\n      label: \"Player Sandbox\",\n      widget: \"trylivepeer.near/widget/Library.PlayerSandbox\",\n    },\n    {\n      label: \"Backend Integration\",\n      widget: \"trylivepeer.near/widget/Library.GetAssets\",\n    },\n    {\n      label: \"Backend Uploader\",\n      widget: \"trylivepeer.near/widget/Library.FileUploader\",\n    },\n  ],\n  broadcast: [\n    {\n      label: \"Broadcast\",\n      widget: \"trylivepeer.near/widget/Library.Broadcast\",\n    },\n    {\n      label: \"GenerateStream\",\n      widget: \"trylivepeer.near/widget/Library.GenerateStream\",\n    },\n    {\n      label: \"Broadcast ApiKey\",\n      widget: \"trylivepeer.near/widget/Library.BroadcastApiKey\",\n    },\n    {\n      label: \"Watch Stream\",\n      widget: \"trylivepeer.near/widget/Library.WatchStream\",\n    },\n    {\n      label: \"Broadcast Sandbox\",\n      widget: \"trylivepeer.near/widget/Library.BroadcastSandbox\",\n    },\n  ],\n};\nconst LibraryWrapper = styled.div`\n  padding: 32px 40px;\n  display: flex;\n  flex-direction: column;\n  gap: 2rem;\n  height: 100%;\n  @media (max-width: 768px) {\n    padding: 1.5rem;\n  }\n`;\nconst GridContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(12, minmax(0, 1fr));\n  gap: 1rem;\n  @media (max-width: 920px) {\n    display: flex;\n    flex-direction: column;\n  }\n`;\nconst SideBar = styled.div`\n  grid-column: span 3 / span 3;\n  height: 100%;\n  display: flex;\n  padding: 24px 12px;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 14px;\n  border-radius: 24px;\n  border: 1px solid #23242b;\n  .title {\n    width: 100%;\n    color: #dde4e1;\n  }\n  p {\n    height: 40px;\n    padding: 10px 12px;\n    text-transform: capitalize;\n    margin-bottom: 14px;\n  }\n  @media (max-width: 1010px) {\n    grid-column: span 2 / span 2;\n  }\n  @media screen and (max-width: 768px) {\n    border: 0px;\n    flex-direction: row;\n    overflow-x: auto;\n    min-height: auto;\n    flex-wrap: nowrap;\n    flex-shrink: 0;\n    .title {\n      width: auto;\n    }\n  }\n`;\nconst Content = styled.div`\n  grid-column: span 9 / span 9;\n  border-radius: 24px;\n  border: 1px solid #23242b;\n  padding: 4rem;\n  background-color: #252525;\n  word-break: normal;\n  @media (max-width: 1010px) {\n    grid-column: span 10 / span 10;\n  }\n  @media screen and (max-width: 768px) {\n    padding: 1rem;\n  }\n`;\n// const RightBar = styled.div`\n//   grid-column: span 3 / span 3;\n//   height: 100%;\n//   display: flex;\n//   padding: 24px 12px;\n//   flex-direction: column;\n//   align-items: flex-start;\n//   gap: 14px;\n//   border-radius: 24px;\n//   border: 1px solid #c7c7c7;\n// `;\nconst labelToFind = props.tab;\nconst activeTab =\n  Object.values(tabs)\n    .flatMap((array) => array)\n    .find((obj) => obj.label === labelToFind) ||\n  Object.values(tabs).flatMap((array) => array)[0];\nconst StyledLink = styled.div`\n  a {\n    text-decoration: none;\n    width: 100%;\n    .button1 {\n      width: 100%;\n      background: #000000;\n      border: 1px solid #23242b;\n      color: #ffffff;\n      width: 300px;\n      height: 50px;\n      padding: 10px 12px 10px 12px;\n      gap: 12px;\n      border-radius: 8px;\n      opacity: 0px;\n      transition: opacity 0.7s ease, background-color 0.7s ease;\n      &:hover {\n        opacity: 1;\n        background-color: #555555;\n      }\n    }\n  }\n`;\nconst [activateDebug, setActivateDebug] = useState(false);\nreturn (\n  <LibraryWrapper>\n    <HeroBanner />\n    <GridContainer>\n      <SideBar>\n        {Object.keys(tabs).map((tab) => {\n          return (\n            <div className=\"title\">\n              {tab === \"player\" && (\n                <>\n                  {/* <label>\n                    Show debug component:\n                    <input\n                      type=\"checkbox\"\n                      checked={isChecked}\n                      onChange={() => setActivateDebug(!activateDebug)}\n                    />\n                  </label> */}\n                </>\n              )}\n              <p>{tab}</p>\n              <div\n                className=\"d-flex flex-md-column\"\n                style={{\n                  gap: \"14px\",\n                }}\n              >\n                {tabs[tab].map((item) => {\n                  return (\n                    <StyledLink>\n                      <Link\n                        to={href({\n                          widgetSrc: \"trylivepeer.near/widget/app\",\n                          params: {\n                            page: \"library\",\n                            tab: item.label,\n                          },\n                        })}\n                      >\n                        <button className=\"button1\">{item.label}</button>\n                      </Link>\n                    </StyledLink>\n                  );\n                })}\n              </div>\n            </div>\n          );\n        })}\n      </SideBar>\n      <Content>\n        <Widget src={activeTab.widget} loading=\"\" />\n      </Content>\n      {/* <RightBar>\n        <Widget src={\"trylivepeer.near/widget/Player.Debug\"} loading=\"\" />\n      </RightBar> */}\n    </GridContainer>\n  </LibraryWrapper>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/trylivepeer.near/widget/Library.Index", "fact_widget_deployments_id": "0c67b36697afc661855e6c8eaf91cd37", "inserted_timestamp": "2024-05-30T23:45:54.850Z", "modified_timestamp": "2024-05-30T23:45:54.850Z", "__row_index": 0}