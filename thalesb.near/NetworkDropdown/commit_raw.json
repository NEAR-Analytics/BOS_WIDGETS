{"tx_hash": "5i5Qx9kW1WbXAkTvsf7JGoWdki2jgco7Dy9rpYwNBbRU", "action_id_social": "8qBaPVPGCmeAVGA2DQ6vKFFbAXCZsN4MntsH76QEPy2M-0-widget", "block_id": 114152883, "block_timestamp": "2024-03-05T16:49:11.139Z", "signer_id": "thalesb.near", "widget_name": "NetworkDropdown", "source_code": "const DropdownContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: stretch;\n  background: #373a53;\n  border-radius: 6px;\n`;\n\nconst NetworksColumn = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  padding: 10px;\n  border-right: 1px dotted #ffffff4d;\n`;\n\nconst AssetsColumn = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  padding: 10px;\n`;\n\nconst StyledItem = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: start;\n  color: white;\n  padding: 8px 12px;\n  margin: 2px 0;\n  background: ${(props) => (props.active ? \"#292a3d\" : \"transparent\")};\n  border-radius: 8px;\n  font-size: 16px;\n  font-weight: 700;\n  line-height: 22px;\n\n  &:hover {\n    background: #292a3d;\n  }\n`;\n\nconst CryptoIcon = styled.img`\n  width: 24px;\n  height: 24px;\n  margin-right: 8px;\n`;\n\nconst AssetName = styled.span`\n  background: ${(props) => (props.active ? \"#292a3d\" : \"transparent\")};\n  border-radius: 8px;\n  font-size: 16px;\n  font-weight: 700;\n  line-height: 22px;\n`;\n\nconst { updateSelectedItem, selectedItem, networkTabs } = props;\n\nconst NetworkItem = ({ name, icon, onMouseEnter, isActive }) => {\n  return (\n    <StyledItem onMouseEnter={onMouseEnter} active={isActive}>\n      <CryptoIcon src={icon} alt={name} />\n      <span>{name}</span>\n    </StyledItem>\n  );\n};\n\nconst AssetItem = ({ name, icon, onClick, isActive }) => {\n  return (\n    <StyledItem onClick={onClick} active={isActive}>\n      <CryptoIcon src={icon} alt={name} />\n      <AssetName>{name}</AssetName>\n    </StyledItem>\n  );\n};\n\nconst assetEntries = Object.keys(networkTabs);\n\nif (!assetEntries || !networkTabs) return <></>;\n\nconst [activeBlockchain, setActiveBlockchain] = useState(\n  selectedItem.network || assetEntries[0]\n);\n\nreturn (\n  <DropdownContainer key={\"Dropdown\" + Math.random()}>\n    {/* Networks Column */}\n    <NetworksColumn>\n      {assetEntries.map((blockchain) => (\n        <NetworkItem\n          key={blockchain}\n          name={blockchain}\n          icon={networkTabs[blockchain].icon}\n          onMouseEnter={() => setActiveBlockchain(blockchain)}\n          isActive={activeBlockchain === blockchain}\n        />\n      ))}\n    </NetworksColumn>\n    {/* Assets Column */}\n\n    <AssetsColumn>\n      {networkTabs[activeBlockchain].tokens.map((asset, index) => (\n        <AssetItem\n          key={index}\n          name={asset.name}\n          icon={asset.icon}\n          isActive={\n            asset.name === selectedItem.name &&\n            activeBlockchain === selectedItem.network\n          }\n          onClick={() => updateSelectedItem(activeBlockchain, index)}\n        />\n      ))}\n    </AssetsColumn>\n  </DropdownContainer>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/thalesb.near/widget/NetworkDropdown", "fact_widget_deployments_id": "3ab6bd202d1d0b85926cabdd6cbd4ae1", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 4}