{"tx_hash": "3aqzycTuetwo4S8ow9ENhjPWdUmbS7psvFeRSHUZieB1", "action_id_social": "2xb7sZNiNWhC44J7QSBLAdtGmNqeAf2Hzb4w9VXtYKbW-0-widget", "block_id": 112322029, "block_timestamp": "2024-02-07T17:21:39.247Z", "signer_id": "thalesb.near", "widget_name": "NetworkDropdown", "source_code": "const DropdownContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: stretch;\n  background: #373a53;\n  border-radius: 6px;\n`;\n\nconst NetworksColumn = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  padding: 10px;\n  border-right: 1px dotted #ffffff4d;\n`;\n\nconst AssetsColumn = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  padding: 10px;\n`;\n\nconst StyledItem = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: start;\n  color: white;\n  padding: 8px 12px;\n  margin: 2px 0;\n  background: ${(props) => (props.active ? \"#292a3d\" : \"transparent\")};\n  border-radius: 8px;\n  font-size: 16px;\n  font-weight: 700;\n  line-height: 22px;\n\n  &:hover {\n    background: #292a3d;\n  }\n`;\n\nconst CryptoIcon = styled.img`\n  width: 24px;\n  height: 24px;\n  margin-right: 8px;\n`;\n\nconst AssetName = styled.span`\n  background: ${(props) => (props.active ? \"#292a3d\" : \"transparent\")};\n  border-radius: 8px;\n  font-size: 16px;\n  font-weight: 700;\n  line-height: 22px;\n`;\n\nconst { updateSelectedItem, selectedItem } = props;\n\nconst NetworkItem = ({ name, icon, onMouseEnter, isActive }) => {\n  return (\n    <StyledItem onMouseEnter={onMouseEnter} active={isActive}>\n      <CryptoIcon src={icon} alt={name} />\n      <span>{name}</span>\n    </StyledItem>\n  );\n};\n\nconst AssetItem = ({ name, icon, onClick, isActive }) => {\n  return (\n    <StyledItem onClick={onClick} active={isActive}>\n      <CryptoIcon src={icon} alt={name} />\n      <AssetName>{name}</AssetName>\n    </StyledItem>\n  );\n};\n\nconst ethImage =\n  \"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2/logo.png\";\n\nconst usdcImage =\n  \"https://assets.coingecko.com/coins/images/6319/large/USD_Coin_icon.png?1547042389\";\n\nconst maticImage =\n  \"https://raw.githubusercontent.com/sushiswap/list/master/logos/native-currency-logos/matic.svg\";\n\nconst baseImage =\n  \"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/base/info/logo.png\";\n\nconst arbitrumImage =\n  \"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/arbitrum/info/logo.png\";\n\nconst [activeBlockchain, setActiveBlockchain] = useState(\n  selectedItem.network ? selectedItem.network : \"Ethereum\"\n);\n\nconst assets = {\n  Ethereum: [\n    { name: \"USDC\", icon: usdcImage },\n    { name: \"ETH\", icon: ethImage },\n  ],\n  Polygon: [{ name: \"USDC.e\", icon: usdcImage }],\n  Base: [\n    { name: \"ETH\", icon: ethImage },\n    { name: \"USDbC\", icon: usdcImage },\n  ],\n  Arbitrum: [\n    { name: \"USDC.e\", icon: usdcImage },\n    { name: \"USDC\", icon: usdcImage },\n  ],\n};\n\nreturn (\n  <DropdownContainer key={\"teste\" + Math.random()}>\n    {/* Networks Column */}\n    <NetworksColumn>\n      <NetworkItem\n        name=\"Ethereum\"\n        icon={ethImage}\n        onMouseEnter={() => setActiveBlockchain(\"Ethereum\")}\n        isActive={activeBlockchain === \"Ethereum\"}\n      />\n      <NetworkItem\n        name=\"Polygon\"\n        icon={maticImage}\n        onMouseEnter={() => setActiveBlockchain(\"Polygon\")}\n        isActive={activeBlockchain === \"Polygon\"}\n      />\n      <NetworkItem\n        name=\"Base\"\n        icon={baseImage}\n        onMouseEnter={() => setActiveBlockchain(\"Base\")}\n        isActive={activeBlockchain === \"Base\"}\n      />\n      <NetworkItem\n        name=\"Arbitrum\"\n        icon={arbitrumImage}\n        onMouseEnter={() => setActiveBlockchain(\"Arbitrum\")}\n        isActive={activeBlockchain === \"Arbitrum\"}\n      />\n    </NetworksColumn>\n    {/* Assets Column */}\n\n    <AssetsColumn>\n      {assets[activeBlockchain].map((asset, index) => (\n        <AssetItem\n          key={index}\n          name={asset.name}\n          icon={asset.icon}\n          isActive={\n            asset.name === selectedItem.name &&\n            activeBlockchain === selectedItem.network\n          }\n          onClick={() => updateSelectedItem(activeBlockchain, index)}\n        />\n      ))}\n    </AssetsColumn>\n  </DropdownContainer>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/thalesb.near/widget/NetworkDropdown", "fact_widget_deployments_id": "e367516d29f275a736b6f9666efa6a1a", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 2}