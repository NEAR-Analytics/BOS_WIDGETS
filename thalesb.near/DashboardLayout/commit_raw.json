{"tx_hash": "31iqdF3VSdSJkc5Gsy3T6RMtX8pVd4tLhc5Le6CnUUtG", "action_id_social": "CjNG3EPWQRLZ5mCi3knUMgwdaRFuwHQ8LzcHAmLrViJA-0-widget", "block_id": 111307259, "block_timestamp": "2024-01-25T20:36:55.064Z", "signer_id": "thalesb.near", "widget_name": "DashboardLayout", "source_code": "const GridContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(12, 1fr);\n  grid-gap: 16px;\n  padding: 32px;\n  @media (max-width: 768px) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nconst Card = styled.div`\n  background: #292a3d;\n  border-radius: 8px;\n  padding: 20px;\n  color: #fff;\n`;\n\nconst GridItem = ({ span, rowSpan, children, style }) => {\n  const GridItemStyled = styled.div`\n    background: #292a3d;\n    border-radius: 8px;\n    padding: 20px;\n    color: #fff;\n    grid-column: span ${span || 6};\n    ${rowSpan && `grid-row: span ${rowSpan};`}\n    @media (max-width: 768px) {\n      grid-column: 1;\n      grid-row: auto;\n    }\n  `;\n\n  return <GridItemStyled style={style}>{children}</GridItemStyled>;\n};\n\nconst BalanceDisplay = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 12px;\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  padding: 10px;\n  border-radius: 5px;\n  border: 1px solid #333;\n  background: #292a3d;\n  color: white;\n  margin-bottom: 12px;\n\n  &:focus {\n    outline: none;\n    border-color: #4e3f8e;\n  }\n`;\n\nconst Label = styled.label`\n  display: block;\n  margin-bottom: 8px;\n  color: #aaa;\n`;\n\nconst CollateralItem = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 12px;\n\n  &:last-child {\n    border-bottom: none;\n  }\n`;\n\nconst InfoSection = styled.div`\n  background: #292a3d;\n  border-radius: 8px;\n  padding: 16px;\n  color: white;\n  margin-bottom: 16px;\n`;\n\nconst InfoRow = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 8px 0;\n  border-bottom: 1px solid #333;\n\n  &:last-child {\n    border-bottom: none;\n  }\n`;\n\nconst InfoLabel = styled.span`\n  color: #aaa;\n`;\n\nconst InfoValue = styled.span`\n  color: white;\n`;\n\nconst CollateralInfo = () => (\n  <InfoSection>\n    <InfoRow>\n      <InfoLabel>Collateral value</InfoLabel>\n      <InfoValue>0.7900</InfoValue>\n    </InfoRow>\n    <InfoRow>\n      <InfoLabel>Liquidation point</InfoLabel>\n      <InfoValue>0.0000</InfoValue>\n    </InfoRow>\n    <InfoRow>\n      <InfoLabel>Borrow capacity</InfoLabel>\n      <InfoValue>0.5100</InfoValue>\n    </InfoRow>\n    <InfoRow>\n      <InfoLabel>Available to borrow</InfoLabel>\n      <InfoValue>0.5100</InfoValue>\n    </InfoRow>\n  </InfoSection>\n);\n\nconst APRSection = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 12px 0;\n`;\n\nconst SectionTitle = styled.h2`\n  color: #fff;\n  margin-bottom: 16px;\n`;\n\nconst Button = styled.button`\n  background-color: ${(props) => props.bgColor || \"#00EC97\"};\n  color: white;\n  border: none;\n  padding: 10px 20px;\n  border-radius: 5px;\n  cursor: pointer;\n  margin-right: 10px;\n  transition: background-color 0.3s ease, transform 0.2s ease,\n    box-shadow 0.2s ease;\n\n  &:hover,\n  &:focus {\n    opacity: 0.7;\n\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n  }\n\n  &:last-child {\n    margin-right: 0;\n  }\n`;\n\nconst GhostButton = styled.button`\n  background-color: transparent;\n  color: white;\n  border: 1px solid white;\n  padding: 10px 20px;\n  border-radius: 5px;\n  cursor: pointer;\n  margin-right: 10px;\n  transition: background-color 0.3s ease, transform 0.2s ease,\n    box-shadow 0.2s ease;\n\n  &:hover,\n  &:focus {\n    opacity: 0.7;\n\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n  }\n\n  &:last-child {\n    margin-right: 0;\n  }\n`;\n\nconst Slider = styled.div`\n  background: #333;\n  border-radius: 5px;\n  position: relative;\n  height: 20px;\n\n  &:before {\n    content: \"\";\n    position: absolute;\n    top: 50%;\n    left: 0;\n    width: ${({ width }) => width}%;\n    height: 8px;\n    background: #4e3f8e;\n    border-radius: 5px;\n    transform: translateY(-50%);\n  }\n`;\n\nconst CollateralLabel = styled.span`\n  font-size: 1rem;\n  color: #fff;\n`;\n\nconst ActionGroup = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst InputGroup = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 12px;\n`;\n\nconst InputLabel = styled.label`\n  margin-right: 10px;\n  color: #aaa;\n`;\n\nconst InputField = styled.input`\n  width: 100%;\n  padding: 10px;\n  border-radius: 5px;\n  border: 1px solid #333;\n  background: #292a3d;\n  color: white;\n  margin-right: 10px;\n\n  &:focus {\n    outline: none;\n    border-color: #4e3f8e;\n  }\n`;\n\nconst SectionHeader = styled.span`\n  color: #fff;\n  margin-bottom: 20px;\n  font-size: 18px;\n  font-weight: 700;\n`;\n\nconst DropdownContainer = styled.div`\n  position: relative;\n  width: 200px;\n`;\n\nconst DropdownLabel = styled.label`\n  color: #fff;\n  display: block;\n  margin-bottom: 5px;\n`;\n\nconst DropdownSelect = styled.select`\n  width: 100%;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: #292a3d;\n  color: white;\n  border: none;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  appearance: none;\n`;\n\nconst LiquidationRiskBar = ({ riskPercent }) => {\n  return (\n    <ProgressBarContainer>\n      <ProgressBarLimit>\n        <RiskPercentage>{0}%</RiskPercentage>\n        <ProgressBarFilled style={{ width: `${riskPercent}%` }} />\n        <RiskPercentage style={{ left: `calc(${riskPercent}% - 20px)` }}>\n          {riskPercent}%\n        </RiskPercentage>\n      </ProgressBarLimit>\n    </ProgressBarContainer>\n  );\n};\n\nconst ProgressBarContainer = styled.div`\n  width: calc(100% - 16px);\n  display: flex;\n  align-items: center;\n`;\n\nconst ProgressBarLimit = styled.div`\n  height: 20px;\n  border-radius: 4px;\n  background-color: grey;\n  width: 100%;\n  position: relative;\n`;\n\nconst ProgressBarFilled = styled.div`\n  height: 100%;\n  background-color: #00ec97;\n  border-radius: 4px;\n  transition: width 0.3s ease-in-out;\n`;\n\nconst RiskPercentage = styled.span`\n  position: absolute;\n  bottom: -22px;\n  color: #888baf;\n  transition: left 0.3s ease-in-out;\n`;\n\nconst ProgressBarBorrowContainer = styled.div`\n  width: ${(props) => props.width}%;\n`;\n\nconst ProgressBarBorrow = styled.div`\n  height: 20px;\n  border-radius: 4px;\n  background-color: #6200ea;\n  width: 100px;\n  margin-left: 4px;\n  transition: width 0.3s ease-in-out;\n`;\n\nconst BorrowText = styled.span`\n  color: #888baf;\n  font-size: 14px;\n  font-weight: 600;\n  margin-left: 4px;\n`;\n\n//TODO: need to make the dropdown according to the design.\nconst NetworkDropdown = ({ selectedNetwork, onChange }) => {\n  return (\n    <DropdownContainer>\n      <DropdownLabel>NETWORK</DropdownLabel>\n      <DropdownMenu.Root>\n        <DropdownMenu.Trigger asChild>\n          <div>{\">\"}</div>\n        </DropdownMenu.Trigger>\n\n        <DropdownMenu.Content\n          style={{ backgroundColor: \"black\" }}\n          sideOffset={5}\n        >\n          <DropdownMenu.Sub>\n            <DropdownMenu.SubTrigger className=\"DropdownMenuSubTrigger\">\n              More Tools\n            </DropdownMenu.SubTrigger>\n            <DropdownMenu.SubContent\n              style={{ backgroundColor: \"black\" }}\n              sideOffset={2}\n              alignOffset={-5}\n            >\n              <DropdownMenu.Item className=\"DropdownMenuItem\">\n                Save Page As\u2026 <div className=\"RightSlot\">\u2318+S</div>\n              </DropdownMenu.Item>\n              <DropdownMenu.Item className=\"DropdownMenuItem\">\n                Create Shortcut\u2026\n              </DropdownMenu.Item>\n              <DropdownMenu.Item className=\"DropdownMenuItem\">\n                Name Window\u2026\n              </DropdownMenu.Item>\n              <DropdownMenu.Separator className=\"DropdownMenu.Separator\" />\n              <DropdownMenu.Item className=\"DropdownMenuItem\">\n                Developer Tools\n              </DropdownMenu.Item>\n            </DropdownMenu.SubContent>\n          </DropdownMenu.Sub>\n\n          <DropdownMenu.Separator className=\"DropdownMenuSeparator\" />\n\n          <DropdownMenu.Arrow className=\"DropdownMenuArrow\" />\n        </DropdownMenu.Content>\n      </DropdownMenu.Root>\n    </DropdownContainer>\n  );\n};\n\nconst ProgressBarAprContainer = styled.div`\n  width: 100%;\n`;\n\nconst ProgressBarApr = styled.div`\n  height: 20px;\n  border-radius: 4px;\n  background-color: grey;\n  width: ${(props) => props.width}%;\n  transition: width 0.3s ease-in-out;\n`;\n\nconst AprProgressBar = ({ barPercent }) => {\n  return (\n    <ProgressBarContainer>\n      <ProgressBarAprContainer>\n        <ProgressBarApr width={barPercent} />\n\n        <div style={{ marginTop: 4, fontSize: 14, fontWeight: 600 }}>\n          13,5%\n          <span\n            style={{\n              marginLeft: 2,\n              color: \"#888baf\",\n              fontSize: 14,\n              fontWeight: 600,\n            }}\n          >\n            Interest\n          </span>\n        </div>\n      </ProgressBarAprContainer>\n      <ProgressBarBorrowContainer>\n        <ProgressBarBorrow />\n        <BorrowText> 3.09%</BorrowText>\n      </ProgressBarBorrowContainer>\n    </ProgressBarContainer>\n  );\n};\n\nconst collateralItems = [\n  { label: \"Chainlink (LINK)\" },\n  { label: \"Ethereum (ETH)\" },\n  { label: \"Ethereum (ETH)\" },\n  { label: \"Ethereum (ETH)\" },\n];\n\nconst rowSpan = Math.floor(collateralItems.length / 2) * 1;\n\nlet collateralRowSpan;\nif (collateralItems.length < 3) {\n  collateralRowSpan = 1;\n} else if (collateralItems.length < 4) {\n  collateralRowSpan = 2;\n} else {\n  collateralRowSpan = rowSpan;\n}\n\nreturn (\n  <GridContainer>\n    {/* Network dropdown and liquidation risk section */}\n    <GridItem span={3}>\n      <NetworkDropdown\n        selectedNetwork={selectedNetwork}\n        onChange={handleNetworkChange}\n      />\n    </GridItem>\n    <GridItem span={9}>\n      <LiquidationRiskBar riskPercent={20} />\n    </GridItem>\n    {/* Balance Section */}\n\n    <GridItem span={4}>\n      <SectionHeader>Balance</SectionHeader>\n      <BalanceDisplay>\n        <span>123.64 USDC</span>\n        <GhostButton>Withdraw</GhostButton>\n      </BalanceDisplay>\n    </GridItem>\n\n    {/* Supply USDC Section */}\n    <GridItem span={4}>\n      <SectionHeader>Supply USDC</SectionHeader>\n      <InputGroup>\n        <InputLabel htmlFor=\"supply-input\">Wallet Balance:</InputLabel>\n        <InputField id=\"supply-input\" defaultValue=\"0.00 USDC\" />\n        <Button>SUPPLY</Button>\n      </InputGroup>\n    </GridItem>\n\n    {/* Borrow USDC Section */}\n    <GridItem span={4}>\n      <SectionHeader>Borrow USDC</SectionHeader>\n      <InputGroup>\n        <InputLabel htmlFor=\"borrow-input\">Available to Borrow:</InputLabel>\n        <InputField id=\"borrow-input\" defaultValue=\"0.00 USDC\" />\n        <Button bgColor=\"#AA00FA\"> BORROW</Button>\n      </InputGroup>\n    </GridItem>\n\n    {/* Net Borrow APR Section */}\n\n    {/* Collateral Section */}\n    <GridItem span={6} rowSpan={collateralRowSpan}>\n      <SectionHeader>Collateral</SectionHeader>\n      {collateralItems.map((item, index) => (\n        <CollateralItem key={index}>\n          <CollateralLabel>{item.label}</CollateralLabel>\n          <ActionGroup>\n            <Button>Supply</Button>\n            <Button>Withdraw</Button>\n          </ActionGroup>\n        </CollateralItem>\n      ))}\n    </GridItem>\n    <GridItem span={3}>\n      <SectionHeader>Net Borrow APR</SectionHeader>\n      <InfoSection>\n        <InfoRow>\n          <InfoLabel>Collateral value</InfoLabel>\n          <InfoValue>0.7900</InfoValue>\n        </InfoRow>\n        <InfoRow>\n          <InfoLabel>Liquidation point</InfoLabel>\n          <InfoValue>0.0000</InfoValue>\n        </InfoRow>\n        <InfoRow>\n          <InfoLabel>Borrow capacity</InfoLabel>\n          <InfoValue>0.5100</InfoValue>\n        </InfoRow>\n        <InfoRow>\n          <InfoLabel>Available to borrow</InfoLabel>\n          <InfoValue>0.5100</InfoValue>\n        </InfoRow>\n      </InfoSection>\n    </GridItem>\n    <GridItem span={3}>\n      <SectionHeader>Net Supply APR</SectionHeader>\n      <InfoSection>\n        <InfoRow>\n          <InfoLabel>Collateral value</InfoLabel>\n          <InfoValue>0.7900</InfoValue>\n        </InfoRow>\n        <InfoRow>\n          <InfoLabel>Liquidation point</InfoLabel>\n          <InfoValue>0.0000</InfoValue>\n        </InfoRow>\n        <InfoRow>\n          <InfoLabel>Borrow capacity</InfoLabel>\n          <InfoValue>0.5100</InfoValue>\n        </InfoRow>\n        <InfoRow>\n          <InfoLabel>Available to borrow</InfoLabel>\n          <InfoValue>0.5100</InfoValue>\n        </InfoRow>\n      </InfoSection>\n    </GridItem>\n    <GridItem span={6} style={{ maxHeight: \"220px\" }} rowSpan={2}>\n      <CollateralInfo />\n    </GridItem>\n  </GridContainer>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/thalesb.near/widget/DashboardLayout", "fact_widget_deployments_id": "a6ff30358440f3c9636685fc890456e9", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 1}