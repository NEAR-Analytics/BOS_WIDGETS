{"tx_hash": "8VXBQYnT9cwrELFpvBBta3S8s677dhVWA3xvnnGYU4oi", "action_id_social": "3fNPQomvXKf8v1xEqGCvhe5QLBkxAQAtJ9cRe74595Q4-0-widget", "block_id": 99697316, "block_timestamp": "2023-08-26T11:04:45.731Z", "signer_id": "gordonjun.near", "widget_name": "PeopleSearch", "source_code": "const limitPerPage = 21;\nlet people = [];\nconst peopleUrl = \"#/near/widget/PeoplePage\";\nlet followingData = null;\nlet followersData = null;\n\nState.init({\n  currentPage: 0,\n  selectedTab: props.tab || \"everyone\",\n});\n\nif (props.tab && props.tab !== state.selectedTab) {\n  State.update({\n    selectedTab: props.tab,\n  });\n}\n\nif (context.accountId) {\n  followingData = Social.keys(`${context.accountId}/graph/follow/*`, \"final\");\n  followersData = Social.keys(`*/graph/follow/${context.accountId}`, \"final\");\n}\n\n// This data includes all accounts with or without profiles:\nconst accountsData = Social.keys(\"*\", \"final\", {\n  return_type: \"BlockHeight\",\n});\nconst totalAccounts = Object.keys(accountsData || {}).length;\n\n// This data only includes accounts that have set up a profile:\nconst data = Social.keys(\"*/profile\", \"final\", {\n  return_type: \"BlockHeight\",\n});\n\nif (data) {\n  const result = [];\n\n  Object.keys(data).forEach((accountId) => {\n    const isFollowing =\n      followingData &&\n      followingData[context.accountId]?.graph?.follow[accountId] === true;\n\n    const isFollower =\n      followersData &&\n      followersData[accountId]?.graph?.follow[context.accountId] === true;\n\n    if (\n      state.selectedTab === \"everyone\" ||\n      (state.selectedTab === \"following\" && isFollowing) ||\n      (state.selectedTab === \"followers\" && isFollower)\n    ) {\n      result.push({\n        accountId,\n        blockHeight: data[accountId].profile,\n      });\n    }\n  });\n\n  result.sort((a, b) => b.blockHeight - a.blockHeight);\n  people = result.slice(0, state.currentPage * limitPerPage + limitPerPage);\n}\n\nfunction onSearchChange({ result, term }) {\n  if (term.trim()) {\n    State.update({ searchResults: result || [] });\n  } else {\n    State.update({ searchResults: null });\n  }\n}\n\nconst items = state.searchResults || people;\nconst showLoadMoreButton =\n  !state.searchResults && people.length % limitPerPage === 0;\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 48px;\n  padding-bottom: 48px;\n  padding-top: 48px;\n`;\n\nconst Header = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n`;\n\nconst Search = styled.div`\n  width: 246px;\n  margin-bottom: -48px;\n  margin-top: -48px;\n\n  @media (max-width: 500px) {\n    width: 100%;\n  }\n`;\n\nconst H1 = styled.h1`\n  font-weight: 600;\n  font-size: 32px;\n  line-height: 39px;\n  color: #11181c;\n  margin: 0;\n`;\n\nconst H2 = styled.h2`\n  font-weight: 400;\n  font-size: 20px;\n  line-height: 24px;\n  color: #687076;\n  margin: 0;\n`;\n\nconst Text = styled.p`\n  margin: 0;\n  line-height: 1.5rem;\n  color: ${(p) => (p.bold ? \"#11181C\" : \"#687076\")} !important;\n  font-weight: ${(p) => (p.bold ? \"600\" : \"400\")};\n  font-size: ${(p) => (p.small ? \"12px\" : \"14px\")};\n  overflow: ${(p) => (p.ellipsis ? \"hidden\" : \"\")};\n  text-overflow: ${(p) => (p.ellipsis ? \"ellipsis\" : \"\")};\n  white-space: ${(p) => (p.ellipsis ? \"nowrap\" : \"\")};\n  overflow-wrap: anywhere;\n\n  b {\n    font-weight: 600;\n    color: #11181c;\n  }\n\n  &[href] {\n    display: inline-flex;\n    gap: 0.25rem;\n\n    &:hover,\n    &:focus {\n      text-decoration: underline;\n    }\n  }\n`;\n\nconst Items = styled.div``;\n\nconst Item = styled.div`\n  margin-bottom: 12px;\n`;\n\nconst Button = styled.button`\n  display: block;\n  width: 100%;\n  padding: 8px;\n  height: 32px;\n  background: #fbfcfd;\n  border: 1px solid #d7dbdf;\n  border-radius: 50px;\n  font-weight: 600;\n  font-size: 12px;\n  line-height: 15px;\n  text-align: center;\n  cursor: pointer;\n  color: #11181c !important;\n  margin: 0;\n\n  &:hover,\n  &:focus {\n    background: #ecedee;\n    text-decoration: none;\n    outline: none;\n  }\n\n  span {\n    color: #687076 !important;\n  }\n`;\n\nconst Tabs = styled.div`\n  display: flex;\n  height: 48px;\n  border-bottom: 1px solid #eceef0;\n  margin-bottom: -30px;\n  overflow: auto;\n  scroll-behavior: smooth;\n\n  @media (max-width: 1024px) {\n    background: #f8f9fa;\n    border-top: 1px solid #eceef0;\n    margin-left: -12px;\n    margin-right: -12px;\n\n    > * {\n      flex: 1;\n    }\n  }\n`;\n\nconst TabsButton = styled.a`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  font-weight: 600;\n  font-size: 12px;\n  padding: 0 12px;\n  position: relative;\n  color: ${(p) => (p.selected ? \"#11181C\" : \"#687076\")};\n  background: none;\n  border: none;\n  outline: none;\n  text-align: center;\n  text-decoration: none !important;\n\n  &:hover {\n    color: #11181c;\n  }\n\n  &::after {\n    content: \"\";\n    display: ${(p) => (p.selected ? \"block\" : \"none\")};\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    height: 3px;\n    background: #59e692;\n  }\n`;\n\nreturn (\n  <Wrapper className=\"container-xl\">\n    <Search>\n      <Widget\n        src=\"near/widget/ProfileSearch\"\n        props={{\n          limit: 21,\n          onChange: onSearchChange,\n        }}\n      />\n    </Search>\n\n    {!state.searchResults && (\n      <Tabs>\n        <TabsButton\n          href={`${peopleUrl}?tab=everyone`}\n          selected={state.selectedTab === \"everyone\"}\n        >\n          Everyone\n        </TabsButton>\n\n        {context.accountId && (\n          <TabsButton\n            href={`${peopleUrl}?tab=following`}\n            selected={state.selectedTab === \"following\"}\n          >\n            Following\n          </TabsButton>\n        )}\n\n        {context.accountId && (\n          <TabsButton\n            href={`${peopleUrl}?tab=followers`}\n            selected={state.selectedTab === \"followers\"}\n          >\n            Followers\n          </TabsButton>\n        )}\n      </Tabs>\n    )}\n\n    {state.searchResults?.length === 0 && (\n      <Text>No people matched your search.</Text>\n    )}\n\n    {items.length > 0 && (\n      <Items>\n        {items.map((person, i) => (\n          <Item key={person.accountId}>\n            <Widget\n              src=\"near/widget/AccountProfileCard\"\n              props={{\n                accountId: person.accountId,\n                blockHeight: person.blockHeight,\n              }}\n            />\n          </Item>\n        ))}\n      </Items>\n    )}\n\n    {showLoadMoreButton && (\n      <Button\n        type=\"button\"\n        onClick={() => State.update({ currentPage: state.currentPage + 1 })}\n      >\n        Load More\n      </Button>\n    )}\n  </Wrapper>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/gordonjun.near/widget/PeopleSearch", "fact_widget_deployments_id": "804caf1836d2b857ea26fe1a93df8485", "inserted_timestamp": "2023-08-26T12:51:04.552Z", "modified_timestamp": "2023-08-26T12:51:04.552Z", "__row_index": 0}