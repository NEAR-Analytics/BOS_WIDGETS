{"tx_hash": "4VByroFYzMUQFB5eooJBxMesstmmHqN44nSc7AraLKrR", "action_id_social": "D9fUQnE8sNm4ihRzhg1U5rBzskfA4hH9L98NP2PLvR5X-0-widget", "block_id": 100308502, "block_timestamp": "2023-09-03T14:42:37.289Z", "signer_id": "gordonjun.near", "widget_name": "bbclanChatRoom", "source_code": "/**\n * TODO: hide \"Leave\" button using props\n */\n\n/**\n * This Widget was built using NEAR Social Bridge library.\n * Visit https://github.com/wpdas/near-social-bridge to get to know more.\n */\n\n/**\n * App setup\n */\nconst isMember = props.isMember ?? true;\nconst room = props.room ?? \"bbclan\";\n\nconst externalAppUrl = \"https://bbclan-chatroom.web.app/\";\n\nconst path = props.path;\nconst initialViewHeight = 740;\nconst initialPayload = {\n  mainChatURL: \"https://alpha.near.org/gordonjun.near/widget/bbclanChatRoom\",\n  isMember: isMember,\n  room: room, // starts with this room\n};\n\nState.init({\n  showShareModal: false,\n  clipboardText: \"\",\n});\n\n/**\n * Request Handlers.\n */\nconst requestHandler = (request, response, Utils) => {\n  switch (request.type) {\n    case \"get-room-data\":\n      getRoomDataHandler(request, response, Utils);\n      break;\n    case \"send-message\":\n      sendMessageHandler(request, response);\n      break;\n  }\n};\n\nconst getRoomDataHandler = (request, response, Utils) => {\n  const { payload } = request;\n\n  if (!payload.roomId) {\n    response(request).send({ error: \"roomId prop must be provided\" });\n    return;\n  }\n\n  Utils.promisify(\n    () =>\n      Social.index(payload.roomId, \"data\", {\n        subscribe: true,\n        limit: 100,\n        order: \"desc\",\n      }),\n    (roomData) => {\n      const roomExists = roomData && roomData.length > 0;\n      if (!roomExists) {\n        response(request).send({ error: \"room not found\" });\n        return;\n      }\n      response(request).send({ messages: roomData });\n    },\n    (err) => {\n      response(request).send({ error: \"internal error\" });\n    }\n  );\n};\n\nconst sendMessageHandler = (request, response) => {\n  const { payload } = request;\n  if (payload.roomId && payload.message) {\n    // Store message.\n    Social.set(\n      {\n        index: {\n          [payload.roomId]: JSON.stringify(\n            {\n              key: \"data\",\n              value: payload.message,\n            },\n            undefined,\n            0\n          ),\n        },\n      },\n      {\n        force: true,\n        onCommit: () => {\n          response(request).send({});\n        },\n        onCancel: () => {\n          response(request).send({ error: \"the action was canceled\" });\n        },\n      }\n    );\n    return;\n  }\n\n  // Error\n  response(request).send({\n    error: \"you must provide the roomId and a message prop\",\n  });\n};\n\nconst Wrapper = styled.div`\n  max-height: 500px;\n  height: 100%; /* Set an explicit height */\n  display: block;\n  clear: both;\n  overflow-y: auto; /* Add vertical scrollbar when content exceeds max-height */\n`;\n\nreturn (\n  <div>\n    <Wrapper>\n      <Widget\n        src=\"wendersonpires.near/widget/NearSocialBridgeCore\"\n        props={{\n          externalAppUrl,\n          path,\n          initialViewHeight,\n          initialPayload,\n          requestHandler,\n        }}\n      />\n    </Wrapper>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/gordonjun.near/widget/bbclanChatRoom", "fact_widget_deployments_id": "a2227ba0d0b70f30099644c19b3b9af8", "inserted_timestamp": "2023-09-03T16:36:21.202Z", "modified_timestamp": "2023-09-03T16:36:21.202Z", "__row_index": 0}