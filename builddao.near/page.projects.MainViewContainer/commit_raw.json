{"tx_hash": "JMdcLJdVtWUnRX29VvhAs5mhVm3MTJyxnNQmUdpFr5z", "action_id_social": "EEwfy68AeuKHdwFF8PtLECrTjjPQzC7NxAuEgXRA1YvS-0-widget", "block_id": 121296970, "block_timestamp": "2024-06-16T15:03:23.544Z", "signer_id": "builddao.near", "widget_name": "page.projects.MainViewContainer", "source_code": "const { Button } = VM.require(\"buildhub.near/widget/components\") || {\n  Button: () => <></>,\n};\nconst { ProjectCard } = VM.require(\n  \"builddao.near/widget/components.project.Card\"\n) || {\n  ProjectCard: () => <></>,\n};\nconst { href } = VM.require(\"devs.near/widget/lib.url\") || {\n  href: () => {},\n};\nconst projects = props.projects ?? [];\nconst heading = props.heading;\nconst description = props.description;\nconst subheading = props.subheading;\nconst showCreateProject = props.showCreateProject;\nconst showOpenRoles = props.showOpenRoles;\nconst showEditProjectAction = props.showEditProjectAction;\nconst Container = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, minmax(0, 1fr));\n  gap: 1rem;\n  @media screen and (max-width: 960px) {\n    grid-template-columns: repeat(2, minmax(0, 1fr));\n  }\n  @media screen and (max-width: 768px) {\n    grid-template-columns: repeat(1, minmax(0, 1fr));\n  }\n`;\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n  font-family: Poppins, sans-serif;\n  input {\n    font-family: Poppins, sans-serif;\n    color: white;\n    height: 40px;\n    &::placeholder {\n      color: #b0b0b0;\n    }\n  }\n  .cursor {\n    cursor: pointer;\n  }\n`;\nconst Subheading = styled.h3`\n  color: #fff;\n  font-family: Poppins, sans-serif;\n  font-size: 24px;\n  font-weight: 500;\n  line-height: 130%; /* 31.2px */\n  letter-spacing: -0.48px;\n  margin: 0;\n`;\nconst [filters, setFilters] = useState({\n  title: \"\",\n});\nconst [showFilterModal, setShowFilterModal] = useState(false);\nconst [showCreateModal, setShowCreateModal] = useState(false);\nconst [showCreateOptionsModal, setShowCreateOptionsModal] = useState(false);\nconst [showImportModal, setShowImportModal] = useState(false);\nconst [showQuickViewProjectData, setShowQuickView] = useState(null);\nconst toggleFilterModal = () => {\n  setShowFilterModal((prev) => !prev);\n};\nconst toggleCreateModal = () => {\n  setShowCreateModal((prev) => !prev);\n};\nconst toggleImportModal = () => {\n  setShowImportModal((prev) => !prev);\n};\nconst toggleCreateOptionsModal = () => {\n  setShowCreateOptionsModal((prev) => !prev);\n};\nconst ProjectCardWrapper = ({ children, project }) => {\n  return (\n    <div\n      className=\"cursor d-flex flex-1\"\n      onClick={() => setShowQuickView(project)}\n    >\n      {children}\n    </div>\n  );\n};\nconst filteredProjects = useMemo(() => {\n  let filtered = projects;\n  if (filters.title !== \"\") {\n    filtered = filtered.filter((project) =>\n      project.title\n        .toLowerCase()\n        .includes(filters.title.toLowerCase() ?? \"\".toLowerCase())\n    );\n  }\n  if (filters.teamSize !== \"\") {\n    filtered = filtered.filter((project) => {\n      switch (filters.teamSize) {\n        case \"1-10\":\n          return project.collaborators.length <= 10;\n        case \"10-50\":\n          return (\n            project.collaborators.length <= 50 &&\n            project.collaborators.length >= 10\n          );\n        case \"50-100\":\n          return (\n            project.collaborators.length <= 100 &&\n            project.collaborators.length >= 50\n          );\n        case \"100+\":\n          return project.collaborators.length > 100;\n        default:\n          return true;\n      }\n    });\n  }\n  if (filters.tags.length > 0) {\n    filtered = filtered.filter((project) =>\n      filters.tags.every((tag) => project.tags.includes(tag))\n    );\n  }\n  return filtered;\n}, [filters, projects]);\nconst tagFilters = useMemo(() => {\n  let tags = (projects || []).map((project) => project.tags).flat();\n  tags = [...new Set(tags)];\n  return tags;\n}, [projects]);\nconst Heading = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  @media screen and (max-width: 500px) {\n    h2 {\n      font-size: 32px !important;\n    }\n  }\n  h2 {\n    color: var(--FFFFFF, #fff);\n    font-family: Poppins, sans-serif;\n    font-size: 40px;\n    line-height: 120%; /* 48px */\n    letter-spacing: -1.6px;\n    margin: 0;\n  }\n  p {\n    color: #e8e8e8;\n    font-family: Poppins, sans-serif;\n    font-size: 18px;\n    margin: 0;\n    max-width: 490px;\n  }\n`;\nconst [view, setStateView] = useState(\n  Storage.get(\"builddao.near:projects-view\") ?? \"grid\"\n);\nconst setView = (v) => {\n  setStateView(v);\n  Storage.set(\"builddao.near:projects-view\", v);\n};\nreturn (\n  <Wrapper\n    className=\"container-xl mx-auto d-flex flex-column gap-5\"\n    data-bs-theme=\"dark\"\n  >\n    <Widget\n      src=\"builddao.near/widget/page.project.QuickView\"\n      loading=\"\"\n      props={{\n        showCanvas: !!showQuickViewProjectData,\n        project: showQuickViewProjectData,\n        onClose: () => setShowQuickView(null),\n      }}\n    />\n    <Widget\n      src=\"builddao.near/widget/page.projects.FiltersModal\"\n      loading=\"\"\n      props={{\n        showModal: showFilterModal,\n        toggleModal: toggleFilterModal,\n        filters: filters,\n        setFilters: setFilters,\n        tagFilters,\n      }}\n    />\n    <Widget\n      src=\"builddao.near/widget/page.projects.ImportAndCreateModal\"\n      loading=\"\"\n      props={{\n        showModal: showCreateOptionsModal,\n        toggleModal: toggleCreateOptionsModal,\n      }}\n    />\n    <Heading>\n      <div className=\"d-flex align-items-center justify-content-between\">\n        <h2>{heading ?? \"Projects\"}</h2>\n        <div className=\"d-flex align-items-center gap-2\">\n          {showCreateProject && context.accountId && (\n            <Button\n              variant=\"primary\"\n              onClick={() => setShowCreateOptionsModal(true)}\n            >\n              Create Project\n            </Button>\n          )}\n          {/*\n            Commenting out until roles feature is included\n           {showOpenRoles && <Button>Open Roles</Button>}\n           */}\n        </div>\n      </div>\n      <p>{description}</p>\n    </Heading>\n    <div className=\"d-flex flex-column gap-3\">\n      {subheading && <Subheading>{subheading}</Subheading>}\n      <div className=\"form-group d-flex gap-4 align-items-center justify-content-between\">\n        <div className=\"input-group\">\n          <div\n            className=\"input-group-text border-0\"\n            style={{ backgroundColor: \"#23242b\", color: \"#B0B0B0\" }}\n          >\n            <i className=\"bi bi-search\"></i>\n          </div>\n          <input\n            className=\"form-control border-0\"\n            style={{ backgroundColor: \"#23242b\" }}\n            placeholder=\"Search by project ID or name\"\n            value={filters.title}\n            onChange={(e) => setFilters({ ...filters, title: e.target.value })}\n          />\n        </div>\n        <div className=\"d-flex align-items-center gap-3\">\n          <Button\n            className=\"d-flex align-items-center gap-2\"\n            variant=\"outline\"\n            onClick={() => setShowFilterModal(true)}\n          >\n            Filter <i className=\"bi bi-sliders\"></i>\n          </Button>\n          <div className=\"d-flex align-items-center gap-2\">\n            <Button\n              data-testid=\"grid-layout-button\"\n              type=\"icon\"\n              className=\"rounded-2\"\n              variant={view === \"grid\" ? \"primary\" : null}\n              onClick={() => setView(\"grid\")}\n            >\n              <i className=\"bi bi-grid\"></i>\n            </Button>\n            <Button\n              data-testid=\"list-layout-button\"\n              type=\"icon\"\n              className=\"rounded-2\"\n              variant={view === \"list\" ? \"primary\" : null}\n              onClick={() => setView(\"list\")}\n            >\n              <i className=\"bi bi-list-ul\"></i>\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n    {filteredProjects && filteredProjects.length > 0 ? (\n      <>\n        {view === \"grid\" ? (\n          <Container>\n            {filteredProjects.map((project) => (\n              <ProjectCardWrapper project={project}>\n                <ProjectCard\n                  data={project}\n                  variant=\"grid\"\n                  showEditProjectAction={showEditProjectAction}\n                />\n              </ProjectCardWrapper>\n            ))}\n          </Container>\n        ) : (\n          <div className=\"d-flex flex-column gap-3\">\n            {filteredProjects.map((project) => (\n              <ProjectCardWrapper project={project}>\n                <ProjectCard\n                  data={project}\n                  variant=\"list\"\n                  showEditProjectAction={showEditProjectAction}\n                />\n              </ProjectCardWrapper>\n            ))}\n          </div>\n        )}\n      </>\n    ) : (\n      <p className=\"fw-bold text-white\">No Projects Found</p>\n    )}\n  </Wrapper>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/builddao.near/widget/page.projects.MainViewContainer", "fact_widget_deployments_id": "3d728b647abf980eea4ac94f6df4c8fc", "inserted_timestamp": "2024-06-16T16:54:00.570Z", "modified_timestamp": "2024-06-16T16:54:00.570Z", "__row_index": 2}