{"tx_hash": "784SHXHYUMV63XsBdR6EbEbPsPahM5qwoteEc3oMExK4", "action_id_social": "HmbqDFt2iJKZsEJhZ324baMEtKUgEdvQ6hCekxzi11Z4-0-widget", "block_id": 121157771, "block_timestamp": "2024-06-14T16:36:18.780Z", "signer_id": "builddao.near", "widget_name": "components.project.StarProject", "source_code": "const { Button } = VM.require(\"buildhub.near/widget/components\") || {\n  Button: () => <></>,\n};\nconst item = props.item;\nif (!item) {\n  return \"\";\n}\nuseEffect(() => {\n  State.update({ hasStar: null });\n}, [item]);\nconst stars = Social.index(\"star\", item);\nconst dataLoading = stars === null;\nconst starsByUsers = {};\n(stars || []).forEach((star) => {\n  if (star.value.type === \"star\") {\n    starsByUsers[star.accountId] = star;\n  } else if (star.value.type === \"unstar\") {\n    delete starsByUsers[star.accountId];\n  }\n});\nif (state.hasStar === true) {\n  starsByUsers[context.accountId] = {\n    accountId: context.accountId,\n  };\n} else if (state.hasStar === false) {\n  delete starsByUsers[context.accountId];\n}\nconst accountsWithStars = Object.keys(starsByUsers);\nconst hasStar = context.accountId && !!starsByUsers[context.accountId];\nconst starClick = (event) => {\n  event.stopPropagation();\n  event.preventDefault();\n  if (state.loading || dataLoading || !context.accountId) {\n    return;\n  }\n  State.update({\n    loading: true,\n  });\n  const type = hasStar ? \"unstar\" : \"star\";\n  const data = {\n    index: {\n      star: JSON.stringify({\n        key: item,\n        value: {\n          type,\n        },\n      }),\n    },\n  };\n  if (item.type === \"social\" && typeof item.path === \"string\") {\n    const keys = item.path.split(\"/\");\n    if (keys.length > 0) {\n      data.graph = {\n        star: {},\n      };\n      let root = data.graph.star;\n      keys.slice(0, -1).forEach((key) => {\n        root = root[key] = {};\n      });\n      root[keys[keys.length - 1]] = hasStar ? null : \"\";\n    }\n  }\n  if (!hasStar && props.notifyAccountId) {\n    data.index.notify = JSON.stringify({\n      key: props.notifyAccountId,\n      value: {\n        type,\n        item,\n      },\n    });\n  }\n  Social.set(data, {\n    onCommit: () => State.update({ loading: false, hasStar: !hasStar }),\n    onCancel: () => State.update({ loading: false }),\n  });\n};\nconst title = hasStar\n  ? props.titleUnstar ?? \"Unstar\"\n  : props.titleStar ?? \"Star\";\nconst inner = (\n  <div className=\"d-inline-flex align-items-center\">\n    <Button\n      disabled={state.loading || dataLoading || !context.accountId}\n      title={!props.tooltip ? title : undefined}\n      onClick={starClick}\n      className={\"rounded-2\"}\n      variant={hasStar ? \"primary\" : \"outline\"}\n      type={\"icon\"}\n    >\n      <i className={`bi ${hasStar ? \"bi-star-fill\" : \"bi-star\"}`}></i>\n    </Button>\n  </div>\n);\nreturn props.tooltip ? (\n  <OverlayTrigger\n    placement={props.overlayPlacement ?? \"auto\"}\n    overlay={<Tooltip>{title}</Tooltip>}\n  >\n    {inner}\n  </OverlayTrigger>\n) : (\n  inner\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/builddao.near/widget/components.project.StarProject", "fact_widget_deployments_id": "d02c3194bb5267046e09386f996d7dfb", "inserted_timestamp": "2024-06-14T17:55:46.860Z", "modified_timestamp": "2024-06-14T17:55:46.860Z", "__row_index": 0}