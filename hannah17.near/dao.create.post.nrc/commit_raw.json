{"tx_hash": "BmWusRmKpNdpxjFJjUnRx6M6hYR3ZvbeLaBB3an6ajam", "action_id_social": "2jy7iMPBvy5uQ3S1zpKNUzT9xCk7ESLzipVDffXUfTwv-0-widget", "block_id": 116048637, "block_timestamp": "2024-04-03T12:47:35.324Z", "signer_id": "hannah17.near", "widget_name": "dao.create.post.nrc", "source_code": "const accountId = props.accountId ?? context.accountId;\r\nconst daoId = \"dao-ashe.sputnik-dao.near\";\r\n\r\nlet profile = Social.getr(`${daoId}/profile`);\r\n\r\nif (profile === null) {\r\n  return \"Loading...\";\r\n}\r\ng;\r\nState.init({\r\n  image: {},\r\n  text: \"\",\r\n  showPreview: false,\r\n});\r\n\r\nconst content = {\r\n  type: \"md\",\r\n  image: state.image.cid ? { ipfs_cid: state.image.cid } : undefined,\r\n  text: state.text,\r\n};\r\n\r\nconst policy = Near.view(daoId, \"get_policy\");\r\n\r\nif (policy === null) {\r\n  return \"Loading...\";\r\n}\r\n\r\nconst deposit = policy.proposal_bond;\r\n\r\nconst post_args = JSON.stringify({\r\n  data: {\r\n    [daoId]: {\r\n      post: {\r\n        main: JSON.stringify(content),\r\n      },\r\n      index: {\r\n        post: JSON.stringify({\r\n          key: \"main\",\r\n          value: {\r\n            type: \"md\",\r\n          },\r\n        }),\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nconst proposal_args = Buffer.from(post_args, \"utf-8\").toString(\"base64\");\r\n\r\nconst handleProposal = () => {\r\n  Near.call([\r\n    {\r\n      contractName: daoId,\r\n      methodName: \"add_proposal\",\r\n      args: {\r\n        proposal: {\r\n          description: \"create DAO post on NEAR Social\",\r\n          kind: {\r\n            FunctionCall: {\r\n              receiver_id: \"social.near\",\r\n              actions: [\r\n                {\r\n                  method_name: \"set\",\r\n                  args: proposal_args,\r\n                  deposit: \"100000000000000000000000\",\r\n                  gas: \"219000000000000\",\r\n                },\r\n              ],\r\n            },\r\n          },\r\n        },\r\n      },\r\n      deposit: deposit,\r\n      gas: \"219000000000000\",\r\n    },\r\n  ]);\r\n};\r\n\r\nconst Wrapper = styled.div`\r\n  --padding: 24px;\r\n  position: relative;\r\n\r\n  @media (max-width: 1200px) {\r\n    --padding: 12px;\r\n  }\r\n`;\r\n\r\nconst Avatar = styled.div`\r\n  width: 40px;\r\n  height: 40px;\r\n  pointer-events: none;\r\n  position: absolute;\r\n  top: var(--padding);\r\n  left: var(--padding);\r\n\r\n  img {\r\n    object-fit: cover;\r\n    border-radius: 40px;\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n\r\n  @media (max-width: 992px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst Textarea = styled.div`\r\n  display: grid;\r\n  vertical-align: top;\r\n  align-items: center;\r\n  position: relative;\r\n  align-items: stretch;\r\n\r\n  &::after,\r\n  textarea {\r\n    width: 100%;\r\n    min-width: 1em;\r\n    height: unset;\r\n    min-height: 164px;\r\n    font: inherit;\r\n    padding: var(--padding) var(--padding) calc(40px + (var(--padding) * 2))\r\n      calc(40px + (var(--padding) * 2));\r\n    margin: 0;\r\n    resize: none;\r\n    background: none;\r\n    appearance: none;\r\n    border: none;\r\n    grid-area: 1 / 1;\r\n    overflow: hidden;\r\n    outline: none;\r\n\r\n    @media (max-width: 1200px) {\r\n      min-height: 124px;\r\n    }\r\n\r\n    @media (max-width: 992px) {\r\n      padding-left: var(--padding);\r\n    }\r\n  }\r\n\r\n  &::after {\r\n    content: attr(data-value) \" \";\r\n    visibility: hidden;\r\n    white-space: pre-wrap;\r\n  }\r\n\r\n  textarea {\r\n    transition: all 200ms;\r\n\r\n    &::placeholder {\r\n      opacity: 1;\r\n      color: #687076;\r\n    }\r\n\r\n    &:empty + p {\r\n      display: block;\r\n    }\r\n\r\n    &:focus {\r\n      box-shadow: inset 0 0 30px rgba(0, 0, 0, 0.05);\r\n    }\r\n  }\r\n`;\r\n\r\nconst TextareaDescription = styled.p`\r\n  position: absolute;\r\n  top: calc(var(--padding) + 24px);\r\n  left: calc(42px + (var(--padding) * 2));\r\n  right: var(--padding);\r\n  font-size: 10px;\r\n  line-height: 18px;\r\n  font-weight: 400;\r\n  color: #687076;\r\n  pointer-events: none;\r\n  display: none;\r\n\r\n  a {\r\n    color: #000;\r\n    outline: none;\r\n    font-weight: 600;\r\n    pointer-events: auto;\r\n\r\n    &:hover,\r\n    &:focus {\r\n      color: #000;\r\n      text-decoration: underline;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 992px) {\r\n    left: var(--padding);\r\n  }\r\n`;\r\n\r\nconst Actions = styled.div`\r\n  display: inline-flex;\r\n  gap: 12px;\r\n  position: absolute;\r\n  bottom: var(--padding);\r\n  right: var(--padding);\r\n\r\n  .commit-post-button,\r\n  .preview-post-button {\r\n    background: #59e692;\r\n    color: #09342e;\r\n    border-radius: 40px;\r\n    height: 40px;\r\n    padding: 0 35px;\r\n    font-weight: 600;\r\n    font-size: 14px;\r\n    border: none;\r\n    cursor: pointer;\r\n    transition: background 200ms, opacity 200ms;\r\n\r\n    &:hover,\r\n    &:focus {\r\n      background: rgb(112 242 164);\r\n      outline: none;\r\n    }\r\n\r\n    &:disabled {\r\n      opacity: 0.5;\r\n      pointer-events: none;\r\n    }\r\n  }\r\n\r\n  .preview-post-button {\r\n    color: #11181c;\r\n    background: #f1f3f5;\r\n    padding: 0;\r\n    width: 40px;\r\n\r\n    &:hover,\r\n    &:focus {\r\n      background: #d7dbde;\r\n      outline: none;\r\n    }\r\n  }\r\n\r\n  .upload-image-button {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    background: #f1f3f5;\r\n    color: #11181c;\r\n    border-radius: 40px;\r\n    height: 40px;\r\n    min-width: 40px;\r\n    font-size: 0;\r\n    border: none;\r\n    cursor: pointer;\r\n    transition: background 200ms, opacity 200ms;\r\n\r\n    &::before {\r\n      font-size: 16px;\r\n    }\r\n\r\n    &:hover,\r\n    &:focus {\r\n      background: #d7dbde;\r\n      outline: none;\r\n    }\r\n\r\n    &:disabled {\r\n      opacity: 0.5;\r\n      pointer-events: none;\r\n    }\r\n\r\n    span {\r\n      margin-left: 12px;\r\n    }\r\n  }\r\n\r\n  .d-inline-block {\r\n    display: flex !important;\r\n    gap: 12px;\r\n    margin: 0 !important;\r\n\r\n    .overflow-hidden {\r\n      width: 40px !important;\r\n      height: 40px !important;\r\n    }\r\n  }\r\n`;\r\n\r\nconst PreviewWrapper = styled.div`\r\n  position: relative;\r\n  padding: var(--padding);\r\n  padding-bottom: calc(40px + (var(--padding) * 2));\r\n`;\r\n\r\nfunction textareaInputHandler(value) {\r\n  State.update({ text: value });\r\n}\r\n\r\nreturn (\r\n  <Wrapper>\r\n    {state.showPreview ? (\r\n      <PreviewWrapper>\r\n        <Widget\r\n          src=\"near/widget/Posts.Post\"\r\n          props={{\r\n            accountId: daoId,\r\n            blockHeight: \"now\",\r\n            content,\r\n          }}\r\n        />\r\n      </PreviewWrapper>\r\n    ) : (\r\n      <>\r\n        <Avatar>\r\n          <Widget\r\n            src=\"mob.near/widget/Image\"\r\n            props={{\r\n              image: profile.image,\r\n              alt: profile.name,\r\n              fallbackUrl:\r\n                \"https://ipfs.near.social/ipfs/bafkreibiyqabm3kl24gcb2oegb7pmwdi6wwrpui62iwb44l7uomnn3lhbi\",\r\n            }}\r\n          />\r\n        </Avatar>\r\n\r\n        <Textarea data-value={state.text}>\r\n          <textarea\r\n            placeholder=\"content goes here\"\r\n            onInput={(event) => textareaInputHandler(event.target.value)}\r\n            value={state.text}\r\n          />\r\n\r\n          <TextareaDescription>\r\n            <a\r\n              href=\"https://www.markdownguide.org/basic-syntax\"\r\n              target=\"_blank\"\r\n            >\r\n              markdown\r\n            </a>\r\n            supported\r\n          </TextareaDescription>\r\n        </Textarea>\r\n      </>\r\n    )}\r\n\r\n    <Actions>\r\n      {!state.showPreview && (\r\n        <IpfsImageUpload\r\n          image={state.image}\r\n          className=\"upload-image-button bi bi-image\"\r\n        />\r\n      )}\r\n\r\n      <button\r\n        type=\"button\"\r\n        disabled={!state.text}\r\n        className=\"preview-post-button\"\r\n        title={state.showPreview ? \"Edit Post\" : \"Preview Post\"}\r\n        onClick={() => State.update({ showPreview: !state.showPreview })}\r\n      >\r\n        {state.showPreview ? (\r\n          <i className=\"bi bi-pencil\" />\r\n        ) : (\r\n          <i className=\"bi bi-eye-fill\" />\r\n        )}\r\n      </button>\r\n\r\n      <button\r\n        className=\"btn btn-outline-success m-1\"\r\n        onClick={handleProposal}\r\n        disabled={!state.text}\r\n      >\r\n        submit\r\n      </button>\r\n    </Actions>\r\n  </Wrapper>\r\n);\r\nlol;\r\n", "metadata": {"fork_of": "chloe.near/widget/dao.create.post.nrc@100556167"}, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/hannah17.near/widget/dao.create.post.nrc", "fact_widget_deployments_id": "4d16fa71f1dcb8ec625cff34b6661d64", "inserted_timestamp": "2024-04-03T14:38:26.149Z", "modified_timestamp": "2024-04-03T14:38:26.149Z", "__row_index": 2}