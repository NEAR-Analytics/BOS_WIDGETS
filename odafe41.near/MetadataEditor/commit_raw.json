{"tx_hash": "AJMwCRfjAEdz8wEY4afN3sPMmRFjwvg5E31mzN1qAEVM", "action_id_social": "4z2gZLrDQ7c4zzPWi6SxUfwj9wtJXCxup72CqVhsubhS-0-widget", "block_id": 103457577, "block_timestamp": "2023-10-15T20:16:22.503Z", "signer_id": "odafe41.near", "widget_name": "MetadataEditor", "source_code": "const initialMetadata = props.initialMetadata ?? {};\nconst onChange = props.onChange;\nconst options = props.options;\n\nState.init({\n  initialMetadata,\n  metadata: initialMetadata,\n  reportedMetadata: initialMetadata,\n  image: initialMetadata.image,\n  bookFile: initialMetadata.bookFile,\n  author: initialMetadata.author,\n  published: initialMetadata.published,\n});\n\nconst metadata = {\n  name: options.name ? state.metadata.name : undefined,\n  description: options.name ? state.metadata.description : undefined,\n  image:\n    options.image && state.image && Object.keys(state.image).length > 0\n      ? state.image\n      : undefined,\n  bookFile:\n    options.bookFile && state.bookFile && Object.keys(state.bookFile).length > 0\n      ? state.bookFile\n      : undefined,\n  tags: options.tags ? state.metadata.tags : undefined,\n};\n\nif (\n  onChange &&\n  JSON.stringify(state.reportedMetadata) !== JSON.stringify(metadata)\n) {\n  State.update({\n    reportedMetadata: metadata,\n  });\n  onChange(metadata);\n}\n\nconst debounce = (func, wait) => {\n  const pause = wait || 350;\n  let timeout;\n\n  return (args) => {\n    const later = () => {\n      clearTimeout(timeout);\n      func(args);\n    };\n\n    clearTimeout(timeout);\n    timeout = setTimeout(later, pause);\n  };\n};\n\nconst onNameChange = debounce((e) => {\n  State.update({\n    metadata: {\n      ...state.metadata,\n      name: e.target.value,\n    },\n  });\n});\n\nconst onAuthorChange = debounce((e) => {\n  State.update({\n    metadata: {\n      ...state.metadata,\n      author: e.target.value,\n    },\n  });\n});\n\nconst onPublishedChange = debounce((e) => {\n  State.update({\n    metadata: {\n      ...state.metadata,\n      published: e.target.value,\n    },\n  });\n});\n\nconst onDescriptionChange = debounce((e) => {\n  State.update({\n    metadata: {\n      ...state.metadata,\n      description: e.target.value,\n    },\n  });\n});\n\nreturn (\n  <>\n    {options.name && (\n      <div className=\"mb-2\">\n        {options.name.label ?? \"Name\"}\n        <input\n          type=\"text\"\n          defaultValue={state.metadata.name}\n          onChange={onNameChange}\n        />\n      </div>\n    )}\n    {options.image && (\n      <div className=\"mb-2\">\n        {options.image.label ?? \"Image\"}\n        <Widget\n          src=\"near/widget/ImageEditorTabs\"\n          props={{\n            image: state.image,\n            onChange: (image) => State.update({ image }),\n          }}\n        />\n      </div>\n    )}\n    {options.bookFile && (\n      <div className=\"mb-2\">\n        {options.bookFile.label ?? \"Book File\"}\n        <Widget\n          src=\"near/widget/ImageEditorTabs\"\n          props={{\n            image: state.bookFile,\n            onChange: (bookFile) => State.update({ bookFile }),\n            debounce,\n          }}\n        />\n      </div>\n    )}\n    {options.description && (\n      <div className=\"mb-2\">\n        {options.description.label ?? \"Description\"}\n        <span className=\"text-secondary\"> (supports markdown)</span>\n        <textarea\n          className=\"form-control\"\n          rows={5}\n          defaultValue={state.metadata.description}\n          onChange={onDescriptionChange}\n        />\n      </div>\n    )}\n\n    {options.author && (\n      <div className=\"mb-2\">\n        {options.author.label ?? \"Author\"}\n        <input\n          type=\"text\"\n          defaultValue={state.metadata.author}\n          onChange={onAuthorChange}\n        />\n      </div>\n    )}\n\n    {options.published && (\n      <div className=\"mb-2\">\n        {options.published.label ?? \"Published\"}\n        <input\n          type=\"number\"\n          defaultValue={state.metadata.published}\n          onChange={onPublishedChange}\n        />\n      </div>\n    )}\n\n    {options.tags && (\n      <div className=\"mb-2\">\n        {options.tags.label ?? \"Tags\"}\n        <Widget\n          src=\"mob.near/widget/TagsEditor\"\n          props={{\n            initialTagsObject: metadata.tags,\n            tagsPattern: options.tags.pattern,\n            placeholder:\n              options.tags.placeholder ??\n              \"rust, engineer, artist, humanguild, nft, learner, founder\",\n            setTagsObject: (tags) => {\n              state.metadata.tags = tags;\n              State.update();\n            },\n          }}\n        />\n      </div>\n    )}\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/odafe41.near/widget/MetadataEditor", "fact_widget_deployments_id": "0d698d62d718f5a1979bcbe04a691e1a", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 8}