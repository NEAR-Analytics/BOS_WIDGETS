{"tx_hash": "9ASZ76o7q9WGG876cF9EvkNY3pTLExW8FtEih75xnB22", "action_id_social": "EfbtXDDHbPue927eQXruFmwmW3RoDKZSEqiYGvL7nz8d-0-widget", "block_id": 114876138, "block_timestamp": "2024-03-17T07:18:07.688Z", "signer_id": "public-degens.near", "widget_name": "Contests", "source_code": "const tasks = [\n  {\n    category: \"twitter\",\n    header: \"Create Twitter Thread\",\n    created: \"15.01.2024\",\n    budget: 700,\n    text: \"Spread the word about NEAR on Twitter! Please make sure that you have read the rules. Only unique Twitter threads created on a specific topic are allowed to be evaluated. If you have created multiple threads, fill out the form for each individual post. Max 3 threads from one member. Thank you and good luck \u2764\ufe0f\",\n    url: \"https://public-degens-home.super.site/twitter\",\n  },\n  {\n    category: \"reddit\",\n    header: \"Create Reddit Post\",\n    created: \"15.01.2024\",\n    budget: 400,\n    text: \"Create a post about Near Protocol on the specified subreddits. Avoid simple references to Near (example: Why Near the best?). Create engaging development content that will attract new members to the ecosystem. 3 posts from one member. Good luck \u2764\ufe0f\",\n    url: \"https://public-degens-home.super.site/reddit\",\n  },\n  {\n    category: \"articles\",\n    header: \"Create Article\",\n    created: \"15.01.2024\",\n    budget: 800,\n    text: \"Show your creative skills in creating articles! Please make sure that you have read the rules. Only unique articles created on a specific topic are allowed to be evaluated. Max one from one member. Thank you and good luck \u2764\ufe0f\",\n    url: \"https://public-degens-home.super.site/articles\",\n  },\n  {\n    category: \"video\",\n    header: \"Create Video Content\",\n    created: \"15.01.2024\",\n    budget: 800,\n    text: \"Create a video about Near Protocol. We welcome content about technology! Please make sure that you have read the rules. Only unique video created on a specific topic are allowed to be evaluated. Max one video from one member. Thank you and good luck \u2764\ufe0f\",\n    url: \"https://public-degens-home.super.site/video\",\n  },\n  {\n    category: \"memes\",\n    header: \"Create Meme\",\n    created: \"15.01.2024\",\n    budget: 300,\n    text: \"Create a meme about Near Protocol/NDC. A meme shouldn't be offensive, just a fan. Max 3 memes from one member. Thank you and good luck \u2764\ufe0f\",\n    url: \"https://public-degens-home.super.site/memes\",\n  },\n];\n\n//******************************************************************************* */\n\nconst contractId = \"public-degens.near\";\nconst { accountId } = context;\nState.init({ was: false });\nconst Welcome = styled.div`\n  margin-top:50px;  \n`;\nconst Button = styled.button`\n  margin-top:30px;  \n  width:150px;\n  display: \"flex\";\n  gap: 0.5rem;\n  border-radius: 4px;\n  border: 1px solid rgb(68, 152, 224);\n  font-size: ${fontSize ? fontSize : \"1.1rem\"};\n  background-color: ${secondary ? \"#ddd\" : \"rgb(68, 152, 224)\"};\n  color: ${secondary ? \"#000\" : \"#fff\"};\n  padding: 0.3rem 0.8rem;\n  font-weight: ${fontWeight ? fontWeight : \"400\"};\n  &:hover {opacity: 0.85;}\n`;\nNear.asyncView(contractId, \"was\", { account_id: accountId })\n  .then((was) => {\n    State.update({ was });\n  })\n  .catch((err) => {\n    console.log(err);\n    State.update({ error: err });\n  });\nconst register = () => {\n  return Near.call(contractId, \"start\", {});\n};\n\nif (!state.was) {\n  if (state.error) return <Welcome>state.error</Welcome>;\n  return (\n    <Welcome>\n      <h2>Welcome to Public Degens!</h2>\n      <br />\n      <div>\n        <p>\n          You can get involved in the Near Ecosystem development initiative\n          right now.\n        </p>\n        <p>\n          Click the button and choose a task that suits you. Make sure to read\n          the rules, good luck \u2764\ufe0f\n        </p>\n      </div>\n      <Button onClick={register} className={\"\"}>\n        Start\n      </Button>\n    </Welcome>\n  );\n}\n\nconst Card = styled.div`\n  display:flex; flex-direction:column; align-items:stretch; font-size: 1.1rem;  border-radius: 1rem; \n  background-color: \"lightblue !important\"; &:hover {background-color: #d3ecf4;}\n`;\nconst CardHeader = styled.div`\n  display:flex; align-items:center;\n  img {border-radius:0.3rem; width:4rem; height:4rem; margin:0.6rem;}\n  h3 {flex: 1 1 auto;}\n  svg {width:3rem; height:3rem; cursor:pointer; margin-right:1rem; &:hover {color: blue;}}\n  &:last-child {flex: 1 1 auto;}\n`;\nconst CardContent = styled.div`\n  display:flex; flex-direction:column; flex: 1 1 auto;\n  padding:0.6rem; align-items:stretch; flex-wrap: wrap; gap: 0.4rem;\n  h3 {width:100%; font-size:1.4rem; font-weight:600; text-align:center;}\n`;\nconst List = styled.div`\n  display: flex; flex-direction: column; align-items: stretch; padding: 0.4rem 2rem; gap: 0.4rem;\n`;\nconst Row = styled.div`\n  display: flex; align-items: center;\n  &:not(:last-child) {border-bottom: 1px dashed darkgrey;}\n  > *:not(img) { flex: 1 1 12rem; padding: 0.2rem 0.4rem; }\n  img {width: 2rem; height: 2rem;}\n  svg {width: 1.4rem;height: 1.4rem;}\n  .balance {text-align: right;}\n  .symbol {min-width: 5rem;max-width: 5rem;text-overflow: ellipsis;overflow: hidden;}\n`;\nconst Page = styled.div`\n  display: flex; flex-direction: column; gap: 1rem; align-items: stretch; max-width: 50rem; margin: 0 auto 2rem;\n  &::before {    \n    background-image: url(\"https://arweave.net/qOfmpZZNqQ0bHBJ4UTgPC_pjvs1oYOjTAVwfxD8fd2o\");\n    content: \"\"; background-attachment: fixed; background-size: contain;\n    position: absolute; top: 0px; right: 0px; bottom: 0px; left: 0px; opacity: 0.6; z-index: -1;\n  }\n`;\nconst Category = styled.div`\n  font-style: italic; font-size: 1.1rem; margin: 0 1rem; display: flex;\n  flex-direction: column; align-items: center;\n`;\nconst Header = styled.h1`\n  margin-bottom: 0.5rem; text-align: center; padding: 1rem; font-weight: 600;\n`;\nconst Content = styled.div`\n  display: flex; flex-direction: column; gap: 1.5rem; align-items: stretch;\n`;\nconst showTasks = () => (\n  <Content>\n    <List>\n      {tasks\n        .filter((e) => e.category === state.selected)\n        .map((task, index) => {\n          return (\n            <Row key={task}>\n              <div>\n                <CardHeader>\n                  <a href={task.url} target=\"_blank\" rel=\"noreferrer noopener\">\n                    {task.header}\n                    <svg viewBox=\"0 0 24 24\">\n                      <path\n                        fill=\"currentColor\"\n                        d=\"M14,3V5H17.59L7.76,14.83L9.17,16.24L19,6.41V10H21V3M19,19H5V5H12V3H5C3.89,3 3,3.9 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V12H19V19Z\"\n                      ></path>\n                    </svg>\n                  </a>\n                </CardHeader>\n                <p>Created: {task.created}</p>\n                <CardContent>{task.text}</CardContent>\n                <p>Budget: {task.budget || 0}$</p>\n              </div>\n            </Row>\n          );\n        })}\n    </List>\n  </Content>\n);\nconst selectCategory = (event) => {\n  State.update({ selected: event.target.value });\n};\nState.init({ selected: state.selected ?? \"articles\" });\nreturn (\n  <Page>\n    <Header>Public Degens</Header>\n    <h4>\u2705Stage 1 is completed. The results will be published on March 18</h4>\n    <Category>\n      <span>Select category</span>\n    </Category>\n    <select onChange={selectCategory}>\n      <option\n        value=\"Select a task\"\n        selected={state.selected === \"Select a task\"}\n      >\n        Select a task\n      </option>\n      <option value=\"twitter\" selected={state.selected === \"twitter\"}>\n        Twitter\n      </option>\n      <option value=\"reddit\" selected={state.selected === \"reddit\"}>\n        Reddit\n      </option>\n      <option value=\"articles\" selected={state.selected === \"articles\"}>\n        Articles\n      </option>\n      <option value=\"video\" selected={state.selected === \"video\"}>\n        Video\n      </option>\n      <option value=\"memes\" selected={state.selected === \"memes\"}>\n        Memes\n      </option>\n    </select>\n    {showTasks()}\n  </Page>\n);\n", "metadata": {"fork_of": "public-degens.near/widget/Contests@110471406"}, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/public-degens.near/widget/Contests", "fact_widget_deployments_id": "232551a79584af8c95aea583cbabdc6a", "inserted_timestamp": "2024-03-17T08:25:25.962Z", "modified_timestamp": "2024-03-17T09:32:07.887Z", "__row_index": 2}