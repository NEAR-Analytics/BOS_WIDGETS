{"tx_hash": "2g1ZtEtRsSTrdbR2d9DyjKcvUtV4BK9p4wLfqMhe7ZCQ", "action_id_social": "HDrLCFYHiNkZowjtKph9dTZEjwK7FRjTU25EjTwXFfFH-0-widget", "block_id": 114459022, "block_timestamp": "2024-03-10T13:32:23.086Z", "signer_id": "armsveshack.near", "widget_name": "Untitled-0", "source_code": "const sender = Ethers.send(\"eth_requestAccounts\", [])[0];\nconst contractAddress = \"0x8030A36c4a063752A0E2Ab9b66410c27E20B153B\";\nconst productName = props.productName.split(\"(\")[0];\nconst [isLoading, setIsLoading] = useState(false);\nconst [transactionHash, setTransactionHash] = useState(null);\nconst message = props.message || `Balance is: `;\nconst unit = props.unit || `ETH`;\nconst [showModal, setShowModal] = useState(false);\nconst [canClose, setCanClose] = useState(false);\n\nif (productName.includes(\"iPhone\")) {\n  props.grams = 20;\n} else if (productName.includes(\"MacBook\") || productName.includes(\"Port\u00e1til\")) {\n  props.grams = 40;\n} else if (productName.includes(\"Bater\u00eda\")) {\n  props.grams = 30;\n} else if (productName.includes(\"iPod\")) {\n  props.grams = 10;\n} else if (productName.includes(\"iWatch\")) {\n  props.grams = 15;\n} else {\n  props.grams = null;\n}\n\nif (!sender) return <Web3Connect connectLabel=\"Connect Wallet\" />;\n\nconst handleSend = async () => {\n  const value = 0.1634578 * 1000000000000000;\n  const valueString = value.toString();\n\n  try {\n    const donation = Ethers.send(\"eth_sendTransaction\", [\n      {\n        \"from\": sender,\n        \"to\": contractAddress,\n        \"value\": valueString\n      }\n    ]);\n\n    setShowModal(true);\n\n    let checkInterval = setInterval(() => {\n      console.log(\"Checking transactionHash\", donation);\n      if (donation !== null) {\n        setTransactionHash(donation);\n        console.log(\"transactionHash is \" + donation);\n        setShowModal(false);\n        clearInterval(checkInterval);\n      }\n    }, 3000);\n\n    /*\n    setTimeout(() => {\n      setTransactionHash(donation);\n      console.log(\"transactionHash is \" + transactionHash);\n      //setShowModal(false);\n    }, 60000);\n\n    setTimeout(() => {\n      console.log(\"Checking transactionHash\", donation);\n    }, 3000);*/\n\n  } catch (error) {\n    console.error('Error:', error);\n  }\n\n}\n\nfunction Modal({ onClose, show, children }) {\n  if (!show) {\n    return <></>;\n  }\n\n  return (\n    <div\n      class=\"modal-backdrop\"\n      style={{\n        position: 'fixed',\n        top: 0,\n        bottom: 0,\n        left: 0,\n        right: 0,\n        backgroundColor: 'rgba(224,224,224,0.3)',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n\n        zIndex: 2\n      }}\n      onClick={() => { onClose(); }}\n    >\n      <div\n        class=\"rounded-2xl px-4 py-4\"\n        style={{\n          width: '40%',\n          minHeight: '80px',\n          padding: '20px',\n          color: '#0047AB',\n          backgroundColor: 'rgba(224,224,224)',\n          borderRadius: '0.45rem',\n          border: '3px solid #66CC99',\n          alignItems: 'center',\n        }}\n        onClick={e => { e.stopPropagation(); }}\n      >\n        <div class=\"rounded-lg bg-lime-300 py-4 px-4 border-2\">\n          {children}\n        </div>\n      </div>\n    </div>\n  )\n}\n\n/*\nuseEffect(() => {\n  if (props.transactionHashes) {\n    setShowModal(true);\n  }\n}, []);\n\nuseEffect(() => {\n  setTransactionHash(props.transactionHashes);\n}, [props.transactionHashes]);\n*/\n\nuseEffect(() => {\n  setTransactionHash(props.transactionHashes);\n}, [props.transactionHashes]);\n\nconst [dots, setDots] = useState('');\n\nuseEffect(() => {\n  const intervalId = setInterval(() => { setDots((prevDots) => (prevDots.length < 3 ? prevDots + '.' : '')); }, 700);\n  return () => clearInterval(intervalId);\n}, []);\n\nconst closeModal = () => {\n  setShowModal(false);\n}\n\nconst prettyAddress = (address) => {\n  const string = address.substring(0, 2) + \"...\" + address.substring(address.length - 4, address.length);\n  return string\n}\n\nif (state.balance === undefined && sender) {\n  Ethers.provider().getBalance(sender).then((balance) => {\n    State.update({ balance: Big(balance).div(Big(10).pow(18)).toFixed(2) });\n  });\n}\n\nif (!state.theme) {\n  State.update({\n    theme: styled.div`\n    font-family: Manrope, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\n    font-weight: bold;\n    background-color: #E0E0E0;\n    color: #0047AB;\n    padding: 10px;\n    border-radius: 0.45rem;\n    border: 3px solid #66CC99;\n  `,\n  });\n}\nconst Theme = state.theme;\n\nconst Navbar = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 10px;\n`;\n\nconst LeftSide = styled.div`\n  display: flex;\n  gap: 10px;\n`;\n\nconst RightSide = styled.div`\n  display: flex;\n  gap: 10px;\n`;\n\nreturn (\n  <Theme>\n    <div class=\"main-container\">\n      <Navbar><img src=\"https://i.ibb.co/VD1Gsd7/motema-banner.png\" alt=\"Motema Banner\"></img></Navbar>\n      <div class=\"header\">\n        <Navbar>\n          <LeftSide>\n            {sender ? (<>{prettyAddress(sender)}</>) : ('')}\n            {message} {state.balance} {unit}\n          </LeftSide>\n          <RightSide>\n            <Web3Connect\n              className=\"styled.div\"\n              connectLabel=\"Connect\"\n              disconnectLabel=\"Disconnect\"\n              connectingLabel=\"Connecting...\"\n            />\n          </RightSide>\n        </Navbar>\n      </div>\n      <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}>\n        {props.grams && productName ? (\n          <>\n            <span>\n              <p>You just purchased {productName} which contains {props.grams} grams of cobalt!</p>\n              <p>Do you want to help reduce the impact of cobalt mining in Democratic Republic of Congo? Donate to the cause!</p>\n              <p>The money will be used to support the local communities and help them to find alternative sources of income.</p>\n              <p>You will contribute with 0.1 ETH</p>\n            </span>\n            <button onClick={handleSend}>Donate</button>\n\n            <Modal show={showModal} onClose={closeModal} >\n              <h1 class=\"text-xl font-bold\">Thank You!</h1>\n              <div class=\"h-2 w-20 bg-slate-700\"></div>\n\n              {!transactionHash ? (\n                <p className=\"font-bold mt-2\">Processing your donation{dots}</p>\n              ) : (\n                <>\n                  <p style={{ whiteSpace: 'nowrap', overflow: 'hidden', textOverflow: 'ellipsis' }}>\n                    Transaction Hash: {transactionHash}\n                    </p>\n                  <a href={`https://sepolia.etherscan.io/tx/${transactionHash}`} target=\"_blank\">\n                    View on Sepolia Explorer\n                  </a>\n                </>\n              )}\n            </Modal>\n          </>\n        ) : (\n          <span>\n            <p>You just purchased {productName}!</p>\n            <p>Your purchase is cobalt free, thank you for caring!</p>\n          </span>\n        )}\n      </div>\n    </div>\n  </Theme>\n);\n", "metadata": {"platform": "jutsu.ai"}, "branch": {"draft": null}, "widget_modules_used": null, "widget_url": "https://near.social/#/armsveshack.near/widget/Untitled-0", "fact_widget_deployments_id": "f721b8586d7b9d6068e2bdf363963b63", "inserted_timestamp": "2024-03-10T14:29:32.355Z", "modified_timestamp": "2024-03-10T15:26:34.158Z", "__row_index": 46}