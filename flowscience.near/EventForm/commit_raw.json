{"tx_hash": "8eCvANVUKRaT2dhSHDkAZtFKo9SqVBDiz6utoNUQGCMd", "action_id_social": "GRQZmeWxsJZFGYKuCgGpcR8SzBXhYfvma2cVr64CpP1e-0-widget", "block_id": 100273857, "block_timestamp": "2023-09-03T03:18:50.737Z", "signer_id": "flowscience.near", "widget_name": "EventForm", "source_code": "const UUID = {\n  generate: (template) => {\n    if (typeof template !== \"string\") {\n      template = \"xxxxxxxx-xxxx-xxxx-yxxx-xxxxxxxxxxxx\";\n    }\n    return template.replace(/[xy]/g, (c) => {\n      var r = (Math.random() * 16) | 0;\n      var v = c === \"x\" ? r : (r & 0x3) | 0x8;\n      return v.toString(16);\n    });\n  },\n};\n\nconst getCurrentDate = () => {\n  const currentDate = new Date();\n\n  const year = currentDate.getFullYear();\n  const month = (currentDate.getMonth() + 1).toString().padStart(2, \"0\"); // Months are 0-indexed\n  const day = currentDate.getDate().toString().padStart(2, \"0\");\n\n  return `${year}-${month}-${day}`;\n};\n\nconst getCurrentTime = () => {\n  const currentDate = new Date();\n\n  const hours = currentDate.getHours().toString().padStart(2, \"0\");\n  const minutes = currentDate.getMinutes().toString().padStart(2, \"0\");\n\n  return `${hours}:${minutes}`;\n};\n\nconst isoTime = (date, time) => {\n  const temp = new Date(`${date} ${time}`);\n  const now = temp.toISOString();\n\n  return now.split(\"T\")[1];\n};\n\nconst isoDate = (date, time) => {\n  const temp = new Date(`${date} ${time}`);\n  const now = temp.toISOString();\n\n  return now.split(\"T\")[0];\n};\n\nconst addEvent = props.addEvent;\n\nlet user_account = context.accountId;\n\nState.init({\n  id: UUID.generate(),\n  title: \"\",\n  description: {\n    content: \"# Describe the impact of your work\",\n  },\n  start: getCurrentDate(),\n  startTime: getCurrentTime(),\n  end: getCurrentDate(),\n  endTime: getCurrentTime(),\n  location: \"\",\n  link: \"\",\n  organizer: user_account,\n  isAllDay: false,\n  category: \"\",\n  logo: null,\n  background: null,\n  tempHash: \"\",\n  hashTags: [],\n});\n\nconst onTitleChange = ({ target }) => {\n  State.update({ title: target.value });\n};\n\nconst onDescriptionChange = (target) => {\n  State.update({ description: target });\n};\n\nconst onStartChange = ({ target }) => {\n  State.update({ start: target.value });\n};\n\nconst onStartTimeChange = ({ target }) => {\n  State.update({ startTime: target.value });\n};\n\nconst onEndChange = ({ target }) => {\n  State.update({ end: target.value });\n};\n\nconst onEndTimeChange = ({ target }) => {\n  State.update({ endTime: target.value });\n};\n\nconst onLocationChange = ({ target }) => {\n  State.update({ location: target.value });\n};\n\nconst onLinkChange = ({ target }) => {\n  State.update({ link: target.value });\n};\n\nconst onOrganizerChange = ({ target }) => {\n  State.update({ organizer: target.value });\n};\n\nconst onCategoryChange = ({ target }) => {\n  State.update({ category: target.value });\n};\n\nconst onIsAllDayChange = () => {\n  State.update({ isAllDay: !state.isAllDay });\n};\n\nconst onLogoChange = (target) => {\n  State.update({ logo: target });\n};\n\nconst onBackgroundChange = (target) => {\n  State.update({ background: target });\n};\n\nconst onTempHashChange = ({ target }) => {\n  State.update({ tempHash: target.value });\n};\n\nconst onHashTagAdd = () => {\n  State.update({ hashTags: [...state.hashTags, state.tempHash] });\n  State.update({ tempHash: \"\" });\n};\n\nconst onHashTagRemove = (target) => {\n  const newTags = state.hashTags.filter((item) => item !== target);\n  State.update({ hashTags: newTags });\n};\n\nconst clearFields = () => {\n  State.update({\n    title: \"\",\n    description: {\n      content: \"# New Hypercert Description\",\n    },\n    start: getCurrentDate(),\n    startTime: getCurrentTime(),\n    end: getCurrentDate(),\n    endTime: getCurrentTime(),\n    location: \"\",\n    link: \"\",\n    organizer: user_account,\n    isAllDay: false,\n    category: \"\",\n    logo: null,\n    background: null,\n    tempHash: \"\",\n    hashTags: [],\n  });\n};\n\nconst handleNewEvent = () => {\n  const newEvent = {\n    data: {\n      title: state.title,\n      description: state.description,\n      start: isoDate(state.start, state.startTime),\n      startTime: isoTime(state.start, state.startTime),\n      end: isoDate(state.end, state.endTime),\n      endTime: isoTime(state.end, state.endTime),\n      location: state.location,\n      link: state.link,\n      organizer: state.organizer,\n      isAllDay: state.isAllDay,\n      category: state.category,\n      logo: state.logo,\n      background: state.background,\n      hashTags: state.hashTags,\n    },\n    template: {\n      src: \"itexpert120-contra.near/widget/EventView\",\n    },\n    type: \"flowscience.near/type/fileformat.hypercert\",\n  };\n\n  addEvent(newEvent);\n  clearFields();\n};\n\nconst EventForm = () => {\n  return (\n    <div className=\"container\">\n      <div>\n        <div className=\"mb-3\">\n          <label class=\"form-label\" for=\"title\">\n            Hypercert Title\n          </label>\n          <input\n            class=\"form-control\"\n            id=\"title\"\n            value={state.title}\n            onChange={onTitleChange}\n            placeholder=\"Enter A Title for Your Hypercert\"\n          />\n        </div>\n        <div className=\"mb-3\">\n          <label class=\"form-label\" for=\"description\">\n            Description of Impact\n          </label>\n          <Widget\n            src=\"efiz.near/widget/every.markdown.create\"\n            props={{\n              data: state.description,\n              onChange: onDescriptionChange,\n              height: \"250px\",\n            }}\n          />\n        </div>\n        <div className=\"row mb-3\">\n          <div className=\"col\">\n            <label for=\"start\">Work Start Date</label>\n            <input\n              class=\"form-control\"\n              id=\"start\"\n              type=\"date\"\n              value={state.start}\n              onChange={onStartChange}\n            />\n          </div>\n          <div className=\"col\">\n            <label for=\"startTime\">Work Start Time</label>\n            <input\n              class=\"form-control\"\n              id=\"startTime\"\n              type=\"time\"\n              value={state.startTime}\n              onChange={onStartTimeChange}\n            />\n          </div>\n        </div>\n        <div className=\"row  mb-3\">\n          <div className=\"col\">\n            <label for=\"end\">Work End Date</label>\n            <input\n              class=\"form-control\"\n              id=\"end\"\n              type=\"date\"\n              value={state.end}\n              onChange={onEndChange}\n            />\n          </div>\n          <div className=\"col\">\n            <label for=\"endTime\">Work End Time</label>\n            <input\n              class=\"form-control\"\n              id=\"endTime\"\n              type=\"time\"\n              value={state.endTime}\n              onChange={onEndTimeChange}\n            />\n          </div>\n        </div>\n        <div className=\"mb-3\">\n          <label class=\"form-label\" for=\"location\">\n            Impact Location\n          </label>\n          <input\n            class=\"form-control\"\n            id=\"location\"\n            value={state.location}\n            onChange={onLocationChange}\n            placeholder=\"Enter Impact Location\"\n          />\n        </div>\n        <div className=\"mb-3\">\n          <label class=\"form-label\" for=\"link\">\n            Proof of Impact Link\n          </label>\n          <input\n            class=\"form-control\"\n            id=\"link\"\n            type=\"url\"\n            value={state.link}\n            onChange={onLinkChange}\n            placeholder=\"Enter URL Here\"\n          />\n        </div>\n        <div className=\"mb-3\">\n          <label class=\"form-label\" for=\"organizer\">\n            Contributor(s)\n          </label>\n          <input\n            class=\"form-control\"\n            id=\"organizer\"\n            value={state.organizer}\n            onChange={onOrganizerChange}\n            placeholder=\"Enter Near Wallet Addresses\"\n          />\n        </div>\n        <div className=\"mb-3\">\n          <div class=\"form-check\">\n            <label class=\"form-check-label\" for=\"isAllDay\">\n              All Day Event\n            </label>\n            <input\n              value={state.isAllDay}\n              checked={state.isAllDay}\n              class=\"form-check-input\"\n              type=\"checkbox\"\n              id=\"isAllDay\"\n              onChange={onIsAllDayChange}\n            />\n          </div>\n        </div>\n        <div className=\"mb-3\">\n          <label class=\"form-label\" for=\"category\">\n            Impact Category\n          </label>\n          <input\n            class=\"form-control\"\n            id=\"category\"\n            value={state.category}\n            onChange={onCategoryChange}\n            placeholder=\"New Event Category\"\n          />\n        </div>\n        <div className=\"mb-3 row \">\n          <div className=\"col\">\n            <label>Logo Image</label>\n            <Widget\n              src=\"near/widget/ImageEditorTabs\"\n              props={{ image: state.logo, onChange: onLogoChange }}\n            />\n          </div>\n          <div className=\"col\">\n            <label>Background Image</label>\n            <Widget\n              src=\"near/widget/ImageEditorTabs\"\n              props={{ image: state.background, onChange: onBackgroundChange }}\n            />\n          </div>\n        </div>\n        <div className=\"mb-3\">\n          <label for=\"hashtags\">\n            <p>\n              Hashtags:{\" \"}\n              {state.hashTags.length !== 0 &&\n                state.hashTags.map((item) => (\n                  <>\n                    <span className=\"badge text-bg-primary\">\n                      {item}{\" \"}\n                      <i\n                        className=\"bi bi-x ms-2 p-1\"\n                        onClick={() => onHashTagRemove(item)}\n                      ></i>\n                    </span>{\" \"}\n                  </>\n                ))}\n            </p>\n          </label>\n          <div className=\"d-flex gap-3\">\n            <input\n              id=\"hashtags\"\n              value={state.tempHash}\n              onChange={onTempHashChange}\n              placeholder=\"New Event Tags\"\n            />\n            <button onClick={onHashTagAdd}>Add</button>\n          </div>\n        </div>\n        <div className=\"mb-3\">\n          <button onClick={handleNewEvent}>Create Hypercert</button>\n          <button onClick={clearFields}>Clear Fields</button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nreturn <EventForm />;\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/flowscience.near/widget/EventForm", "fact_widget_deployments_id": "37f3a3aba73b01d351210075c798cc10", "inserted_timestamp": "2023-09-03T05:20:25.945Z", "modified_timestamp": "2023-09-03T05:20:25.945Z", "__row_index": 0}