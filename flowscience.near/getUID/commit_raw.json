{"tx_hash": "BtiSjAbuFnUXMQ36UhdfvqZ9NEM4sMTf8M2cx4mTV4R4", "action_id_social": "2WUkkvuDHZcrUypiYdkNevmhxK8EeATg9sH2jLUvYpQ9-0-widget", "block_id": 116492255, "block_timestamp": "2024-04-09T21:03:51.436Z", "signer_id": "flowscience.near", "widget_name": "getUID", "source_code": "// These functions use content of an EAS attestation or schema to generate a UID\r\n// Assuming `Attestation` and `SchemaRecord` are defined in your React code\r\n// with the same structure as in your Solidity code\r\n\r\nfunction getAttestationUID(attestation, bump) {\r\n  const hash = ethers.utils.keccak256(\r\n    ethers.utils.solidityPack(\r\n      [\r\n        \"bytes32\",\r\n        \"address\",\r\n        \"address\",\r\n        \"uint256\",\r\n        \"uint256\",\r\n        \"bool\",\r\n        \"bytes32\",\r\n        \"bytes\",\r\n        \"uint32\",\r\n      ],\r\n      [\r\n        attestation.schema,\r\n        attestation.recipient,\r\n        attestation.attester,\r\n        attestation.time,\r\n        attestation.expirationTime,\r\n        attestation.revocable,\r\n        attestation.refUID,\r\n        attestation.data,\r\n        bump,\r\n      ]\r\n    )\r\n  );\r\n  return hash;\r\n}\r\n\r\nfunction getSchemaUID(schemaRecord) {\r\n  const hash = ethers.utils.keccak256(\r\n    ethers.utils.solidityPack(\r\n      [\"bytes32\", \"address\", \"bool\"],\r\n      [schemaRecord.schema, schemaRecord.resolver, schemaRecord.revocable]\r\n    )\r\n  );\r\n  return hash;\r\n}\r\n\r\nreturn { getAttestationUID, getSchemaUID };\r\n", "metadata": {"fork_of": "flowscience.near/widget/generateUID@112350003"}, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/flowscience.near/widget/getUID", "fact_widget_deployments_id": "2322568082266113704867498a8f71eb", "inserted_timestamp": "2024-04-09T22:35:37.986Z", "modified_timestamp": "2024-04-09T22:35:37.986Z", "__row_index": 0}