{"tx_hash": "8q4sUKyk7JDt6TATo3au4wZZGqvmJsu6rfATe1pTZJzW", "action_id_social": "B5C1WzJECjjR5WVizxa7APbtNcWzh552QVojnJf3juKR-0-widget", "block_id": 112634727, "block_timestamp": "2024-02-11T21:08:22.261Z", "signer_id": "flowscience.near", "widget_name": "NAS", "source_code": "const data = props.data || {};\nconst type = props.type || \"\";\nconst attestationType = \"hyperfiles.near/type/attestation\";\nconst [selectedSchema, setSelectedSchema] = useState(\n  props.selectedSchema ?? \"\"\n);\nconst schemaType = props.schemaType || \"hyperfiles.near/type/schema\";\nconst typeSrc = props.typeSrc || \"hyperfiles.near\";\nconst schemaSrc = props.schemaSrc || \"attestations.near\";\nconst defaultView = props.defaultView || \"CREATE_THING\";\n\nif (type !== \"\") {\n  const parts = type.split(\"/\");\n  typeSrc = parts[0];\n}\n\nconst Container = styled.div`\n    display: flex;\n  `;\n\nconst SidePanel = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  padding: 20px;\n  background-color: #b276f4;\n  width: auto;\n  z-index: 50;\n  min-width: 400px;\n`;\n\nconst MainContent = styled.div`\n    display: flex;\n    flex-direction: column;\n    flex-grow: 1;\n  `;\n\nconst FormContainer = styled.div`\n  border: 1px solid #ccc;\n  padding: 20px;\n`;\n\nconst Header = styled.div`\n    display: flex;\n    flex-direction: row;\n    margin-bottom: 20px;\n    gap: 8px;\n    background-color: #b276f4;\n    padding: 30px;\n  `;\n\nconst Footer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  align-self: flex-start;\n  width: 100%;\n`;\n\nconst Button = styled.button`\n  `;\n\nconst LeftPanelItem = styled.div`\n    padding: 8px;\n    background-color: #ccc;\n    color: white;\n    border-radius: 4px;\n  `;\n\nconst Select = styled.select`\n  `;\n\nconst Label = styled.label`\n`;\n\nconst Input = styled.input`\n  `;\n\nconst ModalOverlay = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 100;\n`;\n\nconst ModalContent = styled.div`\n  background-color: white;\n  padding: 20px;\n  border-radius: 4px;\n  min-width: 500px;\n  height: 100%;\n  overflow: scroll;\n`;\n\nconst ModalTitle = styled.h3`\n  margin-bottom: 10px;\n`;\n\nconst Row = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n\nconst CenteredDiv = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  text-align: center;\n`;\n\nState.init({\n  data,\n  config: data,\n  typeSrc,\n  schemaSrc,\n  selectedType: type,\n  selectedSchema: selectedSchema,\n  view: defaultView,\n  preview: \"TEMPLATE\",\n  template,\n  templateVal: template,\n  schemas: {},\n  loading: false,\n});\n\nconst handleSelectedSchemaChange = (newSelectedSchema) => {\n  setSelectedSchema(newSelectedSchema);\n  // Here you would also handle any other logic that needs to occur when the schema changes\n};\n\nreturn (\n  <Container>\n    <SidePanel>\n      <h1>Near Attestation Service (NAS)</h1>\n      <Row style={{ gap: \"8px\", marginBottom: \"16px\" }}>\n        <h2>Make a new</h2>{\" \"}\n        <Select\n          value={state.view}\n          onChange={(e) => State.update({ view: e.target.value })}\n        >\n          <option value=\"CREATE_THING\">attestation</option>\n          <option value=\"CREATE_TYPE\">schema</option>\n        </Select>\n      </Row>\n      {state.view === \"CREATE_THING\" ? (\n        <>\n          <Widget\n            src=\"flowscience.near/widget/SchemaSelector\"\n            onSchemaChange={setSelectedSchema}\n            onSchemaSrcChange={setSchemaSrc}\n            selectedSchema={selectedSchema}\n            onSelectedSchemaChange={handleSelectedSchemaChange}\n          />\n          <FormContainer>\n            <Widget\n              src=\"flowscience.near/widget/attest\"\n              props={{\n                item: {\n                  value: state.data,\n                  selectedSchema: { selectedSchema },\n                },\n                onChange: handleOnChange,\n              }}\n            />\n          </FormContainer>\n          <Footer></Footer>\n        </>\n      ) : (\n        <Widget\n          src=\"flowscience.near/widget/schema.editor\"\n          props={{ schemaSrc: state.schemaSrc }}\n        />\n      )}\n    </SidePanel>\n    <MainContent>\n      {state.view === \"CREATE_THING\" ? (\n        <>\n          <Header>\n            <Row style={{ justifyContent: \"space-between\" }}>\n              <div>\n                <Label>Hyperfile (set of edges)</Label>\n                <Input\n                  value={state.templateVal}\n                  onChange={(e) =>\n                    State.update({ templateVal: e.target.value })\n                  }\n                />\n              </div>\n\n              <Button>\n                <a\n                  className={`btn`}\n                  href={`https://draw.everything.dev/${state.template}`}\n                  target=\"_blank\"\n                >\n                  <span>Open on Canvas</span>\n                </a>\n              </Button>\n            </Row>\n          </Header>\n          {state.preview === \"RAW\" ? (\n            <></>\n          ) : (\n            <Widget\n              src=\"hack.near/widget/graph.view\"\n              props={{\n                accounts: [context.accountId, state.recipientId, state.refUID],\n              }}\n            />\n          )}\n        </>\n      ) : (\n        <></>\n      )}\n    </MainContent>\n  </Container>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/flowscience.near/widget/NAS", "fact_widget_deployments_id": "25a6d5c29e64aa07d5068bc36e3914dc", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 26}