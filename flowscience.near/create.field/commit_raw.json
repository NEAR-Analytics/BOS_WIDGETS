{"tx_hash": "4UNJAZW9ffoDdarkzpGJ7mb2oBRaByxAxcX1Nh48PzaS", "action_id_social": "3oosmEDzyeWZnyfRYbSksADjfAu7BGS914D6JgHKGRa2-0-widget", "block_id": 100039007, "block_timestamp": "2023-08-30T23:54:35.257Z", "signer_id": "flowscience.near", "widget_name": "create.field", "source_code": "const data = props.data || {};\nconst type = props.type || \"\";\nconst typeSrc = props.typeSrc || \"every.near\";\nconst buildEdges = props.buildEdges;\nconst template = props.template || \"\";\nconst thingId = props.thingId;\n//const defaultView = props.defaultView || \"CREATE_THING\";\n\nif (type !== \"\") {\n  const parts = type.split(\"/\");\n  typeSrc = parts[0];\n}\n\nconst Container = styled.div`\n    display: flex;\n  `;\n\nconst SidePanel = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  padding: 20px;\n  background-color: #FAFAFA;\n  width: auto;\n  z-index: 50;\n  min-width: 400px;\n  border: 1px solid;\n  border-radius: 0.5rem;\n  @media (max-width: 768px) {\n        min-width: 100%;  // Take up full width on mobile\n        box-sizing: border-box;  // Ensure padding and borders are included in the width calculation\n}\n`;\n\nconst MainContent = styled.div`\n    display: flex;\n    flex-direction: column;\n    flex-grow: 1;\n  `;\n\nconst FormContainer = styled.div`\n  border: 1px solid #ccc;\n  border-radius: 0.25rem;\n  padding: 20px;\n`;\n\nconst Header = styled.div`\n    display: flex;\n    flex-direction: row;\n    margin-bottom: 20px;\n    gap: 8px;\n    background-color: #f2f2f2;\n    padding: 30px;\n  `;\n\nconst Footer = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 10px;\n  align-self: flex-start;\n  width: 100%;\n`;\n\nconst Button = styled.button`\n  background-color:#4472c4;\n  color: white;\n  border: 1px solid #ccc;\n  border-radius: 0.25rem;\n  width: 100px;  // specific width\n  `;\n\nconst SecondaryButton = styled.button`\n  border-radius: 0.25rem;\n  width: 100px;  // specific width\n  background-color: transparent; \n  color: #4472c4;\n  border: 1px solid #4472c4;\n  `;\n\nconst LeftPanelItem = styled.div`\n    padding: 8px;\n    background-color: #ccc;\n    color: white;\n    border-radius: 4px;\n  `;\n\nconst Select = styled.select`\n  `;\n\nconst Label = styled.label`\n`;\n\nconst Input = styled.input`\n  `;\n\nconst ModalOverlay = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 100;\n`;\n\nconst ModalContent = styled.div`\n  background-color: white;\n  padding: 20px;\n  border-radius: 4px;\n  min-width: 500px;\n  height: 100%;\n  overflow: scroll;\n`;\n\nconst ModalTitle = styled.h3`\n  margin-bottom: 10px;\n`;\n\nconst Row = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n\nconst CenteredDiv = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  text-align: center;\n`;\n\nState.init({\n  data,\n  config: data,\n  isModalOpen: false,\n  typeSrc: \"flowscience.near\",\n  selectedType: \"flowscience.near/type/field\",\n  view: defaultView,\n  isPreview: false, //\"TEMPLATE\",\n  template: \"efiz.near/widget/every.type.metadata\",\n  templateVal: template,\n  thingId,\n});\n\nconst fieldNameOnChange = (value) => {\n  State.update({ data: { ...state.data, ...value } });\n};\n\nconst fieldNameApply = () => {\n  State.update({\n    config: state.data,\n    isPreview: !state.isPreview,\n    //template: state.templateVal,\n  });\n  // set the props for the main content\n};\n\nconst fieldNameSave = () => {\n  // create the thing\n  State.update({ isModalOpen: false });\n  const thingId = state.data.fieldName;\n  //state.thingId || Math.random();\n  let edges = [];\n  if (buildEdges) {\n    const newPath = `${context.accountId}/thing/${thingId}`;\n    edges = buildEdges(newPath, state.selectedType);\n  }\n\n  const data = {\n    thing: {\n      field: {\n        [thingId]: JSON.stringify({\n          data: state.config,\n          template: {\n            src: state.template,\n          },\n          type: state.selectedType,\n        }),\n      },\n    },\n    index: {\n      thing: JSON.stringify({\n        key: thingId,\n        value: {\n          type: state.selectedType,\n        },\n      }),\n    },\n  };\n  if (edges.length) {\n    data.index.edge = JSON.stringify(edges);\n  }\n  Social.set(data, {\n    onCommit: () => {\n      State.update({\n        data: {},\n        isModalOpen: false,\n        config: undefined,\n      });\n    },\n    onCancel: () => {\n      State.update({\n        isModalOpen: false,\n      });\n    },\n  });\n};\n\nconst fieldNameTypeChange = (e) => {\n  State.update({ selectedType: e.target.value, templateVal: \"\", data: {} });\n};\n\nconst fieldNameProfileSave = () => {\n  State.update({\n    config: state.data,\n  });\n  //check if fieldName is present\n  // in future check if fieldName is unique\n  if (!state.data.fieldName) {\n    console.log(\"Needs fieldName.\");\n    //Alert does not work.\n  } else {\n    //State.update({ isModalOpen: true });\n    fieldNameSave();\n  }\n};\n\n//  <MainContent>\n//       <>\n//         {(state.isPreview && (\n//           <Widget src={state.template} props={{ data: state.config }} />\n//         )) || <CenteredDiv>Click on Preview to see your profile.</CenteredDiv>}\n//       </>\n//     </MainContent>\n\nreturn (\n  <Container>\n    <SidePanel>\n      <>\n        <FormContainer>\n          {state.isPreview ? (\n            <Widget src={state.template} props={{ data: state.config }} />\n          ) : (\n            <Widget\n              src=\"efiz.near/widget/create\"\n              props={{\n                item: {\n                  type: state.selectedType,\n                  value: state.data,\n                },\n                onChange: fieldNameOnChange,\n              }}\n            />\n          )}\n        </FormContainer>\n        <Footer>\n          <Button\n            //onClick={() => State.update({ isModalOpen: true })}\n            onClick={() => fieldNameProfileSave()}\n            disabled={state.config === undefined}\n          >\n            Save\n          </Button>\n          <SecondaryButton onClick={() => fieldNameApply()}>\n            {state.isPreview ? \"Edit\" : \"Preview\"}\n          </SecondaryButton>\n        </Footer>\n      </>\n    </SidePanel>\n    {state.isModalOpen && (\n      <ModalOverlay>\n        <ModalContent>\n          <ModalTitle>Create Profile</ModalTitle>\n          <Widget\n            src=\"efiz.near/widget/Every.Raw.View\"\n            props={{\n              value: { data: state.config, template: { src: state.template } },\n            }}\n          />\n          <Button onClick={fieldNameSave}>Save</Button>\n          <Button onClick={() => State.update({ isModalOpen: false })}>\n            Cancel\n          </Button>\n        </ModalContent>\n      </ModalOverlay>\n    )}\n  </Container>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/flowscience.near/widget/create.field", "fact_widget_deployments_id": "156e5ef61aca91ba7344dc72f1a95384", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}