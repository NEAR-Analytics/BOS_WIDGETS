{"tx_hash": "4H4aMNGnbg5iKzD1VS6RRMqhx9woqLfYMaVuLdHPRdVW", "action_id_social": "CJH8nnqX6n5T2YhTcUX7f71UnkZg2wGtrJSgLqykKSno-0-widget", "block_id": 116519443, "block_timestamp": "2024-04-10T05:50:15.109Z", "signer_id": "flowscience.near", "widget_name": "getAttestation", "source_code": "// This function returns JSON formatted attestation data for an input UID\r\n// Example inputs for retrieving attestation data from Optimism are included here.\r\n\r\nconst abi = fetch(\r\n  \"https://raw.githubusercontent.com/ethereum-attestation-service/eas-contracts/master/deployments/optimism/EAS.json\"\r\n);\r\nconst provider = new ethers.providers.JsonRpcProvider(\r\n  \"https://optimism.drpc.org\"\r\n);\r\n\r\nconst contractAddress = \"0x4200000000000000000000000000000000000021\";\r\nconst parsedAbi = JSON.parse(abi.body);\r\nconst contract = new ethers.Contract(contractAddress, parsedAbi.abi, signer);\r\nconst [attestation, setAttestation] = useState(null);\r\nconst [error, setError] = useState(\"\");\r\nconst [uid, setUid] =\r\n  useState(\"\") ||\r\n  \"0xff5dc0cdc3de27dfe6a4352c596c0f97b1f99c51a67bbae142ce315e34969dcd\";\r\n\r\nfunction getAttestation() {\r\n  const [error, setError] = useState(\"\");\r\n\r\n  if (typeof uid !== \"string\" || uid.trim() === \"\") {\r\n    console.error(\"UID must be a non-empty string.\");\r\n    setError(\"UID must be provided.\");\r\n    return;\r\n  }\r\n\r\n  contract\r\n    .getAttestation(uid)\r\n    .then((result) => {\r\n      const [\r\n        uid,\r\n        schema,\r\n        time,\r\n        expirationTime,\r\n        revocationTime,\r\n        refUID,\r\n        recipient,\r\n        attester,\r\n        revocable,\r\n        data,\r\n      ] = result;\r\n      const mappedAttestation = {\r\n        uid,\r\n        schema,\r\n        time: time.toNumber(),\r\n        expirationTime: expirationTime.toNumber(),\r\n        revocationTime: revocationTime.toNumber(),\r\n        refUID,\r\n        recipient,\r\n        attester,\r\n        revocable,\r\n        data,\r\n      };\r\n      setAttestation(mappedAttestation);\r\n      setError(\"\");\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"error fetching attestation:\", error);\r\n      setError(\"Failed to retrieve data. Please try with a verified uid.\");\r\n    });\r\n}\r\n\r\nreturn { getAttestation };\r\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/flowscience.near/widget/getAttestation", "fact_widget_deployments_id": "7efc393085d586a968f7dfc2777e0410", "inserted_timestamp": "2024-04-10T07:34:07.118Z", "modified_timestamp": "2024-04-10T07:34:07.118Z", "__row_index": 2}