{"tx_hash": "Hjv8JNJj1vAbc63YSPZ1H3cwGvTGexbs3y9SJu54R9vg", "action_id_social": "FjGxTWj8vSmkAC3Y2jZqcVpeyj5162B1CgfQfXqRb7jR-0-widget", "block_id": 115677432, "block_timestamp": "2024-03-28T22:11:01.189Z", "signer_id": "flowscience.near", "widget_name": "eas", "source_code": "const user = Ethers.send(\"eth_requestAccounts\", [])[0];\n\nif (!user) return <Web3Connect connectLabel=\"Connect\" />;\n\nconst easAbi = fetch(\n  \"https://raw.githubusercontent.com/ethereum-attestation-service/eas-contracts/master/deployments/optimism/EAS.json\"\n);\n\nconst [address, setAddress] = useState(user);\nconst [passport, setPassport] = useState(null);\nconst [score, setScore] = useState(null);\nconst [verified, setVerified] = useState(null);\nconst [error, setError] = useState(\"\");\n\nconst contractAddress = \"0x4200000000000000000000000000000000000021\";\nconst parsedAbi = JSON.parse(easAbi.body);\nconst decoderAbi = parsedAbi[\"0x1a4\"];\n\nconst decoder = new ethers.Contract(\n  contractAddress,\n  decoderAbi,\n  Ethers.provider().getSigner()\n);\n\nfunction getPassport() {\n  decoder\n    .getPassport(address)\n    .then((result) => {\n      setPassport(result);\n      setError(\"\");\n    })\n    .catch((error) => {\n      console.error(\"error fetching passport:\", error);\n      setError(\"Failed to retrieve data. Please try with a verified address.\");\n    });\n}\n\nfunction getScore() {\n  decoder\n    .getScore(address)\n    .then((result) => {\n      setScore(result);\n      setError(\"\");\n    })\n    .catch((error) => {\n      console.error(\"error fetching score:\", error);\n      setError(\"Failed to fetch score. Please try with a verified address.\");\n    });\n}\n\nfunction getStatus() {\n  decoder\n    .isHuman(address)\n    .then((result) => {\n      setVerified(result);\n      setError(\"\");\n    })\n    .catch((error) => {\n      console.error(\"error checking status:\", error);\n      setError(\"Failed to check status. Please try with a verified address.\");\n    });\n}\n\nreturn (\n  <>\n    <div className=\"m-2\">\n      <h3>Gitcoin Passport Decoder</h3>\n      <input\n        type=\"text\"\n        placeholder=\"input Ethereum address\"\n        value={address}\n        onChange={(e) => setAddress(e.target.value)}\n      />\n    </div>\n    <div className=\"m-2\">\n      <button\n        disabled={address === \"\"}\n        className=\"btn btn-primary m-1\"\n        onClick={getStatus}\n      >\n        Check Passport\n      </button>\n      <button\n        disabled={address === \"\"}\n        className=\"btn btn-primary m-1\"\n        onClick={getScore}\n      >\n        Fetch Score\n      </button>\n      <button\n        disabled={address === \"\"}\n        className=\"btn btn-primary m-1\"\n        onClick={getPassport}\n      >\n        Review Data\n      </button>\n      <p className=\"m-1\">{error}</p>\n    </div>\n    <div className=\"m-2\">\n      {verified && (\n        <p className=\"m-2\">\n          <b>Verified:</b> {JSON.stringify(verified)}\n        </p>\n      )}\n      {score && (\n        <p className=\"m-2\">\n          <b>Score:</b> {JSON.stringify(score)}\n        </p>\n      )}\n      {passport && (\n        <p className=\"m-2\">\n          <b>Data:</b> {JSON.stringify(passport)}\n        </p>\n      )}\n    </div>\n    <hr />\n    <div className=\"m-3\">\n      <h4>\n        <a href=\"https://docs.passport.gitcoin.co/building-with-passport/smart-contracts/contract-reference\">\n          Contract Reference\n        </a>\n      </h4>\n      <p>\n        <i>using Optimism (0x1a4)</i>\n      </p>\n      <h5>\n        ABI --\n        <a href=\"https://github.com/gitcoinco/eas-proxy/blob/main/deployments/abi/GitcoinPassportDecoder.json\">\n          GitHub\n        </a>\n      </h5>\n      <pre>{JSON.stringify(easAbi)}</pre>\n    </div>\n  </>\n);\n", "metadata": {"fork_of": "hack.near/widget/passport@114479597"}, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/flowscience.near/widget/eas", "fact_widget_deployments_id": "8321882242ca258427abcb98295b8ee8", "inserted_timestamp": "2024-03-28T23:36:50.222Z", "modified_timestamp": "2024-03-28T23:36:50.222Z", "__row_index": 13}