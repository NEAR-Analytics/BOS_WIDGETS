{"tx_hash": "2STSX6sbU3jg6bjRvN9YjgTvuEiiv95mUSikA6sB8fiB", "action_id_social": "F9uYs3qmRSY8t8qHRd4XRjvtvW3PqKWpnP6nhyvCtfK3-0-widget", "block_id": 112296158, "block_timestamp": "2024-02-07T08:45:06.053Z", "signer_id": "flowscience.near", "widget_name": "attester.resolver", "source_code": "const AttResolver = ({ onResolverChange }) => {\r\n  const [accountIds, setAccountIds] = React.useState([]);\r\n  const [inputValue, setInputValue] = React.useState(\"\");\r\n\r\n  const handleAddAccountId = () => {\r\n    if (inputValue.trim() !== \"\" && !accountIds.includes(inputValue)) {\r\n      const newAccountIds = [...accountIds, inputValue];\r\n      setAccountIds(newAccountIds);\r\n      onResolverChange(newAccountIds); // Pass the updated list to the parent component\r\n      setInputValue(\"\");\r\n    }\r\n  };\r\n\r\n  const handleRemoveAccountId = (accountId) => {\r\n    const newAccountIds = accountIds.filter((id) => id !== accountId);\r\n    setAccountIds(newAccountIds);\r\n    onResolverChange(newAccountIds); // Pass the updated list to the parent component\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"text\"\r\n        value={inputValue}\r\n        onChange={handleInputChange}\r\n        placeholder=\"Enter accountId\"\r\n      />\r\n      <button onClick={handleAddAccountId}>Add</button>\r\n      <ul>\r\n        {accountIds.map((accountId) => (\r\n          <li key={accountId}>\r\n            {accountId}\r\n            <button onClick={() => handleRemoveAccountId(accountId)}>\r\n              Remove\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n", "metadata": {"fork_of": "efiz.near/widget/Every.Raw.View@92400611"}, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/flowscience.near/widget/attester.resolver", "fact_widget_deployments_id": "82b1e32128cb44d8792458aef2981781", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}