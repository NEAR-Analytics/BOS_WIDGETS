{"tx_hash": "BoorB5CsH6Gc6csM5MrSuVLcXxtL5v27eMGDh6To4mXs", "action_id_social": "BV89yWtBrNiU8Nf1ZEt29QcRHvvV9KgXveYEkqQwWSbo-0-widget", "block_id": 112520598, "block_timestamp": "2024-02-10T06:45:15.331Z", "signer_id": "flowscience.near", "widget_name": "attester.resolver", "source_code": "const [accountIds, setAccountIds] = useState([]);\nconst resolverData = accountIds;\nconst [inputValue, setInputValue] = useState(\"\");\n\nconst handleAddAccountId = () => {\n  if (inputValue.trim() !== \"\" && !accountIds.includes(inputValue)) {\n    const newAccountIds = [...accountIds, inputValue];\n    setAccountIds(newAccountIds);\n    onResolverChange(newAccountIds); // Pass the updated list to the parent component\n    setInputValue(\"\");\n  }\n};\n\nconst handleRemoveAccountId = (accountId) => {\n  const newAccountIds = accountIds.filter((id) => id !== accountId);\n  setAccountIds(newAccountIds);\n  onResolverChange(newAccountIds); // Pass the updated list to the parent component\n};\n\nconst handleInputChange = (e) => {\n  setInputValue(e.target.value);\n};\n\nreturn (\n  <div>\n    <input\n      type=\"text\"\n      value={inputValue}\n      onChange={handleInputChange}\n      placeholder=\"Enter accountId\"\n    />\n    <button onClick={handleAddAccountId}>Add</button>\n    <ul>\n      {accountIds.map((accountId) => (\n        <li key={accountId}>\n          {accountId}\n          <button onClick={() => handleRemoveAccountId(accountId)}>\n            Remove\n          </button>\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/flowscience.near/widget/attester.resolver", "fact_widget_deployments_id": "24cd0b689ca18bfc8c7a7168353ebd40", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}