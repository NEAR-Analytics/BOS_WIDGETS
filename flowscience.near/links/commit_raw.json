{"tx_hash": "3zym9iSZVL8BLNRXwvtC4m4gG63CEhCPpv4CFFPiFvsx", "action_id_social": "GPNysHdDAbxxQwur7j5c8ttaxeztNPSztEjib2CUPxfc-0-widget", "block_id": 98914613, "block_timestamp": "2023-08-16T05:22:17.707Z", "signer_id": "flowscience.near", "widget_name": "links", "source_code": "const loggedIn = context.accountId ? props.loggedIn ?? false : false;\n\nconst accountId = loggedIn\n  ? context.accountId ?? \"flowscience.near\"\n  : props.accountId ?? \"flowscience.near\";\n\nconst theme = props.theme ?? \"default\"; // will add themes later\n\nState.init({\n  copiedShareUrl: false,\n  hasBeenFlagged: false,\n  theme: theme,\n});\nconst profile =\n  props.profile || Social.get(`${accountId}/profile/**`, \"final\") || {};\nconst profileUrl = `#/near/widget/ProfilePage?accountId=${accountId}`;\n\nif (!accountId) {\n  return \"\";\n}\n\nconst profile1 = {\n  avatar:\n    \"https://images.unsplash.com/photo-1600486913747-55e5470d6f40?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=2070&q=80\",\n  title: \"Zahid Islam\",\n  subtitle: \"Data Engineer\",\n  links: [\n    { title: \"github\", url: \"https://github.com/zahid-dev\" },\n    { title: \"twitter\", url: \"https://twitter.com/zahid-dev\" },\n  ],\n  socials: [\n    { title: \"github\", url: \"https://github.com/zahid-dev\" },\n    { title: \"twitter\", url: \"https://twitter.com/zahid-dev\" },\n  ],\n};\n\nconst titleToIcon = [\n  {\n    title: \"github\",\n    icon: <i class=\"bi bi-github\"></i>,\n  },\n  {\n    title: \"twitter\",\n    icon: <i class=\"bi bi-twitter\"></i>,\n  },\n  {\n    title: \"facebook\",\n    icon: <i class=\"bi bi-facebook\"></i>,\n  },\n  {\n    title: \"whatsapp\",\n    icon: <i class=\"bi bi-whatsapp\"></i>,\n  },\n  {\n    title: \"linkedin\",\n    icon: <i class=\"bi bi-linkedin\"></i>,\n  },\n];\n// Profile Data:\nconst tags = Object.keys(profile.tags || {});\nconst viewingOwnAccount = accountId === context.accountId;\nconst accountUrl = `#/near/widget/ProfilePage?accountId=${accountId}`;\nconst shareUrl = `https://near.org${accountUrl}`;\n\n// Follower Count:\nconst following = Social.keys(`${accountId}/graph/follow/*`, \"final\", {\n  return_type: \"BlockHeight\",\n  values_only: true,\n});\nconst followers = Social.keys(`*/graph/follow/${accountId}`, \"final\", {\n  return_type: \"BlockHeight\",\n  values_only: true,\n});\nconst followingCount = following\n  ? Object.keys(following[accountId].graph.follow || {}).length\n  : null;\nconst followersCount = followers ? Object.keys(followers || {}).length : null;\n\n// Account follows you:\nconst accountFollowsYouData = Social.keys(\n  `${accountId}/graph/follow/${context.accountId}`,\n  undefined,\n  {\n    values_only: true,\n  }\n);\nconst accountFollowsYou = Object.keys(accountFollowsYouData || {}).length > 0;\n\nconst contentModerationItem = {\n  type: \"social\",\n  path: profileUrl,\n  reportedBy: context.accountId,\n};\n\nconst Wrapper = styled.div`\n  display: grid;\n  gap: 40px;\n  position: relative;\n\n  .button {\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    gap: 8px;\n    padding: 8px 16px;\n    height: 32px;\n    border-radius: 100px;\n    font-weight: 600;\n    font-size: 12px;\n    line-height: 15px;\n    text-align: center;\n    cursor: pointer;\n    background: #fbfcfd;\n    border: 1px solid #d7dbdf;\n    color: #11181c !important;\n\n    &.button--primary {\n      width: 100%;\n      color: #006adc !important;\n\n      @media (max-width: 1024px) {\n        width: auto;\n      }\n    }\n\n    &:hover,\n    &:focus {\n      background: #ecedee;\n      text-decoration: none;\n      outline: none;\n    }\n\n    i {\n      color: #7e868c;\n    }\n\n    .bi-16 {\n      font-size: 16px;\n    }\n  }\n\n  @media (max-width: 900px) {\n    gap: 24px;\n  }\n`;\n\nconst Section = styled.div`\n  display: grid;\n  gap: 24px;\n`;\n\nconst Avatar = styled.div`\n  width: 133px;\n  height: 133px;\n  flex-shrink: 0;\n  border: 3px solid #fff;\n  overflow: hidden;\n  border-radius: 100%;\n  box-shadow: 0px 12px 16px rgba(16, 24, 40, 0.08),\n    0px 4px 6px rgba(16, 24, 40, 0.03);\n\n  img {\n    object-fit: cover;\n    width: 100%;\n    height: 100%;\n  }\n\n  @media (max-width: 900px) {\n    width: 80px;\n    height: 80px;\n  }\n`;\n\nconst Title = styled.h1`\n  font-weight: 600;\n  font-size: ${(p) => p.size || \"25px\"};\n  line-height: 1.2em;\n  color: #11181c;\n  margin: ${(p) => (p.margin ? \"0 0 24px\" : \"0\")};\n  overflow-wrap: anywhere;\n`;\n\nconst Text = styled.p`\n  margin: 0;\n  line-height: 1.5rem;\n  color: ${(p) => (p.bold ? \"#11181C\" : \"#687076\")} !important;\n  font-weight: ${(p) => (p.bold ? \"600\" : \"400\")};\n  font-size: ${(p) => (p.small ? \"12px\" : \"14px\")};\n  overflow: ${(p) => (p.ellipsis ? \"hidden\" : \"\")};\n  text-overflow: ${(p) => (p.ellipsis ? \"ellipsis\" : \"\")};\n  white-space: ${(p) => (p.ellipsis ? \"nowrap\" : \"\")};\n  overflow-wrap: anywhere;\n\n  b {\n    font-weight: 600;\n    color: #11181c;\n  }\n\n  &[href] {\n    display: inline-flex;\n    gap: 0.25rem;\n\n    &:hover,\n    &:focus {\n      text-decoration: underline;\n    }\n  }\n`;\n\nconst TextLink = styled.a`\n  display: block;\n  margin: 0;\n  font-size: 14px;\n  line-height: 20px;\n  color: #11181c !important;\n  font-weight: 400;\n  font-size: 14px;\n  white-space: nowrap;\n  outline: none;\n  overflow-x: hidden;\n  text-overflow: ellipsis;\n\n  &:focus,\n  &:hover {\n    text-decoration: underline;\n  }\n\n  i {\n    color: #7e868c;\n    margin-right: 8px;\n  }\n`;\n\nconst TextBadge = styled.p`\n  display: inline-block;\n  margin: 0;\n  font-size: 10px;\n  line-height: 1.1rem;\n  background: #687076;\n  color: #fff;\n  font-weight: 600;\n  white-space: nowrap;\n  padding: 0 6px;\n  border-radius: 3px;\n`;\n\nconst Actions = styled.div`\n  display: flex;\n  gap: 6px;\n`;\n\nconst Stats = styled.div`\n  display: flex;\n  gap: 24px;\n`;\n\nconst SocialLinks = styled.div`\n  display: grid;\n  gap: 9px;\n`;\n\nconst FollowButtonWrapper = styled.div`\n  flex: 1 0 auto;\n  div,\n  button {\n    width: 100%;\n  }\n  @media (max-width: 1024px) {\n    flex: 0 0 auto;\n    div,\n    button {\n      width: auto;\n    }\n  }\n`;\n\nreturn (\n  <>\n    <Wrapper>\n      <Section>\n        {false && (\n          <Actions>\n            {viewingOwnAccount ? (\n              <a\n                className=\"button button--primary\"\n                href=\"#/near/widget/ProfileEditor\"\n              >\n                <i className=\"bi bi-pencil\"></i>\n                Edit Profile\n              </a>\n            ) : context.accountId ? (\n              <>\n                {false && (\n                  <FollowButtonWrapper>\n                    <Widget\n                      src=\"near/widget/FollowButton\"\n                      props={{\n                        accountId,\n                      }}\n                    />\n                  </FollowButtonWrapper>\n                )}\n\n                <Widget\n                  src=\"near/widget/PokeButton\"\n                  props={{\n                    accountId,\n                  }}\n                />\n              </>\n            ) : (\n              <></>\n            )}\n\n            <OverlayTrigger\n              placement=\"top\"\n              overlay={<Tooltip>Copy URL to clipboard</Tooltip>}\n            >\n              <button\n                className=\"button\"\n                type=\"button\"\n                onMouseLeave={() => {\n                  State.update({ copiedShareUrl: false });\n                }}\n                onClick={() => {\n                  clipboard.writeText(shareUrl).then(() => {\n                    State.update({ copiedShareUrl: true });\n                  });\n                }}\n              >\n                {state.copiedShareUrl ? (\n                  <i className=\"bi-16 bi bi-check\"></i>\n                ) : (\n                  <i className=\"bi-16 bi-link-45deg\"></i>\n                )}\n                Share\n              </button>\n            </OverlayTrigger>\n          </Actions>\n        )}\n      </Section>\n\n      <Section>\n        {false && (\n          <Stats>\n            <Text as=\"a\" href={`${accountUrl}&tab=following`}>\n              <b bold as=\"span\">\n                {followingCount === null ? \"--\" : followingCount}\n              </b>{\" \"}\n              Following\n            </Text>\n            <Text as=\"a\" href={`${accountUrl}&tab=followers`}>\n              <b>{followersCount === null ? \"--\" : followersCount}</b> Followers\n            </Text>\n          </Stats>\n        )}\n      </Section>\n    </Wrapper>\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        gap: 16,\n        height: \"100%\",\n        padding: \"0 8px\",\n      }}\n    >\n      <a\n        href={`https://near.org/near/widget/ProfilePage?accountId=${accountId}`}\n        target=\"_blank\"\n      >\n        <Widget\n          src=\"mob.near/widget/Image\"\n          props={{\n            image: profile.image,\n            alt: profile.name,\n            fallbackUrl:\n              \"https://ipfs.near.social/ipfs/bafkreibiyqabm3kl24gcb2oegb7pmwdi6wwrpui62iwb44l7uomnn3lhbi\",\n            style: {\n              height: \"100%\",\n              maxHeight: 200,\n              borderRadius: \"50%\",\n              aspectRatio: 1 / 1,\n              objectFit: \"cover\",\n            },\n          }}\n        />\n      </a>\n\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n        }}\n      >\n        <h2 style={{ color: props.theme.textColor }}>\n          {profile.name || accountId}\n        </h2>\n\n        <h5 style={{ color: props.theme.textColor2 }}>@{accountId}</h5>\n        {tags.length > 0 && (\n          <Section>\n            <Widget\n              src=\"near/widget/Tags\"\n              props={{\n                tags,\n              }}\n            />\n          </Section>\n        )}\n      </div>\n\n      {profile.linktree && (\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            gap: 8,\n            width: \"100%\",\n            maxWidth: 400,\n          }}\n        >\n          {profile.linktree.website && (\n            <a href={`https://${profile.linktree.website}`} target=\"_blank\">\n              <button style={{ width: \"100%\" }}>\n                {\" \"}\n                <i className=\"bi bi-globe\"></i> Website\n              </button>\n            </a>\n          )}\n\n          {profile.linktree.github && (\n            <>\n              <a\n                href={`https://github.com/${profile.linktree.github}`}\n                target=\"_blank\"\n              >\n                <button style={{ width: \"100%\" }}>\n                  <i className=\"bi bi-github\"></i> Github\n                </button>\n              </a>\n            </>\n          )}\n\n          {profile.linktree.twitter && (\n            <a\n              href={`https://twitter.com/${profile.linktree.twitter}`}\n              target=\"_blank\"\n            >\n              <button style={{ width: \"100%\" }}>\n                <i className=\"bi bi-twitter\"></i> Twitter\n              </button>\n            </a>\n          )}\n\n          {profile.linktree.telegram && (\n            <a\n              href={`https://t.me/${profile.linktree.telegram}`}\n              target=\"_blank\"\n            >\n              <button style={{ width: \"100%\" }}>\n                <i className=\"bi bi-telegram\"></i> Telegram\n              </button>\n            </a>\n          )}\n        </div>\n      )}\n      {false && (\n        <div style={{ display: \"flex\", gap: 16 }}>\n          {profile1.socials?.map((link) => (\n            <a href={link.url} target=\"_blank\" style={{ fontSize: \"1.5rem\" }}>\n              {titleToIcon.find((ti) => ti.title === link.title).icon}\n            </a>\n          ))}\n        </div>\n      )}\n    </div>\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/flowscience.near/widget/links", "fact_widget_deployments_id": "e212deba48bbf1c305c17c871264c4e2", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}