{"tx_hash": "JBfDHUeUetHFFpjm9YhLSmGKiuARMJbmeFbY7S9VnPwC", "action_id_social": "EN5ddouS8FMvzDCK8M5GTaTzqkVP5rPsZ4TpeWhcXp2J-0-widget", "block_id": 112914306, "block_timestamp": "2024-02-16T00:21:39.692Z", "signer_id": "flowscience.near", "widget_name": "SchemaSelector", "source_code": "const Row = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\nconst Button = styled.button`\n  `;\nconst FormContainer = styled.div`\n  border: 1px solid #ccc;\n  padding: 20px;\n`;\nconst Select = styled.select`\n  `;\nconst Label = styled.label`\n`;\nconst Input = styled.input`\n  `;\nconst initialSchemaSrc = props.schemaSrc || \"attestations.near\";\nconst [newSchemaSrc, setNewSchemaSrc] = useState(initialSchemaSrc);\nconst [schemaSrc, setSchemaSrc] = useState(initialSchemaSrc);\nconst [availableSchemas, setAvailableSchemas] = useState([]);\nconst [isLoading, setIsLoading] = useState(true);\nconst [selectedSchema, setSelectedSchema] = useState(\n  props.selectedSchema || \"attestations.near/type/isTrue\"\n);\n\nuseEffect(() => {\n  const fetchSchemasList = async () => {\n    setIsLoading(true);\n    const schemas = Social.get(`${schemaSrc}/type/**`, \"final\");\n    if (schemas !== null) {\n      const schemasList = Object.keys(schemas).map(\n        (key) => `${schemaSrc}/type/${key}`\n      );\n      setAvailableSchemas(schemasList);\n    } else {\n      setAvailableSchemas([]);\n    }\n    setIsLoading(false);\n  };\n\n  fetchSchemasList();\n}, [schemaSrc]); // Fetch schemas when schemaSrc changes\n\nconst handleSchemaChange = (e) => {\n  setSelectedSchema(e.target.value);\n  console.log(`New schema selected: ${newSchema}`); // Log the new schema selection\n\n  if (props.onSelectedSchemaChange) {\n    props.onSelectedSchemaChange(e.target.value);\n  }\n};\n\nconst handleSchemaOwnerChange = (e) => {\n  setNewSchemaSrc(e.target.value);\n};\n\nconst handleApplySchemaSrc = () => {\n  setSchemaSrc(newSchemaSrc);\n  console.log(`Applying new Schema Owner: ${schemaSrc}`); // Optionally log when applying a new Schema Owner\n};\n\nreturn (\n  <FormContainer>\n    <Label>Schema Owner:</Label>\n    <Row>\n      <Input\n        type=\"text\"\n        value={newSchemaSrc}\n        onChange={handleSchemaOwnerChange}\n        placeholder=\"accountId\"\n      />\n      <Button onClick={handleApplySchemaSrc}>apply</Button>\n    </Row>\n    <Label>Schema:</Label>\n    <Row>\n      {isLoading ? (\n        <div>Loading...</div>\n      ) : (\n        <Select value={selectedSchema} onChange={handleSchemaChange}>\n          <option value=\"\">Choose a schema</option>\n          {availableSchemas.map((schema) => (\n            <option key={schema} value={schema}>\n              {schema}\n            </option>\n          ))}\n        </Select>\n      )}\n    </Row>\n  </FormContainer>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/flowscience.near/widget/SchemaSelector", "fact_widget_deployments_id": "c951cbc7036b2aa7ea3df21d205b5863", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 9}