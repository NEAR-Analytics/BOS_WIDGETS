{"tx_hash": "2anmgidusvN4DM2Wh8WRuwiGAy5nANu3U9ty13GDvDfs", "action_id_social": "HQiRu7tCMhGCmMQM9DS3y8HRLV2d1v4AGuejTfw5457X-0-widget", "block_id": 112658366, "block_timestamp": "2024-02-12T05:15:48.084Z", "signer_id": "flowscience.near", "widget_name": "SchemaSelector", "source_code": "const Row = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n\nconst Button = styled.button`\n  `;\n\nconst FormContainer = styled.div`\n  border: 1px solid #ccc;\n  padding: 20px;\n`;\n\nconst Select = styled.select`\n  `;\n\nconst Label = styled.label`\n`;\n\nconst Input = styled.input`\n  `;\n\nconst [selectedSchema, setSelectedSchema] = useState(\n  props.selectedSchema || \"attestations.near/type/isTrue\"\n);\nconst [schemaSrc, setSchemaSrc] = useState(\n  props.schemaSrc || \"attestations.near\"\n);\nconst [availableSchemas, setAvailableSchemas] = useState([]);\nconst [isLoading, setIsLoading] = useState(false);\n\nconst fetchSchemasList = () => {\n  setIsLoading(true);\n  const schemas = Social.get(`${schemaSrc}/type/**`, \"final\");\n  if (schemas !== null) {\n    const schemasList = Object.keys(schemas).map(\n      (key) => `${schemaSrc}/type/${key}`\n    );\n    setAvailableSchemas(schemasList);\n  }\n  setIsLoading(false);\n  // Optionally handle state update using the State object if needed\n  // State.update({ schemaSrc: schemaSrc });\n};\n\nconst handleSchemaChange = (e) => {\n  const newSchema = e.target.value;\n  setSelectedSchema(newSchema);\n  // Update the global state if necessary\n  if (props.onSelectedSchemaChange) {\n    props.onSelectedSchemaChange(newSchema);\n  }\n};\n\nconst handleSchemaOwnerChange = (e) => {\n  setschemaSrc(e.target.value);\n};\n\nconst handleApplyClick = () => {\n  setSchemaSrc(schemaSrc);\n  fetchSchemasList();\n};\n\nreturn (\n  <FormContainer>\n    <Label>Schema Owner:</Label>\n    <Row>\n      <Input type=\"text\" value={schemaSrc} onChange={handleSchemaOwnerChange} />\n      <Button onClick={handleApplyClick}>apply</Button>\n    </Row>\n    <Label>Schema:</Label>\n    <Row>\n      {isLoading ? (\n        <div>Loading...</div>\n      ) : (\n        <Select value={selectedSchema} onChange={handleSchemaChange}>\n          <option value=\"\">Choose a schema</option>\n          {availableSchemas.map((schema) => (\n            <option key={schema} value={schema}>\n              {schema}\n            </option>\n          ))}\n        </Select>\n      )}\n    </Row>\n  </FormContainer>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/flowscience.near/widget/SchemaSelector", "fact_widget_deployments_id": "11d50a8c16ac6b7a5d34db5eda7c06e9", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 6}