{"tx_hash": "HiAbNvu2So1ChBJQrbYsY5zdLpDJLLqXWEGQXSKVUGVh", "action_id_social": "32Lkz4BQYXuiprWRUaGE76iHXxzDYKgGPehtc8HpQKxB-0-widget", "block_id": 108008893, "block_timestamp": "2023-12-15T13:26:42.008Z", "signer_id": "inscribe.near", "widget_name": "NEAT", "source_code": "const TGas = Big(10).pow(12);\nconst MaxGasPerTransaction = TGas.mul(250);\nconst GasPerTransaction = MaxGasPerTransaction.plus(TGas);\nconst pageAmountOfPage = 5;\nconst ipfsPrefix = \"https://ipfs.near.social/ipfs\";\n\nfunction toLocaleString(source, decimals, rm) {\n  if (typeof source === \"string\") {\n    return toLocaleString(Number(source), decimals);\n  } else if (typeof source === \"number\") {\n    return decimals !== undefined\n      ? source.toLocaleString(undefined, {\n          maximumFractionDigits: decimals,\n          minimumFractionDigits: decimals,\n        })\n      : source.toLocaleString();\n  } else {\n    // Big type\n    return toLocaleString(\n      decimals !== undefined\n        ? Number(source.toFixed(decimals, rm))\n        : source.toNumber(),\n      decimals\n    );\n  }\n}\n\nfunction formatAmount(balance, decimal) {\n  if (!decimal) decimal = 8;\n  return toLocaleString(\n    Big(balance).div(Big(10).pow(decimal)).toFixed(),\n    decimal\n  );\n}\n\n// Config for Bos app\nfunction getConfig(network) {\n  switch (network) {\n    case \"mainnet\":\n      return {\n        ownerId: \"inscribe.near\",\n        graphUrl:\n          \"https://api.thegraph.com/subgraphs/name/inscriptionnear/neat\",\n        nodeUrl: \"https://rpc.mainnet.near.org\",\n        contractName: \"inscription.near\",\n        methodName: \"inscribe\",\n        args: {\n          p: \"nrc-20\",\n          op: \"mint\",\n          tick: \"neat\",\n          amt: \"100000000\",\n        },\n        transferArgs: {\n          p: \"nrc-20\",\n          op: \"transfer\",\n          tick: \"neat\",\n        },\n        ftWrapper: \"neat.nrc-20.near\",\n        refFinance: \"https://app.ref.finance/\",\n      };\n    case \"testnet\":\n      return {\n        ownerId: \"inscribe.testnet\",\n        graphUrl:\n          \"https://api.thegraph.com/subgraphs/name/inscriptionnear/neat-test\",\n        nodeUrl: \"https://rpc.testnet.near.org\",\n        contractName: \"inscription.testnet\",\n        methodName: \"inscribe\",\n        args: {\n          p: \"nrc-20\",\n          op: \"mint\",\n          tick: \"neat\",\n          amt: \"100000000\",\n        },\n        transferArgs: {\n          p: \"nrc-20\",\n          op: \"transfer\",\n          tick: \"neat\",\n        },\n        ftWrapper: \"neat.nrc-20.testnet\",\n        refFinance: \"https://testnet.ref-finance.com/\",\n      };\n    default:\n      throw Error(`Unconfigured environment '${network}'.`);\n  }\n}\nconst config = getConfig(context.networkId);\nconst tx = {\n  contractName: config.contractName,\n  methodName: config.methodName,\n  args: config.args,\n  gas: GasPerTransaction,\n};\n\nconst Main = styled.div`\n  width: 100%;\n  min-height: 90vh;\n  overflow: hidden;\n  background: #101010;\n  background-image: url(${ipfsPrefix}/bafkreiak6rio66kqjsobw25gtmy5a7fwwsa4hjn3d25a4tppfylbdepbjq);\n  background-repeat: no-repeat;\n  background-size: cover;\n  padding: 0 16px;\n  color: white;\n  @media (min-width: 640px) {\n    padding: 0 40px;\n  }\n`;\n\nconst Spacer = styled.div``;\n\nconst BodyContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  gap: 20px;\n  margin: 40px 0;\n`;\n\nconst NeatLink = styled.a`\n  color: rgb(0, 214, 175);\n  font-size: 18px;\n  font-weight: 600;\n  display: inline-block;\n  text-decoration: underline;\n`;\n\nconst HeaderContainer = styled.div`\n  padding: 18px 0;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst Logo = styled.img`\n  width: 40px;\n  height: 40px;\n`;\n\nconst TabContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 56px;\n\n  @media (max-width: 768px) {\n    gap: 20px;\n  }\n`;\n\nconst TabItem = styled(\"Link\")`\n  color: white;\n  cursor: pointer;\n  font-size: 18px;\n  font-weight: 600;\n  ${(props) => !props.selected && \"opacity: 0.4;\"}\n  &:hover {\n    color: white;\n    text-decoration: none;\n    opacity: 0.8;\n  }\n  @media (max-width: 768px) {\n    font-size: 16px;\n  }\n`;\n\nconst FormContainer = styled.div`\n  max-width: 650px;\n  width: 100%;\n  background: #141414;\n  border-radius: 4px;\n  border: 1px solid #ffffff1a;\n  display: flex;\n  flex-direction: column;\n  gap: 36px;\n\n  padding: 16px;\n  @media (min-width: 640px) {\n    padding: 24px;\n  }\n`;\n\n\n\nfunction getTab() {\n  const tab = props.tab;\n  if ([\"transfer\", \"wrap\", \"indexer\", \"mint\"].includes(tab)) {\n    return tab;\n  } else {\n    return \"transfer\";\n  }\n}\n\nconst tab = getTab();\n\nreturn (\n  <Main>\n    <HeaderContainer>\n      <Logo\n        src={`${ipfsPrefix}/bafkreic65adpnynb7dthyyfjkfxgteij3qq45dmtfcp3knlroyo4nyj4qq`}\n        alt=\"Logo\"\n      />\n      <TabContainer>\n        <TabItem\n          selected={tab === \"transfer\"}\n          href={`/${config.ownerId}/widget/NEAT?tab=transfer`}\n        >\n          Transfer\n        </TabItem>\n        <TabItem\n          selected={tab === \"wrap\"}\n          href={`/${config.ownerId}/widget/NEAT?tab=wrap`}\n        >\n          Wrap\n        </TabItem>\n        <TabItem\n          selected={tab === \"indexer\"}\n          href={`/${config.ownerId}/widget/NEAT?tab=indexer`}\n        >\n          Indexer\n        </TabItem>\n        <TabItem\n          selected={tab === \"mint\"}\n          href={`/${config.ownerId}/widget/NEAT?tab=mint`}\n        >\n          Mint\n        </TabItem>\n      </TabContainer>\n      <Spacer />\n    </HeaderContainer>\n    <BodyContainer>\n      {tab === \"mint\" && <Widget src={`${config.ownerId}/widget/NEAT.Mint`} />}\n      {tab === \"indexer\" && (\n        <Widget src={`${config.ownerId}/widget/NEAT.Indexer`} />\n      )}\n      {tab === \"transfer\" && (\n        <Widget src={`${config.ownerId}/widget/NEAT.Transfer`} />\n      )}\n      {tab === \"wrap\" && <Widget src={`${config.ownerId}/widget/NEAT.Wrap`} />}\n    </BodyContainer>\n  </Main>\n);\n", "metadata": {"description": "NEAT is the first inscription token on NEAR blockchain and follows the NRC-20 token standard.", "image": {"ipfs_cid": "bafkreic65adpnynb7dthyyfjkfxgteij3qq45dmtfcp3knlroyo4nyj4qq"}, "name": "NEAT - 1st Inscription Token on NEAR", "tags": {"app": "", "inscription": "", "near": "", "neat": "", "nrc-20": ""}}, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/inscribe.near/widget/NEAT", "fact_widget_deployments_id": "f9860187450d0ddb83eedbb4b0f95ee8", "inserted_timestamp": "2023-12-15T15:24:45.869Z", "modified_timestamp": "2023-12-20T03:22:11.422Z", "__row_index": 1}