{"tx_hash": "6Arx69mCMtCjZxjGnMukkkXYy8ELnoBsyvM8M1o9PtGK", "action_id_social": "2EmPLhuZx4xEyLyzHL1sxWBiNyb7BCqUJBRxeGgW3RXf-0-widget", "block_id": 106778558, "block_timestamp": "2023-11-29T02:55:22.307Z", "signer_id": "inscribe.near", "widget_name": "NEAT.Mint", "source_code": "const TGas = Big(10).pow(12);\nconst MaxGasPerTransaction = TGas.mul(250);\nconst GasPerTransaction = MaxGasPerTransaction.plus(TGas);\nconst pageAmountOfPage = 5;\nconst ipfsPrefix = \"https://ipfs.near.social/ipfs\";\n// Config for Bos app\nfunction getConfig(network) {\n  switch (network) {\n    case \"mainnet\":\n      return {\n        ownerId: \"inscribe.near\",\n        nodeUrl: \"https://rpc.mainnet.near.org\",\n        indexerUrl: \"https://inscription-indexer-a16497da251b.herokuapp.com/v1\",\n        contractName: \"inscription.near\",\n        methodName: \"inscribe\",\n        args: {\n          p: \"nrc-20\",\n          op: \"mint\",\n          tick: \"neat\",\n          amt: \"100000000\",\n        },\n      };\n    case \"testnet\":\n      return {\n        ownerId: \"inscribe.testnet\",\n        nodeUrl: \"https://rpc.testnet.near.org\",\n        indexerUrl: \"https://inscription-indexer-a16497da251b.herokuapp.com/v1\",\n        contractName: \"inscription.testnet\",\n        methodName: \"inscribe\",\n        args: {\n          p: \"nrc-20\",\n          op: \"mint\",\n          tick: \"neat\",\n          amt: \"100000000\",\n        },\n      };\n    default:\n      throw Error(`Unconfigured environment '${network}'.`);\n  }\n}\nconst config = getConfig(context.networkId);\nconst tx = {\n  contractName: config.contractName,\n  methodName: config.methodName,\n  args: config.args,\n  gas: GasPerTransaction,\n};\n\nconst FormContainer = styled.div`\n  max-width: 650px;\n  width: 100%;\n  background: #141414;\n  border-radius: 4px;\n  border: 1px solid #ffffff1a;\n  display: flex;\n  flex-direction: column;\n  gap: 36px;\n\n  padding: 16px;\n  @media (min-width: 640px) {\n    padding: 24px;\n  }\n`;\n\nconst FormTitle = styled.div`\n  font-size: 22px;\n  font-weight: 600px;\n`;\n\nconst FormBody = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n`;\n\nconst FormRowContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst FormRowTitle = styled.div``;\n\nconst FormRowValue = styled.div``;\n\nconst FormButtonGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\n\nconst FormButton = styled.div`\n  height: 56px;\n  width: 100%;\n  display: grid;\n  place-content: center;\n  cursor: pointer;\n  border: 1px solid #ffffff;\n  font-size: 18px;\n  font-weight: 600;\n  border-radius: 4px;\n  &:hover {\n    background: rgba(255, 255, 255, 0.08);\n  }\n`;\n\nconst TipText = styled.div`\n  color: #fffffff0;\n  font-size: 12px;\n  font-weight: 600;\n`;\n\nState.init({\n  balance: undefined,\n  tickerRawData: {},\n  holders: [],\n  ticker: [\n    {\n      title: \"Token:\",\n      value: \"-\",\n    },\n    {\n      title: \"Protocol:\",\n      value: \"-\",\n    },\n    {\n      title: \"Total Supply:\",\n      value: \"-\",\n    },\n    {\n      title: \"Total Minted:\",\n      value: \"-\",\n    },\n    {\n      title: \"Minted%:\",\n      value: \"-\",\n    },\n    {\n      title: \"Mint Limit:\",\n      value: \"-\",\n    },\n    {\n      title: \"Holders:\",\n      value: \"-\",\n    },\n  ],\n});\n\nfunction fetchAllData() {\n  const result = fetch(`${config.indexerUrl}/tickers`, {\n    method: \"GET\",\n  });\n  const data = result.body[0];\n  State.update({\n    tickerRawData: data,\n    ticker: [\n      {\n        title: \"Token:\",\n        value: data.display_name,\n      },\n      {\n        title: \"Protocol:\",\n        value: \"NRC-20\",\n      },\n      {\n        title: \"Total Supply:\",\n        value: Number(data.max_supply ?? 0).toLocaleString(),\n      },\n      {\n        title: \"Total Minted:\",\n        value: Number(data.total_supply ?? 0).toLocaleString(),\n      },\n      {\n        title: \"Minted%:\",\n        value:\n          Big(data.total_supply ?? 0)\n            .div(data.max_supply ?? 1)\n            .times(100)\n            .toFixed(2) + \"%\",\n      },\n      {\n        title: \"Mint Limit:\",\n        value: Number(data.limit).toLocaleString(),\n      },\n      {\n        title: \"Holders:\",\n        value: Number(data.holders).toLocaleString(),\n      },\n    ],\n  });\n  const displayName = state.tickerRawData.display_name;\n  if (displayName) {\n    const holdersResult = fetch(\n      `${config.indexerUrl}/tickers/${displayName}/holders`,\n      {\n        method: \"GET\",\n      }\n    );\n    State.update({\n      holders: holdersResult.body,\n    });\n  }\n  const accountId = props.accountId || context.accountId;\n  const balancesResponse = fetch(`${config.indexerUrl}/balances/${accountId}`, {\n    method: \"GET\",\n  });\n  const balance = balancesResponse.body[0]?.balance ?? \"0\";\n  State.update({ balance });\n}\n\nfetchAllData();\n\n\n\nconst inscriptionsAmount = 50;\nreturn (\n  <FormContainer>\n    <FormTitle>The First Inscription Token on NEAR Blockchain</FormTitle>\n    <FormBody>\n      {state.ticker.map((row) => (\n        <FormRowContainer key={row.title}>\n          <FormRowTitle>{row.title}</FormRowTitle>\n          <FormRowValue>{row.value}</FormRowValue>\n        </FormRowContainer>\n      ))}\n      <FormButtonGroup>\n        <FormButton\n          onClick={() => {\n            Near.call(tx.contractName, tx.methodName, tx.args);\n          }}\n        >\n          Mint\n        </FormButton>\n        <FormButton\n          onClick={() => {\n            Near.call(Array(inscriptionsAmount).fill(tx));\n          }}\n        >\n          Mint {inscriptionsAmount} Inscriptions by one click\n        </FormButton>\n        <TipText>\n          * Mint {inscriptionsAmount} inscriptions will take around 5 minutes in\n          your wallet. Please be patient.{\" \"}\n        </TipText>\n      </FormButtonGroup>\n    </FormBody>\n  </FormContainer>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/inscribe.near/widget/NEAT.Mint", "fact_widget_deployments_id": "d99c04173e26d319f9af12ecaa4cd9a3", "inserted_timestamp": "2023-11-29T04:41:51.483Z", "modified_timestamp": "2023-11-29T04:41:51.483Z", "__row_index": 1}