{"tx_hash": "52eGHyBgfJn3hmVZe24mxoeyWuLTesQpTV7mPukmU9zp", "action_id_social": "B3MDG17CyXJxi54CfzK7Dcv1pNoARrUcGsnq6tTAYyRj-0-widget", "block_id": 114406785, "block_timestamp": "2024-03-09T17:56:37.738Z", "signer_id": "forefront_tak.near", "widget_name": "Forefront.Widget.NearSocial.Explorer.Node", "source_code": "const key = props.key;\r\nconst label = props.label;\r\nconst node = props.node;\r\nconst type = props.type;\r\nconst path = props.path;\r\nconst setPath = props.setPath;\r\nconst history = props.history;\r\nconst setHistory = props.setHistory;\r\nconst setType = props.setType;\r\nconst isRoot = props.isRoot;\r\nconst themeColor = props.themeColor;\r\n\r\nState.init({\r\n  expanded: false,\r\n});\r\n\r\nfunction handleExpand() {\r\n  State.update({ expanded: !state.expanded });\r\n}\r\n\r\nfunction handleInto() {\r\n  setPath(path);\r\n  setHistory([...history, path]);\r\n  setType(type);\r\n}\r\n\r\nfunction handleBack() {\r\n  const newPath = history[history.length - 2] || \"\";\r\n  setPath(newPath);\r\n  setHistory(history.slice(0, -1));\r\n}\r\n\r\n// Basic Button Style\r\nconst Button = styled.button`\r\n  text-transform: lowercase !important;\r\n  display: inline-block;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  border: 2px outset ${themeColor?.nodes?.borderColor || \"#333\"};\r\n  border-radius: 10px;\r\n  background-color: ${themeColor?.nodes?.backgroundColor || \"#f5f5f5\"};\r\n  cursor: pointer;\r\n  color: ${themeColor?.nodes?.color || \"#333\"};\r\n  ${{ ...themeColor?.overrideNodeStyles }}\r\n`;\r\n\r\nconst ChildNode = styled.div`\r\n  margin-left: ${path.split(\"/\").length * 4}px\r\n`;\r\n\r\nfunction renderView() {\r\n  // Root vs Leaf?\r\n  return (\r\n    <Widget\r\n      src=\"forefront_tak.near/widget/Forefront.Widget.NearSocial.Explorer.View\"\r\n      props={{ path, type, themeColor }}\r\n    />\r\n  );\r\n}\r\n\r\nfunction getType() {\r\n  const parts = path.split(\"/\");\r\n  if (parts.length === 1) {\r\n    return \"account\";\r\n  } else if (parts.length === 2) {\r\n    return parts[1];\r\n  } else {\r\n    const standard = parts[1];\r\n    if (standard === \"thing\") {\r\n      // We're gonna grab the type from the thing itself\r\n    }\r\n    return standard;\r\n  }\r\n}\r\n\r\nreturn (\r\n  <div>\r\n    <div>\r\n      {/** CONTROLLER */}\r\n      {history.length > 1 && isRoot && (\r\n        <Button onClick={handleBack}>back</Button>\r\n      )}\r\n      {isRoot ? (\r\n        <div style={themeColor?.subject}>{label}</div>\r\n      ) : (\r\n        <Button onClick={handleInto}>{label}</Button>\r\n      )}\r\n\r\n      <Button onClick={handleExpand}>{state.expanded ? \"-\" : \"+\"}</Button>\r\n    </div>\r\n    {state.expanded && (\r\n      <div>\r\n        {/** EDGES */}\r\n        {node && typeof node === \"object\" ? (\r\n          Object.entries(node).map(([key, val]) => (\r\n            <ChildNode>\r\n              <Widget\r\n                src=\"forefront_tak.near/widget/Forefront.Widget.NearSocial.Explorer.Node\"\r\n                props={{\r\n                  key,\r\n                  label: key,\r\n                  node: val,\r\n                  type: getType(),\r\n                  path: `${path}/${key}`,\r\n                  setPath: setPath,\r\n                  history,\r\n                  setHistory: setHistory,\r\n                  isRoot: false,\r\n                  themeColor: themeColor,\r\n                }}\r\n              />\r\n            </ChildNode>\r\n          ))\r\n        ) : (\r\n          <>\r\n            {/** VIEW */}\r\n            <div>{renderView()}</div>\r\n          </>\r\n        )}\r\n      </div>\r\n    )}\r\n  </div>\r\n);\r\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/forefront_tak.near/widget/Forefront.Widget.NearSocial.Explorer.Node", "fact_widget_deployments_id": "4aeb963d7aec596436f9bc2bfd679a55", "inserted_timestamp": "2024-03-09T19:24:39.232Z", "modified_timestamp": "2024-03-09T19:24:39.232Z", "__row_index": 1}