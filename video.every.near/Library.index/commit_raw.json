{"tx_hash": "C8BF32zWhneEhUawscVnFzpDRN8wakLbrBWT1YrHnX5y", "action_id_social": "FoUNJ4Sx6ZrKjZgpBHQ7oSsQBwDoNb5oPsA2PgCfnEUR-0-widget", "block_id": 114040129, "block_timestamp": "2024-03-03T22:51:53.940Z", "signer_id": "video.every.near", "widget_name": "Library.index", "source_code": "const ROOT_ACCOUNT = \"efiz.near\";\n\nState.init({\n  widget: state.widget ?? props.widget ?? \"Library.Overview\",\n});\n\nconst data = Social.keys(`${ROOT_ACCOUNT}/widget/*`, \"final\", {\n  return_type: \"BlockHeight\",\n});\n\nconst RouterLink = props.RouterLink;\n\nif (!data) return \"\";\n\nfunction convertToNestedObject(obj) {\n  const result = {};\n  Object.keys(obj)\n    .filter((key) => key !== \"index\")\n    .forEach((key) => {\n      let parts = key.split(\".\");\n      let firstPart = parts.shift();\n      if (parts[1] === \"demo\") {\n        return;\n      }\n      if (parts.length) {\n        result[firstPart] = result[firstPart] || {};\n        result[firstPart][parts.join(\".\")] = obj[key];\n      } else {\n        result[firstPart] = obj[key];\n      }\n    });\n  return result;\n}\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  font-family: sans-serif;\n\n  @media (max-width: 800px) {\n    flex-wrap: wrap;\n  }\n`;\n\nconst Sidebar = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  background: #fff;\n  box-shadow: rgba(99, 99, 99, 0.2) 0px 2px 8px 0px;\n  border-radius: 8px;\n  min-width: 240px;\n  width: 240px;\n  padding: 40px 17px 30px;\n  z-index: 1;\n  bottom: 0;\n  margin-bottom: 40px;\n  height: fit-content;\n\n  @media (max-width: 800px) {\n    width: 100%;\n  }\n\n  h3 {\n    margin: 0;\n    font-size: 14px;\n    font-weight: 500;\n    color: #999;\n    padding: 6px 21px;\n  }\n\n  a {\n    display: block;\n    font-size: 14px;\n    font-weight: 600;\n    padding: 6px 21px;\n    border-radius: 4px;\n    color: #141414;\n    cursor: pointer;\n    transition: all 0.2s ease-in-out;\n    text-decoration: none;\n    text-transform: capitalize;\n  }\n\n  a.active {\n    background: #edf4fc !important;\n    color: #4498e0 !important;\n  }\n\n  a:hover {\n    color: #4498e0 !important;\n  }\n`;\n\nconst Content = styled.div`\n  flex: 1;\n  margin-left: 20px;\n  min-height: 70vh;\n  margin-bottom: auto;\n\n  @media (max-width: 800px) {\n    width: 100%;\n    padding: 0;\n    margin: 0;\n  }\n`;\n\nconst widgets = {\n  index: 0,\n  \"Livepeer.Creator\": 0,\n  \"Livepeer.Creator.demo\": 0,\n  \"Livepeer.Player\": 0,\n  \"Livepeer.Player.demo\": 0,\n  \"Library.Overview\": 0,\n};\nconst widgetsObj = convertToNestedObject(widgets);\n\nconst tabContent = () => {\n  const hasDemo = widgets[`${state.widget}.demo`] !== undefined;\n  return (\n    <Content className=\"container\">\n      <div>\n        <Widget\n          src={`${ROOT_ACCOUNT}/widget/${state.widget}${\n            hasDemo ? \".demo\" : \"\"\n          }`}\n          props={{\n            demoMode: true,\n          }}\n        />\n      </div>\n    </Content>\n  );\n};\n\nconst widgetsKeys = Object.keys(widgetsObj)\n  .sort((a, b) => {\n    if (a.toLowerCase() > b.toLowerCase()) return 1;\n    if (a.toLowerCase() < b.toLowerCase()) return -1;\n    return 0;\n  })\n  .sort((a, b) => {\n    if (typeof widgetsObj[a] === \"object\") return 1;\n    return -1;\n  });\nreturn (\n  <Wrapper>\n    <Sidebar>\n      {widgetsKeys.map((folder) => {\n        if (typeof widgetsObj[folder] !== \"object\") {\n          return (\n            <a\n              href={`https://near.social/${ROOT_ACCOUNT}/widget/Library.index?widget=${folder}`}\n              onClick={() => {\n                State.update({\n                  widget: folder,\n                });\n              }}\n              className={state.widget === folder ? \"active\" : \"\"}\n            >\n              {folder}\n            </a>\n          );\n        }\n        return (\n          <div>\n            <h3>{folder}</h3>\n            {Object.keys(widgetsObj[folder])\n              .sort((a, b) => {\n                if (a.toLowerCase() > b.toLowerCase()) return 1;\n                if (a.toLowerCase() < b.toLowerCase()) return -1;\n                return 0;\n              })\n              .map((widget) => {\n                const fullWidgetName = `${folder}.${widget}`;\n                return (\n                  <a\n                    href={`https://near.social/${ROOT_ACCOUNT}/widget/Library.index?widget=${fullWidgetName}`}\n                    onClick={() => {\n                      State.update({\n                        widget: fullWidgetName,\n                      });\n                    }}\n                    className={state.widget === fullWidgetName ? \"active\" : \"\"}\n                  >\n                    {widget}\n                  </a>\n                );\n              })}\n          </div>\n        );\n      })}\n    </Sidebar>\n    {tabContent()}\n  </Wrapper>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/video.every.near/widget/Library.index", "fact_widget_deployments_id": "aa00686ed191516add2c6c337d5b6542", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 5}