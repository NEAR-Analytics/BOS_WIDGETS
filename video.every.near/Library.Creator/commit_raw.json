{"tx_hash": "FdWkoikZHnaGQgBhASDC7wJ1D8uLVA691pmYNQ744ikU", "action_id_social": "DffThbutw3HBXurgtLF45ZVbma39XCqqbzPmbSxUiDg1-0-widget", "block_id": 117052998, "block_timestamp": "2024-04-17T18:16:25.287Z", "signer_id": "video.every.near", "widget_name": "Library.Creator", "source_code": "const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 32px;\n  h1 {\n    color: #292c2a;\n    font-family: Poppins;\n    font-size: 24px;\n    font-weight: 500;\n    line-height: 130%; /* 31.2px */\n    letter-spacing: -0.48px;\n    margin: 0;\n  }\n`;\nconst Heading = styled.h3`\n  color: #292c2a;\n  font-family: Poppins;\n  font-size: 18px;\n  font-weight: 500;\n  line-height: 150%; /* 27px */\n  letter-spacing: -0.18px;\n  margin-bottom: 8px;\n`;\nconst PreviewContent = styled.div`\n  grid-column: span 9 / span 9;\n  border-radius: 24px;\n  border: 1px solid #c7c7c7;\n  padding: 4rem;\n  word-break: normal;\n`;\nconst WidgetCode = `\n\\`\\`\\`js\n<// Use Files if you need the user to upload a video asset from file system\n<Files\n  multiple={false}\n  accepts={[\"video/*\"]}\n  minFileSize={1}\n  clickable\n  className=\"files-button\"\n  onChange={(files) => {\n    if (!files || !files.length) return;\n    const [body] = files;\n    State.update({ currentUpload: body });    \n  }}\n  >\n  Stage Video\n</Files>\n<Widget\n  src={\"efiz.near/widget/Livepeer.Creator\"}\n  props={{\n    video: state.currentUpload,\n    metadata: { title, description },\n    handleStatus: (status) => { console.log(status) },\n    handleProgress: (progress) => { console.log(progress) },\n    handleError: (error) => { console.log(assets) },\n    handleAssets: (assets) => { console.log(assets) },\n    Button: ({ onClick, disabled }) => (\n      <button onClick={onClick} disabled={disabled}>\n        Upload to Livepeer\n      </button>\n    ),\n  }}\n/>\n\\`\\`\\`\n`;\nconst UsageContent = styled.div`\n  pre {\n    div {\n      padding: 1.5rem !important;\n      border-radius: 1.5rem;\n    }\n  }\n`;\nconst PropertiesContent = styled.div`\n  grid-column: span 9 / span 9;\n  border-radius: 24px;\n  border: 1px solid #c7c7c7;\n  padding: 1rem;\n  word-break: normal;\n  overflow-x: scroll;\n  table {\n    border-radius: 24px;\n    overflow: hidden;\n  }\n`;\nconst PoweredBy = styled.h3`\n  display: flex;\n  align-items: center;\n  gap: 4px;\n  color: #a5a5a5 !important;\n  font-family: Poppins;\n  font-size: 12px !important;\n  line-height: 140% !important; /* 16.8px */\n  font-weight: 400 !important;\n  letter-spacing: -0.12px !important;\n  margin-bottom: 8px !important;\n  img {\n    height: 12px;\n    width: auto;\n    object-fit: cover;\n  }\n`;\nreturn (\n  <Container>\n    <div>\n      <PoweredBy>\n        Powered by{\" \"}\n        <img src=\"https://ipfs.near.social/ipfs/bafkreia4rl6nknogzwwcj5qjladmgytyufxyl56fgr6nfjbwc6l5f6in4y\" />\n      </PoweredBy>\n      <h1\n        style={{\n          fontSize: \"28px\",\n        }}\n      >\n        Creator\n      </h1>\n    </div>\n    <div>\n      <Heading> Preview </Heading>\n      <PreviewContent>\n        <Files\n          multiple={false}\n          accepts={[\"video/*\"]}\n          minFileSize={1}\n          clickable\n          className=\"files-button\"\n          onChange={(files) => {\n            if (!files || !files.length) return;\n            const [body] = files;\n            State.update({ currentUpload: body });\n          }}\n        >\n          Stage Video\n        </Files>\n        <Widget\n          src={\"efiz.near/widget/Livepeer.Creator\"}\n          props={{\n            video: state.currentUpload,\n            metadata: { title, description },\n            handleStatus: (status) => {\n              console.log(status);\n            },\n            handleProgress: (progress) => {\n              console.log(progress);\n            },\n            handleError: (error) => {\n              console.log(assets);\n            },\n            handleAssets: (assets) => {\n              console.log(assets);\n            },\n            Button: ({ onClick, disabled }) => (\n              <button onClick={onClick} disabled={disabled}>\n                Upload to Livepeer\n              </button>\n            ),\n          }}\n        />\n      </PreviewContent>\n    </div>\n    <UsageContent>\n      <Heading>Usage</Heading>\n      <Markdown text={WidgetCode} />\n    </UsageContent>\n    <div>\n      <Heading>Properties</Heading>\n      <PropertiesContent>\n        <table class=\"table table-striped\">\n          <thead>\n            <tr>\n              <th>Prop Name</th>\n              <th>Type/Values</th>\n              <th>Default Value</th>\n              <th>Description</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td\n                style={{\n                  fontFamily: \"monospace\",\n                }}\n              >\n                video\n              </td>\n              <td>File</td>\n              <td\n                style={{\n                  fontFamily: \"monospace\",\n                }}\n              >\n                N/A\n              </td>\n              <td>The video file to upload.</td>\n            </tr>\n            <tr>\n              <td\n                style={{\n                  fontFamily: \"monospace\",\n                }}\n              >\n                metadata\n              </td>\n              <td>Object</td>\n              <td\n                style={{\n                  fontFamily: \"monospace\",\n                }}\n              >\n                N/A\n              </td>\n              <td>The metadata for the video.</td>\n            </tr>\n            <tr>\n              <td\n                style={{\n                  fontFamily: \"monospace\",\n                }}\n              >\n                handleStatus\n              </td>\n              <td>Function</td>\n              <td\n                style={{\n                  fontFamily: \"monospace\",\n                }}\n              >\n                N/A\n              </td>\n              <td>A callback function for status updates.</td>\n            </tr>\n            <tr>\n              <td\n                style={{\n                  fontFamily: \"monospace\",\n                }}\n              >\n                handleProgress\n              </td>\n              <td>Function</td>\n              <td\n                style={{\n                  fontFamily: \"monospace\",\n                }}\n              >\n                N/A\n              </td>\n              <td>A callback function for progress updates.</td>\n            </tr>\n            <tr>\n              <td\n                style={{\n                  fontFamily: \"monospace\",\n                }}\n              >\n                handleError\n              </td>\n              <td>Function</td>\n              <td\n                style={{\n                  fontFamily: \"monospace\",\n                }}\n              >\n                N/A\n              </td>\n              <td>A callback function for error updates.</td>\n            </tr>\n            <tr>\n              <td\n                style={{\n                  fontFamily: \"monospace\",\n                }}\n              >\n                handleAssets\n              </td>\n              <td>Function</td>\n              <td\n                style={{\n                  fontFamily: \"monospace\",\n                }}\n              >\n                N/A\n              </td>\n              <td>A callback function for asset updates.</td>\n            </tr>\n            <tr>\n              <td\n                style={{\n                  fontFamily: \"monospace\",\n                }}\n              >\n                Button\n              </td>\n              <td>Function/ReactNode</td>\n              <td\n                style={{\n                  fontFamily: \"monospace\",\n                }}\n              >\n                N/A\n              </td>\n              <td>A custom component to render the button for uploading.</td>\n            </tr>\n            <tr>\n              <td\n                style={{\n                  fontFamily: \"monospace\",\n                }}\n              >\n                debug\n              </td>\n              <td>Boolean</td>\n              <td\n                style={{\n                  fontFamily: \"monospace\",\n                }}\n              >\n                false\n              </td>\n              <td>Whether to log debug messages or not.</td>\n            </tr>\n            <tr>\n              <td\n                style={{\n                  fontFamily: \"monospace\",\n                }}\n              >\n                ...props\n              </td>\n              <td>any</td>\n              <td\n                style={{\n                  fontFamily: \"monospace\",\n                }}\n              >\n                N/A\n              </td>\n              <td>\n                Any other props will be passed to the underlying{\" \"}\n                <a\n                  target=\"_blank\"\n                  href=\"https://docs.livepeer.org/reference/livepeer-js/asset/useCreateAsset\"\n                >\n                  Livepeer Asset Creator\n                </a>\n                .\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </PropertiesContent>\n    </div>\n  </Container>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/video.every.near/widget/Library.Creator", "fact_widget_deployments_id": "4686917ef63f3ed10250f4bf4f70a905", "inserted_timestamp": "2024-04-17T19:42:32.678Z", "modified_timestamp": "2024-04-17T19:42:32.678Z", "__row_index": 0}