{"tx_hash": "B1CMBh3UQvUrRhGdkHF7gJXVSbzSrf6y73mhEGvostaq", "action_id_social": "7jWZjQPGEREDov79rvhEAKLa2Q9nxYZ1FXvjZCJ2ZkTW-0-widget", "block_id": 109684682, "block_timestamp": "2024-01-05T21:51:32.330Z", "signer_id": "memelol.near", "widget_name": "lol.Pages.Home", "source_code": "const { assets, content, contractName } = props;\nconst { format, Token } = VM.require(`memelol.near/widget/lol.Utils`);\nconst { Snow } = VM.require(`memelol.near/widget/lol.Components.Snow`);\nconst { Button } = VM.require(`memelol.near/widget/lol.Components.Button`);\n\nconst Container = styled.div`\n  width: 100%;\n  height: max-content;\n  overflow: hidden;\n`;\n\nconst InfoSection = styled.div`\n  flex-direction: row;\n\n  .btn {\n    width: 100%;\n    max-width: 400px;\n    padding: 15px 25px 15px 50px;\n\n    @media screen and (max-width: 786px) {\n      max-width: 100%;\n    }\n  }\n\n  @media screen and (max-width: 786px) {\n    flex-direction: column;\n  }\n`;\n\nconst Section = styled.div`\n  padding: 1rem 3rem;\n  border: 3px solid black;\n  border-radius: 20px;\n  width: 100%;\n  background: ${(props) => props.color};\n  justify-content: center;\n\n  &.banner-img {\n    border-radius: 20px;\n    width: 100%;\n    background-image: url(${assets.banner});\n    background-repeat: no-repeat;\n    background-size: cover;\n    background-position: center;\n  }\n\n  &.prize-img {\n    border-radius: 20px;\n    width: 100%;\n    height: 100%;\n    background-image: url(${assets.bannerPrize});\n    background-size: contain;\n    background-position: center;\n  }\n\n  &.notbad-img {\n    border-radius: 20px;\n    width: 100%;\n    height: 100%;\n    background-image: url(${assets.notbad});\n    background-size: 200px 200px;\n    background-position: center;\n  }\n\n  .wrapper {\n    width: 100%;\n    flex-direction: row;\n\n    @media screen and (max-width: 786px) {\n      width: 100%;\n      flex-direction: column;\n    }\n\n    .mint-section {\n      box-shadow: 0px 20px 30px 0px rgba(0, 0, 0, 0.5);\n      width: 100%;\n      max-width: 600px;\n      background: rgb(255 255 255 / 90%);\n      display: flex;\n      flex-direction: column;\n      gap: 2rem;\n      align-items: center;\n      justify-content: center;\n      text-align: center;\n      padding: 2rem;\n      border: 3px solid black;\n      border-radius: 20px;\n      z-index: 2;\n\n      @media screen and (max-width: 786px) {\n        max-width: 100%;\n      }\n\n      &.my-stats {\n        max-width: 300px;\n        background: rgb(255 214 255 / 90%);\n\n        @media screen and (max-width: 786px) {\n          max-width: 100%;\n        }\n      }\n\n      .mint-rules {\n        display: flex;\n        flex-direction: column;\n        box-shadow: 0px 20px 30px 0px rgba(0, 0, 0, 0.2);\n        border: 3px solid black;\n        border-radius: 20px;\n        padding: 1.5rem;\n        gap: 0.1rem;\n        text-align: left;\n        background: rgb(148 182 255 / 30%);\n      }\n    }\n  }\n\n  .winners-list {\n    margin: 2rem 0;\n    width: 75%;\n    z-index: 2;\n\n    @media screen and (max-width: 786px) {\n      width: 100%;\n    }\n  }\n\n  .stat {\n    width: 25%;\n    margin: 0;\n    flex-direction: column;\n\n    @media screen and (max-width: 786px) {\n      flex-direction: row;\n      margin: 10px;\n      justify-content: space-between;\n      width: 100%;\n    }\n  }\n\n  @media screen and (max-width: 786px) {\n    padding: 1rem;\n  }\n`;\n\nconst Overlay = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  text-align: center;\n  border-radius: 18px;\n  padding: 3rem;\n  background-color: ${(props) => props.color};\n\n  @media screen and (max-width: 786px) {\n    padding: 2rem;\n  }\n`;\n\nconst Card = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  gap: 1rem;\n  background: #fff;\n  text-align: center;\n  border: 3px solid black;\n  border-radius: 20px;\n  width: 210px;\n  height: 345px;\n  box-shadow: 0px 20px 30px 0px rgba(0, 0, 0, 0.25);\n\n  h1 {\n    line-height: 1rem;\n  }\n\n  h3 {\n    width: 100px;\n  }\n\n  .meme {\n    width: 130px;\n    height: 130px;\n  }\n\n  .avaliability {\n    background: ${(props) => props.color};\n    border-top: 3px solid black;\n    border-radius: 0 0 18px 18px;\n  }\n`;\n\nconst [stats, setStats] = useState({\n  participants: 0,\n  receivedNear: 0,\n  boxes: [],\n  boxesLeft: 0,\n  receivedLoL: 0,\n  startDate: 1704531600000,\n});\n\nconst Stats = ({ text, value, near }) => (\n  <div className=\"stat d-flex gap-1 align-items-center\">\n    <div>\n      <h4>{text}</h4>\n    </div>\n    {near != undefined ? (\n      <Token near={near} size={25}>\n        <h3 className=\"font\">{format(value)}</h3>\n      </Token>\n    ) : (\n      <h3 className=\"font\">{format(value)}</h3>\n    )}\n  </div>\n);\n\nconst receivedNear = (boxes, rewards) => {\n  if (!boxes) return 0;\n\n  const totalBoxes = [4449, 5000, 500, 50, 1];\n  const total = totalBoxes\n    .map((box, i) => box * rewards[i])\n    .reduce((a, b) => a + b, 0);\n  const available = boxes\n    .map((box, i) => box * rewards[i])\n    .reduce((a, b) => a + b, 0);\n\n  return total - available;\n};\n\nconst receivedLol = (stats) =>\n  format(\n    new Big(stats[0] || 0)\n      .minus(new Big(stats[1] || 0))\n      .minus(new Big(stats[2] || 0))\n      .toNumber(),\n    24,\n  );\n\nconst fetchStats = () => {\n  const stats = Near.view(contractName, \"get_total_stats\");\n\n  setStats({\n    participants: stats[0],\n    boxes: stats[1],\n    boxesLeft: stats[2],\n    receivedNear: receivedNear(stats[1], stats[5]),\n    receivedLoL: receivedLol(stats[4]),\n    startDate: stats[6]\n      ? Big(stats[6] || 0)\n          .div(1000 * 1000)\n          .toNumber()\n      : 0,\n  });\n};\n\nfetchStats();\n\nreturn (\n  <Container className=\"d-flex flex-column gap-4\">\n    <InfoSection className=\"d-flex gap-3\">\n      <Section\n        className=\"d-flex justify-content-center align-items-center gap-3\"\n        color=\"#efefef\"\n      >\n        <h3 className=\"font pb-2\">Minting starts in</h3>\n        <Widget\n          src=\"memelol.near/widget/lol.Components.Countdown\"\n          props={{ startDate: stats.startDate }}\n        />\n      </Section>\n      <Button className=\"btn\">\n        <a\n          href={content.shareLink}\n          className=\"w-100 d-flex justify-content-between align-items-center\"\n        >\n          <span>Share to get FREE LOL</span>\n          <i className=\"bi bi-share\" />\n        </a>\n      </Button>\n    </InfoSection>\n    <Section className=\"p-0 position-relative banner-img\">\n      <Overlay color=\"rgb(89 110 255 / 80%)\">\n        <div className=\"wrapper d-flex align-items-center gap-3 justify-content-center\">\n          <div className=\"mint-section\">\n            <h1 className=\"font\">NEW YEAR MINT \ud83c\udf89</h1>\n            <div className=\"mint-rules\">\n              <h5>1. Mint Boxes.</h5>\n              <h5>\n                2. Receive <b>LOL</b> and/or <b>NEAR</b> rewards.\n              </h5>\n              <h5>3. Share your results.</h5>\n              <h5>\n                4. Trade <b>LOL{\"<>\"}NEAR</b> after quest ends.\n              </h5>\n            </div>\n            <Widget\n              src=\"memelol.near/widget/lol.Components.MintBox\"\n              props={{\n                contractName,\n                canMint: new Date(stats.startDate) <= new Date(),\n              }}\n            />\n          </div>\n          <Widget\n            src={`memelol.near/widget/lol.Components.MyStats`}\n            props={{ contractName, transactionHashes: props.transactionHashes }}\n          />\n        </div>\n        <Snow />\n      </Overlay>\n    </Section>\n\n    <Section className=\"p-0 prize-img\">\n      <Overlay color=\"rgb(255 242 158 / 90%)\">\n        <div className=\"text-center font mb-5\">\n          <h1>Limited Prizes \ud83c\udf81</h1>\n        </div>\n        {content.prizes && (\n          <div className=\"d-flex flex-wrap gap-4 justify-content-center\">\n            {content.prizes.map((prize, i) => (\n              <div key={`prize-${i}`}>\n                <Card color={prize.color}>\n                  <div className=\"d-flex p-2 pt-4 flex-column align-items-center\">\n                    <img className=\"meme\" src={prize.src} />\n                    <div className=\"d-flex flex-column gap-1\">\n                      <span className=\"font\">Reward</span>\n\n                      {prize.amountNear ? (\n                        <>\n                          <Token near size={40}>\n                            <h2>{prize.amountNear}</h2>\n                          </Token>\n                          <Token size={25}>\n                            <h4>{prize.amountLoL}</h4>\n                          </Token>\n                        </>\n                      ) : (\n                        <Token size={40}>\n                          <h3>{prize.amountLoL}</h3>\n                        </Token>\n                      )}\n                    </div>\n                  </div>\n                  <div className=\"avaliability d-flex p-2 flex-column justify-content-between\">\n                    <h5 className={\"nowrap\"}>\n                      <small>Available:</small> <b>{format(stats.boxes[i])}</b>\n                    </h5>\n                  </div>\n                </Card>\n              </div>\n            ))}\n          </div>\n        )}\n      </Overlay>\n    </Section>\n    <Section\n      className=\"d-flex p-4 flex-wrap align-items-center justify-content-center\"\n      color=\"rgb(255 177 255)\"\n    >\n      <Stats text=\"Participants\" value={stats.participants} />\n      <Stats text=\"Boxes Left\" value={stats.boxesLeft} />\n      <Stats near={true} text=\"Near Collected\" value={stats.receivedNear} />\n      <Stats near={false} text=\"LOL Collected\" value={stats.receivedLoL} />\n    </Section>\n    <Section className=\"p-0 notbad-img\">\n      <Overlay color=\"rgb(148 182 255 / 90%)\">\n        <div className=\"text-center font\">\n          <h1>TOP Winners</h1>\n        </div>\n        <Widget\n          src={`memelol.near/widget/lol.Components.Leaderboard`}\n          props={{ contractName, assets }}\n        />\n      </Overlay>\n    </Section>\n    <Section\n      className=\"d-flex flex-column align-items-center justify-content-center\"\n      color=\"#efefef\"\n    >\n      <div className=\"text-center font\">\n        <h1>FAQ</h1>\n      </div>\n      <div className=\"d-flex mt-3 flex-column w-100 gap-2\">\n        {content.FAQ.map((faq, index) => (\n          <Widget\n            src=\"memelol.near/widget/lol.Components.FAQ\"\n            props={{ faq, index }}\n          />\n        ))}\n      </div>\n    </Section>\n  </Container>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/memelol.near/widget/lol.Pages.Home", "fact_widget_deployments_id": "ceaaeee15c9f344532e4cbb76ba1245f", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 2}