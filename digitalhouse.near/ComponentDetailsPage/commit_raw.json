{"tx_hash": "7LkwtEpv5kqV7yKjvLzv6dFXJJLy1rcdmaUivjHJbsrV", "action_id_social": "6TKW6jfjsMqmprgwunyApNmW1yiYupQKtYzgk7hWZnxA-0-widget", "block_id": 112016086, "block_timestamp": "2024-02-03T14:28:02.314Z", "signer_id": "digitalhouse.near", "widget_name": "ComponentDetailsPage", "source_code": "const accountId = \"digitalhouse.near\"; //props.tgId ?? context.accountId ?? \"name.tg\";\nconst contactId = \"game.hot.tg\";\n\nconst loadAccount = (userAccountId) => {\n  let accountId = userAccountId ?? state.accountId;\n  if (accountId && accountId.trim() != \"\") {\n    let data = Near.view(contactId, \"get_user\", {\n      account_id: accountId.trim(),\n    });\n\n    if (data) {\n      console.log(\"Loading data for\", accountId, data);\n    }\n\n    State.update({ data });\n\n    if (!state.timerIsOn) {\n      setInterval(() => {\n        State.update((state) => ({\n          ...state,\n          nonce: !!state.pause ? state.nonce : state.nonce + 1,\n        }));\n      }, 1000);\n      State.update({ timerIsOn: true });\n    }\n  }\n};\n\nuseEffect(() => {\n  loadAccount();\n}, [state.accountId]);\n\nif (!state.data) {\n  loadAccount();\n}\n\nif (state === undefined) {\n  State.init({ accountId, nonce: 0 });\n}\n\nif (!state.assets) {\n  let assets = Near.view(contactId, \"get_assets\");\n  State.update({ assets });\n}\n\nconst inputNearAccount = (\n  <div class=\"mb-3\">\n    <div class=\"mb-2\">\n      Input NEAR Telegram account (name.tg)\n      <input\n        type=\"text\"\n        value={state.accountId}\n        onFocus={() => State.update({ pause: true })}\n        onBlur={() => State.update({ pause: false })}\n        onPaste={() => State.update({ pause: false })}\n        onChange={(e) => State.update({ accountId: e.target.value })}\n      />\n    </div>\n    <button onClick={() => loadAccount()}>Check</button>\n  </div>\n);\n\nif (!state.data || !state.assets) {\n  return (\n    <div>\n      {inputNearAccount}\n      <div class=\"alert alert-dark\" role=\"alert\">\n        Data for {state.accountId} was not found. Join{\" \"}\n        <a\n          href=\"https://t.me/herewalletbot/app?startapp=469973\"\n          target=\"_blank\"\n        >\n          NEAR Telegram wallet\n        </a>{\" \"}\n        to mine $HOT.\n      </div>\n    </div>\n  );\n}\nconst lastClaim = state.data.last_claim;\n\nconsole.log(\"lastClaim\", lastClaim);\n\nconst lastClaimDate = new Date(lastClaim / 10000);\n\nconst storageAsset = state.assets.filter(\n  (asset) => asset.id == state.data.storage\n)?.[0];\n\nconst nextClaimDate = new Date((lastClaim + storageAsset.value) / 1000000);\n\nconst toHHMMSS = (value) => {\n  var sec_num = parseInt(value / 1000, 10);\n  var hours = Math.floor(sec_num / 3600);\n  var minutes = Math.floor((sec_num - hours * 3600) / 60);\n  var seconds = sec_num - hours * 3600 - minutes * 60;\n\n  if (hours < 10) {\n    hours = \"0\" + hours;\n  }\n  if (minutes < 10) {\n    minutes = \"0\" + minutes;\n  }\n  if (seconds < 10) {\n    seconds = \"0\" + seconds;\n  }\n  return hours + \":\" + minutes + \":\" + seconds;\n};\n\nuseEffect(() => {\n  if (Number(nextClaimDate) > 0) {\n    let claimBlock = (\n      <div>\n        Next claim date: {nextClaimDate.toLocaleTimeString()}{\" \"}\n        {nextClaimDate.toLocaleDateString()}\n        {nextClaimDate < new Date() ? (\n          <div class=\"alert alert-warning\" role=\"alert\">\n            <div>Time to claim!</div>\n            <button onClick={() => Near.call(contactId, \"claim\")}>\n              Claim $HOT\n            </button>\n          </div>\n        ) : (\n          <div class=\"alert alert-success\" role=\"alert\">\n            Claim in {toHHMMSS(nextClaimDate - new Date())}\n          </div>\n        )}\n      </div>\n    );\n    State.update({ claimBlock });\n  }\n}, [state.nonce]);\n\nreturn (\n  <div>\n    {inputNearAccount}\n    {state.claimBlock ?? <div>Loading</div>}\n    <div>\n      Storage asset power: {storageAsset.value / 1000000000 / 60} minutes{\" \"}\n    </div>\n  </div>\n);\n", "metadata": {"fork_of": "nkursun.near/widget/ComponentDetailsPage@112011638", "image": {"ipfs_cid": "bafkreicrqsokji3xhbay3h2cwxtaizi3gpdzdmtnxi2xxxjdtk2cgbxjb4"}, "name": "Hot Token Claim"}, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/digitalhouse.near/widget/ComponentDetailsPage", "fact_widget_deployments_id": "1b46bd3f61bec5beb3e977e722d732db", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 18}