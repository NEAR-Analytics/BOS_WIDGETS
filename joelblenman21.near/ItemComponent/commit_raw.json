{"tx_hash": "DRo4NfYoeUkDfNn8CJSLKa2SvZbRoVzUdZUaCTkWV41x", "action_id_social": "Dx6w3kQFCbTQmepuBrGQK9giNuXK4iYqAV5TUDreD2aU-0-widget", "block_id": 101833519, "block_timestamp": "2023-09-24T07:54:30.399Z", "signer_id": "joelblenman21.near", "widget_name": "ItemComponent", "source_code": "const Picture = styled.div`\n  border-radius: var(--br-xs);\n  height: 173px;\n  overflow: hidden; // Prevents the image from overflowing its container\n  \n  img {\n    width: 100%; // Make the image stretch or shrink to fit the width of the container\n    height: 100%; // Make the image stretch or shrink to fit the height of the container\n    object-fit: cover; // Cover the entire content box, potentially cutting off the image\n    object-position: center; // Center the image within its container\n  }\n`;\n\nconst ItemTitle = styled.div`\n  font-size: 16px;\n  font-weight: 500;\n`;\n\nconst ItemDescription = styled.div`\n  font-family: var(--font-roboto-slab);\n  color: #666;\n  width: 256px;\n`;\n\nconst TagOrButton = styled.div`\n  flex: 1;\n`;\n\nconst ItemComponent1 = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  align-self: stretch;\n  background-color: var(--color-white);\n  align-items: flex-start;\n  text-align: center;\n  color: var(--color-white);\n`;\n\nconst Tag = styled.div`\n  color: #000;\n  display: flex;\n  justify-content: flex-end;\n  width: 72px;\n  padding: var(--padding-5xs) 0;\n`;\n\nconst ItemDescriptionParent = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n`;\n\nconst ItemComponent = styled.div`\n  border-radius: var(--br-xs);\n  padding: 24px;\n  box-sizing: border-box;\n  text-align: left;\n  font-size: var(--font-size-sm);\n  color: #000;\n  font-family: var(--font-inter);\n  display: flex;\n  align-items: flex-start;\n  justify-content: flex-start;\n`;\n\nconst Container = styled.div`\n  background-color: #f2f2f2;\n  height: 100%;\n  display: flex;\n  width:fit-content;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  border-radius: 12px;\n  border-width:solid;\n  border-size: 2;\n`;\nconst AddToCartButton = styled.button`\n  margin-top: 16px;\n  padding: 12px 24px;\n  background-color: #3838f4; // or any desired color\n  color: #fff;\n  border: none;\n  border-radius: var(--br-xs);\n  cursor: pointer;\n  transition: background-color 0.3s;\n\n  &:hover {\n    background-color: #2727d4; // a slightly darker shade for hover effect\n  }\n`;\n\nState.init({\n  selectedItems: [],\n});\nconst handleAddToCart = props.handleAddToCart || (() => {});\n// const handleAddToCart = (title) => {\n//   console.log(\"This is the title: \", title);\n//   // check if already selected\n//   if (state.selectedElements.includes(title)) {\n//     // if already selected, remove check\n//     const updatedItems = state.selectedElements.filter(\n//       (elementId) => elementId !== title\n//     );\n//     // update in local storage so it can be picked up by the cart\n//     Storage.set(\"cart-items\", JSON.stringify(updatedElements));\n//     // update in state, so there is a smooth experience\n//     State.update({\n//       selectedElements: updatedItems,\n//     });\n//   } else {\n//     // not selected, so add to array\n//     const updatedElements = [...state.selectedElements, title];\n//     // update in local storage so it can be picked up by the cart\n//     Storage.set(\"cart-items\", JSON.stringify(updatedElements));\n//     // update in state, so there is a smooth experience\n//     State.update({\n//       selectedElements: updatedElements,\n//     });\n//   }\n// };\n\nState.init({\n  selectedItems: [],\n});\n\nreturn (\n  <Container>\n    <ItemComponent>\n      <Content>\n        <Picture>\n          <img src={props.item.image} />\n        </Picture>\n        <ItemDescriptionParent>\n          <ItemTitle>{props.item.title}</ItemTitle>\n          <ItemDescription>{props.item.description}</ItemDescription>\n          <ItemComponent1>\n            <Tag>\n              <TagOrButton>{props.item.price}</TagOrButton>\n            </Tag>\n          </ItemComponent1>\n          <AddToCartButton onClick={() => handleAddToCart(props.item.title)}>\n            Add to Cart\n          </AddToCartButton>\n        </ItemDescriptionParent>\n      </Content>\n    </ItemComponent>\n  </Container>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/joelblenman21.near/widget/ItemComponent", "fact_widget_deployments_id": "63ba22158582948134cffdcdb8352096", "inserted_timestamp": "2023-09-24T09:49:45.109Z", "modified_timestamp": "2023-09-24T09:49:45.109Z", "__row_index": 3}