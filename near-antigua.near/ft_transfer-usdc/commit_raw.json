{"tx_hash": "BsT1Yf7M8tRfHvb6pXJRrXAxPw947ap3DNbKtR448Jw1", "action_id_social": "FdKFsuhzY3qd1fP4PNo5M8i3qWCwwEnferzPnS3nL1r3-0-widget", "block_id": 113773126, "block_timestamp": "2024-02-28T20:38:03.392Z", "signer_id": "near-antigua.near", "widget_name": "ft_transfer-usdc", "source_code": "// Define the NEAR account ID\nconst accountId = context.accountId;\n\n// Set default values for token and receiver\nlet token =\n  props.token || \"a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48.factory.bridge.near\";\nlet receiver = props.receiver || \"chloe.near\";\n\n// Initialize balance to 1 and decimals to 0\nlet balance = 1;\nlet decimals = 0;\n\n// Initialize state with default values\ninitState({ amount: 1, token, receiver, balance, decimals });\n\n// Function to get the balance of the token and its decimals\nconst getTokenInfo = () => {\n  const metadata = Near.view(state.token, \"ft_metadata\", {});\n  decimals = metadata.decimals;\n  State.update({\n    decimals,\n  });\n};\n\n// Function to get the balance of the token\nconst getBalance = () => {\n  balance = Near.view(state.token, \"ft_balance_of\", {\n    account_id: accountId,\n  });\n  // Update state with the balance\n  State.update({\n    balance,\n  });\n};\n\n// Get the initial balance and token info\ngetBalance();\ngetTokenInfo();\n\n// Function to send tokens\nconst send = () => {\n  Near.call(\n    state.token,\n    \"ft_transfer\",\n    {\n      receiver_id: state.receiver,\n      amount: state.amount.toString(), // Convert amount to string\n    },\n    undefined,\n    \"1\"\n  );\n};\n\n// Function to handle amount change\nconst onChangeAmount = (amount) => {\n  // Update state with the new amount\n  State.update({\n    amount: amount,\n  });\n};\n\n// Function to handle receiver change\nconst onChangeReceiver = (receiver) => {\n  // Update state with the new receiver\n  State.update({\n    receiver,\n  });\n};\n\n// Function to handle token change\nconst onChangeToken = (token) => {\n  // Update state with the new token\n  State.update({\n    token,\n  });\n  // Refresh balance and token info when token changes\n  getBalance();\n  getTokenInfo();\n};\n\n// Function to format balance\nconst formatBalance = (balance, decimals) => {\n  const formattedBalance = (balance / Math.pow(10, decimals)).toFixed(decimals);\n  return formattedBalance;\n};\n\n// JSX for the component\nreturn (\n  <div>\n    <h2>Sender</h2>\n    <ul>\n      <li>Address: {accountId}</li>\n      <li>\n        Balance of {state.token}: {formatBalance(state.balance, state.decimals)}\n      </li>\n      <li>Decimals: {state.decimals}</li>\n    </ul>\n\n    <h2>Token Address</h2>\n    <p>\n      <input\n        placeholder={state.token}\n        onChange={(e) => onChangeToken(e.target.value)}\n      />\n    </p>\n\n    <h2>Receiver Address</h2>\n    <p>\n      <input\n        placeholder={state.receiver}\n        onChange={(e) => onChangeReceiver(e.target.value)}\n      />\n    </p>\n\n    <h2>Token Amount</h2>\n    <p>\n      <input\n        type=\"number\"\n        placeholder={state.amount}\n        onChange={(e) => onChangeAmount(e.target.value)}\n      />\n    </p>\n\n    <p>\n      <button\n        disabled={context.loading}\n        onClick={send}\n        className={`btn ${\n          context.loading ? \"btn-outline-dark\" : \"btn-primary\"\n        }`}\n      >\n        Send {state.amount} {state.token} to {state.receiver}\n      </button>\n    </p>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/near-antigua.near/widget/ft_transfer-usdc", "fact_widget_deployments_id": "47f93046ec27af717dd8ce2c0b1f8dfb", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 36}