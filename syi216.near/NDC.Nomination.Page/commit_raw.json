{"tx_hash": "CCvr3VmvfEC56bdVzXUtjGns92DGtM3RmuejqHthCHaN", "action_id_social": "FmWf28X69PmGRLNLxJm82VyeUUPgG4A2dNuCBFLQ5jQS-0-widget", "block_id": 95715734, "block_timestamp": "2023-07-04T22:48:17.515Z", "signer_id": "syi216.near", "widget_name": "NDC.Nomination.Page", "source_code": "// TODO: Should be grabbed from contract side\nlet { ids, org } = props;\nids = props.ids ? ids : [1, 2, 3]; // for testing purposes\norg = props.org ? org : \"test\"; // for testing purposes\n\nconst electionContract = \"elections-v1.gwg-testing.near\";\nconst registryContract = \"registry-v1.gwg-testing.near\";\nconst apiKey = \"36f2b87a-7ee6-40d8-80b9-5e68e587a5b5\";\n\nconst houses = [\n  Near.view(electionContract, \"proposal\", { prop_id: ids[0] }),\n  Near.view(electionContract, \"proposal\", { prop_id: ids[1] }),\n  Near.view(electionContract, \"proposal\", { prop_id: ids[2] }),\n];\n\nconst widgets = {\n  header: \"syi216.near/widget/NDC.Nomination.Header\",\n  houses: \"rubycop.near/widget/NDC.Elections.Houses\",\n  card: \"syi216.near/widget/NDC.nomination.card\",\n};\n\nState.init({\n  selectedHouse: ids[0],\n  house: \"HouseOfMerit\",\n  start: true,\n  nominations: [],\n  verified: false,\n  selfNomination: false,\n});\n//\n\nfunction handleNominations(data) {\n  State.update({ nominations: data });\n}\n\nfunction getVerifiedHuman() {\n  asyncFetch(\n    `https://api.pikespeak.ai/sbt/has-sbt?holder=${context.accountId}&class_id=1&issuer=fractal.i-am-human.near&with_expired=true`,\n    {\n      headers: {\n        \"x-api-key\": \"36f2b87a-7ee6-40d8-80b9-5e68e587a5b5\",\n      },\n    }\n  ).then((res) => {\n    console.log(res.body);\n    State.update({ verified: res.body });\n  });\n}\n\nfunction getNominationInfo() {\n  let nominationsArr = [];\n  asyncFetch(\n    `https://api.pikespeak.ai/nominations/house-nominations?house=${state.house}`,\n    {\n      headers: {\n        \"x-api-key\": \"36f2b87a-7ee6-40d8-80b9-5e68e587a5b5\",\n      },\n    }\n  ).then((res) => {\n    for (const [i, data] of res.body.entries()) {\n      let profileData;\n      let nominationData;\n      Social.getr(`${data.nominee}/profile`);\n      Social.getr(`${data.nominee}/nominations`);\n      setTimeout(() => {\n        profileData = Social.getr(`${data.nominee}/profile`);\n        nominationData = Social.getr(`${data.nominee}/nominations`);\n        console.log(\"profileData: \" + profileData);\n      }, 1000);\n\n      setTimeout(() => {\n        let objCard = {\n          indexerData: data,\n          profileData: profileData,\n          nominationData: nominationData,\n        };\n        if (!data.is_revoked) {\n          nominationsArr.push(objCard);\n        }\n        if (i == res.body.length - 1) {\n          State.update({ nominations: nominationsArr });\n        }\n      }, 1000);\n    }\n  });\n}\n//\n\nif (state.start) {\n  getNominationInfo();\n  getVerifiedHuman();\n  State.update({\n    start: false,\n  });\n}\n\nconst handleSelect = (item) => {\n  switch (item.id) {\n    case 2:\n      State.update({ house: \"CouncilOfAdvisors\" });\n      getNominationInfo();\n      break;\n    case 1:\n      State.update({ house: \"HouseOfMerit\" });\n      getNominationInfo();\n      break;\n    case 3:\n      State.update({ house: \"TransparencyCommission\" });\n      getNominationInfo();\n      break;\n  }\n  State.update({ selectedHouse: item.id });\n};\n\nconst Container = styled.div`\n  padding: 30px 0;\n`;\n\nconst ActivityContainer = styled.div`\n  overflow-y: scroll;\n`;\n\nconst Left = styled.div`\n  padding: 20px;\n  background: #F8F8F9;\n  border-radius: 8px;\n`;\n\nconst Center = styled.div`\n`;\n\nconst Right = styled.div`\n  padding: 20px;\n  margin-bottom: 20px;\n  background: #F8F8F9;\n  border-radius: 8px;\n`;\n\nconst H5 = styled.h5`\n  margin-bottom: 20px;\n`;\n\nconst Toolbar = styled.div`\nmargin: 32px 0 0 0;\ndisplay: flex;\nwidth: 100%;\nflex-direction: row;\nalign-items: flex-start;\ngap: 20px;\n@media only screen and (max-width: 480px){\n  flex-direction:column;\n}\n`;\n\nconst FilterBar = styled.div`\ndisplay: flex;\npadding: 12px 16px;\nwidth: 66%;\n@media only screen and (max-width: 480px) {\n width: 100%;  \n}\nalign-items: center;\ngap: 8px;\nflex: 1 0 0;\nborder-radius: 8px;\nbackground: #F8F8F9;\n`;\n\nconst SearchIcon = styled.img`\nwidth: 14px;\nheight: 14px;\n`;\n\nconst LabelFile = styled.div`\ndisplay: flex;\npadding: 12px;\nalign-items: flex-start;\ngap: 12px;\nflex: 1 0 0;\nborder-radius: 8px;\nborder: 1px solid #D0D6D9;\nbackground: #FFF;\n`;\n\nconst InputSearch = styled.input`\ncolor: #828688;\nfont-size: 12px;\nwidth: 100%;\nfont-family: Avenir;\nfont-weight: 500;\nline-height: 120%;\nborder: 0px;\n`;\n\nconst VerifiedDiv = styled.div`\ndisplay: flex;\nwidth: 100%;\npadding: 16px;\nflex-direction: column;\nalign-items: flex-start;\ngap: 20px;\nborder-radius: 8px;\nbackground: var(--ffffff, #FFF);\nbox-shadow: 0px 0px 30px 0px rgba(0, 0, 0, 0.10);\n`;\n\nconst VerifiedHeader = styled.div`\ndisplay: flex;\nalign-items: flex-start;\ngap: 16px;\nalign-self: stretch;\n`;\n\nconst VerifiedHeaderContainer = styled.div`\ndisplay: flex;\nflex-direction: column;\nalign-items: flex-start;\ngap: 4px;\nflex: 1 0 0;\n`;\n\nconst VerfiedTitle = styled.p`\ndisplay: flex;\nwidth: 176px;\nflex-direction: column;\njustify-content: center;\ncolor: var(--000000, #000);\nfont-size: 14px;\nfont-family: Avenir;\nfont-style: normal;\nfont-weight: 500;\nline-height: 120%;\nmargin: 0px;\n`;\n\nconst VerifedDesc = styled.p`\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-self: stretch;\ncolor: var(--primary-gray-dark, #828688);\nfont-size: 12px;\nfont-family: Avenir;\nfont-style: normal;\nfont-weight: 500;\nline-height: 120%;\nmargin: 0px;\n`;\n\nconst VerifyButton = styled.button`\ndisplay: flex;\npadding: 8px 20px;\njustify-content: center;\nwidth: 100%;\nalign-items: center;\ngap: 10px;\nalign-self: stretch;\nborder-radius: 10px;\nbackground: var(--ffd-50-d, #FFD50D);\nborder:0px;\n`;\n\nconst VerifyButtonText = styled.p`\ncolor: var(--primary-black, #000);\nfont-size: 14px;\nfont-family: Avenir;\nfont-style: normal;\nfont-weight: 500;\nline-height: 24px;\nmargin: 0px;\n`;\n\nconst SortButton = styled.button`\ndisplay: flex;\nwidth: 38px;\nheight: 38px;\npadding: 8px 12px;\njustify-content: center;\nalign-items: center;\ngap: 6px;\nborder-radius: 6px;\nbackground: var(--buttons-gradient-default, linear-gradient(90deg, #9333EA 0%, #4F46E5 100%));\nborder: 0px;\n`;\n\nconst SortIcon = styled.img`\nwidth: 18px;\nheight: 18px;\nflex-shrink: 0;\n`;\n\nconst ButtonNominateContainer = styled.div`\ndisplay: flex;\nflex-direction:row;\npadding: 12px 16px;\nalign-items: center;\ngap: 8px;\nborder-radius: 8px;\nbackground: #F8F8F9;\n@media only screen and (max-width: 480px){\n  width: 100%;\n  flex-direction: column;\n}\n`;\n\nconst ButtonDeleteDiv = styled.button`\ndisplay: flex;\nheight: 40px;\npadding: 8px 12px;\nalign-items: center;\ngap: 6px;\nborder-radius: 10px;\nborder: 1px solid #C23F38;\nbackground: #F1D6D5;\n@media only screen and (max-width: 480px){\n  width: 100%;\n  justify-content: center;\n}\n`;\n\nconst ButtonDeleteText = styled.p`\ncolor: #C23F38;\nfont-size: 14px;\nfont-family: Avenir;\nfont-style: normal;\nfont-weight: 500;\nline-height: 24px;\nmargin: 0px;\n`;\n\nconst ButtonDeleteIcon = styled.img`\nwidth: 18px;\nheight: 18px;\n`;\n\nconst ButtonNominateDiv = styled.button`\ndisplay: flex;\nheight: 40px;\npadding: 8px 12px;\nalign-items: center;\ngap: 6px;\nborder: 1px solid #FFD50D;\nborder-radius: 10px;\nbackground: var(--buttons-yellow-default, #FFD50D);\n@media only screen and (max-width: 480px){\n  width: 100%;\n  justify-content: center;\n}\n`;\n\nconst ButtonNominateText = styled.p`\nmargin: 0px;\ncolor: var(--primary-black, #000);\nfont-size: 14px;\nfont-family: Avenir;\nfont-style: normal;\nfont-weight: 500;\nline-height: 24px;\n`;\n\nconst ButtonNominateIcon = styled.img`\nwidth: 18px;\nheight: 18px;\n`;\n\nreturn (\n  <div>\n    {houses.map((group) => (\n      <>\n        {group.id === state.selectedHouse && (\n          <Widget\n            key={i}\n            src={widgets.header}\n            props={{\n              startTime: group.start,\n              endTime: group.end,\n              type: \"Nomination\",\n            }}\n          />\n        )}\n      </>\n    ))}\n    <Toolbar>\n      <FilterBar>\n        <LabelFile>\n          <SearchIcon\n            src=\"https://apricot-straight-eagle-592.mypinata.cloud/ipfs/QmUgE9Cgge5VRgQB1VYxMaAjJWgzmXUzMcPSTwQ8ZfLJqz?_gl=1*xfjfsk*_ga*MzkyOTE0Mjc4LjE2ODY4NjgxODc.*_ga_5RMPXG14TE*MTY4NzkxMTcwOS41LjAuMTY4NzkxMTcxNi41My4wLjA.\"\n            alt=\"pic\"\n          ></SearchIcon>\n          <InputSearch\n            placeholder=\"Search by candidate name and affiliation\"\n            disabled\n          ></InputSearch>\n        </LabelFile>\n        <SortButton disabled>\n          <SortIcon\n            src=\"https://apricot-straight-eagle-592.mypinata.cloud/ipfs/QmNivRaFySDTXDK3rsNXNZn7ySyhCR82rVwqA15Nn2hofK?_gl=1*jc7vlr*_ga*MzkyOTE0Mjc4LjE2ODY4NjgxODc.*_ga_5RMPXG14TE*MTY4ODQxMzUxMS43LjEuMTY4ODQxMzUzMi4zOS4wLjA.\"\n            alt=\"pic\"\n          ></SortIcon>\n        </SortButton>\n      </FilterBar>\n      {state.showModal && (\n        <Widget\n          src={`dokxo.near/widget/NDC.Nomination.Compose`}\n          props={{\n            candidateOrReplay: true,\n            onClickConfirm: () => State.update({ showModal: false }),\n            onClickCancel: () => State.update({ showModal: false }),\n          }}\n        />\n      )}\n      <ButtonNominateContainer>\n        {state.selfNomination ? (\n          <ButtonDeleteDiv>\n            <ButtonDeleteText>Delete Self Nomination</ButtonDeleteText>\n            <ButtonDeleteIcon\n              src=\"https://apricot-straight-eagle-592.mypinata.cloud/ipfs/Qma7DF8kyoGN4Mf3Yty5uoP64RpZewCsZFawae4Ux4wBBF?_gl=1*6fastp*_ga*MzkyOTE0Mjc4LjE2ODY4NjgxODc.*_ga_5RMPXG14TE*MTY4ODQxMzUxMS43LjEuMTY4ODQxMzUzMi4zOS4wLjA.\"\n              alt=\"pic\"\n            ></ButtonDeleteIcon>\n          </ButtonDeleteDiv>\n        ) : (\n          <ButtonNominateDiv\n            disabled={status.verified ? false : true}\n            onClick={async () => {\n              State.update({ showModal: true });\n            }}\n          >\n            <ButtonNominateText>Self Nominate</ButtonNominateText>\n            <ButtonNominateIcon\n              src=\"https://apricot-straight-eagle-592.mypinata.cloud/ipfs/QmPRtMgbzoPxsuLLYdntJzEUDLZdndSiWWvMw4VZYozd29?_gl=1*1loq8cw*_ga*MzkyOTE0Mjc4LjE2ODY4NjgxODc.*_ga_5RMPXG14TE*MTY4ODQxMzUxMS43LjEuMTY4ODQxNTA1MC42MC4wLjA.\"\n              alt=\"pic\"\n            ></ButtonNominateIcon>\n          </ButtonNominateDiv>\n        )}\n      </ButtonNominateContainer>\n    </Toolbar>\n    <Container className=\"d-flex row\">\n      <Left className=\"col-lg\">\n        <H5>Houses</H5>\n        <Widget\n          src={widgets.houses}\n          props={{\n            selectedHouse: state.selectedHouse,\n            houses: houses,\n            handleSelect: (item) => handleSelect(item),\n          }}\n        />\n        <div>\n          {state.verified ? (\n            \"\"\n          ) : (\n            <VerifiedDiv>\n              <VerifiedHeader>\n                <VerifiedHeaderContainer>\n                  <VerfiedTitle>To Comment or to Upvote</VerfiedTitle>\n                  <VerifedDesc>\n                    Verify as a Human to comment or to upvote\n                  </VerifedDesc>\n                </VerifiedHeaderContainer>\n              </VerifiedHeader>\n              <VerifyButton>\n                <VerifyButtonText>Verify as a Human</VerifyButtonText>\n              </VerifyButton>\n            </VerifiedDiv>\n          )}\n        </div>\n      </Left>\n      <Center className=\"col-lg-9 p-2 p-md-3 d-flex flex-row flex-wrap justify-content-center gap-4\">\n        {state.nominations.length > 0 ? (\n          state.nominations.map((data) => {\n            return <Widget src={widgets.card} props={data} />;\n          })\n        ) : (\n          <H5 className=\"mt-10\">\n            There are no active nominations at the moment\n          </H5>\n        )}\n      </Center>\n    </Container>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/syi216.near/widget/NDC.Nomination.Page", "fact_widget_deployments_id": "ef4e86612ab422fe6e044afecbf712f0", "inserted_timestamp": "2000-01-01T00:00:00.000Z", "modified_timestamp": "2000-01-01T00:00:00.000Z", "__row_index": 89}