{"tx_hash": "G7k12AbHmxhuNvawAwHcr2SXDk8JcgwdWDsVPorjctKq", "action_id_social": "AXw9w771fGxomtiu88Q4TYDEBHt1eT8DFw7rfTQ7TYkY-0-widget", "block_id": 96331002, "block_timestamp": "2023-07-12T22:35:06.048Z", "signer_id": "syi216.near", "widget_name": "NDC.Nomination.Page", "source_code": "// TODO: Should be grabbed from contract side\nlet { ids, org } = props;\nconsole.log(Storage.privateGet(\"Houseselected\"));\nids = props.ids ? ids : [1, 2, 3];\n\nconst electionContract = \"elections-v1.gwg-testing.near\";\nconst registryContract = \"registry-v1.gwg-testing.near\";\nlet nominationContract = \"nominations-v1.gwg-testing.near\";\nconst apiKey = \"36f2b87a-7ee6-40d8-80b9-5e68e587a5b5\";\n\nfunction handleSelfRevoke() {\n  Near.call(nominationContract, \"self_revoke\");\n}\n\nconst houses = [\n  Near.view(electionContract, \"proposal\", { prop_id: ids[0] }),\n  Near.view(electionContract, \"proposal\", { prop_id: ids[1] }),\n  Near.view(electionContract, \"proposal\", { prop_id: ids[2] }),\n];\n\nconst widgets = {\n  header: \"syi216.near/widget/NDC.Nomination.Header\",\n  houses: \"syi216.near/widget/NDC.Nomination.Houses\",\n  card: \"syi216.near/widget/NDC.nomination.card\",\n};\n\nState.init({\n  selectedHouse: Storage.privateGet(\"Houseselected\")\n    ? Storage.privateGet(\"Houseselected\")\n    : ids[0],\n  house: \"HouseOfMerit\",\n  start: true,\n  nominations: [],\n  sbt: false,\n  og: false,\n  selfNomination: false,\n  search: false,\n  searchText: \"\",\n  originNominations: [],\n  notFound: \"There are no active nominations at the moment\",\n});\n\nif (Storage.privateGet(\"Houseselected\")) {\n  Storage.privateSet(\"Houseselected\", null);\n}\n\nfunction getVerifiedHuman() {\n  asyncFetch(\n    `https://api.pikespeak.ai/sbt/sbt-by-owner?holder=${context.accountId}&class_id=1&issuer=fractal.i-am-human.near&with_expired=false`,\n    {\n      headers: {\n        \"x-api-key\": \"36f2b87a-7ee6-40d8-80b9-5e68e587a5b5\",\n      },\n    }\n  ).then((res) => {\n    if (res.body.length > 0) {\n      State.update({ sbt: true });\n    }\n  });\n  asyncFetch(\n    `https://api.pikespeak.ai/sbt/sbt-by-owner?holder=${context.accountId}&class_id=2&issuer=fractal.i-am-human.near&with_expired=false`,\n    {\n      headers: {\n        \"x-api-key\": \"36f2b87a-7ee6-40d8-80b9-5e68e587a5b5\",\n      },\n    }\n  ).then((res) => {\n    if (res.body.length > 0) {\n      State.update({ og: true });\n    }\n  });\n  asyncFetch(\n    `https://api.pikespeak.ai/nominations/candidates-comments-and-upvotes?candidate=${context.accountId}`,\n    { headers: { \"x-api-key\": \"36f2b87a-7ee6-40d8-80b9-5e68e587a5b5\" } }\n  ).then((res) => {\n    if (res.body.length > 0) {\n      State.update({ selfNomination: true });\n    }\n  });\n}\n\nconst Page = styled.div`\nposition: fixed;\n  width: 1500px;\n  height: calc(-98px + 100vh);\n  top: 98px;\n  left: 0;\n  padding-left:20px;\n  padding-right:20px;\n  overflow: auto;\n`;\n\nfunction getNominationInfo() {\n  let nominationsArr = [];\n  asyncFetch(\n    `https://api.pikespeak.ai/nominations/house-nominations?house=${state.house}`,\n    {\n      headers: {\n        \"x-api-key\": \"36f2b87a-7ee6-40d8-80b9-5e68e587a5b5\",\n      },\n    }\n  ).then((res) => {\n    if (res.body.length <= 0) {\n      State.update({ nominations: [] });\n    }\n    for (const [i, data] of res.body.entries()) {\n      let objCard = {\n        indexerData: data,\n      };\n      let nominee = data.nominee;\n      let revoke = data.is_revoked;\n      asyncFetch(\n        `https://api.pikespeak.ai/nominations/candidates-comments-and-upvotes?candidate=${data.nominee}`,\n        { headers: { \"x-api-key\": \"36f2b87a-7ee6-40d8-80b9-5e68e587a5b5\" } }\n      ).then((info) => {\n        let upVoteInfo = info.body[0];\n        let profileData;\n        let nominationData;\n\n        Social.getr(`${nominee}/profile`);\n        Social.getr(`${nominee}/nominations`);\n        setTimeout(() => {\n          profileData = Social.getr(`${nominee}/profile`);\n          nominationData = Social.getr(`${nominee}/nominations`);\n        }, 1000);\n\n        setTimeout(() => {\n          let imageIsNFT = profileData.image.nft ? true : false;\n          let imageIsIpfs_cid = profileData.image.ipfs_cid ? true : false;\n          let imageIsUrl = profileData.image.url ? true : false;\n          let url = \"\";\n          if (imageIsNFT) {\n            let nftData = profileData.image.nft;\n            const getNftCid = Near.view(nftData.contractId, \"nft_token\", {\n              token_id: nftData.tokenId,\n            });\n            if (getNftCid.metadata.media.includes(\"https\")) {\n              url = getNftCid.metadata.media;\n            } else {\n              url =\n                \"https://nativonft.mypinata.cloud/ipfs/\" +\n                getNftCid.metadata.media;\n            }\n          }\n          if (imageIsIpfs_cid) {\n            url =\n              \"https://nativonft.mypinata.cloud/ipfs/\" +\n              profileData.image.ipfs_cid;\n          }\n          if (imageIsUrl) {\n            url = profileData.image.url;\n          }\n          objCard = {\n            profileData: profileData,\n            nominationData: nominationData,\n            upVoteData: upVoteInfo,\n            imgURL: url,\n            ...objCard,\n          };\n          if (!revoke) {\n            if (profileData && nominationData) {\n              nominationsArr.push(objCard);\n            }\n          }\n          if (i == res.body.length - 1) {\n            State.update({ nominations: nominationsArr });\n          }\n        }, 1000);\n      });\n    }\n  });\n}\n\n//\n\nif (state.start) {\n  getNominationInfo();\n  getVerifiedHuman();\n  State.update({\n    start: false,\n  });\n}\n\nconst handleSelect = (item) => {\n  switch (item.id) {\n    case 2:\n      State.update({ house: \"CouncilOfAdvisors\" });\n      getNominationInfo();\n      break;\n    case 1:\n      State.update({ house: \"HouseOfMerit\" });\n      getNominationInfo();\n      break;\n    case 3:\n      State.update({ house: \"TransparencyCommission\" });\n      getNominationInfo();\n      break;\n  }\n  State.update({ selectedHouse: item.id });\n};\n\nfunction handleFilter(text) {\n  State.update({ searchText: text });\n  if (!state.search) {\n    State.update({ originNominations: state.nominations, search: true });\n  }\n  if (text.length > 0) {\n    if (state.nominations.length) {\n      State.update({\n        notFound:\n          \"There are no nominations that match the search parameters you used.\",\n      });\n    }\n    let filtered = state.nominations.filter((data) =>\n      data.profileData.name.toLowerCase().includes(text.toLowerCase())\n    );\n    State.update({ nominations: filtered });\n  } else {\n    State.update({ notFound: \"There are no active nominations at the moment\" });\n    State.update({\n      nominations: state.originNominations,\n      originNominations: [],\n      search: false,\n    });\n  }\n}\n\nconst Container = styled.div`\n  padding: 30px 0;\n`;\n\nconst ActivityContainer = styled.div`\n  overflow-y: scroll;\n`;\n\nconst Left = styled.div`\n  padding: 20px;\n  background: #F8F8F9;\n  border-radius: 8px;\n`;\n\nconst Center = styled.div`\n`;\n\nconst Right = styled.div`\n  padding: 20px;\n  margin-bottom: 20px;\n  background: #F8F8F9;\n  border-radius: 8px;\n`;\n\nconst H5 = styled.h5`\n  margin-bottom: 20px;\n`;\n\nconst Toolbar = styled.div`\nmargin: 16px 0 0 0;\ndisplay: flex;\nwidth: 100%;\nflex-direction: row;\nalign-items: flex-start;\ngap: 20px;\n@media only screen and (max-width: 480px){\n  flex-direction:column;\n}\n`;\n\nconst FilterBar = styled.div`\ndisplay: flex;\npadding: 12px 16px;\nwidth: 66%;\n@media only screen and (max-width: 480px) {\n width: 100%;  \n}\nalign-items: center;\ngap: 8px;\nflex: 1 0 0;\nborder-radius: 8px;\nbackground: #F8F8F9;\n`;\n\nconst SearchIcon = styled.img`\nwidth: 14px;\nheight: 14px;\n`;\n\nconst LabelFile = styled.div`\ndisplay: flex;\npadding: 12px;\nalign-items: flex-start;\ngap: 12px;\nflex: 1 0 0;\nborder-radius: 8px;\nborder: 1px solid #D0D6D9;\nbackground: #FFF;\n`;\n\nconst InputSearch = styled.input`\ncolor: #828688;\nfont-size: 12px;\nwidth: 100%;\nfont-family: Open Sans;\nfont-weight: 500;\nline-height: 120%;\nborder: 0px;\n`;\n\nconst VerifiedDiv = styled.div`\ndisplay: flex;\nwidth: 100%;\npadding: 16px;\nflex-direction: column;\nalign-items: flex-start;\ngap: 20px;\nborder-radius: 8px;\nbackground: var(--ffffff, #FFF);\nbox-shadow: 0px 0px 30px 0px rgba(0, 0, 0, 0.10);\n`;\n\nconst VerifiedHeader = styled.div`\ndisplay: flex;\nalign-items: flex-start;\ngap: 16px;\nalign-self: stretch;\n`;\n\nconst VerifiedHeaderContainer = styled.div`\ndisplay: flex;\nflex-direction: column;\nalign-items: flex-start;\ngap: 4px;\nflex: 1 0 0;\n`;\n\nconst VerfiedTitle = styled.p`\ndisplay: flex;\nwidth: 176px;\nflex-direction: column;\njustify-content: center;\ncolor: var(--000000, #000);\nfont-size: 14px;\nfont-family: Open Sans;\nfont-style: normal;\nfont-weight: 500;\nline-height: 120%;\nmargin: 0px;\n`;\n\nconst VerifedDesc = styled.p`\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-self: stretch;\ncolor: var(--primary-gray-dark, #828688);\nfont-size: 12px;\nfont-family: Open Sans;\nfont-style: normal;\nfont-weight: 500;\nline-height: 120%;\nmargin: 0px;\n`;\n\nconst VerifyButton = styled.a`\ndisplay: flex;\npadding: 8px 20px;\njustify-content: center;\nwidth: 100%;\nalign-items: center;\ngap: 10px;\nalign-self: stretch;\nborder-radius: 10px;\nbackground: var(--ffd-50-d, #FFD50D);\nborder:0px;\ntext-decoration: none;\n`;\n\nconst VerifyButtonText = styled.p`\ncolor: var(--primary-black, #000);\nfont-size: 14px;\nfont-family: Open Sans;\nfont-style: normal;\nfont-weight: 500;\nline-height: 24px;\nmargin: 0px;\n`;\n\nconst SortButton = styled.button`\ndisplay: flex;\nwidth: 38px;\nheight: 38px;\npadding: 8px 12px;\njustify-content: center;\nalign-items: center;\ngap: 6px;\nborder-radius: 6px;\nbackground: var(--buttons-gradient-default, linear-gradient(90deg, #9333EA 0%, #4F46E5 100%));\nborder: 0px;\n`;\n\nconst SortIcon = styled.img`\nwidth: 18px;\nheight: 18px;\nflex-shrink: 0;\n`;\n\nconst ButtonNominateContainer = styled.div`\ndisplay: flex;\nflex-direction:row;\npadding: 12px 16px;\nalign-items: center;\ngap: 8px;\nborder-radius: 8px;\nbackground: #F8F8F9;\n@media only screen and (max-width: 480px){\n  width: 100%;\n  flex-direction: column;\n}\n`;\n\nconst ButtonDeleteDiv = styled.button`\ndisplay: flex;\nheight: 40px;\npadding: 8px 12px;\nalign-items: center;\ngap: 6px;\nborder-radius: 10px;\nborder: 1px solid #C23F38;\nbackground: #F1D6D5;\n@media only screen and (max-width: 480px){\n  width: 100%;\n  justify-content: center;\n}\n`;\n\nconst ButtonDeleteText = styled.p`\ncolor: #C23F38;\nfont-size: 14px;\nfont-family: Open Sans;\nfont-style: normal;\nfont-weight: 500;\nline-height: 24px;\nmargin: 0px;\n`;\n\nconst ButtonDeleteIcon = styled.img`\nwidth: 18px;\nheight: 18px;\n`;\n\nconst ButtonNominateDiv = styled.button`\ndisplay: flex;\nheight: 40px;\npadding: 8px 12px;\nalign-items: center;\ngap: 6px;\nborder: 1px solid #FFD50D;\nborder-radius: 10px;\nbackground: var(--buttons-yellow-default, #FFD50D);\n@media only screen and (max-width: 480px){\n  width: 100%;\n  justify-content: center;\n}\n`;\n\nconst ButtonNominateText = styled.p`\nmargin: 0px;\ncolor: var(--primary-black, #000);\nfont-size: 14px;\nfont-family: Open Sans;\nfont-style: normal;\nfont-weight: 500;\nline-height: 24px;\n`;\n\nconst ButtonNominateIcon = styled.img`\nwidth: 18px;\nheight: 18px;\n`;\n\nreturn (\n  <Page>\n    {houses.map((group) => (\n      <>\n        {group.id === state.selectedHouse && (\n          <Widget\n            key={i}\n            src={widgets.header}\n            props={{\n              startTime: group.start,\n              endTime: group.end,\n              type: \"Nomination\",\n            }}\n          />\n        )}\n      </>\n    ))}\n    <Toolbar>\n      <FilterBar>\n        <LabelFile>\n          <SearchIcon\n            src=\"https://apricot-straight-eagle-592.mypinata.cloud/ipfs/QmUgE9Cgge5VRgQB1VYxMaAjJWgzmXUzMcPSTwQ8ZfLJqz?_gl=1*xfjfsk*_ga*MzkyOTE0Mjc4LjE2ODY4NjgxODc.*_ga_5RMPXG14TE*MTY4NzkxMTcwOS41LjAuMTY4NzkxMTcxNi41My4wLjA.\"\n            alt=\"pic\"\n          ></SearchIcon>\n          <InputSearch\n            placeholder=\"Search by candidate name\"\n            value={state.searchText}\n            onChange={(e) => {\n              handleFilter(e.target.value);\n            }}\n          ></InputSearch>\n        </LabelFile>\n        <SortButton hidden>\n          <SortIcon\n            src=\"https://apricot-straight-eagle-592.mypinata.cloud/ipfs/QmNivRaFySDTXDK3rsNXNZn7ySyhCR82rVwqA15Nn2hofK?_gl=1*jc7vlr*_ga*MzkyOTE0Mjc4LjE2ODY4NjgxODc.*_ga_5RMPXG14TE*MTY4ODQxMzUxMS43LjEuMTY4ODQxMzUzMi4zOS4wLjA.\"\n            alt=\"pic\"\n          ></SortIcon>\n        </SortButton>\n      </FilterBar>\n      {state.showModal && (\n        <Widget\n          src={`dokxo.near/widget/NDC.Nomination.Compose`}\n          props={{\n            candidateOrReplay: true,\n            onClickConfirm: () => State.update({ showModal: false }),\n            onClickCancel: () => State.update({ showModal: false }),\n          }}\n        />\n      )}\n      {state.showModalDelete && (\n        <Widget\n          src={`dokxo.near/widget/NDC.Nomination.DeleteNomination`}\n          props={{\n            candidateOrReplay: true,\n            house: state.selectedHouse,\n            onClickConfirm: () => State.update({ showModalDelete: false }),\n            onClickCancel: () => State.update({ showModalDelete: false }),\n          }}\n        />\n      )}\n      {state.og ? (\n        <ButtonNominateContainer>\n          {state.selfNomination ? (\n            <ButtonDeleteDiv\n              onClick={async () => {\n                console.log(\"entra a delete modal\");\n                State.update({ showModalDelete: true });\n              }}\n            >\n              <ButtonDeleteText>Delete Self Nomination</ButtonDeleteText>\n              <ButtonDeleteIcon\n                src=\"https://apricot-straight-eagle-592.mypinata.cloud/ipfs/Qma7DF8kyoGN4Mf3Yty5uoP64RpZewCsZFawae4Ux4wBBF?_gl=1*6fastp*_ga*MzkyOTE0Mjc4LjE2ODY4NjgxODc.*_ga_5RMPXG14TE*MTY4ODQxMzUxMS43LjEuMTY4ODQxMzUzMi4zOS4wLjA.\"\n                alt=\"pic\"\n              ></ButtonDeleteIcon>\n            </ButtonDeleteDiv>\n          ) : (\n            <ButtonNominateDiv\n              onClick={async () => {\n                !status.sbt ? State.update({ showModal: true }) : \"\";\n              }}\n            >\n              <ButtonNominateText>Self Nominate</ButtonNominateText>\n              <ButtonNominateIcon\n                src=\"https://apricot-straight-eagle-592.mypinata.cloud/ipfs/QmPRtMgbzoPxsuLLYdntJzEUDLZdndSiWWvMw4VZYozd29?_gl=1*1loq8cw*_ga*MzkyOTE0Mjc4LjE2ODY4NjgxODc.*_ga_5RMPXG14TE*MTY4ODQxMzUxMS43LjEuMTY4ODQxNTA1MC42MC4wLjA.\"\n                alt=\"pic\"\n              ></ButtonNominateIcon>\n            </ButtonNominateDiv>\n          )}\n        </ButtonNominateContainer>\n      ) : (\n        <></>\n      )}\n    </Toolbar>\n    <Container className=\"d-flex row\">\n      <Left className=\"col-lg\">\n        <H5>Houses</H5>\n        <Widget\n          src={widgets.houses}\n          props={{\n            selectedHouse: state.selectedHouse,\n            houses: houses,\n            handleSelect: (item) => handleSelect(item),\n          }}\n        />\n        <div>\n          {state.sbt ? (\n            \"\"\n          ) : (\n            <VerifiedDiv>\n              <VerifiedHeader>\n                <VerifiedHeaderContainer>\n                  <VerfiedTitle>To Comment or to Upvote</VerfiedTitle>\n                  <VerifedDesc>\n                    Verify as a Human to comment or to upvote\n                  </VerifedDesc>\n                </VerifiedHeaderContainer>\n              </VerifiedHeader>\n              <VerifyButton\n                className=\"text-decoration-none\"\n                href=\"https://i-am-human.app/\"\n                target=\"_blank\"\n                rel=\"noopener\"\n              >\n                <VerifyButtonText>Verify as a Human</VerifyButtonText>\n              </VerifyButton>\n            </VerifiedDiv>\n          )}\n        </div>\n      </Left>\n      <Center className=\"col-lg-9 px-2 px-md-3 d-flex flex-row flex-wrap justify-content-center justify-content-lg-start gap-4\">\n        {state.nominations.length > 0 ? (\n          state.nominations.map((data) => {\n            return (\n              <>\n                <Widget src={widgets.card} props={data} />\n              </>\n            );\n          })\n        ) : (\n          <div className=\"flex mt-10 container-fluid align-self-center\">\n            <H5 className=\"text-center\">{state.notFound}</H5>\n          </div>\n        )}\n      </Center>\n    </Container>\n  </Page>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/syi216.near/widget/NDC.Nomination.Page", "fact_widget_deployments_id": "22c3d8bcd76667a8fb5e167a7de6c002", "inserted_timestamp": "2000-01-01T00:00:00.000Z", "modified_timestamp": "2000-01-01T00:00:00.000Z", "__row_index": 111}