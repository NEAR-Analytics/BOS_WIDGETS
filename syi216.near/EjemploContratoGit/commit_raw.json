{"tx_hash": "8EKsKr8whZ19QausjnmP5qa96Ax2t2Mz3JQMeu4eCpHZ", "action_id_social": "CPS5Qkt4u1LgPkFkwMJr2955FSzkvxp415b3dbAbUE6S-0-widget", "block_id": 126931129, "block_timestamp": "2024-08-31T00:01:09.531Z", "signer_id": "syi216.near", "widget_name": "EjemploContratoGit", "source_code": "//We import fixed information such as elements and metadata\r\nconst {\r\n  contractData,\r\n  App,\r\n  Input,\r\n  Btn,\r\n  Footer,\r\n  collapseContent,\r\n  collapseHeader,\r\n} = VM.require(\"syi216.testnet/widget/GitStyledComponents\");\r\n\r\n//We declare the states of the actions and information of the git repository\r\nconst [account, setAccount] = useState(undefined);\r\nconst [gitData, setGitData] = useState(undefined);\r\nconst [activeAction, setActiveAction] = useState(\"start\");\r\nconst [gitContract, setGitContract] = useState(\"\");\r\nconst [isGitContract, setIsGitContract] = useState(false);\r\nconst [isCollab, setIsCollab] = useState(false);\r\nconst [inputData, setInputData] = useState(\"\");\r\nconst [branches, setBranches] = useState([]);\r\nconst [collaborators, setCollaborators] = useState([]);\r\nconst [branchSelect, setBranchSelect] = useState(undefined);\r\nconst [collabSelect, setCollabSelect] = useState(undefined);\r\nconst [owner, setOwner] = useState(\"\");\r\nconst [isExpanded, setIsExpanded] = useState(\"\");\r\n\r\nconst toggleIsExpanded = (id) => {\r\n  setIsExpanded(isExpanded == id ? \"\" : id);\r\n};\r\n\r\nconst ownerCheck = (data, account) => {\r\n  setIsCollab(data.includes(account));\r\n};\r\n\r\n//Interface menu code section\r\nconst gitActionsMenu = (\r\n  <>\r\n    <h4 className=\"text-light m-0 text-center fw-bold mb-2\">Actions</h4>\r\n    <div className=\"mb-4 d-flex flex-column gap-4 align-items-center\">\r\n      <Btn\r\n        style={{ width: \"348px\" }}\r\n        onClick={() => setActiveAction(\"pushData\")}\r\n      >\r\n        Push Data\r\n      </Btn>\r\n      <Btn\r\n        style={{ width: \"348px\" }}\r\n        onClick={() => setActiveAction(\"viewBranches\")}\r\n      >\r\n        View Branches\r\n      </Btn>\r\n      <div className=\"d-flex flex-row gap-2\">\r\n        <Btn\r\n          style={{ width: \"170px\" }}\r\n          onClick={() => setActiveAction(\"createBranch\")}\r\n        >\r\n          Create Branch\r\n        </Btn>\r\n        <Btn\r\n          style={{ width: \"170px\" }}\r\n          onClick={() => setActiveAction(\"deleteBranch\")}\r\n        >\r\n          Delete Branch\r\n        </Btn>\r\n      </div>\r\n      <div className=\"d-flex flex-row gap-2\">\r\n        <Btn\r\n          style={{ width: \"170px\" }}\r\n          onClick={() => setActiveAction(\"addCollaborator\")}\r\n        >\r\n          Add Collaborator\r\n        </Btn>\r\n        <Btn\r\n          style={{ width: \"170px\" }}\r\n          onClick={() => setActiveAction(\"deleteCollaborator\")}\r\n        >\r\n          Delete Collaborator\r\n        </Btn>\r\n      </div>\r\n      <div className=\"d-flex flex-row gap-2\">\r\n        <Btn\r\n          style={{ width: \"170px\" }}\r\n          onClick={() => setActiveAction(\"renameRepo\")}\r\n        >\r\n          Rename Repo\r\n        </Btn>\r\n        <Btn\r\n          style={{ width: \"170px\" }}\r\n          onClick={() => setActiveAction(\"renameBranch\")}\r\n        >\r\n          Rename Branch\r\n        </Btn>\r\n      </div>\r\n      <Btn\r\n        style={{ width: \"348px\" }}\r\n        onClick={() => {\r\n          setAccount(undefined);\r\n          setGitData(undefined);\r\n          setActiveAction(\"start\");\r\n          setGitContract(\"\");\r\n          setIsGitContract(false);\r\n          setIsCollab(false);\r\n          setInputData(\"\");\r\n          setBranches([]);\r\n          setCollaborators([]);\r\n          setBranchSelect(undefined);\r\n          setCollabSelect(undefined);\r\n          setOwner(\"\");\r\n          setIsExpanded(\"\");\r\n        }}\r\n      >\r\n        Go Back\r\n      </Btn>\r\n    </div>\r\n  </>\r\n);\r\n\r\n//Code section of the create branch menu\r\nconst createBranchMenu = (\r\n  <>\r\n    <h4 className=\"text-light m-0 text-center fw-bold mb-2\">Create Branch</h4>\r\n    <div className=\"mb-4 d-flex flex-column\">\r\n      <h5 className=\"text-light m-0 mb-3\">Branch name</h5>\r\n      <Input>\r\n        <input\r\n          value={inputData}\r\n          onChange={(e) => setInputData(e.target.value)}\r\n        />\r\n      </Input>\r\n    </div>\r\n    <VaraNetwork.Interaction\r\n      trigger={({ signTransaction }) => (\r\n        <Btn\r\n          className=\"mb-2\"\r\n          onClick={() => {\r\n            //The signTransaction for create branch is declared\r\n            signTransaction(\r\n              gitContract,\r\n              contractData,\r\n              { CreateBranch: inputData },\r\n              118156152120,\r\n              0\r\n            );\r\n            setTimeout(() => {\r\n              setActiveAction(\"transaction\");\r\n              setInputData(\"\");\r\n            }, \"4000\");\r\n          }}\r\n        >\r\n          Save Branch\r\n        </Btn>\r\n      )}\r\n    />\r\n    <Btn onClick={() => setActiveAction(\"start\")}>Cancel</Btn>\r\n  </>\r\n);\r\n\r\n//Code section of the add collaborator menu\r\nconst addCollaboratorMenu = (\r\n  <>\r\n    <h4 className=\"text-light m-0 text-center fw-bold mb-2\">\r\n      Add Collaborator\r\n    </h4>\r\n    <div className=\"mb-4 d-flex flex-column\">\r\n      <h5 className=\"text-light m-0 mb-3\">Collaborator wallet</h5>\r\n      <Input>\r\n        <input\r\n          value={inputData}\r\n          onChange={(e) => setInputData(e.target.value)}\r\n        />\r\n      </Input>\r\n    </div>\r\n    <VaraNetwork.Interaction\r\n      trigger={({ signTransaction }) => (\r\n        <Btn\r\n          className=\"mb-2\"\r\n          onClick={() => {\r\n            //The signTransaction for add collaborator is declared\r\n            signTransaction(\r\n              gitContract,\r\n              contractData,\r\n              { AddCollaborator: inputData },\r\n              118156152120,\r\n              0\r\n            );\r\n            setTimeout(() => {\r\n              setActiveAction(\"transaction\");\r\n              setInputData(\"\");\r\n            }, \"4000\");\r\n          }}\r\n        >\r\n          Add Collaborator\r\n        </Btn>\r\n      )}\r\n    />\r\n    <Btn onClick={() => setActiveAction(\"start\")}>Cancel</Btn>\r\n  </>\r\n);\r\n\r\n//Code section of the rename repository menu\r\nconst renameRepoMenu = (\r\n  <>\r\n    <h4 className=\"text-light m-0 text-center fw-bold mb-2\">\r\n      Rename Repository\r\n    </h4>\r\n    <p className=\"text-light m-0 text-center mb-2\">\r\n      It will take some time for the information update to be reflected.\r\n    </p>\r\n    <div className=\"mb-4 d-flex flex-column\">\r\n      <h5 className=\"text-light m-0 mb-3\">Repository name</h5>\r\n      <Input>\r\n        <input\r\n          value={inputData}\r\n          onChange={(e) => setInputData(e.target.value)}\r\n        />\r\n      </Input>\r\n    </div>\r\n    <VaraNetwork.Interaction\r\n      trigger={({ signTransaction }) => (\r\n        <Btn\r\n          className=\"mb-2\"\r\n          onClick={() => {\r\n            //The signTransaction for rename repo is declared\r\n            signTransaction(\r\n              gitContract,\r\n              contractData,\r\n              { Rename: inputData },\r\n              118156152120,\r\n              0\r\n            );\r\n            setTimeout(() => {\r\n              setActiveAction(\"transaction\");\r\n              setInputData(\"\");\r\n            }, \"4000\");\r\n          }}\r\n        >\r\n          Save Name\r\n        </Btn>\r\n      )}\r\n    />\r\n    <Btn onClick={() => setActiveAction(\"start\")}>Cancel</Btn>\r\n  </>\r\n);\r\n\r\n//Menu code section delete branch\r\nconst deleteBranchMenu = (\r\n  <>\r\n    <h4 className=\"text-light m-0 text-center fw-bold mb-2\">Delete Branch</h4>\r\n    <div className=\"mb-4 d-flex flex-column\">\r\n      <h5 className=\"text-light m-0 mb-3\">Select Branch</h5>\r\n      <select onChange={(e) => setBranchSelectelect(e.target.value)}>\r\n        <option value={null} selected disabled>\r\n          Select a branch\r\n        </option>\r\n        {branches.map((data) => {\r\n          return <option value={data.id}>{data.name}</option>;\r\n        })}\r\n      </select>\r\n    </div>\r\n    <VaraNetwork.Interaction\r\n      trigger={({ signTransaction }) => (\r\n        <Btn\r\n          className=\"mb-2\"\r\n          onClick={() => {\r\n            //The signTransaction for delete branch is declared\r\n            signTransaction(\r\n              gitContract,\r\n              contractData,\r\n              { DeleteBranch: { branch_id: branchSelect } },\r\n              117525470340,\r\n              0\r\n            );\r\n            setTimeout(() => {\r\n              setActiveAction(\"transaction\");\r\n              setBranchSelect(undefined);\r\n            }, \"4000\");\r\n          }}\r\n        >\r\n          Delete Branch\r\n        </Btn>\r\n      )}\r\n    />\r\n    <Btn onClick={() => setActiveAction(\"start\")}>Cancel</Btn>\r\n  </>\r\n);\r\n\r\n//Code section of the menu delete collaborator\r\nconst deleteCollaboratorMenu = (\r\n  <>\r\n    <h4 className=\"text-light m-0 text-center fw-bold mb-2\">\r\n      Delete Collaborator\r\n    </h4>\r\n    <div className=\"mb-4 d-flex flex-column\">\r\n      <h5 className=\"text-light m-0 mb-3\">Select Collaborator</h5>\r\n      <select onChange={(e) => setCollabSelect(e.target.value)}>\r\n        <option value={null} selected disabled>\r\n          Select a collaborator\r\n        </option>\r\n        {collaborators.map((data) => {\r\n          return (\r\n            <option value={data}>\r\n              {data.substr(0, 12) + \"...\" + data.substr(-12, 12)}\r\n            </option>\r\n          );\r\n        })}\r\n      </select>\r\n    </div>\r\n    <VaraNetwork.Interaction\r\n      trigger={({ signTransaction }) => (\r\n        <Btn\r\n          className=\"mb-2\"\r\n          onClick={() => {\r\n            //The signTransaction for delete collaborator is declared\r\n            signTransaction(\r\n              gitContract,\r\n              contractData,\r\n              { DeleteCollaborator: collabSelect },\r\n              117525470340,\r\n              0\r\n            );\r\n            setTimeout(() => {\r\n              setActiveAction(\"transaction\");\r\n              setCollabSelect(undefined);\r\n            }, \"4000\");\r\n          }}\r\n        >\r\n          Delete Collaborator\r\n        </Btn>\r\n      )}\r\n    />\r\n    <Btn onClick={() => setActiveAction(\"start\")}>Cancel</Btn>\r\n  </>\r\n);\r\n\r\n//Code section of the menu rename branch\r\nconst renameBranchMenu = (\r\n  <>\r\n    <h4 className=\"text-light m-0 text-center fw-bold mb-2\">Rename Branch</h4>\r\n    <div className=\"mb-2 d-flex flex-column\">\r\n      <h5 className=\"text-light m-0 mb-3\">Select a Branch</h5>\r\n      <select onChange={(e) => setBranchSelectelect(e.target.value)}>\r\n        <option value={null} selected disabled>\r\n          Select a branch\r\n        </option>\r\n        {branches.map((data) => {\r\n          return <option value={data.id}>{data.name}</option>;\r\n        })}\r\n      </select>\r\n    </div>\r\n    <div className=\"mb-4 d-flex flex-column\">\r\n      <h5 className=\"text-light m-0 mb-3\">Branch name</h5>\r\n      <Input>\r\n        <input\r\n          value={inputData}\r\n          onChange={(e) => setInputData(e.target.value)}\r\n        />\r\n      </Input>\r\n    </div>\r\n    <VaraNetwork.Interaction\r\n      trigger={({ signTransaction }) => (\r\n        <Btn\r\n          className=\"mb-2\"\r\n          onClick={() => {\r\n            //The signTransaction for rename branch is declared\r\n            signTransaction(\r\n              gitContract,\r\n              contractData,\r\n              { RenameBranch: { id: branchSelect, name: inputData } },\r\n              117525470340,\r\n              0\r\n            );\r\n            setTimeout(() => {\r\n              setActiveAction(\"transaction\");\r\n              setInputData(\"\");\r\n              setBranchSelect(undefined);\r\n            }, \"4000\");\r\n          }}\r\n        >\r\n          Rename Branch\r\n        </Btn>\r\n      )}\r\n    />\r\n    <Btn onClick={() => setActiveAction(\"start\")}>Cancel</Btn>\r\n  </>\r\n);\r\n\r\n//Push data menu code section\r\nconst pushDataMenu = (\r\n  <>\r\n    <h4 className=\"text-light m-0 text-center fw-bold mb-2\">Push Data</h4>\r\n    <div className=\"mb-2 d-flex flex-column\">\r\n      <h5 className=\"text-light m-0 mb-3\">Select a Branch</h5>\r\n      <select onChange={(e) => setBranchSelect(e.target.value)}>\r\n        <option value={null} selected disabled>\r\n          Select a branch\r\n        </option>\r\n        {branches.map((data) => {\r\n          return <option value={data.id}>{data.name}</option>;\r\n        })}\r\n      </select>\r\n    </div>\r\n    <div className=\"mb-4 d-flex flex-column\">\r\n      <h5 className=\"text-light m-0 mb-3\">Write the hash of your code</h5>\r\n      <Input>\r\n        <input\r\n          value={inputData}\r\n          onChange={(e) => setInputData(e.target.value)}\r\n        />\r\n      </Input>\r\n    </div>\r\n    <VaraNetwork.Interaction\r\n      trigger={({ signTransaction }) => (\r\n        <Btn\r\n          className=\"mb-2\"\r\n          onClick={() => {\r\n            //The signTransaction for push data is declared\r\n            signTransaction(\r\n              gitContract,\r\n              contractData,\r\n              { Push: { branch_id: branchSelect, hash: inputData } },\r\n              117525470340,\r\n              0\r\n            );\r\n            setTimeout(() => {\r\n              setActiveAction(\"transaction\");\r\n              setInputData(\"\");\r\n              setBranchSelect(undefined);\r\n            }, \"4000\");\r\n          }}\r\n        >\r\n          Save Data\r\n        </Btn>\r\n      )}\r\n    />\r\n    <Btn onClick={() => setActiveAction(\"start\")}>Cancel</Btn>\r\n  </>\r\n);\r\n\r\n//Code section of the branches menu\r\nconst branchesMenu = (\r\n  <>\r\n    <h4 className=\"text-light m-0 text-center fw-bold mb-2\">\r\n      Available Branches\r\n    </h4>\r\n    <div\r\n      className=\"d-flex flex-column gap-2\"\r\n      style={{ width: \"384px\", height: \"321px\", \"overflow-y\": \"scroll\" }}\r\n    >\r\n      {branches.map((data) => {\r\n        return (\r\n          <div>\r\n            <collapseHeader\r\n              className=\"d-flex flex-row text-light justify-content-between p-2\"\r\n              onClick={() => toggleIsExpanded(data.id)}\r\n            >\r\n              <h4 className=\"m-0\">{data.name}</h4>\r\n              <h4 className=\"m-0 fw-bold\">\u2193</h4>\r\n            </collapseHeader>\r\n            <collapseContent\r\n              style={{ height: isExpanded == data.id ? \"auto\" : \"0px\" }}\r\n            >\r\n              <div className=\"p-2\">\r\n                {data.commits.length == 0 ? (\r\n                  <h5 className=\"fw-bold text-center py-2\">\r\n                    No commits have been made on this branch\r\n                  </h5>\r\n                ) : (\r\n                  data.commits.reverse().map((commit) => {\r\n                    const date = new Date(commit.createdAt);\r\n                    return (\r\n                      <>\r\n                        <div className=\"d-flex flex-row gap-2\">\r\n                          <p className=\"fw-bold\">Id:</p>\r\n                          <p className=\"\">{commit.id}</p>\r\n                        </div>\r\n                        <div className=\"d-flex flex-row gap-2\">\r\n                          <p className=\"fw-bold\">Owner:</p>\r\n                          <p className=\"\">\r\n                            {commit.owner.substr(0, 12) +\r\n                              \"...\" +\r\n                              commit.owner.substr(-12, 12)}\r\n                          </p>\r\n                        </div>\r\n                        <div className=\"d-flex flex-row gap-2\">\r\n                          <p className=\"fw-bold\">Date:</p>\r\n                          <p className=\"\">{date.toDateString()}</p>\r\n                        </div>\r\n                        <div className=\"d-flex flex-column gap-1\">\r\n                          <p className=\"fw-bold m-0\">Content:</p>\r\n                          <p className=\"m-0\">{commit.hash}</p>\r\n                        </div>\r\n                        <hr />\r\n                      </>\r\n                    );\r\n                  })\r\n                )}\r\n              </div>\r\n            </collapseContent>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n    <Btn className=\"mt-2\" onClick={() => setActiveAction(\"start\")}>\r\n      Back\r\n    </Btn>\r\n  </>\r\n);\r\n\r\n//Menu code section processing transaction\r\nconst transactionMenu = (\r\n  <>\r\n    <h4 className=\"text-light m-0 text-center fw-bold mb-2\">\r\n      Processing transaction\r\n    </h4>\r\n    <p className=\"text-light m-0 text-center mb-2\">\r\n      Your transaction is being processed, press the button below once the\r\n      transaction has been confirmed to reload the information\r\n    </p>\r\n    <VaraNetwork.Interaction\r\n      trigger={({ readState }) => (\r\n        <>\r\n          <Btn\r\n            onClick={() => {\r\n              const info = readState(gitContract, contractData, \"\");\r\n              //The information is reloaded after each transaction\r\n              info.then((res) => {\r\n                const collab = [res.owner];\r\n                const extraCollab = Object.values(res.collaborator);\r\n                ownerCheck(collab.concat(extraCollab), account.decodedAddress);\r\n                setGitData({ owner: res.owner, name: res.name });\r\n                setBranches(Object.values(res.branches));\r\n                setCollaborators(extraCollab);\r\n                setActiveAction(\"start\");\r\n              });\r\n            }}\r\n          >\r\n            Go Back\r\n          </Btn>\r\n        </>\r\n      )}\r\n    />\r\n  </>\r\n);\r\n\r\nreturn (\r\n  <VaraNetwork.Wrapper>\r\n    <App>\r\n      {account ? (\r\n        isGitContract ? (\r\n          <div className=\"mb-4\">\r\n            <div className=\"wrapper\">\r\n              <h3 className=\"text-center mb-2 text-light fw-bold\">\r\n                {gitData.name}\r\n              </h3>\r\n              <div className=\"mb-4 d-flex flex-row gap-2 align-items-center\">\r\n                <p className=\"text-light m-0\">Owner:</p>\r\n                <p className=\"text-light m-0 fw-semibold\">{owner}</p>\r\n              </div>\r\n              <div className=\"mb-2 d-flex flex-row gap-2 align-items-center\">\r\n                <p className=\"text-light m-0\">Account:</p>\r\n                <VaraNetwork.Identicon size={30} />\r\n                <p className=\"text-light m-0 fw-semibold\">\r\n                  {account.meta.name}\r\n                </p>\r\n              </div>\r\n              <div className=\"mb-4 d-flex flex-row gap-2 align-items-center\">\r\n                <p className=\"text-light m-0\">Collaborator:</p>\r\n                <p className=\"text-light m-0 fw-semibold\">\r\n                  {isCollab ? \"\u2705\" : \"\u274c\"}\r\n                </p>\r\n              </div>\r\n\r\n              {activeAction == \"start\" && gitActionsMenu}\r\n              {activeAction == \"createBranch\" && createBranchMenu}\r\n              {activeAction == \"addCollaborator\" && addCollaboratorMenu}\r\n              {activeAction == \"renameRepo\" && renameRepoMenu}\r\n              {activeAction == \"deleteBranch\" && deleteBranchMenu}\r\n              {activeAction == \"deleteCollaborator\" && deleteCollaboratorMenu}\r\n              {activeAction == \"renameBranch\" && renameBranchMenu}\r\n              {activeAction == \"pushData\" && pushDataMenu}\r\n              {activeAction == \"viewBranches\" && branchesMenu}\r\n              {activeAction == \"transaction\" && transactionMenu}\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"wrapper\">\r\n            <h3 className=\"text-center text-white mb-5\">\r\n              The contract you wrote is not a Repository try again\r\n            </h3>\r\n            <Btn onClick={() => setAccount(undefined)}>Go Back</Btn>\r\n          </div>\r\n        )\r\n      ) : (\r\n        <div className=\"wrapper\">\r\n          <h3 className=\"text-center text-white mb-5\">\r\n            Welcome to the example of interaction with a Git Repository contract\r\n            in VARA Network\r\n          </h3>\r\n          <h5 className=\"text-center text-white mb-2\">\r\n            Write the address of your Repository contract\r\n          </h5>\r\n          <Input className=\"mb-3\">\r\n            <input\r\n              onChange={(e) => setGitContract(e.target.value)}\r\n              value={gitContract}\r\n              type=\"text\"\r\n            />\r\n          </Input>\r\n          <VaraNetwork.Interaction\r\n            trigger={({ readState, getAccountInfo }) => (\r\n              <>\r\n                <Btn\r\n                  onClick={() => {\r\n                    const info = readState(gitContract, contractData, \"\");\r\n                    let varaAccount = getAccountInfo();\r\n                    setAccount(varaAccount);\r\n                    info.then((res) => {\r\n                      setIsGitContract(\r\n                        res.hasOwnProperty(\"branches\") &&\r\n                          res.hasOwnProperty(\"userProgramId\")\r\n                      );\r\n                      const collab = [res.owner];\r\n                      const extraCollab = Object.values(res.collaborator);\r\n                      ownerCheck(\r\n                        collab.concat(extraCollab),\r\n                        varaAccount.decodedAddress\r\n                      );\r\n                      setGitData({ owner: res.owner, name: res.name });\r\n                      setBranches(Object.values(res.branches));\r\n                      setCollaborators(extraCollab);\r\n                      setOwner(\r\n                        res.owner.substr(0, 12) +\r\n                          \"...\" +\r\n                          res.owner.substr(-12, 12)\r\n                      );\r\n                    });\r\n                  }}\r\n                >\r\n                  Search Repository\r\n                </Btn>\r\n              </>\r\n            )}\r\n          />\r\n        </div>\r\n      )}\r\n\r\n      <Footer className=\"w-100\">\r\n        <a\r\n          href=\"https://vara.network/\"\r\n          className=\"fw-bold\"\r\n          target=\"_blank\"\r\n          title=\"vara network\"\r\n        >\r\n          Powered by\r\n          <img\r\n            height=\"50px\"\r\n            src={`https://ipfs.near.social/ipfs/bafkreibjwxaoctoxglepnln5hgos3pvwaih3eidwrupjlmffoivfgarwfa`}\r\n            alt=\"uploaded\"\r\n          />\r\n        </a>\r\n      </Footer>\r\n    </App>\r\n  </VaraNetwork.Wrapper>\r\n);\r\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/syi216.near/widget/EjemploContratoGit", "fact_widget_deployments_id": "e936f2421f9035cd44898d21d87d24a6", "inserted_timestamp": "2024-08-31T02:16:51.234Z", "modified_timestamp": "2024-08-31T02:16:51.234Z", "__row_index": 4}