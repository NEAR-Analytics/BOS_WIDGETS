{"tx_hash": "5uNRsekZhrMu5LUVws7uoaSW6TdLzvm3p8QNpZt9EtAj", "action_id_social": "EubF3wrtV8C6XNYw4RU9YLe5C4VFQE3CB9CAqG2CrHzc-0-widget", "block_id": 113776202, "block_timestamp": "2024-02-28T21:42:33.504Z", "signer_id": "buildbox.near", "widget_name": "utils.extractValidNearAddresses", "source_code": "/* HELPER FUNCTION */\nfunction isNearAddress(address) {\n  if (typeof address !== \"string\") {\n    return false;\n  }\n\n  // Allow both \".near\" and \".testnet\" endings\n  if (!address.endsWith(\".near\") && !address.endsWith(\".testnet\")) {\n    return false;\n  }\n\n  const parts = address.split(\".\");\n  if (parts.length !== 2) {\n    return false;\n  }\n\n  if (parts[0].length < 2 || parts[0].length > 32) {\n    return false;\n  }\n\n  if (!/^[a-z0-9_-]+$/i.test(parts[0])) {\n    return false;\n  }\n\n  return true;\n}\n\nconst extractValidNearAddresses = (string) => {\n  // removing extra characters and splitting the string into an array\n  const arr = string.replace(/[\\[\\]\\(\\)@]/g, \"\").split(/[\\s,]+/);\n\n  // filtering out teammates that are not near addresses\n  const hexRegex = /^[0-9A-F\\-_]+$/i;\n  const valid = arr.filter((teammate) => {\n    if (hexRegex.test(teammate)) {\n      return teammate;\n    }\n    return isNearAddress(teammate);\n  });\n\n  console.log(\"valid from validNearAddresses\", valid);\n\n  return valid;\n};\n\nreturn { extractValidNearAddresses };\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/buildbox.near/widget/utils.extractValidNearAddresses", "fact_widget_deployments_id": "875fecab8b41f9cf4733c5dbfba9aa97", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}