{"tx_hash": "3R9hgzp6gyoWHqhUTH4w9LeVvUXmXhxwiRXvtKexFX5u", "action_id_social": "HHg7pgputj2ukx6dxYvqXBMD3GBuQdQWymkCtGZ3GXZS-0-widget", "block_id": 113335079, "block_timestamp": "2024-02-22T05:33:57.022Z", "signer_id": "devgovgigs.petersalomonsen.near", "widget_name": "devhub.entity.team.Configurator", "source_code": "const { Tile } =\n  VM.require(\"${REPL_DEVHUB}/widget/devhub.components.molecule.Tile\") ||\n  (() => <></>);\n\nif (!Tile) {\n  return <div>Loading...</div>;\n}\n\nconst { data, onSubmit, onCancel } = props;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n`;\n\nconst Item = styled.div`\n  padding: 10px;\n  margin: 5px;\n  display: flex;\n  align-items: center;\n  flex-direction: row;\n  gap: 10px;\n`;\n\nconst backwardsCompatibleLabel = (oldLabel) => {\n  if (typeof oldLabel === \"string\")\n    return oldLabel.startsWith(\"starts-with:\") ? oldLabel.slice(12) : oldLabel;\n  else return \"\";\n};\nconst backwardsCompatibleTeam = (oldTeam) => {\n  if (typeof oldTeam === \"string\")\n    return oldTeam.startsWith(\"team:\") ? oldTeam.slice(5) : oldTeam;\n  else return \"\";\n};\n\nconst initialData = data.members || [];\nconst [newItem, setNewItem] = useState(\"\");\nconst [teamName, setTeamName] = useState(\n  backwardsCompatibleTeam(data.teamName) || \"\"\n);\nconst [label, setLabel] = useState(data.label || \"\");\nconst [labelType, setLabelType] = useState(\n  (data.label || \"\").startsWith(\"starts-with:\") ? \"starts-with:\" : \"\"\n);\nconst [editPost, setEditPost] = useState(data.editPost || false);\nconst [useLabels, setUseLabels] = useState(data.useLabels || false);\nconst [members, setMembers] = useState(initialData || []);\n\nconst [showPreview, setShowPreview] = useState(data.showPreview || []);\n\nconst [warning, setWarning] = useState(\"\");\n\nconst handleAddItem = () => {\n  if (newItem) {\n    setMembers([...members, newItem]);\n    setNewItem(\"\");\n  }\n};\n\nconst handleDeleteItem = (index) => {\n  const updatedData = [...members];\n  updatedData.splice(index, 1);\n  setMembers(updatedData);\n};\n\nconst handleSubmit = () => {\n  if (newItem !== \"\") {\n    return setWarning(\n      \"Don't forget to add the last member or clear the field to get rid of this warning.\"\n    );\n  }\n  if (teamName && teamName.startsWith(\"team:\")) {\n    return setWarning(\"The team name can't start with 'team:'\");\n  }\n  if (\n    !backwardsCompatibleLabel(label) ||\n    !label.trim() ||\n    label === \"starts-with:\"\n  ) {\n    return setWarning(\"Invalid label, make sure it's not taken\");\n  }\n  if (members.length < 1) {\n    return setWarning(\"Add at least one member to the team\");\n  }\n\n  onSubmit({\n    teamName,\n    label: labelType + backwardsCompatibleLabel(label),\n    editPost,\n    useLabels,\n    members: members.map((member) => member.trim()),\n  });\n};\n\nreturn (\n  <Tile className=\"p-3\">\n    <Container>\n      <h3>{data.teamName == \"\" ? \"Edit label\" : \"Create label\"}</h3>\n      <Widget\n        src=\"${REPL_DEVHUB}/widget/devhub.components.atom.Alert\"\n        props={{\n          onClose: () => setWarning(\"\"),\n          message: warning,\n        }}\n      />\n      {/* Moderators is only editable through the CLI except for the members property */}\n      {teamName !== \"moderators\" && (\n        <>\n          <div className=\"flex-grow-1\">\n            <span>Group name</span>\n            <Widget\n              src=\"${REPL_DEVHUB}/widget/devhub.components.molecule.Input\"\n              props={{\n                className: \"flex-grow-1\",\n                skipPaddingGap: true,\n                onChange: (e) => setTeamName(e.target.value),\n                value: teamName,\n                placeholder: \"Team name\",\n              }}\n            />\n          </div>\n\n          <div className=\"flex-grow-1\">\n            <div>\n              Would you like this group to limit their restrictions to a single\n              label, or would you prefer them to restrict it with any label that\n              follows a similar convention?\n            </div>\n            <div className=\"col-lg-6 mb-2\">\n              <select\n                onChange={(event) => setLabelType(event.target.value)}\n                class=\"form-select\"\n                aria-label=\"Select type\"\n                value={labelType}\n              >\n                <option value=\"starts-with:\">\n                  Restrict multiple labels with a common prefix\n                </option>\n                <option value=\"\">Restrict a single label</option>\n              </select>\n              <div>What would you like the restricted label to be?</div>\n              <Widget\n                src=\"${REPL_DEVHUB}/widget/devhub.components.molecule.Input\"\n                props={{\n                  className: \"flex-grow-1\",\n                  onChange: (e) => setLabel(e.target.value),\n                  value: backwardsCompatibleLabel(label),\n                  skipPaddingGap: true,\n                  placeholder: \"label\",\n                  inputProps: {\n                    prefix: labelType,\n                  },\n                }}\n              />\n              <div>Select label permissions</div>\n              <Widget\n                src=\"${REPL_DEVHUB}/widget/devhub.entity.team.LabelPermissions\"\n                props={{\n                  identifier: data.teamName,\n                  editPost,\n                  setEditPost,\n                  useLabels,\n                  setUseLabels,\n                  disabled: false,\n                }}\n              />\n            </div>\n          </div>\n        </>\n      )}\n      {members.map((item, index) => (\n        <Item key={index}>\n          <div className=\"flex-grow-1\">\n            <Widget\n              src=\"${REPL_DEVHUB}/widget/devhub.components.molecule.Input\"\n              props={{\n                className: \"flex-grow-1\",\n                value: item,\n                skipPaddingGap: true,\n                placeholder: \"member\",\n                inputProps: {\n                  prefix: \"member\",\n                  disabled: true,\n                },\n              }}\n            />\n          </div>\n          <button\n            className=\"btn btn-outline-danger\"\n            onClick={() => handleDeleteItem(index)}\n          >\n            <i className=\"bi bi-trash-fill\" />\n          </button>\n        </Item>\n      ))}\n      <Item>\n        <div className=\"flex-grow-1\">\n          <Widget\n            src=\"${REPL_DEVHUB}/widget/devhub.components.molecule.Input\"\n            props={{\n              className: \"flex-grow-1\",\n              skipPaddingGap: true,\n              onChange: (e) => setNewItem(e.target.value),\n              value: newItem,\n              placeholder: \"member\",\n              inputProps: {\n                prefix: \"member\",\n              },\n            }}\n          />\n        </div>\n        <button\n          className=\"btn btn-success add-member\"\n          onClick={handleAddItem}\n          disabled={newItem === \"\"}\n        >\n          <i className=\"bi bi-plus\" />\n        </button>\n      </Item>\n      <div\n        className={\"d-flex align-items-center justify-content-end gap-3 mt-4\"}\n      >\n        <Widget\n          src={\"${REPL_DEVHUB}/widget/devhub.components.molecule.Button\"}\n          props={{\n            classNames: { root: \"btn-outline-danger shadow-none border-0\" },\n            label: \"Cancel\",\n            onClick: () => onCancel(),\n          }}\n        />\n        <Widget\n          src={\"${REPL_DEVHUB}/widget/devhub.components.molecule.Button\"}\n          props={{\n            classNames: { root: \"btn-success\" },\n            icon: {\n              type: \"bootstrap_icon\",\n              variant: \"bi-check-circle-fill\",\n            },\n            label: \"Submit\",\n            onClick: handleSubmit,\n          }}\n        />\n      </div>\n    </Container>\n  </Tile>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/devgovgigs.petersalomonsen.near/widget/devhub.entity.team.Configurator", "fact_widget_deployments_id": "eae486cca30b928bbe60cddfbb2d4764", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 3}