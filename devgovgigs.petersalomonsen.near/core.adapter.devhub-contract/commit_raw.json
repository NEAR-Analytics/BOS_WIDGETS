{"tx_hash": "5QJvBCTdjdR3sAzBwbP9GGmh4tU1rFxSviT9nAPFDCmk", "action_id_social": "FHMCHgYJVEDupNwYXLXmhKm4D9qS2DiitEQU1yPEHBJr-0-widget", "block_id": 115539414, "block_timestamp": "2024-03-26T22:20:49.308Z", "signer_id": "devgovgigs.petersalomonsen.near", "widget_name": "core.adapter.devhub-contract", "source_code": "function getRootMembers() {\n  return Near.view(\"devgovgigs.near\", \"get_root_members\") ?? null;\n}\n\nfunction removeMember(member) {\n  return Near.call(\"devgovgigs.near\", \"remove_member\", { member });\n}\n\nfunction hasModerator({ account_id }) {\n  return (\n    Near.view(\"devgovgigs.near\", \"has_moderator\", { account_id }) ?? null\n  );\n}\n\nfunction createCommunity({ inputs }) {\n  return Near.call(\n    \"truedove38.near\",\n    \"create_community\",\n    { inputs },\n    250000000000000, // gas (250Tgas)\n    Big(4) * Big(10).pow(24) // deposit (4N)\n  );\n}\n\nfunction getCommunity({ handle }) {\n  return (\n    Near.view(\"truedove38.near\", \"get_community\", { handle }) ?? null\n  );\n}\n\nfunction getFeaturedCommunities() {\n  return Near.view(\"devgovgigs.near\", \"get_featured_communities\") ?? null;\n}\n\nfunction setFeaturedCommunities({ handles }) {\n  return Near.call(\"truedove38.near\", \"set_featured_communities\", {\n    handles,\n  });\n}\n\nfunction getAccountCommunityPermissions({ account_id, community_handle }) {\n  return (\n    Near.view(\"truedove38.near\", \"get_account_community_permissions\", {\n      account_id,\n      community_handle,\n    }) ?? null\n  );\n}\n\nfunction updateCommunity({ handle, community }) {\n  return Near.call(\"truedove38.near\", \"update_community\", {\n    handle,\n    community,\n  });\n}\n\nfunction deleteCommunity({ handle }) {\n  return Near.call(\"truedove38.near\", \"delete_community\", { handle });\n}\n\n/**\n * Sets all addons, for configurating tabs\n */\nfunction setCommunityAddons({ handle, addons }) {\n  return Near.call(\"truedove38.near\", \"set_community_addons\", {\n    handle,\n    addons,\n  });\n}\n\n/**\n * Sets specific addon, for configuring params\n */\nfunction setCommunityAddon({ handle, addon }) {\n  return Near.call(\"truedove38.near\", \"set_community_addon\", {\n    handle,\n    community_addon: addon,\n  });\n}\n\n/**\n * Gets all available addons, these are controlled by devhub moderators\n */\nfunction getAllAddons() {\n  return Near.view(\"truedove38.near\", \"get_all_addons\") ?? null;\n}\n\nfunction getAccessControlInfo() {\n  return Near.view(\"devgovgigs.near\", \"get_access_control_info\") ?? null;\n}\n\nfunction getAllAuthors() {\n  return Near.view(\"devgovgigs.near\", \"get_all_authors\") ?? null;\n}\n\nfunction getAllCommunitiesMetadata() {\n  return (\n    Near.view(\"truedove38.near\", \"get_all_communities_metadata\") ?? null\n  );\n}\n\nfunction getSocialWithBlockHeight(data) {\n  return Near.view(\"social.near\", \"get\", data) ?? null;\n}\n\nfunction getAllLabels() {\n  return Near.view(\"devgovgigs.near\", \"get_all_labels\") ?? null;\n}\n\nfunction getPost({ post_id }) {\n  return Near.view(\"devgovgigs.near\", \"get_post\", { post_id }) ?? null;\n}\n\nfunction getPostsByAuthor({ author }) {\n  return (\n    Near.view(\"devgovgigs.near\", \"get_posts_by_author\", { author }) ??\n    null\n  );\n}\n\nfunction getPostsByLabel({ label }) {\n  return (\n    Near.view(\"devgovgigs.near\", \"get_posts_by_label\", {\n      label,\n    }) ?? null\n  );\n}\n\nfunction setCommunitySocialDB({ handle, data }) {\n  return (\n    Near.call(\"truedove38.near\", \"set_community_socialdb\", {\n      handle,\n      data,\n    }) ?? null\n  );\n}\n\nfunction createDiscussion({ handle, data }) {\n  return (\n    Near.call(\"truedove38.near\", \"create_discussion\", {\n      handle,\n      data,\n    }) ?? null\n  );\n}\n\nfunction useQuery(name, params) {\n  const initialState = { data: null, error: null, isLoading: true };\n\n  const cacheState = useCache(\n    () =>\n      Near.asyncView(\n        \"devgovgigs.near\",\n        [\"get\", name].join(\"_\"),\n        params ?? {}\n      )\n        .then((response) => ({\n          ...initialState,\n          data: response ?? null,\n          isLoading: false,\n        }))\n        .catch((error) => ({\n          ...initialState,\n          error: props?.error ?? error,\n          isLoading: false,\n        })),\n\n    JSON.stringify({ name, params }),\n    { subscribe: false } // NOTE: I'm turning off subscribe to stop the constant re-rendering\n  );\n\n  return cacheState === null ? initialState : cacheState;\n}\n\nreturn {\n  getRootMembers,\n  removeMember,\n  hasModerator,\n  createCommunity,\n  getCommunity,\n  getFeaturedCommunities,\n  setFeaturedCommunities,\n  getAccountCommunityPermissions,\n  updateCommunity,\n  deleteCommunity,\n  setCommunityAddons,\n  setCommunityAddon,\n  getAccessControlInfo,\n  getAllAuthors,\n  getAllCommunitiesMetadata,\n  getAllAddons,\n  getAllLabels,\n  getPost,\n  getPostsByAuthor,\n  getPostsByLabel,\n  setCommunitySocialDB,\n  useQuery,\n};\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/devgovgigs.petersalomonsen.near/widget/core.adapter.devhub-contract", "fact_widget_deployments_id": "4a0b0cc3fe8632e252e3d1395773c0bf", "inserted_timestamp": "2024-03-26T23:28:12.830Z", "modified_timestamp": "2024-03-26T23:28:12.830Z", "__row_index": 57}