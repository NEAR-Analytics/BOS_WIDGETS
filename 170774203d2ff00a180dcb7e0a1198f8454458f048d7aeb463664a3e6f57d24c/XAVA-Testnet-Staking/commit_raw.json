{"tx_hash": "Bm696YWEcV1ZUMsgtWxQrfM1gUxwHW4nqysU1Z53eizb", "action_id_social": "fjarpFQgxtLvStN6y9iwt9A4MfkMBUFxAoTF2fVwSog-0-widget", "block_id": 95837669, "block_timestamp": "2023-07-06T12:32:28.092Z", "signer_id": "170774203d2ff00a180dcb7e0a1198f8454458f048d7aeb463664a3e6f57d24c", "widget_name": "XAVA-Testnet-Staking", "source_code": null, "metadata": null, "branch": {"draft": {"": "if (state.user === undefined) {\n  State.update({ user: Ethers.send(\"eth_requestAccounts\", [])[0] });\n}\n\nif (!state.user) return <Web3Connect />;\n\nconst XAVA_ADDRESS = \"0x64E7AB33C8764a9285cbd48A3b5977c51D2eE645\";\nconst XAVA_STAKING_PROXY = \"0x8BeBB9907c72708442BD4195Bd354A9bAdC2a816\";\nconst XAVA_ABIS = fetch(\n  \"https://raw.githubusercontent.com/avalaunch-app/xava-protocol/master/deployments/contract-abis.json\"\n);\nif (!XAVA_ABIS.ok) {\n  return \"loading\";\n}\n\nconst xavaAllocationIface = new ethers.utils.Interface(\n  JSON.parse(XAVA_ABIS.body).fuji.AllocationStaking\n);\n\nconst ERC20_ABI = fetch(\n  \"https://gist.githubusercontent.com/veox/8800debbf56e24718f9f483e1e40c35c/raw/f853187315486225002ba56e5283c1dba0556e6f/erc20.abi.json\"\n);\nif (!ERC20_ABI.ok) {\n  a;\n  return <p>\"Loading\"</p>;\n}\n\n// GET XAVA BALANCE\nconst tokenIface = new ethers.utils.Interface(ERC20_ABI.body);\nconst getXavaBalance = () => {\n  const encodedData = tokenIface.encodeFunctionData(\"balanceOf\", [state.user]);\n\n  return Ethers.provider()\n    .call({\n      to: XAVA_ADDRESS,\n      data: encodedData,\n    })\n    .then((rawBalance) => {\n      const receiverBalanceHex = tokenIface.decodeFunctionResult(\n        \"balanceOf\",\n        rawBalance\n      );\n\n      return Big(receiverBalanceHex.toString())\n        .div(Big(10).pow(18))\n        .toFixed(2)\n        .replace(/\\d(?=(\\d{3})+\\.)/g, \"$&,\");\n    });\n};\n\nconst getStakedXAVA = () => {\n  const encodedData = xavaAllocationIface.encodeFunctionData(\"deposited\", [\n    0,\n    state.user,\n  ]);\n\n  return Ethers.provider()\n    .call({\n      to: XAVA_STAKING_PROXY,\n      data: encodedData,\n    })\n    .then((rawBalance) => {\n      const receiverBalanceHex = xavaAllocationIface.decodeFunctionResult(\n        \"deposited\",\n        rawBalance\n      );\n\n      return Big(receiverBalanceHex.toString())\n        .div(Big(10).pow(18))\n        .toFixed(2)\n        .replace(/\\d(?=(\\d{3})+\\.)/g, \"$&,\");\n    });\n};\n\nconst setXavaBalance = () => {\n  getXavaBalance().then((xavaBalance) => {\n    console.log(xavaBalance);\n    State.update({ xavaBalance });\n  });\n};\n\nif (state.xavaBalance === undefined && state.user) {\n  setXavaBalance();\n}\n\nconst setStakedXava = () => {\n  getStakedXAVA().then((stakedXavaBalance) => {\n    console.log(stakedXavaBalance + \"  kakaka\");\n    State.update({ stakedXavaBalance });\n  });\n};\n\nif (state.stakedXavaBalance === undefined && state.user) {\n  setStakedXava();\n}\n\nreturn (\n  <div>\n    <p>You have: {state.xavaBalance} XAVA tokens</p>\n    <p>You have staked: {state.stakedXavaBalance} XAVA tokens</p>\n  </div>\n);\n"}}, "widget_modules_used": null, "widget_url": "https://near.social/#/170774203d2ff00a180dcb7e0a1198f8454458f048d7aeb463664a3e6f57d24c/widget/XAVA-Testnet-Staking", "fact_widget_deployments_id": "77cb0f3373246cbf0cee08e6316fbb92", "inserted_timestamp": "2000-01-01T00:00:00.000Z", "modified_timestamp": "2000-01-01T00:00:00.000Z", "__row_index": 1}