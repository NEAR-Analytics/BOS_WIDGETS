{"tx_hash": "FBRFBDddYxGobHH4mYHCRCTmBCD4g9hLjE1qDqRgkyLR", "action_id_social": "7v5aAZxFLudJcfznqNyb967MNdP4JKSkbYCniaCwjG2q-0-widget", "block_id": 88721192, "block_timestamp": "2023-04-03T11:56:46.812Z", "signer_id": "contribut3.near", "widget_name": "EntityForm", "source_code": "const createDate = () => {\n  const date = new Date();\n  const year = date.getFullYear();\n  const month = (date.getMonth() + 1).toString().padStart(2, \"0\");\n  const day = date.getDate().toString().padStart(2, \"0\");\n\n  return `${year}-${month}-${day}`;\n};\n\nconst ownerId = \"contribut3.near\";\nconst accountId = props.accountId ?? \"\";\nconst kind = props.kind ? [{ name: props.kind }] : [];\nconst startDate = props.startDate ?? createDate();\nconst forbiddenIds = new Set(\n  Near.view(ownerId, \"get_entities\", {}, \"final\", true) ?? []\n);\n\nState.init({\n  accountId,\n  name: props.name ?? \"\",\n  accountIdValid: true,\n  kind,\n  startDate,\n  entityFetched: false,\n});\n\nif (accountId && !state.entityFetched) {\n  Near.asyncView(\n    ownerId,\n    \"get_entity\",\n    { account_id: accountId },\n    \"final\"\n  ).then((entity) => {\n    const date = new Date(Number(entity.start_date));\n    const year = date.getFullYear();\n    const month = (date.getMonth() + 1).toString().padStart(2, \"0\");\n    const day = date.getDate().toString().padStart(2, \"0\");\n\n    State.update({\n      name: entity.name,\n      entityFetched: true,\n      kind: [{ name: entity.kind }],\n      startDate: `${year}-${month}-${day}`,\n    });\n  });\n}\n\nconst Label = styled.label`\n  font-weight: 600;\n  color: #344054;\n`;\n\nconst InputWrapper = styled.div`\n  margin-bottom: 0.5em;\n`;\n\nconst accountIdInput = (\n  <InputWrapper>\n    {accountId ? (\n      <>\n        <Label htmlFor=\"account-id\">Project account ID</Label>\n        <div\n          className=\"rounded-3 bg-light\"\n          style={{ height: \"5em\" }}\n          id=\"account-id\"\n        >\n          <Widget\n            src={`${ownerId}/widget/ProfileLine`}\n            props={{ accountId, imageSize: \"4em\", isEntity: true }}\n          />\n        </div>\n      </>\n    ) : (\n      <Widget\n        src={`${ownerId}/widget/ValidatedAccountIdInput`}\n        props={{\n          label: \"Project account ID *\",\n          value: state.accountId,\n          update: (accountId, accountIdValid) =>\n            State.update({ accountId, accountIdValid }),\n          forbiddenIds,\n        }}\n      />\n    )}\n  </InputWrapper>\n);\nconst nameInput = (\n  <InputWrapper>\n    <Widget\n      src={`${ownerId}/widget/NameInput`}\n      props={{\n        label: \"Project name *\",\n        value: state.name,\n        update: (name) => State.update({ name }),\n      }}\n    />\n  </InputWrapper>\n);\n\nconst kindInput = (\n  <InputWrapper>\n    <Widget\n      src={`${ownerId}/widget/EntityTypeInput`}\n      props={{\n        kind: state.kind,\n        update: (kind) => State.update({ kind }),\n        text: \"Type of project *\",\n      }}\n    />\n  </InputWrapper>\n);\n\nconst startDateInput = (\n  <InputWrapper>\n    <Widget\n      src={`${ownerId}/widget/DateInput`}\n      props={{\n        id: \"start-date\",\n        text: \"Founding date\",\n        date: state.startDate,\n        update: (startDate) => State.update({ startDate }),\n      }}\n    />\n  </InputWrapper>\n);\n\nconst onSubmit = () => {\n  if (!state.accountIdValid) {\n    return;\n  }\n\n  const args = {\n    account_id: state.accountId,\n    name: state.name,\n    kind: state.kind[0].name,\n    start_date: `${new Date(state.startDate).getTime()}`,\n  };\n\n  Near.call(ownerId, \"add_entity\", args);\n};\n\nconst Page = styled.div`\n  padding: 0 0.75em;\n  max-width: 100%;\n\n  h1 {\n    font-size: 2em;\n    margin-bottom: 0.75em;\n    padding-bottom: 0.75em;\n  }\n`;\n\nconst Form = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 0.75em;\n  padding: 1em;\n  border-radius: 4px;\n  background-color: #f9fafb;\n`;\n\nconst Controls = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n`;\n\nconst CloseButton = styled.a`\n  background-color: white;\n  padding: 0.7em;\n  border-radius: 4px;\n  border: 0;\n  color: #344054;\n  transition: box-shadow 0.2s ease-in-out;\n\n  &:hover {\n    text-decoration: none;\n    color: unset;\n    box-shadow: 0px 1px 2px rgba(16, 24, 40, 0.05);\n  }\n`;\n\nconst ConfirmButton = styled.button`\n  padding: 0.7em;\n  border-radius: 4px;\n  border: 0;\n  box-shadow: 0px 1px 2px rgba(16, 24, 40, 0.05);\n  background-color: ${({ valid }) => (valid ? \"#7f56d9\" : \"#344054\")};\n  color: white;\n  transition: background-color 0.2s ease-in-out;\n\n  &:hover {\n    ${({ valid }) => (valid ? \"background-color: #4f56d9;\" : \"\")}\n  }\n`;\n\nreturn (\n  <Page>\n    <h1>{!props.accountId ? \"Create new\" : \"Edit\"} project</h1>\n    <Form>\n      {accountIdInput}\n      {nameInput}\n      {kindInput}\n      {startDateInput}\n    </Form>\n    <Controls>\n      <CloseButton\n        href={`/#/${ownerId}/widget/Index?tab=home`}\n        onClick={() => props.update({ tab: \"home\" })}\n      >\n        Cancel\n      </CloseButton>\n      <ConfirmButton\n        valid={\n          state.name.length > 1 &&\n          state.accountIdValid &&\n          state.kind.length === 1\n        }\n        onClick={onSubmit}\n      >\n        {!props.accountId ? \"Create\" : \"Edit\"} project\n      </ConfirmButton>\n    </Controls>\n  </Page>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/contribut3.near/widget/EntityForm", "fact_widget_deployments_id": "336019ad631a02d949554670d91f2ac5", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 6}