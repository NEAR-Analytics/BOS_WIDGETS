{"tx_hash": "36e6NNLxi2s53dfNbkTq1tQnDtn8cvQSP44yTJEpkmez", "action_id_social": "Ekik7Yxbe5d9tJW4ScgxiF8opmCvfbEa31eMbPB7aj1x-0-widget", "block_id": 101107304, "block_timestamp": "2023-09-14T12:26:22.326Z", "signer_id": "contribut3.near", "widget_name": "Admin.Claims", "source_code": "const ownerId = \"contribut3.near\";\nconst apiUrl = \"https://api-staging-fur7.onrender.com\";\nconst search = props.search ?? \"\";\n\nState.init({\n  items: [],\n  itemsIsFetched: false,\n});\n\nasyncFetch(`${apiUrl}/data/claims?sort=timedesc&q=${search}`).then(\n  ({ body: items }) => State.update({ items, itemsIsFetched: true }),\n);\n\nif (!state.itemsIsFetched) {\n  return <>Loading...</>;\n}\n\nreturn (\n  <Widget\n    src={`${ownerId}/widget/List`}\n    props={{\n      filter: ([projectId, accountId]) =>\n        state.items.some(\n          ([pId, aId]) => pId === projectId && aId === accountId,\n        ),\n      items: state.items,\n      full: true,\n      createItem: ([projectId, accountId]) => (\n        <Widget\n          src={`${ownerId}/widget/Claim.Card`}\n          props={{ accountId, projectId }}\n        />\n      ),\n    }}\n  />\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/contribut3.near/widget/Admin.Claims", "fact_widget_deployments_id": "4825e6f6f95dc8fcec20cb124e622af6", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 2}