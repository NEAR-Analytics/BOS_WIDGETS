{"tx_hash": "9ziLwkhMvBLbSWgbxm1cMdoWLovjvizzpzHaBCDZoJvr", "action_id_social": "DfDU35c5RuX3fYYLUhPgFXk5d67DtBCeMbzmAERJPXod-0-widget", "block_id": 88784657, "block_timestamp": "2023-04-04T07:43:10.679Z", "signer_id": "contribut3.near", "widget_name": "ValidatedAccountIdInput", "source_code": "const label = props.label ?? \"Account ID:\";\nconst forbiddenIds = props.forbiddenIds ?? new Set();\nconst update = props.update;\nconst value = props.value;\n\nState.init({\n  valid: props.valid ?? true,\n  errorMessage: <></>,\n});\n\nconst validate = (accountId) => {\n  const accountIdRegex =\n    /^(([a-z\\d]+[\\-_])*[a-z\\d]+\\.)*([a-z\\d]+[\\-_])*[a-z\\d]+$/;\n\n  if (typeof accountId !== \"string\") {\n    State.update({\n      valid: false,\n      errorMessage: \"Account ID must be a text value!\",\n    });\n    update(accountId, false);\n    return;\n  }\n\n  if (accountId.length < 2) {\n    State.update({\n      valid: false,\n      errorMessage: \"Account ID must be at least 2 characters long!\",\n    });\n    update(accountId, false);\n    return;\n  }\n\n  if (accountId.length > 64) {\n    State.update({\n      valid: false,\n      errorMessage: \"Account ID must be at most 64 characters long!\",\n    });\n    update(accountId, false);\n    return;\n  }\n\n  if (!accountIdRegex.test(accountId)) {\n    State.update({\n      valid: false,\n      errorMessage: (\n        <>\n          Account ID must follow the rules specified{\" \"}\n          <a href=\"https://nomicon.io/DataStructures/Account#account-id-rules\">\n            here\n          </a>\n          !\n        </>\n      ),\n    });\n    update(accountId, false);\n    return;\n  }\n\n  if (forbiddenIds.has(accountId)) {\n    State.update({\n      valid: false,\n      errorMessage: \"This account ID has already been used!\",\n    });\n    update(accountId, false);\n    return;\n  }\n\n  State.update({ valid: true, errorMessage: \"\" });\n  update(accountId, true);\n};\n\nif (typeof value !== \"string\") {\n  return \"Cannot accept non string value for input!\";\n}\n\nif (!update) {\n  return \"Cannot render account ID input without update function!\";\n}\n\nconst Label = styled.label`\n  font-weight: 600;\n  color: #344054;\n`;\n\nreturn (\n  <>\n    <Label htmlFor=\"account-id\">{label}</Label>\n    <small style={{ color: \"red\" }}>\n      {state.valid ? null : state.errorMessage}\n    </small>\n    <input\n      type=\"text\"\n      id=\"account-id\"\n      placeholder=\"social.near, john.near...\"\n      className={`form-control ${\n        state.valid ? \"\" : \"was-validated is-invalid\"\n      }`}\n      value={value}\n      onChange={({ target }) => update(target.value)}\n      onBlur={() => validate(value)}\n      style={{\n        ...(!state.valid ? { borderColor: \"red\" } : {}),\n      }}\n    />\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/contribut3.near/widget/ValidatedAccountIdInput", "fact_widget_deployments_id": "dc5cf734bd8831872c128d52a69afd5e", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 2}