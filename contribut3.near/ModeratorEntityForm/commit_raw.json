{"tx_hash": "9ziLwkhMvBLbSWgbxm1cMdoWLovjvizzpzHaBCDZoJvr", "action_id_social": "DfDU35c5RuX3fYYLUhPgFXk5d67DtBCeMbzmAERJPXod-0-widget", "block_id": 88784657, "block_timestamp": "2023-04-04T07:43:10.679Z", "signer_id": "contribut3.near", "widget_name": "ModeratorEntityForm", "source_code": "const ownerId = \"contribut3.near\";\nconst accountId = props.accountId ? [{ name: props.accountId }] : [];\n\nconst kind = props.kind ? [{ name: props.kind }] : [];\nconst entityStatus = props.status ? [{ name: props.status }] : [];\nconst startDate = props.startDate ?? \"\";\nconst endDate = props.endDate ?? \"\";\n\nconst isModerator = Near.view(\n  ownerId,\n  \"check_is_moderator\",\n  { account_id: context.accountId },\n  \"final\",\n  true\n);\n\nif (isModerator === false) {\n  return \"You are not authorized to access this widget!\";\n}\n\nif (!isModerator) {\n  return \"Loading...\";\n}\n\nState.init({\n  fixed: !!props.accountId,\n  accountId,\n  accountIdValid: true,\n  name: props.name ?? \"\",\n  kind,\n  entityStatus,\n  startDate,\n  endDate,\n  updated: false,\n  existing: accountId.name\n    ? Near.view(ownerId, \"get_entity\", { account_id: accountId.name }, \"final\")\n    : null,\n});\n\nconst allStatuses = [\"Active\", \"Flagged\"].map((name) => ({ name }));\nconst allAccountIds = Object.keys(\n  Near.view(ownerId, \"get_entities\", {}, \"final\", true) ?? {}\n).map((name) => ({ name }));\n\nconst accountIdInput = (\n  <Widget\n    src={`${ownerId}/widget/ModeratorAccountIdInput`}\n    props={{\n      accountId: state.accountId,\n      allAccountIds,\n      fixed: state.fixed,\n      update: (update, accountIdValid) =>\n        State.update({ ...update, accountIdValid }),\n      valid: state.accountIdValid,\n    }}\n  />\n);\n\nconst nameInput = (\n  <div className=\"col-lg-12 mb-2\">\n    <Widget\n      src={`${ownerId}/widget/NameInput`}\n      props={{\n        label: \"Name of entity:\",\n        value: state.name,\n        update: (name) => State.update({ name }),\n      }}\n    />\n  </div>\n);\n\nconst kindInput = (\n  <div className=\"col-lg-6  mb-2\">\n    <Widget\n      src={`${ownerId}/widget/EntityTypeInput`}\n      props={{\n        kind: state.kind,\n        update: (kind) => State.update({ kind, updated: true }),\n      }}\n    />\n  </div>\n);\n\nconst statusInput = (\n  <div className=\"col-lg-6  mb-2\">\n    Status of entity:\n    <Typeahead\n      labelKey=\"name\"\n      onChange={(entityStatus) => State.update({ entityStatus, updated: true })}\n      options={allStatuses}\n      placeholder=\"Active or Flagged\"\n      selected={state.entityStatus}\n      positionFixed\n    />\n  </div>\n);\n\nconst startDateInput = (\n  <div className=\"col-lg-6 mb-2\">\n    <Widget\n      src={`${ownerId}/widget/DateInput`}\n      props={{\n        id: \"start-date\",\n        text: \"Start date of entity:\",\n        date: state.startDate,\n        update: (startDate) => State.update({ startDate, updated: true }),\n      }}\n    />\n  </div>\n);\n\nconst endDateInput = (\n  <div className=\"col-lg-6 mb-2\">\n    <Widget\n      src={`${ownerId}/widget/DateInput`}\n      props={{\n        id: \"end-date\",\n        text: \"End date of entity:\",\n        date: state.endDate,\n        update: (endDate) => State.update({ endDate, updated: true }),\n      }}\n    />\n  </div>\n);\n\nconst onSubmit = () => {\n  if (!state.accountIdValid) {\n    return;\n  }\n\n  const args = {\n    account_id: state.accountId[0].name,\n    entity: {\n      status: state.entityStatus[0].name,\n      name: state.name,\n      kind: state.kind[0].name,\n      start_date: `${new Date(state.startDate).getTime()}`,\n      end_date: state.endDate ? `${new Date(state.endDate).getTime()}` : \"\",\n    },\n  };\n\n  Near.call(ownerId, \"set_entity\", args);\n};\n\nconst header = (\n  <div className=\"card-header\">\n    {state.fixed ? \"Update\" : \"Edit/Create\"} an entity\n  </div>\n);\n\nconst body = (\n  <div className=\"card-body\">\n    <div className=\"row\">\n      {accountIdInput}\n      {nameInput}\n      {kindInput}\n      {statusInput}\n      {startDateInput}\n      {endDateInput}\n    </div>\n\n    <a\n      className={`btn ${\n        state.accountIdValid ? \"btn-primary\" : \"btn-secondary\"\n      } mb-2`}\n      onClick={onSubmit}\n    >\n      Submit\n    </a>\n  </div>\n);\n\nconst footer = (\n  <div className=\"card-footer\">\n    Preview:\n    {state.accountIdValid ? (\n      <Widget\n        src={`${ownerId}/widget/Entity`}\n        props={{\n          isPreview: true,\n          accountId: state.accountId[0].name,\n          notStandalone: true,\n          entity:\n            state.updated || !state.existing\n              ? {\n                  name: state.name,\n                  kind: state.kind[0].name,\n                  status: state.entityStatus[0].name,\n                  start_date: `${new Date(state.startDate).getTime()}`,\n                  end_date: `${new Date(state.endDate).getTime()}`,\n                }\n              : state.existing,\n        }}\n      />\n    ) : null}\n  </div>\n);\n\nreturn (\n  <div className=\"card\">\n    {header}\n    {body}\n    {footer}\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/contribut3.near/widget/ModeratorEntityForm", "fact_widget_deployments_id": "ea15982e1380987fc05426b69780ee93", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 2}