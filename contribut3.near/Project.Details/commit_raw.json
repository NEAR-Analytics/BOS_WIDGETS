{"tx_hash": "36e6NNLxi2s53dfNbkTq1tQnDtn8cvQSP44yTJEpkmez", "action_id_social": "Ekik7Yxbe5d9tJW4ScgxiF8opmCvfbEa31eMbPB7aj1x-0-widget", "block_id": 101107304, "block_timestamp": "2023-09-14T12:26:22.326Z", "signer_id": "contribut3.near", "widget_name": "Project.Details", "source_code": "const ownerId = \"contribut3.near\";\nconst isAdmin = props.isAdmin;\nconst accountId = props.accountId;\nconst canEdit = isAdmin;\n\nconst horizonOnSave = (project) => {\n  State.update({\n    project: {\n      ...state.project,\n      ...project,\n    },\n  });\n  Near.call(ownerId, \"edit_project\", {\n    account_id: accountId,\n    project: state.project,\n  });\n};\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: flex-start;\n  gap: 1.5em;\n  padding: 0.5em 0.2em;\n  max-width: 100%;\n  font-size: 0.9em;\n`;\n\nconst Heading = styled.div`\n  padding-bottom: 0.5em;\n  font-style: normal;\n  font-weight: 700;\n  font-size: 1.1875rem;\n  line-height: 1.4em;\n  color: #000;\n  width: 100%;\n`;\n\nState.init({\n  profile: null,\n  profileIsFetched: false,\n  project: null,\n  projectIsFetched: false,\n  metric: { value: \"MAA\", text: \"Monthly Active Accounts\" },\n});\n\nif (!state.profileIsFetched) {\n  Near.asyncView(\n    \"social.near\",\n    \"get\",\n    { keys: [`${accountId}/profile/**`] },\n    \"final\",\n    false,\n  ).then((profile) =>\n    State.update({\n      profile: profile[accountId].profile ?? {},\n      profileIsFetched: true,\n    }),\n  );\n}\n\nif (!state.projectIsFetched) {\n  Near.asyncView(\n    ownerId,\n    \"get_project\",\n    { account_id: accountId },\n    \"final\",\n    false,\n  ).then((project) => State.update({ project, projectIsFetched: true }));\n}\n\nif (!state.profileIsFetched || !state.projectIsFetched) {\n  return <>Loading...</>;\n}\n\nif (!state.namesIsFetched) {\n  Near.asyncView(\n    \"social.near\",\n    \"get\",\n    {\n      keys: state.project.founders.map((key) => `${key}/profile/name`),\n    },\n    \"final\",\n    false,\n  ).then((names) => {\n    State.update({\n      names: new Map(\n        Object.keys(names).map((account) => [\n          account,\n          names[account].profile.name,\n        ]),\n      ),\n      namesIsFetched: true,\n    });\n  });\n}\n\nconst onSave = (data) => {\n  Social.set(data, {\n    onCommit: () =>\n      State.update({ profile: { ...state.profile, ...data.profile } }),\n  });\n};\n\nconst stageMap = {\n  \"pre-seed\": \"Pre-seed\",\n  seed: \"Seed\",\n  \"series-a\": \"Series A\",\n  \"series-b\": \"Series B\",\n  \"series-c\": \"Series C\",\n  \"series-d\": \"Series D\",\n};\n\nconst Details = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, minmax(0, 1fr));\n  width: 100%;\n  gap: 1rem;\n\n  @media screen and (max-width: 768px) {\n    grid-template-columns: repeat(1, minmax(0, 1fr));\n  }\n\n  @media screen and (min-width: 768px) and (max-width: 1024px) {\n    grid-template-columns: repeat(2, minmax(0, 1fr));\n  }\n\n  &.full {\n    grid-template-columns: repeat(1, minmax(0, 1fr));\n  }\n`;\n\nconst Separator = styled(\"Separator.Root\")`\n  width: 100%;\n  height: 1px;\n  background-color: #eaeaea;\n`;\n\nconst List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 1em;\n  padding: 0;\n  margin: 0;\n  list-style: none;\n  width: 100%;\n`;\n\nconst Item = styled.li`\n  display: flex;\n  flex-direction: row;\n  gap: 1em;\n  align-items: center;\n  justify-content: flex-start;\n  width: 100%;\n  padding: 1.5em 0px;\n  border-bottom: 1px solid #eaecf0;\n`;\n\nreturn (\n  <Container>\n    <Heading>Details</Heading>\n    <Markdown text={state.profile.description} />\n    <Details>\n      <Widget\n        src={`${ownerId}/widget/Inputs.Viewable.Number`}\n        props={{\n          label: \"Company size\",\n          id: \"size\",\n          value: state.profile.team,\n          onSave: (team) => onSave({ profile: { team: `${team}` } }),\n          canEdit: isAdmin,\n        }}\n      />\n      <Widget\n        src={`${ownerId}/widget/Inputs.Viewable.Links`}\n        props={{\n          label: \"Links\",\n          id: \"links\",\n          value: state.profile.linktree ?? {},\n          onSave: (linktree) => onSave({ profile: { linktree } }),\n          canEdit: isAdmin,\n        }}\n      />\n      <Widget\n        src={`${ownerId}/widget/Inputs.Viewable.Text`}\n        props={{\n          label: \"Location\",\n          id: \"location\",\n          value: state.project.geo,\n          onSave: (geo) => horizonOnSave({ geo }),\n          canEdit: isAdmin,\n        }}\n      />\n      <Widget\n        src={`${ownerId}/widget/Inputs.Viewable.Text`}\n        props={{\n          label: \"Website\",\n          id: \"website\",\n          value: state.profile.linktree?.website ?? state.profile.website ?? \"\",\n          link: `https://${\n            state.profile.linktree.website ?? state.profile.website\n          }`,\n          onSave: (website) => onSave({ profile: { linktree: { website } } }),\n          canEdit: isAdmin,\n        }}\n      />\n    </Details>\n\n    <Separator />\n\n    <Heading>Project stats</Heading>\n    <Details className=\"full\">\n      <Widget\n        src={`${ownerId}/widget/Inputs.Select`}\n        props={{\n          label: \"Metric\",\n          options: [\n            { value: \"DAA\", text: \"Daily Active Accounts\" },\n            { value: \"MAA\", text: \"Monthly Active Accounts\" },\n            { value: \"MAT\", text: \"Monthly Average Transactions\" },\n            { value: \"DAT\", text: \"Daily Average Transactions\" },\n          ],\n          value: state.metric,\n          onChange: (metric) => State.update({ metric }),\n        }}\n      />\n      <Widget\n        src=\"y3k.near/widget/widgets.external.horizon_project_stats\"\n        props={{\n          project_name: accountId,\n          selectedMetric: state.metric,\n        }}\n      />\n    </Details>\n\n    <Separator />\n\n    <Heading>Tech info</Heading>\n    <Details>\n      <Widget\n        src={`${ownerId}/widget/Inputs.Viewable.Integration`}\n        props={{\n          label: \"Integration\",\n          value: state.project.integration,\n          onSave: ({ value: integration }) => horizonOnSave({ integration }),\n          canEdit: isAdmin,\n        }}\n      />\n      <Widget\n        src={`${ownerId}/widget/Inputs.Viewable.Phase`}\n        props={{\n          label: \"Development phase\",\n          value: state.profile.dev,\n          onSave: ({ value: dev }) => onSave({ profile: { dev } }),\n          canEdit: isAdmin,\n        }}\n      />\n      <Widget\n        src={`${ownerId}/widget/Inputs.Viewable.Distribution`}\n        props={{\n          label: \"Distribution\",\n          value: state.profile.distribution,\n          onSave: ({ value: distribution }) =>\n            onSave({ profile: { distribution } }),\n          canEdit: isAdmin,\n        }}\n      />\n    </Details>\n    <Widget\n      src={`${ownerId}/widget/Inputs.Viewable.Verticals`}\n      props={{\n        label: \"Verticals\",\n        value: state.profile.verticals ?? { [state.profile.category]: \"\" },\n        onSave: (verticals) =>\n          onSave({\n            profile: {\n              verticals: verticals.reduce(\n                (acc, vertical) => Object.assign(acc, { [vertical]: \"\" }),\n                {},\n              ),\n            },\n          }),\n        canEdit: isAdmin,\n      }}\n    />\n    <Widget\n      src={`${ownerId}/widget/Inputs.Viewable.ProductType`}\n      props={{\n        label: \"Product Type\",\n        value: state.profile.product_type,\n        onSave: (productType) =>\n          onSave({\n            profile: {\n              product_type: productType.reduce(\n                (acc, productType) => Object.assign(acc, { [productType]: \"\" }),\n                {},\n              ),\n            },\n          }),\n        canEdit: isAdmin,\n      }}\n    />\n\n    <Separator />\n\n    <Heading>Funding info</Heading>\n    <Details>\n      <Widget\n        src={`${ownerId}/widget/Inputs.Viewable.Select`}\n        props={{\n          label: \"Stage\",\n          id: \"stage\",\n          value: {\n            value: state.profile.stage,\n            text: stageMap[state.profile.stage],\n          },\n          options: [\n            { text: \"Pre-seed\", value: \"pre-seed\" },\n            { text: \"Seed\", value: \"seed\" },\n            { text: \"Series A\", value: \"series-a\" },\n            { text: \"Series B\", value: \"series-b\" },\n            { text: \"Series C\", value: \"series-c\" },\n            { text: \"Series D\", value: \"series-d\" },\n          ],\n          onSave: ({ value: stage }) => onSave({ profile: { stage } }),\n          canEdit: isAdmin,\n        }}\n      />\n    </Details>\n\n    <Separator />\n\n    <Heading>Documents</Heading>\n\n    <Widget\n      src={`${ownerId}/widget/Inputs.File`}\n      props={{\n        label: \"Pitch deck\",\n        id: \"pitch-deck\",\n        fileAccept: [\".pdf\"],\n        value: state.project.deck,\n        onSave: (deck) => horizonOnSave({ deck }),\n        canEdit,\n      }}\n    />\n    <Widget\n      src={`${ownerId}/widget/Inputs.File`}\n      props={{\n        label: \"White paper\",\n        id: \"white-paper\",\n        fileAccept: [\".pdf\"],\n        value: state.project.white_paper,\n        onSave: (white_paper) => horizonOnSave({ white_paper }),\n        canEdit,\n      }}\n    />\n    <Widget\n      src={`${ownerId}/widget/Inputs.File`}\n      props={{\n        label: \"Roadmap\",\n        id: \"roadmap\",\n        fileAccept: [\".pdf\"],\n        value: state.project.roadmap,\n        onSave: (roadmap) => horizonOnSave({ roadmap }),\n        canEdit,\n      }}\n    />\n    <Widget\n      src={`${ownerId}/widget/Inputs.File`}\n      props={{\n        label: \"Team\",\n        id: \"team\",\n        fileAccept: [\".pdf\"],\n        value: state.project.team_deck,\n        onSave: (team_deck) => horizonOnSave({ team_deck }),\n        canEdit,\n      }}\n    />\n    <Widget\n      src={`${ownerId}/widget/Inputs.File`}\n      props={{\n        label: \"Demo video\",\n        id: \"demo-video\",\n        fileAccept: [\"video/*\"],\n        value: state.project.demo,\n        onSave: (demo) => horizonOnSave({ demo }),\n        canEdit,\n      }}\n    />\n\n    <Separator />\n\n    <Heading>Founders</Heading>\n    {props.isAdmin ? (\n      <Widget\n        src={`${ownerId}/widget/Inputs.Founders`}\n        props={{\n          founders: state.project.founders,\n          update: (founders) => State.update({ founders }),\n          onSave: (founders) => horizonOnSave({ founders }),\n        }}\n      />\n    ) : !state.names ? (\n      <>Loading...</>\n    ) : (\n      <List>\n        {state.project.founders.map((founder) => (\n          <Item>\n            <Widget\n              src=\"near/widget/AccountProfileOverlay\"\n              props={{\n                accountId: founder,\n                children: (\n                  <>\n                    <Widget\n                      src={`${ownerId}/widget/Vendor.Icon`}\n                      props={{ accountId: founder, size: \"2em\" }}\n                    />\n                    <Widget\n                      src={`${ownerId}/widget/NameAndAccount`}\n                      props={{\n                        accountId: founder,\n                        name: state.names.get(founder),\n                        nameSize: \".9em\",\n                      }}\n                    />\n                  </>\n                ),\n                inline: true,\n              }}\n            />\n          </Item>\n        ))}\n      </List>\n    )}\n\n    <Separator />\n\n    <Heading>Details</Heading>\n    <Widget\n      src={`${ownerId}/widget/Inputs.Viewable.TextArea`}\n      props={{\n        label: \"What problem(s) are you solving?\",\n        id: \"problem\",\n        value: state.project.problem,\n        onSave: (problem) => horizonOnSave({ problem }),\n        canEdit: props.isAdmin,\n      }}\n    />\n    <Widget\n      src={`${ownerId}/widget/Inputs.Viewable.TextArea`}\n      props={{\n        label: \"What makes your team uniquely positioned for success?\",\n        id: \"success_position\",\n        value: state.project.success_position,\n        onSave: (success_position) => horizonOnSave({ success_position }),\n        canEdit: props.isAdmin,\n      }}\n    />\n    <Widget\n      src={`${ownerId}/widget/Inputs.Viewable.TextArea`}\n      props={{\n        label: \"Why are you building on NEAR?\",\n        id: \"why\",\n        value: state.project.why,\n        onSave: (why) => horizonOnSave({ why }),\n        canEdit: props.isAdmin,\n      }}\n    />\n    <Widget\n      src={`${ownerId}/widget/Inputs.Viewable.TextArea`}\n      props={{\n        label: \"What's your 5 year vision?\",\n        id: \"vision\",\n        value: state.project.vision,\n        onSave: (vision) => horizonOnSave({ vision }),\n        canEdit: props.isAdmin,\n      }}\n    />\n  </Container>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/contribut3.near/widget/Project.Details", "fact_widget_deployments_id": "7226af645909946ea983e48816cd6115", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 2}