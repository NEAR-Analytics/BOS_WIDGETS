{"tx_hash": "8TmphiGBZ8YrpYw3bHyQqfjWG2CCe1RWVoXYUXYbNK6G", "action_id_social": "EiyjUmBfDzuzzozUgcYdbTy4fcVKqEyansygWPFRw93C-0-widget", "block_id": 101410084, "block_timestamp": "2023-09-18T15:35:44.485Z", "signer_id": "contribut3.near", "widget_name": "Perks.Page", "source_code": "const ownerId = \"contribut3.near\";\nconst apiUrl = \"https://api-staging-fur7.onrender.com\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 3.5rem;\n  width: 100%;\n`;\n\nconst Heading = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: flex-start;\n  gap: 1rem;\n  width: 100%;\n`;\n\nconst Header = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  width: 100%;\n  gap: 1rem;\n\n  & > h1 {\n    color: var(--gray-900, #101828);\n    font-family: FK Grotesk;\n    font-size: 2rem;\n    font-style: normal;\n    font-weight: 700;\n    line-height: 2.5rem; /* 125% */\n    letter-spacing: 0.02rem;\n  }\n\n  & > span {\n    color: var(--ui-elements-gray, #7e868c);\n    leading-trim: both;\n    text-edge: cap;\n    font-family: \"FK Grotesk\";\n    font-size: 1.5rem;\n    font-style: normal;\n    font-weight: 400;\n    line-height: 2.5rem; /* 166.667% */\n    letter-spacing: 0.015rem;\n  }\n`;\n\nconst SubHeader = styled.h2`\n  color: var(--gray-900, #101828);\n  font-family: Inter;\n  font-size: 0.875rem;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 1.25rem; /* 142.857% */\n`;\n\nState.init({\n  perks: [],\n  perksIsFetched: false,\n  categories: [],\n  options: [],\n  search: \"\",\n});\n\nif (!state.perksIsFetched) {\n  asyncFetch(`${apiUrl}/data/perks/${context.accountId}`).then(\n    ({ body: perks }) => {\n      State.update({\n        perks: (perks ?? []).sort(\n          (a, b) =>\n            new Date(a.created_time).getTime() -\n            new Date(b.created_time).getTime()\n        ),\n        perksIsFetched: true,\n        options: [\n          \"All\",\n          ...new Set(perks.flatMap((perk) => perk.fields.category).sort()),\n        ],\n      });\n    }\n  );\n  return <>Loading...</>;\n}\n\nconst icon = (\n  <svg\n    width=\"20\"\n    height=\"20\"\n    viewBox=\"0 0 20 20\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M17.5 17.5L14.5834 14.5833M16.6667 9.58333C16.6667 13.4954 13.4954 16.6667 9.58333 16.6667C5.67132 16.6667 2.5 13.4954 2.5 9.58333C2.5 5.67132 5.67132 2.5 9.58333 2.5C13.4954 2.5 16.6667 5.67132 16.6667 9.58333Z\"\n      stroke=\"#667085\"\n      stroke-width=\"1.66667\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    />\n  </svg>\n);\n\nconst SearchInput = styled.input`\n  display: block;\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding: 0.5em 0.75em;\n  padding-left: 2.25em;\n  gap: 0.5em;\n  width: 359px;\n  max-width: 100%;\n  height: 36px;\n  border-radius: 6.25rem;\n  border: 1px solid var(--gray-300, #d0d5dd);\n  background: var(--base-white, #fff);\n  box-shadow: 0px 1px 2px 0px rgba(16, 24, 40, 0.05);\n`;\n\nconst Icon = styled.div`\n  position: absolute;\n  inset: 0.3em auto auto 0.6em;\n`;\n\nconst SearchContainer = styled.div`\n  position: relative;\n  max-width: 100%;\n`;\n\nconst SearchArea = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n`;\n\nconst Perks = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: stretch;\n  justify-content: flex-start;\n  flex-wrap: wrap;\n  gap: 1.5rem;\n  width: 100%;\n\n  & > div {\n    width: 100%;\n\n    @media screen and (min-width: 768px) {\n      width: calc((100% - 1.5rem) / 2);\n    }\n\n    @media screen and (min-width: 1024px) {\n      width: calc((100% - 1.5rem * 2) / 3);\n    }\n  }\n`;\n\nconst toRender = state.perks\n  .filter((perk) => {\n    if (\n      state.categories.length > 0 &&\n      !state.categories.includes(\"All\") &&\n      !perk.fields.category.some((category) =>\n        state.categories.includes(category)\n      )\n    ) {\n      return false;\n    }\n\n    return (\n      perk.fields.name.toLowerCase().includes(state.search.toLowerCase()) ||\n      perk.fields.description\n        .toLowerCase()\n        .includes(state.search.toLowerCase()) ||\n      perk.fields.benefit.toLowerCase().includes(state.search.toLowerCase())\n    );\n  })\n  .map((perk, index) => (\n    <div key={perk.id + index}>\n      <Widget src={`${ownerId}/widget/Perks.Card`} props={{ perk }} />\n    </div>\n  ));\n\nreturn (\n  <Container>\n    <Heading>\n      <Header>\n        <h1>Perks</h1>\n        <span>{state.perks.length}</span>\n      </Header>\n      <SubHeader>\n        Whether you are a early stage founder or are on mainnet, we\u2019ve got your\n        covered! Discover the top tools & perks to build in web3.\n      </SubHeader>\n    </Heading>\n    <SearchArea>\n      <Widget\n        src={`${ownerId}/widget/Perks.Categories`}\n        props={{\n          categories: state.options,\n          selected: state.categories,\n          setCategories: (categories) => State.update({ categories }),\n          results: state.perks,\n        }}\n      />\n      <SearchContainer>\n        <Icon>{icon}</Icon>\n        <SearchInput\n          type=\"search\"\n          value={state.search}\n          placeholder=\"Search\"\n          onChange={(e) => State.update({ search: e.target.value })}\n        />\n      </SearchContainer>\n    </SearchArea>\n    <Perks>{toRender}</Perks>\n  </Container>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/contribut3.near/widget/Perks.Page", "fact_widget_deployments_id": "17ecb125a4d8361f42f588a79a87f40b", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}