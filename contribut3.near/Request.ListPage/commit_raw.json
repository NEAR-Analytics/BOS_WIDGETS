{"tx_hash": "4wThjW21EMqpzE6KFwkP9QtAF36UeCzdPg3nJxH9b6Cf", "action_id_social": "431oLzta8GZ8iYEs2AbiqUmH5epEDW8FyCbUXrwsE4qo-0-widget", "block_id": 95368569, "block_timestamp": "2023-06-30T09:06:11.418Z", "signer_id": "contribut3.near", "widget_name": "Request.ListPage", "source_code": "const ownerId = \"contribut3.near\";\nconst urlProps = props.urlProps ?? {};\nconst getFilters = () => {\n  if (urlProps.sort) {\n    Storage.set(\"requests-sort\", urlProps.sort);\n  }\n\n  return [\"tags\", \"type\", \"payment\", \"source\", \"budget\", \"stage\"].reduce(\n    (acc, key) =>\n      urlProps[key]\n        ? Object.assign(acc, {\n            [key]: new Set(urlProps[key].split(\",\")),\n          })\n        : acc,\n    {}\n  );\n};\n\nconst selected = () => {\n  const selectedKeys = Object.keys(state.filters);\n  return (\n    selectedKeys.length > 0 &&\n    selectedKeys.some((key) => state.filters[key].size > 0)\n  );\n};\n\nconst url = () => {\n  const urlString = \"\";\n\n  if (selected()) {\n    const selectedKeys = Object.keys(state.filters);\n\n    urlString += selectedKeys\n      .map((key) => {\n        const values = Array.from(state.filters[key]);\n        return `${key}=${values.join(\",\")}`;\n      })\n      .join(\"&\");\n  }\n\n  if (state.search) {\n    if (urlString.length > 0) {\n      urlString += \"&\";\n    }\n    urlString += `q=${state.search}`;\n  }\n\n  if (state.sort) {\n    urlString += `&sort=${state.sort}`;\n  }\n\n  return urlString;\n};\n\nState.init({\n  filters: getFilters(),\n  search: urlProps.q,\n  sort: urlProps.sort,\n  requests: null,\n  requestsIsFetched: false,\n});\n\nif (!state.requestsIsFetched) {\n  asyncFetch(`https://api-staging-fur7.onrender.com/data/requests?${url()}`).then(\n    ({ body: requests }) => State.update({ requests, requestsIsFetched: true })\n  );\n\n  return <>Loading...</>;\n}\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  padding: 0;\n  width: 100%;\n  gap: 2em;\n\n  & > h1 {\n    font-family: \"FK Grotesk\";\n    font-style: normal;\n    font-weight: 700;\n    font-size: 32px;\n    line-height: 40px;\n    color: #101828;\n  }\n`;\n\nreturn (\n  <Container>\n    <h1>Contribution requests</h1>\n    <Widget\n      src={`${ownerId}/widget/Inputs.Filters`}\n      props={{\n        urlFilters: state.filters,\n        search: state.search,\n        entity: \"requests\",\n        change: ({ filters, search }) => {\n          State.update({ filters, search, requestsIsFetched: false });\n        },\n        filters: {\n          first: {\n            text: \"Tags\",\n            value: \"tags\",\n            options: [],\n          },\n          second: [\n            {\n              text: \"Request type\",\n              value: \"type\",\n              options: [\n                { text: \"One time\", value: \"onetime\" },\n                { text: \"Short\", value: \"short\" },\n                { text: \"Long\", value: \"long\" },\n                { text: \"Full time\", value: \"fulltime\" },\n              ],\n            },\n            {\n              text: \"Payment type\",\n              value: \"payment\",\n              options: [\n                { text: \"Flat rate\", value: \"flatrate\" },\n                { text: \"Time based\", value: \"timebased\" },\n              ],\n            },\n            {\n              text: \"Payment source\",\n              value: \"source\",\n              options: [\n                { text: \"Credits\", value: \"credits\" },\n                { text: \"Other\", value: \"other\" },\n              ],\n            },\n            {\n              text: \"Budget\",\n              value: \"budget\",\n              options: [\n                { text: \"0 - 100\", value: \"0-100\" },\n                { text: \"100 - 1000\", value: \"100-1000\" },\n                { text: \"1000 - 10000\", value: \"1000-10000\" },\n                { text: \"10000 - 100000\", value: \"10000-100000\" },\n              ],\n            },\n          ],\n        },\n        quickFilters: [\n          { text: \"Credits\", value: \"credits\", key: \"source\" },\n          { text: \"One time\", value: \"onetime\", key: \"type\" },\n          { text: \"Flat rate\", value: \"flatrate\", key: \"payment\" },\n          { text: \"Full time\", value: \"fulltime\", key: \"type\" },\n        ],\n      }}\n    />\n    <Widget\n      src={`${ownerId}/widget/Request.ListSection`}\n      props={{\n        entity: \"requests\",\n        count: state.requests.length,\n        items: state.requests,\n        onSort: (sort) => {\n          State.update({ sort, requestsIsFetched: false });\n        },\n        renderItem: ([accountId, cid]) => (\n          <Widget\n            src={`${ownerId}/widget/Request.Card`}\n            props={{ accountId, cid, large: true }}\n          />\n        ),\n      }}\n    />\n  </Container>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/contribut3.near/widget/Request.ListPage", "fact_widget_deployments_id": "0e31a2fae218d0571f1c80cd0e36b793", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 2}