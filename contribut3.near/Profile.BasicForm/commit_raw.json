{"tx_hash": "E1iCDRC8fwK64wPgcm9pbiNSCnVtJvh2vyLWAWiJZehC", "action_id_social": "BwshghXgAL1XAKSPtUDWp4JgEhQb3kNFqrhMYRwRmksm-0-widget", "block_id": 104540282, "block_timestamp": "2023-10-30T13:37:53.461Z", "signer_id": "contribut3.near", "widget_name": "Profile.BasicForm", "source_code": "const ownerId = \"contribut3.near\";\nconst onSave = props.onSave;\n\nconst supportedLinks = [\n  {\n    name: \"github\",\n    url: \"github.com/\",\n  },\n  {\n    name: \"discord\",\n    url: \"discord.com/\",\n  },\n  {\n    name: \"reddit\",\n    url: \"reddit.com/u/\",\n  },\n  {\n    name: \"twitter\",\n    url: \"twitter.com/\",\n  },\n  {\n    name: \"youtube\",\n    url: \"youtube.com/\",\n  },\n];\n\nState.init({ ...props.data });\n\nif (props.save) {\n  onSave(state);\n}\n\nconst Container = styled.div`\n  width: 100%;\n  display: flex;\n  padding: 2rem 3rem;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 2rem;\n  border-radius: 0.5rem;\n  border: 1px solid var(--ui-elements-light, #eceef0);\n  background: var(--background-light, #fafafa);\n`;\n\nconst HalfWidth = styled.div`\n  width: 50%;\n\n  @media screen and (max-width: 768px) {\n    width: 100%;\n  }\n`;\n\nconst data = (\n  <>\n    <Widget\n      src={`${ownerId}/widget/Inputs.TextArea`}\n      props={{\n        label: \"Description\",\n        placeholder: \"Give a short description of your project\",\n        value: state.description,\n        onChange: (description) => State.update({ description }),\n        validate: () => {\n          if (state.description.length > 500) {\n            State.update({\n              descriptionError: \"Description must be less than 500 characters\",\n            });\n            return;\n          }\n\n          State.update({ descriptionError: \"\" });\n        },\n        error: state.descriptionError,\n      }}\n    />\n    <HalfWidth>\n      <Widget\n        src={`${ownerId}/widget/Inputs.Text`}\n        props={{\n          label: \"Website\",\n          placeholder: \"Website URL (near.org)\",\n          value: state.website,\n          onChange: (website) => State.update({ website }),\n          validate: () => {\n            if (state.website.length > 50) {\n              State.update({\n                websiteError: \"The URL must be less than 50 characters\",\n              });\n              return;\n            }\n\n            State.update({ websiteError: \"\" });\n          },\n        }}\n      />\n    </HalfWidth>\n    <HalfWidth>\n      <Widget\n        src={`${ownerId}/widget/Inputs.Number`}\n        props={{\n          label: \"Team size\",\n          placeholder: 10,\n          value: state.company_size,\n          onChange: (company_size) =>\n            State.update({ company_size: `${company_size}` }),\n          validate: () => {\n            if (state.company_size < 1) {\n              State.update({\n                company_sizeError: \"Team size must be at least 1\",\n              });\n              return;\n            }\n\n            State.update({ company_sizeError: \"\" });\n          },\n        }}\n      />\n    </HalfWidth>\n    <HalfWidth>\n      <Widget\n        src={`${ownerId}/widget/Inputs.Text`}\n        props={{\n          label: \"Location\",\n          placeholder: \"San Fancisco, CA\",\n          value: state.geo,\n          onChange: (geo) => State.update({ geo }),\n          validate: () => {\n            if (state.geo.length > 100) {\n              State.update({\n                geoError: \"Location must be less than 100 characters\",\n              });\n              return;\n            }\n\n            State.update({ geoError: \"\" });\n          },\n        }}\n      />\n    </HalfWidth>\n    <HalfWidth>\n      <Widget\n        src={`${ownerId}/widget/Inputs.LabeledData`}\n        props={{\n          label: \"Social profiles\",\n          content: supportedLinks.map(({ name, url }) => (\n            <Widget\n              src={`${ownerId}/widget/Inputs.Social`}\n              props={{\n                start: url,\n                value: state.linktree[name] ?? \"\",\n                update: (s) => State.update({ ...state.linktree, [name]: s }),\n              }}\n            />\n          )),\n        }}\n      />\n    </HalfWidth>\n    <Widget\n      src={`${ownerId}/widget/Inputs.TextArea`}\n      props={{\n        label: \"What problem(s) are you solving?\",\n        placeholder: \" \",\n        value: state.problem,\n        onChange: (problem) => State.update({ problem }),\n        validate: () => {\n          if (state.problem.length > 500) {\n            State.update({\n              problemError: \"Problem must be less than 500 characters\",\n            });\n            return;\n          }\n\n          State.update({ problemError: \"\" });\n        },\n        error: state.problemError,\n      }}\n    />\n    <Widget\n      src={`${ownerId}/widget/Inputs.TextArea`}\n      props={{\n        label: \"What makes your team uniquely positioned for success?\",\n        placeholder: \" \",\n        value: state.success_position,\n        onChange: (success_position) => State.update({ success_position }),\n        validate: () => {\n          if (state.success_position.length > 500) {\n            State.update({\n              success_positionError:\n                \"Success position must be less than 500 characters\",\n            });\n            return;\n          }\n\n          State.update({ success_positionError: \"\" });\n        },\n        error: state.success_positionError,\n      }}\n    />\n    <Widget\n      src={`${ownerId}/widget/Inputs.TextArea`}\n      props={{\n        label: \"Why are you building on NEAR?\",\n        placeholder: \" \",\n        value: state.why,\n        onChange: (why) => State.update({ why }),\n        validate: () => {\n          if (state.why.length > 500) {\n            State.update({\n              whyError: \"Why must be less than 500 characters\",\n            });\n            return;\n          }\n\n          State.update({ whyError: \"\" });\n        },\n        error: state.whyError,\n      }}\n    />\n    <Widget\n      src={`${ownerId}/widget/Inputs.TextArea`}\n      props={{\n        label: \"Why do you think you are going to win?\",\n        placeholder: \" \",\n        value: state.win,\n        onChange: (win) => State.update({ win }),\n        validate: () => {\n          if (state.win.length > 500) {\n            State.update({\n              winError: \"Win must be less than 500 characters\",\n            });\n            return;\n          }\n\n          State.update({ winError: \"\" });\n        },\n        error: state.winError,\n      }}\n    />\n    <Widget\n      src={`${ownerId}/widget/Inputs.TextArea`}\n      props={{\n        label: \"What is your vision for the future?\",\n        placeholder: \" \",\n        value: state.vision,\n        onChange: (vision) => State.update({ vision }),\n        validate: () => {\n          if (state.vision.length > 500) {\n            State.update({\n              visionError: \"Vision must be less than 500 characters\",\n            });\n            return;\n          }\n\n          State.update({ visionError: \"\" });\n        },\n        error: state.visionError,\n      }}\n    />\n  </>\n);\n\nreturn <Container>{data}</Container>;\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/contribut3.near/widget/Profile.BasicForm", "fact_widget_deployments_id": "f378f93d702135bf91feb56fb60c8914", "inserted_timestamp": "2023-10-30T15:34:27.791Z", "modified_timestamp": "2023-10-30T15:34:27.791Z", "__row_index": 1}