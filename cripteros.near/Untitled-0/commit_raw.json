{"tx_hash": "ABSudKyihDAdcsuSJVKvaXgbdPwxoGQD6eGqJRNKxPSb", "action_id_social": "8iDL5HPPy43tus4XWqFhzMq5E6urJ9RtdZUG1pm3J221-0-widget", "block_id": 119573519, "block_timestamp": "2024-05-23T15:58:00.954Z", "signer_id": "cripteros.near", "widget_name": "Untitled-0", "source_code": "/**\n * Project: Create\n * By: efiz.near, sking.near\n * Repository: https://github.com/near-everything/bos-workspace\n */\n\nconst widget = (src, props, other) => (\n  <Widget src={src} props={props} {...other} />\n);\n\nconst Url = {\n  construct: (url, params) => {\n    let query = \"\";\n    Object.keys(params || {}).forEach((key) => {\n      if (params.hasOwnProperty(key)) {\n        query += Url.encode(key) + \"=\" + Url.encode(params[key]);\n        if (key !== Object.keys(params || {}).slice(-1)[0]) {\n          query += \"&\";\n        }\n      }\n    });\n    return url + \"?\" + query;\n  },\n  encode: (str) => {\n    return `${str}`\n      .replace(/[!'()*]/g, (c) => {\n        return \"%\" + c.charCodeAt(0).toString(16);\n      })\n      .replace(/[^!'\\(\\)~\\*A-Za-z0-9\\-_\\.~]/g, (c) => {\n        return \"%\" + c.charCodeAt(0).toString(16);\n      });\n  },\n};\n\nState.init({\n  page: props.page ?? \"projects\",\n  project: props.project ?? null,\n});\n\n// Alias m\u00e1s legible para el preview\nconst projectTitle = \"My Project Title\"; // Este es el alias m\u00e1s legible\nconst final_id = \"1afd4e7f-37fd-f85a-81d6-a2338b0fd4e5\";\nconst final_by = \"mundoaurora.near\";\n\n// Mant\u00e9n el UUID para operaciones internas\nconst id = final_id;\nconst by = final_by;\n\nif (final_id !== \"??replace_with_id??\") {\n  id = final_id;\n}\nif (final_by !== \"??replace_with_account??\") {\n  by = final_by;\n}\n\nconst project = Social.get(`${by}/thing/project/${id}/**`);\nconst docs = Social.get(`${by}/document/${id}/*/title`);\n\nif (project === null || docs === null) return <></>;\nif (project === undefined) return <>Project not found</>;\n\nState.init({ doc: props.doc, data: null });\n\nif (state.doc) {\n  State.update({ data: Social.get(`${by}/document/${id}/${state.doc}/**`) });\n} else {\n  State.update({ doc: Object.keys(docs || {})?.[0] });\n}\n\nconst goTo = ({ doc }) => {\n  doc && State.update({ doc: doc });\n};\n\nconst href = ({ doc }) => {\n  return `#/createit.near/widget/p?id=${id}&by=${by}&doc=${doc}`;\n};\n\nconst unflattenDocuments = (inputObject) => {\n  if (!inputObject) {\n    return inputObject;\n  }\n  const result = {};\n  Object.keys(inputObject).forEach((key) => {\n    const keys = key.split(\".\");\n    let currentLevel = result;\n\n    keys.forEach((k, i) => {\n      if (i === keys.length - 1) {\n        if (currentLevel[k] && Object.keys(currentLevel[k] || {}).length > 0) {\n          Object.assign(currentLevel[k], inputObject[key]);\n        } else {\n          currentLevel[k] = inputObject[key];\n        }\n        currentLevel[k].path = key;\n      } else {\n        currentLevel[k] = currentLevel[k] || {};\n        currentLevel[k].children = currentLevel[k].children || {};\n        currentLevel = currentLevel[k].children;\n      }\n    });\n  });\n\n  return result;\n};\n\nconst pages = [\n  {\n    id: \"projects\",\n    title: \"Projects\",\n    active: state.page === \"projects\",\n    widget: \"createit.near/widget/manager.index\",\n    provider: \"createit.near/widget/Provider\",\n  },\n  {\n    id: \"editor\",\n    title: \"Editor\",\n    active: state.page === \"editor\",\n    widget: \"createit.near/widget/editor.index\",\n    provider: \"createit.near/widget/Provider\",\n  },\n  {\n    id: \"manage\",\n    title: \"Manage\",\n    active: state.page === \"manage\",\n    widget: \"createit.near/widget/project.index\",\n    provider: \"createit.near/widget/Provider\",\n  },\n];\nconst activePage = pages.find((p) => p.active);\n\nconst navigate = (v, params) => {\n  State.update({ page: v, project: params?.project });\n  const url = Url.construct(\"#/createit.near/widget/home\", params);\n  Storage.set(\"url\", url);\n};\n\nreturn (\n  <>\n    <div className=\"row\">\n      {widget(\"createit.near/widget/ui.navbar\", {\n        template: \"createit.near/widget/templates.ui.navbar.default\",\n        onPageChange: navigate,\n        pages: [\"projects\"],\n      })}\n      <div className=\"col\">\n        <h1>{projectTitle}</h1>{\" \"}\n        {/* Muestra el alias m\u00e1s legible en la interfaz */}\n        {activePage.provider\n          ? widget(activePage.provider, {\n              Children: (p) => widget(activePage.widget, p),\n              navigate,\n              project,\n              ...props,\n              templates: {\n                Folders: \"createit.near/widget/editor.uiFolders\",\n              },\n            })\n          : widget(activePage.widget, { ...props, navigate, project })}\n      </div>\n    </div>\n  </>\n);\n", "metadata": {"fork_of": "cripteros.near/widget/Untitled-0@119573490"}, "branch": {"draft": null}, "widget_modules_used": null, "widget_url": "https://near.social/#/cripteros.near/widget/Untitled-0", "fact_widget_deployments_id": "50663b699cc824d0183dca2ae0bd2470", "inserted_timestamp": "2024-05-23T17:53:21.118Z", "modified_timestamp": "2024-05-23T17:53:21.118Z", "__row_index": 75}