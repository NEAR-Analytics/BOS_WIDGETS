{"tx_hash": "4LqXMGkL8j5pKrN3thjPRnqREojS2XpcYbU2AY9PH6jd", "action_id_social": "HmvRJkH6zZZ3NpTnQ32v87TSwejaYS5esgKKqJ4QEx5Z-0-widget", "block_id": 100668933, "block_timestamp": "2023-09-08T14:57:18.044Z", "signer_id": "marior.near", "widget_name": "NDCElections", "source_code": "const nominationsContractId = \"nominations.ndc-gwg.near\";\nconst loadingWidget = \"chess-game.near/widget/ChessGameLoading\";\nconst waitTime = 25;\nconst waitTimeOnErr = 500;\n\nconst fetchOptions = {\n  headers: {\n    \"x-api-key\": \"36f2b87a-7ee6-40d8-80b9-5e68e587a5b5\",\n  },\n};\n\nlet nominees = [...(state?.nominees ?? [])];\nif (!state.nominees) {\n  let offset = 0;\n  while (true) {\n    const res = fetch(\n      `https://api.pikespeak.ai/nominations/candidates?contract=${nominationsContractId}&offset=${offset}`,\n      fetchOptions\n    );\n    offset += 50;\n    if (!res.ok) {\n      return `Pikespeak API returned error: ${JSON.stringify(res)}`;\n    }\n    console.log(\"res\", res.body);\n\n    if (res.body.length === 0) break;\n    nominees = nominees.concat(res.body.slice(0, 5));\n    break;\n    // nominees = nominees.concat(res.body);\n    if (res.body.length < 50) break;\n  }\n}\n\nlet candidates = [...(state?.candidates ?? [])];\nState.init({\n  nominees: [...nominees],\n  candidates: [...candidates],\n  selectedCandidate: null,\n  errCount: state?.errCount ?? 0,\n});\n\nif (nominees.length > 0) {\n  const nominee = nominees.pop();\n\n  asyncFetch(\n    `https://api.pikespeak.ai/election/votes-by-candidate?contract=${nominationsContractId}&candidate=${nominee.nominee}`,\n    fetchOptions\n  ).then(({ ok, body }) => {\n    if (!ok) {\n      setTimeout(() => {\n        State.update({\n          errCount: state.errCount + 1,\n        });\n      }, waitTimeOnErr);\n      return;\n    }\n    console.log(\"body\", nominee.nominee, body);\n    if (Array.isArray(body) && body.length > 0) {\n      nominee.voters = body.map(({ voter }) => voter);\n    } else {\n      nominee.voters = [];\n    }\n\n    asyncFetch(\n      `https://api.nearblocks.io/v1/account/${nominee.nominee}/inventory`\n    ).then(({ ok, body }) => {\n      if (!ok) {\n        setTimeout(() => {\n          State.update({\n            errCount: state.errCount + 1,\n          });\n        }, waitTimeOnErr);\n        return;\n      }\n      nominee.inventory = body.inventory;\n\n      candidates.push(nominee);\n\n      setTimeout(() => {\n        State.update({\n          nominees,\n          candidates: [...candidates],\n        });\n      }, waitTime);\n    });\n  });\n\n  return (\n    <Widget\n      src={loadingWidget}\n      props={{\n        content: (\n          <div>\n            Loading data via Pikespeak & Nearblocks API. Remaining:{\" \"}\n            {nominees.length}\n          </div>\n        ),\n      }}\n    />\n  );\n}\n\nconsole.log(\"state\", state);\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  align-items: stretch;\n`;\n\nconst Card = styled.div`\n  display: flex;\n  align-items: center;\n  font-size: 1.1rem;\n  border-radius: 1rem;\n  background-color: ${({ selected }) =>\n    selected ? \"rgba(0,0,140,0.5) !important;\" : \"rgba(0,0,0,0.3);\"}}\n  cursor: pointer;\n\n  &:hover {\n    background-color: rgba(0,0,100,0.3);\n  }\n\n  img {\n    border-radius: 0.3rem;\n    width: 4rem;\n    height: 4rem;\n    margin: 0.6rem;\n  }\n`;\n\nconst CardContent = styled.div`\n  display: flex;\n  flex: 1 1 auto;\n  padding: 0.6rem;\n  align-items: stretch;\n  flex-wrap: wrap;\n  gap: 0.4rem;\n\n  h3 {\n    width: 100%;\n    font-size: 1.4rem;\n    font-weight: 600;\n    text-align: center;\n  }\n`;\n\n// {\n//   \"timestamp\": \"2023-08-18T13:39:37.514Z\",\n//   \"nominee\": \"manutegus.near\",\n//   \"house\": \"TransparencyCommission\",\n//   \"comment\": \"manutegus.near\",\n//   \"link\": \"\",\n//   \"is_revoked\": false,\n//   \"nomination_period\": \"2026-08-27T00:00:00.000Z\",\n//   \"contract\": \"nominations.ndc-gwg.near\",\n//   \"upvotes\": \"7\"\n// }\n\nconst selectCandidate = (candidateId) => {\n  State.update({\n    selectedCandidate: candidateId,\n  });\n};\n\nconst renderCandidates = (candidates) =>\n  candidates.map((candidate) => {\n    return (\n      <Card\n        onClick={() => selectCandidate(candidate.nominee)}\n        selected={candidate.nominee === state.selectedCandidate}\n      >\n        <img\n          src={`https://i.near.social/magic/thumbnail/https://near.social/magic/img/account/${candidate.nominee}`}\n          alt={candidate.nominee}\n        />\n        <CardContent>\n          <h3>{candidate.nominee}</h3>\n          <div>Fungible Tokens:</div>\n        </CardContent>\n      </Card>\n    );\n  });\n\nreturn <Wrapper>{renderCandidates(state.candidates)}</Wrapper>;\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/marior.near/widget/NDCElections", "fact_widget_deployments_id": "bce920d88f9c2a049fbb0ef6bc0b4767", "inserted_timestamp": "2023-09-08T16:49:11.048Z", "modified_timestamp": "2023-09-08T16:49:11.048Z", "__row_index": 6}