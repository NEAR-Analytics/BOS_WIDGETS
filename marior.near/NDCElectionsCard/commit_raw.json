{"tx_hash": "D6j8ujaLX24mnDSUzKoigkLJp7r6Stq1krg17E4khUdd", "action_id_social": "B2FNbYbaBAh6NME5eJdUUfyuzSkByn47jDaiPHqUha89-0-widget", "block_id": 101163470, "block_timestamp": "2023-09-15T06:43:02.272Z", "signer_id": "marior.near", "widget_name": "NDCElectionsCard", "source_code": "const { candidate, selected, isWinning, selectCandidate, ftMetas, nftMetas } =\n  props;\n\nconst Card = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  font-size: 1.1rem;\n  border-radius: 1rem;\n  background-color: ${({ selected, isWinning }) =>\n    selected\n      ? isWinning\n        ? \"lightblue !important\"\n        : \"#faa !important\"\n      : isWinning\n      ? \"lightgrey\"\n      : \"#fcc\"}};\n  cursor: ${({ selected }) => (selected ? \"unset;\" : \"pointer;\")};\n\n  &:hover {\n    background-color: #d3ecf4;\n  }\n`;\n\nconst CardHeader = styled.div`\n  display: flex;\n  align-items: center;\n\n  img {\n    border-radius: 0.3rem;\n    width: 4rem;\n    height: 4rem;\n    margin: 0.6rem;\n  }\n\n  h3 {\n    flex: 1 1 auto;\n  }\n\n  svg {\n    width: 3rem;\n    height: 3rem;\n    cursor: pointer;\n    margin-right: 1rem;\n\n    &:hover {\n      color: blue;\n    }\n  }\n\n  &:last-child {\n    flex: 1 1 auto;\n  }\n`;\n\nconst CardContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1 1 auto;\n  padding: 0.6rem;\n  align-items: stretch;\n  flex-wrap: wrap;\n  gap: 0.4rem;\n\n  h3 {\n    width: 100%;\n    font-size: 1.4rem;\n    font-weight: 600;\n    text-align: center;\n  }\n`;\n\nconst List = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  padding: 0.4rem 2rem;\n  gap: 0.4rem;\n`;\n\nconst Row = styled.div`\n  display: flex;\n  align-items: center;\n\n  &:not(:last-child) {\n    border-bottom: 1px dashed darkgrey;\n  }\n\n  > *:not(img) {\n    flex: 1 1 12rem;\n    padding: 0.2rem 0.4rem;\n  }\n\n  img {\n    width: 2rem;\n    height: 2rem;\n  }\n\n  svg {\n    width: 1.4rem;\n    height: 1.4rem;\n  }\n\n  .balance {\n    text-align: right;\n  }\n\n  .symbol {\n    min-width: 5rem;\n    max-width: 5rem;\n    text-overflow: ellipsis;\n    overflow: hidden;\n  }\n`;\n\nconst renderVoters = (voters) => (\n  <List>\n    {voters.map((voter) => (\n      <Row key={voter}>\n        <img\n          src={`https://i.near.social/magic/thumbnail/https://near.social/magic/img/account/${voter}`}\n          alt={voter}\n        />\n        <div>\n          <a\n            href={`/mob.near/widget/ProfilePage?accountId=${voter}`}\n            target=\"_blank\"\n            rel=\"noreferrer noopener\"\n          >\n            {voter}{\" \"}\n            <svg viewBox=\"0 0 24 24\">\n              <path\n                fill=\"currentColor\"\n                d=\"M14,3V5H17.59L7.76,14.83L9.17,16.24L19,6.41V10H21V3M19,19H5V5H12V3H5C3.89,3 3,3.9 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V12H19V19Z\"\n              ></path>\n            </svg>\n          </a>\n        </div>\n      </Row>\n    ))}\n  </List>\n);\n\nconst renderFts = (fts) => (\n  <List>\n    {fts\n      .map(({ contractId, amount }) => {\n        const metadata = ftMetas.find((meta) => meta.contractId === contractId);\n        if (!metadata) {\n          return null;\n        }\n        return (\n          <Row key={contractId}>\n            <img\n              src={`https://ipfs-cache.meteorwallet.app/network/mainnet/fts/${contractId}/image`}\n              alt={`${metadata.symbol} icon`}\n            />\n            <div>{metadata.name}</div>\n            <div className=\"balance\">{Number(amount).toFixed(2)}</div>\n            <div className=\"symbol\">{metadata.symbol}</div>\n          </Row>\n        );\n      })\n      .filter((val) => !!val)}\n  </List>\n);\n\nconst renderNfts = (nfts) => (\n  <List>\n    {nfts\n      .map(({ contractId, quantity }) => {\n        const metadata = nftMetas.find(\n          (meta) => meta.contractId === contractId\n        );\n        if (!metadata) {\n          return null;\n        }\n        return (\n          <Row key={contractId}>\n            <img\n              src={`https://ipfs-cache.meteorwallet.app/network/mainnet/nfts/${contractId}/image`}\n              alt={`${metadata.symbol} icon`}\n            />\n            <div>{metadata.name}</div>\n            <div className=\"balance\">{quantity}</div>\n            <div className=\"symbol\">{metadata.symbol}</div>\n          </Row>\n        );\n      })\n      .filter((val) => !!val)}\n  </List>\n);\n\nconst renderEvmAddresses = (addresses) => (\n  <List>\n    {addresses\n      .map((address) => {\n        return (\n          <Row key={address}>\n            <div>\n              <a\n                href={`https://debank.com/profile/${address}`}\n                target=\"_blank\"\n                rel=\"noreferrer noopener\"\n              >\n                {address}{\" \"}\n                <svg viewBox=\"0 0 24 24\">\n                  <path\n                    fill=\"currentColor\"\n                    d=\"M14,3V5H17.59L7.76,14.83L9.17,16.24L19,6.41V10H21V3M19,19H5V5H12V3H5C3.89,3 3,3.9 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V12H19V19Z\"\n                  ></path>\n                </svg>\n              </a>\n            </div>\n          </Row>\n        );\n      })\n      .filter((val) => !!val)}\n  </List>\n);\n\nlet holdings;\nif (candidate.fts) {\n  holdings = 0;\n  for (const { contractId, amount } of candidate.fts) {\n    holdings +=\n      (ftMetas.find((meta) => meta.contractId === contractId)?.price ?? 0) *\n      Number(amount);\n  }\n}\nif (candidate.amount) {\n  if (holdings == null) holdings = 0;\n  holdings +=\n    (ftMetas.find((meta) => meta.contractId === \"wrap.near\")?.price ?? 0) *\n    Big(candidate.amount).div(Big(10).pow(24)).toNumber();\n}\n\nreturn (\n  <Card\n    onClick={selected ? undefined : () => selectCandidate(candidate.nominee)}\n    selected={selected}\n    key={candidate.nominee}\n    isWinning={isWinning}\n  >\n    <CardHeader>\n      <img\n        src={`https://i.near.social/magic/thumbnail/https://near.social/magic/img/account/${candidate.nominee}`}\n        alt={candidate.nominee}\n      />\n      <h3>{candidate.nominee}</h3>\n      {selected && (\n        <svg viewBox=\"0 0 24 24\" onClick={() => selectCandidate(null)}>\n          <path\n            fill=\"currentColor\"\n            d=\"M4,12H20V14H4V12M4,9H20V11H4V9M16,4L12,8L8,4H11V1H13V4H16M8,19L12,15L16,19H13V22H11V19H8Z\"\n          ></path>\n        </svg>\n      )}\n    </CardHeader>\n    <CardContent>\n      <div>Votes: {candidate.voters?.length ?? \"?\"}</div>\n      {selected && candidate.voters && renderVoters(candidate.voters)}\n      <div>\n        Created:{\" \"}\n        {candidate.created\n          ? new Date(candidate.created / 1_000_000).toLocaleString()\n          : \"?\"}\n      </div>\n      <div>Total Transactions: {candidate.txCount ?? \"?\"}</div>\n      <div>Wallet Holdings: {holdings.toFixed(2) ?? \"?\"} USD</div>\n      <div>\n        Near:{\" \"}\n        {candidate.amount &&\n          Big(candidate.amount).div(Big(10).pow(24)).toFixed(2)}\n      </div>\n      <div>Total Fungible Tokens: {candidate.fts?.length ?? \"?\"}</div>\n      {selected && candidate.fts && renderFts(candidate.fts)}\n      <div>Total Non Fungible Tokens: {candidate.nfts?.length ?? \"?\"}</div>\n      {selected && candidate.nfts && renderNfts(candidate.nfts)}\n      <div>\n        Probable EVM addresses:{\" \"}\n        {selected\n          ? candidate.ethAddresses\n            ? renderEvmAddresses(candidate.ethAddresses)\n            : \"?\"\n          : candidate.ethAddresses?.length ?? \"-\"}\n      </div>\n    </CardContent>\n  </Card>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/marior.near/widget/NDCElectionsCard", "fact_widget_deployments_id": "0507fb1ef25e15c58d6d8e77c118f473", "inserted_timestamp": "2023-09-15T08:39:03.156Z", "modified_timestamp": "2023-09-15T08:39:03.156Z", "__row_index": 0}