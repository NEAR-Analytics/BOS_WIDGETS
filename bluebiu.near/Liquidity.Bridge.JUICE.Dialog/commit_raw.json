{"tx_hash": "Ddomf7RHfqsA2fK8HQwj3SD8SpG5cTERfCuENX6nV65b", "action_id_social": "GhnUiuCve19T6P1Fv7jq2e2pJCFiKAeGopZrsQhEeCfT-0-widget", "block_id": 117854156, "block_timestamp": "2024-04-29T02:59:16.019Z", "signer_id": "bluebiu.near", "widget_name": "Liquidity.Bridge.JUICE.Dialog", "source_code": "const StyledDialog = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: fixed;\n  left: 0;\n  top: 0;\n  right: 0;\n  bottom: 0;\n`\nconst StyledMasker = styled.div`\n  position: absolute;\n  left: 0;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.50);\n  z-index: 99;\n`\nconst StyledWrapContainer = styled.div`\n  position: relative;\n  width: 420px;\n  height: 253px;\n  flex-shrink: 0;\n\n  border-radius: 16px;\n  border: 1px solid #373A53;\n  background: #262836;\n  z-index: 999;\n`\nconst StyledWrapContainerTop = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  border-bottom: 1px solid #373A53;\n`\nconst StyledClose = styled.div`\n  position: absolute;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  right: 20px;\n  top: 20px;\n`\nconst StyledWrapContainerTopButton = styled.div`\n  position: relative;\n  padding: 15px 0 17px;\n  flex: 1;\n  text-align: center;\n  color: #979ABE;\n  font-family: Gantari;\n  font-size: 18px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: normal;\n  cursor: pointer;\n  &.active {\n    color: #FFF;\n    &:after {\n      content: \"\";\n      position: absolute;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      height: 3px;\n      background: #FFF;\n    }\n  }\n`\nconst StyledWrapContainerBottom = styled.div`\n  padding: 30px 20px 0;\n`\nconst StyledWrapOrUnwrapInput = styled.div`\n  padding: 12px 16px;\n  border-radius: 8px;\n  border: 1px solid #373A53;\n  background: #1B1E27;\n  height: 71px;\n`\nconst StyledWrapOrUnwrapInputTop = styled.div`\n  margin-bottom: 6px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`\nconst StyledWrapOrUnwrapInputBottom = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`\nconst StyledWrapOrUnwrapInputTopType = styled.div`\n  color: #979ABE;\n  font-family: Gantari;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n`\nconst StyledWrapOrUnwrapInputTopBalance = styled.div`\n  color: #979ABE;\n  font-family: Gantari;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n  span {\n    color: #FFF;\n    text-decoration-line: underline;\n  }\n`\nconst StyledWrapOrUnwrapInputBottomInput = styled.input`\n  padding: 0;\n  border: none;\n  outline: none;\n  background: transparent;\n  \n  color: #FFF;\n  font-family: Gantari;\n  font-size: 20px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n\n  &[type=\"number\"]::-webkit-outer-spin-button,\n  &[type=\"number\"]::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n  &[type=\"number\"] {\n    -moz-appearance: textfield;\n  }\n`\nconst StyledWrapOrUnwrapInputBottomSymbol = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 5px;\n`\nconst StyledWrapOrUnwrapInputBottomSymbolImage = styled.img`\n  width: 20px;\n`\nconst StyledWrapOrUnwrapInputBottomSymbolTxt = styled.div`\n  color: #FFF;\n  font-family: Gantari;\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n`\nconst StyledWrapOrUnwrapInputBottomInputTxt = styled.div`\n  color: #5E617E;\n  font-family: Gantari;\n  font-size: 20px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n`\nconst StyledWrapOrUnwrapButton = styled.div`\n  margin-top: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 380px;\n  height: 48px;\n  flex-shrink: 0;\n  cursor: pointer;\n  border-radius: 8px;\n  background: linear-gradient(180deg, #EEF3BF 0%, #E9F456 100%);\n\n  color: #02051E;\n  font-family: Montserrat;\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: normal;\n  &[disabled] {\n    cursor: not-allowed;\n    opacity: 0.3;\n  }\n`\nState.init({\n  categoryList: [\"Wrap\", \"Unwrap\"],\n  categoryIndex: 0,\n  wrapAmount: \"\",\n  unwrapAmount: \"\",\n  wrapLoading: false,\n  unwrapLoading: false,\n  balances: {\n    ETH: 0,\n    WETH: 0\n  }\n\n})\nconst {\n  toast,\n  sender,\n  chainId,\n  SYMBOL_ADDRESS,\n  onCloseWrap,\n} = props\n\nconst isWrapInSufficient = Number(state?.wrapAmount ?? 0) > Number(state?.balances[\"ETH\"] ?? 0)\nconst isUnwrapInSufficient = Number(state?.unwrapAmount ?? 0) > Number(state?.balances[\"WETH\"] ?? 0)\n\nfunction handleQueryBalances() {\n  Ethers.provider()\n    .getBalance(sender)\n    .then((result) => {\n      const balances = state.balances\n      balances[\"ETH\"] = Big(ethers.utils.formatEther(result)).toFixed(4)\n      State.update({\n        balances\n      })\n    });\n  const abi = [{\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"value\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }]\n  const contract = new ethers.Contract(\n    ethers.utils.getAddress(SYMBOL_ADDRESS),\n    abi,\n    Ethers.provider().getSigner()\n  );\n  contract.balanceOf(sender).then(result => {\n    const balances = state.balances\n    balances[\"WETH\"] = Big(ethers.utils.formatEther(result)).toFixed(4)\n    State.update({\n      balances\n    })\n  })\n}\nfunction handleAmountChange(amount) {\n  if (Number(amount) < 0) {\n    return\n  }\n  const keyArray = [\"wrapAmount\", \"unwrapAmount\"]\n  if (Number(amount) === 0) {\n    State.update({\n      [keyArray[state.categoryIndex]]: amount,\n    })\n    return\n  }\n  State.update({\n    [keyArray[state.categoryIndex]]: amount\n  })\n}\nfunction handleWrap() {\n  State.update({\n    wrapLoading: true\n  })\n  const toastId = toast?.loading({\n    title: `Wrap ${state.wrapAmount} ETH`,\n  });\n  const abi = [{\n    \"inputs\": [],\n    \"name\": \"deposit\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  }]\n  const contract = new ethers.Contract(\n    ethers.utils.getAddress(SYMBOL_ADDRESS),\n    abi,\n    Ethers.provider().getSigner()\n  );\n  const _amount = Big(state.wrapAmount)\n    .mul(Big(10).pow(18))\n    .toFixed(0)\n  contract.deposit({ value: _amount })\n    .then(result => {\n      const { transactionHash } = result;\n      toast?.dismiss(toastId);\n      State.update({\n        wrapLoading: false\n      })\n      toast?.success({\n        title: \"Wrap Successfully!\",\n        text: `Wrap ${state.wrapAmount} ETH`,\n        tx: transactionHash,\n        chainId,\n      });\n      handleRefresh()\n    })\n    .catch(error => {\n      console.log('=error', error)\n      State.update({\n        wrapLoading: false\n      })\n      toast?.fail({\n        title: \"Wrap Failed!\",\n        text: error?.message?.includes(\"user rejected transaction\")\n          ? \"User rejected transaction\"\n          : `Wrap ${state.wrapAmount} ETH`,\n      });\n    })\n}\nfunction handleUnwrap() {\n  State.update({\n    unwrapLoading: true\n  })\n  const toastId = toast?.loading({\n    title: `Unwrap ${state.wrapAmount} WETH`,\n  });\n  const abi = [{\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"wad\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"withdraw\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }]\n  const contract = new ethers.Contract(\n    ethers.utils.getAddress(SYMBOL_ADDRESS),\n    abi,\n    Ethers.provider().getSigner()\n  );\n  const _amount = Big(state.unwrapAmount)\n    .mul(Big(10).pow(18))\n    .toFixed(0)\n  contract.withdraw(_amount)\n    .then(result => {\n      const { status, transactionHash } = result;\n      toast?.dismiss(toastId);\n      // if (status !== 1) throw new Error(\"\");\n      State.update({\n        unwrapLoading: false\n      })\n      toast?.success({\n        title: \"Unwrap Successfully!\",\n        text: `Unwrap ${state.unwrapAmount} WETH`,\n        tx: transactionHash,\n        chainId,\n      });\n      handleRefresh()\n    })\n    .catch(error => {\n      console.log('=err0r', error)\n      State.update({\n        unwrapLoading: false\n      })\n      toast?.fail({\n        title: \"Unwrap Failed!\",\n        text: error?.message?.includes(\"user rejected transaction\")\n          ? \"User rejected transaction\"\n          : `Unwrap ${state.unwrapAmount} ETH`,\n      });\n    })\n}\nfunction handleRefresh() {\n  handleQueryBalances()\n}\nuseEffect(() => {\n  handleRefresh()\n}, [])\n\nreturn (\n  <StyledDialog>\n    <StyledMasker onClick={onCloseWrap} />\n    <StyledWrapContainer>\n      <StyledWrapContainerTop>\n        {\n          state.categoryList.map((category, index) => (\n            <StyledWrapContainerTopButton\n              key={index}\n              className={state.categoryIndex === index ? \"active\" : \"\"}\n              onClick={() => {\n                State.update({\n                  categoryIndex: index\n                })\n              }}\n            >{category}</StyledWrapContainerTopButton>\n          ))\n        }\n        <StyledClose onClick={onCloseWrap}>\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" viewBox=\"0 0 12 12\" fill=\"none\">\n            <path d=\"M7.73284 6.00004L11.7359 1.99701C12.0368 1.696 12.0882 1.2593 11.8507 1.0219L10.9779 0.14909C10.7404 -0.0884124 10.3043 -0.0363122 10.0028 0.264491L6.00013 4.26743L1.99719 0.264591C1.69619 -0.036712 1.25948 -0.0884125 1.02198 0.14939L0.149174 1.0223C-0.0882277 1.2594 -0.0368271 1.6961 0.264576 1.99711L4.26761 6.00004L0.264576 10.0033C-0.0363271 10.3041 -0.0884277 10.7405 0.149174 10.978L1.02198 11.8509C1.25948 12.0884 1.69619 12.0369 1.99719 11.736L6.00033 7.73276L10.0029 11.7354C10.3044 12.037 10.7405 12.0884 10.978 11.8509L11.8508 10.978C12.0882 10.7405 12.0368 10.3041 11.736 10.0029L7.73284 6.00004Z\" fill=\"#979ABE\" />\n          </svg>\n        </StyledClose>\n      </StyledWrapContainerTop>\n      {\n        state.categoryIndex === 0 ? (\n          <StyledWrapContainerBottom>\n            <StyledWrapOrUnwrapInput>\n              <StyledWrapOrUnwrapInputTop>\n                <StyledWrapOrUnwrapInputTopType>Deposit</StyledWrapOrUnwrapInputTopType>\n                <StyledWrapOrUnwrapInputTopBalance>\n                  Balance: <span>{state.balances[\"ETH\"]}</span>\n                </StyledWrapOrUnwrapInputTopBalance>\n              </StyledWrapOrUnwrapInputTop>\n              <StyledWrapOrUnwrapInputBottom>\n                <StyledWrapOrUnwrapInputBottomInput type=\"number\" placeholder=\"0.0\" value={state.wrapAmount} onChange={event => handleAmountChange(event.target.value)} />\n                <StyledWrapOrUnwrapInputBottomSymbol>\n                  <StyledWrapOrUnwrapInputBottomSymbolImage src=\"https://ipfs.near.social/ipfs/bafkreib3g5xhs4b3djuvtarhutz5ayogdi7bz7nft6a2zg2e7pi2445uny\" />\n                  <StyledWrapOrUnwrapInputBottomSymbolTxt>ETH</StyledWrapOrUnwrapInputBottomSymbolTxt>\n                </StyledWrapOrUnwrapInputBottomSymbol>\n              </StyledWrapOrUnwrapInputBottom>\n            </StyledWrapOrUnwrapInput>\n            {\n              isWrapInSufficient ? (\n                <StyledWrapOrUnwrapButton disabled>InSufficient Balance</StyledWrapOrUnwrapButton>\n              ) : state.wrapLoading ? (\n                <StyledWrapOrUnwrapButton disabled>\n                  <Widget src={\"bluebiu.near/widget/Liquidity.Bridge.Loading\"} />\n                </StyledWrapOrUnwrapButton>\n              ) : state.wrapAmount > 0 ? (\n                <StyledWrapOrUnwrapButton onClick={handleWrap}>Wrap</StyledWrapOrUnwrapButton>\n              ) : (\n                <StyledWrapOrUnwrapButton disabled>Wrap</StyledWrapOrUnwrapButton>\n              )\n            }\n          </StyledWrapContainerBottom>\n        ) : (\n          <StyledWrapContainerBottom>\n            <StyledWrapOrUnwrapInput>\n              <StyledWrapOrUnwrapInputTop>\n                <StyledWrapOrUnwrapInputTopType>Deposit</StyledWrapOrUnwrapInputTopType>\n                <StyledWrapOrUnwrapInputTopBalance>\n                  Balance: <span>{state.balances[\"WETH\"]}</span>\n                </StyledWrapOrUnwrapInputTopBalance>\n              </StyledWrapOrUnwrapInputTop>\n              <StyledWrapOrUnwrapInputBottom>\n                <StyledWrapOrUnwrapInputBottomInput type=\"number\" placeholder=\"0.0\" value={state.unwrapAmount} onChange={event => handleAmountChange(event.target.value)} />\n                <StyledWrapOrUnwrapInputBottomSymbol>\n                  <StyledWrapOrUnwrapInputBottomSymbolImage src=\"https://ipfs.near.social/ipfs/bafkreif5jqf6onhhj6aqfjt6zq2lqanw6o3kzmb7exnqjw42p4hpwrojmu\" />\n                  <StyledWrapOrUnwrapInputBottomSymbolTxt>WETH</StyledWrapOrUnwrapInputBottomSymbolTxt>\n                </StyledWrapOrUnwrapInputBottomSymbol>\n              </StyledWrapOrUnwrapInputBottom>\n            </StyledWrapOrUnwrapInput>\n            {\n              isUnwrapInSufficient ? (\n                <StyledWrapOrUnwrapButton disabled>InSufficient Balance</StyledWrapOrUnwrapButton>\n              ) : state.unwrapLoading ? (\n                <StyledWrapOrUnwrapButton disabled>\n                  <Widget src={\"bluebiu.near/widget/Liquidity.Bridge.Loading\"} />\n                </StyledWrapOrUnwrapButton>\n              ) : state.unwrapAmount > 0 ? (\n                <StyledWrapOrUnwrapButton onClick={handleUnwrap}>Unwrap</StyledWrapOrUnwrapButton>\n              ) : (\n                <StyledWrapOrUnwrapButton disabled>Unwrap</StyledWrapOrUnwrapButton>\n              )\n            }\n          </StyledWrapContainerBottom>\n        )\n      }\n    </StyledWrapContainer>\n  </StyledDialog>\n)", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bluebiu.near/widget/Liquidity.Bridge.JUICE.Dialog", "fact_widget_deployments_id": "d1c6f291931a5e6e4f2b925a9907c15c", "inserted_timestamp": "2024-04-29T04:40:36.818Z", "modified_timestamp": "2024-04-29T04:40:36.818Z", "__row_index": 2}