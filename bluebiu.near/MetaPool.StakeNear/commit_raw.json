{"tx_hash": "5CwoHeELiAeMZe9jB1RHafGhoM2GpnTmRrq3htKwg3Cz", "action_id_social": "Ec5DoUmRpiZp91itGvn5Pb2tiMXmJNXynCewcVk1fBq-0-widget", "block_id": 100855061, "block_timestamp": "2023-09-11T03:12:19.639Z", "signer_id": "bluebiu.near", "widget_name": "MetaPool.StakeNear", "source_code": "const {\n  chain,\n  stnearPrice,\n  stnearPriceUsd,\n  nearUsdPrice,\n  token,\n  lpToken,\n  contractId,\n  contractData,\n  network,\n} = props;\n\nconst Button = styled.div`\n  font-size: 14px;\n  font-weight: 500;\n  color: rgba(51, 44, 75, 1);\n  background-color: #c7ff18;\n  border-radius: 6px;\n  width: 80px;\n  height: 36px;\n  line-height: 36px;\n  text-align: center;\n  flex-shrink: 0;\n  margin-left: 10px;\n  cursor: pointer;\n`;\n\nconst StakeWrapper = styled.div`\n  @media (max-width: 768px) {\n    padding: 0px 20px 20px;\n  }\n`;\nconst StakeNear = styled.div`\n  @media (max-width: 768px) {\n    padding-top: 20px;\n  }\n`;\n\nconst nearAccount = context.accountId;\n\nState.init({\n  stakeType: 0, // 0 for stake, 1 for fastunstake, 2 for delayed stake\n  stakable: false,\n  amount: \"\",\n  balanceLoading: false,\n  amountOut: \"\",\n  isUpdateAccountInfo: true,\n});\n\nconst utils = {\n  formatGetValue: (amount) => {\n    if (!amount || parseFloat(amount) <= 0 || !stnearPriceUsd) return 0;\n    return (amount / stnearPriceUsd).toFixed(5);\n  },\n  formatWithdrawalsTime: () => {\n    return \"\";\n    // September 22nd, 06:17\n  },\n};\n\nconst getBalance = () => {\n  if (!nearAccount) return;\n  asyncFetch(network, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      jsonrpc: \"2.0\",\n      id: \"dontcare\",\n      method: \"query\",\n      params: {\n        request_type: \"view_account\",\n        finality: \"final\",\n        account_id: nearAccount,\n      },\n    }),\n  })\n    .then((res) => {\n      const amount = res.body.result.amount;\n      const balance = amount\n        ? Big(ethers.utils.formatUnits(amount, 24)).toFixed(4, 0)\n        : \"0\";\n      if (\n        Big(balance)\n          .sub(state.balance || 0)\n          .abs()\n          .gt(0.5)\n      ) {\n        State.update({\n          balanceLoading: false,\n          balance,\n        });\n      } else {\n        setTimeout(() => {\n          getBalance();\n        }, 500);\n      }\n    })\n    .catch((err) => {\n      State.update({\n        balanceLoading: false,\n        balance: \"0\",\n      });\n    });\n};\n\nconst renderButton = () => {\n  if (!nearAccount) {\n    return (\n      <Widget\n        src=\"bluebiu.near/widget/MetaPool.ConnectButton\"\n        props={{ isNear: true }}\n      />\n    );\n  }\n  return (\n    <Widget\n      src=\"bluebiu.near/widget/MetaPool.StakeNearButton\"\n      props={{\n        disabled: !state.stakable,\n        amount: state.amount,\n        lpToken,\n        stakedBalance: state.stakedBalance,\n        stakeType: state.stakeType,\n        contractId,\n        stnearPriceUsd,\n        onSuccess: () => {\n          if (state.stakeType === 0) {\n            getBalance();\n            return;\n          }\n          State.update({\n            amount: \"\",\n            errorTips: \"\",\n            amountOut: \"\",\n            isUpdateAccountInfo: true,\n          });\n        },\n      }}\n    />\n  );\n};\n\nif (!state.balance) {\n  getBalance();\n}\n\nreturn (\n  <StakeNear>\n    <Widget\n      src=\"bluebiu.near/widget/MetaPool.StakeNearAccountInfo\"\n      props={{\n        contractId,\n        isUpdate: state.isUpdateAccountInfo,\n        account: nearAccount,\n        onLoad: (data) => {\n          if (\n            data.stakedBalance &&\n            Big(data.stakedBalance)\n              .sub(state.stakedBalance || 0)\n              .abs()\n              .gt(0.5)\n          ) {\n            State.update({\n              isUpdateAccountInfo: false,\n              ...data,\n            });\n          }\n        },\n      }}\n    />\n    <Widget\n      src=\"bluebiu.near/widget/MetaPool.Switcher\"\n      props={{\n        type: state.stakeType,\n        onChange: (stakeType) => {\n          State.update({\n            stakeType,\n            amount: \"\",\n            amountOut: \"\",\n            isUpdateAccountInfo: !!stakeType,\n            errorTips: \"\",\n          });\n        },\n      }}\n    />\n    <StakeWrapper>\n      {false ? (\n        <div className=\"mt_20\">\n          <Widget\n            src=\"bluebiu.near/widget/MetaPool.Alert\"\n            props={{\n              text: (\n                <span>\n                  The promotional launch period is a great opportunity to earn\n                  up to {nearApy}% APY, but keep in mind that your tokens will\n                  be locked until{\" \"}\n                  <span className=\"fw_700\">\n                    {utils.formatWithdrawalsTime()}\n                  </span>\n                  . After that, you'll be able to unstake them and withdraw your\n                  earnings.\n                </span>\n              ),\n            }}\n          />\n        </div>\n      ) : (\n        <>\n          {state.stakeType === 2 && (\n            <div className=\"mt_20\">\n              <Widget\n                src=\"bluebiu.near/widget/MetaPool.Alert\"\n                props={{\n                  text: `Delayed unstake takes up to 6 days to complete.`,\n                  button: (\n                    <Button\n                      onClick={() => {\n                        State.update({\n                          stakeType: 1,\n                          amount: \"\",\n                          amountOut: \"\",\n                          errorTips: \"\",\n                        });\n                      }}\n                    >\n                      Try fast\n                    </Button>\n                  ),\n                }}\n              />\n            </div>\n          )}\n          <Widget\n            src=\"bluebiu.near/widget/MetaPool.StakeInput\"\n            props={{\n              stakeType: state.stakeType,\n              price: nearUsdPrice || 0,\n              amount: state.amount,\n              errorTips: state.errorTips,\n              balance: state.stakeType ? state.stakedBalance : state.balance,\n              balanceLoading: state.balanceLoading,\n              token,\n              lpToken,\n              isNear: true,\n              onAmountChange: (amount) => {\n                const balance = state.stakeType\n                  ? state.stakedBalance\n                  : state.balance;\n                State.update({\n                  amount: amount,\n                  stakable:\n                    Number(amount) &&\n                    !isNaN(Number(balance)) &&\n                    Big(balance).gt(amount) &&\n                    !Big(amount).lt(1),\n                  amountOut: utils.formatGetValue(amount),\n                });\n              },\n            }}\n          />\n          <Widget\n            src=\"bluebiu.near/widget/MetaPool.StakeResult\"\n            props={{\n              chain,\n              lpToken,\n              token,\n              stakeType: state.stakeType,\n              value: state.amountOut,\n              stnearPrice,\n            }}\n          />\n          {state.stakeType === 1 && (\n            <div className=\"mt_20\">\n              <Widget\n                src=\"bluebiu.near/widget/MetaPool.Alert\"\n                props={{\n                  text: `Fee is 0.3%`,\n                }}\n              />\n            </div>\n          )}\n          {state.stakeType === 2 && !!Number(state.amount) && (\n            <div className=\"mt_20\">\n              <Widget\n                src=\"bluebiu.near/widget/MetaPool.Alert\"\n                props={{\n                  text: `Funds will be available in approximately 2 days 0 hours.\n                    You will NOT receive rewards during that period.`,\n                }}\n              />\n            </div>\n          )}\n          <div className=\"mt_20\">{renderButton()}</div>\n        </>\n      )}\n    </StakeWrapper>\n  </StakeNear>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bluebiu.near/widget/MetaPool.StakeNear", "fact_widget_deployments_id": "82b9f7f8f5f3b01551ddc42adb000dc2", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 6}