{"tx_hash": "ACuueDzJZFc2wNcU7fXByaqgZUhAgG68azz7HYmHzEba", "action_id_social": "6ybGz5UzvJnthKUEW3hW5teHzD1BGe16CjvtUs1HCghq-0-widget", "block_id": 102872784, "block_timestamp": "2023-10-08T03:09:00.522Z", "signer_id": "bluebiu.near", "widget_name": "Avalanche.Lending.Dialog", "source_code": "const Dialog = styled.div`\n  position: fixed;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  display: none;\n  &.display {\n    display: block;\n  }\n`;\nconst Overlay = styled.div`\n  width: 100%;\n  height: 100%;\n  background-color: rgba(255, 255, 255, 0.1);\n  position: absolute;\n  z-index: 8000;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  @media (max-width: 640px) {\n    align-items: flex-end;\n  }\n`;\nconst Content = styled.div`\n  background-color: #273046;\n  border-radius: 16px;\n  width: 396px;\n  @media (max-width: 640px) {\n    width: 100%;\n    border-radius: 16px 16px 0px 0px;\n  }\n`;\nconst Header = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\nconst Title = styled.div`\n  font-size: 16px;\n  font-weight: 500;\n  color: #fff;\n`;\nconst Apy = styled.span`\n  margin-left: 8px;\n  font-size: 16px;\n  font-weight: 400;\n  color: #fff;\n  &.supply-color {\n    color: var(--supply-color);\n  }\n  &.borrow-color {\n    color: var(--borrow-color);\n  }\n`;\nconst CloseIcon = styled.div`\n  color: #979abe;\n`;\nconst AssetWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 20px;\n`;\nconst Token = styled.div`\n  display: flex;\n  flex-shrink: 0;\n`;\nconst TokenLogo = styled.img`\n  width: 22px;\n  height: 22px;\n  border-radius: 50%;\n  margin-right: 4px;\n`;\nconst TokenSymbol = styled.div`\n  font-size: 16px;\n  color: #fff;\n  font-weight: 400;\n`;\nconst InputWrapper = styled.div`\n  height: 55px;\n  border-radius: 10px;\n  background-color: rgba(22, 24, 38, 0.5);\n  display: flex;\n  align-items: center;\n  margin-top: 20px;\n  padding: 0px 10px;\n`;\nconst Input = styled.input`\n  font-size: 18px;\n  color: #fff;\n  font-weight: 500;\n  background-color: transparent;\n  outline: none;\n  border: none;\n  height: 22px;\n  vertical-align: bottom;\n  flex-grow: 1;\n\n  &::placeholder {\n    color: #979abe;\n  }\n`;\nconst InputBalance = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 12px;\n  font-weight: 400;\n  color: #979abe;\n  margin-top: 4px;\n  margin-bottom: 10px;\n`;\nconst BalanceValue = styled.div``;\nconst BalanceWrapper = styled.div`\n  text-align: right;\n  cursor: pointer;\n`;\nconst Balance = styled.span`\n  font-weight: 400;\n`;\nconst Row = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 10px 0px;\n  font-size: 16px;\n  font-weight: 400;\n  &.justfiy-start {\n    justify-content: flex-start;\n    gap: 10px;\n  }\n`;\nconst Label = styled.div`\n  color: #979abe;\n`;\nconst Value = styled.div`\n  color: #fff;\n  text-align: right;\n  &.range {\n    text-decoration: line-through;\n  }\n`;\nconst Tips = styled.div`\n  height: 28px;\n  border-radius: 6px;\n  background-color: var(--switch-color);\n  display: flex;\n  align-items: center;\n  color: #fff;\n  padding: 0px 20px;\n  margin-top: 10px;\n  .icon {\n    margin-right: 4px;\n    flex-shrink: 0;\n    margin-top: -1px;\n  }\n`;\nconst ValuesWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  .mx_5 {\n    margin: 0px 5px;\n  }\n`;\nconst CollateralToken = styled.div`\n  font-size: 16px;\n  font-weight: 400;\n  color: #fff;\n  display: flex;\n  gap: 4px;\n  padding-top: 20px;\n`;\nconst AssetLabel = styled.div`\n  font-size: 16px;\n  font-weight: 400;\n  color: #979abe;\n`;\nconst Dapp = styled.div`\n  padding: 0px 6px;\n  height: 26px;\n  border-radius: 6px;\n  background-color: rgba(151, 154, 190, 0.2);\n  gap: 6px;\n  display: flex;\n  align-items: center;\n  padding: 10px;\n`;\nconst DappIcon = styled.img`\n  width: 14px;\n  height: 14px;\n  border-radius: 50%;\n`;\nconst DappName = styled.div`\n  font-size: 14px;\n  font-weight: 400;\n  color: #fff;\n`;\nconst TokenSelect = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 6px;\n  color: #fff;\n`;\nconst TopBox = styled.div`\n  padding: 30px 20px 10px;\n  border-bottom: 1px dashed #454967;\n\n  &.none-border {\n    border-bottom: none;\n  }\n`;\nconst BottomBox = styled.div`\n  padding: 10px 20px 20px;\n`;\n\nconst ERC20_ABI = [\n  {\n    constant: true,\n    inputs: [\n      {\n        name: \"_owner\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        name: \"balance\",\n        type: \"uint256\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nconst { display, data, onClose, onSuccess, onMessage } = props;\nif (!data) return \"\";\nconst actionText = data.actionText;\nconst isSupply = [\"Deposit\", \"Withdraw\"].includes(actionText);\nconst isBorrow = [\"Repay\", \"Borrow\"].includes(actionText);\nconst isForCollateral = !isSupply && !isBorrow;\nconst account = Ethers.send(\"eth_requestAccounts\", [])[0];\nconst tokenSymbol = data.underlyingToken.symbol;\nState.init({\n  amount: \"\",\n  processValue: 0,\n});\n\nconst formatBorrowLimit = (digits, round) => {\n  return Big(data.totalCollateralUsd)\n    .minus(data.userTotalBorrowUsd)\n    .toFixed(digits || 2, round || 1);\n};\n\nconsole.log(\"data: \", data);\n\nconst formatBalance = () => {\n  if (state.balanceLoading) return \"Loading\";\n  if (!state.balance) return \"-\";\n  if (Big(state.balance).eq(0)) return \"0\";\n  if (Big(state.balance).lt(0.0001)) return \"<0.0001\";\n  return Big(state.balance).toFixed(4, 0);\n};\nconst handleAmountChange = (amount) => {\n  if (isNaN(Number(amount))) return;\n  const isZero = Big(amount || 0).eq(0);\n  if (isZero) {\n    State.update({\n      amount,\n      buttonClickable: false,\n      borrowLimit: \"\",\n      borrowLimitUsed: \"\",\n      borrowBalance: \"\",\n      isEmpty: Number(amount) === 0 && amount !== \"\",\n      isOverSize: false,\n      isBigerThanBalance: false,\n    });\n    return;\n  }\n\n  const precent = !Big(state.balance || 0).eq(0)\n    ? Big(amount).div(state.balance).mul(100)\n    : Big(0);\n  const params = {\n    amount: amount,\n    processValue: precent.gt(100) ? 100 : precent.toNumber(),\n  };\n  let isOverSize = false;\n  const value = Big(amount).mul(data.underlyingPrice);\n  if (isSupply) {\n    if (actionText === \"Withdraw\") {\n      params.borrowLimit = Big(data.totalCollateralUsd)\n        .minus(data.userTotalBorrowUsd)\n        .minus(value)\n        .toFixed(2);\n    }\n    if (actionText === \"Deposit\") {\n      params.borrowLimit = Big(data.totalCollateralUsd)\n        .plus(value.mul(data.loanToValue / 100))\n        .toFixed(2);\n    }\n  }\n  if (isBorrow) {\n    if (actionText === \"Borrow\") {\n      params.borrowBalance = value.plus(data.userTotalBorrowUsd).toFixed(2);\n      isOverSize = value.gt(\n        Big(data.totalCollateralUsd).minus(data.userTotalBorrowUsd)\n      );\n    }\n    if (actionText === \"Repay\") {\n      params.borrowBalance = Big(data.userTotalBorrowUsd).minus(value);\n      params.borrowLimit = Big(data.totalCollateralUsd)\n        .minus(data.userTotalBorrowUsd)\n        .add(value)\n        .toFixed(2);\n      isOverSize = value.gt(data.userTotalBorrowUsd);\n    }\n  }\n  params.isBigerThanBalance = Big(amount).gt(state.balance);\n  params.buttonClickable = !isOverSize && !params.isBigerThanBalance;\n  params.isOverSize = isOverSize;\n  params.isEmpty = false;\n  State.update(params);\n};\n\nconst getBalance = () => {\n  const isUnderlying = [\"Deposit\", \"Repay\"].includes(actionText);\n  State.update({\n    balanceLoading: true,\n  });\n  if (\n    isUnderlying &&\n    (data.underlyingToken.address === \"native\" ||\n      data.underlyingToken.description === \"native\")\n  ) {\n    Ethers.provider()\n      .getBalance(account)\n      .then((rawBalance) => {\n        State.update({\n          balance: ethers.utils.formatUnits(rawBalance._hex, 18),\n          balanceLoading: false,\n        });\n      });\n    return;\n  }\n  if (isUnderlying) {\n    const TokenContract = new ethers.Contract(\n      data.underlyingToken.address,\n      ERC20_ABI,\n      Ethers.provider().getSigner()\n    );\n    TokenContract.balanceOf(account).then((rawBalance) => {\n      const _rawBalance = ethers.utils.formatUnits(\n        rawBalance._hex,\n        data.underlyingToken.decimals\n      );\n      State.update({\n        balance: _rawBalance,\n        balanceLoading: false,\n      });\n    });\n    return;\n  }\n  if (actionText === \"Withdraw\") {\n    State.update({\n      balance: data.userSupply,\n      balanceLoading: false,\n    });\n    return;\n  }\n  if (actionText === \"Borrow\") {\n    const borrowAvailable = Big(data.totalCollateralUsd)\n      .minus(data.userTotalBorrowUsd)\n      .div(data.underlyingPrice || 1);\n    State.update({\n      balance: Big(borrowAvailable).toString(),\n      balanceLoading: false,\n    });\n    return;\n  }\n};\nconst handleClose = () => {\n  onClose?.();\n  Storage.privateSet(\"prevAddress\", \"\");\n};\nif (Storage.privateGet(\"prevAddress\") !== data.address && display) {\n  let borromLimit = \"\";\n  let _borrowLimit = Big(data.totalCollateralUsd).minus(\n    data.userTotalBorrowUsd\n  );\n  let buttonClickable = false;\n  if (actionText === \"Enable as Collateral\") {\n    borromLimit = _borrowLimit.add(\n      Big(data.loanToValue / 100).mul(data.userSupply || 0)\n    );\n    buttonClickable = true;\n  }\n  if (actionText === \"Disable as Collateral\") {\n    borromLimit = _borrowLimit.minus(\n      Big(data.loanToValue / 100).mul(data.userSupply || 0)\n    );\n    buttonClickable = !borromLimit.lt(data.userTotalBorrowUsd);\n  }\n  State.update({\n    borrowLimit: borromLimit\n      ? !borromLimit.gt(0)\n        ? \"0.00\"\n        : borromLimit.toFixed(2)\n      : \"\",\n    amount: \"\",\n    buttonClickable,\n    processValue: 0,\n    borrowBalance: \"\",\n  });\n  getBalance();\n  Storage.privateSet(\"prevAddress\", data.address);\n}\n\nreturn (\n  <Dialog className={display ? \"display\" : \"\"}>\n    <Overlay>\n      <Content>\n        <TopBox className={isForCollateral && \"none-border\"}>\n          <Header>\n            <Title>\n              <span>\n                {isForCollateral ? \"Collateral\" : actionText}{\" \"}\n                {!isForCollateral && tokenSymbol}\n              </span>\n              {!isForCollateral && (\n                <Apy className={isSupply ? \"supply-color\" : \"borrow-color\"}>\n                  APY {isSupply ? data.supplyApy : data.borrowApy}\n                </Apy>\n              )}\n            </Title>\n            <CloseIcon>\n              <Widget\n                src=\"bluebiu.near/widget/Arbitrum.Swap.CloseIcon\"\n                props={{ onClose: handleClose, size: 18 }}\n              />\n            </CloseIcon>\n          </Header>\n          {isForCollateral && (\n            <CollateralToken>\n              {actionText === \"Disable as Collateral\"\n                ? \"Disabling\"\n                : \"Enabling\"}\n              <Token>\n                <TokenLogo src={data.icon} />\n                <TokenSymbol>{tokenSymbol}</TokenSymbol>\n              </Token>\n              as Collateral\n            </CollateralToken>\n          )}\n          {!isForCollateral && (\n            <>\n              <AssetWrapper>\n                <AssetLabel>Asset from</AssetLabel>\n                <Dapp>\n                  <DappIcon src={data.dappIcon} />\n                  <DappName>{data.dappName}</DappName>\n                </Dapp>\n              </AssetWrapper>\n              <InputWrapper>\n                <Input\n                  value={state.amount}\n                  onChange={(ev) => {\n                    handleAmountChange(ev.target.value);\n                  }}\n                  placeholder=\"0.0\"\n                />\n                <TokenSelect>\n                  <TokenSymbol>{tokenSymbol}</TokenSymbol>\n                </TokenSelect>\n              </InputWrapper>\n              <InputBalance>\n                <BalanceValue>\n                  \u2248 $\n                  {state.amount\n                    ? Big(state.amount).mul(data.underlyingPrice).toFixed(2)\n                    : \"-\"}\n                </BalanceValue>\n                <BalanceWrapper\n                  onClick={() => {\n                    if (state.balanceLoading || isNaN(state.balance)) return;\n                    const amount = Big(state.balance).toFixed(4, 0);\n                    handleAmountChange(amount);\n                    State.update({\n                      amount: parseFloat(amount).toString(),\n                    });\n                  }}\n                >\n                  Available\n                  <Balance\n                    style={{\n                      textDecoration:\n                        actionText === \"Repay\" ? \"none\" : \"underline\",\n                    }}\n                  >\n                    {formatBalance()}\n                  </Balance>\n                </BalanceWrapper>\n              </InputBalance>\n              {isSupply && (\n                <Widget\n                  src=\"bluebiu.near/widget/Avalanche.Lending.Process\"\n                  props={{\n                    value: state.processValue,\n                    onChange: (value) => {\n                      const amount = Big(state.balance)\n                        .mul(value / 100)\n                        .toFixed(4, 0);\n                      State.update({\n                        processValue: value,\n                        amount,\n                      });\n                      handleAmountChange(amount);\n                    },\n                  }}\n                />\n              )}\n            </>\n          )}\n        </TopBox>\n        <BottomBox>\n          {actionText === \"Deposit\" && (\n            <>\n              <Row>\n                <Label>Collateral factor</Label>\n                <Value>{Number(data.loanToValue).toFixed(0)} %</Value>\n              </Row>\n\n              <Row>\n                <Label>Use as Collateral</Label>\n                <Value>\n                  <Widget\n                    src=\"bluebiu.near/widget/Avalanche.Lending.Switch\"\n                    props={{\n                      disabled: true,\n                      active: data.userMerberShip,\n                    }}\n                  />\n                </Value>\n              </Row>\n            </>\n          )}\n          <Row className={isForCollateral && \"justfiy-start\"}>\n            <Label>Borrow Limit</Label>\n            <ValuesWrapper>\n              <Value className={!!state.borrowLimit && \"range\"}>\n                ${formatBorrowLimit(2)}\n              </Value>\n              {!!state.borrowLimit && (\n                <>\n                  <div className=\"mx_5\">\n                    <Widget\n                      src=\"bluebiu.near/widget/0vix.LendingArrowIcon\"\n                      props={{ color: \"#979ABE\" }}\n                      className=\"mx_5\"\n                    />\n                  </div>\n                  <Value>${state.borrowLimit}</Value>\n                </>\n              )}\n            </ValuesWrapper>\n          </Row>\n          {actionText === \"Repay\" && (\n            <Row>\n              <Label>Remaining Debt</Label>\n              <ValuesWrapper>\n                <Value className={!!state.borrowBalance && \"range\"}>\n                  ${Big(data.userTotalBorrowUsd).toFixed(2)}\n                </Value>\n                {!!(isBorrow && state.borrowBalance) && (\n                  <>\n                    <div className=\"mx_5\">\n                      <Widget\n                        src=\"bluebiu.near/widget/0vix.LendingArrowIcon\"\n                        props={{ color: \"#979ABE\" }}\n                        className=\"mx_5\"\n                      />\n                    </div>\n                    <Value>${Big(state.borrowBalance).toFixed(2)}</Value>\n                  </>\n                )}\n              </ValuesWrapper>\n            </Row>\n          )}\n          {/* {!!state.isOverSize && (\n            <Tips style={{ marginBottom: 0 }}>\n              <div className=\"icon\">\n                <Widget src=\"bluebiu.near/widget/0vix.LendingInfoIcon\" />\n              </div>\n              Amount must be &lt;= 99% borrow limit.\n            </Tips>\n          )}\n          {!!state.isEmpty && (\n            <Tips style={{ marginBottom: 0 }}>\n              <div className=\"icon\">\n                <Widget src=\"bluebiu.near/widget/0vix.LendingInfoIcon\" />\n              </div>\n              Amount must be &gt;0\n            </Tips>\n          )}\n          {!!state.isBigerThanBalance && (\n            <Tips style={{ marginBottom: 0 }}>\n              <div className=\"icon\">\n                <Widget src=\"bluebiu.near/widget/0vix.LendingInfoIcon\" />\n              </div>\n              Amount must be &lt;= balance\n            </Tips>\n          )} */}\n          <Widget\n            src=\"bluebiu.near/widget/Avalanche.Lending.DialogButton\"\n            props={{\n              disabled: !state.buttonClickable,\n              actionText,\n              amount: state.amount,\n              data: data,\n              onSuccess: () => {\n                handleClose();\n                onSuccess?.();\n              },\n              onMessage: onMessage,\n            }}\n          />\n        </BottomBox>\n      </Content>\n    </Overlay>\n  </Dialog>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bluebiu.near/widget/Avalanche.Lending.Dialog", "fact_widget_deployments_id": "45923f5fe7c9c05d8136f1e22ddbc28c", "inserted_timestamp": "2023-10-08T04:43:36.330Z", "modified_timestamp": "2023-10-08T04:43:36.330Z", "__row_index": 4}