{"tx_hash": "CYtSANBt3DCDjjSKYjgWpRFy2fPvomSWWNzmrb4ZHnPq", "action_id_social": "21j8ym6ZSSrS8JnX9LBxWGpGQqeceEpHxGTALd2FpEgw-0-widget", "block_id": 101909891, "block_timestamp": "2023-09-25T08:17:50.267Z", "signer_id": "bluebiu.near", "widget_name": "Arbitrum.Pendle.DashBoard.BoardSyAmount", "source_code": "\nconst { marketAddress, user, allAssetsData,onLoad } = props;\n\nconst routerAddress = \"0xAdB09F65bd90d19e3148D9ccb693F3161C6DB3E8\";\n\nconst abi = [\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"sy\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"user\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"getUserSYInfo\",\n        \"outputs\": [\n            {\n                \"components\": [\n                    {\n                        \"components\": [\n                            {\n                                \"internalType\": \"address\",\n                                \"name\": \"token\",\n                                \"type\": \"address\"\n                            },\n                            {\n                                \"internalType\": \"uint256\",\n                                \"name\": \"amount\",\n                                \"type\": \"uint256\"\n                            }\n                        ],\n                        \"internalType\": \"struct IPActionInfoStatic.TokenAmount\",\n                        \"name\": \"syBalance\",\n                        \"type\": \"tuple\"\n                    },\n                    {\n                        \"components\": [\n                            {\n                                \"internalType\": \"address\",\n                                \"name\": \"token\",\n                                \"type\": \"address\"\n                            },\n                            {\n                                \"internalType\": \"uint256\",\n                                \"name\": \"amount\",\n                                \"type\": \"uint256\"\n                            }\n                        ],\n                        \"internalType\": \"struct IPActionInfoStatic.TokenAmount[]\",\n                        \"name\": \"unclaimedRewards\",\n                        \"type\": \"tuple[]\"\n                    }\n                ],\n                \"internalType\": \"struct IPActionInfoStatic.UserSYInfo\",\n                \"name\": \"res\",\n                \"type\": \"tuple\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n];\n\nState.init({\n    resdata: [],\n});\n\nconst requestUserMarketInfo = () => {\n\n    const signer = Ethers.provider().getSigner();\n\n    const contract = new ethers.Contract(routerAddress, abi, signer);\n\n    return contract.callStatic\n        .getUserSYInfo(marketAddress, user)\n        .then((res) => {\n            State.update({\n                resdata: res,\n            })\n        })\n        .catch((error) => {\n            console.log(error);\n        });\n};\nrequestUserMarketInfo();\n\nconst matchedData = state.resdata[1] && allAssetsData.length > 0 ? state.resdata[1].map((item) => {\n    const matchedItem = allAssetsData.find((data) => data.address.toLowerCase() === item[0].toLowerCase());\n    return matchedItem;\n}) : [];\n\nreturn (\n    <>\n        {matchedData.length > 0 ? (\n            matchedData.map((item) => (\n                <div key={item.address}>\n                    <img src={item.proIcon} alt=\"\" style={{ width: \"19px\" }} />\n                    {item.proSymbol}\n                </div>\n            ))\n        ) : (\n            <div>Loading...</div>\n        )}\n    </>\n);\n\n\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bluebiu.near/widget/Arbitrum.Pendle.DashBoard.BoardSyAmount", "fact_widget_deployments_id": "c38e013d3d42f26e175fabaafa7c71e1", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}