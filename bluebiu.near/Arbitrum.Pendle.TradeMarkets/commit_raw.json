{"tx_hash": "BdNBwHLaErNmgiQvFMJCuuiq4CSf8GpHbcArtfSTM47g", "action_id_social": "GxrctSo2hWG3QD89iNRk7rF8Xj2StJwEyqTRHi9aoKxz-0-widget", "block_id": 104546840, "block_timestamp": "2023-10-30T15:44:55.422Z", "signer_id": "bluebiu.near", "widget_name": "Arbitrum.Pendle.TradeMarkets", "source_code": "const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 80%;\n  padding-top: 20px;\n  margin: auto;\n  gap: 32px;\n  color: #ffffff;\n  font-size: 16px;\n  font-weight: 400;\n  .markets-page-list {\n    display: none;\n  }\n\n  @media (max-width: 768px) {\n    width: 100%;\n    padding: 0;\n    .markets-page {\n      .markets-page-table {\n        display: none;\n      }\n      .markets-page-list {\n        display: block;\n        margin-bottom: 16px;\n        .markets-page-list-item {\n          background: linear-gradient(0deg, #181a27, #181a27),\n            linear-gradient(0deg, #2c334b, #2c334b);\n          padding: 10px 10px 20px;\n          border-radius: 10px;\n          border: 1px solid rgb(44, 51, 75);\n          margin-bottom: 20px;\n          .list-item-title {\n            padding-bottom: 10px;\n            border-bottom: 1px solid rgb(44, 51, 75);\n            margin-bottom: 15px;\n            display: flex;\n            -webkit-box-align: center;\n            align-items: center;\n            gap: 6px;\n            img {\n              width: 36px;\n              height: 36px;\n              border-radius: 100%;\n              margin-right: 8px;\n            }\n            .light-value {\n              font-size: 16px;\n              line-height: 19px;\n              letter-spacing: 0em;\n              text-align: left;\n              text-decoration: none;\n              color: white !important;\n            }\n            .gray-value {\n              font-size: 12px;\n              line-height: 14px;\n              letter-spacing: 0em;\n              text-align: left;\n              opacity: 0.5;\n              text-decoration: none;\n              color: white !important;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  .yt-area-td {\n    display: flex;\n    justify-content: end;\n    padding-right: 12px;\n  }\n\n  .pt-area-td {\n    width: 155px;\n  }\n\n  .long-yield-apy {\n    padding-right: 32px;\n    text-align: right;\n  }\n\n  .fixed-yield-apy {\n    padding-left: 16px;\n  }\n\n  .title {\n    font-size: 20px;\n    font-weight: 700;\n    line-height: 24px;\n    letter-spacing: 0em;\n    text-align: left;\n\n    color: #979abe;\n    cursor: pointer;\n  }\n\n  .active {\n    color: white;\n    text-decoration: underline;\n    text-underline-offset: 6px;\n  }\n\n  .yt-area {\n    width: 155px;\n    display: flex;\n    align-items: center;\n    padding: 8px 12px 8px 32px;\n    background: linear-gradient(270deg, #4978b0 0%, rgba(73, 120, 176, 0) 100%);\n    justify-content: space-between;\n    cursor: pointer;\n  }\n\n  .pt-area {\n    width: 155px;\n    display: flex;\n    align-items: center;\n    padding: 8px 12px 8px 32px;\n    cursor: pointer;\n    justify-content: space-between;\n\n    background: linear-gradient(90deg, #0ba9a0 0%, rgba(11, 169, 160, 0) 100%);\n  }\n\n  .art-text {\n    font-size: 20px;\n    font-weight: 700;\n    line-height: 24px;\n    letter-spacing: 0em;\n    text-align: left;\n    color: #ffffff;\n    opacity: 0.1;\n  }\n`;\n\nconst Term = styled.div`\n  display: flex;\n  -webkit-box-pack: justify;\n  justify-content: space-between;\n  padding-bottom: 10px;\n  width: 100%;\n  .lable {\n    font-size: 13px;\n    line-height: 15.6px;\n    color: rgb(151, 154, 190);\n  }\n  .light-value {\n    font-size: 16px;\n    line-height: 19px;\n    letter-spacing: 0em;\n    text-align: left;\n    text-decoration: none;\n    color: white !important;\n  }\n  .gray-value {\n    font-size: 12px;\n    line-height: 14px;\n    letter-spacing: 0em;\n    text-align: left;\n    opacity: 0.5;\n    text-decoration: none;\n    color: white !important;\n  }\n  .yt-area {\n    border: 1px solid rgba(44, 51, 75, 1);\n    padding-top: 6px;\n    padding-bottom: 6px;\n    border-radius: 10px;\n  }\n  .pt-area {\n    border: 1px solid rgba(44, 51, 75, 1);\n    padding-top: 6px;\n    padding-bottom: 6px;\n    border-radius: 10px;\n  }\n`;\n\nconst formateTime = (timeString) => {\n  const targetDate = new Date(timeString);\n\n  const currentDate = new Date();\n\n  const timeDiff = targetDate - currentDate;\n  const daysDiff = Math.floor(timeDiff / (1000 * 60 * 60 * 24));\n\n  const months = [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ];\n  const day = targetDate.getDate();\n  const month = months[targetDate.getMonth()];\n  const year = targetDate.getFullYear();\n  const formattedDate = `${day} ${month} ${year}`;\n\n  return {\n    formattedDate,\n    daysDiff: daysDiff + \" days\",\n  };\n};\n\nconst formateValue = (value, decimals) => {\n  return parseFloat(Big(value).toFixed(decimals || 3, 1));\n};\n\nconst Table = styled.table`\n  width: 100%;\n  .gray-value {\n    font-size: 12px;\n    line-height: 14px;\n    letter-spacing: 0em;\n    text-align: left;\n    opacity: 0.5;\n    color: white !important;\n    text-decoration: none;\n  }\n\n  .light-value {\n    font-size: 16px;\n    line-height: 19px;\n    letter-spacing: 0em;\n    text-align: left;\n    text-decoration: none;\n    color: white !important;\n  }\n\n  thead {\n    font-size: 14px;\n    line-height: 17px;\n    letter-spacing: 0em;\n    text-align: left;\n    color: #979abe;\n    border-bottom: 1px solid #2c334b;\n    th {\n      padding-bottom: 8px;\n      font-weight: 400;\n    }\n  }\n\n  tbody {\n    .name {\n      display: flex;\n      align-items: center;\n      gap: 6px;\n      .icon {\n        width: 36px;\n        height: 36px;\n        border-radius: 100%;\n      }\n    }\n  }\n`;\n\nconst TableRow = styled.tr`\n  td {\n    padding: 16px 0px 4px 0px;\n  }\n`;\n\nconst TabWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 36px;\n  @media (max-width: 768px) {\n    width: 108%;\n    border-bottom: 1px #2a3047 solid;\n    margin: 0 -12px;\n    .title {\n      width: 50%;\n      flex: 1;\n      text-align: center;\n      padding: 12px 0;\n    }\n    .active {\n      text-decoration: none;\n      border-bottom: 2px solid #ffffff;\n    }\n  }\n`;\n\nconst BackRoute = styled.div`\n  position: absolute;\n  width: 100vw;\n  left: 0;\n  top: 0;\n  border-bottom: 1px solid #343838;\n  display: flex;\n  align-items: center;\n  gap: 12px;\n\n  .back-icon {\n    padding-left: 100px;\n    padding-right: 8px;\n  }\n\n  .dapp-logo {\n    width: 32px;\n    height: 32px;\n    cursor: pointer;\n  }\n\n  .dapp-name {\n    font-size: 16px;\n    font-style: italic;\n    font-weight: 900;\n    line-height: 24px;\n    letter-spacing: 0em;\n    text-align: left;\n    color: #4982ff;\n  }\n`;\n\nconst backIcon = (\n  <svg\n    width=\"8\"\n    height=\"13\"\n    viewBox=\"0 0 8 13\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M7 12L2 6.5L7 1\"\n      stroke=\"#979ABE\"\n      stroke-width=\"2\"\n      stroke-linecap=\"round\"\n    />\n  </svg>\n);\n\nconst CHAIN_ID = 42161;\n\nconst CONNECT_PROPS = {\n  imgProps: {\n    src: \"https://ipfs.near.social/ipfs/bafkreiawjxeh46j7c63vvqpg2t3juh4pdlhk6iic4dkqlpsjq3loqarooa\",\n    style: {\n      width: \"434px\",\n      height: \"176px\",\n      marginTop: \"80px\",\n    },\n  },\n  noAccountTips: \"Pendle\",\n  wrongNetworkTips: \"To proceed, kindly switch to Arbitrum One Chain.\",\n  chainId: CHAIN_ID,\n  chainName: \"Arbitrum One\",\n};\nconst theme = {\n  textColor: \"#7794D3\",\n  buttonColor: \"#33549C\",\n};\nState.init({\n  markets: [],\n  activeTab: \"markets\", //markets yours\n});\n\nconst storeTab = Storage.privateGet(\"tab\");\n\nif (storeTab !== undefined) {\n  State.update({ activeTab: storeTab || \"markets\" });\n}\n\nconst sender = Ethers.send(\"eth_requestAccounts\", [])[0];\n\nif (sender) {\n  Ethers.provider()\n    .getNetwork()\n    .then(({ chainId }) => {\n      console.log(\"chainId: \", chainId);\n      State.update({ chainId, sender });\n    })\n    .catch(() => {});\n}\n\nif (sender && !state.sender) {\n  State.update({\n    sender,\n  });\n}\n\nconst Container = styled.div`\n  --text-color: #7794d3;\n  --button-color: #33549c;\n  --border-color: #2c334b;\n  --input-border-color: #2c334b;\n  --input-select-bg-color: #222436;\n  --secondary-text-color: #7794d3;\n  --thirdary-text-color: #4f5375;\n  --dex-active-text-color: #fff;\n  --button-text-color: #fff;\n  --dex-hover-bg-color: rgba(51, 84, 156, 0.1);\n`;\n\nif (!state.sender) {\n  return (\n    <Container>\n      <Widget\n        src=\"bluebiu.near/widget/Arbitrum.Swap.ConnectButton\"\n        props={{\n          ...CONNECT_PROPS,\n          theme,\n          isWrongNetwork: false,\n        }}\n      />\n    </Container>\n  );\n}\n\nreturn (\n  <>\n    <Wrapper>\n      <TabWrapper>\n        <div\n          className={`title ${state.activeTab === \"markets\" ? \"active\" : \"\"}`}\n          // style={{\n          //   textDecoration: \"none\",\n          // }}\n          onClick={() => {\n            State.update({ activeTab: \"markets\" });\n            Storage.privateSet(\"tab\", \"markets\");\n          }}\n        >\n          Market\n        </div>\n\n        {state.sender && (\n          <div\n            className={`title ${state.activeTab === \"yours\" ? \"active\" : \"\"}`}\n            onClick={() => {\n              State.update({ activeTab: \"yours\" });\n              Storage.privateSet(\"tab\", \"yours\");\n            }}\n          >\n            Yours\n          </div>\n        )}\n      </TabWrapper>\n\n      {state.activeTab === \"markets\" && (\n        <div className=\"markets-page\">\n          <div className=\"markets-page-table\">\n            <Table>\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Maturity</th>\n\n                  <th>Underlying APY/Price</th>\n\n                  <th>Implied APY</th>\n                  <th className=\"long-yield-apy\">Long Yield APY</th>\n\n                  <th className=\"fixed-yield-apy \">Fixed APY</th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {state.markets.map((m) => {\n                  return (\n                    <TableRow>\n                      <td>\n                        <div className=\"name\">\n                          <img className=\"icon\" src={m.proIcon} alt=\"\" />\n\n                          <div>\n                            <div className=\"light-value\">{m.proSymbol}</div>\n\n                            <div className=\"gray-value\">{m.protocol}</div>\n                          </div>\n                        </div>\n                      </td>\n\n                      <td>\n                        <div className=\"light-value\">\n                          {formateTime(m.expiry).formattedDate}\n                        </div>\n\n                        <div className=\"gray-value\">\n                          {formateTime(m.expiry).daysDiff}\n                        </div>\n                      </td>\n\n                      <td>\n                        <div className=\"light-value\">\n                          {formateValue(m.underlyingApy * 100, 3)}%\n                        </div>\n\n                        <div className=\"gray-value\">\n                          ${formateValue(m.accountingAsset.price.usd, 4)}\n                        </div>\n                      </td>\n\n                      <td>\n                        <div className=\"light-value\">\n                          {formateValue(m.impliedApy * 100, 3)}%\n                        </div>\n                      </td>\n\n                      <td className=\"yt-area-td\">\n                        <a\n                          className=\"yt-area\"\n                          style={{\n                            textDecoration: \"none\",\n                          }}\n                          href={`/bluebiu.near/widget/Arbitrum.Pendle.TradeSwap?market_address=${m.address}&type=yt`}\n                        >\n                          <div\n                            style={{\n                              textDecoration: \"none\",\n                            }}\n                          >\n                            <div\n                              className=\"light-value\"\n                              style={{\n                                textDecoration: \"none\",\n                              }}\n                            >\n                              {formateValue(m.ytFloatingApy * 100, 3)}%\n                            </div>\n\n                            <div\n                              className=\"gray-value\"\n                              style={{\n                                textDecoration: \"none\",\n                              }}\n                            >\n                              ${formateValue(m.yt.price.usd, 4)}\n                            </div>\n                          </div>\n                          <div className=\"art-text\">YT</div>\n                        </a>\n                      </td>\n\n                      <td className=\"pt-area-td\">\n                        <a\n                          className=\"pt-area\"\n                          style={{\n                            textDecoration: \"none\",\n                          }}\n                          href={`/bluebiu.near/widget/Arbitrum.Pendle.TradeSwap?market_address=${m.address}&type=pt`}\n                        >\n                          <div\n                            style={{\n                              textDecoration: \"none\",\n                            }}\n                          >\n                            <div\n                              className=\"light-value\"\n                              style={{\n                                textDecoration: \"none\",\n                              }}\n                            >\n                              {formateValue(m.impliedApy * 100, 3)}%\n                            </div>\n\n                            <div\n                              className=\"gray-value\"\n                              style={{\n                                textDecoration: \"none\",\n                              }}\n                            >\n                              ${formateValue(m.pt.price.usd, 4)}\n                            </div>\n                          </div>\n\n                          <div className=\"art-text\">PT</div>\n                        </a>\n                      </td>\n                    </TableRow>\n                  );\n                })}\n              </tbody>\n            </Table>\n          </div>\n          <div className=\"markets-page-list\">\n            {state.markets.map((m) => {\n              return (\n                <div className=\"markets-page-list-item\">\n                  <div className=\"list-item-title\">\n                    <img className=\"icon\" src={m.proIcon} alt=\"\" />\n                    <div>\n                      <div className=\"light-value\">{m.proSymbol}</div>\n                      <div className=\"gray-value\">{m.protocol}</div>\n                    </div>\n                  </div>\n                  <Term>\n                    <div className=\"lable\">Maturity</div>\n                    <div>\n                      <div className=\"light-value\">\n                        {formateTime(m.expiry).formattedDate}\n                      </div>\n                      <div className=\"gray-value\">\n                        {formateTime(m.expiry).daysDiff}\n                      </div>\n                    </div>\n                  </Term>\n                  <Term>\n                    <div className=\"lable\">Underlying APY/Price</div>\n                    <div>\n                      <div className=\"light-value\">\n                        {formateValue(m.underlyingApy * 100, 3)}%\n                      </div>\n                      <div className=\"gray-value\">\n                        ${formateValue(m.accountingAsset.price.usd, 4)}\n                      </div>\n                    </div>\n                  </Term>\n                  <Term>\n                    <div className=\"lable\">Implied APY</div>\n                    <div>\n                      <div className=\"light-value\">\n                        {formateValue(m.impliedApy * 100, 3)}%\n                      </div>\n                    </div>\n                  </Term>\n                  <div style={{ display: \"flex\" }}>\n                    <Term>\n                      <a\n                        className=\"yt-area\"\n                        style={{\n                          textDecoration: \"none\",\n                          width: \"100%\",\n                        }}\n                        href={`/bluebiu.near/widget/Arbitrum.Pendle.TradeSwap?market_address=${m.address}&type=yt`}\n                      >\n                        <div>\n                          <div className=\"light-value\">\n                            {formateValue(m.ytFloatingApy * 100, 3)}%\n                          </div>\n                          <div className=\"gray-value\">\n                            ${formateValue(m.yt.price.usd, 4)}\n                          </div>\n                        </div>\n                        <div className=\"art-text\">YT</div>\n                      </a>\n                    </Term>\n                    <Term>\n                      <a\n                        className=\"pt-area\"\n                        style={{\n                          textDecoration: \"none\",\n                          width: \"100%\",\n                        }}\n                        href={`/bluebiu.near/widget/Arbitrum.Pendle.TradeSwap?market_address=${m.address}&type=pt`}\n                      >\n                        <div>\n                          <div className=\"light-value\">\n                            {formateValue(m.impliedApy * 100, 3)}%\n                          </div>\n                          <div className=\"gray-value\">\n                            ${formateValue(m.pt.price.usd, 4)}\n                          </div>\n                        </div>\n                        <div className=\"art-text\">PT</div>\n                      </a>\n                    </Term>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      )}\n\n      {state.activeTab === \"yours\" && (\n        <Widget\n          src=\"bluebiu.near/widget/Arbitrum.Pendle.DashBoard.UserDashBoard\"\n          props={{\n            markets: state.markets,\n            sender: state.sender,\n            chainId: state.chainId,\n          }}\n        />\n      )}\n    </Wrapper>\n\n    <Widget\n      props={{\n        onLoad: (markets) => State.update({ markets }),\n      }}\n      src=\"bluebiu.near/widget/Arbitrum.Pendle.getMarkets\"\n    />\n  </>\n);\n", "metadata": {"image": {"ipfs_cid": "bafkreiedaqqpcuw6oj5mao263fizx3gksybdmw5x2p7xeka7wngzip5zeu"}, "name": "Pendle"}, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bluebiu.near/widget/Arbitrum.Pendle.TradeMarkets", "fact_widget_deployments_id": "18b3bba4a4bba8bf7652d69bebffb623", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}