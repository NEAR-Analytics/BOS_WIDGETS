{"tx_hash": "GKAnEqt4LTNMmpDrd9Ftre6jGzt71rzY5eyAY62TYHCp", "action_id_social": "G8TBHKVDEgvL6FLhcf38J5wB26HvRtpYsRw1y4jxkDuD-0-widget", "block_id": 114994068, "block_timestamp": "2024-03-19T02:28:56.494Z", "signer_id": "bluebiu.near", "widget_name": "Swap.Data.XYFinance", "source_code": "const {\n  updater,\n  wethAddress,\n  inputCurrency,\n  outputCurrency,\n  inputCurrencyAmount,\n  onLoad,\n  slippage,\n  account,\n  multicall,\n  multicallAddress,\n  rpc,\n} = props;\n\nuseEffect(() => {\n  if (!updater) return;\n\n  if (\n    (!inputCurrency.address && !inputCurrency.isNative) ||\n    (!outputCurrency.address && !outputCurrency.isNative) ||\n    !inputCurrencyAmount\n  ) {\n    return;\n  }\n\n  const wrapType =\n    inputCurrency.isNative && outputCurrency.address === wethAddress\n      ? 1\n      : inputCurrency.address === wethAddress && outputCurrency.isNative\n      ? 2\n      : 0;\n\n  if (wrapType) {\n    onLoad({\n      outputCurrencyAmount: inputCurrencyAmount,\n      noPair: false,\n    });\n    return;\n  }\n\n  const amount = ethers.utils.parseUnits(\n    Big(inputCurrencyAmount || 0).toFixed(inputCurrency.decimals),\n    inputCurrency.decimals\n  );\n\n  const path = [\n    inputCurrency.address === \"native\"\n      ? \"0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE\"\n      : inputCurrency.address,\n    outputCurrency.address === \"native\"\n      ? \"0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE\"\n      : outputCurrency.address,\n  ];\n  const getAmountsOut = () => {\n    const params = `src_chain_id=${\n      inputCurrency.chainId\n    }&src_quote_token_address=${\n      path[0]\n    }&src_quote_token_amount=${amount}&dst_chain_id=${\n      outputCurrency.chainId\n    }&dst_quote_token_address=${path[1]}&slippage=${\n      slippage || 0.5\n    }&commission_rate=0`;\n\n    asyncFetch(`https://router-api.xy.finance/xy_router/quote?${params}`)\n      .then((res) => {\n        const data = res.body?.routes?.[0];\n        if (!data) {\n          onLoad({\n            outputCurrencyAmount: \"\",\n            noPair: true,\n          });\n          return;\n        }\n\n        asyncFetch(\n          `https://router-api.xy.finance/xy_router/build_tx?src_chain_id=${data.src_chain_id}&src_quote_token_address=${data.src_quote_token_address}&src_quote_token_amount=${data.src_quote_token_amount}&dst_chain_id=${data.dst_chain_id}&dst_quote_token_address=${data.dst_quote_token_address}&slippage=${data.slippage}&receiver=${account}&src_swap_provider=${data.src_swap_description.provider}&commission_rate=0`\n        )\n          .then((txRes) => {\n            const txData = txRes.body;\n            if (!txData.success) {\n              onLoad({\n                outputCurrencyAmount: ethers.utils.formatUnits(\n                  data.dst_quote_token_amount,\n                  outputCurrency.decimals\n                ),\n                noPair: true,\n              });\n              return;\n            }\n            const priceImpact = Big(txData.route.dst_quote_token_usd_value)\n              .minus(txData.route.src_quote_token_usd_value)\n              .div(txData.route.src_quote_token_usd_value)\n              .mul(100)\n              .toFixed(2);\n            onLoad({\n              outputCurrencyAmount: ethers.utils.formatUnits(\n                txData.route.dst_quote_token_amount,\n                outputCurrency.decimals\n              ),\n              noPair: false,\n              priceImpact,\n              routerAddress: txData.route.contract_address,\n              gas: txData.route.estimated_gas,\n              unsignedTx: txData.tx,\n            });\n          })\n          .catch((err) => {\n            onLoad({\n              outputCurrencyAmount: \"\",\n              noPair: true,\n            });\n          });\n      })\n      .catch((err) => {\n        onLoad({\n          outputCurrencyAmount: \"\",\n          noPair: true,\n        });\n      });\n  };\n\n  getAmountsOut();\n}, [updater]);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bluebiu.near/widget/Swap.Data.XYFinance", "fact_widget_deployments_id": "da554a711aa30f1a16cfc4a5873cc7da", "inserted_timestamp": "2024-03-19T03:29:47.990Z", "modified_timestamp": "2024-03-19T04:28:26.581Z", "__row_index": 1}