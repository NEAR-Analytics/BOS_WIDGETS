{"tx_hash": "BPW8kHyP29FofAgKWLAfuuFjwpGW1GWcgH4tDBpePtxa", "action_id_social": "5gauFAFFN7oCtDfHpDWQmrPrQnd8BwzvdF8cGYZc36nN-0-widget", "block_id": 118418775, "block_timestamp": "2024-05-07T06:48:16.492Z", "signer_id": "bluebiu.near", "widget_name": "Blast.BridgeXY.AmountOut", "source_code": "const { loading, amount, routerAddress, target, onLoad, currency, from, to } = props;\n\nconst BASE_API = 'https://open-api.xy.finance/v1'\n\n\nfunction getToken() {\n    let fromToken\n    let toToken\n    const promise = asyncFetch(`${BASE_API}/recommendedTokens`).then(res => {\n        const tokens = res.body.recommendedTokens\n        return tokens\n    })\n\n    return promise.then(tokens => {\n        for (let i = 0; i < tokens.length; i++) {\n            const token = tokens[i]\n            if (!fromToken && token.symbol === currency.symbol && token.chainId === from.id.toString()) {\n                fromToken = token.address\n            }\n\n            if (!toToken && token.symbol === currency.symbol && token.chainId === to.id.toString()) {\n                toToken = token.address\n            }\n\n            if (fromToken && toToken) {\n                break\n            }\n        }\n\n        return {\n            fromToken,\n            toToken\n        }\n    })\n}\n\nfunction getQuote(fromChainId, toChainId, fromTokenAddress, toTokenAddress, amount) {\n    if (Number.isNaN(amount)) {\n        return null\n    }\n    return asyncFetch(`${BASE_API}/quote?srcChainId=${fromChainId}&fromTokenAddress=${fromTokenAddress}&amount=${amount}&destChainId=${toChainId}&toTokenAddress=${toTokenAddress}`)\n}\n\n\n\nuseEffect(() => {\n    if (!loading || !amount || Number(amount) <= 0) return\n\n    const _amount = new Big(amount).mul(Math.pow(10, currency.decimals)).toString()\n    getToken().then(res => {\n        return getQuote(from.id, to.id, res.fromToken, res.toToken, _amount)\n    }).then(res => {\n        if (res?.body?.isSuccess) {\n            const { body } = res\n            onLoad({\n                received: body.quote.toTokenAmount,\n                gasCost: body.xyFee.amount,\n                quote: body,\n                amount: amount\n            });\n        } else {\n            onLoad({\n                received: 0,\n                gasCost: 0,\n                errorTips: 'No route',\n                amount: amount\n            });\n        }\n    }).catch(e => {\n        if (amount !== res?.body?.fromTokenAmount) {\n            return\n        }\n        onLoad({\n            received: 0,\n            gasCost: 0,\n            amount: amount,\n            errorTips: 'Invalid amount',\n        });\n    })\n\n}, [loading, amount])\n\nreturn \"\";\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bluebiu.near/widget/Blast.BridgeXY.AmountOut", "fact_widget_deployments_id": "2771a5e473de16d1542b21da2f387386", "inserted_timestamp": "2024-05-07T08:39:36.481Z", "modified_timestamp": "2024-05-07T08:39:36.481Z", "__row_index": 0}