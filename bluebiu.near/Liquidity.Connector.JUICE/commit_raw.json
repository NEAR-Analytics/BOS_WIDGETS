{"tx_hash": "DMWhBUq9BdZPK5uARqrao5hrMwAsQSfJNcQaJ3h7Uxwk", "action_id_social": "E2GiPzrqbLWAu6Azdh99Mvq3BNPf52VpwWSU5Bh3XBYj-0-widget", "block_id": 117869109, "block_timestamp": "2024-04-29T07:39:05.935Z", "signer_id": "bluebiu.near", "widget_name": "Liquidity.Connector.JUICE", "source_code": "const StyledJuiceContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`\nconst StyledCategoryContainer = styled.div`\n  margin-top: 18px;\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 1000px;\n  &:after {\n    content: \"\";\n    position: absolute;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    height: 1px;\n    background: linear-gradient(90deg, rgba(22, 24, 29, 0.00) 0%, #373A53 50%, rgba(22, 24, 29, 0.00) 100%);\n  }\n`\nconst StyledCategory = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 200px;\n  height: 46px;\n  cursor: pointer;\n\n  color: #979ABE;\n  font-family: Gantari;\n  font-size: 20px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: normal;\n  &.active {\n    color: #FFF;\n    &:after {\n      content: \"\";\n      position: absolute;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      height: 2px;\n      background: #FFF;\n    }\n  }\n`\nconst {\n  toast,\n  prices,\n  chainId,\n  multicall,\n  multicallAddress,\n  windowOpen,\n  dexConfig,\n  connectProps,\n  isChainSupported,\n  curChain,\n  onSwitchChain,\n  switchingChain\n} = props\n\nconst sender = Ethers.send(\"eth_requestAccounts\", [])[0];\nif (!sender) {\n  return (\n    <Widget\n      style={dexConfig.theme}\n      src=\"bluebiu.near/widget/Arbitrum.Swap.ConnectButton\"\n      props={{\n        ...connectProps,\n        isWrongNetwork: false,\n      }}\n    />\n  );\n}\nconst {\n  vaults,\n  ICON_MAP,\n  PROXY_ADDRESS,\n  LENDING_POOL_ADDRESS,\n  SYMBOL_ADDRESS\n} = dexConfig\n\nState.init({\n  categoryList: [\n    \"WETH Vaults\",\n    \"Borrowers\",\n    \"Positions\"\n  ],\n  categoryIndex: 0,\n  checkedVault: null,\n  smartContractAddress: \"\",\n  isCreatedAccount: false,\n  showDialog: false\n})\nconst {\n  checkedVault,\n  categoryList,\n  categoryIndex,\n  isCreatedAccount,\n  smartContractAddress,\n} = state\n\nfunction handleGetSubAccount() {\n  const abi = [{\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"owner_\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getAccount\",\n    \"outputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },]\n  const contract = new ethers.Contract(\n    ethers.utils.getAddress(PROXY_ADDRESS),\n    abi,\n    Ethers.provider().getSigner()\n  );\n  contract.getAccount(sender).then((result) => {\n    State.update({\n      smartContractAddress: result\n    })\n    handleQueryIsCreatedAccount(result)\n  });\n}\nfunction handleQueryIsCreatedAccount(smartAddress) {\n  const abi = [{\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"isCreatedAccount\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }]\n  const contract = new ethers.Contract(\n    ethers.utils.getAddress(PROXY_ADDRESS),\n    abi,\n    Ethers.provider()\n  );\n  contract.isCreatedAccount(smartAddress).then((result) => {\n    State.update({\n      isCreatedAccount: result\n    })\n  });\n}\nfunction handleRefresh() {\n  handleGetSubAccount()\n}\nfunction handleCreateSubAccount() {\n  const abi = [{\n    \"inputs\": [],\n    \"name\": \"createAccount\",\n    \"outputs\": [\n      {\n        \"internalType\": \"address payable\",\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }]\n  const contract = new ethers.Contract(\n    ethers.utils.getAddress(PROXY_ADDRESS),\n    abi,\n    Ethers.provider().getSigner()\n  );\n  contract\n    .createAccount()\n    .then(tx => tx.wait())\n    .then(() => {\n      handleRefresh()\n    });\n}\nfunction handleOpenWrap() {\n  State.update({\n    showDialog: true\n  })\n}\nfunction handleCloseWrap() {\n  State.update({\n    showDialog: false\n  })\n}\nfunction handleManage(vault) {\n  State.update({\n    categoryIndex: 0,\n    checkedVault: vault,\n  })\n}\nuseEffect(() => {\n  sender && handleGetSubAccount()\n}, [sender])\n\n\nreturn (\n  <StyledJuiceContainer>\n    <StyledCategoryContainer>\n      {\n        categoryList.map((category, index) => (\n          <StyledCategory\n            key={index}\n            className={categoryIndex === index ? \"active\" : \"\"}\n            onClick={() => {\n              State.update({\n                categoryIndex: index\n              })\n            }}\n          >{category}</StyledCategory>\n        ))\n      }\n\n    </StyledCategoryContainer>\n    {\n      vaults && (\n        <Widget\n          src={\"bluebiu.near/widget/Liquidity.Data.JUICE\"}\n          props={{\n            dataList: vaults,\n            multicall,\n            multicallAddress,\n            smartContractAddress,\n            onLoad: ({\n              dataList,\n            }) => {\n              State.update({\n                vaults: dataList,\n                loading: false\n              })\n            }\n          }}\n        />\n      )\n    }\n    {\n      categoryIndex === 0 && (\n        checkedVault ? (\n          <Widget\n            src={\"bluebiu.near/widget/Liquidity.Bridge.JUICE.VaultDetail\"}\n            props={{\n              toast,\n              sender,\n              chainId,\n              windowOpen,\n              isCreatedAccount,\n              multicall,\n              multicallAddress,\n              checkedVault,\n              ICON_MAP,\n              PROXY_ADDRESS,\n              SYMBOL_ADDRESS,\n              smartContractAddress,\n              onChangeCategoryIndex: (categoryIndex) => {\n                State.update({\n                  categoryIndex\n                })\n              },\n              onBack: () => {\n                State.update({\n                  checkedVault: null\n                })\n              }\n            }}\n          />\n        ) : (\n          <Widget\n            src={\"bluebiu.near/widget/Liquidity.Bridge.JUICE.Vaults\"}\n            props={{\n              vaults,\n              prices,\n              onCheckedVaultChange: (vault) => {\n                State.update({\n                  checkedVault: vault\n                })\n              }\n            }}\n          />\n        )\n      )\n    }\n    {\n      categoryIndex === 1 && (\n        <Widget\n          src={\"bluebiu.near/widget/Liquidity.Bridge.JUICE.Borrowers\"}\n          props={{\n            toast,\n            sender,\n            ICON_MAP,\n            isCreatedAccount,\n            multicall,\n            multicallAddress,\n            PROXY_ADDRESS,\n            smartContractAddress,\n            SYMBOL_ADDRESS,\n            LENDING_POOL_ADDRESS,\n            onCreateSubAccount: handleCreateSubAccount,\n            onOpenWrap: handleOpenWrap\n          }}\n        />\n      )\n    }\n    {\n      categoryIndex === 2 && (\n        <Widget\n          src={\"bluebiu.near/widget/Liquidity.Bridge.JUICE.Positions\"}\n          props={{\n            sender,\n            vaults,\n            prices,\n            PROXY_ADDRESS,\n            multicall,\n            multicallAddress,\n            smartContractAddress,\n            onManage: handleManage\n          }}\n        />\n      )\n    }\n    {\n      state.showDialog && (\n        <Widget\n          src={\"bluebiu.near/widget/Liquidity.Bridge.JUICE.Dialog\"}\n          props={{\n            toast,\n            sender,\n            chainId,\n            SYMBOL_ADDRESS,\n            onCloseWrap: handleCloseWrap\n          }}\n        />\n      )\n    }\n    {!isChainSupported && (\n      <Widget\n        src=\"bluebiu.near/widget/Swap.ChainWarnigBox\"\n        props={{\n          chain: curChain,\n          onSwitchChain: onSwitchChain,\n          switchingChain: switchingChain,\n          theme: dexConfig.theme?.button,\n        }}\n      />\n    )}\n  </StyledJuiceContainer>\n)", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bluebiu.near/widget/Liquidity.Connector.JUICE", "fact_widget_deployments_id": "5a787342b45e92d2cf57ebd3e38d6cb9", "inserted_timestamp": "2024-04-29T09:40:49.733Z", "modified_timestamp": "2024-04-29T09:40:49.733Z", "__row_index": 1}