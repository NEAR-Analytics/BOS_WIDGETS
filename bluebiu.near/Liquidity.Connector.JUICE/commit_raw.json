{"tx_hash": "4Jzqu4A9HQgY2qhCguGFpRnrczyBGYpp1MjtrXhiUb6K", "action_id_social": "3HDmyccmVoUVuqjTuHDGH5wq1ZkE9xxoVX4SUdko31tL-0-widget", "block_id": 121127690, "block_timestamp": "2024-06-14T06:11:06.344Z", "signer_id": "bluebiu.near", "widget_name": "Liquidity.Connector.JUICE", "source_code": "const StyledJuiceContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`\nconst StyledCategoryContainer = styled.div`\n  margin-top: 18px;\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 1000px;\n  &:after {\n    content: \"\";\n    position: absolute;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    height: 1px;\n    background: linear-gradient(90deg, rgba(22, 24, 29, 0.00) 0%, #373A53 50%, rgba(22, 24, 29, 0.00) 100%);\n  }\n`\nconst StyledCategory = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 200px;\n  height: 46px;\n  cursor: pointer;\n\n  color: #979ABE;\n  font-family: Gantari;\n  font-size: 20px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: normal;\n  &.active {\n    color: #FFF;\n    &:after {\n      content: \"\";\n      position: absolute;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      height: 2px;\n      background: #FFF;\n    }\n  }\n`\nconst StyledSymbolButtonList = styled.div`\n  margin-top: 30px;\n  display: flex;\n  align-items: center;\n  padding: 4px;\n  border-radius: 8px;\n  border: 1px solid #373A53;\n  background: rgba(33, 35, 48, 0.5);\n`\nconst StyledSymbolButton = styled.div`\n  padding: 8px 24px;\n  border-radius: 6px;\n  border: 1px solid transparent;\n  background: transparent;\n  color: #979ABE;\n  font-family: Gantari;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n  cursor: pointer;\n  &.active {\n    border-color: #373A53;\n    background-color: #32364B;\n    color: #FFF;\n  }\n`\n\nconst {\n  toast,\n  account,\n  prices,\n  chainId,\n  multicall,\n  multicallAddress,\n  windowOpen,\n  addAction,\n  dexConfig,\n  connectProps,\n  isChainSupported,\n  curChain,\n  onSwitchChain,\n  switchingChain\n} = props\n\n\nif (!account || !isChainSupported) {\n  return (\n    <Widget\n      src=\"bluebiu.near/widget/Swap.ChainWarnigBox\"\n      props={{\n        chain: curChain,\n        onSwitchChain: onSwitchChain,\n        switchingChain: switchingChain,\n        theme: dexConfig.theme?.button,\n      }}\n    />\n  );\n}\nconst sender = ethers.utils.getAddress(account);\nconst {\n  ICON_MAP,\n  SYMBOL_LIST,\n  POOLS_MAPPING,\n  SYMBOL_NAME_MAPPING,\n} = dexConfig\n\nState.init({\n  categoryList: [\n    \"Vaults\",\n    \"Borrowers\",\n    \"Positions\"\n  ],\n  categoryIndex: 0,\n  symbolIndex: 0,\n  checkedVault: null,\n  smartContractAddress: \"\",\n  isCreatedAccount: false,\n  showDialog: false,\n  createSubAccountLoading: false\n})\nconst {\n  checkedVault,\n  categoryList,\n  categoryIndex,\n  symbolIndex,\n  isCreatedAccount,\n  smartContractAddress,\n} = state\n\nconst {\n  vaults,\n  PROXY_ADDRESS,\n  LENDING_POOL_ADDRESS,\n  SYMBOL_ADDRESS\n} = POOLS_MAPPING[symbolIndex]\n\nfunction handleGetSubAccount() {\n  const abi = [{\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"owner_\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getAccount\",\n    \"outputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },]\n  const contract = new ethers.Contract(\n    ethers.utils.getAddress(PROXY_ADDRESS),\n    abi,\n    Ethers.provider()\n  );\n  contract.getAccount(sender)\n    .then((result) => {\n      State.update({\n        smartContractAddress: result\n      })\n      handleQueryIsCreatedAccount(result)\n    })\n    .catch(error => {\n      console.log('=error', error)\n    });\n}\nfunction handleQueryIsCreatedAccount(smartAddress) {\n  const abi = [{\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"isCreatedAccount\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }]\n  const contract = new ethers.Contract(\n    ethers.utils.getAddress(PROXY_ADDRESS),\n    abi,\n    Ethers.provider()\n  );\n\n  contract.isCreatedAccount(smartAddress).then((result) => {\n    State.update({\n      isCreatedAccount: result\n    })\n  });\n}\nfunction handleRefresh() {\n  handleGetSubAccount()\n}\nfunction handleCreateSubAccount() {\n  State.update({\n    createSubAccountLoading: true\n  })\n  const abi = [{\n    \"inputs\": [],\n    \"name\": \"createAccount\",\n    \"outputs\": [\n      {\n        \"internalType\": \"address payable\",\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }]\n  const contract = new ethers.Contract(\n    ethers.utils.getAddress(PROXY_ADDRESS),\n    abi,\n    Ethers.provider().getSigner()\n  );\n  contract\n    .createAccount()\n    .then(tx => tx.wait())\n    .then(() => {\n      State.update({\n        createSubAccountLoading: false\n      })\n      handleRefresh()\n    })\n    .catch(error => {\n      State.update({\n        createSubAccountLoading: false\n      })\n    });\n}\nfunction handleOpenWrap() {\n  State.update({\n    showDialog: true\n  })\n}\nfunction handleCloseWrap() {\n  State.update({\n    showDialog: false\n  })\n}\nfunction handleManage(vault) {\n  State.update({\n    categoryIndex: 0,\n    checkedVault: vault,\n  })\n}\nuseEffect(() => {\n  sender && handleGetSubAccount()\n}, [sender, symbolIndex])\n\n\nreturn (\n  <StyledJuiceContainer>\n    <StyledSymbolButtonList>\n      {\n        SYMBOL_LIST.map((symbol, index) => (\n          <StyledSymbolButton\n            key={index}\n            className={index === symbolIndex ? \"active\" : \"\"}\n            onClick={() => {\n              State.update({\n                symbolIndex: index,\n                checkedVault: null\n              })\n            }}\n          >{symbol}</StyledSymbolButton>\n        ))\n      }\n    </StyledSymbolButtonList>\n    <StyledCategoryContainer>\n      {\n        categoryList.map((category, index) => (\n          <StyledCategory\n            key={index}\n            className={categoryIndex === index ? \"active\" : \"\"}\n            onClick={() => {\n              State.update({\n                categoryIndex: index\n              })\n            }}\n          >{category}</StyledCategory>\n        ))\n      }\n\n    </StyledCategoryContainer>\n    {\n      smartContractAddress ? (\n        <>\n          {\n            vaults && (\n              <Widget\n                key={'Data.JUICE' + symbolIndex}\n                src={\"bluebiu.near/widget/Liquidity.Data.JUICE\"}\n                props={{\n                  dataList: vaults,\n                  multicall,\n                  multicallAddress,\n                  smartContractAddress,\n                  onLoad: ({\n                    dataList,\n                  }) => {\n                    State.update({\n                      vaults: dataList,\n                      loading: false\n                    })\n                  }\n                }}\n              />\n            )\n          }\n          {\n            categoryIndex === 0 && checkedVault && (\n              <Widget\n                src={\"bluebiu.near/widget/Liquidity.Bridge.JUICE.VaultDetail\"}\n                key={'VaultDetail' + symbolIndex}\n                props={{\n                  toast,\n                  sender,\n                  chainId,\n                  addAction,\n                  windowOpen,\n                  isCreatedAccount,\n                  multicall,\n                  multicallAddress,\n                  checkedVault,\n                  ICON_MAP,\n                  PROXY_ADDRESS,\n                  SYMBOL_ADDRESS,\n                  SYMBOL_NAME_MAPPING,\n                  smartContractAddress,\n                  onChangeCategoryIndex: (categoryIndex) => {\n                    State.update({\n                      categoryIndex\n                    })\n                  },\n                  onBack: () => {\n                    State.update({\n                      checkedVault: null\n                    })\n                  }\n                }}\n              />\n            )\n          }\n          {\n            categoryIndex === 0 && !checkedVault && (\n              <Widget\n                src={\"bluebiu.near/widget/Liquidity.Bridge.JUICE.Vaults\"}\n                key={'Vaults' + symbolIndex}\n                props={{\n                  vaults,\n                  prices,\n                  onCheckedVaultChange: (vault) => {\n                    State.update({\n                      checkedVault: vault\n                    })\n                  }\n                }}\n              />\n            )\n          }\n          {\n            categoryIndex === 1 && (\n              <Widget\n                src={\"bluebiu.near/widget/Liquidity.Bridge.JUICE.Borrowers\"}\n                key={'Borrowers' + symbolIndex}\n                props={{\n                  toast,\n                  prices,\n                  sender,\n                  ICON_MAP,\n                  addAction,\n                  isCreatedAccount,\n                  multicall,\n                  symbolIndex,\n                  multicallAddress,\n                  PROXY_ADDRESS,\n                  smartContractAddress,\n                  SYMBOL_ADDRESS,\n                  SYMBOL_NAME_MAPPING,\n                  LENDING_POOL_ADDRESS,\n                  createSubAccountLoading,\n                  onCreateSubAccount: handleCreateSubAccount,\n                  onOpenWrap: handleOpenWrap\n                }}\n              />\n            )\n          }\n          {\n            categoryIndex === 2 && (\n              <Widget\n                src={\"bluebiu.near/widget/Liquidity.Bridge.JUICE.Positions\"}\n                key={'Positions' + symbolIndex}\n                props={{\n                  sender,\n                  vaults,\n                  prices,\n                  // symbol: SymbolMapping[symbolIndex][1],\n                  symbolIndex,\n                  PROXY_ADDRESS,\n                  SYMBOL_NAME_MAPPING,\n                  multicall,\n                  multicallAddress,\n                  smartContractAddress,\n                  onManage: handleManage\n                }}\n              />\n            )\n          }\n        </>\n      ) : (\n        <Widget src=\"bluebiu.near/widget/0vix.LendingSpinner\" />\n      )\n    }\n    {\n      state.showDialog && (\n        <Widget\n          src={\"bluebiu.near/widget/Liquidity.Bridge.JUICE.Dialog\"}\n          props={{\n            toast,\n            sender,\n            chainId,\n            addAction,\n            SYMBOL_ADDRESS,\n            onCloseWrap: handleCloseWrap\n          }}\n        />\n      )\n    }\n  </StyledJuiceContainer>\n)", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bluebiu.near/widget/Liquidity.Connector.JUICE", "fact_widget_deployments_id": "67f74cbd0cd031f449cfbe92be72a4c1", "inserted_timestamp": "2024-06-14T07:55:06.951Z", "modified_timestamp": "2024-06-14T07:55:06.951Z", "__row_index": 5}