{"tx_hash": "75Dg5iBa96SJwpmfix38jNvfHptaudXSFinasUrcxZ5t", "action_id_social": "2TEEwJ64bjWZWBUkxaBm5NxFDJix1xqstEqdjLk9PPBy-0-widget", "block_id": 117893458, "block_timestamp": "2024-04-29T16:15:36.583Z", "signer_id": "bluebiu.near", "widget_name": "Liquidity.Bridge.JUICE.Positions", "source_code": "const StyledContainer = styled.div`\n  width: 1000px;\n`\nconst StyledTitle = styled.div`\n  margin-bottom: 16px;\n  color: #FFF;\n  font-family: Gantari;\n  font-size: 20px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: normal;\n`\nconst StyledDashboardContainer = styled.div`\n  display: flex;\n  align-items: center;\n  height: 80px;\n  padding-left: 26px;\n  border-radius: 12px;\n  border: 1px solid #373A53;\n  background: #262836;\n\n`\nconst StyledColumn = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`\nconst StyledLabel = styled.div`\n  color: #979ABE;\n  font-family: Montserrat;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n`\nconst StyledValue = styled.div`\n  color: #FFF;\n  font-family: Montserrat;\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: normal;\n`\nconst StyledPostionsContainer = styled.div`\n  border-radius: 12px;\n  border: 1px solid #373A53;\n  background: #262836;\n`\nconst StyledPostionsTop = styled.div`\n  height: 53px;\n  display: flex;\n  align-items: center;\n  padding-left: 26px;\n  border-bottom: 1px solid #373A53;\n`\nconst StyledPostionsTopColumn = styled.div`\n  width: 20%;\n  color: #979ABE;\n  font-family: Montserrat;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n`\nconst StyledPostionsBottom = styled.div`\n  padding-bottom: 58px;\n`\nconst StyledPosition = styled.div`\n  padding: 20px 0 20px 26px;\n  display: flex;\n  align-items: center;\n`\nconst StyledPositionColumn = styled.div`\n  width: 20%;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n\n`\nconst StyledPositionColumnImageContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 26px;\n  height: 26px;\n  flex-shrink: 0;\n  border-radius: 6px;\n  background: #FFF;\n`\nconst StyledPositionColumnImage = styled.img`\n  width: 20px;\n`\nconst StyledPositionColumnTxt = styled.div`\n  color: #FFF;\n  font-family: Montserrat;\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: normal;\n`\nconst StyledPositionColumnButton = styled.div`\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100px;\n  height: 32px;\n  flex-shrink: 0;\n  border-radius: 6px;\n  background: var(--button-color);\n  color: var(--button-text-color);\n  text-align: center;\n  font-family: Gantari;\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n`\nconst StyledNotHave = styled.div`\n  padding-top: 56px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: #979ABE;\n  font-family: Gantari;\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n`\nconst {\n  sender,\n  vaults,\n  prices,\n  PROXY_ADDRESS,\n  multicall,\n  multicallAddress,\n  smartContractAddress,\n  onManage\n} = props\nState.init({\n  dashboard: null,\n  filterVaults: [],\n  pnl: 0,\n})\nfunction isNotEmptyArray(value) {\n  return value && value[0]\n}\nfunction handleQueryDashboard() {\n  const calls = []\n  const abi = [{\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getAccountHealth\",\n    \"outputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"debtAmount\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"collateralValue\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"investmentValue\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"UD60x18\",\n            \"name\": \"healthFactor\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"isLiquidatable\",\n            \"type\": \"bool\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"isRisky\",\n            \"type\": \"bool\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"hasBadDebt\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct AccountLib.Health\",\n        \"name\": \"health\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getDebtAmount\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOfAssets\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"assets\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }]\n  calls.push({\n    address: PROXY_ADDRESS,\n    name: \"getAccountHealth\",\n    params: [smartContractAddress]\n  })\n  calls.push({\n    address: PROXY_ADDRESS,\n    name: \"getDebtAmount\",\n    params: [smartContractAddress]\n  })\n  calls.push({\n    address: PROXY_ADDRESS,\n    name: \"balanceOfAssets\",\n    params: [sender]\n  })\n  console.log('====111====', multicallAddress)\n  multicall({\n    abi,\n    calls,\n    options: {},\n    multicallAddress,\n    provider: Ethers.provider(),\n  }).then(result => {\n    const [\n      getAccountHealthResult,\n      getDebtAmountResult,\n      balanceOfAssetsResult,\n    ] = result\n    const [A1, A2, A3] = isNotEmptyArray(getAccountHealthResult) ? getAccountHealthResult[0] : [1, 0, 0]\n    State.update({\n      dashboard: {\n        accountHealth: Big(A1).gt(0) ? (Big(Big(A2).plus(A3)).div(A1).times(100).toFixed(2) + \"%\") : \"N/A\",\n        debtAmount: Big(isNotEmptyArray(getDebtAmountResult) ? ethers.utils.formatUnits(getDebtAmountResult[0]) : 0).toFixed(4),\n        balanceOfAssets: Big(isNotEmptyArray(balanceOfAssetsResult) ? ethers.utils.formatUnits(balanceOfAssetsResult[0]) : 0).toFixed(4)\n      }\n    })\n  }).catch(error => {\n    console.log('=error', error)\n  })\n\n\n}\nfunction doQueryPnl(x, y) {\n  const abi = [\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"x\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"y\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"zeroFloorSub\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"z\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"pure\",\n      \"type\": \"function\"\n    }\n  ]\n  const contract = new ethers.Contract(\n    ethers.utils.getAddress(\"0xe1dA6F46d757699f6D783a2876E01937a1eCa9a9\"),\n    abi,\n    Ethers.provider().getSigner()\n  );\n  contract.zeroFloorSub(x, y)\n    .then(result => {\n      State.update({\n        pnl: ethers.utils.formatUnits(result)\n      })\n    })\n}\nfunction handleQueryPnl() {\n  const calls = []\n  const abi = [\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"account\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"getTotalAccountValue\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"totalValue\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"account\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"getDebtAmount\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    }\n  ]\n  calls.push({\n    address: PROXY_ADDRESS,\n    name: \"getTotalAccountValue\",\n    params: [smartContractAddress]\n  })\n  calls.push({\n    address: PROXY_ADDRESS,\n    name: \"getDebtAmount\",\n    params: [smartContractAddress]\n  })\n  multicall({\n    abi,\n    calls,\n    options: {},\n    multicallAddress,\n    provider: Ethers.provider(),\n  }).then(result => {\n    const [getTotalAccountValueResult, getDebtAmountResult] = result\n    if (isNotEmptyArray(getTotalAccountValueResult) && isNotEmptyArray(getDebtAmountResult)) {\n      doQueryPnl(getTotalAccountValueResult[0], getDebtAmountResult[0])\n    }\n  })\n}\nuseEffect(() => {\n  handleQueryDashboard()\n  handleQueryPnl()\n}, [])\n\nuseEffect(() => {\n  console.log('====11111=====')\n  State.update({\n    filterVaults: vaults.filter(vault => Number(vault.positionValue) > 0)\n  })\n}, [vaults])\n\nreturn (\n  <StyledContainer>\n    <StyledTitle>Dashboard</StyledTitle>\n    <StyledDashboardContainer>\n      <StyledColumn style={{\n        width: \"20%\"\n      }}>\n        <StyledLabel>Deposited WETH</StyledLabel>\n        <StyledValue>{state.dashboard?.balanceOfAssets}</StyledValue>\n      </StyledColumn>\n      <StyledColumn style={{\n        width: \"20%\"\n      }}>\n        <StyledLabel>Borrowed WETH</StyledLabel>\n        <StyledValue>{state.dashboard?.debtAmount}</StyledValue>\n      </StyledColumn>\n      <StyledColumn style={{\n        width: \"20%\"\n      }}>\n        <StyledLabel>WETH Borrow APY</StyledLabel>\n        <StyledValue>23.65%</StyledValue>\n      </StyledColumn>\n      <StyledColumn style={{\n        width: \"20%\"\n      }}>\n        <StyledLabel>Margin Health Factor</StyledLabel>\n        <StyledValue\n          style={{\n            color: \"#74F368\"\n          }}\n        >{state.dashboard?.accountHealth}</StyledValue>\n      </StyledColumn>\n      <StyledColumn style={{\n        width: \"20%\"\n      }}>\n        <StyledLabel>PnL</StyledLabel>\n        <StyledValue style={{\n          color: \"#FF547D\"\n        }}>{Big(state.pnl).toFixed(4)}</StyledValue>\n      </StyledColumn>\n    </StyledDashboardContainer>\n    <StyledTitle\n      style={{\n        marginTop: 36\n      }}\n    >Active Vault Positions</StyledTitle>\n    <StyledPostionsContainer>\n      <StyledPostionsTop>\n        <StyledPostionsTopColumn style={{\n          width: \"30%\"\n        }}>Name</StyledPostionsTopColumn>\n        <StyledPostionsTopColumn style={{\n          width: \"25%\"\n        }}>Protocol</StyledPostionsTopColumn>\n        <StyledPostionsTopColumn style={{\n          width: \"15%\"\n        }}>Borrowed Asset</StyledPostionsTopColumn>\n        <StyledPostionsTopColumn style={{\n          width: \"15%\"\n        }}>Position Value</StyledPostionsTopColumn>\n        <StyledPostionsTopColumn style={{\n          width: \"15%\"\n        }}></StyledPostionsTopColumn>\n      </StyledPostionsTop>\n      <StyledPostionsBottom>\n        {\n          state.filterVaults?.length > 0 ? state.filterVaults.map(vault => (\n            <StyledPosition>\n              <StyledPositionColumn style={{\n                width: \"30%\"\n              }}>\n                <StyledPositionColumnImageContainer\n                  style={{ backgroundColor: vault.iconBgColor }}\n                >\n                  <StyledPositionColumnImage src={vault.icon} />\n                </StyledPositionColumnImageContainer>\n                <StyledPositionColumnTxt>{vault.name}</StyledPositionColumnTxt>\n              </StyledPositionColumn>\n              <StyledPositionColumn style={{\n                width: \"25%\"\n              }}>\n                <StyledPositionColumnTxt>{vault.protocol}</StyledPositionColumnTxt>\n              </StyledPositionColumn>\n              <StyledPositionColumn style={{\n                width: \"15%\"\n              }}>\n                <StyledPositionColumnTxt>WETH</StyledPositionColumnTxt>\n              </StyledPositionColumn>\n              <StyledPositionColumn style={{\n                width: \"15%\"\n              }}>\n                <StyledPositionColumnTxt>{\"$\" + Big(vault?.positionValue ?? 0).times(prices[\"WETH\"]).toFixed(2)}</StyledPositionColumnTxt>\n              </StyledPositionColumn>\n              <StyledPositionColumn style={{\n                width: \"15%\"\n              }}>\n                <StyledPositionColumnButton onClick={() => {\n                  onManage(vault)\n                }}>Manage</StyledPositionColumnButton>\n              </StyledPositionColumn>\n            </StyledPosition>\n          )) : (\n            <StyledNotHave>\n              You didn\u2019t add any vault yet\n            </StyledNotHave>\n          )\n        }\n      </StyledPostionsBottom>\n    </StyledPostionsContainer>\n  </StyledContainer>\n)", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bluebiu.near/widget/Liquidity.Bridge.JUICE.Positions", "fact_widget_deployments_id": "1dae0a472c05e47f7cc74e8566ecbc34", "inserted_timestamp": "2024-04-29T18:48:14.692Z", "modified_timestamp": "2024-04-29T18:48:14.692Z", "__row_index": 3}