{"tx_hash": "213GFcjzU9WUyvrR497U8Rjni8RZjXL2U4zaPcEYiJnH", "action_id_social": "FVAvE1MzztzHShzURDVBizewUkrapf2phuiwNGg2B6K9-0-widget", "block_id": 104538928, "block_timestamp": "2023-10-30T13:11:57.532Z", "signer_id": "bluebiu.near", "widget_name": "Linea.Swap.QuoterSyncswap", "source_code": "const {\n  update,\n  routerAddress,\n  wethAddress,\n  inputCurrency,\n  outputCurrency,\n  inputCurrencyAmount,\n  outputCurrencyAmount,\n  tradeType,\n  factoryAddress,\n  classicPoolAddres,\n  stablePoolAddress,\n  onLoad,\n} = props;\n\nif (!update) return \"\";\n\nif (!inputCurrency.address || !outputCurrency.address || !inputCurrencyAmount) {\n  onLoad({});\n  return \"\";\n}\n\nconst ZERO_ADDRESS = \"0x0000000000000000000000000000000000000000\";\n\nconst wrapType =\n  inputCurrency.address === \"native\" && outputCurrency.address === wethAddress\n    ? 1\n    : inputCurrency.address === wethAddress &&\n      outputCurrency.address === \"native\"\n    ? 2\n    : 0;\nif (wrapType) {\n  onLoad(\n    tradeType === \"in\"\n      ? {\n          outputCurrencyAmount: inputCurrencyAmount,\n          loading: false,\n          noPair: false,\n        }\n      : {\n          inputCurrencyAmount: outputCurrencyAmount,\n          loading: false,\n          noPair: false,\n        }\n  );\n  return;\n}\nconst currentCurrency = tradeType === \"in\" ? inputCurrency : outputCurrency;\n\nconst currentAmount = Big(\n  tradeType === \"in\" ? inputCurrencyAmount : outputCurrencyAmount\n)\n  .mul(0.995)\n  .toFixed(5);\nconst outCurrency = tradeType === \"in\" ? outputCurrency : inputCurrency;\n\nconst PoolAbi = [\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    name: \"getPool\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nconst ClassicPoolContract = new ethers.Contract(\n  classicPoolAddres,\n  PoolAbi,\n  Ethers.provider().getSigner()\n);\n\nconst StablePoolContract = new ethers.Contract(\n  stablePoolAddress,\n  PoolAbi,\n  Ethers.provider().getSigner()\n);\n\nconst path = [\n  currentCurrency.address === \"native\" ? wethAddress : currentCurrency.address,\n  outCurrency.address === \"native\" ? wethAddress : outCurrency.address,\n];\n\nStablePoolContract.getPool(...path)\n  .then((poolAddress) => {\n    if (poolAddress === ZERO_ADDRESS)\n      return ClassicPoolContract.getPool(...path);\n    return poolAddress;\n  })\n  .then((poolAddress) => {\n    if (poolAddress === ZERO_ADDRESS) throw new Error(\"No pool found\");\n    return poolAddress;\n  })\n  .then((poolAddress) => {\n    const PoolContract = new ethers.Contract(\n      poolAddress,\n      [\n        {\n          inputs: [\n            {\n              internalType: \"address\",\n              name: \"_tokenIn\",\n              type: \"address\",\n            },\n            {\n              internalType: \"uint256\",\n              name: \"_amountIn\",\n              type: \"uint256\",\n            },\n            {\n              internalType: \"address\",\n              name: \"_sender\",\n              type: \"address\",\n            },\n          ],\n          name: \"getAmountOut\",\n          outputs: [\n            {\n              internalType: \"uint256\",\n              name: \"_amountOut\",\n              type: \"uint256\",\n            },\n          ],\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n      ],\n      Ethers.provider().getSigner()\n    );\n\n    PoolContract.getAmountOut(\n      path[0],\n      ethers.utils.parseUnits(currentAmount, currentCurrency.decimals),\n      ZERO_ADDRESS\n    ).then((res) => {\n      const amount = Big(\n        ethers.utils.formatUnits(res.toString(), outCurrency.decimals)\n      ).toFixed(10);\n\n      onLoad({\n        outputCurrencyAmount: Big(amount).gt(0.01)\n          ? amount\n          : Big(amount).toFixed(10),\n        noPair: false,\n        syncSwapPoolAddress: poolAddress,\n      });\n    });\n  })\n  .catch((err) => {\n    onLoad({\n      loading: false,\n      noPair: true,\n    });\n  });\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bluebiu.near/widget/Linea.Swap.QuoterSyncswap", "fact_widget_deployments_id": "a2848b8520d9a394c75bb8c94e54c271", "inserted_timestamp": "2023-10-30T15:18:43.635Z", "modified_timestamp": "2023-10-30T15:18:43.635Z", "__row_index": 0}