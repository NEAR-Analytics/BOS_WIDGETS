{"tx_hash": "87nzVcQRyGV9NwSnm7k2DkSuf8fqBiwNgxJfzeHLF3ov", "action_id_social": "9QEhc9URh6bFermZ3UAuyiSq2kqUxAkx226pJn6tFHd1-0-widget", "block_id": 101392243, "block_timestamp": "2023-09-18T09:18:28.592Z", "signer_id": "bluebiu.near", "widget_name": "MetaPool.StakeEthDetails", "source_code": "const Wrapper = styled.div`\n  color: #787da1;\n  font-size: 16px;\n  font-weight: 500;\n  @media (max-width: 768px) {\n    font-size: 15px;\n    padding: 20px 20px 0px;\n  }\n`;\nconst Item = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 16px;\n`;\nconst Label = styled.div``;\nconst Value = styled.div`\n  text-align: right;\n`;\nconst ethAccount = Ethers.send(\"eth_requestAccounts\", [])[0];\nconst stakingData = props.stakingData || undefined;\nconst ethUsdPrice = props.ethUsdPrice || undefined;\nconst tokenDecimals = 18;\n\nconst getMpETHPrice = () => {\n  if (\n    !stakingData ||\n    Big(stakingData.totalSupply).eq(0) ||\n    Big(stakingData.totalUnderlying).eq(0)\n  ) {\n    return Big(\"1000000000000000000\").toString();\n  }\n\n  const rewardsSinceUpdate = Big(stakingData.estimatedRewardsPerSecond)\n    .mul(\n      Math.floor(Date.now()) -\n        (Big(stakingData.submitReportUnlockTime).toNumber() -\n          Big(stakingData.submitReportTimelock).toNumber()) *\n          1000\n    )\n    .div(1000);\n\n  const assets = Big(stakingData.totalUnderlying).add(rewardsSinceUpdate);\n\n  return assets\n    .mul(Big(\"1000000000000000000\"))\n    .div(Big(stakingData.totalSupply))\n    .toString()\n    .split(\".\")[0];\n};\nconst getStakedBalance = () => {\n  if (!ethAccount) return;\n  const Erc20Contract = new ethers.Contract(\n    props.address,\n    props.abi,\n    Ethers.provider().getSigner()\n  );\n  Erc20Contract.balanceOf(ethAccount)\n    .then((_balance) => {\n      const balance = ethers.utils.formatEther(_balance._hex);\n      Storage.privateSet(\"stakeBalance\", balance);\n    })\n    .catch((err) => {});\n};\nconst handleDetails = () => {\n  const bigMpEthPrice = Big(getMpETHPrice());\n\n  const mpEthPrice = bigMpEthPrice\n    .div(Big(10).pow(tokenDecimals))\n    .toFixed(6)\n    .replace(/\\d(?=(\\d{3})+\\.)/g, \"$&,\");\n  const stakeBalance = Storage.privateGet(\"stakeBalance\");\n  if (!stakeBalance) {\n    State.update({ mpEthPrice });\n  } else {\n    const userMpEthInEth = bigMpEthPrice\n      .mul(parseFloat(stakeBalance))\n      .div(Big(10).pow(tokenDecimals))\n      .toFixed(6)\n      .replace(/\\d(?=(\\d{3})+\\.)/g, \"$&,\");\n    const userMpEthUsd = Big(mpEthPrice)\n      .mul(stakeBalance)\n      .mul(ethUsdPrice)\n      .toFixed(2)\n      .replace(/\\d(?=(\\d{3})+\\.)/g, \"$&,\");\n\n    State.update({ mpEthPrice, userMpEthInEth, userMpEthUsd });\n  }\n};\nif (ethUsdPrice && stakingData) {\n  handleDetails();\n  getStakedBalance();\n}\n\nreturn (\n  <Wrapper>\n    <Item>\n      <Label>mpETH/ETH Price:</Label>\n      <Value>{state.mpEthPrice || Number(0).toFixed(6)}</Value>\n    </Item>\n    <Item>\n      <Label>Your mpETH/ETH:</Label>\n      <Value>{state.userMpEthInEth || \"0.000000\"}</Value>\n    </Item>\n    <Item>\n      <Label>Your mpETH/USD:</Label>\n      <Value>{state.userMpEthUsd ? `$${state.userMpEthUsd}` : \"$0.00\"}</Value>\n    </Item>\n  </Wrapper>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bluebiu.near/widget/MetaPool.StakeEthDetails", "fact_widget_deployments_id": "e9cd0c4710ef1294d0430812943ac494", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}