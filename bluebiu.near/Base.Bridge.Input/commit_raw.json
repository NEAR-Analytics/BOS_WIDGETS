{"tx_hash": "EjbcxQ1JJgd7T815gHyGm9as54JkhubQvT8iauwMtUkQ", "action_id_social": "4iertxyCxHVW8cm7AX5raKetkGPQytLzZC5f66mHJLdQ-0-widget", "block_id": 108466496, "block_timestamp": "2023-12-21T08:21:19.015Z", "signer_id": "bluebiu.near", "widget_name": "Base.Bridge.Input", "source_code": "// styled area\nconst Wrapper = styled.div`\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n  padding: 5px 0px;\n`;\nconst InputField = styled.div`\n  margin-right: 8px;\n  flex-grow: 1;\n  @media (max-width: 768px) {\n    width: calc(100% - 115px);\n  }\n`;\nconst InputWarpper = styled.div`\n  height: 46px;\n  border-bottom: 1px solid var(--input-border-color);\n  padding: 10px 0px;\n  @media (max-width: 900px) {\n    height: 40px;\n  }\n`;\nconst Input = styled.input`\n  font-size: 26px;\n  color: #fff;\n  font-weight: 500;\n  background-color: transparent;\n  outline: none;\n  border: none;\n  height: 40px;\n  vertical-align: bottom;\n  @media (max-width: 900px) {\n    font-size: 20px;\n    height: 34px;\n  }\n`;\nconst Value = styled.div`\n  padding-top: 10px;\n  color: var(--thirdary-text-color);\n  font-size: 14px;\n  line-height: 16px;\n`;\nconst CurrencyField = styled.div`\n  min-width: 160px;\n  flex-shrink: 0;\n  @media (max-width: 768px) {\n    min-width: 115px;\n  }\n`;\nconst CurrencySelect = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border: 1px solid var(--input-border-color);\n  border-radius: 24px;\n  padding: 6px 12px 6px 6px;\n  cursor: pointer;\n  background-color: var(--input-select-bg-color);\n  svg {\n    color: var(--arrow-color);\n  }\n  @media (max-width: 768px) {\n    svg {\n      width: 12px !important;\n    }\n    padding: 0px 12px 0px 6px;\n  }\n`;\nconst CurrencyWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  height: 32px;\n  @media (max-width: 768px) {\n    width: calc(100% - 12px);\n  }\n`;\nconst CurrencyIcon = styled.img`\n  width: 32px;\n  height: 32px;\n  border-radius: 50%;\n  @media (max-width: 768px) {\n    width: 22px;\n    height: 22px;\n  }\n`;\nconst CurrencySymbol = styled.div`\n  font-size: 18px;\n  color: #fff;\n  margin-left: 7px;\n  white-space: nowrap;\n  .fz-14 {\n    font-size: 14px;\n  }\n  @media (max-width: 768px) {\n    width: calc(100% - 30px);\n    text-overflow: ellipsis;\n    overflow: hidden;\n    font-size: 14px;\n    .fz-14 {\n      font-size: 12px;\n    }\n  }\n`;\nconst Amount = styled.div`\n  padding-top: 10px;\n  color: var(--thirdary-text-color);\n  font-size: 14px;\n  line-height: 16px;\n  text-align: right;\n  cursor: pointer;\n`;\n// styled area end\n\nState.init({\n  balanceLoaded: false,\n  balance: \"0\",\n});\n\nconst getTokenPrice = () => {\n  const prices = Storage.privateGet(\"tokensPrice\");\n  return prices[props.currency?.symbol];\n};\n\nconst utils = {\n  balanceFormated: () => {\n    if (!props.currency?.address) return \"-\";\n    if (!state.balanceLoaded) return \"Loading\";\n    if (state.balance === \"0\" || Big(state.balance).eq(0)) return \"0\";\n    if (Big(state.balance).lt(0.0001)) return \"<0.0001\";\n    return Big(state.balance).toFixed(4, 0);\n  },\n};\n\nconst handlers = {\n  handleDisplayCurrencySelect: () => {\n    State.update({\n      balanceLoaded: false,\n    });\n    props?.onCurrencySelectOpen();\n  },\n  handleInputChange: (ev) => {\n    if (isNaN(Number(ev.target.value))) return;\n    props.onAmountChange?.(ev.target.value);\n  },\n};\n\nconst DELAY = 1000 * 60 * 5;\nconst timer = Storage.privateGet(\"priceTimer\");\n\nfunction getPrice() {\n  const AccessKey = Storage.get(\n    \"AccessKey\",\n    \"guessme.near/widget/ZKEVMWarmUp.add-to-quest-card\"\n  );\n  asyncFetch(\"/dapdap/get-token-price-by-dapdap\", {\n    Authorization: AccessKey,\n  })\n    .then((res) => {\n      const data = res.body.data;\n      data.native = data.aurora;\n      delete data.aurora;\n      Storage.privateSet(\"tokensPrice\", data);\n      props?.onGetPrice(data[props.currency?.symbol]);\n      setTimeout(getPrice, DELAY);\n    })\n    .catch((err) => {\n      setTimeout(getPrice, DELAY);\n    });\n}\n\nuseEffect(() => {\n  getPrice();\n}, []);\n\nuseEffect(() => {\n  props?.onGetPrice(getTokenPrice());\n}, [props.currency]);\n\nreturn (\n  <Wrapper>\n    {(props.updateTokenBalance || !state.balanceLoaded) && (\n      <Widget\n        src=\"bluebiu.near/widget/Arbitrum.Swap.CurrencyBalance\"\n        props={{\n          address: props.currency?.isNative\n            ? \"native\"\n            : props.currency?.address,\n          onLoad: (balance) => {\n            State.update({\n              balance: ethers.utils.formatUnits(\n                balance,\n                props.currency.decimals\n              ),\n              balanceLoaded: true,\n            });\n            props?.onUpdateCurrencyBalance(balance);\n          },\n        }}\n      />\n    )}\n    <InputField>\n      <InputWarpper>\n        <Input\n          value={props.amount}\n          disabled={props.disabled}\n          onChange={handlers.handleInputChange}\n        />\n      </InputWarpper>\n      <Value>\n        \u2248 $\n        <Widget\n          src=\"bluebiu.near/widget/Base.Bridge.Value\"\n          props={{\n            price: getTokenPrice(),\n            amount: props.amount,\n          }}\n        />\n      </Value>\n    </InputField>\n    <CurrencyField>\n      <CurrencySelect onClick={handlers.handleDisplayCurrencySelect}>\n        <CurrencyWrapper>\n          {props.currency?.icon && <CurrencyIcon src={props.currency.icon} />}\n          <CurrencySymbol>\n            {props.currency.symbol || (\n              <span className=\"fz-14\">Select a token</span>\n            )}\n          </CurrencySymbol>\n        </CurrencyWrapper>\n        <Widget src=\"bluebiu.near/widget/Arbitrum.Swap.ArrowIcon\" />\n      </CurrencySelect>\n      <Amount\n        onClick={() => {\n          const formatedBalance = utils.balanceFormated();\n          if (![\"-\", \"Loading\", \"0\"].includes(formatedBalance))\n            props.onAmountChange?.(state.balance);\n        }}\n      >\n        Balance:{\" \"}\n        <span\n          style={{\n            textDecoration: props.disabled ? \"none\" : \"underline\",\n          }}\n        >\n          {utils.balanceFormated()}\n        </span>\n      </Amount>\n    </CurrencyField>\n  </Wrapper>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bluebiu.near/widget/Base.Bridge.Input", "fact_widget_deployments_id": "86add0e6c49e15d7c6966a0808f29f22", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 3}