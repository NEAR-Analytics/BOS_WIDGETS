{"tx_hash": "7HGS1hahxNWyQBduaKF9JzyJneFUxXWNgYuYAhmWrgGj", "action_id_social": "6UrBkjYJhLdcQbGcqYjTECZwLSGKRhq4dEcqRfXhTUev-0-widget", "block_id": 116614577, "block_timestamp": "2024-04-11T14:17:56.800Z", "signer_id": "bluebiu.near", "widget_name": "Base.Bridge.Input", "source_code": "// styled area\nconst Wrapper = styled.div`\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n  padding: 5px 0px;\n`;\nconst InputField = styled.div`\n  margin-right: 8px;\n  flex-grow: 1;\n  @media (max-width: 768px) {\n    width: calc(100% - 115px);\n  }\n`;\nconst InputWarpper = styled.div`\n  height: 46px;\n  border-bottom: 1px solid #373a53;\n  padding: 10px 0px;\n  @media (max-width: 900px) {\n    height: 40px;\n  }\n`;\nconst Input = styled.input`\n  font-size: 26px;\n  color: #fff;\n  font-weight: 500;\n  background-color: transparent;\n  outline: none;\n  border: none;\n  height: 40px;\n  vertical-align: bottom;\n  @media (max-width: 900px) {\n    font-size: 20px;\n    height: 34px;\n  }\n`;\nconst Value = styled.div`\n  padding-top: 10px;\n  color: var(--thirdary-text-color);\n  font-size: 14px;\n  line-height: 16px;\n`;\nconst CurrencyField = styled.div`\n  min-width: 160px;\n  flex-shrink: 0;\n  @media (max-width: 768px) {\n    min-width: 115px;\n  }\n`;\nconst CurrencySelect = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border: 1px solid #373a53;\n  border-radius: 24px;\n  padding: 6px 12px 6px 6px;\n  cursor: pointer;\n  background-color: var(--input-select-bg-color);\n  svg {\n    color: var(--arrow-color);\n  }\n  @media (max-width: 768px) {\n    svg {\n      width: 12px !important;\n    }\n    padding: 0px 12px 0px 6px;\n  }\n`;\nconst CurrencyWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  height: 32px;\n  @media (max-width: 768px) {\n    width: calc(100% - 12px);\n  }\n`;\nconst CurrencyIcon = styled.img`\n  width: 32px;\n  height: 32px;\n  border-radius: 50%;\n  @media (max-width: 768px) {\n    width: 22px;\n    height: 22px;\n  }\n`;\nconst CurrencySymbol = styled.div`\n  font-size: 18px;\n  color: #fff;\n  margin-left: 7px;\n  white-space: nowrap;\n  .fz-14 {\n    font-size: 14px;\n  }\n  @media (max-width: 768px) {\n    width: calc(100% - 30px);\n    text-overflow: ellipsis;\n    overflow: hidden;\n    font-size: 14px;\n    .fz-14 {\n      font-size: 12px;\n    }\n  }\n`;\nconst Amount = styled.div`\n  padding-top: 10px;\n  color: var(--thirdary-text-color);\n  font-size: 14px;\n  line-height: 16px;\n  text-align: right;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  gap: 4px;\n`;\n// styled area end\n\nState.init({\n  balance: \"0\",\n  loading: false,\n});\n\nconst utils = {\n  balanceFormated: () => {\n    if (!props.currency?.address) return \"-\";\n    if (state.balance === \"0\" || Big(state.balance).eq(0)) return \"0\";\n    if (Big(state.balance).lt(0.0001)) return \"<0.0001\";\n    return Big(state.balance).toFixed(4, 0);\n  },\n};\n\nconst handlers = {\n  handleDisplayCurrencySelect: () => {\n    props?.onCurrencySelectOpen();\n  },\n  handleInputChange: (ev) => {\n    if (isNaN(Number(ev.target.value))) return;\n    props.onAmountChange?.(ev.target.value.replace(/\\s+/g, \"\"));\n  },\n};\n\nuseEffect(() => {\n  if (props.updateTokenBalance === undefined) return;\n  State.update({\n    loading: props.updateTokenBalance,\n  });\n}, [props.updateTokenBalance]);\n\nreturn (\n  <Wrapper>\n    <Widget\n      src=\"bluebiu.near/widget/Arbitrum.Swap.CurrencyBalance\"\n      props={{\n        address: props.currency?.isNative ? \"native\" : props.currency?.address,\n        updateTokenBalance: props.updateTokenBalance,\n        account: props.account,\n        onLoad: (balance) => {\n          State.update({\n            balance: ethers.utils.formatUnits(balance, props.currency.decimals),\n            loading: false,\n          });\n          props?.onUpdateCurrencyBalance(balance);\n        },\n      }}\n    />\n    <InputField>\n      <InputWarpper>\n        <Input\n          value={props.amount}\n          disabled={props.disabled}\n          onChange={handlers.handleInputChange}\n        />\n      </InputWarpper>\n      <Value>\n        \u2248 $\n        <Widget\n          src=\"bluebiu.near/widget/Base.Bridge.Value\"\n          props={{\n            price: props.price,\n            amount: props.amount,\n          }}\n        />\n      </Value>\n    </InputField>\n    <CurrencyField>\n      <CurrencySelect onClick={handlers.handleDisplayCurrencySelect}>\n        <CurrencyWrapper>\n          {props.currency?.icon && <CurrencyIcon src={props.currency.icon} />}\n          <CurrencySymbol>\n            {props.currency.symbol || (\n              <span className=\"fz-14\">Select a token</span>\n            )}\n          </CurrencySymbol>\n        </CurrencyWrapper>\n        <Widget src=\"bluebiu.near/widget/Arbitrum.Swap.ArrowIcon\" />\n      </CurrencySelect>\n      <Amount\n        onClick={() => {\n          const formatedBalance = utils.balanceFormated();\n          if (![\"-\", \"Loading\", \"0\"].includes(formatedBalance))\n            props.onAmountChange?.(state.balance);\n        }}\n      >\n        Balance:{\" \"}\n        {state.loading ? (\n          <div style={{ width: \"18px\" }}>\n            <Widget src=\"bluebiu.near/widget/0vix.LendingLoadingIcon\" />\n          </div>\n        ) : (\n          <span\n            style={{\n              textDecoration: props.disabled ? \"none\" : \"underline\",\n            }}\n          >\n            {utils.balanceFormated()}\n          </span>\n        )}\n      </Amount>\n    </CurrencyField>\n  </Wrapper>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bluebiu.near/widget/Base.Bridge.Input", "fact_widget_deployments_id": "412ee6eacc00584ebaa2826bbd105faa", "inserted_timestamp": "2024-04-11T15:48:48.493Z", "modified_timestamp": "2024-04-11T15:48:48.493Z", "__row_index": 0}