{"tx_hash": "CRAFkdbRDUw94sGC3pcyy3Y9hSDr5muSpQJ8JuQfSrnq", "action_id_social": "AS63YHViutRY3Wehmh6rs1jkrNLhiLmCAnBy7B4d9UzH-0-widget", "block_id": 117953502, "block_timestamp": "2024-04-30T13:37:02.393Z", "signer_id": "bluebiu.near", "widget_name": "Lending.Orbit.Handler", "source_code": "const CErc20_ABI = [\n  {\n    inputs: [\n      { internalType: \"address\", name: \"gToken\", type: \"address\" },\n      { internalType: \"uint256\", name: \"uAmount\", type: \"uint256\" },\n    ],\n    name: \"supply\",\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  //\n  {\n    inputs: [{ internalType: \"uint256\", name: \"mintAmount\", type: \"uint256\" }],\n    name: \"mint\",\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"uint256\", name: \"borrowAmount\", type: \"uint256\" },\n    ],\n    name: \"borrow\",\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"uint256\", name: \"repayAmount\", type: \"uint256\" }],\n    name: \"repayBorrow\",\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"uint256\", name: \"redeemAmount\", type: \"uint256\" },\n    ],\n    name: \"redeemUnderlying\",\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\nconst CEther_ABI = [\n  {\n    inputs: [],\n    name: \"mint\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"repayBorrow\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n];\n\nconst UNITROLLER_ABI = [\n  {\n    constant: false,\n    inputs: [\n      { internalType: \"address[]\", name: \"qiTokens\", type: \"address[]\" },\n    ],\n    name: \"enterMarkets\",\n    outputs: [{ internalType: \"uint256[]\", name: \"\", type: \"uint256[]\" }],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      { internalType: \"address\", name: \"qiTokenAddress\", type: \"address\" },\n    ],\n    name: \"exitMarket\",\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nconst { update, display, data, orbitTab, amount, account, onLoad } = props;\nuseEffect(() => {\n  const isCollateral = data.actionText.includes(\"Collateral\");\n  console.log(\"HANDLER--\", isCollateral, props);\n  if (!data.actionText || !data.underlyingToken) return;\n\n  if (!isCollateral && !update) return;\n\n  const isETH = data.underlyingToken.isNative;\n  let spaceAddress;\n  const { ORBIT_ADDRESS, REOZO_ADDRESS, KELP_ADDRESS } = data.config;\n  if (orbitTab === \"ORBIT\") {\n    spaceAddress = ORBIT_ADDRESS;\n  }\n  if (orbitTab === \"RENZO\") {\n    spaceAddress = REOZO_ADDRESS;\n  }\n  if (orbitTab === \"KELP\") {\n    spaceAddress = KELP_ADDRESS;\n  }\n\n  let options = {};\n  let params = [];\n  let method = \"\";\n  let contract = null;\n\n  if ([\"Deposit\", \"Repay\", \"Withdraw\", \"Borrow\"].includes(data.actionText)) {\n    if (!data.address || !amount) {\n      return;\n    }\n\n    const parsedAmount = ethers.utils.parseUnits(\n      Big(amount).toFixed(data.underlyingToken.decimals).toString(),\n      data.underlyingToken.decimals\n    );\n\n    options = {\n      value:\n        isETH && (data.actionText === \"Deposit\" || data.actionText === \"Repay\")\n          ? parsedAmount\n          : 0,\n      gasLimit: 4000000,\n    };\n    const CEtherContract = new ethers.Contract(\n      data.address,\n      CEther_ABI,\n      Ethers.provider().getSigner()\n    );\n    const CErc20Contract = new ethers.Contract(\n      data.address,\n      CErc20_ABI,\n      Ethers.provider().getSigner()\n    );\n\n    contract = CErc20Contract;\n\n    if (data.actionText === \"Deposit\") {\n      contract = isETH ? CEtherContract : CErc20Contract;\n      method = \"mint\";\n      params = isETH ? [] : [parsedAmount];\n    }\n\n    if (data.actionText === \"Withdraw\") {\n      method = \"redeemUnderlying\";\n      params = [parsedAmount];\n    }\n\n    if (data.actionText === \"Borrow\") {\n      method = \"borrow\";\n      params = [parsedAmount];\n    }\n\n    if (data.actionText === \"Repay\") {\n      contract = isETH ? CEtherContract : CErc20Contract;\n      method = \"repayBorrow\";\n      params = isETH ? [] : [parsedAmount];\n    }\n  }\n\n  if (isCollateral) {\n    if (!data.underlyingToken) return;\n    const isEnter = data.actionText === \"Enable as Collateral\";\n    contract = new ethers.Contract(\n      spaceAddress,\n      UNITROLLER_ABI,\n      Ethers.provider().getSigner()\n    );\n\n    method = isEnter ? \"enterMarkets\" : \"exitMarket\";\n\n    params = isEnter ? [[data.address]] : [data.address];\n  }\n\n  if (!contract) return;\n\n  const createTx = (gas) => {\n    const _gas = gas ? Big(gas.toString()).mul(1.2).toFixed(0) : 4000000;\n\n    contract.populateTransaction[method](...params, {\n      ...options,\n      gasLimit: 4000000,\n    })\n      .then((res) => {\n        onLoad({\n          gas: 4000000,\n          unsignedTx: res,\n          isError: false,\n        });\n      })\n      .catch((err) => {\n        console.log(\"CATCH_createTx:\", err);\n        onLoad({});\n      });\n  };\n\n  contract.estimateGas[method](...params, options)\n    .then((gas) => {\n      createTx(gas);\n    })\n    .catch((err) => {\n      console.log(\"estimateGas\", err);\n      createTx();\n    });\n}, [update, display]);\n\nreturn \"\";\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bluebiu.near/widget/Lending.Orbit.Handler", "fact_widget_deployments_id": "b7619ff9e15c85df3def694124368d85", "inserted_timestamp": "2024-04-30T15:40:11.948Z", "modified_timestamp": "2024-04-30T15:40:11.948Z", "__row_index": 0}