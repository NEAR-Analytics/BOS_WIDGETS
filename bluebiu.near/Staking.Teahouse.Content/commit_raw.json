{"tx_hash": "CdJXtiSA1SPKHLiEmpXRFy3Ydys1t3nPtwEuQU4oy3jv", "action_id_social": "J5eozYZe2m98mgJ99H5CNKwW1FovJLr1QSZo3jdPctmj-0-widget", "block_id": 121136614, "block_timestamp": "2024-06-14T09:20:05.871Z", "signer_id": "bluebiu.near", "widget_name": "Staking.Teahouse.Content", "source_code": "const {\n  Column,\n  Row,\n  StyledVaultImage,\n  SvgIcon,\n  StyledDashedUndeline,\n  TdTxt,\n  PoolPercentage,\n  StrategyTxt,\n  TitleText,\n  ContainerLogin,\n} = VM.require(\"bluebiu.near/widget/Staking.Teahouse.Styles\");\n\nState.init({\n  loading: false,\n  dataList: [],\n  dataIndex: -1,\n  chainIndex: 0,\n  token: \"\",\n});\nconst IconRight = (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"8\"\n    height=\"10\"\n    viewBox=\"0 0 8 10\"\n    fill=\"none\"\n  >\n    <path\n      d=\"M7.18407 4.21913C7.68448 4.61945 7.68448 5.38054 7.18407 5.78087L2.28485 9.70024C1.63009 10.2241 0.660156 9.75788 0.660156 8.91937L0.660156 1.08062C0.660156 0.242118 1.63009 -0.224055 2.28485 0.299756L7.18407 4.21913Z\"\n      fill=\"#979ABE\"\n    />\n  </svg>\n);\nconst {\n  account,\n  toast,\n  CHAIN_LIST,\n  multicallAddress,\n  dexConfig,\n  defaultDex,\n  curChain,\n  isChainSupported,\n  onSwitchChain,\n  addAction,\n  connectProps,\n  prices,\n  chainIdNotSupport,\n  tab,\n} = props;\nconsole.log(\"PROPS--\", props);\n\nconst formatFiat = (value) => {\n  const number = Number(value).toLocaleString(\"en\", {\n    currency: \"USD\",\n    style: \"currency\",\n    compactDisplay: \"short\",\n    notation: \"compact\",\n    maximumFractionDigits: 2,\n  });\n  return number;\n};\n\nconst formatPercent = (value) => {\n  return `${Number(value * 100).toLocaleString(\"en\", {\n    maximumFractionDigits: 2,\n  })}%`;\n};\nuseEffect(() => {\n  State.update({\n    loading: !chainIdNotSupport,\n  });\n}, [chainIdNotSupport]);\nif (!account || !isChainSupported) {\n  return (\n    <Widget\n      src=\"bluebiu.near/widget/Swap.ChainWarnigBox\"\n      props={{\n        chain: curChain,\n        onSwitchChain: onSwitchChain,\n        switchingChain: switchingChain,\n        theme: dexConfig.theme?.button,\n      }}\n    />\n  );\n}\n\nconst { pairs, addresses, ICON_VAULT_MAP } = dexConfig;\n\nfunction handleChangeDataIndex(index) {\n  state.dataIndex === index\n    ? State.update({\n        dataIndex: -1,\n      })\n    : State.update({\n        dataIndex: index,\n      });\n}\n\nfunction handleChangeChainIndex(index) {\n  const chain = CHAIN_LIST[index];\n  onSwitchChain({\n    chainId: `0x${Number(chain.chain_id).toString(16)}`,\n  });\n}\nfunction handleSearchInput(event) {\n  State.update({\n    token: event.target.value,\n  });\n}\n\nuseEffect(() => {\n  const index = CHAIN_LIST.findIndex((chain) => chain.id === curChain.id);\n\n  if (index > -1) {\n    State.update({\n      chainIndex: index,\n\n      dataList: [],\n      userPositions: null,\n    });\n  }\n}, [curChain]);\nconst columnList = [\n  {\n    width: \"25%\",\n    key: \"pool\",\n    label: \"Pool\",\n    type: \"slot\",\n    render: (data) => {\n      let _res;\n      if (tab === \"LP\") {\n        _res = (\n          <>\n            <StyledVaultImage>\n              <img\n                style={{ marginRight: -6 }}\n                src={ICON_VAULT_MAP[data.token0]}\n                alt={data.token0}\n              />\n              <img src={ICON_VAULT_MAP[data.token1]} alt={data.token1} />\n            </StyledVaultImage>\n            <TdTxt>\n              {data.token0} / {data.token1}\n            </TdTxt>\n            <PoolPercentage>{data.fee}%</PoolPercentage>\n          </>\n        );\n      }\n      if (tab === \"MANAGED\")\n        _res = (\n          <>\n            <StyledVaultImage>\n              <img\n                // style={{ marginRight: -6 }}\n                src={ICON_VAULT_MAP[data.token0]}\n                alt={data.token0}\n              />\n            </StyledVaultImage>\n            <TdTxt>{data.name}</TdTxt>\n          </>\n        );\n      return _res;\n    },\n  },\n  {\n    width: \"10%\",\n    key: \"chain\",\n    label: \"Chain\",\n    type: \"slot\",\n    render: () => (\n      <img style={{ width: 26 }} src={curChain.logo} alt={curChain.name} />\n    ),\n  },\n  {\n    width: \"15%\",\n    key: \"strategy\",\n    label: \"AMM\",\n    type: \"slot\",\n    render: (data) => {\n      return <StrategyTxt>{data.strategy}</StrategyTxt>;\n    },\n  },\n  {\n    width: \"15%\",\n    key: \"AUM\",\n    label: \"AUM\",\n    type: \"slot\",\n    render: (data) => {\n      return <TdTxt>{formatFiat(data.AUM)}</TdTxt>;\n    },\n  },\n  {\n    width: \"15%\",\n    key: \"APR\",\n    label: \"APR\",\n    type: \"slot\",\n    render: (data) => {\n      return (\n        <StyledDashedUndeline>\n          <TdTxt>{data.APR}%</TdTxt>\n        </StyledDashedUndeline>\n      );\n    },\n  },\n  {\n    width: \"15%\",\n    direction: \"column\",\n    key: \"liquidity\",\n    label: \"Your Shares\",\n    type: \"slot\",\n    render: (data, index) => {\n      return (\n        <div>\n          <TdTxt>\n            {data.token0Value > 0 || data.token1Value > 0\n              ? `${Big(data.token0Value || 0)\n                  .plus(data.token1Value || 0)\n                  .toFixed(2)} $`\n              : \"\"}\n\n            {/* {Big(userBalance ?? 0).gt(0) ? `${formatFiat(userBalance)}` : \"-\"} */}\n          </TdTxt>\n          {Big(data?.shares ?? 0).gt(0) && (\n            <TdTxt className=\"gray\">\n              {Big(data?.shares ?? 0).lt(0.01)\n                ? \"<0.01\"\n                : Big(data?.shares).toFixed(4)}\n            </TdTxt>\n          )}\n          <SvgIcon\n            className={[\n              \"icon-right\",\n              index === state.dataIndex ? \"rotate\" : \"\",\n            ]}\n          >\n            {IconRight}\n          </SvgIcon>\n        </div>\n      );\n    },\n  },\n];\nuseEffect(() => {\n  State.update({\n    loading: true,\n  });\n}, [tab]);\n\nconsole.log(\"dataList---\", state.dataList, \"tab--\", tab);\nreturn (\n  <Column>\n    {tab === \"LP\" && (\n      <Widget\n        src={\"bluebiu.near/widget/Staking.Teahouse.LPData\"}\n        props={{\n          ...props,\n          ...dexConfig,\n\n          update: state.loading,\n          onLoad: (data) => {\n            State.update({\n              dataList: data.dataList,\n              loading: false,\n            });\n          },\n        }}\n      />\n    )}\n    {tab === \"MANAGED\" && (\n      <Widget\n        src={\"bluebiu.near/widget/Staking.Teahouse.ManagedData\"}\n        props={{\n          ...props,\n          ...dexConfig,\n          update: state.loading,\n          onLoad: (data) => {\n            State.update({\n              dataList: data.dataList,\n              loading: false,\n            });\n          },\n        }}\n      />\n    )}\n    {state.loading ? (\n      <Widget src=\"bluebiu.near/widget/0vix.LendingSpinner\" />\n    ) : (\n      <Widget\n        src={\"bluebiu.near/widget/Staking.Teahouse.List\"}\n        props={{\n          ...props,\n          ...dexConfig,\n\n          // dataList: state.filterList,\n          dataList: state.dataList,\n          dataIndex: state.dataIndex,\n          onChangeDataIndex: handleChangeDataIndex,\n          userPositions: state.userPositions,\n          columnList,\n          onSuccess: () => {\n            State.update({\n              loading: true,\n            });\n          },\n        }}\n      />\n    )}\n    {!isChainSupported && (\n      <Widget\n        src=\"bluebiu.near/widget/Swap.ChainWarnigBox\"\n        props={{\n          chain: curChain,\n          onSwitchChain: onSwitchChain,\n          switchingChain: switchingChain,\n          theme: dexConfig.theme?.button,\n        }}\n      />\n    )}\n  </Column>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bluebiu.near/widget/Staking.Teahouse.Content", "fact_widget_deployments_id": "ea2e48039bd19ce4f580acdaf1ebce08", "inserted_timestamp": "2024-06-14T10:54:59.940Z", "modified_timestamp": "2024-06-14T10:54:59.940Z", "__row_index": 0}