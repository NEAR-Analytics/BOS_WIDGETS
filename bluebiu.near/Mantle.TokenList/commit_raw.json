{"tx_hash": "Hf77YKtvdqkeDNR1TND8wrJ2yJ7AxPDi1BZ6tWcAorEr", "action_id_social": "FnK1LosC3oKktxkQnJPDJL6dTN4RdJuRg4L3AFYAEntQ-0-widget", "block_id": 100310194, "block_timestamp": "2023-09-03T15:17:59.781Z", "signer_id": "bluebiu.near", "widget_name": "Mantle.TokenList", "source_code": "const { config, sender, curToken, onClose, hidden, selectedDex } = props;\n\nconst title = \"Select a token\";\nconst network = config.MAINTLE_NAME;\nconst assets = config.tokens;\n\nState.init({\n  searchBy: \"\",\n});\n\nconst Modal = styled.div`\n  display: flex;\n  position: fixed;\n  inset: 0;\n  justify-content: center;\n  align-items: center;\n  opacity: 1;\n  z-index: 1;\n  color: rgb(90, 90, 90);\n`;\n\nconst ModalContainer = styled.div`\n  width: 425px;\n  border-radius: 12px;\n  background: linear-gradient(0deg, #181a27, #181a27),\n    linear-gradient(0deg, #332c4b, #332c4b);\n\n  color: white;\n  padding-top: 16px;\n  z-index: 999;\n  position: fixed;\n  top: 15vh;\n  left: 50%;\n  transform: translateX(-50%);\n  padding-bottom: 8px;\n  border: 1px solid #2c4a4b;\n\n  padding: 20px 30px;\n`;\n\nconst ModalBackdrop = styled.div`\n  position: absolute;\n  inset: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  opacity: 0.4;\n`;\n\nconst ModalDialog = styled.div`\n  padding: 20px;\n  z-index: 3;\n  background-color: white;\n  border-radius: 20px;\n  width: 40%;\n`;\n\nconst ModalHeader = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: flex-start;\n`;\n\nconst CloseButton = styled.div`\n  border: 0;\n  color: white;\n\n  cursor: pointer;\n`;\n\nconst containsSearchBy = (assetData) => {\n  return (\n    !assetData ||\n    state.searchBy === \"\" ||\n    assetData?.symbol.toLowerCase().includes(state.searchBy.toLowerCase())\n  );\n};\n\nconst assetList = assets\n  .filter(\n    (token) => token.onDexes.includes(selectedDex) && containsSearchBy(token)\n  )\n  .map((token) => {\n    return (\n      <Widget\n        src=\"bluebiu.near/widget/Mantle.TokenItem\"\n        props={{\n          currency: token,\n          onClick: () => {\n            if (props.onClick) {\n              props.onClick(token);\n            }\n          },\n          selectedTokenAddress: curToken.address,\n          config,\n        }}\n      />\n    );\n  });\n\nconst inputOnChange = (e) => {\n  State.update({\n    searchBy: e.target.value,\n  });\n};\n\nconst Input = styled.input`\n  appearance: none;\n  outline: none;\n  width: 100%;\n  background: none;\n  border: none;\n  color: rgb(115, 129, 139);\n  padding: 8px 0px 8px 4px;\n\n  ::placeholder {\n    color: #7e8a93;\n  }\n`;\n\nconst body = (\n  <div\n    class=\"asset-search-container\"\n    style={{\n      borderBottom: \"1px solid #332c4b\",\n    }}\n  >\n    <Input\n      class=\"asset-search-input\"\n      placeholder=\"Search name\" //  or paste address\n      onChange={inputOnChange}\n      value={state.searchBy}\n    />\n  </div>\n);\n\nif (hidden) {\n  return <div />;\n}\n\nreturn (\n  <Modal>\n    <ModalContainer>\n      <ModalHeader>\n        <div class=\"asset-list-header\">{title}</div>\n        <CloseButton onClick={onClose}>\n          <svg\n            width=\"20\"\n            height=\"20\"\n            viewBox=\"0 0 20 20\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              d=\"M15.5 5L5.5 15M5.5 5L15.5 15\"\n              stroke=\"currentColor\"\n              stroke-width=\"1.66667\"\n              stroke-linecap=\"round\"\n              stroke-linejoin=\"round\"\n            />\n          </svg>\n        </CloseButton>\n      </ModalHeader>\n      <div>\n        {body}\n        <div class=\"asset-list-scroll\">\n          <div class=\"asset-list-container\">{assetList}</div>\n        </div>\n      </div>\n    </ModalContainer>\n  </Modal>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bluebiu.near/widget/Mantle.TokenList", "fact_widget_deployments_id": "1d3b1dc0d0163773e3f79ec422e7887a", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}