{"tx_hash": "APgEjBubyMEw7nB4dyFkoyJvbGxZ3MzjmazYx6vYDMAc", "action_id_social": "GVkRh5BzejAgUVPUidr6xXAt8u3niQpM4ysZ2hGzfjoz-0-widget", "block_id": 114559709, "block_timestamp": "2024-03-12T07:27:12.385Z", "signer_id": "bluebiu.near", "widget_name": "Lending.RewardClaim.Venus", "source_code": "const CLAIM_ABI = [\n  {\n    constant: false,\n    inputs: [{ internalType: \"address\", name: \"holder\", type: \"address\" }],\n    name: \"claimVenus\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\nconst account = Ethers.send(\"eth_requestAccounts\", [])[0];\nconst { loading, market, dapp, record, onSuccess, onError } = props;\n\nif (!loading || !dapp.unitrollerAddress) return \"\";\n\nconst CollateralContract = new ethers.Contract(\n  dapp.unitrollerAddress,\n  CLAIM_ABI,\n  Ethers.provider().getSigner()\n);\n\nCollateralContract.estimateGas\n  .claimVenus(account)\n  .then((gas) => {\n    CollateralContract.claimVenus(account, { gasLimit: gas })\n      .then((tx) => {\n        tx.wait().then((res) => {\n          onSuccess(res);\n        });\n      })\n      .catch((err) => {\n        onError(err);\n      });\n  })\n  .catch((err) => {\n    onError(err);\n  });\n\nreturn \"\";\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bluebiu.near/widget/Lending.RewardClaim.Venus", "fact_widget_deployments_id": "b9e40692391d92f67977aa2856a635c0", "inserted_timestamp": "2024-03-12T08:26:34.783Z", "modified_timestamp": "2024-03-12T09:36:53.737Z", "__row_index": 1}