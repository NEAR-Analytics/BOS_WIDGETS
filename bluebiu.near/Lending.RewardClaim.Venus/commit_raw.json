{"tx_hash": "5ALAQWKPhvNqfX1jiavLtRgh7JpSv5NDzuCLYEKdLSR7", "action_id_social": "Ar944dDtorSFeV8D6znQMh5oB6cWvHxcRD5p3JkLNWJe-0-widget", "block_id": 114492418, "block_timestamp": "2024-03-11T02:03:06.624Z", "signer_id": "bluebiu.near", "widget_name": "Lending.RewardClaim.Venus", "source_code": "const CLAIM_ABI = [\n  {\n    constant: false,\n    inputs: [\n      { internalType: \"address\", name: \"holder\", type: \"address\" },\n      {\n        internalType: \"contract VToken[]\",\n        name: \"vTokens\",\n        type: \"address[]\",\n      },\n    ],\n    name: \"claimVenus\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\nconst account = Ethers.send(\"eth_requestAccounts\", [])[0];\nconst { loading, market, dapp, record, onSuccess, onError } = props;\n\nif (!loading || !dapp.unitrollerAddress) return \"\";\n\nconst CollateralContract = new ethers.Contract(\n  dapp.unitrollerAddress,\n  CLAIM_ABI,\n  Ethers.provider().getSigner()\n);\n\nCollateralContract.claimVenus(account, [record.address])\n  .then((tx) => {\n    tx.wait().then((res) => {\n      onSuccess(res);\n    });\n  })\n  .catch((err) => {\n    onError(err);\n  });\n\nreturn \"\";\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bluebiu.near/widget/Lending.RewardClaim.Venus", "fact_widget_deployments_id": "1bc6751ca75ee17319b6715aa0b5b767", "inserted_timestamp": "2024-03-11T03:26:50.096Z", "modified_timestamp": "2024-03-11T03:26:50.096Z", "__row_index": 0}