{"tx_hash": "HnMT6kfX4YLbvEBwMtjNzwGe9uvz7A646CV5FLxs8v6k", "action_id_social": "7fAAF1yzqZ6BV9XSHoyjizaWWXcfV2TqUde8rngcT85P-0-widget", "block_id": 106869627, "block_timestamp": "2023-11-30T13:37:31.361Z", "signer_id": "bluebiu.near", "widget_name": "Arbitrum.Pendle.DashBoard.UserDashBoard", "source_code": "const UserDashBoard = styled.div`\n  color: #ffffff;\n  .special-rewards-btn {\n    display: none;\n  }\n  table {\n    width: 100%;\n    tr th {\n      padding: 10px 0;\n      border-bottom: 1px solid rgba(44, 51, 75, 1);\n      font-family: Gantari;\n      font-size: 14px;\n      font-weight: 400;\n      line-height: 17px;\n      letter-spacing: 0em;\n      text-align: left;\n      color: rgba(151, 154, 190, 1);\n    }\n    tr td {\n      padding: 16px 0;\n      font-family: Gantari;\n      font-size: 16px;\n      font-weight: 400;\n      letter-spacing: 0em;\n      text-align: left;\n      color: rgba(255, 255, 255, 1);\n      p {\n        margin: 0;\n      }\n      span {\n        font-family: Gantari;\n        font-size: 12px;\n        font-weight: 400;\n        letter-spacing: 0em;\n        text-align: left;\n        color: #797a84;\n        display: block;\n        margin-top: 0;\n      }\n    }\n    tr .td-proName {\n      display: flex;\n      img {\n        width: 36px;\n        height: 36px;\n        margin-right: 8px;\n      }\n      .td-proName-text {\n        display: inline-block;\n        p {\n          font-family: Gantari;\n          font-size: 16px;\n          font-weight: 700;\n          letter-spacing: 0em;\n          text-align: left;\n          margin: 0;\n        }\n        span {\n          font-family: Gantari;\n          font-size: 12px;\n          font-weight: 400;\n          letter-spacing: 0em;\n          text-align: left;\n          color: #797a84;\n          display: block;\n          margin-top: 0;\n        }\n      }\n    }\n  }\n  .userDashBoard-content-list {\n    display: none;\n  }\n  .light-value {\n    font-size: 16px;\n    line-height: 19px;\n    letter-spacing: 0em;\n    text-align: left;\n    text-decoration: none;\n    color: white !important;\n  }\n  .gray-value {\n    font-size: 12px;\n    line-height: 14px;\n    letter-spacing: 0em;\n    text-align: left;\n    opacity: 0.5;\n    text-decoration: none;\n    color: white !important;\n  }\n  @media (max-width: 900px) {\n    .special-rewards-btn {\n      display: block;\n      width: 100%;\n      background: #4982ff;\n      padding: 8px 14px;\n      font-family: Gantari;\n      font-size: 12px;\n      font-weight: 400;\n      border-radius: 6px;\n      color: #ffffff;\n      text-align: center;\n      align-items: center;\n      cursor: pointer;\n      margin-bottom: 16px;\n      p {\n        margin: 0;\n      }\n    }\n    .userDashBoard-content {\n      .userDashBoard-content-table {\n        display: none;\n      }\n      .userDashBoard-content-list {\n        display: block;\n        .content-list-item {\n          background: linear-gradient(0deg, #181a27, #181a27),\n            linear-gradient(0deg, #2c334b, #2c334b);\n          padding: 10px 10px 20px;\n          border-radius: 10px;\n          border: 1px solid rgb(44, 51, 75);\n          margin-bottom: 20px;\n          .list-item-title {\n            padding-bottom: 10px;\n            border-bottom: 1px solid rgb(44, 51, 75);\n            margin-bottom: 15px;\n            display: flex;\n            -webkit-box-align: center;\n            align-items: center;\n            gap: 6px;\n            position: relative;\n            width: 100%;\n            img {\n              width: 36px;\n              height: 36px;\n              border-radius: 100%;\n              margin-right: 8px;\n            }\n            .light-value {\n              font-size: 16px;\n              line-height: 19px;\n              letter-spacing: 0em;\n              text-align: left;\n              text-decoration: none;\n              color: white !important;\n            }\n            .gray-value {\n              font-size: 12px;\n              line-height: 14px;\n              letter-spacing: 0em;\n              text-align: left;\n              opacity: 0.5;\n              text-decoration: none;\n              color: white !important;\n            }\n            .item-title-right {\n              position: absolute;\n              right: 0;\n              top: 0;\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst List = styled.div`\n  display: flex;\n  margin-bottom: 24px;\n`;\n\nconst Item = styled.div`\n  font-family: Gantari;\n  margin-right: 10%;\n  p {\n    font-size: 14px;\n    font-weight: 400;\n    color: #979abe;\n  }\n  h1 {\n    font-size: 20px;\n    font-weight: 700;\n    color: #ffffff;\n  }\n  .claim-rewards-btn {\n    background: #4982ff;\n    padding: 8px 14px;\n    font-family: Gantari;\n    font-size: 12px;\n    font-weight: 400;\n    border-radius: 6px;\n    color: #ffffff;\n    display: inline-block;\n    margin-left: 12px;\n    cursor: pointer;\n  }\n  @media (max-width: 900px) {\n    flex: 1;\n    .claim-rewards-btn {\n      display: none;\n    }\n  }\n`;\nconst Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.6);\n  z-index: 999;\n`;\nconst ClaimRewards = styled.div`\n  position: fixed;\n  top: 45%;\n  left: 50%;\n  height: 70vh;\n  overflow: auto;\n  transform: translate(-45%, -50%);\n  width: 45%;\n  border: 1px solid #2c334b;\n  background: linear-gradient(0deg, #181a27, #181a27),\n    linear-gradient(0deg, #2c334b, #2c334b);\n  z-index: 1000;\n  border-radius: 6px;\n  padding: 24px;\n  .rewards-title {\n    display: flex;\n    justify-content: space-between;\n    margin-bottom: 12px;\n    h1 {\n      font-family: Gantari;\n      font-size: 18px;\n      font-weight: 500;\n      img {\n        cursor: pointer;\n      }\n    }\n  }\n  .rewards-content {\n    .rewards-content-table {\n      table {\n        border-collapse: separate;\n        border-spacing: 0 10px;\n        tr td {\n          padding: 10px;\n          .td-type {\n            width: min-content;\n            border: 1px solid;\n            padding: 0 12px;\n            border-radius: 9px;\n            font-size: 12px;\n          }\n        }\n        tr td:first-child {\n          border-top-left-radius: 10px;\n          border-bottom-left-radius: 10px;\n        }\n\n        tr td:last-child {\n          border-top-right-radius: 10px;\n          border-bottom-right-radius: 10px;\n        }\n        .checkbox {\n          background-color: transparent;\n        }\n      }\n      .rewards-content-list {\n        display: none;\n      }\n    }\n    .rewards-content-list {\n      display: none;\n    }\n  }\n  .rewards-side {\n    border: 1px solid rgba(66, 74, 102, 1);\n    width: 100%;\n    height: 1px;\n    margin: 12px 0;\n  }\n  .rewards-list {\n    display: flex;\n    justify-content: space-between;\n    img {\n      width: 18px;\n      height: 18px;\n    }\n  }\n  .rewards-btn {\n    cursor: pointer;\n    width: 138px;\n    height: 50px;\n    text-align: center;\n    border-radius: 10px;\n    line-height: 50px;\n    border-radius: 10px;\n    font-size: 18px;\n    color: #ffffff;\n    background: rgba(73, 130, 255, 1);\n  }\n  .mobile-btn {\n    display: none;\n  }\n  @media (max-width: 900px) {\n    position: fixed;\n    bottom: 0;\n    left: 0;\n    transform: none;\n    width: 100%;\n    background: rgba(35, 42, 61, 1);\n    .rewards-content {\n      .rewards-content-table {\n        display: none;\n      }\n      .rewards-content-list {\n        display: block;\n        .content-list-title {\n          display: flex;\n          margin-bottom: 14px;\n          p {\n            margin: 0 0 0 14px;\n          }\n        }\n        .content-list-item {\n          display: flex;\n          .list-item-page {\n            width: 100%;\n            margin: 0 14px 14px 14px;\n            background: linear-gradient(0deg, #181a27, #181a27),\n              linear-gradient(0deg, #2c334b, #2c334b);\n            border-radius: 10px;\n            padding: 14px 16px;\n            .item-page-title {\n              margin: 0 0 14px 0;\n              position: relative;\n              .page-title-right {\n                position: absolute;\n                right: 0;\n                top: 0;\n                width: min-content;\n                border: 1px solid;\n                padding: 0 12px;\n                border-radius: 9px;\n                font-size: 12px;\n              }\n            }\n          }\n        }\n      }\n    }\n    .rewards-btn {\n      display: none;\n    }\n    .mobile-btn {\n      display: block;\n      width: 100%;\n      margin-top: 16px;\n      margin-bottom: 100px;\n    }\n  }\n`;\n\nconst Term = styled.div`\n  display: flex;\n  -webkit-box-pack: justify;\n  justify-content: space-between;\n  padding-bottom: 10px;\n  width: 100%;\n  .lable {\n    font-size: 13px;\n    line-height: 15.6px;\n    color: rgb(151, 154, 190);\n  }\n`;\n\nconst closeIcon =\n  \"https://ipfs.near.social/ipfs/bafkreih3abysbho4sd4rkxbpzbl4yyi37phzb7jja33vrhkoufmrxqenpi\";\n\nconst { listData, allAssetsData } = state;\n\nconst { markets, sender, chainId } = props;\n\nconst CHAIN_ID = 42161;\n\nconst theme = {\n  textColor: \"#7794D3\",\n  buttonColor: \"#33549C\",\n};\n\nconst CONNECT_PROPS = {\n  imgProps: {\n    src: \"https://ipfs.near.social/ipfs/bafkreiawjxeh46j7c63vvqpg2t3juh4pdlhk6iic4dkqlpsjq3loqarooa\",\n    style: {\n      width: \"434px\",\n      height: \"176px\",\n      marginTop: \"80px\",\n    },\n  },\n  noAccountTips: \"Pendle\",\n  wrongNetworkTips: \"To proceed, kindly switch to Arbitrum One Chain.\",\n  chainId: CHAIN_ID,\n  chainName: \"Arbitrum One\",\n};\n\nconst Container = styled.div`\n  --text-color: #7794d3;\n  --button-color: #33549c;\n  --border-color: #2c334b;\n  --input-border-color: #2c334b;\n  --input-select-bg-color: #222436;\n  --secondary-text-color: #7794d3;\n  --thirdary-text-color: #4f5375;\n  --dex-active-text-color: #fff;\n  --button-text-color: #fff;\n  --dex-hover-bg-color: rgba(51, 84, 156, 0.1);\n`;\n\nif (chainId !== CHAIN_ID) {\n  return (\n    <Container>\n      <Widget\n        src=\"bluebiu.near/widget/Arbitrum.Swap.ConnectButton\"\n        props={{\n          ...CONNECT_PROPS,\n          theme,\n          isWrongNetwork: true,\n        }}\n      />\n    </Container>\n  );\n}\n\nconst fetchPoolsData = () => {\n  asyncFetch(\n    \"https://api-v2.pendle.finance/core/v1/\" +\n      CHAIN_ID +\n      \"/users/\" +\n      props.sender +\n      \"/positions\"\n  ).then((res) => {\n    if (!res.ok) return;\n    State.update({\n      listData: res.body.positions,\n    });\n  });\n};\n\nconst allPrice = async () => {\n  asyncFetch(\"https://api-v2.pendle.finance/core/v1/42161/assets/all\").then(\n    (res) => {\n      if (!res.ok) return;\n      State.update({\n        allAssetsData: res.body,\n      });\n    }\n  );\n};\n\nconst startDataFetching = () => {\n  fetchPoolsData();\n  allPrice();\n};\n\nstartDataFetching();\n\n// const interval = 5000;\n// const timerId = setInterval(startDataFetching, interval);\n\nfunction formatDate(dateString) {\n  const dateObj = new Date(dateString);\n  const options = { day: \"2-digit\", month: \"short\", year: \"numeric\" };\n  const formattedDate = dateObj.toLocaleDateString(\"en-US\", options);\n  const [month, day, year] = formattedDate.split(\" \");\n  const formattedMonth = month.charAt(0).toUpperCase() + month.slice(1);\n  return `${day.replace(\",\", \"\")} ${formattedMonth} ${year}`;\n}\n\nfunction calculateDaysToExpiry(expiry) {\n  const expiryDate = new Date(expiry);\n  const currentDate = new Date();\n  const timeDifference = expiryDate.getTime() - currentDate.getTime();\n  const daysDifference = Math.ceil(timeDifference / (1000 * 60 * 60 * 24));\n  return daysDifference;\n}\n\nState.init({\n  unclaimedRewardsPool: \"\",\n  unclaimedRewardsSY: \"\",\n  unclaimedRewardsPy: \"\",\n  showClaimRewards: false,\n  claimList: [],\n});\n\nconst chickClaimPopup = () => {\n  State.update({ showClaimRewards: true });\n};\n\nconst closeClaimPopup = () => {\n  State.update({ showClaimRewards: false });\n};\n\nfunction getColorByType(types) {\n  switch (types) {\n    case \"YT\":\n      return \"#75AFF5\";\n    case \"SY\":\n      return \"#17DFBA\";\n    default:\n      return \"#ffffff\";\n  }\n}\n\nfunction handleCheckBox(checked, type, address) {\n  if (!state.claimList) return;\n\n  if (!checked) {\n    const curList = state.claimList;\n\n    const index = curList.findIndex((item) => item.address === address);\n    if (index > -1) {\n      curList.splice(index, 1);\n      State.update({ claimList: curList });\n    }\n  } else {\n    const newList = [...state.claimList, { type, address }];\n    State.update({\n      claimList: newList,\n    });\n  }\n}\n\nreturn (\n  <UserDashBoard>\n    <List>\n      <Item>\n        <p>My Total Position Value</p>\n        <h1>\n          {state.listData.length > 0\n            ? `$${state.listData\n                .reduce(\n                  (total, data) => total + parseFloat(data.positionValue),\n                  0\n                )\n                .toFixed(2)}`\n            : \"$ -\"}\n        </h1>\n      </Item>\n      <Item>\n        <p>Claimable Rewards</p>\n        <h1>\n          {state.unclaimedRewardsPool < 0.01\n            ? \"<$0.01\"\n            : `$${(\n                state.unclaimedRewardsPool +\n                state.unclaimedRewardsSY +\n                state.unclaimedRewardsPy\n              ).toFixed(2)}`}\n          <p className=\"claim-rewards-btn\" onClick={chickClaimPopup}>\n            Claim Yield $ Rewards\n          </p>\n        </h1>\n      </Item>\n      {state.showClaimRewards && (\n        <>\n          <Overlay />\n          <ClaimRewards>\n            <div className=\"rewards-title\">\n              <h1>Claim Earnings</h1>\n              <img src={closeIcon} alt=\"\" onClick={closeClaimPopup} />\n            </div>\n            <div className=\"rewards-content\">\n              <div className=\"rewards-content-table\">\n                <table>\n                  <thead>\n                    <tr>\n                      <th>\n                        <input type=\"checkbox\" className=\"checkbox\" />\n                      </th>\n                      <th>Position</th>\n                      <th>Type</th>\n                      <th>Token</th>\n                      <th>Claimable</th>\n                      <th>Value</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {state.listData === undefined ? (\n                      <tr>\n                        <td>Loading...</td>\n                      </tr>\n                    ) : (\n                      state.listData\n                        .filter(\n                          (item) =>\n                            !(\n                              item.asset.types &&\n                              item.asset.types.includes(\"PT\")\n                            )\n                        )\n                        .map((item, index) => (\n                          <tr\n                            key={index}\n                            style={{\n                              backgroundColor: \"rgba(43, 46, 65, 1)\",\n                              borderRadius: \"6px\",\n                            }}\n                          >\n                            <td>\n                              <input\n                                type=\"checkbox\"\n                                className=\"checkbox\"\n                                onChange={(e) => {\n                                  console.log(\"echeck: \", e);\n                                  handleCheckBox(\n                                    e.target.checked,\n                                    item.asset.types[0],\n                                    item.asset.address\n                                  );\n                                }}\n                              />\n                            </td>\n                            <td>\n                              <p style={{ color: item.asset.accentColor }}>\n                                {item.asset.proName}\n                                {item.asset.expiry !== null && (\n                                  <>( {formatDate(item.asset.expiry)} )</>\n                                )}\n                              </p>\n                              <span>{item.asset.protocol}</span>\n                            </td>\n                            <td>\n                              <div content={item.asset.types.join(\", \")}>\n                                {item.asset.types.map((type, index) => (\n                                  <div\n                                    className=\"td-type\"\n                                    key={index}\n                                    style={{\n                                      color: getColorByType(type),\n                                      borderColor: getColorByType(type),\n                                    }}\n                                  >\n                                    {type}\n                                  </div>\n                                ))}\n                              </div>\n                            </td>\n                            <td>\n                              {item.asset.types &&\n                              item.asset.types.includes(\"PENDLE_LP\") ? (\n                                <Widget\n                                  src=\"bluebiu.near/widget/Arbitrum.Pendle.DashBoard.BoardPoolAmount\"\n                                  props={{\n                                    marketAddress: item.asset.address,\n                                    user: props.sender,\n                                    allAssetsData: state.allAssetsData,\n                                    onLoad: (unclaimedRewardsPool) =>\n                                      State.update({ unclaimedRewardsPool }),\n                                  }}\n                                />\n                              ) : null}\n                              {item.asset.types &&\n                              item.asset.types.includes(\"SY\") ? (\n                                <Widget\n                                  src=\"bluebiu.near/widget/Arbitrum.Pendle.DashBoard.BoardSyAmount\"\n                                  props={{\n                                    marketAddress: item.asset.address,\n                                    user: props.sender,\n                                    allAssetsData: state.allAssetsData,\n                                    onLoad: (unclaimedRewardsSY) =>\n                                      State.update({ unclaimedRewardsSY }),\n                                  }}\n                                />\n                              ) : null}\n                              {item.asset.types &&\n                              item.asset.types.includes(\"PT\") ? (\n                                <>-</>\n                              ) : null}\n                              {item.asset.types &&\n                              item.asset.types.includes(\"YT\") ? (\n                                <Widget\n                                  src=\"bluebiu.near/widget/Arbitrum.Pendle.DashBoard.BoardPyAmount\"\n                                  props={{\n                                    marketAddress: item.asset.address,\n                                    user: props.sender,\n                                    allAssetsData: state.allAssetsData,\n                                    onLoad: (unclaimedRewardsPy) =>\n                                      State.update({ unclaimedRewardsPy }),\n                                  }}\n                                />\n                              ) : null}\n                            </td>\n                            <td>\n                              {item.asset.types &&\n                              item.asset.types.includes(\"PENDLE_LP\") ? (\n                                <Widget\n                                  src=\"bluebiu.near/widget/Arbitrum.Pendle.DashBoard.BoardPoolAction\"\n                                  props={{\n                                    marketAddress: item.asset.address,\n                                    user: props.sender,\n                                    allAssetsData: state.allAssetsData,\n                                    onLoad: (unclaimedRewardsPool) =>\n                                      State.update({ unclaimedRewardsPool }),\n                                  }}\n                                />\n                              ) : null}\n                              {item.asset.types &&\n                              item.asset.types.includes(\"SY\") ? (\n                                <Widget\n                                  src=\"bluebiu.near/widget/Arbitrum.Pendle.DashBoard.BoardSyAction\"\n                                  props={{\n                                    marketAddress: item.asset.address,\n                                    user: props.sender,\n                                    allAssetsData: state.allAssetsData,\n                                    onLoad: (unclaimedRewardsSY) =>\n                                      State.update({ unclaimedRewardsSY }),\n                                  }}\n                                />\n                              ) : null}\n                              {item.asset.types &&\n                              item.asset.types.includes(\"PT\") ? (\n                                <>-</>\n                              ) : null}\n                              {item.asset.types &&\n                              item.asset.types.includes(\"YT\") ? (\n                                <Widget\n                                  src=\"bluebiu.near/widget/Arbitrum.Pendle.DashBoard.BoardPyAction\"\n                                  props={{\n                                    marketAddress: item.asset.address,\n                                    user: props.sender,\n                                    allAssetsData: state.allAssetsData,\n                                    onLoad: (unclaimedRewardsPy) =>\n                                      State.update({ unclaimedRewardsPy }),\n                                  }}\n                                />\n                              ) : null}\n                            </td>\n                            <td>\n                              {item.positionValue < 0.01\n                                ? \"<$0.01\"\n                                : `$${item.positionValue.toFixed(2)}`}\n                            </td>\n                          </tr>\n                        ))\n                    )}\n                  </tbody>\n                </table>\n              </div>\n              <div className=\"rewards-content-list\">\n                <div className=\"content-list-title\">\n                  <input type=\"checkbox\" className=\"checkbox\" />\n                  <p>Claim All</p>\n                </div>\n                {state.listData === undefined ? (\n                  <tr>\n                    <td>Loading...</td>\n                  </tr>\n                ) : (\n                  state.listData\n                    .filter(\n                      (item) =>\n                        !(item.asset.types && item.asset.types.includes(\"PT\"))\n                    )\n                    .map((item, index) => (\n                      <div key={index} className=\"content-list-item\">\n                        <div>\n                          <input type=\"checkbox\" className=\"checkbox\" />\n                        </div>\n                        <div className=\"list-item-page\">\n                          <div className=\"item-page-title\">\n                            <div\n                              className=\"light-value\"\n                              style={{ color: item.asset.accentColor }}\n                            >\n                              {item.asset.proName}\n                              {item.asset.expiry !== null && (\n                                <>( {formatDate(item.asset.expiry)} )</>\n                              )}\n                            </div>\n                            <div className=\"gray-value\">\n                              {item.asset.protocol}\n                            </div>\n                            <div content={item.asset.types.join(\", \")}>\n                              {item.asset.types.map((type, index) => (\n                                <div\n                                  className=\"page-title-right\"\n                                  key={index}\n                                  style={{\n                                    color: getColorByType(type),\n                                    borderColor: getColorByType(type),\n                                  }}\n                                >\n                                  {type}\n                                </div>\n                              ))}\n                            </div>\n                          </div>\n                          <Term>\n                            <div className=\"lable\">Token</div>\n                            <div>\n                              <div className=\"light-value\">\n                                {item.asset.types &&\n                                item.asset.types.includes(\"PENDLE_LP\") ? (\n                                  <Widget\n                                    src=\"bluebiu.near/widget/Arbitrum.Pendle.DashBoard.BoardPoolAmount\"\n                                    props={{\n                                      marketAddress: item.asset.address,\n                                      user: props.sender,\n                                      onLoad: (unclaimedRewardsPool) =>\n                                        State.update({ unclaimedRewardsPool }),\n                                    }}\n                                  />\n                                ) : null}\n                                {item.asset.types &&\n                                item.asset.types.includes(\"SY\") ? (\n                                  <Widget\n                                    src=\"bluebiu.near/widget/Arbitrum.Pendle.DashBoard.BoardSyAmount\"\n                                    props={{\n                                      marketAddress: item.asset.address,\n                                      user: props.sender,\n                                      onLoad: (unclaimedRewardsSY) =>\n                                        State.update({ unclaimedRewardsSY }),\n                                    }}\n                                  />\n                                ) : null}\n                                {item.asset.types &&\n                                item.asset.types.includes(\"PT\") ? (\n                                  <>-</>\n                                ) : null}\n                                {item.asset.types &&\n                                item.asset.types.includes(\"YT\") ? (\n                                  <Widget\n                                    src=\"bluebiu.near/widget/Arbitrum.Pendle.DashBoard.BoardPyAmount\"\n                                    props={{\n                                      marketAddress: item.asset.address,\n                                      user: props.sender,\n                                      onLoad: (unclaimedRewardsPy) =>\n                                        State.update({ unclaimedRewardsPy }),\n                                    }}\n                                  />\n                                ) : null}\n                              </div>\n                            </div>\n                          </Term>\n                          <Term>\n                            <div className=\"lable\">Claimable</div>\n                            <div>\n                              <div className=\"light-value\">\n                                {item.asset.types &&\n                                item.asset.types.includes(\"PENDLE_LP\") ? (\n                                  <Widget\n                                    src=\"bluebiu.near/widget/Arbitrum.Pendle.DashBoard.BoardPoolAction\"\n                                    props={{\n                                      marketAddress: item.asset.address,\n                                      user: props.sender,\n                                      onLoad: (unclaimedRewardsPool) =>\n                                        State.update({ unclaimedRewardsPool }),\n                                    }}\n                                  />\n                                ) : null}\n                                {item.asset.types &&\n                                item.asset.types.includes(\"SY\") ? (\n                                  <Widget\n                                    src=\"bluebiu.near/widget/Arbitrum.Pendle.DashBoard.BoardSyAction\"\n                                    props={{\n                                      marketAddress: item.asset.address,\n                                      user: props.sender,\n                                      onLoad: (unclaimedRewardsSY) =>\n                                        State.update({ unclaimedRewardsSY }),\n                                    }}\n                                  />\n                                ) : null}\n                                {item.asset.types &&\n                                item.asset.types.includes(\"PT\") ? (\n                                  <>-</>\n                                ) : null}\n                                {item.asset.types &&\n                                item.asset.types.includes(\"YT\") ? (\n                                  <Widget\n                                    src=\"bluebiu.near/widget/Arbitrum.Pendle.DashBoard.BoardPyAction\"\n                                    props={{\n                                      marketAddress: item.asset.address,\n                                      user: props.sender,\n                                      onLoad: (unclaimedRewardsPy) =>\n                                        State.update({ unclaimedRewardsPy }),\n                                    }}\n                                  />\n                                ) : null}\n                              </div>\n                            </div>\n                          </Term>\n                          <Term>\n                            <div className=\"lable\">Value</div>\n                            <div>\n                              <div className=\"light-value\">\n                                {item.positionValue < 0.01\n                                  ? \"<$0.01\"\n                                  : `$${item.positionValue.toFixed(2)}`}\n                              </div>\n                            </div>\n                          </Term>\n                        </div>\n                      </div>\n                    ))\n                )}\n              </div>\n            </div>\n            <div className=\"rewards-side\"></div>\n            <div className=\"rewards-list\">\n              <p>Total Claiming</p>\n              <span>\n                {state.unclaimedRewardsPool < 0.01\n                  ? \"<$0.01\"\n                  : `$${(\n                      state.unclaimedRewardsPool +\n                      state.unclaimedRewardsSY +\n                      state.unclaimedRewardsPy\n                    ).toFixed(2)}`}\n              </span>\n            </div>\n            <div className=\"rewards-list\">\n              <div>\n                <img\n                  src=\"https://ipfs.near.social/ipfs/bafkreia52ha24zj4dfird5zidj73fbbhpchsrzi6xwtxx55bvwntr5venq\"\n                  alt=\"\"\n                />\n                Max Gas Fee{\" \"}\n                {!state.gasCost ? \"-\" : `${state.gasCost} (${state.gasValue})`}\n              </div>\n              <div\n                className=\"rewards-btn\"\n                onClick={() => {\n                  if (state.claimList === 0 || state.gasCost) return;\n                  state.claimAction();\n                }}\n                style={{\n                  cursor:\n                    state.claimList.length > 0 ? \"pointer\" : \"not-allowed\",\n                }}\n              >\n                Claim\n              </div>\n            </div>\n            <div\n              className=\"rewards-btn mobile-btn\"\n              onClick={() => {\n                if (state.claimList === 0 || state.gasCost) return;\n                state.claimAction();\n              }}\n              style={{\n                cursor: state.claimList.length > 0 ? \"pointer\" : \"not-allowed\",\n              }}\n            >\n              Claim\n            </div>\n          </ClaimRewards>\n        </>\n      )}\n    </List>\n    <div\n      className=\"claim-rewards-btn special-rewards-btn\"\n      onClick={chickClaimPopup}\n    >\n      <p>Claim Yield $ Rewards</p>\n    </div>\n\n    <div className=\"userDashBoard-content\">\n      <div className=\"userDashBoard-content-table\">\n        <table>\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Maturity</th>\n              <th>Position Size</th>\n              <th>Position Value</th>\n              <th>Claimable Yield</th>\n            </tr>\n          </thead>\n          <tbody>\n            {state.listData === undefined ? (\n              <tr>\n                <td>Loading...</td>\n              </tr>\n            ) : (\n              state.listData.map((item, index) => (\n                <tr key={index}>\n                  <td className=\"td-proName\">\n                    <img src={item.asset.proIcon} alt=\"\" />\n                    <div className=\"td-proName-text\">\n                      <p style={{ color: item.asset.accentColor }}>\n                        {item.asset.proName}\n                      </p>\n                      <span>{item.asset.protocol}</span>\n                    </div>\n                  </td>\n                  <td>\n                    {item.asset.expiry === null ? (\n                      <>-</>\n                    ) : (\n                      <>\n                        <p>{formatDate(item.asset.expiry)}</p>\n                        <span>\n                          {calculateDaysToExpiry(item.asset.expiry)} days\n                        </span>\n                      </>\n                    )}\n                  </td>\n                  <td>\n                    {item.positionSize}\n                    {item.asset.proSymbol}\n                  </td>\n                  <td>\n                    {item.positionValue < 0.01\n                      ? \"<$0.01\"\n                      : `$${item.positionValue.toFixed(2)}`}\n                  </td>\n                  <td>\n                    {item.asset.types &&\n                    item.asset.types.includes(\"PENDLE_LP\") ? (\n                      <Widget\n                        src=\"bluebiu.near/widget/Arbitrum.Pendle.DashBoard.BoardPoolAction\"\n                        props={{\n                          marketAddress: item.asset.address,\n                          user: props.sender,\n                          allAssetsData: state.allAssetsData,\n                          onLoad: (unclaimedRewardsPool) =>\n                            State.update({ unclaimedRewardsPool }),\n                        }}\n                      />\n                    ) : null}\n                    {item.asset.types && item.asset.types.includes(\"SY\") ? (\n                      <Widget\n                        src=\"bluebiu.near/widget/Arbitrum.Pendle.DashBoard.BoardSyAction\"\n                        props={{\n                          marketAddress: item.asset.address,\n                          user: props.sender,\n                          allAssetsData: state.allAssetsData,\n                          onLoad: (unclaimedRewardsSY) =>\n                            State.update({ unclaimedRewardsSY }),\n                        }}\n                      />\n                    ) : null}\n                    {item.asset.types && item.asset.types.includes(\"PT\") ? (\n                      <>-</>\n                    ) : null}\n                    {item.asset.types && item.asset.types.includes(\"YT\") ? (\n                      <Widget\n                        src=\"bluebiu.near/widget/Arbitrum.Pendle.DashBoard.BoardPyAction\"\n                        props={{\n                          marketAddress: item.asset.address,\n                          user: props.sender,\n                          allAssetsData: state.allAssetsData,\n                          onLoad: (unclaimedRewardsPy) =>\n                            State.update({ unclaimedRewardsPy }),\n                        }}\n                      />\n                    ) : null}\n                  </td>\n                </tr>\n              ))\n            )}\n          </tbody>\n        </table>\n      </div>\n      <div className=\"userDashBoard-content-list\">\n        {state.listData === undefined ? (\n          <p>Loading...</p>\n        ) : (\n          state.listData.map((item, index) => (\n            <div className=\"content-list-item\" key={index}>\n              <div className=\"list-item-title\">\n                <img src={item.asset.proIcon} alt=\"\" />\n                <div>\n                  <div\n                    className=\"light-value\"\n                    style={{ color: item.asset.accentColor }}\n                  >\n                    {item.asset.proName}\n                  </div>\n                  <div className=\"gray-value\">{item.asset.protocol}</div>\n                </div>\n                <div className=\"item-title-right\">\n                  {item.asset.expiry === null ? (\n                    <>-</>\n                  ) : (\n                    <>\n                      <div className=\"light-value\">\n                        {formatDate(item.asset.expiry)}\n                      </div>\n                      <div className=\"gray-value\">\n                        {calculateDaysToExpiry(item.asset.expiry)} days\n                      </div>\n                    </>\n                  )}\n                </div>\n              </div>\n              <Term>\n                <div className=\"lable\">Position Size</div>\n                <div>\n                  <div className=\"light-value\">\n                    {item.positionSize}\n                    {item.asset.proSymbol}\n                  </div>\n                </div>\n              </Term>\n              <Term>\n                <div className=\"lable\">Position Value</div>\n                <div>\n                  <div className=\"light-value\">\n                    {item.positionValue < 0.01\n                      ? \"<$0.01\"\n                      : `$${item.positionValue.toFixed(2)}`}\n                  </div>\n                </div>\n              </Term>\n              <Term>\n                <div className=\"lable\">Claimable Yield</div>\n                <div>\n                  <div className=\"light-value\">\n                    {item.asset.types &&\n                    item.asset.types.includes(\"PENDLE_LP\") ? (\n                      <Widget\n                        src=\"bluebiu.near/widget/Arbitrum.Pendle.DashBoard.BoardPoolAction\"\n                        props={{\n                          marketAddress: item.asset.address,\n                          user: props.sender,\n                          allAssetsData: state.allAssetsData,\n                          onLoad: (unclaimedRewardsPool) =>\n                            State.update({ unclaimedRewardsPool }),\n                        }}\n                      />\n                    ) : null}\n                    {item.asset.types && item.asset.types.includes(\"SY\") ? (\n                      <Widget\n                        src=\"bluebiu.near/widget/Arbitrum.Pendle.DashBoard.BoardSyAction\"\n                        props={{\n                          marketAddress: item.asset.address,\n                          user: props.sender,\n                          allAssetsData: state.allAssetsData,\n                          onLoad: (unclaimedRewardsSY) =>\n                            State.update({ unclaimedRewardsSY }),\n                        }}\n                      />\n                    ) : null}\n                    {item.asset.types && item.asset.types.includes(\"PT\") ? (\n                      <>-</>\n                    ) : null}\n                    {item.asset.types && item.asset.types.includes(\"YT\") ? (\n                      <Widget\n                        src=\"bluebiu.near/widget/Arbitrum.Pendle.DashBoard.BoardPyAction\"\n                        props={{\n                          marketAddress: item.asset.address,\n                          user: props.sender,\n                          allAssetsData: state.allAssetsData,\n                          onLoad: (unclaimedRewardsPy) =>\n                            State.update({ unclaimedRewardsPy }),\n                        }}\n                      />\n                    ) : null}\n                  </div>\n                </div>\n              </Term>\n            </div>\n          ))\n        )}\n      </div>\n    </div>\n\n    <Widget\n      src=\"bluebiu.near/widget/Arbitrum.Pendle.DashBoard.claim-all\"\n      props={{\n        claimList: state.claimList || [],\n        onLoadGas: ({ gasCost, gasValue }) => {\n          State.update({\n            gasCost,\n            gasValue,\n          });\n        },\n        sender,\n        onLoadFunc: (claimAction) => {\n          State.update({\n            claimAction,\n          });\n        },\n      }}\n    />\n  </UserDashBoard>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bluebiu.near/widget/Arbitrum.Pendle.DashBoard.UserDashBoard", "fact_widget_deployments_id": "a1aacbf79585c40dcfd76c4b99c87563", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}