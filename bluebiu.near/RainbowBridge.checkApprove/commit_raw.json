{"tx_hash": "552L5k6UhfAR6byptJrXCSXDQ8BGsfff9TMkU1m1W8eX", "action_id_social": "7FspVhBHj2wy8GYAuH3ehthjHKztdopf5BaC7e8Mh3oi-0-widget", "block_id": 99899856, "block_timestamp": "2023-08-29T03:38:01.156Z", "signer_id": "bluebiu.near", "widget_name": "RainbowBridge.checkApprove", "source_code": "const {\n  token,\n  config,\n  sender,\n  loadApprove,\n  amountIn,\n  isApprovedOut,\n  forceReload,\n  sourceBridge,\n} = props;\n\nconst Erc20Abi = [\n  {\n    constant: true,\n    inputs: [\n      {\n        name: \"_owner\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        name: \"balance\",\n        type: \"uint256\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: \"_owner\",\n        type: \"address\",\n      },\n      {\n        name: \"_spender\",\n        type: \"address\",\n      },\n    ],\n    name: \"allowance\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: \"_spender\",\n        type: \"address\",\n      },\n      {\n        name: \"_value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"approve\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nconst queryString = `${token.ethereum_address}-${token.near_address}-${isApprovedOut}-${forceReload}-${amountIn}`;\n\nState.init({\n  isApproved: true,\n});\n\nif (queryString !== state.cacheString) {\n  State.update({\n    cacheString: queryString,\n  });\n} else {\n  return <div></div>;\n}\n\nconst handleApprove = (amountIn, tokenIn) => {\n  TokenContract.approve(\n    config.ethLockerAddress,\n    ethers.utils.parseUnits(amountIn, tokenIn.decimals)\n  )\n    .then((tx) => {\n      tx.wait().then((res) => {\n        const { status, transactionHash } = res;\n        console.log(\"status: \", status);\n\n        loadApprove({\n          isApproved: status === 1,\n          handleApprove: handleApprove,\n        });\n      });\n    })\n    .catch((e) => {\n      console.log(e, \"error:\");\n    });\n};\n\nif (sourceBridge !== \"eth\" || !token.ethereum_address) {\n  loadApprove({\n    isApproved: true,\n    forceReload: !forceReload,\n    handleApprove,\n  });\n\n  return \"\";\n}\n\nconst TokenContract = new ethers.Contract(\n  token.ethereum_address,\n  Erc20Abi,\n  Ethers.provider().getSigner()\n);\n\nconst getAllowance = () => {\n  TokenContract.allowance(sender, config.ethLockerAddress).then(\n    (allowanceRaw) => {\n      const parsedAllowance = Big(Number(allowanceRaw._hex))\n        .div(Big(10).pow(token.decimals))\n        .toFixed();\n\n      const isApproved = Number(parsedAllowance) >= Number(amountIn);\n\n      loadApprove({\n        isApproved: isApproved,\n        handleApprove: handleApprove,\n        forceReload: !forceReload,\n      });\n      State.update({\n        isApproved: isApproved,\n        forceReload: !forceReload,\n      });\n    }\n  );\n};\n\nreturn \"\";\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bluebiu.near/widget/RainbowBridge.checkApprove", "fact_widget_deployments_id": "42cefae682d6efd1cb63d522c216a586", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}