{"tx_hash": "HnMT6kfX4YLbvEBwMtjNzwGe9uvz7A646CV5FLxs8v6k", "action_id_social": "7fAAF1yzqZ6BV9XSHoyjizaWWXcfV2TqUde8rngcT85P-0-widget", "block_id": 106869627, "block_timestamp": "2023-11-30T13:37:31.361Z", "signer_id": "bluebiu.near", "widget_name": "0vix.LendingDialog", "source_code": "const Dialog = styled.div`\n  position: fixed;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  display: none;\n  &.display {\n    display: block;\n  }\n`;\nconst Overlay = styled.div`\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.6);\n  position: absolute;\n  z-index: 8000;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  @media (max-width: 640px) {\n    align-items: flex-end;\n  }\n`;\nconst Content = styled.div`\n  background-color: #25273a;\n  border-radius: 16px;\n  width: 396px;\n  @media (max-width: 640px) {\n    width: 100%;\n    border-radius: 16px 16px 0px 0px;\n  }\n`;\nconst Header = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\nconst Title = styled.div`\n  font-size: 16px;\n  font-weight: 500;\n  color: #fff;\n`;\nconst Apy = styled.span`\n  color: #8b71c2;\n  margin-left: 8px;\n`;\nconst CloseIcon = styled.div`\n  color: #7c7f96;\n`;\nconst InputWrapper = styled.div`\n  background-color: rgba(0, 0, 0, 0.3);\n  border-radius: 10px;\n  height: 56px;\n  display: flex;\n  align-items: center;\n  padding: 0px 16px;\n  margin-top: 20px;\n`;\nconst Input = styled.input`\n  font-size: 18px;\n  color: #fff;\n  font-weight: 500;\n  background-color: transparent;\n  outline: none;\n  border: none;\n  height: 22px;\n  vertical-align: bottom;\n  flex-grow: 1;\n\n  &::placeholder {\n    color: #7c7f96;\n  }\n`;\nconst TokenWrapper = styled.div`\n  display: flex;\n  flex-shrink: 0;\n`;\nconst TokenLogo = styled.img`\n  width: 22px;\n  height: 22px;\n  border-radius: 50%;\n  margin-right: 8px;\n`;\nconst TokenSymbol = styled.div`\n  font-size: 18px;\n  color: #fff;\n  font-weight: 500;\n`;\nconst InputBalance = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\nconst InputMax = styled.div`\n  color: #7c7f96;\n  font-size: 14px;\n  font-weight: 400;\n  text-decoration: underline;\n  cursor: pointer;\n`;\nconst BalanceWrapper = styled.div`\n  text-align: right;\n  color: #7c7f96;\n  font-size: 14px;\n  font-weight: 400;\n  margin-top: 10px;\n  cursor: pointer;\n`;\nconst Balance = styled.span`\n  font-weight: 400;\n`;\nconst Split = styled.div`\n  width: 100%;\n  height: 1px;\n  background-color: #332c4b;\n`;\nconst Row = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 10px 0px;\n  font-size: 16px;\n  font-weight: 400;\n`;\nconst Label = styled.div`\n  color: #7c7f96;\n`;\nconst Value = styled.div`\n  color: #fff;\n  text-align: right;\n`;\nconst CollateralTips = styled.div`\n  background-color: rgba(121, 79, 221, 0.25);\n  border-radius: 12px;\n  padding: 10px;\n  line-height: 16.8px;\n  font-size: 14px;\n  font-weight: 400;\n  color: #fff;\n  margin-top: 10px;\n  margin-bottom: 20px;\n  display: flex;\n  .icon {\n    margin-right: 4px;\n    flex-shrink: 0;\n  }\n`;\nconst ApproveTips = styled.div`\n  background-color: rgba(121, 79, 221, 0.25);\n  border-radius: 24px;\n  padding: 0px 10px;\n  line-height: 28px;\n  font-size: 14px;\n  font-weight: 400;\n  color: #fff;\n  margin-top: 10px;\n  margin-bottom: 10px;\n  display: flex;\n  align-items: center;\n  .icon {\n    margin-right: 4px;\n    flex-shrink: 0;\n    margin-top: -1px;\n  }\n`;\nconst TopBox = styled.div`\n  padding: 30px 30px 10px;\n`;\nconst Box = styled.div`\n  padding: 10px 30px 30px;\n`;\nconst ValuesWrapper = styled.div`\n  display: flex;\n  .mx_5 {\n    margin: 0px 5px;\n  }\n`;\nconst ERC20_ABI = [\n  {\n    constant: true,\n    inputs: [\n      {\n        name: \"_owner\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        name: \"balance\",\n        type: \"uint256\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nconst {\n  display,\n  data,\n  accountLiquidity,\n  userTotalBorrowUsd,\n  onClose,\n  onSuccess,\n  onMessage,\n} = props;\nif (!data) return \"\";\n\nconst actionText = data.actionText;\nconst marketData = data.record;\nconst isSupply = [\"Supply\", \"Withdraw\"].includes(actionText);\nconst isBorrow = [\"Repay\", \"Borrow\"].includes(actionText);\nconst isCollateral = !isSupply && !isBorrow;\nconst account = Ethers.send(\"eth_requestAccounts\", [])[0];\nconst tokenSymbol = marketData.symbol.slice(1).toUpperCase();\n\nState.init({\n  amount: \"\",\n  processValue: 0,\n});\n\nconst formatBorrowLimit = (digits, round) => {\n  return Big(userTotalBorrowUsd)\n    .plus(accountLiquidity)\n    .toFixed(digits || 2, round || 1);\n};\nconst formatBorrowLimitUsed = () => {\n  const borrowLimit = formatBorrowLimit(10);\n  if (Big(borrowLimit).eq(0)) return \"0.00\";\n  return Big(userTotalBorrowUsd).div(borrowLimit).mul(100).toFixed(2);\n};\nconst formatBalance = () => {\n  if (state.balanceLoading) return \"Loading\";\n  if (!state.balance) return \"-\";\n  if (state.balance === \"0\") return \"0\";\n  if (Big(state.balance).lt(0.0001)) return \"<0.0001\";\n  return Big(state.balance).toFixed(4, 0);\n};\n\nconst handleAmountChange = (amount) => {\n  if (isNaN(Number(amount))) return;\n  const isZero = Big(amount || 0).eq(0);\n  if (isZero) {\n    State.update({\n      amount,\n      buttonClickable: false,\n      borrowLimit: \"\",\n      borrowLimitUsed: \"\",\n      borrowBalance: \"\",\n      isEmpty: Number(amount) === 0 && amount !== \"\",\n      isOverSize: false,\n      isBigerThanBalance: false,\n    });\n    return;\n  }\n  const precent = !Big(state.balance || 0).eq(0)\n    ? Big(amount).div(state.balance).mul(100)\n    : 0;\n\n  const params = {\n    amount: amount,\n    processValue: precent.gt(100) ? 100 : precent.toNumber(),\n  };\n  let _borrowLimitUsed;\n  if (isSupply) {\n    if (actionText === \"Withdraw\") {\n      params.borrowLimit = Big(formatBorrowLimit(10))\n        .minus(Big(amount).mul(marketData.underlyingPrice))\n        .toFixed(2);\n    }\n    if (actionText === \"Supply\") {\n      params.borrowLimit = Big(formatBorrowLimit(10))\n        .plus(\n          Big(amount)\n            .mul(marketData.underlyingPrice)\n            .mul(marketData.loanToValue)\n            .div(100)\n        )\n        .toFixed(2);\n    }\n    _borrowLimitUsed = Big(params.borrowLimit).eq(0)\n      ? 0\n      : Big(userTotalBorrowUsd).div(params.borrowLimit).mul(100);\n  }\n  if (isBorrow) {\n    if (actionText === \"Borrow\") {\n      params.borrowBalance = Big(amount)\n        .mul(marketData.underlyingPrice)\n        .plus(userTotalBorrowUsd)\n        .toFixed(2);\n    }\n    if (actionText === \"Repay\") {\n      console.log(userTotalBorrowUsd, amount, marketData.underlyingPrice);\n      const _borrowBalance = Big(userTotalBorrowUsd).minus(\n        Big(amount).mul(marketData.underlyingPrice)\n      );\n      params.borrowBalance = _borrowBalance.gt(0)\n        ? _borrowBalance.toFixed(2)\n        : 0;\n      console.log(302);\n    }\n    const borromLimit = formatBorrowLimit(6);\n    _borrowLimitUsed = params.borrowBalance\n      ? Big(params.borrowBalance)\n          .div(borromLimit || 1)\n          .mul(100)\n      : Big(0);\n  }\n  params.borrowLimitUsed = _borrowLimitUsed.gt(100)\n    ? \">100\"\n    : _borrowLimitUsed.lt(0)\n    ? \"infinity\"\n    : _borrowLimitUsed.eq(0)\n    ? \"\"\n    : _borrowLimitUsed.toFixed(2);\n\n  const isOverSize = [\"Withdraw\", \"Borrow\"].includes(actionText)\n    ? params.borrowLimitUsed === \"infinity\" || params.borrowLimitUsed === \">100\"\n    : false;\n  params.isBigerThanBalance = Big(amount).gt(state.balance);\n  params.buttonClickable = !isOverSize && !params.isBigerThanBalance;\n  params.isOverSize = isOverSize\n    ? true\n    : Big(params.borrowLimitUsed || 0).gt(99);\n  params.isEmpty = false;\n  State.update(params);\n};\n\nconst getBalance = () => {\n  const isUnderlying = [\"Supply\", \"Repay\"].includes(actionText);\n  State.update({\n    balanceLoading: true,\n  });\n  if (isUnderlying && marketData.underlyingToken.address === \"native\") {\n    Ethers.provider()\n      .getBalance(account)\n      .then((rawBalance) => {\n        State.update({\n          balance: ethers.utils.formatUnits(rawBalance._hex, 18),\n          balanceLoading: false,\n        });\n      });\n    return;\n  }\n  if (isUnderlying || actionText === \"Withdraw\") {\n    const TokenContract = new ethers.Contract(\n      isUnderlying ? marketData.underlyingToken.address : marketData.address,\n      ERC20_ABI,\n      Ethers.provider().getSigner()\n    );\n    TokenContract.balanceOf(account).then((rawBalance) => {\n      const _rawBalance = ethers.utils.formatUnits(\n        rawBalance._hex,\n        isUnderlying ? marketData.underlyingToken.decimals : marketData.decimals\n      );\n      const _balance = isUnderlying\n        ? _rawBalance\n        : Big(marketData.exchangeRateStored).mul(_rawBalance).toString();\n\n      State.update({\n        balance: _balance,\n        balanceLoading: false,\n      });\n    });\n    return;\n  }\n  if (actionText === \"Borrow\") {\n    const borrowLimit = formatBorrowLimit(5);\n    const borrowAvailable = Big(borrowLimit)\n      .minus(userTotalBorrowUsd)\n      .div(marketData.underlyingPrice || 1);\n    State.update({\n      balance: Big(borrowAvailable).toString(),\n      balanceLoading: false,\n    });\n    return;\n  }\n};\nconst handleClose = () => {\n  onClose?.();\n  Storage.privateSet(\"prevAddress\", \"\");\n};\nif (Storage.privateGet(\"prevAddress\") !== marketData.address && display) {\n  State.update({\n    borrowLimit: \"\",\n    borrowLimitUsed: \"\",\n    borrowBalance: \"\",\n    amount: \"\",\n    buttonClickable: false,\n    processValue: 0,\n  });\n  getBalance();\n  Storage.privateSet(\"prevAddress\", marketData.address);\n}\n\nreturn (\n  <Dialog className={display ? \"display\" : \"\"}>\n    <Overlay>\n      <Content>\n        <TopBox>\n          <Header>\n            <Title>\n              <span>\n                {isCollateral ? actionText : actionText.toUpperCase()}{\" \"}\n                {!isCollateral && tokenSymbol}\n              </span>\n              {!isCollateral && (\n                <Apy>\n                  {isSupply ? marketData.supplyApy : marketData.borrowApy} APY\n                </Apy>\n              )}\n            </Title>\n            <CloseIcon>\n              <Widget\n                src=\"bluebiu.near/widget/Arbitrum.Swap.CloseIcon\"\n                props={{ onClose: handleClose, size: 18 }}\n              />\n            </CloseIcon>\n          </Header>\n          {!isCollateral && (\n            <>\n              <InputWrapper>\n                <Input\n                  value={state.amount}\n                  onChange={(ev) => {\n                    handleAmountChange(ev.target.value);\n                  }}\n                  placeholder=\"0.0\"\n                />\n                <TokenWrapper>\n                  <TokenLogo src={marketData.logo} />\n                  <TokenSymbol>{tokenSymbol}</TokenSymbol>\n                </TokenWrapper>\n              </InputWrapper>\n              <InputBalance>\n                <InputMax\n                  onClick={() => {\n                    if (state.balanceLoading || isNaN(state.balance)) return;\n                    if (actionText === \"Repay\") {\n                      const amount = Big(state.balance).toFixed(4, 0);\n                      handleAmountChange(amount);\n                      return;\n                    }\n                    if (actionText === \"Borrow\") {\n                      const borrowLimit = formatBorrowLimit(5, 0);\n                      handleAmountChange(\n                        Big(borrowLimit)\n                          .mul(0.7)\n                          .minus(userTotalBorrowUsd)\n                          .div(marketData.underlyingPrice || 1)\n                          .toFixed(4)\n                      );\n                      return;\n                    }\n                  }}\n                >\n                  {actionText === \"Borrow\"\n                    ? \"Safe Max\"\n                    : actionText === \"Repay\"\n                    ? \"Max\"\n                    : \"\"}\n                </InputMax>\n                <BalanceWrapper\n                  onClick={() => {\n                    if (\n                      state.balanceLoading ||\n                      isNaN(state.balance) ||\n                      actionText === \"Repay\"\n                    )\n                      return;\n                    const amount = Big(state.balance).toFixed(4, 0);\n                    handleAmountChange(amount);\n                    State.update({\n                      amount,\n                    });\n                  }}\n                >\n                  {[\"Withdraw\", \"Borrow\"].includes(actionText)\n                    ? \"Available\"\n                    : actionText === \"Supply\"\n                    ? \"Balance\"\n                    : \"Wallet Balance\"}\n                  :{\" \"}\n                  <Balance\n                    style={{\n                      textDecoration:\n                        actionText === \"Repay\" ? \"none\" : \"underline\",\n                    }}\n                  >\n                    {formatBalance()}\n                  </Balance>\n                </BalanceWrapper>\n              </InputBalance>\n              <Widget\n                src=\"bluebiu.near/widget/0vix.LendingProgress\"\n                props={{\n                  value: state.processValue,\n                  onChange: (value) => {\n                    const amount = Big(state.balance)\n                      .mul(value / 100)\n                      .toFixed(4, 0);\n                    State.update({\n                      processValue: value,\n                      amount,\n                    });\n                    handleAmountChange(amount);\n                  },\n                }}\n              />\n            </>\n          )}\n        </TopBox>\n        {!isCollateral && <Split />}\n        <Box>\n          {isCollateral && (\n            <CollateralTips>\n              <div className=\"icon\">\n                <Widget src=\"bluebiu.near/widget/0vix.LendingInfoIcon\" />\n              </div>\n              This assets is required to support your borrowed assets. Either\n              repay borrowed assets, or supply another asset as collateral.\n            </CollateralTips>\n          )}\n          {!isCollateral && actionText !== \"Repay\" && (\n            <Row>\n              <Label>{isSupply ? \"Supply\" : \"Borrow\"} APY</Label>\n              <Value>\n                {isSupply ? marketData.supplyApy : marketData.borrowApy}\n              </Value>\n            </Row>\n          )}\n          {actionText === \"Repay\" && (\n            <Row>\n              <Label>Your Borrowed</Label>\n              <Value>{Big(marketData.userBorrow).toFixed(3)}</Value>\n            </Row>\n          )}\n          {(isSupply || isCollateral) && (\n            <Row>\n              <Label>Borrow Limit</Label>\n              <ValuesWrapper>\n                <Value>${formatBorrowLimit(2)}</Value>\n                {isSupply && !!state.borrowLimit && (\n                  <>\n                    <div className=\"mx_5\">\n                      <Widget\n                        src=\"bluebiu.near/widget/0vix.LendingArrowIcon\"\n                        props={{ color: \"#8B71C2\" }}\n                        className=\"mx_5\"\n                      />\n                    </div>\n                    <Value>${state.borrowLimit}</Value>\n                  </>\n                )}\n              </ValuesWrapper>\n            </Row>\n          )}\n          {isBorrow && (\n            <Row>\n              <Label>Borrow Balance</Label>\n              <ValuesWrapper>\n                <Value>${Big(userTotalBorrowUsd).toFixed(2)}</Value>\n                {!!(isBorrow && state.borrowBalance) && (\n                  <>\n                    <div className=\"mx_5\">\n                      <Widget\n                        src=\"bluebiu.near/widget/0vix.LendingArrowIcon\"\n                        props={{ color: \"#8B71C2\" }}\n                        className=\"mx_5\"\n                      />\n                    </div>\n                    <Value>${state.borrowBalance}</Value>\n                  </>\n                )}\n              </ValuesWrapper>\n            </Row>\n          )}\n          <Row>\n            <Label>Borrow Limit Used</Label>\n            <ValuesWrapper>\n              <Value>{formatBorrowLimitUsed()}%</Value>\n              {!isCollateral && !!state.borrowLimitUsed && (\n                <>\n                  <div className=\"mx_5\">\n                    <Widget\n                      src=\"bluebiu.near/widget/0vix.LendingArrowIcon\"\n                      props={{ color: \"#8B71C2\" }}\n                    />\n                  </div>\n                  <Value>{state.borrowLimitUsed}%</Value>\n                </>\n              )}\n            </ValuesWrapper>\n          </Row>\n          {!isCollateral && (\n            <>\n              <Row>\n                <Label>\n                  {isSupply ? \"Loan-To-Value\" : \"Liquidation Threshold\"}\n                </Label>\n                <Value>{Big(marketData.loanToValue || 0).toFixed(0)}%</Value>\n              </Row>\n              <Row>\n                <Label>% of Supply Borrowed</Label>\n                <Value>\n                  {Big(marketData.totalSupply).eq(0)\n                    ? \"-\"\n                    : Big(marketData.totalBorrows)\n                        .div(marketData.totalSupply)\n                        .mul(100)\n                        .toFixed(2)}\n                  %\n                </Value>\n              </Row>\n            </>\n          )}\n          {!!state.isOverSize && (\n            <ApproveTips style={{ marginBottom: 0 }}>\n              <div className=\"icon\">\n                <Widget src=\"bluebiu.near/widget/0vix.LendingInfoIcon\" />\n              </div>\n              Amount must be &lt;= 99% borrow limit.\n            </ApproveTips>\n          )}\n          {!!state.isEmpty && (\n            <ApproveTips style={{ marginBottom: 0 }}>\n              <div className=\"icon\">\n                <Widget src=\"bluebiu.near/widget/0vix.LendingInfoIcon\" />\n              </div>\n              Amount must be &gt;0\n            </ApproveTips>\n          )}\n          {!!state.isBigerThanBalance && (\n            <ApproveTips style={{ marginBottom: 0 }}>\n              <div className=\"icon\">\n                <Widget src=\"bluebiu.near/widget/0vix.LendingInfoIcon\" />\n              </div>\n              Amount must be &lt;= balance\n            </ApproveTips>\n          )}\n          <Widget\n            src=\"bluebiu.near/widget/0vix.LendingDialogButton\"\n            props={{\n              disabled: !state.buttonClickable,\n              actionText,\n              amount: state.amount,\n              market: marketData,\n              unitrollerAddress: props.unitrollerAddress,\n              onSuccess: () => {\n                handleClose();\n                onSuccess?.();\n              },\n              onMessage: onMessage,\n            }}\n          />\n        </Box>\n      </Content>\n    </Overlay>\n  </Dialog>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bluebiu.near/widget/0vix.LendingDialog", "fact_widget_deployments_id": "933a53ae9d34d19ee12a99283bdd7498", "inserted_timestamp": "2023-11-30T15:17:42.966Z", "modified_timestamp": "2023-12-20T02:50:47.065Z", "__row_index": 0}