{"tx_hash": "J5tPYRPHB7Fyo6csz95VpXU83XBCEZkC9TSWB3QQhwWv", "action_id_social": "9SsYekaGokx9pWeHdPiTasg5ygdzKPs8hh8RHGa9APWQ-0-widget", "block_id": 100436960, "block_timestamp": "2023-09-05T09:25:05.982Z", "signer_id": "bluebiu.near", "widget_name": "Base.BaseCurrencyInput", "source_code": "// styled area\nconst Wrapper = styled.div`\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n  padding: 5px 0px;\n`;\nconst InputField = styled.div`\n  flex-grow: 1;\n  margin-right: 8px;\n`;\nconst InputWarpper = styled.div`\n  height: 46px;\n  border-bottom: 1px solid #332c4b;\n  padding: 10px 0px;\n`;\nconst Input = styled.input`\n  font-size: 26px;\n  color: #fff;\n  font-weight: 500;\n  background-color: transparent;\n  outline: none;\n  border: none;\n  height: 40px;\n  vertical-align: bottom;\n`;\nconst Value = styled.div`\n  padding-top: 10px;\n  color: #4f5375;\n  font-size: 14px;\n  line-height: 16px;\n`;\nconst CurrencyField = styled.div`\n  width: 160px;\n`;\nconst CurrencySelect = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border: 1px solid #332c4b;\n  border-radius: 24px;\n  padding: 6px 12px 6px 6px;\n  cursor: pointer;\n  svg {\n    color: #82a7ff;\n  }\n`;\nconst CurrencyWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  height: 32px;\n`;\nconst CurrencyIcon = styled.img`\n  width: 32px;\n  height: 32px;\n  border-radius: 50%;\n`;\nconst CurrencySymbol = styled.div`\n  font-size: 18px;\n  color: #fff;\n  margin-left: 7px;\n  .fz-14 {\n    font-size: 14px;\n  }\n`;\nconst Amount = styled.div`\n  padding-top: 10px;\n  color: #4f5375;\n  font-size: 14px;\n  line-height: 16px;\n  text-align: right;\n  cursor: pointer;\n`;\n// styled area end\n\nState.init({\n  balanceLoaded: false,\n  balance: \"0\",\n});\n\nconst utils = {\n  balanceFormated: () => {\n    if (!props.currency?.address) return \"-\";\n    if (!state.balanceLoaded) return \"Loading\";\n    if (state.balance === \"0\") return \"0\";\n    if (Big(state.balance).lt(0.0001)) return Big(state.balance).toPrecision(1);\n    return Big(state.balance).toFixed(4, 0);\n  },\n  valueFormated: (amount) => {\n    const prices = Storage.privateGet(\"tokensPrice\");\n    const price = prices[props.currency?.symbol];\n    if (!price) return \"-\";\n    const value = Big(price).mul(amount || 0);\n    if (value.lt(0.01)) return value.toPrecision(1);\n    return value.toFixed(2);\n  },\n};\n\nconst handlers = {\n  handleDisplayCurrencySelect: () => {\n    State.update({\n      balanceLoaded: false,\n    });\n    props?.onCurrencySelectOpen();\n  },\n  handleInputChange: (ev) => {\n    if (isNaN(Number(ev.target.value))) return;\n    props.onAmountChange?.(ev.target.value);\n  },\n};\n\nconst DELAY = 1000 * 60 * 5;\nconst timer = Storage.privateGet(\"priceTimer\");\nfunction getPrice() {\n  asyncFetch(\"https://mainnet-indexer.ref-finance.com/get-token-price\")\n    .then((res) => {\n      const data = JSON.parse(res.body);\n      data.native = data.aurora;\n      delete data.aurora;\n      Storage.privateSet(\"tokensPrice\", data);\n      clearTimeout(timer);\n      let timerNo = setTimeout(getPrice, DELAY);\n      Storage.privateSet(\"priceTimer\", timerNo);\n    })\n    .catch((err) => {\n      clearTimeout(timer);\n      let timerNo = setTimeout(getPrice, DELAY);\n      Storage.privateSet(\"priceTimer\", timerNo);\n    });\n}\n\nif (!Storage.privateGet(\"priceTimer\")) {\n  getPrice();\n}\n\nreturn (\n  <Wrapper>\n    {(props.updateTokenBalance || !state.balanceLoaded) && (\n      <Widget\n        src=\"bluebiu.near/widget/Base.BaseCurrencyBalance\"\n        props={{\n          address: props.currency?.address,\n          onLoad: (balance) => {\n            State.update({\n              balance: ethers.utils.formatUnits(\n                balance,\n                props.currency.decimals\n              ),\n              balanceLoaded: true,\n            });\n            props?.onUpdateCurrencyBalance(balance);\n          },\n        }}\n      />\n    )}\n    <InputField>\n      <InputWarpper>\n        <Input\n          value={props.amount}\n          disabled={props.disabled}\n          onChange={handlers.handleInputChange}\n        />\n      </InputWarpper>\n      <Value>\u2248 ${utils.valueFormated(props.amount)}</Value>\n    </InputField>\n    <CurrencyField>\n      <CurrencySelect onClick={handlers.handleDisplayCurrencySelect}>\n        <CurrencyWrapper>\n          {props.currency?.icon && <CurrencyIcon src={props.currency.icon} />}\n          <CurrencySymbol>\n            {props.currency.symbol || (\n              <span className=\"fz-14\">Select a token</span>\n            )}\n          </CurrencySymbol>\n        </CurrencyWrapper>\n        <Widget src=\"bluebiu.near/widget/Base.BaseArrowIcon\" />\n      </CurrencySelect>\n      <Amount\n        onClick={() => {\n          const formatedBalance = utils.balanceFormated();\n          if (![\"-\", \"Loading\", \"0\"].includes(formatedBalance))\n            props.onAmountChange?.(formatedBalance);\n        }}\n      >\n        Balance:{\" \"}\n        <span\n          style={{\n            textDecoration: props.disabled ? \"none\" : \"underline\",\n          }}\n        >\n          {utils.balanceFormated()}\n        </span>\n      </Amount>\n    </CurrencyField>\n  </Wrapper>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bluebiu.near/widget/Base.BaseCurrencyInput", "fact_widget_deployments_id": "68c704b841cdce33152e3d48f28606b3", "inserted_timestamp": "2023-09-05T11:48:07.010Z", "modified_timestamp": "2023-09-05T11:48:07.010Z", "__row_index": 2}