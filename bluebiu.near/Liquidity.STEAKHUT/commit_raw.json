{"tx_hash": "74JwZLKYSrSRESsPRAZ9iPWwd7iUSJ3Pzp127JFZMWqs", "action_id_social": "2FzbP2CAnyjRseBNsR56Tr1GfcapZeKW8MBJu9TQkaRk-0-widget", "block_id": 111830953, "block_timestamp": "2024-02-01T06:17:24.943Z", "signer_id": "bluebiu.near", "widget_name": "Liquidity.STEAKHUT", "source_code": "\nconst StyledColumn = styled.div`\n  display: flex;\n  flex-direction: column;\n`\nconst StyledRow = styled.div`\n  display: flex;\n  flex-direction: row;\n`\n\nconst StyledVaultImage = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\nconst SvgIcon = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  &.icon-right {\n    position: absolute;\n    right: 28px;\n    top: 50%;\n    transform: translateY(-50%);\n\n    &.rotate {\n      transform: translateY(-50%) rotate(90deg);\n    }\n  }\n`\nconst TdTxt = styled.div`\n  color: #FFF;\n  font-family: Gantari;\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  &.gray {\n    color: #979ABE;\n    font-size: 12px;\n  }\n`\nconst PoolPercentage = styled.div`\n  padding: 3px 8px;\n  border-radius: 24px;\n  background: rgba(151, 154, 190, 0.1);\n  color: #979ABE;\n  font-family: Gantari;\n  font-size: 12px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n`\n\nconst StrategyTxt = styled.div`\n  padding: 7px 10px;\n  border-radius: 6px;\n  background: rgba(151, 154, 190, 0.1);\n  color: #979ABE;\n  font-family: Gantari;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n`\nconst TitleText = styled.div`\n  font-size: 20px;\n  font-weight: 700;\n  margin-bottom: 32px;\n  color: #ffffff;\n  @media (max-width: 900px) {\n    display: none;\n  }\n`;\nconst ContainerLogin = styled.div`\n  display: flex;\n  max-width: 500px;\n\n  flex-direction: column;\n  margin: 80px auto auto auto;\n\n  .web3-connect {\n    width: 480px;\n    height: 60px;\n    border-radius: 10px;\n    background-color: #fff;\n    color: #0f1126;\n    font-size: 18px;\n    font-weight: 500;\n    border: none;\n    margin-top: 20px;\n  }\n\n  @media (max-width: 736px) {\n    max-width: 100%;\n    .web3-connect {\n      width: 100%;\n\n      font-size: 16px;\n      height: 40px;\n    }\n  }\n`;\nconst sender = Ethers.send(\"eth_requestAccounts\", [])[0];\nif (!sender) {\n  return (\n    <>\n      <TitleText>Liquidity Manage</TitleText>\n      <ContainerLogin\n        style={{\n          display: \"flex\",\n          maxWidth: \"500px\",\n          flexDirection: \"column\",\n          margin: \"80px auto auto auto\",\n        }}\n      >\n        <Web3Connect\n          className=\"web3-connect\"\n          connectLabel=\"Connect ETH wallet\"\n        />\n      </ContainerLogin>\n    </>\n  );\n}\n\nconst formatFiat = (value) => {\n  const number = Number(value).toLocaleString(\"en\", {\n    currency: \"USD\",\n    style: \"currency\",\n    compactDisplay: \"short\",\n    notation: \"compact\",\n    maximumFractionDigits: 2,\n  });\n\n  return number;\n};\n\nconst formatPercent = (value) => {\n  return `${Number(value * 100).toLocaleString(\"en\", {\n    maximumFractionDigits: 2,\n  })}%`;\n};\nconst ICON_VAULT_MAP = {\n  USDC: 'https://app.gamma.xyz/_next/static/media/icon.4435c0e9.svg',\n  WETH: 'https://app.gamma.xyz/_next/static/media/icon.dddcef40.svg',\n  USDT: 'https://app.gamma.xyz/_next/static/media/icon.16fadc1b.svg',\n  WBTC: 'https://app.gamma.xyz/_next/static/media/icon.eb6c5d98.svg',\n  BUSD: 'https://app.gamma.xyz/_next/static/media/icon.6be491a5.svg',\n  MATIC: 'https://app.gamma.xyz/_next/static/media/icon.fe758f26.svg',\n  WBNB: 'https://app.gamma.xyz/_next/static/media/icon.ca2e2bd7.svg',\n  BTCB: 'https://app.gamma.xyz/_next/static/media/icon.eb6c5d98.svg',\n  BNBx: 'https://app.gamma.xyz/_next/static/media/icon.ca2e2bd7.svg'\n}\n\nconst chains = [{\n  icon: (\n    <svg width=\"26\" height=\"26\" viewBox=\"0 0 26 26\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <rect width=\"26\" height=\"26\" rx=\"8\" fill=\"#AF1616\" />\n    </svg>\n\n  ),\n  type: 'Avalanche'\n}]\nconst CHAIN_MAP = {\n  Avalanche: {\n    url: 'https://wire2.gamma.xyz/sushi/base/hypervisors/allData',\n    pairs: [{\n      id: \"WETH-USDbC-500\",\n      strategy: \"Dynamic\",\n      strategy2: \"\",\n      token0: \"USDC\",\n      token1: \"WETH\",\n      chainName: 'Base',\n      chainSvg: (\n        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <rect width=\"24\" height=\"24\" rx=\"8\" fill=\"#0038FF\" />\n          <path d=\"M11.9862 20C16.4126 20 20 16.4189 20 12C20 7.58109 16.4126 4 11.9862 4C7.7866 4 4.34172 7.22327 4 11.3265H14.5935V12.672H4C4.34172 16.7767 7.7866 20 11.9862 20Z\" fill=\"white\" />\n        </svg>\n      ),\n      ammName: 'Sushi',\n      ammImage: 'https://app.gamma.xyz/_next/static/media/icon.615337dd.svg'\n    }],\n    addresses: {\n      USDC: \"0xd9aaec86b65d86f6a7b5b1b0c42ffa531710b6ca\",\n      WETH: \"0x4200000000000000000000000000000000000006\",\n      \"WETH-USDbC-500\": \"0x11c4011772594c5f124a027da35329559447853d\",\n    }\n  }\n}\nconst MULTICALL_ADDRESS = \"0xcA11bde05977b3631167028862bE2a173976CA11\";\nState.init({\n  loading: false,\n  dataList: [],\n  dataIndex: -1,\n  categoryIndex: 0,\n  chainIndex: 0,\n  token: ''\n})\nconst {\n  url,\n  pairs,\n  addresses\n} = CHAIN_MAP[chains[state?.chainIndex ?? 0].type]\nfunction fetchDataList() {\n  State.update({\n    loading: true\n  });\n  asyncFetch(url).then((res) => {\n    if (!res.ok) return;\n    State.update({\n      allData: res.body,\n      loading: false\n    })\n  })\n}\nfunction handleChangeDataIndex(index) {\n  State.update({\n    dataIndex: state.dataIndex > -1 ? -1 : index\n  })\n}\nfunction handleChangeCategoryIndex(index) {\n  State.update({\n    categoryIndex: index\n  })\n}\nfunction handleChangeChainIndex(index) {\n  State.update({\n    chainIndex: index,\n    allData: null,\n    dataList: [],\n  })\n}\n\nif (!state.allData) {\n  fetchDataList()\n}\nconst columnList = [{\n  width: '30%',\n  key: 'pool',\n  label: 'Pool',\n  type: 'slot',\n  render: (data) => {\n    return (\n      <>\n        <StyledVaultImage>\n          <img style={{ marginRight: -6 }} src={ICON_VAULT_MAP[data.token0]} alt={data.token0} />\n          <img src={ICON_VAULT_MAP[data.token1]} alt={data.token1} />\n        </StyledVaultImage>\n        <TdTxt>{data.token0} / {data.token1}</TdTxt>\n        <PoolPercentage>0.05%</PoolPercentage>\n      </>\n    )\n  }\n}, {\n  width: '10%',\n  key: 'chainSvg',\n  label: 'Chain',\n  type: 'svg'\n}, {\n  width: '20%',\n  key: 'amm',\n  label: 'AMM',\n  type: 'slot',\n  render: (data) => {\n    return (\n      <>\n        <img src={data.ammImage} alt={data.ammName} width={22} />\n        <TdTxt>{data.ammName}</TdTxt>\n      </>\n    )\n  }\n}, {\n  width: '10%',\n  key: 'strategy',\n  label: 'Strategy',\n  type: 'slot',\n  render: (data) => {\n    return (\n      <StrategyTxt>{data.strategy2 ? data.strategy2 : data.strategy}</StrategyTxt>\n    )\n  }\n}, {\n  width: '10%',\n  key: 'tvlUSD',\n  label: 'TVL',\n  type: 'slot',\n  render: (data) => {\n    return (\n      <TdTxt>{formatFiat(data.tvlUSD)}</TdTxt>\n    )\n  }\n}, {\n  width: '10%',\n  key: 'totalApr',\n  label: 'Total APR',\n  // type: 'slot',\n  // render: (data) => {\n  //   const chainType = chains[state?.chainIndex ?? 0].type\n  //   let totalApr = 0\n  //   if (['Base', 'Optimism'].includes(chainType)) {\n  //     totalApr = formatPercent(data.returns.weekly.feeApr)\n  //   } else if (chainType === 'BSC') {\n  //     totalApr = 1\n  //   } else {\n  //     totalApr = 2\n  //   }\n  //   return <TdTxt>{totalApr}</TdTxt>\n  // }\n}, {\n  width: '10%',\n  direction: 'column',\n  key: 'liquidity',\n  label: 'Your Liquidity',\n  type: 'slot',\n  render: (data, index) => {\n    return (\n      <>\n        <TdTxt>{data.balance ? '$' + data.balance : '-'}</TdTxt>\n        <TdTxt className=\"gray\">0.24 LP</TdTxt>\n        <SvgIcon className={[\"icon-right\", index === state.dataIndex ? \"rotate\" : \"\"]}>\n          {IconRight}\n        </SvgIcon>\n      </>\n    )\n  }\n}]\nreturn (\n  <StyledColumn>\n    {state.allData && (\n      <Widget\n        src={\"bluebiu.near/widget/Linea.Liquidity.Data.Gamma\"}\n        props={{\n          pairs,\n          addresses,\n          allData: state.allData,\n          multicallAddress: MULTICALL_ADDRESS,\n          chainType: chains[state?.chainIndex ?? 0].type,\n          onLoad: (data) => {\n            State.update({\n              dataList: data.dataList,\n              loading: false\n            })\n          }\n        }}\n      />\n    )}\n    <Widget\n      src={\"bluebiu.near/widget/Linea.Liquidity.Bridge.Logo\"}\n    />\n    <Widget\n      src={\"bluebiu.near/widget/Linea.Liquidity.Bridge.Filter\"}\n      props={{\n        token: state.token,\n        chains,\n        categoryIndex: state.categoryIndex,\n        chainIndex: state.chainIndex,\n        onSearchInput: handleSearchInput,\n        onChangeCategoryIndex: handleChangeCategoryIndex,\n        onChangeChainIndex: handleChangeChainIndex,\n      }}\n    />\n    <Widget\n      src={\"bluebiu.near/widget/Linea.Liquidity.Bridge.List\"}\n      props={{\n        columnList,\n        loading: state.loading,\n        dataIndex: state.dataIndex,\n        onChangeDataIndex: handleChangeDataIndex,\n        dataList: state.dataList,\n        addresses,\n        ICON_VAULT_MAP\n      }}\n    />\n  </StyledColumn>\n)", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bluebiu.near/widget/Liquidity.STEAKHUT", "fact_widget_deployments_id": "6d62878073b41b48e5b42505e48b919d", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}