{"tx_hash": "2DpnndcPJ6jXwJBwF76CRteiTXZqKbdz3JNb52hiQ3eP", "action_id_social": "GEdpDoqfY5zoDBgoisDv1HDBE9hMrTLKmQkEdXbeMS3J-0-widget", "block_id": 111687897, "block_timestamp": "2024-01-30T12:04:14.798Z", "signer_id": "bluebiu.near", "widget_name": "Lending.Handler.Liquity", "source_code": "const abi = [\n  {\n    inputs: [\n      { internalType: \"address\", name: \"_asset\", type: \"address\" },\n      { internalType: \"uint256\", name: \"_assetAmount\", type: \"uint256\" },\n      {\n        internalType: \"uint256\",\n        name: \"_debtTokenAmount\",\n        type: \"uint256\",\n      },\n      { internalType: \"address\", name: \"_upperHint\", type: \"address\" },\n      { internalType: \"address\", name: \"_lowerHint\", type: \"address\" },\n    ],\n    name: \"openVessel\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nconst LENDING_ABI = [\n  {\n    inputs: [\n      { internalType: \"address\", name: \"asset\", type: \"address\" },\n      { internalType: \"bool\", name: \"useAsCollateral\", type: \"bool\" },\n    ],\n    name: \"setUserUseReserveAsCollateral\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nconst wethGateWayAbi = [\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"weth\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"previousOwner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"newOwner\",\n        type: \"address\",\n      },\n    ],\n    name: \"OwnershipTransferred\",\n    type: \"event\",\n  },\n  {\n    stateMutability: \"payable\",\n    type: \"fallback\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"lendingPool\",\n        type: \"address\",\n      },\n    ],\n    name: \"authorizeLendingPool\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"lendingPool\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"interesRateMode\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"referralCode\",\n        type: \"uint16\",\n      },\n    ],\n    name: \"borrowETH\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"lendingPool\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"onBehalfOf\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"referralCode\",\n        type: \"uint16\",\n      },\n    ],\n    name: \"depositETH\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"emergencyEtherTransfer\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"emergencyTokenTransfer\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getWETHAddress\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"owner\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"renounceOwnership\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"lendingPool\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"rateMode\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"onBehalfOf\",\n        type: \"address\",\n      },\n    ],\n    name: \"repayETH\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"newOwner\",\n        type: \"address\",\n      },\n    ],\n    name: \"transferOwnership\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"lendingPool\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n    ],\n    name: \"withdrawETH\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    stateMutability: \"payable\",\n    type: \"receive\",\n  },\n];\n\nconst {\n  update,\n  data,\n  amount,\n  _assetAmount,\n  _debtTokenAmount,\n  _upperHint,\n  _lowerHint,\n  account,\n  onLoad,\n} = props;\n\nuseEffect(() => {\n  if (!update || !data.actionText || !data.underlyingToken) return;\n  let params = [];\n  let method = \"\";\n  let contract = null;\n  const isETH = data.underlyingToken.address === \"native\";\n  let options = {\n    gasLimit: 4000000,\n  };\n  // if ([\"Deposit\", \"Repay\", \"Withdraw\", \"Borrow\"].includes(data.actionText)) {\n  //   if (\n  //     !amount ||\n  //     !data.actionText ||\n  //     !data.config.wethGateway ||\n  //     !data.config.lendingPoolAddress ||\n  //     !account ||\n  //     !data.underlyingToken ||\n  //     !data.variableDebtTokenAddress\n  //   ) {\n  //     return;\n  //   }\n  //   const addressTo = isETH\n  //     ? data.config.lendingPoolAddress\n  //     : data.underlyingToken.address;\n  //   const parsedAmount = ethers.utils.parseUnits(\n  //     amount,\n  //     data.underlyingToken.decimals\n  //   );\n  //   options = {\n  //     value:\n  //       isETH && [\"Repay\", \"Deposit\"].includes(data.actionText)\n  //         ? parsedAmount\n  //         : 0,\n  //     gasLimit: 4000000,\n  //   };\n  //   if (data.actionText === \"Deposit\") {\n  //     method = isETH ? \"depositETH\" : \"deposit\";\n  //     params = isETH\n  //       ? [addressTo, account, 0]\n  //       : [addressTo, parsedAmount, account, 0];\n  //   }\n  //   if (data.actionText === \"Withdraw\") {\n  //     method = isETH ? \"withdrawETH\" : \"withdraw\";\n  //     params = [addressTo, parsedAmount, account];\n  //   }\n  //   if (data.actionText === \"Borrow\") {\n  //     method = isETH ? \"borrowETH\" : \"borrow\";\n  //     params = isETH\n  //       ? [addressTo, parsedAmount, 2, 0]\n  //       : [addressTo, parsedAmount, 2, 0, account];\n  //   }\n  //   if (data.actionText === \"Repay\") {\n  //     method = isETH ? \"repayETH\" : \"repay\";\n  //     params = [addressTo, parsedAmount, 2, account];\n  //   }\n  //   contract = new ethers.Contract(\n  //     isETH ? data.config.wethGateway : data.config.lendingPoolAddress,\n  //     isETH ? wethGateWayAbi : abi,\n  //     Ethers.provider().getSigner()\n  //   );\n  // }\n  // if (data.actionText.includes(\"Collateral\")) {\n  //   if (!data.config.lendingPoolAddress || !data.underlyingToken) return;\n  //   const isEnter = data.actionText === \"Enable as Collateral\";\n  //   contract = new ethers.Contract(\n  //     data.config.lendingPoolAddress,\n  //     LENDING_ABI,\n  //     Ethers.provider().getSigner()\n  //   );\n  //   method = \"setUserUseReserveAsCollateral\";\n  //   params = [data.underlyingToken.address, isEnter];\n  // }\n  // if (!contract) return;\n  contract = new ethers.Contract(\n    data.BorrowerOperations,\n    abi,\n    Ethers.provider().getSigner()\n  );\n  params = [\n    data.underlyingToken.address,\n    ethers.utils.parseUnits(_assetAmount),\n    ethers.utils.parseUnits(_debtTokenAmount),\n    _upperHint,\n    _lowerHint,\n  ];\n  console.log(\"HANDLER: \", contract, method, params, options, isETH);\n  const createTx = (gas) => {\n    const _gas = gas ? Big(gas.toString()).mul(1.2).toFixed(0) : 4000000;\n    contract.populateTransaction[method](...params, {\n      ...options,\n      gasLimit: _gas,\n    })\n      .then((res) => {\n        console.log(444444, res);\n        onLoad({\n          gas: _gas,\n          unsignedTx: res,\n          isError: false,\n        });\n      })\n      .catch((err) => {\n        console.log(55555, res);\n        onLoad({});\n      });\n  };\n  contract.estimateGas[\"openVessel\"](...params, options)\n    .then((gas) => {\n      createTx(gas);\n    })\n    .catch((err) => {\n      console.log(\"estimateGas\", err);\n      createTx();\n    });\n}, [update]);\n\nreturn \"\";\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bluebiu.near/widget/Lending.Handler.Liquity", "fact_widget_deployments_id": "ed86b65b681bcfb58df81bcb4a0301b2", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}