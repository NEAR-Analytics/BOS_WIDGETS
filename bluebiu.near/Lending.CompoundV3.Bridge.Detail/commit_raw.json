{"tx_hash": "GvG1BAXnLJU344FbMPjKB2oTowU55vVMqfitx18QEvKN", "action_id_social": "68873QgY6xhoHHtJsHKtk4ifCZVVooeHdHuywsipBwvh-0-widget", "block_id": 116751481, "block_timestamp": "2024-04-13T10:44:21.916Z", "signer_id": "bluebiu.near", "widget_name": "Lending.CompoundV3.Bridge.Detail", "source_code": "const StyledContainer = styled.div`\n  display: flex;\n  gap: 30px;\n`;\nconst StyledWrapper = styled.div``;\n\nconst StyledSvg = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\nconst StyledImage = styled.img``;\n\nconst StyledFlex = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: flex-start;\n  gap: 0;\n`;\n\nconst StyledFont = styled.div`\n  color: #000;\n  font-family: Gantari;\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n  white-space: normal;\n`;\nconst StyledDashed = styled.div`\n  flex: 1;\n  border-bottom: 1px dashed #979abe;\n`;\nconst StyledOperationButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 26px;\n  height: 26px;\n  border-radius: 8px;\n  background: #5b6079;\n  cursor: pointer;\n  &:not(:disabled):hover {\n    opacity: 0.8;\n    background: #393c51;\n  }\n  &:disabled {\n    background: #393c51;\n    cursor: not-allowed;\n  }\n`;\nconst StyledRange = styled.input`\n  -webkit-appearance: none;\n  width: 100%;\n  background-color: transparent;\n  &::-webkit-slider-runnable-track {\n    -webkit-appearance: none;\n    height: 5px;\n    border-radius: 8px;\n    background-color: #33364b;\n  }\n  &::-webkit-slider-thumb {\n    -webkit-appearance: none;\n    width: 35px;\n    height: 20px;\n    border-radius: 36px;\n    background-color: #16181d;\n    margin-top: -7px;\n    &:after {\n      content: \"12%\";\n      color: #fff;\n    }\n  }\n`;\nconst StyledTips = styled.div`\n  display: none;\n  position: absolute;\n  left: 37px;\n  top: -33px;\n  border-radius: 6px;\n  border: 1px solid #373a53;\n  background: #262836;\n  box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.25);\n  padding: 13px 16px;\n  color: #979abe;\n  font-family: Gantari;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n`;\nconst StyledButton = styled.div`\n  position: relative;\n  flex: 1;\n  height: 48px;\n  border-radius: 8px;\n  background-color: #00ad79;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 4px;\n  color: #fff;\n  font-family: Gantari;\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 500;\n  cursor: pointer;\n  &:not(:disabled):hover {\n    opacity: 0.8;\n    ${StyledTips} {\n      display: block;\n    }\n  }\n  &.borrow {\n    background-color: #5d36c3;\n  }\n  &[disabled] {\n    cursor: not-allowed;\n  }\n  &[disabled].supply {\n    background-color: rgba(151, 154, 190, 0.2);\n  }\n  &[disabled].borrow {\n    background-color: rgba(151, 154, 190, 0.2);\n  }\n  &[disabled].pending {\n    background-color: rgba(0, 173, 121, 0.3);\n  }\n`;\nconst StyledWithraw = styled.button`\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 102px;\n  height: 40px;\n  border-radius: 8px;\n  border: 1px solid #00ad79;\n  color: #00ad79;\n  background-color: transparent;\n  text-align: center;\n  font-family: Gantari;\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n\n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n`;\n\nconst {\n  onBack,\n  data,\n  getAccountInfo,\n  curChain,\n  account,\n  toast,\n  dexConfig,\n  wethAddress,\n  multicall,\n  addAction,\n} = props;\n\nState.init({\n  actions: [],\n});\n\nconst updateInfo = () => {\n  getAccountInfo(data, (res) => {\n    const _availableToBorrow = Big(res.userBorrowCapacityUsd).minus(\n      res.borrowedBalanceUsd\n    );\n    State.update({\n      ...res,\n      collaterValue: res.userCollateralUsd,\n      borrowCapacity: res.userBorrowCapacityUsd,\n      availableToBorrow: Big(_availableToBorrow).lt(0)\n        ? \"0\"\n        : _availableToBorrow.toString(),\n      liquidationPoint:\n        Big(res.userLiquidationUsd || 0).eq(0) ||\n        Big(res.userCollateralUsd || 0).eq(0)\n          ? \"0\"\n          : Big(res.borrowedBalanceUsd)\n              .div(Big(res.userLiquidationUsd).div(res.userCollateralUsd))\n              .toString(),\n      borrowedBalance: res.borrowedBalanceUsd,\n      userLiquidationUsd: res.userLiquidationUsd,\n    });\n  });\n};\n\nuseEffect(() => {\n  if (data) {\n    updateInfo();\n    State.update({\n      borrowApr: Big(data.borrowApr || 0)\n        .minus(data.borrowCompRewardApr || 0)\n        .mul(100)\n        .toFixed(2),\n      supplyApr: Big(data.supplyApr || 0)\n        .add(data.supplyCompRewardApr || 0)\n        .mul(100)\n        .toFixed(2),\n    });\n  }\n}, [data]);\n\nuseEffect(() => {\n  if (!state.balanceUsd) return;\n  State.update({\n    balanceArr: Big(state.balance).toFixed(4).split(\".\"),\n  });\n}, [state.balanceUsd]);\n\nuseEffect(() => {\n  if (!state.borrowedBalance) return;\n  State.update({\n    borrowArr: Big(state.borrowedBalance).toFixed(4).split(\".\"),\n  });\n}, [state.borrowedBalance]);\n\nconst onAmountChange = ({ amount, type, cb }) => {\n  if (state.asset.address === data.baseToken.address) {\n    if (type === \"Repay\") {\n      const _borrowedBalance = Big(state.borrowedBalanceUsd).minus(\n        Big(amount).mul(state.asset.price)\n      );\n\n      cb({\n        borrowedBalanceUsd: _borrowedBalance.toString(),\n        availableToBorrow: Big(state.borrowCapacity || 0)\n          .minus(_borrowedBalance)\n          .toString(),\n        liquidationPoint:\n          Big(state.userLiquidationUsd || 0).eq(0) ||\n          Big(state.collaterValue || 0).eq(0)\n            ? \"0\"\n            : Big(_borrowedBalance)\n                .div(Big(state.userLiquidationUsd).div(state.collaterValue))\n                .toString(),\n      });\n      return;\n    }\n    if (type === \"Borrow\") {\n      const _borrowedBalance = Big(amount)\n        .mul(state.asset.price)\n        .add(state.borrowedBalanceUsd || 0);\n\n      cb({\n        borrowedBalanceUsd: _borrowedBalance.toString(),\n        availableToBorrow: Big(state.borrowCapacity || 0)\n          .minus(_borrowedBalance)\n          .toString(),\n        liquidationPoint:\n          Big(state.userLiquidationUsd || 0).eq(0) ||\n          Big(state.collaterValue || 0).eq(0)\n            ? \"0\"\n            : Big(_borrowedBalance)\n                .div(Big(state.userLiquidationUsd).div(state.collaterValue))\n                .toString(),\n      });\n      return;\n    }\n    cb({});\n    return;\n  }\n  const _collaterValue = Big(state.collaterValue);\n  const _borrowCapacity = Big(state.borrowCapacity);\n  const _availableToBorrow = Big(state.availableToBorrow);\n\n  if (type === \"Collateral\") {\n    _collaterValue = Big(amount || 0)\n      .mul(state.asset.price)\n      .add(_collaterValue);\n  }\n  if (type === \"Withdraw\") {\n    _collaterValue = _collaterValue.minus(\n      Big(amount || 0).mul(state.asset.price)\n    );\n  }\n  _borrowCapacity = _collaterValue.mul(\n    state.asset.borrowCollateralFactor / 100\n  );\n  _availableToBorrow = Big(_borrowCapacity).minus(\n    state.borrowedBalanceUsd || 0\n  );\n\n  cb({\n    collaterValue: _collaterValue.toString(),\n    borrowCapacity: _borrowCapacity.toString(),\n    availableToBorrow: _availableToBorrow.toString(),\n    userLiquidationUsd: _collaterValue\n      .mul(state.asset.liquidateCollateralFactor / 100)\n      .toString(),\n  });\n};\n\nconst onAddAction = ({ amount, type }) => {\n  const _actions = state.actions;\n  _actions.push({\n    amount,\n    type,\n    asset: state.asset,\n  });\n\n  State.update({\n    actions: _actions,\n    showDialog: false,\n  });\n};\n\nreturn (\n  <StyledContainer>\n    <StyledWrapper style={{ width: 728 }}>\n      <StyledFlex style={{ marginBottom: 36, justifyContent: \"space-between\" }}>\n        <StyledFlex style={{ gap: 20 }}>\n          <StyledSvg style={{ cursor: \"pointer\" }} onClick={onBack}>\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"7\"\n              height=\"12\"\n              viewBox=\"0 0 7 12\"\n              fill=\"none\"\n            >\n              <path d=\"M6 11L1 6L6 1\" stroke=\"white\" stroke-linecap=\"round\" />\n            </svg>\n          </StyledSvg>\n          <StyledFlex style={{ gap: 14 }}>\n            <Widget\n              src=\"bluebiu.near/widget/Lending.CompoundV3.Bridge.Asset\"\n              props={{\n                size: \"big\",\n                icon: data.baseToken.icon,\n                curChain,\n              }}\n            />\n            <StyledFlex\n              style={{\n                flexDirection: \"column\",\n                alignItems: \"flex-start\",\n                gap: 5,\n              }}\n            >\n              <StyledFlex\n                style={{\n                  gap: 8,\n                }}\n              >\n                <StyledFont\n                  style={{ color: \"#FFF\", fontSize: 22, fontWeight: 700 }}\n                >\n                  {Big(state.borrowedBalanceUsd || 0).gt(0) ? (\n                    <>\n                      {state.borrowArr[0] || 0}.\n                      <span style={{ color: \"#979ABE\" }}>\n                        {state.borrowArr[1] || \"0000\"}\n                      </span>\n                    </>\n                  ) : (\n                    <>\n                      {state.balanceArr[0] || 0}.\n                      <span style={{ color: \"#979ABE\" }}>\n                        {state.balanceArr[1] || \"0000\"}\n                      </span>\n                    </>\n                  )}\n                </StyledFont>\n                <StyledFont\n                  style={{ color: \"#FFF\", fontSize: 22, fontWeight: 700 }}\n                >\n                  {data.baseToken.symbol}\n                </StyledFont>\n              </StyledFlex>\n              <StyledFont style={{ color: \"#979ABE\" }}>\n                <Widget\n                  src=\"bluebiu.near/widget/Utils.FormatAmount\"\n                  props={{\n                    amount: Big(state.borrowedBalanceUsd || 0).gt(0)\n                      ? state.borrowedBalanceUsd\n                      : state.balanceUsd,\n                    prev: \"$\",\n                  }}\n                />\n              </StyledFont>\n            </StyledFlex>\n          </StyledFlex>\n        </StyledFlex>\n\n        <StyledFlex style={{ gap: 20 }}>\n          {Big(state.balance || 0).gt(0) && (\n            <>\n              {\" \"}\n              <StyledFlex\n                style={{\n                  flexDirection: \"column\",\n                  alignItems: \"flex-end\",\n                  gap: 5,\n                }}\n              >\n                <StyledFont style={{ color: \"#00D395\", fontSize: 16 }}>\n                  Supplying\n                </StyledFont>\n                <StyledFont\n                  style={{ color: \"#FFF\", fontSize: 16, fontWeight: 700 }}\n                >\n                  {state.supplyApr}% Net APR\n                </StyledFont>\n              </StyledFlex>{\" \"}\n              <StyledWithraw\n                disabled={state.loading}\n                onClick={() => {\n                  if (state.loading) return;\n                  State.update({\n                    showDialog: true,\n                    type: \"Withraw\",\n                    asset: {\n                      ...data.baseToken,\n                      walletBalance: state.balance,\n                      walletBalanceUsd: state.balanceUsd,\n                    },\n                  });\n                }}\n              >\n                Withraw\n              </StyledWithraw>\n            </>\n          )}\n          {Big(state.borrowedBalanceUsd || 0).gt(0) && (\n            <>\n              {\" \"}\n              <StyledFlex\n                style={{\n                  flexDirection: \"column\",\n                  alignItems: \"flex-end\",\n                  gap: 5,\n                }}\n              >\n                <StyledFont style={{ color: \"#7945FF\", fontSize: 16 }}>\n                  Borrowing\n                </StyledFont>\n                <StyledFont\n                  style={{ color: \"#FFF\", fontSize: 16, fontWeight: 700 }}\n                >\n                  {state.borrowApr}% Net APR\n                </StyledFont>\n              </StyledFlex>{\" \"}\n              <StyledWithraw\n                disabled={state.loading}\n                style={{ borderColor: \"#7945FF\", color: \"#7945FF\" }}\n                onClick={() => {\n                  if (state.loading) return;\n                  State.update({\n                    showDialog: true,\n                    type: \"Repay\",\n                    asset: {\n                      ...data.baseToken,\n                      walletBalance: state.borrowedBalance,\n                      walletBalanceUsd: state.borrowedBalanceUsd,\n                    },\n                  });\n                }}\n              >\n                Repay\n              </StyledWithraw>\n            </>\n          )}\n        </StyledFlex>\n      </StyledFlex>\n\n      <StyledWrapper\n        style={{\n          marginBottom: 20,\n          height: 252,\n          borderRadius: 16,\n          border: \"1px solid #373A53\",\n          backgroundColor: \"#2E3142\",\n        }}\n      >\n        <StyledWrapper\n          style={{\n            paddingTop: 25,\n            paddingRight: 20,\n            paddingBottom: 14,\n            paddingLeft: 20,\n            borderBottom: \"1px solid #373A53\",\n          }}\n        >\n          <StyledFont\n            style={{\n              marginBottom: 18,\n              color: \"#FFF\",\n              fontSize: 18,\n              fontWeight: 600,\n            }}\n          >\n            {data.baseToken.symbol} Wallet Balance\n          </StyledFont>\n          <StyledFlex\n            style={{ marginBottom: 30, justifyContent: \"space-between\" }}\n          >\n            <StyledFlex style={{ gap: 14 }}>\n              <Widget\n                src=\"bluebiu.near/widget/Lending.CompoundV3.Bridge.Asset\"\n                props={{\n                  size: \"medium\",\n                  icon: data.baseToken.icon,\n                  curChain,\n                }}\n              />\n              <StyledFont\n                style={{ color: \"#FFF\", fontSize: 16, fontWeight: 500 }}\n              >\n                {data.baseToken.symbol}\n              </StyledFont>\n            </StyledFlex>\n            <StyledFlex\n              style={{\n                flexDirection: \"column\",\n                alignItems: \"flex-end\",\n                gap: 3,\n              }}\n            >\n              <StyledFont\n                style={{ color: \"#FFF\", fontSize: 16, fontWeight: 500 }}\n              >\n                <Widget\n                  src=\"bluebiu.near/widget/Utils.FormatAmount\"\n                  props={{\n                    amount: state.walletBalance,\n                  }}\n                />\n              </StyledFont>\n              <StyledFont style={{ color: \"#979ABE\", fontSize: 12 }}>\n                <Widget\n                  src=\"bluebiu.near/widget/Utils.FormatAmount\"\n                  props={{\n                    amount: state.walletBalanceUsd,\n                    prev: \"$\",\n                  }}\n                />\n              </StyledFont>\n            </StyledFlex>\n          </StyledFlex>\n          <StyledFlex style={{ justifyContent: \"space-between\" }}>\n            <StyledFlex style={{ gap: 10 }}>\n              <StyledFont style={{ color: \"#979ABE\", fontSize: 14 }}>\n                Net Supply APR\n              </StyledFont>\n              <StyledFont style={{ color: \"#FFF\", fontSize: 16 }}>\n                {state.supplyApr}%\n              </StyledFont>\n            </StyledFlex>\n            <StyledFlex style={{ gap: 10 }}>\n              <StyledFont style={{ color: \"#979ABE\", fontSize: 14 }}>\n                Net Borrow APR\n              </StyledFont>\n              <StyledFont style={{ color: \"#FFF\", fontSize: 16 }}>\n                {state.borrowApr}%\n              </StyledFont>\n            </StyledFlex>\n          </StyledFlex>\n        </StyledWrapper>\n        <StyledFlex\n          style={{\n            gap: 18,\n            padding: 20,\n          }}\n        >\n          <StyledButton\n            className=\"supply\"\n            disabled={Big(state.borrowedBalanceUsd || 0).gt(0) || state.loading}\n            onClick={() => {\n              if (Big(state.borrowedBalanceUsd || 0).gt(0) || state.loading)\n                return;\n              State.update({\n                showDialog: true,\n                type: \"Supply\",\n                asset: {\n                  ...data.baseToken,\n                  walletBalance: state.walletBalance,\n                  walletBalanceUsd: state.walletBalanceUsd,\n                },\n              });\n            }}\n          >\n            {Big(state.borrowedBalanceUsd || 0).gt(0) && (\n              <>\n                <StyledTips>\n                  Must repay full {data.baseToken.symbol} borrowing\n                </StyledTips>\n                <StyledSvg>\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"14\"\n                    height=\"14\"\n                    viewBox=\"0 0 14 14\"\n                    fill=\"none\"\n                  >\n                    <circle cx=\"7\" cy=\"7\" r=\"6.5\" stroke=\"#979ABE\" />\n                    <path\n                      d=\"M7 7L7 10.5\"\n                      stroke=\"#979ABE\"\n                      stroke-width=\"1.4\"\n                      stroke-linecap=\"round\"\n                    />\n                    <circle cx=\"7\" cy=\"4.375\" r=\"0.875\" fill=\"#979ABE\" />\n                  </svg>\n                </StyledSvg>\n              </>\n            )}\n            Supply\n          </StyledButton>\n          <StyledButton\n            className=\"borrow\"\n            disabled={\n              Big(state.balance || 0).gt(0) ||\n              Big(state.borrowCapacity || 0).eq(0) ||\n              state.loading\n            }\n            onClick={() => {\n              if (\n                Big(state.balance || 0).gt(0) ||\n                Big(state.borrowCapacity || 0).eq(0) ||\n                state.loading\n              )\n                return;\n              State.update({\n                showDialog: true,\n                type: \"Borrow\",\n                asset: {\n                  ...data.baseToken,\n                  walletBalance: Big(state.availableToBorrow)\n                    .div(data.baseToken.price)\n                    .toString(),\n                  walletBalanceUsd: state.availableToBorrow,\n                },\n              });\n            }}\n          >\n            {Big(state.balance || 0).gt(0) && (\n              <>\n                <StyledTips>\n                  Must Withdraw Full {data.baseToken.symbol} Balance\n                </StyledTips>\n                <StyledSvg>\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"14\"\n                    height=\"14\"\n                    viewBox=\"0 0 14 14\"\n                    fill=\"none\"\n                  >\n                    <circle cx=\"7\" cy=\"7\" r=\"6.5\" stroke=\"#979ABE\" />\n                    <path\n                      d=\"M7 7L7 10.5\"\n                      stroke=\"#979ABE\"\n                      stroke-width=\"1.4\"\n                      stroke-linecap=\"round\"\n                    />\n                    <circle cx=\"7\" cy=\"4.375\" r=\"0.875\" fill=\"#979ABE\" />\n                  </svg>\n                </StyledSvg>\n              </>\n            )}\n            Borrow\n          </StyledButton>\n        </StyledFlex>\n      </StyledWrapper>\n      <StyledWrapper\n        style={{\n          // gap: 18,\n          paddingTop: 25,\n          paddingRight: 20,\n          paddingBottom: 40,\n          paddingLeft: 20,\n          borderRadius: 16,\n          border: \"1px solid #373A53\",\n          backgroundColor: \"#2E3142\",\n        }}\n      >\n        <StyledFont\n          style={{\n            marginBottom: 18,\n            color: \"#FFF\",\n            fontSize: 18,\n            fontWeight: 600,\n          }}\n        >\n          Collateral Assets\n        </StyledFont>\n        <StyledFlex style={{ flexDirection: \"column\", gap: 20, width: \"100%\" }}>\n          {data.collateralAssets?.map((asset) => (\n            <StyledFlex style={{ gap: 14, width: \"100%\" }} key={asset.address}>\n              <Widget\n                src=\"bluebiu.near/widget/Lending.CompoundV3.Bridge.Asset\"\n                props={{\n                  size: \"medium\",\n                  icon: asset.icon,\n                  curChain,\n                }}\n              />\n              <StyledWrapper style={{ flex: 1 }}>\n                <StyledFlex\n                  style={{ justifyContent: \"space-between\", gap: 10 }}\n                >\n                  <StyledFont\n                    style={{ color: \"#FFF\", fontSize: 14, fontWeight: 500 }}\n                  >\n                    {asset.symbol}\n                  </StyledFont>\n                  <StyledDashed />\n                  <StyledFont\n                    style={{ color: \"#FFF\", fontSize: 14, fontWeight: 500 }}\n                  >\n                    <Widget\n                      src=\"bluebiu.near/widget/Utils.FormatAmount\"\n                      props={{\n                        amount: state.collateralBalances[asset.address].balance,\n                      }}\n                    />\n                  </StyledFont>\n                </StyledFlex>\n                <StyledFlex style={{ justifyContent: \"space-between\" }}>\n                  <StyledFont style={{ color: \"#979ABE\", fontSize: 12 }}>\n                    <Widget\n                      src=\"bluebiu.near/widget/Utils.FormatAmount\"\n                      props={{\n                        amount:\n                          state.collateralBalances[asset.address].walletBalance,\n                        digits: 4,\n                      }}\n                    />{\" \"}\n                    in wallet\n                  </StyledFont>\n                  <StyledFont style={{ color: \"#979ABE\", fontSize: 12 }}>\n                    <Widget\n                      src=\"bluebiu.near/widget/Utils.FormatAmount\"\n                      props={{\n                        amount:\n                          state.collateralBalances[asset.address].balanceUsd,\n                        digits: 2,\n                        prev: \"$\",\n                      }}\n                    />\n                  </StyledFont>\n                </StyledFlex>\n              </StyledWrapper>\n              <StyledFlex style={{ gap: 10 }}>\n                <StyledOperationButton\n                  disabled={\n                    Big(\n                      state.collateralBalances[asset.address].walletBalance || 0\n                    ).eq(0) || state.loading\n                  }\n                  onClick={() => {\n                    if (\n                      Big(\n                        state.collateralBalances[asset.address].walletBalance ||\n                          0\n                      ).eq(0) ||\n                      state.loading\n                    )\n                      return;\n                    State.update({\n                      showDialog: true,\n                      type: \"Collateral\",\n                      asset: {\n                        ...asset,\n                        walletBalance:\n                          state.collateralBalances[asset.address].walletBalance,\n                        walletBalanceUsd:\n                          state.collateralBalances[asset.address]\n                            .walletBalanceUsd,\n                      },\n                    });\n                  }}\n                >\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"10\"\n                    height=\"10\"\n                    viewBox=\"0 0 10 10\"\n                    fill=\"none\"\n                  >\n                    <path d=\"M1 5L9 5\" stroke=\"#FFF\" stroke-linecap=\"round\" />\n                    <path d=\"M5 1L5 9\" stroke=\"#FFF\" stroke-linecap=\"round\" />\n                  </svg>\n                </StyledOperationButton>\n                <StyledOperationButton\n                  disabled={\n                    Big(\n                      state.collateralBalances[asset.address].balance || 0\n                    ).eq(0) || state.loading\n                  }\n                  onClick={() => {\n                    if (\n                      Big(\n                        state.collateralBalances[asset.address].balance || 0\n                      ).eq(0) ||\n                      state.loading\n                    )\n                      return;\n                    const _collaterBalanceUsd =\n                      state.collateralBalances[asset.address].balanceUsd;\n\n                    let _balanceUsd = Big(0);\n                    if (Big(state.borrowedBalanceUsd).eq(0)) {\n                      _balanceUsd = Big(_collaterBalanceUsd);\n                    } else {\n                      const _capacity = Big(_collaterBalanceUsd).mul(\n                        asset.borrowCollateralFactor / 100\n                      );\n                      const _otherCapacity = Big(\n                        state.userBorrowCapacityUsd\n                      ).minus(_capacity);\n\n                      const _diff = Big(state.borrowedBalanceUsd).minus(\n                        _otherCapacity\n                      );\n\n                      _balanceUsd = Big(_collaterBalanceUsd).minus(\n                        _diff.div(asset.borrowCollateralFactor / 100)\n                      );\n                    }\n                    _balanceUsd = _balanceUsd.lt(0) ? Big(0) : _balanceUsd;\n\n                    State.update({\n                      showDialog: true,\n                      type: \"Withdraw\",\n                      asset: {\n                        ...asset,\n                        walletBalance: _balanceUsd.div(asset.price).toString(),\n                        walletBalanceUsd: _balanceUsd.toString(),\n                      },\n                    });\n                  }}\n                >\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"10\"\n                    height=\"2\"\n                    viewBox=\"0 0 10 2\"\n                    fill=\"none\"\n                  >\n                    <path d=\"M1 1L9 1\" stroke=\"#FFF\" stroke-linecap=\"round\" />\n                  </svg>\n                </StyledOperationButton>\n              </StyledFlex>\n            </StyledFlex>\n          ))}\n        </StyledFlex>\n      </StyledWrapper>\n    </StyledWrapper>\n    <StyledWrapper style={{ width: 486 }}>\n      <StyledFlex style={{ gap: 5 }}>\n        <StyledFont style={{ color: \"#979ABE\" }}>Liquidation Risk</StyledFont>\n        <Widget\n          src=\"bluebiu.near/widget/Lending.CompoundV3.Bridge.Range\"\n          props={{\n            value: Big(state.collaterValue || 0).eq(0)\n              ? 0\n              : Big(state.liquidationPoint || 0)\n                  .div(state.collaterValue)\n                  .mul(100)\n                  .toFixed(0),\n          }}\n        />\n      </StyledFlex>\n      <StyledFlex\n        style={{ marginTop: 16, marginBottom: 40, justifyContent: \"flex-end\" }}\n      >\n        <StyledFont style={{ color: \"#979ABE\", fontSize: 12 }}>\n          Borrow Capacity\n        </StyledFont>\n      </StyledFlex>\n      <StyledWrapper style={{ position: \"relative\", marginBottom: 20 }}>\n        <StyledSvg>\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"488\"\n            height=\"160\"\n            viewBox=\"0 0 488 160\"\n            fill=\"none\"\n          >\n            <path\n              d=\"M179.632 1H479C483.418 1 487 4.58172 487 9V151C487 155.418 483.418 159 479 159H9C4.58172 159 1 155.418 1 151V9C1 4.58172 4.58172 1 9 1H12.1176\"\n              stroke=\"#373A53\"\n            />\n          </svg>\n        </StyledSvg>\n        <StyledWrapper\n          style={{\n            position: \"absolute\",\n            left: 0,\n            top: -10,\n            right: 0,\n            bottom: 0,\n          }}\n        >\n          <StyledWrapper style={{ marginBottom: 13, paddingLeft: 17 }}>\n            <StyledFont\n              style={{ color: \"#FFF\", fontSize: 18, fontWeight: 600 }}\n            >\n              Position Summary\n            </StyledFont>\n          </StyledWrapper>\n          <StyledFlex\n            style={{\n              paddingRight: 15,\n              paddingLeft: 15,\n              flexDirection: \"column\",\n              justifyContent: \"flex-start\",\n              gap: 12,\n            }}\n          >\n            <StyledFlex\n              style={{ width: \"100%\", justifyContent: \"space-between\" }}\n            >\n              <StyledFont style={{ color: \"#979ABE\" }}>\n                Collateral Value\n              </StyledFont>\n              <StyledFlex style={{ gap: 8 }}>\n                <StyledFont style={{ color: \"#FFF\" }}>\n                  <Widget\n                    src=\"bluebiu.near/widget/Utils.FormatAmount\"\n                    props={{\n                      amount: state.collaterValue,\n                      prev: \"$\",\n                    }}\n                  />\n                </StyledFont>\n                {/* <StyledFont style={{ color: \"#979ABE\" }}>USDC</StyledFont> */}\n              </StyledFlex>\n            </StyledFlex>\n            <StyledFlex\n              style={{ width: \"100%\", justifyContent: \"space-between\" }}\n            >\n              <StyledFont style={{ color: \"#979ABE\" }}>\n                Liquidation Point\n              </StyledFont>\n              <StyledFlex style={{ gap: 8 }}>\n                <StyledFont style={{ color: \"#FFF\" }}>\n                  <Widget\n                    src=\"bluebiu.near/widget/Utils.FormatAmount\"\n                    props={{\n                      amount: state.liquidationPoint,\n                      prev: \"$\",\n                    }}\n                  />\n                </StyledFont>\n                {/* <StyledFont style={{ color: \"#979ABE\" }}>USDC</StyledFont> */}\n              </StyledFlex>\n            </StyledFlex>\n            <StyledFlex\n              style={{ width: \"100%\", justifyContent: \"space-between\" }}\n            >\n              <StyledFont style={{ color: \"#979ABE\" }}>\n                Borrow Capacity\n              </StyledFont>\n              <StyledFlex style={{ gap: 8 }}>\n                <StyledFont style={{ color: \"#FFF\" }}>\n                  <Widget\n                    src=\"bluebiu.near/widget/Utils.FormatAmount\"\n                    props={{\n                      amount: state.borrowCapacity,\n                      prev: \"$\",\n                    }}\n                  />\n                </StyledFont>\n                {/* <StyledFont style={{ color: \"#979ABE\" }}>USDC</StyledFont> */}\n              </StyledFlex>\n            </StyledFlex>\n            <StyledFlex\n              style={{ width: \"100%\", justifyContent: \"space-between\" }}\n            >\n              <StyledFont style={{ color: \"#979ABE\" }}>\n                Available to Borrow\n              </StyledFont>\n              <StyledFlex style={{ gap: 8 }}>\n                <StyledFont style={{ color: \"#FFF\" }}>\n                  <Widget\n                    src=\"bluebiu.near/widget/Utils.FormatAmount\"\n                    props={{\n                      amount: state.availableToBorrow,\n                      prev: \"$\",\n                    }}\n                  />\n                </StyledFont>\n                {/* <StyledFont style={{ color: \"#979ABE\" }}>USDC</StyledFont> */}\n              </StyledFlex>\n            </StyledFlex>\n          </StyledFlex>\n        </StyledWrapper>\n      </StyledWrapper>\n      {!!state.actions.length && (\n        <StyledWrapper\n          style={{\n            borderRadius: 16,\n            border: \"1px solid #373A53\",\n            backgroundColor: \"#2E3142\",\n            padding: 20,\n          }}\n        >\n          <StyledFlex\n            style={{ marginBottom: 20, justifyContent: \"space-between\" }}\n          >\n            <StyledFont\n              style={{ color: \"#FFF\", fontSize: 18, fontWeight: 600 }}\n            >\n              {state.actions.length} Pending Actions\n            </StyledFont>\n            <StyledFont\n              style={{\n                color: \"#FF51AF\",\n                fontSize: 14,\n                cursor: state.loading ? \"not-allowed\" : \"pointer\",\n                opacity: state.loading ? 0.6 : 1,\n              }}\n              onClick={() => {\n                if (state.loading) return;\n                State.update({\n                  actions: [],\n                });\n              }}\n            >\n              Clear all\n            </StyledFont>\n          </StyledFlex>\n          <StyledFlex\n            style={{\n              flexDirection: \"column\",\n              justifyContent: \"flex-start\",\n            }}\n          >\n            {state.actions?.map((action, i) => (\n              <StyledFlex\n                key={i + Math.random()}\n                style={{\n                  width: \"100%\",\n                  justifyContent: \"space-between\",\n                  height: 60,\n                  paddingRight: 20,\n                  paddingLeft: 15,\n                  borderRadius: 8,\n                  backgroundColor: \"#252734\",\n                }}\n              >\n                <StyledFlex style={{ gap: 14 }}>\n                  <Widget\n                    src=\"bluebiu.near/widget/Lending.CompoundV3.Bridge.Asset\"\n                    props={{\n                      size: \"small\",\n                      icon: action.asset.icon,\n                      curChain,\n                    }}\n                  />\n                  <StyledFont style={{ color: \"#FFF\" }}>\n                    {action.type} {action.asset.symbol}\n                  </StyledFont>\n                </StyledFlex>\n                <StyledFlex style={{ gap: 20 }}>\n                  <StyledFlex\n                    style={{\n                      flexDirection: \"column\",\n                      justifyContent: \"flex-start\",\n                      gap: 3,\n                    }}\n                  >\n                    <StyledFont style={{ color: \"#FFF\", fontWeight: 500 }}>\n                      <Widget\n                        src=\"bluebiu.near/widget/Utils.FormatAmount\"\n                        props={{\n                          amount: action.amount,\n                        }}\n                      />\n                    </StyledFont>\n                    <StyledFont style={{ color: \"#979ABE\", fontSize: 12 }}>\n                      <Widget\n                        src=\"bluebiu.near/widget/Utils.FormatAmount\"\n                        props={{\n                          amount: Big(action.amount)\n                            .mul(action.asset.price)\n                            .toString(),\n                          prev: \"$\",\n                        }}\n                      />\n                    </StyledFont>\n                  </StyledFlex>\n                  <StyledSvg\n                    style={{\n                      cursor: state.loading ? \"not-allowed\" : \"pointer\",\n                    }}\n                    onClick={() => {\n                      if (state.loading) return;\n                      const _actions = state.actions;\n                      _actions.splice(i, 1);\n                      State.update({\n                        actions: _actions,\n                      });\n                    }}\n                  >\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      width=\"12\"\n                      height=\"12\"\n                      viewBox=\"0 0 12 12\"\n                      fill=\"none\"\n                    >\n                      <path\n                        d=\"M7.73284 6.00004L11.7359 1.99701C12.0368 1.696 12.0882 1.2593 11.8507 1.0219L10.9779 0.14909C10.7404 -0.0884124 10.3043 -0.0363122 10.0028 0.264491L6.00013 4.26743L1.99719 0.264591C1.69619 -0.036712 1.25948 -0.0884125 1.02198 0.14939L0.149174 1.0223C-0.0882277 1.2594 -0.0368271 1.6961 0.264576 1.99711L4.26761 6.00004L0.264576 10.0033C-0.0363271 10.3041 -0.0884277 10.7405 0.149174 10.978L1.02198 11.8509C1.25948 12.0884 1.69619 12.0369 1.99719 11.736L6.00033 7.73276L10.0029 11.7354C10.3044 12.037 10.7405 12.0884 10.978 11.8509L11.8508 10.978C12.0882 10.7405 12.0368 10.3041 11.736 10.0029L7.73284 6.00004Z\"\n                        fill=\"#979ABE\"\n                      />\n                    </svg>\n                  </StyledSvg>\n                </StyledFlex>\n              </StyledFlex>\n            ))}\n            <StyledFlex style={{ width: \"100%\" }}>\n              <StyledButton\n                disabled={!state.actions.length || state.loading}\n                onClick={() => {\n                  if (!state.actions.length || state.loading) return;\n                  State.update({\n                    loading: true,\n                  });\n                }}\n                className=\"pending\"\n              >\n                {state.loading && (\n                  <div>\n                    <Widget\n                      src=\"bluebiu.near/widget/0vix.LendingLoadingIcon\"\n                      props={{\n                        size: 16,\n                      }}\n                    />\n                  </div>\n                )}\n                {state.loading\n                  ? `${state.actions.length} Pending Transactions`\n                  : \" Submit Transactions\"}\n              </StyledButton>\n            </StyledFlex>\n          </StyledFlex>\n        </StyledWrapper>\n      )}\n    </StyledWrapper>\n    {state.showDialog && (\n      <Widget\n        src=\"bluebiu.near/widget/Lending.CompoundV3.Bridge.Dialog\"\n        props={{\n          asset: state.asset,\n          type: state.type,\n          collaterValue: state.collaterValue,\n          borrowCapacity: state.borrowCapacity,\n          availableToBorrow: state.availableToBorrow,\n          borrowApr: state.borrowApr,\n          supplyApr: state.supplyApr,\n          cometAddress: data.address,\n          account,\n          toast,\n          addable: state.addable,\n          onAmountChange,\n          onAddAction,\n          onClose: () => {\n            State.update({\n              showDialog: false,\n            });\n          },\n        }}\n      />\n    )}\n    <Widget\n      src={dexConfig.handler}\n      props={{\n        ...dexConfig,\n        actions: state.actions,\n        update: state.loading,\n        comet: data,\n        wethAddress,\n        account,\n        onCancel: () => {\n          State.update({\n            loading: false,\n          });\n        },\n        onLoad: (data) => {\n          console.log(\"estimate gas\", data);\n          if (!data.gas) {\n            State.update({\n              loading: false,\n            });\n            toast?.fail({ title: \"Estimate gas error\" });\n            return;\n          }\n          let toastId = toast?.loading({\n            title: `Confirming...`,\n          });\n          Ethers.provider()\n            .getSigner()\n            .sendTransaction(data.unsignedTx)\n            .then((tx) => {\n              toast?.dismiss(toastId);\n              toastId = toast?.loading({\n                title: `Pending...`,\n              });\n              tx.wait()\n                .then((res) => {\n                  const { status, transactionHash } = res;\n                  const _actions = [];\n                  state.actions.forEach((action, i) => {\n                    _actions.push({\n                      amount: action.amount,\n                      type: action.type,\n                      tokenSymbol: action.asset.symbol,\n                      tokenAddress: action.asset.address,\n                      tokenPriceKey: action.asset.priceKey || \"\",\n                    });\n                  });\n                  addAction?.({\n                    type: \"Lending\",\n                    template: dexConfig.name,\n                    add: false,\n                    status,\n                    transactionHash,\n                    extra_data: { lending_actions: _actions },\n                  });\n                  if (status === 1) {\n                    updateInfo();\n                    toast?.dismiss(toastId);\n                    toast?.success({\n                      title: `Request successed!`,\n                      tx: transactionHash,\n                      chainId: curChain.chainId,\n                    });\n                    State.update({\n                      loading: false,\n                      actions: [],\n                    });\n                  } else {\n                    throw new Error();\n                  }\n                })\n                .catch((err) => {\n                  toast?.dismiss(toastId);\n                  toast?.fail({\n                    title: \"Request Failed!\",\n                  });\n                  State.update({\n                    loading: false,\n                  });\n                });\n            })\n            .catch((err) => {\n              toast?.dismiss(toastId);\n              toast?.fail({\n                title: \"Request Failed!\",\n                text: err?.message?.includes(\"user rejected transaction\")\n                  ? \"User rejected transaction\"\n                  : \"\",\n              });\n              State.update({ loading: false });\n            });\n        },\n      }}\n    />\n  </StyledContainer>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bluebiu.near/widget/Lending.CompoundV3.Bridge.Detail", "fact_widget_deployments_id": "ebcad7b072de43acb81bf3ac83436780", "inserted_timestamp": "2024-04-13T12:38:24.882Z", "modified_timestamp": "2024-04-13T12:38:24.882Z", "__row_index": 0}