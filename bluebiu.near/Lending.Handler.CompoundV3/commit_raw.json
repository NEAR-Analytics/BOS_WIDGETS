{"tx_hash": "5oJ4EBibwahiuCeESeUunxTufFvadr4nVLhKdiNqEf3b", "action_id_social": "DYTEsJzLjNiwnbebBTn4bxRspgUN8w4WrD1pJtrYBrJZ-0-widget", "block_id": 116675750, "block_timestamp": "2024-04-12T09:55:28.697Z", "signer_id": "bluebiu.near", "widget_name": "Lending.Handler.CompoundV3", "source_code": "const COMET_ABI = [\n  {\n    inputs: [\n      { internalType: \"address\", name: \"asset\", type: \"address\" },\n      { internalType: \"uint256\", name: \"amount\", type: \"uint256\" },\n    ],\n    name: \"withdraw\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"asset\", type: \"address\" },\n      { internalType: \"uint256\", name: \"amount\", type: \"uint256\" },\n    ],\n    name: \"supply\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"manager\", type: \"address\" },\n      { internalType: \"bool\", name: \"isAllowed\", type: \"bool\" },\n    ],\n    name: \"allow\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"\", type: \"address\" },\n      { internalType: \"address\", name: \"\", type: \"address\" },\n    ],\n    name: \"isAllowed\",\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\nconst BULKER_ABI = [\n  {\n    inputs: [\n      { internalType: \"bytes32[]\", name: \"actions\", type: \"bytes32[]\" },\n      { internalType: \"bytes[]\", name: \"data\", type: \"bytes[]\" },\n    ],\n    name: \"invoke\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n];\n\nconst {\n  update,\n  actions,\n  bulkerActionCodes,\n  comet,\n  bulkerAddress,\n  wethAddress,\n  account,\n  onLoad,\n  onCancel,\n} = props;\n\nconst TYPE_MAP = {\n  Collateral: \"Supply\",\n  Borrow: \"Withdraw\",\n  Repay: \"Supply\",\n  Supply: \"Supply\",\n  Withdraw: \"Withdraw\",\n};\n\nuseEffect(() => {\n  if (!update || !actions.length) return;\n  const CometContract = new ethers.Contract(\n    comet.address,\n    COMET_ABI,\n    Ethers.provider().getSigner()\n  );\n  const BulkerContract = new ethers.Contract(\n    bulkerAddress,\n    BULKER_ABI,\n    Ethers.provider().getSigner()\n  );\n\n  const getActionAmount = (action) =>\n    Big(action.amount).mul(Big(10).pow(action.asset.decimals)).toFixed(0);\n\n  const buildTx = ({ contract, method, params, options }) => {\n    const _contract = contract === \"comet\" ? CometContract : BulkerContract;\n    const createTx = (gas) => {\n      const _gas = gas ? Big(gas.toString()).mul(1.2).toFixed(0) : 4000000;\n      _contract.populateTransaction[method](...params, {\n        ...options,\n        gasLimit: _gas,\n      })\n        .then((res) => {\n          onLoad({\n            gas: _gas,\n            unsignedTx: {\n              ...res,\n              gasLimit: gas,\n            },\n            isError: false,\n          });\n        })\n        .catch((err) => {\n          console.log(err);\n          onLoad({});\n        });\n    };\n    _contract.estimateGas[method](...params, options)\n      .then((gas) => {\n        createTx(gas);\n      })\n      .catch((err) => {\n        console.log(\"estimateGas\", err);\n        createTx();\n      });\n  };\n\n  if (actions.length === 1) {\n    const action = actions[0];\n    const actionType = TYPE_MAP[action.type];\n    const _amount = getActionAmount(action);\n    if (!action.asset.isNative) {\n      buildTx({\n        contract: \"comet\",\n        method: actionType === \"Supply\" ? \"supply\" : \"withdraw\",\n        params: [action.asset.address, _amount],\n        options: {},\n      });\n      return;\n    }\n  }\n\n  const checkAllowed = (cb) => {\n    CometContract.isAllowed(account, bulkerAddress)\n      .then((res) => {\n        if (res) {\n          cb?.();\n        } else {\n          CometContract.allow(bulkerAddress, true)\n            .then((tx) => {\n              tx.wait()\n                .then((res) => {\n                  if (res.status === 1) {\n                    cb?.();\n                  }\n                })\n                .catch(() => {\n                  onCancel?.();\n                });\n            })\n            .catch((err) => {\n              onCancel?.();\n            });\n        }\n      })\n      .catch((err) => {\n        console.log(\"check allowed err\", err);\n        onCancel?.();\n      });\n  };\n\n  checkAllowed(() => {\n    try {\n      const codes = [];\n      const callDatas = [];\n      const value = Big(0);\n      actions.forEach((action) => {\n        const _amount = getActionAmount(action);\n        const actionType = TYPE_MAP[action.type];\n        if (actionType === \"Supply\") {\n          codes.push(\n            action.asset.isNative\n              ? bulkerActionCodes.ACTION_SUPPLY_NATIVE_TOKEN\n              : bulkerActionCodes.ACTION_SUPPLY_ASSET\n          );\n          if (action.asset.isNative) value = value.add(_amount);\n        }\n        if (actionType === \"Withdraw\") {\n          codes.push(\n            action.asset.isNative\n              ? bulkerActionCodes.ACTION_WITHDRAW_NATIVE_TOKEN\n              : bulkerActionCodes.ACTION_WITHDRAW_ASSET\n          );\n        }\n\n        const callData = ethers.utils.defaultAbiCoder.encode(\n          action.asset.isNative\n            ? [\"address\", \"address\", \"uint\"]\n            : [\"address\", \"address\", \"address\", \"uint\"],\n          action.asset.isNative\n            ? [comet.address, account, _amount]\n            : [comet.address, account, action.asset.address, _amount]\n        );\n        callDatas.push(callData);\n      });\n\n      buildTx({\n        contract: \"bulker\",\n        method: \"invoke\",\n        params: [codes, callDatas],\n        options: { value: value.toFixed(0) },\n      });\n    } catch (err) {\n      console.log(\"build tx error\");\n    }\n  });\n}, [update]);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bluebiu.near/widget/Lending.Handler.CompoundV3", "fact_widget_deployments_id": "1c6df3414d5424be9dbadeb4b230e332", "inserted_timestamp": "2024-04-12T11:35:20.004Z", "modified_timestamp": "2024-04-12T11:35:20.004Z", "__row_index": 0}