{"tx_hash": "EKH7jEvj4qXufMdKnMvUfGMvgKTfTTiha6DNF8dVy5Mw", "action_id_social": "E1kQ29F88eGFBgGTkFMNg3iAPw4MawiAykq9sPFgUrRD-0-widget", "block_id": 104318159, "block_timestamp": "2023-10-27T13:37:44.257Z", "signer_id": "bluebiu.near", "widget_name": "Mantle.TokenInput", "source_code": "const arrowDown = (\n  <svg\n    width=\"17\"\n    height=\"9\"\n    viewBox=\"0 0 17 9\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M1 1L8.5 7.5L16 1\"\n      stroke=\"#13DDC8\"\n      stroke-width=\"2\"\n      stroke-linecap=\"round\"\n    />\n  </svg>\n);\n\nconst ArrowDownWrapper = styled.div`\n  position: absolute;\n  right: 8px;\n  top: 4px;\n  @media (max-width: 900px) {\n    transform: scale(0.75);\n  }\n`;\n\nconst Wrapper = styled.div`\n  .seperator {\n    background: #2c4a4b;\n    border: 1px solid #2c4a4b;\n    height: 1px;\n  }\n  .frcs {\n    display: flex;\n    align-items: center;\n    justify-content: start;\n  }\n  .frcc {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n  .frcb {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  }\n  .value-wrapper {\n    color: #4f7375;\n    font-family: Gantari;\n    font-size: 14px;\n    font-weight: 500;\n    line-height: 17px;\n    letter-spacing: 0em;\n    .balance-value {\n      text-decoration: underline;\n      cursor: pointer;\n    }\n    padding-top: 10px;\n  }\n  .token-field {\n    cursor: pointer;\n    background: linear-gradient(0deg, #1f3a3e, #1f3a3e),\n      linear-gradient(0deg, #2c4a4b, #2c4a4b);\n    border: 1px solid #2c4a4b;\n    border-radius: 23px;\n    position: relative;\n    width: 159px;\n    padding: 6px;\n    flex-shrink: 0;\n    .token-icon {\n      height: 31px;\n      width: 31px;\n      border-radius: 100%;\n    }\n    .token-symbol {\n      font-family: Gantari;\n\n      padding-left: 8px;\n      font-size: 18px;\n      font-weight: 500;\n      line-height: 22px;\n      letter-spacing: 0em;\n      text-align: left;\n      color: white;\n    }\n    @media (max-width: 900px) {\n      width: 115px;\n\n      .token-icon {\n        height: 22px;\n        width: 22px;\n        border-radius: 100%;\n      }\n\n      .token-symbol {\n        font-family: Gantari;\n\n        padding-left: 8px;\n        line-height: 22px;\n        color: white;\n        font-size: 15px;\n        font-weight: 500;\n        line-height: 18px;\n        letter-spacing: 0em;\n        text-align: left;\n      }\n    }\n  }\n`;\n\nconst Seperator = styled.div`\n  background: #2c4a4b;\n  border: 1px solid #2c4a4b;\n  height: 1px;\n  width: 327px;\n  position: absolute;\n  bottom: 0px;\n`;\n\nconst Input = styled.input`\n  background: none;\n  color: #fff;\n  text-align: left;\n  border: none;\n  outline: none;\n  font-style: normal;\n  font-weight: 600;\n  font-size: 26px;\n  line-height: 19px;\n  padding: 8px 0px 8px 8px;\n  width: 100%;\n  ::placeholder {\n    color: #40435c;\n  }\n`;\n\nconst {\n  config,\n  curToken,\n  amount,\n  onChangeAmount,\n  readOnly,\n  sender,\n  onTokenSelect,\n  loadInputBalance,\n  selectedDex,\n} = props;\n\nState.init({\n  balanceLoaded: false,\n  balance: \"0\",\n});\n\nconsole.log(\"balance: \", balance);\n\nState.init({\n  showModal: false,\n});\n\nconst handleShow = () => {\n  State.update({\n    showModal: true,\n  });\n};\n\nconsole.log(\"amount1111: \", amount, curToken);\n\nconst utils = {\n  balanceFormated: () => {\n    if (!curToken.address) return \"-\";\n    if (!state.balanceLoaded) return \"Loading\";\n    if (state.balance === \"0\") return \"0\";\n    console.log(\"state.balance formate: \", state.balance);\n    const balance = Big(state.balance).div(Big(10).pow(curToken.decimals));\n    if (Big(balance).lt(0.0)) return \"<0.0001\";\n    return Big(balance).toFixed(4);\n  },\n};\n\n// console.log(\"state.balance: \", state.balance);\nconst AccessKey = Storage.get(\n  \"AccessKey\",\n  \"guessme.near/widget/ZKEVMWarmUp.add-to-quest-card\"\n);\nif (!state.priceMap) {\n  const price = fetch(\n    \"https://test-api.dapdap.net/get-token-price-by-dapdap\"\n    , { headers: { Authorization: AccessKey }, }).body;\n\n  State.update({\n    priceMap: JSON.parse(price),\n  });\n}\n\nconsole.log(\"state.priceMap: \", state.priceMap);\n\nconst displayValue =\n  !state.priceMap || !state.priceMap[curToken.symbol] || !amount\n    ? \"-\"\n    : Big(state.priceMap[curToken.symbol]).times(amount).toFixed(4);\n\nreturn (\n  <Wrapper>\n    <div className=\"frcb\">\n      <div\n        className=\"frcs\"\n        style={{\n          position: \"relative\",\n        }}\n      >\n        <Input\n          type=\"text\"\n          placeholder=\"0\"\n          value={amount}\n          onChange={(e) => {\n            onChangeAmount && onChangeAmount(e.target.value);\n          }}\n          readOnly={!!readOnly}\n        />\n        {!readOnly && <Seperator></Seperator>}\n      </div>\n\n      <div className=\"token-field\" onClick={handleShow}>\n        <div\n          className=\"frcs\"\n          style={{\n            width: \"100%\",\n          }}\n        >\n          <img src={curToken.icon} class=\"token-icon\" />\n          <div class=\"token-symbol\">{curToken.symbol}</div>\n          <ArrowDownWrapper>{arrowDown}</ArrowDownWrapper>\n        </div>\n      </div>\n    </div>\n\n    <div className=\"frcb value-wrapper\">\n      <div>\u2248 ${displayValue}</div>\n\n      <div>\n        Balance: &nbsp;{\" \"}\n        <span\n          style={{\n            textDecoration: readOnly ? \"none\" : \"underline\",\n            cursor: readOnly ? \"default\" : \"pointer\",\n          }}\n          className=\"balance-value\"\n          onClick={() => {\n            if (readOnly || Big(state.balance || \"0\").eq(0)) return;\n\n            const balance = Big(state.balance)\n              .div(Big(10).pow(curToken.decimals))\n              .toFixed();\n\n            onChangeAmount && onChangeAmount(balance == \"0\" ? \"0\" : balance);\n          }}\n        >\n          {utils.balanceFormated()}\n        </span>\n      </div>\n    </div>\n\n    <Widget\n      src=\"bluebiu.near/widget/Mantle.getBalance\"\n      props={{\n        address: curToken.address,\n        onLoad: (data) => {\n          State.update({\n            balance: data.balance,\n            balanceLoaded: data.loaded,\n          });\n          loadInputBalance &&\n            loadInputBalance(\n              Big(data.balance).div(Big(10).pow(curToken.decimals)).toFixed()\n            );\n        },\n        isNative: curToken.symbol === config.NATIVE_TOKEN_SYMBOL,\n      }}\n    ></Widget>\n\n    {state.showModal && (\n      <Widget\n        src=\"bluebiu.near/widget/Mantle.TokenList\"\n        props={{\n          config,\n          sender,\n          selectedDex,\n          curToken: curToken,\n          onClose: () => {\n            State.update({\n              showModal: false,\n            });\n          },\n          onClick: onTokenSelect,\n          hidden: !state.showModal,\n        }}\n      />\n    )}\n  </Wrapper>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bluebiu.near/widget/Mantle.TokenInput", "fact_widget_deployments_id": "66eb6b74cef12b39a2734f53c8faef6a", "inserted_timestamp": "2023-10-27T15:35:44.571Z", "modified_timestamp": "2023-10-27T15:35:44.571Z", "__row_index": 0}