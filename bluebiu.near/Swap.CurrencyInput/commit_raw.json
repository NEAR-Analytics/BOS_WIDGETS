{"tx_hash": "E5yihf4csoFrFGUXd2V8o7vf9RVbooYPSCBV9JBH9MEB", "action_id_social": "FcjjWbqp9paE1pDPd77eyqx6vjUqWDjPUHrbLZnz8rq7-0-widget", "block_id": 121882180, "block_timestamp": "2024-06-24T09:32:34.450Z", "signer_id": "bluebiu.near", "widget_name": "Swap.CurrencyInput", "source_code": "// styled area\n\nconst Wrapper = styled.div`\n  padding: 16px 16px 14px;\n  border-radius: 12px;\n  border: 1px solid #373a53;\n  transition: 0.3s;\n`;\nconst InputBox = styled.div`\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n  gap: 8px;\n`;\nconst InputField = styled.div`\n  flex-shrink: 1;\n  flex-grow: 1;\n`;\nconst InputWarpper = styled.div`\n  height: 46px;\n  padding: 10px 0px;\n  @media (max-width: 900px) {\n    height: 40px;\n  }\n`;\nconst Input = styled.input`\n  font-size: 32px;\n  width: 100%;\n  color: var(--agg-text-color, #fff);\n  font-weight: 500;\n  background-color: transparent;\n  outline: none;\n  border: none;\n  height: 40px;\n  vertical-align: bottom;\n  @media (max-width: 900px) {\n    font-size: 20px;\n    height: 34px;\n  }\n`;\nconst Value = styled.div`\n  padding-top: 10px;\n  color: var(--agg-fourth-color, #979abe);\n  font-size: 14px;\n  line-height: 16px;\n`;\nconst CurrencyField = styled.div``;\n\nconst CurrencySelect = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  border-radius: 8px;\n  border: 1px solid var(--agg-border-active-color, #373a53);\n  background: var(--agg-bg-color, #2e3142);\n  padding: 3px 10px 3px 8px;\n\n  cursor: pointer;\n\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  cursor: pointer;\n  svg {\n    color: var(--agg-text-color, #979abe);\n  }\n  @media (max-width: 768px) {\n    svg {\n      width: 12px !important;\n    }\n    padding: 0px 12px 0px 6px;\n  }\n`;\nconst CurrencyWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  height: 32px;\n`;\nconst CurrencyIcon = styled.img`\n  width: 22px;\n  height: 22px;\n  border-radius: 50%;\n  @media (max-width: 768px) {\n    width: 22px;\n    height: 22px;\n  }\n`;\nconst CurrencySymbol = styled.div`\n  font-size: 18px;\n  color: var(--agg-text-color, #fff);\n  margin-left: 7px;\n  white-space: nowrap;\n  .fz-14 {\n    font-size: 14px;\n  }\n  @media (max-width: 768px) {\n    width: calc(100% - 30px);\n    text-overflow: ellipsis;\n    overflow: hidden;\n    font-size: 14px;\n    .fz-14 {\n      font-size: 12px;\n    }\n  }\n`;\nconst Amount = styled.div`\n  padding-top: 18px;\n  color: var(--agg-fourth-color, #979abe);\n  font-size: 14px;\n  line-height: 16px;\n  text-align: right;\n  cursor: pointer;\n`;\nconst Label = styled.div`\n  color: var(--agg-text-color, #979abe);\n  font-family: Gantari;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n`;\n\n// styled area end\n\nState.init({\n  balance: \"0\",\n});\n\nconst utils = {\n  balanceFormated: () => {\n    if (!props.currency?.address) return \"-\";\n    if (state.balance === \"0\" || Big(state.balance).eq(0)) return \"0\";\n    if (Big(state.balance).lt(0.0001)) return \"<0.0001\";\n    return Big(state.balance).toFixed(4, 0);\n  },\n};\n\nconst handlers = {\n  handleDisplayCurrencySelect: () => {\n    props?.onCurrencySelectOpen();\n  },\n  handleInputChange: (ev) => {\n    if (isNaN(Number(ev.target.value))) return;\n    props.onAmountChange?.(ev.target.value.replace(/\\s+/g, \"\"));\n  },\n};\n\nconst tokenPrice =\n  props.prices[props.currency.priceKey || props.currency.symbol];\n\nreturn (\n  <Wrapper\n    style={{\n      background: !state.focus\n        ? \"var(--agg-bg-color,#2e3142)\"\n        : \"var(--agg-bg-color,#1B1E27)\",\n      borderColor: !state.focus\n        ? \"var(--agg-border-color,#373a53)\"\n        : \"var(--agg-border-active-color,#1B1E27)\",\n    }}\n  >\n    <Widget\n      src=\"bluebiu.near/widget/Arbitrum.Swap.CurrencyBalance\"\n      props={{\n        address: props.currency?.address,\n        updateTokenBalance: props.updateTokenBalance,\n        account: props.account,\n        onLoad: (balance) => {\n          State.update({\n            balance: ethers.utils.formatUnits(balance, props.currency.decimals),\n          });\n          props?.onUpdateCurrencyBalance(balance);\n        },\n      }}\n    />\n    <Label>{props.type === \"in\" ? \"You pay\" : \"You receive\"}</Label>\n    <InputBox>\n      {\" \"}\n      <InputField>\n        <InputWarpper>\n          <Input\n            value={props.amount}\n            disabled={props.disabled}\n            onChange={handlers.handleInputChange}\n            onFocus={() => {\n              State.update({\n                focus: true,\n              });\n            }}\n            onBlur={() => {\n              State.update({\n                focus: false,\n              });\n            }}\n            placeholder=\"0\"\n          />\n        </InputWarpper>\n        <Value>\n          \u2248{\" \"}\n          {tokenPrice && props.amount\n            ? `$${Big(props.amount || 0)\n                .mul(tokenPrice)\n                .toFixed(2)}`\n            : \"-\"}\n        </Value>\n      </InputField>\n      <CurrencyField>\n        <CurrencySelect onClick={handlers.handleDisplayCurrencySelect}>\n          <CurrencyWrapper>\n            {props.currency?.icon && <CurrencyIcon src={props.currency.icon} />}\n            <CurrencySymbol>\n              {props.currency.symbol || (\n                <span className=\"fz-14\">Select a token</span>\n              )}\n            </CurrencySymbol>\n          </CurrencyWrapper>\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"12\"\n            height=\"7\"\n            viewBox=\"0 0 12 7\"\n            fill=\"none\"\n          >\n            <path\n              d=\"M1 1L6 5L11 1\"\n              stroke=\"#979ABE\"\n              strokeWidth=\"2\"\n              strokeLinecap=\"round\"\n            />\n          </svg>\n        </CurrencySelect>\n        {props.account && !props.chainIdNotSupport && (\n          <Amount\n            onClick={() => {\n              const formatedBalance = utils.balanceFormated();\n              if (![\"-\", \"Loading\", \"0\"].includes(formatedBalance))\n                props.onAmountChange?.(state.balance);\n            }}\n          >\n            Balance:{\" \"}\n            <span\n              style={{\n                textDecoration: props.disabled ? \"none\" : \"underline\",\n              }}\n            >\n              {utils.balanceFormated()}\n            </span>\n          </Amount>\n        )}\n      </CurrencyField>\n    </InputBox>\n  </Wrapper>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bluebiu.near/widget/Swap.CurrencyInput", "fact_widget_deployments_id": "92be8d279f422598ba4bf449fabbbf51", "inserted_timestamp": "2024-06-24T10:54:23.231Z", "modified_timestamp": "2024-06-24T10:54:23.231Z", "__row_index": 8}