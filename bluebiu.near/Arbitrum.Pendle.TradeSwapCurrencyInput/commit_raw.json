{"tx_hash": "3eGTCZaC8f7pAk5BzSApZrxbsRwBQuAnSBGhJwtRW9G8", "action_id_social": "C9wuL74TB2pYNoQUmHw2Z1bjWom76HKvMZ7sW3jgr1vw-0-widget", "block_id": 101383672, "block_timestamp": "2023-09-18T06:30:12.007Z", "signer_id": "bluebiu.near", "widget_name": "Arbitrum.Pendle.TradeSwapCurrencyInput", "source_code": "// styled area\nconst Wrapper = styled.div`\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n  padding: 5px 0px;\n`;\nconst InputField = styled.div`\n  width: calc(100% - 160px);\n  margin-right: 8px;\n  @media (max-width: 768px) {\n    width: calc(100% - 115px);\n  }\n`;\nconst InputWarpper = styled.div`\n  height: 46px;\n  ${!props.disableInput && \"border-bottom: 1px solid #332c4b;\"}\n  padding: 10px 0px;\n  @media (max-width: 900px) {\n    height: 40px;\n  }\n`;\nconst Input = styled.input`\n  font-size: 26px;\n  color: #fff;\n  font-weight: 500;\n  background-color: transparent;\n  outline: none;\n  border: none;\n  height: 40px;\n  vertical-align: bottom;\n  @media (max-width: 900px) {\n    font-size: 20px;\n    height: 34px;\n  }\n`;\nconst Value = styled.div`\n  padding-top: 10px;\n  color: #4f5375;\n  font-size: 14px;\n  line-height: 16px;\n`;\nconst CurrencyField = styled.div`\n  min-width: 160px;\n  flex-shrink: 0;\n  @media (max-width: 768px) {\n    width: 115px;\n    min-width: 115px;\n  }\n`;\nconst CurrencySelect = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border: 1px solid #332c4b;\n  border-radius: 24px;\n  padding: 6px 12px 6px 6px;\n  cursor: pointer;\n  svg {\n    color: #82a7ff;\n  }\n  @media (max-width: 768px) {\n    svg {\n      width: 12px !important;\n    }\n    padding: 0px 12px 0px 6px;\n  }\n`;\nconst CurrencyWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  height: 32px;\n  @media (max-width: 768px) {\n    width: calc(100% - 12px);\n  }\n`;\nconst CurrencyIcon = styled.img`\n  width: 32px;\n  height: 32px;\n  border-radius: 50%;\n  @media (max-width: 768px) {\n    width: 22px;\n    height: 22px;\n  }\n`;\nconst CurrencySymbol = styled.div`\n  font-size: 18px;\n  color: #fff;\n  margin-left: 7px;\n  display: flex;\n  align-items: center;\n  gap: 6px;\n  .fz-14 {\n    font-size: 14px;\n  }\n\n  @media (max-width: 768px) {\n    width: calc(100% - 30px);\n    text-overflow: ellipsis;\n    overflow: hidden;\n    font-size: 14px;\n\n    .fz-14 {\n      font-size: 12px;\n    }\n  }\n`;\nconst Amount = styled.div`\n  padding-top: 10px;\n  color: #4f5375;\n  font-size: 14px;\n  line-height: 16px;\n  text-align: right;\n  cursor: pointer;\n`;\n// styled area end\n\nState.init({\n  balance: \"0\",\n  balanceLoaded: false,\n});\n\nconst utils = {\n  balanceFormated: () => {\n    if (!props.currency?.address) return \"-\";\n    if (!state.balanceLoaded) return \"Loading\";\n    if (state.balance === \"0\" || Big(state.balance).eq(0)) return \"0\";\n    if (Big(state.balance).lt(0.0001)) return \"<0.0001\";\n    return Big(state.balance).toFixed(4, 0);\n  },\n  valueFormated: (amount) => {\n    const prices = Storage.privateGet(\"tokensPrice\");\n    const price = prices[props.currency?.symbol];\n    if (!price) return \"-\";\n    const value = Big(price).mul(amount || 0);\n    if (value.lt(0.01)) return value.toPrecision(1);\n    return value.toFixed(2);\n  },\n};\n\nconst handlers = {\n  handleDisplayCurrencySelect: () => {\n    if (props.disableSelect) return;\n    State.update({\n      balanceLoaded: false,\n    });\n    props?.onCurrencySelectOpen();\n  },\n  handleInputChange: (ev) => {\n    if (isNaN(Number(ev.target.value))) return;\n    props.onAmountChange?.(ev.target.value);\n  },\n};\nreturn (\n  <Wrapper>\n    {(props.updateTokenBalance ||\n      !state.balanceLoaded ||\n      props.swapping === false) &&\n      !props.disableInput && (\n        <Widget\n          src=\"bluebiu.near/widget/Arbitrum.Swap.CurrencyBalance\"\n          props={{\n            address: props.currency?.address,\n            onLoad: (balance) => {\n              State.update({\n                balance: ethers.utils.formatUnits(\n                  balance,\n                  props.currency.decimals\n                ),\n                balanceLoaded: true,\n              });\n              props?.onUpdateCurrencyBalance(balance);\n            },\n          }}\n        />\n      )}\n    <InputField>\n      <InputWarpper>\n        <Input\n          value={props.amount}\n          disabled={props.disableInput}\n          onChange={handlers.handleInputChange}\n          placeholder=\"0\"\n          autoFocus={!props.disableAutoFocus && !props.disableInput}\n        />\n      </InputWarpper>\n      <Value>\u2248 ${utils.valueFormated(props.amount)}</Value>\n    </InputField>\n    <CurrencyField>\n      <CurrencySelect onClick={handlers.handleDisplayCurrencySelect}>\n        <CurrencyWrapper>\n          {props.currency?.icon && <CurrencyIcon src={props.currency.icon} />}\n          <CurrencySymbol>\n            {props.currency.symbol || (\n              <span className=\"fz-14\">Select a token</span>\n            )}\n          </CurrencySymbol>\n        </CurrencyWrapper>\n        {!props.disableSelect && (\n          <Widget src=\"bluebiu.near/widget/Arbitrum.Swap.ArrowIcon\" />\n        )}\n      </CurrencySelect>\n      {!props.disableInput && (\n        <Amount\n          onClick={() => {\n            const formatedBalance = utils.balanceFormated();\n            if (![\"-\", \"Loading\", \"0\"].includes(formatedBalance))\n              props.onAmountChange?.(state.balance);\n          }}\n        >\n          Balance: <span>{utils.balanceFormated()}</span>\n        </Amount>\n      )}\n    </CurrencyField>\n  </Wrapper>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bluebiu.near/widget/Arbitrum.Pendle.TradeSwapCurrencyInput", "fact_widget_deployments_id": "6be90255d0b24a22c4ec45e4729b3068", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 4}