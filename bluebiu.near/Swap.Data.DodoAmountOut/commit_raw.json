{"tx_hash": "AZwctyAuihwsUeK1wAxxW9nYpZyhhft4ZrkkQ3mNgM2F", "action_id_social": "DSaCkFyfMjELTGmPB7scyUhgmHpNfEEpCsbxnzW6QbtB-0-widget", "block_id": 111663087, "block_timestamp": "2024-01-30T04:42:12.564Z", "signer_id": "bluebiu.near", "widget_name": "Swap.Data.DodoAmountOut", "source_code": "const {\n  updater,\n  routerAddress,\n  DVMFactory,\n  DPPFactory,\n  DSPFactory,\n  wethAddress,\n  inputCurrency,\n  outputCurrency,\n  inputCurrencyAmount,\n  onLoad,\n  slippage,\n  account,\n  multicall,\n  multicallAddress,\n} = props;\n\nuseEffect(() => {\n  if (!updater) return;\n\n  if (\n    (!inputCurrency.address && !inputCurrency.isNative) ||\n    (!outputCurrency.address && !outputCurrency.isNative) ||\n    !inputCurrencyAmount\n  ) {\n    return;\n  }\n\n  const wrapType =\n    inputCurrency.isNative && outputCurrency.address === wethAddress\n      ? 1\n      : inputCurrency.address === wethAddress && outputCurrency.isNative\n      ? 2\n      : 0;\n\n  if (wrapType) {\n    onLoad({\n      outputCurrencyAmount: inputCurrencyAmount,\n      noPair: false,\n    });\n    return;\n  }\n\n  const amount = ethers.utils.parseUnits(\n    Big(inputCurrencyAmount || 0).toFixed(inputCurrency.decimals),\n    inputCurrency.decimals\n  );\n\n  const path = [\n    inputCurrency.address === \"native\"\n      ? \"0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE\"\n      : inputCurrency.address,\n    outputCurrency.address === \"native\"\n      ? \"0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE\"\n      : outputCurrency.address,\n  ];\n  const getAmountsOut = () => {\n    const deadline = Math.ceil(Date.now() / 1000) + 60;\n    asyncFetch(\n      `https://api.dodoex.io/route-service/frontend-v2/getdodoroute?fromTokenAddress=${\n        path[0]\n      }&toTokenAddress=${\n        path[1]\n      }&fromAmount=${amount}&userAddr=${\"0x0000000000000000000000000000000000000000\"}&estimateGas=false&chainId=${\n        inputCurrency.chainId\n      }&slippage=${\n        slippage || 0.5\n      }&deadLine=${deadline}&accessToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjMxMzg2NDM1MzQ2NDM0NjMzMzM0NjMzMTM4MzgzMjJkMzA2NTY1Mzg2NjM3NjIzMjMwMzI2NDY0MzQzOTJkMzE2NjM1MzIzNTM2MzMzNzJkMzE2NjYxMzQzMDMwMmQzMTM4NjQzNTM0NjQzNDYzMzMzNDY0MzIzNjY2MzIiLCJzIjo0MCwiaWF0IjoxNzA2NTI1MjQ4LCJleHAiOjE3MDY2MTE2NDh9.S-BMaYcu4K4m0Q54hqRCgsKOu8qs4-Qbqp9rONohzoI`\n    )\n      .then((res) => {\n        const data = res.body?.data;\n        if (data?.resAmount) {\n          const wallet = Ethers.provider().getSigner();\n          const returnData = {\n            outputCurrencyAmount: data.resAmount,\n            priceImpact: data.priceImpact,\n            noPair: false,\n            routerAddress: data.targetApproveAddr,\n          };\n          wallet\n            .estimateGas({\n              to: data.to,\n              data: data.data,\n              value: inputCurrency.isNative ? amount : 0,\n            })\n            .then((gasRes) => {\n              const tx = {\n                from: account,\n                to: data.to,\n                value: inputCurrency.isNative ? amount : 0,\n                data: data.data,\n                gasLimit: gasRes,\n              };\n              onLoad({\n                ...returnData,\n                gas: gasRes,\n                unsignedTx: tx,\n              });\n            })\n            .catch((err) => {\n              onLoad(returnData);\n            });\n        } else {\n          onLoad({\n            outputCurrencyAmount: \"\",\n            noPair: true,\n          });\n        }\n      })\n      .catch((err) => {\n        onLoad({\n          outputCurrencyAmount: \"\",\n          noPair: true,\n        });\n      });\n  };\n\n  const getTransaction = ({ amountOut, priceImpact }) => {};\n\n  getAmountsOut();\n}, [updater]);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bluebiu.near/widget/Swap.Data.DodoAmountOut", "fact_widget_deployments_id": "5184112ba3ed257667e50e5e576b4aed", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}