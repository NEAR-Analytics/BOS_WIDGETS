{"tx_hash": "WkGDCw7YBYvGhXdx6km29KvwrQC4c5d3fhECzm4mr2N", "action_id_social": "9wSRH6KH7oyc4jgd8woE7BbE2FyGXbog7B7Kayre3jLB-0-widget", "block_id": 101911280, "block_timestamp": "2023-09-25T08:44:16.710Z", "signer_id": "bluebiu.near", "widget_name": "Arbitrum.Pendle.DashBoard.BoardPoolAction", "source_code": "\nconst { marketAddress, user, allAssetsData, onLoad } = props;\n\nconst routerAddress = \"0xAdB09F65bd90d19e3148D9ccb693F3161C6DB3E8\";\n\nconst abi = [\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"market\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address\",\n                name: \"user\",\n                type: \"address\",\n            },\n        ],\n        name: \"getUserMarketInfo\",\n        outputs: [\n            {\n                components: [\n                    {\n                        components: [\n                            {\n                                internalType: \"address\",\n                                name: \"token\",\n                                type: \"address\",\n                            },\n                            {\n                                internalType: \"uint256\",\n                                name: \"amount\",\n                                type: \"uint256\",\n                            },\n                        ],\n                        internalType: \"struct IPActionInfoStatic.TokenAmount\",\n                        name: \"lpBalance\",\n                        type: \"tuple\",\n                    },\n                    {\n                        components: [\n                            {\n                                internalType: \"address\",\n                                name: \"token\",\n                                type: \"address\",\n                            },\n                            {\n                                internalType: \"uint256\",\n                                name: \"amount\",\n                                type: \"uint256\",\n                            },\n                        ],\n                        internalType: \"struct IPActionInfoStatic.TokenAmount\",\n                        name: \"ptBalance\",\n                        type: \"tuple\",\n                    },\n                    {\n                        components: [\n                            {\n                                internalType: \"address\",\n                                name: \"token\",\n                                type: \"address\",\n                            },\n                            {\n                                internalType: \"uint256\",\n                                name: \"amount\",\n                                type: \"uint256\",\n                            },\n                        ],\n                        internalType: \"struct IPActionInfoStatic.TokenAmount\",\n                        name: \"syBalance\",\n                        type: \"tuple\",\n                    },\n                    {\n                        components: [\n                            {\n                                internalType: \"address\",\n                                name: \"token\",\n                                type: \"address\",\n                            },\n                            {\n                                internalType: \"uint256\",\n                                name: \"amount\",\n                                type: \"uint256\",\n                            },\n                        ],\n                        internalType: \"struct IPActionInfoStatic.TokenAmount[]\",\n                        name: \"unclaimedRewards\",\n                        type: \"tuple[]\",\n                    },\n                ],\n                internalType: \"struct IPActionInfoStatic.UserMarketInfo\",\n                name: \"res\",\n                type: \"tuple\",\n            },\n        ],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n];\n\nState.init({\n    resdata: [],\n});\n\nconst requestUserMarketInfo = () => {\n\n    const signer = Ethers.provider().getSigner();\n\n    const contract = new ethers.Contract(routerAddress, abi, signer);\n\n    return contract.callStatic\n        .getUserMarketInfo(marketAddress, user)\n        .then((res) => {\n            State.update({\n                resdata: res,\n            })\n        })\n        .catch((error) => {\n            console.log(error);\n        });\n};\nrequestUserMarketInfo();\n\nconst matchedData = state.resdata[3] && allAssetsData.length > 0 ? state.resdata[3].map((item) => {\n    const matchedItem = allAssetsData.find((data) => data.address.toLowerCase() === item[0].toLowerCase());\n    const dQuantity = item[1].toString();\n    const product = matchedItem ? matchedItem.price.usd * dQuantity / Math.pow(10, matchedItem.decimals) : 0;\n    return product;\n}) : [];\nconst total = matchedData.reduce((sum, value) => sum + value, 0);\nconst formattedTotal = isNaN(total) ? 0 : total;\n\nreturn (\n    <>\n        {formattedTotal ? (\n            formattedTotal < 0.01 ? '<$0.01' : formattedTotal\n        ) : (\n            '-'\n        )}\n    </>\n);\n\n\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bluebiu.near/widget/Arbitrum.Pendle.DashBoard.BoardPoolAction", "fact_widget_deployments_id": "212a3745d5ebc7a1b000f98ff4f145a6", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}