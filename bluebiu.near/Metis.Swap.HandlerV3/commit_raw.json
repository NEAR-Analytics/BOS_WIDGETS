{"tx_hash": "Gt2WQrSnu8qiN4kpk1igfM7m2QENT4FcenAESaaEnXtW", "action_id_social": "JAkqu1skR84rDoPMojystVZZhWS5DLSka6M4AwCZuA5e-0-widget", "block_id": 104524504, "block_timestamp": "2023-10-30T08:40:33.099Z", "signer_id": "bluebiu.near", "widget_name": "Metis.Swap.HandlerV3", "source_code": "const swapRouterV3Abi = [\n  {\n    inputs: [\n      { internalType: \"address\", name: \"_factoryV2\", type: \"address\" },\n      { internalType: \"address\", name: \"factoryV3\", type: \"address\" },\n      { internalType: \"address\", name: \"_positionManager\", type: \"address\" },\n      { internalType: \"address\", name: \"_WETH9\", type: \"address\" },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    inputs: [],\n    name: \"WETH9\",\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"address\", name: \"token\", type: \"address\" }],\n    name: \"approveMax\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"address\", name: \"token\", type: \"address\" }],\n    name: \"approveMaxMinusOne\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"address\", name: \"token\", type: \"address\" }],\n    name: \"approveZeroThenMax\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"address\", name: \"token\", type: \"address\" }],\n    name: \"approveZeroThenMaxMinusOne\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"bytes\", name: \"data\", type: \"bytes\" }],\n    name: \"callPositionManager\",\n    outputs: [{ internalType: \"bytes\", name: \"result\", type: \"bytes\" }],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"bytes[]\", name: \"paths\", type: \"bytes[]\" },\n      { internalType: \"uint128[]\", name: \"amounts\", type: \"uint128[]\" },\n      { internalType: \"uint24\", name: \"maximumTickDivergence\", type: \"uint24\" },\n      { internalType: \"uint32\", name: \"secondsAgo\", type: \"uint32\" },\n    ],\n    name: \"checkOracleSlippage\",\n    outputs: [],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"bytes\", name: \"path\", type: \"bytes\" },\n      { internalType: \"uint24\", name: \"maximumTickDivergence\", type: \"uint24\" },\n      { internalType: \"uint32\", name: \"secondsAgo\", type: \"uint32\" },\n    ],\n    name: \"checkOracleSlippage\",\n    outputs: [],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          { internalType: \"bytes\", name: \"path\", type: \"bytes\" },\n          { internalType: \"address\", name: \"recipient\", type: \"address\" },\n          { internalType: \"uint256\", name: \"amountIn\", type: \"uint256\" },\n          {\n            internalType: \"uint256\",\n            name: \"amountOutMinimum\",\n            type: \"uint256\",\n          },\n        ],\n        internalType: \"struct IV3SwapRouter.ExactInputParams\",\n        name: \"params\",\n        type: \"tuple\",\n      },\n    ],\n    name: \"exactInput\",\n    outputs: [{ internalType: \"uint256\", name: \"amountOut\", type: \"uint256\" }],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          { internalType: \"address\", name: \"tokenIn\", type: \"address\" },\n          { internalType: \"address\", name: \"tokenOut\", type: \"address\" },\n          { internalType: \"uint24\", name: \"fee\", type: \"uint24\" },\n          { internalType: \"address\", name: \"recipient\", type: \"address\" },\n          { internalType: \"uint256\", name: \"amountIn\", type: \"uint256\" },\n          {\n            internalType: \"uint256\",\n            name: \"amountOutMinimum\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint160\",\n            name: \"sqrtPriceLimitX96\",\n            type: \"uint160\",\n          },\n        ],\n        internalType: \"struct IV3SwapRouter.ExactInputSingleParams\",\n        name: \"params\",\n        type: \"tuple\",\n      },\n    ],\n    name: \"exactInputSingle\",\n    outputs: [{ internalType: \"uint256\", name: \"amountOut\", type: \"uint256\" }],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          { internalType: \"bytes\", name: \"path\", type: \"bytes\" },\n          { internalType: \"address\", name: \"recipient\", type: \"address\" },\n          { internalType: \"uint256\", name: \"amountOut\", type: \"uint256\" },\n          { internalType: \"uint256\", name: \"amountInMaximum\", type: \"uint256\" },\n        ],\n        internalType: \"struct IV3SwapRouter.ExactOutputParams\",\n        name: \"params\",\n        type: \"tuple\",\n      },\n    ],\n    name: \"exactOutput\",\n    outputs: [{ internalType: \"uint256\", name: \"amountIn\", type: \"uint256\" }],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          { internalType: \"address\", name: \"tokenIn\", type: \"address\" },\n          { internalType: \"address\", name: \"tokenOut\", type: \"address\" },\n          { internalType: \"uint24\", name: \"fee\", type: \"uint24\" },\n          { internalType: \"address\", name: \"recipient\", type: \"address\" },\n          { internalType: \"uint256\", name: \"amountOut\", type: \"uint256\" },\n          { internalType: \"uint256\", name: \"amountInMaximum\", type: \"uint256\" },\n          {\n            internalType: \"uint160\",\n            name: \"sqrtPriceLimitX96\",\n            type: \"uint160\",\n          },\n        ],\n        internalType: \"struct IV3SwapRouter.ExactOutputSingleParams\",\n        name: \"params\",\n        type: \"tuple\",\n      },\n    ],\n    name: \"exactOutputSingle\",\n    outputs: [{ internalType: \"uint256\", name: \"amountIn\", type: \"uint256\" }],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"factory\",\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"factoryV2\",\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"token\", type: \"address\" },\n      { internalType: \"uint256\", name: \"amount\", type: \"uint256\" },\n    ],\n    name: \"getApprovalType\",\n    outputs: [\n      {\n        internalType: \"enum IApproveAndCall.ApprovalType\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          { internalType: \"address\", name: \"token0\", type: \"address\" },\n          { internalType: \"address\", name: \"token1\", type: \"address\" },\n          { internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" },\n          { internalType: \"uint256\", name: \"amount0Min\", type: \"uint256\" },\n          { internalType: \"uint256\", name: \"amount1Min\", type: \"uint256\" },\n        ],\n        internalType: \"struct IApproveAndCall.IncreaseLiquidityParams\",\n        name: \"params\",\n        type: \"tuple\",\n      },\n    ],\n    name: \"increaseLiquidity\",\n    outputs: [{ internalType: \"bytes\", name: \"result\", type: \"bytes\" }],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          { internalType: \"address\", name: \"token0\", type: \"address\" },\n          { internalType: \"address\", name: \"token1\", type: \"address\" },\n          { internalType: \"uint24\", name: \"fee\", type: \"uint24\" },\n          { internalType: \"int24\", name: \"tickLower\", type: \"int24\" },\n          { internalType: \"int24\", name: \"tickUpper\", type: \"int24\" },\n          { internalType: \"uint256\", name: \"amount0Min\", type: \"uint256\" },\n          { internalType: \"uint256\", name: \"amount1Min\", type: \"uint256\" },\n          { internalType: \"address\", name: \"recipient\", type: \"address\" },\n        ],\n        internalType: \"struct IApproveAndCall.MintParams\",\n        name: \"params\",\n        type: \"tuple\",\n      },\n    ],\n    name: \"mint\",\n    outputs: [{ internalType: \"bytes\", name: \"result\", type: \"bytes\" }],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n\n  {\n    inputs: [{ internalType: \"bytes[]\", name: \"data\", type: \"bytes[]\" }],\n    name: \"multicall\",\n    outputs: [{ internalType: \"bytes[]\", name: \"results\", type: \"bytes[]\" }],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"positionManager\",\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"token\", type: \"address\" },\n      { internalType: \"uint256\", name: \"value\", type: \"uint256\" },\n    ],\n    name: \"pull\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"refundETH\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"token\", type: \"address\" },\n      { internalType: \"uint256\", name: \"value\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"deadline\", type: \"uint256\" },\n      { internalType: \"uint8\", name: \"v\", type: \"uint8\" },\n      { internalType: \"bytes32\", name: \"r\", type: \"bytes32\" },\n      { internalType: \"bytes32\", name: \"s\", type: \"bytes32\" },\n    ],\n    name: \"selfPermit\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"token\", type: \"address\" },\n      { internalType: \"uint256\", name: \"nonce\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"expiry\", type: \"uint256\" },\n      { internalType: \"uint8\", name: \"v\", type: \"uint8\" },\n      { internalType: \"bytes32\", name: \"r\", type: \"bytes32\" },\n      { internalType: \"bytes32\", name: \"s\", type: \"bytes32\" },\n    ],\n    name: \"selfPermitAllowed\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"token\", type: \"address\" },\n      { internalType: \"uint256\", name: \"nonce\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"expiry\", type: \"uint256\" },\n      { internalType: \"uint8\", name: \"v\", type: \"uint8\" },\n      { internalType: \"bytes32\", name: \"r\", type: \"bytes32\" },\n      { internalType: \"bytes32\", name: \"s\", type: \"bytes32\" },\n    ],\n    name: \"selfPermitAllowedIfNecessary\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"token\", type: \"address\" },\n      { internalType: \"uint256\", name: \"value\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"deadline\", type: \"uint256\" },\n      { internalType: \"uint8\", name: \"v\", type: \"uint8\" },\n      { internalType: \"bytes32\", name: \"r\", type: \"bytes32\" },\n      { internalType: \"bytes32\", name: \"s\", type: \"bytes32\" },\n    ],\n    name: \"selfPermitIfNecessary\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"uint256\", name: \"amountIn\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"amountOutMin\", type: \"uint256\" },\n      { internalType: \"address[]\", name: \"path\", type: \"address[]\" },\n      { internalType: \"address\", name: \"to\", type: \"address\" },\n    ],\n    name: \"swapExactTokensForTokens\",\n    outputs: [{ internalType: \"uint256\", name: \"amountOut\", type: \"uint256\" }],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"uint256\", name: \"amountOut\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"amountInMax\", type: \"uint256\" },\n      { internalType: \"address[]\", name: \"path\", type: \"address[]\" },\n      { internalType: \"address\", name: \"to\", type: \"address\" },\n    ],\n    name: \"swapTokensForExactTokens\",\n    outputs: [{ internalType: \"uint256\", name: \"amountIn\", type: \"uint256\" }],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"token\", type: \"address\" },\n      { internalType: \"uint256\", name: \"amountMinimum\", type: \"uint256\" },\n      { internalType: \"address\", name: \"recipient\", type: \"address\" },\n    ],\n    name: \"sweepToken\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"token\", type: \"address\" },\n      { internalType: \"uint256\", name: \"amountMinimum\", type: \"uint256\" },\n    ],\n    name: \"sweepToken\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"token\", type: \"address\" },\n      { internalType: \"uint256\", name: \"amountMinimum\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"feeBips\", type: \"uint256\" },\n      { internalType: \"address\", name: \"feeRecipient\", type: \"address\" },\n    ],\n    name: \"sweepTokenWithFee\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"token\", type: \"address\" },\n      { internalType: \"uint256\", name: \"amountMinimum\", type: \"uint256\" },\n      { internalType: \"address\", name: \"recipient\", type: \"address\" },\n      { internalType: \"uint256\", name: \"feeBips\", type: \"uint256\" },\n      { internalType: \"address\", name: \"feeRecipient\", type: \"address\" },\n    ],\n    name: \"sweepTokenWithFee\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"int256\", name: \"amount0Delta\", type: \"int256\" },\n      { internalType: \"int256\", name: \"amount1Delta\", type: \"int256\" },\n      { internalType: \"bytes\", name: \"_data\", type: \"bytes\" },\n    ],\n    name: \"uniswapV3SwapCallback\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"uint256\", name: \"amountMinimum\", type: \"uint256\" },\n      { internalType: \"address\", name: \"recipient\", type: \"address\" },\n    ],\n    name: \"unwrapWETH9\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n\n  {\n    inputs: [\n      { internalType: \"uint256\", name: \"amountMinimum\", type: \"uint256\" },\n      { internalType: \"address\", name: \"recipient\", type: \"address\" },\n      { internalType: \"uint256\", name: \"feeBips\", type: \"uint256\" },\n      { internalType: \"address\", name: \"feeRecipient\", type: \"address\" },\n    ],\n    name: \"unwrapWETH9WithFee\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"uint256\", name: \"amountMinimum\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"feeBips\", type: \"uint256\" },\n      { internalType: \"address\", name: \"feeRecipient\", type: \"address\" },\n    ],\n    name: \"unwrapWETH9WithFee\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"uint256\", name: \"value\", type: \"uint256\" }],\n    name: \"wrapETH\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  { stateMutability: \"payable\", type: \"receive\" },\n];\nconst {\n  routerAddress,\n  wethAddress,\n  account,\n  inputCurrencyAmount,\n  inputCurrency,\n  outputCurrency,\n  fee,\n  swapping,\n  onSuccess,\n  onError,\n} = props;\nif (!swapping) return;\nconst expandToken = (value, decimals) => {\n  return new Big(value).mul(new Big(10).pow(decimals));\n};\nconst value = expandToken(inputCurrencyAmount, inputCurrency.decimals).toFixed(\n  0\n);\n\nconst signer = Ethers.provider().getSigner();\n\nconst abi = swapRouterV3Abi;\nconst iface = new ethers.utils.Interface(abi);\n\nconst deadline = new Big(Math.floor(Date.now() / 1000)).add(new Big(1800));\n\nconst tokenIn =\n  inputCurrency.address === \"native\" ? wethAddress : inputCurrency.address;\n\nconst tokenOut =\n  outputCurrency.address === \"native\" ? wethAddress : outputCurrency.address;\n\nconst options = {\n  gasLimit: 5000000,\n  value: inputCurrency.address === \"native\" ? value : \"0\",\n};\n\nconst inputs = [\n  {\n    tokenIn,\n    tokenOut,\n    fee: fee,\n    recipient:\n      outputCurrency.address === \"native\"\n        ? \"0x0000000000000000000000000000000000000000\"\n        : account,\n    deadline: deadline.toFixed(),\n    amountIn: value,\n    amountOutMinimum: \"0\",\n    sqrtPriceLimitX96: \"0\",\n  },\n];\n\nconst multicallParams = [];\nconst encodedDataCallSwap = iface.encodeFunctionData(\n  \"exactInputSingle\",\n  inputs\n);\n\nmulticallParams.push(encodedDataCallSwap);\n\nif (outputCurrency.address === \"native\") {\n  multicallParams.push(iface.encodeFunctionData(\"unwrapWETH9\", [\"0\", account]));\n}\n\nconst multicallContract = new ethers.Contract(routerAddress, abi, signer);\n\nmulticallContract\n  .multicall(multicallParams, options)\n  .then((res) => {\n    onSuccess(res);\n  })\n  .catch((err) => {\n    console.log(err);\n    onError(err);\n  });\n\nreturn \"\";\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bluebiu.near/widget/Metis.Swap.HandlerV3", "fact_widget_deployments_id": "0c3499c200caf0aab1a03c7346d67214", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 1}