{"tx_hash": "DyFhwq5Fn9Sbmc4mwtUufprZxiXWNGx1CZhvPhADxiJe", "action_id_social": "49sTRbTb66CyUmVz6KuPsF23rbgqi1Cp9D9hdyAGZKtP-0-widget", "block_id": 117653126, "block_timestamp": "2024-04-26T08:44:09.225Z", "signer_id": "bluebiu.near", "widget_name": "Blast.BridgeAuthority.HandlerSwap", "source_code": "const {\n  amount,\n  account,\n  currency,\n  routerAddress,\n  routerEthAddress,\n  target,\n  loading,\n  onSuccess,\n  onError,\n  quote,\n} = props;\nif (!loading) return \"\";\n\nconst {\n  getExtraData,\n} = VM.require('bluebiu.near/widget/Blast.BridgeAuthority.Util');\n\nconst L1BlastBridgeProxyAbi = [\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"_localToken\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"_remoteToken\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"_amount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"uint32\",\n        \"name\": \"_minGasLimit\",\n        \"type\": \"uint32\"\n      },\n      {\n        \"internalType\": \"bytes\",\n        \"name\": \"_extraData\",\n        \"type\": \"bytes\"\n      }\n    ],\n    \"name\": \"bridgeERC20\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n]\n\nconst L1WETHSwapAbi = [\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"wad\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"withdraw\",\n    \"outputs\": [],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n]\n\nconst L2BlastBridgeAbi = [\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"_localToken\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"_remoteToken\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"_amount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"uint32\",\n        \"name\": \"_minGasLimit\",\n        \"type\": \"uint32\"\n      },\n      {\n        \"internalType\": \"bytes\",\n        \"name\": \"_extraData\",\n        \"type\": \"bytes\"\n      }\n    ],\n    \"name\": \"bridgeERC20\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n]\n\nconst signer = Ethers.provider().getSigner()\nconst rawAmount = new Big(amount).mul(Math.pow(10, currency.decimals)).toString()\nif (target.id === 81457) {\n  let pRes, wethPRes\n  if (currency.symbol === 'WETH') {\n    const L1WETHSWAPContract = new ethers.Contract(\n      '0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2',\n      L1WETHSwapAbi,\n      signer\n    )\n\n    wethPRes = L1WETHSWAPContract.withdraw(rawAmount).then(tx => tx.wait())\n  }\n\n\n  // const L1BlastBridgeProxy = '0x3a05E5d33d7Ab3864D53aaEc93c8301C1Fa49115'\n  if (currency.isNative || wethPRes) {\n    const params = {\n      from: account,\n      to: routerAddress,\n      value: rawAmount,\n    }\n    if (wethPRes) {\n      pRes = wethPRes.then(() => {\n        return signer.sendTransaction(params).then(tx => {\n          return tx.wait()\n        })\n      })\n    } else {\n      pRes = signer.sendTransaction(params).then(tx => {\n        return tx.wait()\n      })\n    }\n    \n  } else {\n    const L1BridgeContract = new ethers.Contract(\n      routerAddress,\n      L1BlastBridgeProxyAbi,\n      signer\n    )\n\n    pRes = L1BridgeContract.bridgeERC20(\n      currency.address,\n      currency.targetAddress,\n      rawAmount,\n      800000,\n      getExtraData(amount),\n      {\n        // gasLimit: 100000\n      }\n    ).then(tx => tx.wait())\n  }\n\n  pRes.then(res => {\n    onSuccess(res);\n  }).catch(err => {\n    console.log('err:', err)\n    onError(err);\n  })\n\n\n\n} else {\n  const L2BlastBridge = '0x4300000000000000000000000000000000000005'\n\n  let pRes\n  let nonce, blockNumber\n  if (currency.isNative) {\n    const params = {\n      from: account,\n      to: L2BlastBridge,\n      value: rawAmount,\n    }\n\n    pRes = signer.sendTransaction(params).then(tx => {\n      nonce = tx.nonce\n      return tx.wait()\n    })\n  } else {\n    const L2BridgeContract = new ethers.Contract(\n      routerAddress,\n      L2BlastBridgeAbi,\n      signer\n    )\n\n    pRes = L2BridgeContract.bridgeERC20(\n      currency.address,\n      '0x6B175474E89094C44Da98b954EedeAC495271d0F',\n      rawAmount,\n      800000,\n      getExtraData(amount),\n      {\n        // gasLimit: 800000\n      }\n    ).then(tx => tx.wait())\n  }\n\n  pRes.then(res => {\n    blockNumber = res.blockNumber\n    // Storage.privateSet(res.transactionHash, {\n    //   nonce,\n    //   blockNumber,\n    // });\n    onSuccess(res);\n  }).catch(err => {\n    onError(err);\n  })\n\n}\n\n\nreturn \"\";", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bluebiu.near/widget/Blast.BridgeAuthority.HandlerSwap", "fact_widget_deployments_id": "bae8777367cab8355f01e383ab353818", "inserted_timestamp": "2024-04-26T10:42:16.910Z", "modified_timestamp": "2024-04-26T10:42:16.910Z", "__row_index": 4}