{"tx_hash": "3hBUePSqjRqC7QdWdCniGXGXrkx4qgW14WXbDJfGUa7L", "action_id_social": "7THx8ruFevx7eK2hf2FkmjBwzwpY6ZNP65mShGVbPov-0-widget", "block_id": 117522325, "block_timestamp": "2024-04-24T12:54:35.772Z", "signer_id": "bluebiu.near", "widget_name": "Base.Bridge.Index", "source_code": "const Wrapper = styled.div`\n  width: 560px;\n  margin: 0px auto 0px;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\nconst Panel = styled.div`\n  width: 100%;\n  border: 1px solid #373a53;\n  border-radius: 16px;\n  background-color: #262836;\n  padding: 20px;\n`;\n\nconst BridgeNameWapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 0 0 20px;\n  gap: 10px;\n`\n\nconst BridgeImg = styled.img`\n  width: 50px;\n  height: 50px;\n  border-radius: 100%;\n  display: block;\n`\n\nconst BridgeName = styled.div`\n  color: var(--chain-name-color);\n  font-size: 20px;\n`\n\nconst { connectProps, chain, mainnet, account, prices, currentChainId, bridgeImg } = props;\n\nif (!account) {\n  return (\n    <Widget\n      src=\"bluebiu.near/widget/Arbitrum.Swap.ConnectButton\"\n      props={{\n        ...connectProps,\n        chainId: chain.id,\n        chainName: chain.name,\n        isWrongNetwork: false,\n        account,\n      }}\n    />\n  );\n}\n\nif (currentChainId !== chain.id && currentChainId !== mainnet.id) {\n  return (\n    <Widget\n      src=\"bluebiu.near/widget/Arbitrum.Swap.ConnectButton\"\n      props={{\n        ...connectProps,\n        chainId: chain.id,\n        chainName: chain.name,\n        isWrongNetwork: true,\n        account,\n      }}\n    />\n  );\n}\n\nuseEffect(() => {\n  State.init({\n    displayNetwork: false,\n  });\n}, []);\n\nconst { tokens, amountOutFn, handlerSwap, handlerClaim, bridgeStorageKey, getTxStatus } = props;\n\nconst handleStargateTx = ({ hash, amount, price, from, to, currency }) => {\n  const txs =  (handlerClaim ? Storage.privateGet(bridgeStorageKey) : Storage.privateGet(\"stargate_txs\")) || {};\n  txs[hash] = {\n    amount,\n    symbol: currency.symbol,\n    price,\n    fromLogo: from.logo,\n    toLogo: to.logo,\n    time: Date.now(),\n    link: from.explorer + \"/tx/\" + hash,\n    hash: hash,\n    tokenLogo: currency.icon,\n    fromChainId: from.id,\n    toChainId: to.id,\n  };\n  \n  handlerClaim ? Storage.privateSet(bridgeStorageKey, txs) : Storage.privateSet(\"stargate_txs\", txs);\n};\n\n\nreturn (\n  <Wrapper>\n    <Panel>\n      {\n        bridgeImg && <BridgeNameWapper>\n          <BridgeImg src={bridgeImg} />\n          <BridgeName>Orbiter Finance</BridgeName>\n        </BridgeNameWapper>\n      }\n\n      <Widget\n        src=\"bluebiu.near/widget/Base.Bridge.Swap\"\n        props={{\n          chain,\n          mainnet,\n          tokens,\n          amountOutFn,\n          chainId: currentChainId,\n          handlerSwap,\n          addAction: props.addAction,\n          toast: props.toast,\n          account,\n          prices,\n          handleStargateTx,\n          showNetwrokDialog: (_chainId) => {\n            State.update({\n              currentChainId: _chainId,\n              displayNetwork: true,\n            });\n          },\n        }}\n      />\n    </Panel>\n\n    {\n      handlerClaim ? <Panel>\n        <Widget\n          src={handlerClaim}\n          props={{\n            currentChainId,\n            mainnet,\n            toast: props.toast,\n            account,\n            txs: Storage.privateGet(bridgeStorageKey) || {},\n          }}\n        />\n      </Panel> :\n        <Panel>\n          <Widget\n            src=\"bluebiu.near/widget/Base.Bridge.Transactions\"\n            props={{\n              txs: Storage.privateGet(\"stargate_txs\"),\n              getTxStatus,\n              chainId: currentChainId,\n              onDelete: (hash) => {\n                setTimeout(() => {\n                  const txs = Storage.privateGet(\"stargate_txs\") || {};\n                  delete txs[hash];\n                  Storage.privateSet(\"stargate_txs\", txs);\n                }, 10000);\n              },\n            }}\n          />\n        </Panel>\n    }\n\n    <Widget\n      src=\"bluebiu.near/widget/Base.Bridge.NetwrokDialog\"\n      props={{\n        chain,\n        mainnet,\n        display: state.displayNetwork,\n        currentChainId: state.currentChainId || props.defaultChainId,\n        onClose: () => {\n          State.update({\n            displayNetwork: false,\n          });\n        },\n      }}\n    />\n  </Wrapper>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bluebiu.near/widget/Base.Bridge.Index", "fact_widget_deployments_id": "8fe89fd105b8c3c36a7b8d448609fb21", "inserted_timestamp": "2024-04-24T14:41:50.718Z", "modified_timestamp": "2024-04-24T14:41:50.718Z", "__row_index": 17}