{"tx_hash": "HaaVcHwXQhcGGVVrURPdTq4dmmRrv5zPDZbRD2xABHE2", "action_id_social": "Abte5yEV1BvbRD4nvzmgNJbBQVtG1BBxCb6cTd5Qd16x-0-widget", "block_id": 104003521, "block_timestamp": "2023-10-23T03:35:00.216Z", "signer_id": "bluebiu.near", "widget_name": "Base.Bridge.Index", "source_code": "const Wrapper = styled.div`\n  width: 560px;\n  margin: 30px auto 0px;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\nconst Panel = styled.div`\n  width: 100%;\n  border: 1px solid var(--border-color);\n  border-radius: 16px;\n  background-color: var(--bg-color);\n  padding: 20px;\n`;\n\nconst account = Ethers.send(\"eth_requestAccounts\", [])[0];\n\nconst { connectProps, chain, mainnet } = props;\n\nif (!account) {\n  return (\n    <Widget\n      src=\"bluebiu.near/widget/Arbitrum.Swap.ConnectButton\"\n      props={{\n        ...connectProps,\n        chainId: chain.id,\n        chainName: chain.name,\n        isWrongNetwork: false,\n      }}\n    />\n  );\n}\n\nState.init({\n  chainId: -1,\n  displayNetwork: false,\n});\n\nEthers.provider()\n  .getNetwork()\n  .then(({ chainId }) => {\n    State.update({ chainId });\n  })\n  .catch(() => {});\n\nif (![chain.id, mainnet.id].includes(state.chainId)) {\n  State.update({\n    displayNetwork: true,\n  });\n} else if (!state.currentChainId) {\n  State.update({\n    displayNetwork: false,\n  });\n}\n\nconst { tokens, amountOutFn, handlerSwap } = props;\n\nconst handleStargateTx = ({ hash, amount, price, from, to, currency }) => {\n  const txs = Storage.privateGet(\"stargate_txs\") || {};\n  console.log(hash, amount, price, from, to, currency);\n  txs[hash] = {\n    amount,\n    symbol: currency.symbol,\n    price,\n    fromLogo: from.logo,\n    toLogo: to.logo,\n    time: Date.now(),\n    link: from.explorer + \"/tx/\" + hash,\n    hash: hash,\n    tokenLogo: currency.icon,\n  };\n  Storage.privateSet(\"stargate_txs\", txs);\n};\n\nreturn (\n  <Wrapper>\n    <Panel>\n      <Widget\n        src=\"bluebiu.near/widget/Base.Bridge.Swap\"\n        props={{\n          chain,\n          mainnet,\n          tokens,\n          amountOutFn,\n          chainId: state.chainId,\n          handlerSwap,\n          handleStargateTx,\n          showNetwrokDialog: (_chainId) => {\n            State.update({\n              currentChainId: _chainId,\n              displayNetwork: true,\n            });\n          },\n        }}\n      />\n    </Panel>\n    <Panel>\n      <Widget\n        src=\"bluebiu.near/widget/Base.Bridge.Transactions\"\n        props={{\n          txs: Storage.privateGet(\"stargate_txs\"),\n          onDelete: (hash) => {\n            setTimeout(() => {\n              const txs = Storage.privateGet(\"stargate_txs\") || {};\n              delete txs[hash];\n              Storage.privateSet(\"stargate_txs\", txs);\n            }, 10000);\n          },\n        }}\n      />\n    </Panel>\n    <Widget\n      src=\"bluebiu.near/widget/Base.Bridge.NetwrokDialog\"\n      props={{\n        chain,\n        mainnet,\n        display: state.displayNetwork,\n        currentChainId: state.currentChainId,\n        onClose: () => {\n          State.update({\n            displayNetwork: false,\n          });\n        },\n      }}\n    />\n  </Wrapper>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bluebiu.near/widget/Base.Bridge.Index", "fact_widget_deployments_id": "fbc76a5320140f2ec25fb2a8489b4405", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 9}