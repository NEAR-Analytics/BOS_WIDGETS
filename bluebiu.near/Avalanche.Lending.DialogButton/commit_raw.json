{"tx_hash": "Evgv8ZfvY3EHTmdQjXaogwcadzpjMx2REhaVuuzeL1TC", "action_id_social": "DtXDjRjUAesKUKwTVUuS8PzjzHU9mUG2n6XwfiRckREY-0-widget", "block_id": 107352924, "block_timestamp": "2023-12-07T10:38:33.022Z", "signer_id": "bluebiu.near", "widget_name": "Avalanche.Lending.DialogButton", "source_code": "// TODO:  approve a token when withdrawing and borrow  wethGateway\n\nconst ERC20_ABI = [\n  {\n    constant: true,\n    inputs: [\n      {\n        name: \"_owner\",\n        type: \"address\",\n      },\n      {\n        name: \"_spender\",\n        type: \"address\",\n      },\n    ],\n    name: \"allowance\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: \"_spender\",\n        type: \"address\",\n      },\n      {\n        name: \"_value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"approve\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\nconst Button = styled.button`\n  background-color: var(--switch-color);\n  line-height: 52px;\n  border-radius: 10px;\n  color: #fff;\n  font-size: 18px;\n  font-weight: 500;\n  border: none;\n  width: 100%;\n  transition: 0.5s;\n  margin-top: 10px;\n  &:hover {\n    opacity: 0.8;\n  }\n  &:disabled {\n    opacity: 0.5;\n  }\n  &.borrow {\n    background-color: var(--repay-border-color);\n    border: 1px solid var(--repay-border-color);\n  }\n  &.repay {\n    background-color: var(--repay-bg-hover-color);\n    border: 1px solid var(--repay-border-color);\n  }\n`;\nState.init({\n  approving: false,\n  isApproved: false,\n});\n\nconst { disabled, actionText, amount, data, onSuccess, onMessage, addAction } =\n  props;\n\nconst account = Ethers.send(\"eth_requestAccounts\", [])[0];\n\nconst tokenSymbol = data.underlyingToken.symbol;\n\nif (actionText.includes(\"Collateral\")) {\n  const isEnter = actionText === \"Enable as Collateral\";\n  return (\n    <>\n      {!!state.loading && (\n        <Widget\n          src={data.config.handlerCollateral}\n          props={{\n            actionText,\n            unitrollerAddress: data.config.unitrollerAddress,\n            marketAddress: data.address,\n            loading: state.loading,\n            onSuccess: (res) => {\n              const { status } = res;\n              State.update({\n                loading: false,\n              });\n              if (status === 1) {\n                onSuccess?.(data.dapp);\n              }\n              State.update({\n                loading: false,\n              });\n              onMessage?.({\n                status: status === 1 ? 1 : 2,\n                open: true,\n                text: `${tokenSymbol} ${\n                  isEnter ? \"enable\" : \"disable\"\n                } as collateral request ${\n                  status === 1 ? \"successed!\" : \"failed!\"\n                }`,\n              });\n            },\n            onError: () => {\n              State.update({\n                loading: false,\n              });\n              onMessage?.({\n                status: 2,\n                open: true,\n                text: `${tokenSymbol} ${\n                  isEnter ? \"enable\" : \"disable\"\n                } as collateral request failed!\n                `,\n              });\n            },\n            account,\n            data,\n          }}\n        />\n      )}\n      <Button\n        disabled={state.loading || disabled}\n        onClick={() => {\n          State.update({\n            loading: true,\n          });\n          onMessage?.({\n            status: 3,\n            open: true,\n            text: `Submitting ${tokenSymbol} ${\n              isEnter ? \"enable\" : \"disable\"\n            } as collateral request...`,\n          });\n        }}\n      >\n        {state.loading && (\n          <Widget\n            src=\"bluebiu.near/widget/0vix.LendingLoadingIcon\"\n            props={{\n              size: 16,\n            }}\n          />\n        )}\n        Confirm\n      </Button>\n    </>\n  );\n}\nif (!amount) {\n  return (\n    <Button disabled={true} className={actionText.toLowerCase()}>\n      Enter An Amount\n    </Button>\n  );\n}\n\nconst getAAVE2TokenAddress = () => {\n  return data.underlyingToken.description === \"native\"\n    ? data.aTokenAddress\n    : data.underlyingAsset.address;\n};\n\nconst getAAVE2ApproveAddress = () => {\n  return data.underlyingToken.description === \"native\"\n    ? data.wethGateway\n    : data.lendingPoolAddress;\n};\n\nconst getAllowance = () => {\n  const TokenContract = new ethers.Contract(\n    data.type === \"aave2\"\n      ? getAAVE2TokenAddress()\n      : data.underlyingToken.address,\n    ERC20_ABI,\n    Ethers.provider().getSigner()\n  );\n  TokenContract.allowance(\n    account,\n    data.type == \"aave2\" ? getAAVE2ApproveAddress() : data.address\n  ).then((allowanceRaw) => {\n    State.update({\n      isApproved: !Big(\n        ethers.utils.formatUnits(\n          allowanceRaw._hex,\n          data.underlyingToken.decimals\n        )\n      ).lt(amount || \"0\"),\n    });\n  });\n};\nif (\n  [\"Deposit\", \"Repay\"].includes(actionText) &&\n  data.underlyingToken.address !== \"native\" &&\n  data.underlyingToken.description !== \"native\"\n) {\n  getAllowance();\n} else {\n  State.update({ isApproved: true });\n  onLoad?.(true);\n}\nif (!state.isApproved) {\n  const handleApprove = () => {\n    State.update({\n      approving: true,\n    });\n    onMessage?.({\n      status: 3,\n      open: true,\n      text: `Submitting ${tokenSymbol} approval request...`,\n    });\n    const TokenContract = new ethers.Contract(\n      data.type === \"aave2\"\n        ? getAAVE2TokenAddress()\n        : data.underlyingToken.address,\n      ERC20_ABI,\n      Ethers.provider().getSigner()\n    );\n    TokenContract.approve(\n      data.type == \"aave2\" ? getAAVE2ApproveAddress() : data.address,\n      ethers.utils.parseUnits(amount, data.underlyingToken.decimals)\n    )\n      .then((tx) => {\n        tx.wait().then((res) => {\n          const { status } = res;\n          State.update({\n            isApproved: status === 1,\n            approving: false,\n          });\n          onMessage?.({\n            status: status === 1 ? 1 : 2,\n            open: true,\n            text: status === 1 ? \"Approved successed!\" : \"Approved failed!\",\n          });\n          onLoad?.(status === 1);\n        });\n      })\n      .catch(() => {\n        State.update({\n          isApproved: false,\n          approving: false,\n        });\n        onMessage?.({\n          status: 2,\n          open: true,\n          text: \"Approved failed!\",\n        });\n        onLoad?.(false);\n      });\n  };\n  return (\n    <Button onClick={handleApprove} disabled={state.approving}>\n      {state.approving && (\n        <Widget\n          src=\"bluebiu.near/widget/0vix.LendingLoadingIcon\"\n          props={{\n            size: 16,\n          }}\n        />\n      )}\n      Approve\n    </Button>\n  );\n}\n\nreturn (\n  <>\n    {state.pending && (\n      <Widget\n        src={data.config.handlerCToken}\n        props={{\n          market: data,\n          actionText,\n          amount: Big(amount).toFixed(data.underlyingToken.decimals),\n          loading: state.pending,\n          onSuccess: (res) => {\n            const { status, transactionHash } = res;\n            State.update({\n              pending: false,\n            });\n            onMessage?.({\n              status: status === 1 ? 1 : 2,\n              open: true,\n              text: `${tokenSymbol} ${actionText.toLowerCase()} request ${\n                status === 1 ? \" successed!\" : \" failed!\"\n              }`,\n            });\n            addAction?.({\n              type: \"Lending\",\n              action: actionText,\n              token: data.underlyingToken,\n              amount,\n              template: data.dappName,\n              add: false,\n              status,\n              transactionHash,\n            });\n            if (status === 1) {\n              onSuccess?.(data.dapp);\n            }\n          },\n          onError: (err) => {\n            console.log(\"error\", err);\n            State.update({\n              pending: false,\n            });\n            onMessage?.({\n              status: 2,\n              open: true,\n              text: `${tokenSymbol} ${actionText.toLowerCase()} request\n            failed!\n           `,\n            });\n          },\n          account,\n        }}\n      />\n    )}\n    <Button\n      disabled={state.pending || disabled}\n      className={actionText.toLowerCase()}\n      onClick={() => {\n        State.update({\n          pending: true,\n        });\n        onMessage?.({\n          status: 3,\n          open: true,\n          text: `Submitting ${tokenSymbol} ${actionText.toLowerCase()} request...`,\n        });\n      }}\n    >\n      {state.pending && (\n        <Widget\n          src=\"bluebiu.near/widget/0vix.LendingLoadingIcon\"\n          props={{\n            size: 16,\n          }}\n        />\n      )}\n      {actionText}\n    </Button>\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bluebiu.near/widget/Avalanche.Lending.DialogButton", "fact_widget_deployments_id": "00245d6b5f3f9f69acecc931f99a5686", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 16}