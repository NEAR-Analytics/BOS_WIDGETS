{"tx_hash": "35Sgt2tLqkYUeATmrpqrw52m8kaGrK6BRq6Nxd6fpFzU", "action_id_social": "HsbHwiX83DEBAcNTGsg3S1pHLc54yKLgz3y5NKWTZfFt-0-widget", "block_id": 101980344, "block_timestamp": "2023-09-26T07:03:33.682Z", "signer_id": "bluebiu.near", "widget_name": "Linea.Liquidity.GAMMA.GAMMAConnector", "source_code": "State.init({\n  activePair: defaultPair,\n  isPoolFetching: false,\n  isUserPositionsFetching: false,\n  chainId: \"\",\n});\n\nconst {\n  MAINNET_CHAIN_ID,\n  ALL_DATA_URL,\n  USER_DATA_BASE,\n  CHAIN_CONFIG,\n  addresses,\n  pairs,\n  proxyAddress,\n  defaultPair,\n} = props;\n\nconst chainIdToSwitch = `0x${MAINNET_CHAIN_ID.toString(16)}`;\n\nCHAIN_CONFIG.chainId = chainIdToSwitch;\n\nconst sender = Ethers.send(\"eth_requestAccounts\", [])[0];\nconst ContainerLogin = styled.div`\n  display: flex;\n  max-width: 500px;\n\n  flex-direction: column;\n  margin: 80px auto auto auto;\n\n  .web3-connect {\n    width: 480px;\n    height: 60px;\n    border-radius: 10px;\n    background-color: #fff;\n    color: #0f1126;\n    font-size: 18px;\n    font-weight: 500;\n    border: none;\n    margin-top: 20px;\n  }\n\n  @media (max-width: 736px) {\n    max-width: 100%;\n    .web3-connect {\n      width: 100%;\n\n      font-size: 16px;\n      height: 40px;\n    }\n  }\n`;\n\nconst TitleText = styled.div`\n  font-size: 20px;\n  font-weight: 700;\n  margin-bottom: 32px;\n  color: #ffffff;\n  @media (max-width: 900px) {\n    display: none;\n  }\n`;\n\nif (!sender)\n  return (\n    <>\n      <TitleText>Liquidity Manage</TitleText>\n      <ContainerLogin\n        style={{\n          display: \"flex\",\n          maxWidth: \"500px\",\n          flexDirection: \"column\",\n          margin: \"80px auto auto auto\",\n        }}\n      >\n        <img src=\"https://ipfs.near.social/ipfs/bafkreibmhq4fseqpcbywiq4hfojghxvhj47mjsri2trggt7d5h5od4y6kq\"></img>\n\n        <Web3Connect\n          className=\"web3-connect\"\n          connectLabel=\"Connect ETH wallet\"\n        />\n      </ContainerLogin>\n    </>\n  );\n\nEthers.provider()\n  .getNetwork()\n  .then((data) => {\n    State.update({\n      chainId: data.chainId,\n    });\n  });\n\nconst switchChain = () => {\n  Ethers.send(\"wallet_addEthereumChain\", [CHAIN_CONFIG]);\n};\n\nconst SwitchWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  font-family: \"Inter\";\n  max-width: 500px;\n  color: #fff;\n  margin: auto;\n  text-align: center;\n  border-radius: 12px;\n  padding: 16px 0;\n  align-items: center;\n  gap: 12px;\n  margin-top: 80px;\n  button {\n    background: #8247e5;\n    border: none;\n    &:hover {\n      background: #8257f5;\n    }\n  }\n\n  @media (max-width: 736px) {\n    max-width: 100%;\n    img {\n      width: 100%;\n    }\n  }\n`;\n\nif (state.chainId !== MAINNET_CHAIN_ID) {\n  return (\n    <>\n      <TitleText>Liquidity Manage</TitleText>\n      <SwitchWrapper>\n        <img src=\"https://ipfs.near.social/ipfs/bafkreibmhq4fseqpcbywiq4hfojghxvhj47mjsri2trggt7d5h5od4y6kq\"></img>\n        <h4>Please switch to {CHAIN_CONFIG.chainName} </h4>\n        <button onClick={switchChain}>\n          Switch to {CHAIN_CONFIG.chainName}\n        </button>\n        <p>**Please refresh once after switch chain**</p>\n      </SwitchWrapper>\n    </>\n  );\n}\nconst fetchPoolsData = () => {\n  State.update({\n    isPoolFetching: true,\n  });\n  asyncFetch(ALL_DATA_URL).then((res) => {\n    if (!res.ok) return;\n\n    State.update({\n      poolsData: res.body,\n      isPoolFetching: false,\n    });\n  });\n};\n\nconst fetchUserData = () => {\n  State.update({\n    isUserPositionsFetching: true,\n  });\n  asyncFetch(USER_DATA_BASE + `${sender}`).then((res) => {\n    if (!res.ok) return;\n\n    State.update({\n      userPositions: res.body[sender],\n      isUserPositionsFetching: false,\n    });\n  });\n};\n\nif (state.poolsData === undefined) {\n  fetchPoolsData();\n}\n\nif (sender && state.userPositions === undefined) {\n  fetchUserData();\n}\n\nconst refetch = () => {\n  fetchPoolsData();\n  fetchUserData();\n  console.log(\"refetching\");\n};\n\nconst postRefetch = () => {\n  setTimeout(() => refetch(), 45_000);\n};\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: start;\n  gap: 24px;\n\n  @media (max-width: 736px) {\n    flex-direction: column-reverse;\n  }\n`;\nconst VStack = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  .tableTitle {\n    font-size: 18px;\n    color: #7c7f96;\n    font-weight: 500;\n    padding-left: 16px;\n    margin-bottom: 5px;\n\n    @media (max-width: 736px) {\n      display: none;\n    }\n  }\n`;\nconst Button = styled.button`\n  background: #1d1e1f;\n  border-radius: 4px;\n  border: none;\n  max-width: 640px;\n  width: 100%;\n  color: #fff;\n  padding: 8px 0;\n  font-weight: 600;\n  font-size: 14px;\n  position: relative;\n  min-height: 37px;\n  &:hover {\n    background: #2b2a2b;\n  }\n  &:disabled {\n    background: #333;\n    color: #ccc;\n  }\n`;\n\nconst handlePairClick = (pair) => {\n  State.update({\n    activePair: pair,\n  });\n};\n\nconst {\n  activePair,\n  poolsData,\n  userPositions,\n  isPoolFetching,\n  isUserPositionsFetching,\n} = state;\n\nreturn (\n  <VStack>\n    <div className=\"tableTitle\">Active Liquidity</div>\n    <Wrapper>\n      <Widget\n        src={\"bluebiu.near/widget/Linea.Liquidity.GAMMA.gamma-table\"}\n        props={{\n          handlePairClick,\n          poolsData,\n          userPositions,\n          addresses,\n          pairs,\n          proxyAddress,\n          defaultPair,\n          activePair: activePair || defaultPair,\n        }}\n      />\n\n      <div\n        className=\"\"\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n        }}\n      >\n        <Widget\n          src={\"bluebiu.near/widget/Linea.Liquidity.GAMMA.gamma-vault\"}\n          props={{\n            ...props,\n            pair: activePair || defaultPair,\n            refetch: postRefetch,\n            can_add_action: state.add_action,\n            poolsData,\n            addresses,\n            pairs,\n            proxyAddress,\n            defaultPair,\n            handlePairClick,\n            userPositions,\n            chainName: CHAIN_CONFIG.chainName,\n          }}\n        />\n\n        <div\n          style={{\n            width: \"350px\",\n            paddingTop: \"20px\",\n          }}\n        >\n          <Widget\n            src=\"guessme.near/widget/ZKEVMWarmUp.add-to-quest-card\"\n            props={{\n              add: state.add_action,\n              onChangeAdd: (value) => {\n                State.update({\n                  add_action: value,\n                });\n              },\n            }}\n          />\n        </div>\n      </div>\n    </Wrapper>\n  </VStack>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bluebiu.near/widget/Linea.Liquidity.GAMMA.GAMMAConnector", "fact_widget_deployments_id": "8f9703a555a70d36d234ea38d17a45eb", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 2}