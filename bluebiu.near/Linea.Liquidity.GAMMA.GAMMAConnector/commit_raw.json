{"tx_hash": "GBUZh2U9hjZAevuPMAroQCj25b1xXE9FQQZmTebjsQzu", "action_id_social": "EqdB3coewbsbU9Fo3iruRbzhnFRfwEj9iSAjNZ5g9CPH-0-widget", "block_id": 119839037, "block_timestamp": "2024-05-27T07:48:43.930Z", "signer_id": "bluebiu.near", "widget_name": "Linea.Liquidity.GAMMA.GAMMAConnector", "source_code": "State.init({\n  activePair: defaultPair,\n  isPoolFetching: false,\n  isUserPositionsFetching: false,\n  chainId: \"\",\n});\n\nconst {\n  MAINNET_CHAIN_ID,\n  ALL_DATA_URL,\n  USER_DATA_BASE,\n  CHAIN_CONFIG,\n  addresses,\n  pairs,\n  proxyAddress,\n  defaultPair,\n  prices,\n} = props;\n\nconst CONNECT_PROPS = {\n  ...props.connectProps,\n  chainId: MAINNET_CHAIN_ID,\n  chainName: CHAIN_CONFIG.chainName,\n  noAccountTips: `${CHAIN_CONFIG.chainName} Liquidity`,\n  wrongNetworkTips: `To proceed, kindly switch to ${CHAIN_CONFIG.chainName} Chain.`,\n};\n\nconst chainIdToSwitch = `0x${MAINNET_CHAIN_ID.toString(16)}`;\n\nCHAIN_CONFIG.chainId = chainIdToSwitch;\n\nconst sender = Ethers.send(\"eth_requestAccounts\", [])[0];\n\nif (!sender)\n  return (\n    <Widget\n      src=\"bluebiu.near/widget/Arbitrum.Swap.ConnectButton\"\n      props={{\n        ...CONNECT_PROPS,\n        isWrongNetwork: false,\n      }}\n    />\n  );\n\nEthers.provider()\n  .getNetwork()\n  .then((data) => {\n    State.update({\n      chainId: data.chainId,\n    });\n  });\n\nconst switchChain = () => {\n  Ethers.send(\"wallet_addEthereumChain\", [CHAIN_CONFIG]);\n};\n\nif (state.chainId !== MAINNET_CHAIN_ID) {\n  return (\n    <Widget\n      src=\"bluebiu.near/widget/Arbitrum.Swap.ConnectButton\"\n      props={{\n        ...CONNECT_PROPS,\n        isWrongNetwork: true,\n      }}\n    />\n  );\n}\nconst fetchPoolsData = () => {\n  State.update({\n    isPoolFetching: true,\n  });\n  asyncFetch(ALL_DATA_URL).then((res) => {\n    if (!res.ok) return;\n\n    State.update({\n      poolsData: res.body,\n      isPoolFetching: false,\n    });\n  });\n};\n\nconst fetchUserData = () => {\n  State.update({\n    isUserPositionsFetching: true,\n  });\n  asyncFetch(USER_DATA_BASE + `${sender}`).then((res) => {\n    if (!res.ok) return;\n\n    State.update({\n      userPositions: res.body[sender],\n      isUserPositionsFetching: false,\n    });\n  });\n};\n\nconst fetchFusionsData = () => {\n  asyncFetch(\"https://api.lynex.fi/api/v1/fusions\").then((res) => {\n    if (!res.ok) return;\n    State.update({\n      fusionsData: res?.body?.data,\n      // isUserPositionsFetching: false,\n    });\n  });\n};\n\nif (state.poolsData === undefined) {\n  fetchPoolsData();\n}\nif (state.fusionsData === undefined) {\n  fetchFusionsData();\n}\n\nif (sender && state.userPositions === undefined) {\n  fetchUserData();\n}\n\nconst refetch = () => {\n  fetchPoolsData();\n  fetchUserData();\n  fetchFusionsData();\n  console.log(\"refetching\");\n};\n\nconst postRefetch = () => {\n  setTimeout(() => refetch(), 45_000);\n};\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: start;\n  gap: 24px;\n\n  @media (max-width: 736px) {\n    flex-direction: column-reverse;\n  }\n`;\nconst VStack = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  .tableTitle {\n    font-size: 18px;\n    color: #7c7f96;\n    font-weight: 500;\n    padding-left: 16px;\n    margin-bottom: 5px;\n\n    @media (max-width: 736px) {\n      display: none;\n    }\n  }\n`;\nconst Button = styled.button`\n  background: #1d1e1f;\n  border-radius: 4px;\n  border: none;\n  max-width: 640px;\n  width: 100%;\n  color: #fff;\n  padding: 8px 0;\n  font-weight: 600;\n  font-size: 14px;\n  position: relative;\n  min-height: 37px;\n  &:hover {\n    background: #2b2a2b;\n  }\n  &:disabled {\n    background: #333;\n    color: #ccc;\n  }\n`;\n\nconst handlePairClick = (pair) => {\n  State.update({\n    activePair: pair,\n  });\n};\n\nconst {\n  activePair,\n  poolsData,\n  fusionsData,\n  userPositions,\n\n  isPoolFetching,\n  isUserPositionsFetching,\n} = state;\n\nreturn (\n  <VStack>\n    <div className=\"tableTitle\">Active Liquidity</div>\n    <Wrapper>\n      <Widget\n        src={\"bluebiu.near/widget/Linea.Liquidity.GAMMA.gamma-table\"}\n        props={{\n          handlePairClick,\n          prices,\n          poolsData,\n          fusionsData,\n          userPositions,\n          addresses,\n          pairs,\n          proxyAddress,\n          defaultPair,\n          activePair: activePair || defaultPair,\n        }}\n      />\n\n      <div\n        className=\"\"\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n        }}\n      >\n        <Widget\n          src={\"bluebiu.near/widget/Linea.Liquidity.GAMMA.gamma-vault\"}\n          props={{\n            ...props,\n            pair: activePair || defaultPair,\n            refetch: postRefetch,\n            poolsData,\n            addresses,\n            pairs,\n            proxyAddress,\n            defaultPair,\n            handlePairClick,\n            userPositions,\n            chainName: CHAIN_CONFIG.chainName,\n            addAction: props.addAction,\n            toast: props.toast,\n            chainId: state.chainId,\n          }}\n        />\n      </div>\n    </Wrapper>\n  </VStack>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bluebiu.near/widget/Linea.Liquidity.GAMMA.GAMMAConnector", "fact_widget_deployments_id": "97431b7822d14d880dabe2842189deee", "inserted_timestamp": "2024-05-27T10:09:20.097Z", "modified_timestamp": "2024-05-27T10:09:20.097Z", "__row_index": 0}