{"tx_hash": "4EmFvMQE8Wqy6tFpTbKBff9sVpsSjQZ4bT2anSXvmwjW", "action_id_social": "Gstynfnu42aQpHcKDaeCCyaScKPzwHTkaXZE6uHAw9Jh-0-widget", "block_id": 106811865, "block_timestamp": "2023-11-29T14:51:02.369Z", "signer_id": "zkarb.near", "widget_name": "NEAT", "source_code": "const TGas = Big(10).pow(12);\nconst MaxGasPerTransaction = TGas.mul(250);\nconst GasPerTransaction = MaxGasPerTransaction.plus(TGas);\nconst pageAmountOfPage = 5;\nconst ipfsPrefix = \"https://ipfs.near.social/ipfs\";\n// Config for Bos app\nfunction getConfig(network) {\n  switch (network) {\n    case \"mainnet\":\n      return {\n        ownerId: \"inscribe.near\",\n        nodeUrl: \"https://rpc.mainnet.near.org\",\n        indexerUrl: \"https://inscription-indexer-a16497da251b.herokuapp.com/v1\",\n        contractName: \"inscription.near\",\n        methodName: \"inscribe\",\n        args: {\n          p: \"nrc-20\",\n          op: \"mint\",\n          tick: \"neat\",\n          amt: \"100000000\",\n        },\n      };\n    case \"testnet\":\n      return {\n        ownerId: \"inscribe.testnet\",\n        nodeUrl: \"https://rpc.testnet.near.org\",\n        indexerUrl: \"https://inscription-indexer-a16497da251b.herokuapp.com/v1\",\n        contractName: \"inscription.testnet\",\n        methodName: \"inscribe\",\n        args: {\n          p: \"nrc-20\",\n          op: \"mint\",\n          tick: \"neat\",\n          amt: \"100000000\",\n        },\n      };\n    default:\n      throw Error(`Unconfigured environment '${network}'.`);\n  }\n}\nconst config = getConfig(context.networkId);\nconst tx = {\n  contractName: config.contractName,\n  methodName: config.methodName,\n  args: config.args,\n  gas: GasPerTransaction,\n};\n\nconst Main = styled.div`\n  width: 100%;\n  height: 100vh;\n  background: #101010;\n  background-image: url(${ipfsPrefix}/bafkreiak6rio66kqjsobw25gtmy5a7fwwsa4hjn3d25a4tppfylbdepbjq);\n  padding: 0 16px;\n  color: white;\n  @media (min-width: 640px) {\n    padding: 0 40px;\n  }\n`;\n\nconst Spacer = styled.div``;\n\nconst BodyContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 80px;\n`;\n\nconst HeaderContainer = styled.div`\n  padding: 18px 0;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst Logo = styled.img`\n  width: 40px;\n  height: 40px;\n`;\n\nconst TabContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 56px;\n`;\n\nconst TabItem = styled.div`\n  cursor: pointer;\n  font-size: 18px;\n  font-weight: 600;\n  ${(props) => !props.selected && \"opacity: 0.4;\"}\n`;\n\nState.init({\n  tab: \"Mint\", // Mint / Indexer\n});\n\nconst { tab } = state;\nreturn (\n  <Main>\n    <HeaderContainer>\n      <Logo\n        src={`${ipfsPrefix}/bafkreic65adpnynb7dthyyfjkfxgteij3qq45dmtfcp3knlroyo4nyj4qq`}\n        alt=\"Logo\"\n      />\n      <TabContainer>\n        <TabItem\n          selected={tab === \"Mint\"}\n          onClick={() => State.update({ tab: \"Mint\" })}\n        >\n          Mint\n        </TabItem>\n        <TabItem\n          style={{ cursor: \"allowed\" }}\n          // selected={tab === \"Indexer\"}\n          // onClick={() => State.update({ tab: \"Indexer\" })}\n        >\n          Indexer\n        </TabItem>\n      </TabContainer>\n      <Spacer />\n    </HeaderContainer>\n    <BodyContainer>\n      {tab === \"Mint\" && <Widget src={`${config.ownerId}/widget/NEAT.Mint`} />}\n      {/* {tab === \"Indexer\" && (\n        <Widget src={`${config.ownerId}/widget/NEAT.Indexer`} />\n      )} */}\n    </BodyContainer>\n  </Main>\n);\n", "metadata": {}, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/zkarb.near/widget/NEAT", "fact_widget_deployments_id": "cc2f00b53c971e0ce6075b64789c1d78", "inserted_timestamp": "2023-11-29T16:45:51.493Z", "modified_timestamp": "2023-12-20T00:36:59.366Z", "__row_index": 5}