{"tx_hash": "Aotk23ui5DnDLukYpVZ9ZLhW3GCQXWXHcFKjQrrx4i7E", "action_id_social": "J9xY9Wm3UjAr2carGCXUZextotDWu7R2FXEbriYUd3CA-0-widget", "block_id": 97433679, "block_timestamp": "2023-07-27T06:33:43.572Z", "signer_id": "ladygaga.near", "widget_name": "CaseConverter", "source_code": "const splitTexts = (input, separatorArr) => {\n  var placeholder = \"[{[separator]}]\";\n\n  separatorArr.map((separator) => {\n    input = input.replaceAll(separator, placeholder);\n  });\n\n  return input.split(placeholder).map((e) => {\n    return e.replaceAll(placeholder, \"\");\n  });\n};\n\nconst defaultSeparators = [\" \", \",\", \"_\", \",\", \"/\", \"-\", \".\", \"\\n\"];\n\nfunction convertStandard(input, textSeparators, elemFunc, wordSperator) {\n  var texts = splitTexts(input, textSeparators);\n  texts = texts.map((elem, i) => {\n    return elemFunc(elem, i);\n  });\n  return texts.join(wordSperator);\n}\n\nfunction lowercaseFirstLetter(string) {\n  if (string.length === 0) {\n    return string;\n  }\n\n  return string.charAt(0).toLowerCase() + string.slice(1);\n}\n\nfunction uppercaseFirstLetter(string) {\n  if (string.length === 0) {\n    return string;\n  }\n\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nconst inputChange = (event) => {\n  State.update({ inputText: event.target.value });\n};\n\nconst convert = (format) => {\n  var input = state.inputText;\n  var output = \"\";\n\n  switch (format) {\n    case \"lowercase\":\n      output = input.toLowerCase();\n      break;\n    case \"UPPERCASE\":\n      output = input.toUpperCase();\n      break;\n    case \"camelCase\":\n      output = convertStandard(\n        input,\n        defaultSeparators,\n        (elem, i) => {\n          return i == 0\n            ? lowercaseFirstLetter(elem)\n            : uppercaseFirstLetter(elem);\n        },\n        \"\"\n      );\n      break;\n    case \"CapitalCase\":\n      output = convertStandard(\n        input,\n        defaultSeparators,\n        (elem, i) => {\n          return uppercaseFirstLetter(elem);\n        },\n        \" \"\n      );\n      break;\n    case \"CONSTANT_CASE\":\n      output = convertStandard(\n        input,\n        defaultSeparators,\n        (elem, i) => {\n          return elem.toUpperCase();\n        },\n        \"_\"\n      );\n      break;\n    case \"dot.case\":\n      output = convertStandard(\n        input,\n        defaultSeparators,\n        (elem, i) => {\n          return elem.toLowerCase();\n        },\n        \".\"\n      );\n      break;\n    case \"Header-Case\":\n      output = convertStandard(\n        input,\n        defaultSeparators,\n        (elem, i) => {\n          return uppercaseFirstLetter(elem);\n        },\n        \"-\"\n      );\n      break;\n    case \"param-case\":\n      output = convertStandard(\n        input,\n        defaultSeparators,\n        (elem, i) => {\n          return elem.toLowerCase();\n        },\n        \"-\"\n      );\n      break;\n    case \"PascalCase\":\n      output = convertStandard(\n        input,\n        defaultSeparators,\n        (elem, i) => {\n          return uppercaseFirstLetter(elem);\n        },\n        \"\"\n      );\n      break;\n    case \"path/case\":\n      output = convertStandard(\n        input,\n        defaultSeparators,\n        (elem, i) => {\n          return elem.toLowerCase();\n        },\n        \"/\"\n      );\n      break;\n    case \"Sentence case\":\n      output = convertStandard(\n        input,\n        defaultSeparators,\n        (elem, i) => {\n          return i == 0\n            ? uppercaseFirstLetter(elem)\n            : lowercaseFirstLetter(elem);\n        },\n        \" \"\n      );\n      break;\n    case \"snake_case\":\n      output = convertStandard(\n        input,\n        defaultSeparators,\n        (elem, i) => {\n          return elem.toLowerCase();\n        },\n        \"_\"\n      );\n      break;\n    case \"sWAP cASE\":\n      output = convertStandard(\n        input,\n        [\" \"],\n        (elem, i) => {\n          return lowercaseFirstLetter(elem.toUpperCase());\n        },\n        \" \"\n      );\n      break;\n    case \"Title Case\":\n      output = convertStandard(\n        input,\n        [\" \", \"\\n\"],\n        (elem, i) => {\n          return i == 0 ? uppercaseFirstLetter(elem) : elem;\n        },\n        \" \"\n      );\n      break;\n  }\n\n  State.update({ outputText: output });\n};\n\nconst clearBtn = () => {\n  State.update({ outputText: \"\" });\n  State.update({ inputText: \"\" });\n};\n\nreturn (\n  <div className=\"container\">\n    <h1>Case Converter</h1>\n    <div className=\"col-12  mb-3\">\n      <label className=\"form-label\">Input String</label>\n      <textarea\n        className=\"form-control\"\n        rows=\"4\"\n        cols=\"50\"\n        value={state.inputText}\n        onChange={inputChange}\n      ></textarea>\n    </div>\n    <div className=\"col-12 mb-1\">\n      <div className=\"d-flex justify-content-between\">\n        <div>\n          <button\n            className=\"btn btn-primary btn-sm\"\n            onClick={() => convert(\"lowercase\")}\n          >\n            lowercase\n          </button>\n          <button\n            className=\"btn btn-primary btn-sm\"\n            onClick={() => convert(\"UPPERCASE\")}\n          >\n            UPPERCASE\n          </button>\n        </div>\n        <div>\n          <button\n            className=\"btn btn-primary btn-sm\"\n            onClick={() => convert(\"camelCase\")}\n          >\n            camelCase\n          </button>\n          <button\n            className=\"btn btn-primary btn-sm\"\n            onClick={() => convert(\"CapitalCase\")}\n          >\n            Capital Case\n          </button>\n          <button\n            className=\"btn btn-primary btn-sm\"\n            onClick={() => convert(\"CONSTANT_CASE\")}\n          >\n            CONSTANT_CASE\n          </button>\n        </div>\n      </div>\n    </div>\n    <div className=\"col-12 mb-1\">\n      <div className=\"d-flex justify-content-between\">\n        <div>\n          <button\n            className=\"btn btn-primary btn-sm\"\n            onClick={() => convert(\"dot.case\")}\n          >\n            dot.case\n          </button>\n          <button\n            className=\"btn btn-primary btn-sm\"\n            onClick={() => convert(\"Header-Case\")}\n          >\n            Header-Case\n          </button>\n          <button\n            className=\"btn btn-primary btn-sm\"\n            onClick={() => convert(\"param-case\")}\n          >\n            param-case\n          </button>\n        </div>\n        <div>\n          <button\n            className=\"btn btn-primary btn-sm\"\n            onClick={() => convert(\"PascalCase\")}\n          >\n            PascalCase\n          </button>\n          <button\n            className=\"btn btn-primary btn-sm\"\n            onClick={() => convert(\"path/case\")}\n          >\n            path/case\n          </button>\n          <button\n            className=\"btn btn-primary btn-sm\"\n            onClick={() => convert(\"Sentence case\")}\n          >\n            Sentence case\n          </button>\n        </div>\n      </div>\n    </div>\n    <div className=\"col-12 mb-3\">\n      <div className=\"d-flex justify-content-between\">\n        <div>\n          <button\n            className=\"btn btn-primary btn-sm\"\n            onClick={() => convert(\"snake_case\")}\n          >\n            snake_case\n          </button>\n          <button\n            className=\"btn btn-primary btn-sm\"\n            onClick={() => convert(\"sWAP cASE\")}\n          >\n            sWAP cASE\n          </button>\n          <button\n            className=\"btn btn-primary btn-sm\"\n            onClick={() => convert(\"Title Case\")}\n          >\n            Title Case\n          </button>\n        </div>\n      </div>\n    </div>\n    <div className=\"col-12  mb-3\">\n      <label for=\"outputText\" className=\"form-label\">\n        Output String\n      </label>\n      <textarea\n        className=\"form-control\"\n        rows=\"4\"\n        cols=\"50\"\n        value={state.outputText}\n      ></textarea>\n    </div>\n    <div className=\"col-12 mb-3\">\n      <button className=\"btn btn-danger btn-sm\" onClick={() => clearBtn()}>\n        Clear\n      </button>\n      <button\n        className=\"btn btn-primary btn-sm\"\n        onClick={() => {\n          clipboard.writeText(state.outputText);\n          State.update({ copied: true });\n          setTimeout(() => {\n            State.update({ copied: false });\n          }, 2000);\n        }}\n      >\n        {state.copied ? \"Copied\" : \"Copy\"}\n      </button>\n    </div>\n  </div>\n);\n", "metadata": {"description": "a developer tool: Case Converter", "image": {"ipfs_cid": "bafkreifnwm6j6w4q6i5a2e6k7y6uad3jkua5izfedartbt4jdwtr3354me"}, "linktree": {"website": "https://github.com/isQiao"}, "name": "Case Converter", "tags": {"dev": "", "dev-tools": "", "tools": ""}}, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/ladygaga.near/widget/CaseConverter", "fact_widget_deployments_id": "36d387df57bd2ecd4d3a127ecf466a31", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}