{"tx_hash": "BKYvAmL7hRqCV7sD3yp972kkLjZ6rbFKxuDgobMm2Vdn", "action_id_social": "6rdn4sMkdDEdy4wwSUXJtu6WfFRYSmpfvNi3bNhcMGGL-0-widget", "block_id": 118101910, "block_timestamp": "2024-05-02T16:29:34.041Z", "signer_id": "events-committee.near", "widget_name": "devhub.entity.proposal.Feed", "source_code": "const { href } = VM.require(\"events-committee.near/widget/core.lib.url\");\n\nif (!href) {\n  return <p>Loading modules...</p>;\n}\n\nconst Container = styled.div`\n  .full-width-div {\n    width: 100vw;\n    position: relative;\n    left: 50%;\n    right: 50%;\n    margin-left: -50vw;\n    margin-right: -50vw;\n  }\n\n  .card.no-border {\n    border-left: none !important;\n    border-right: none !important;\n    margin-bottom: -3.5rem;\n  }\n\n  @media screen and (max-width: 768px) {\n    font-size: 13px;\n  }\n\n  .text-sm {\n    font-size: 13px;\n  }\n\n  .bg-grey {\n    background-color: #f4f4f4;\n  }\n\n  .border-bottom {\n    border-bottom: 1px solid grey;\n  }\n\n  .cursor-pointer {\n    cursor: pointer;\n  }\n\n  .proposal-card {\n    border-left: none !important;\n    border-right: none !important;\n    border-bottom: none !important;\n    &:hover {\n      background-color: #f4f4f4;\n    }\n  }\n\n  .green-btn {\n    background-color: #03ba16 !important;\n    border: none;\n    color: white;\n\n    &:active {\n      color: white;\n    }\n  }\n\n  @media screen and (max-width: 768px) {\n    .green-btn {\n      padding: 0.5rem 0.8rem !important;\n      min-height: 32px;\n    }\n  }\n\n  a.no-space {\n    display: inline-block;\n  }\n\n  .text-wrap {\n    overflow: hidden;\n    white-space: normal;\n  }\n`;\n\nconst Heading = styled.div`\n  font-size: 24px;\n  font-weight: 700;\n  width: 100%;\n\n  .text-normal {\n    font-weight: normal !important;\n  }\n\n  @media screen and (max-width: 768px) {\n    font-size: 18px;\n  }\n`;\n\nconst FeedItem = ({ proposal, index }) => {\n  const accountId = proposal.author_id;\n  const profile = Social.get(`${accountId}/profile/**`, \"final\");\n  // We will have to get the proposal from the contract to get the block height.\n  const blockHeight = parseInt(proposal.social_db_post_block_height);\n  const item = {\n    type: \"social\",\n    path: `events-committee.near/post/main`,\n    blockHeight: blockHeight,\n  };\n\n  return (\n    <a\n      href={href({\n        widgetSrc: \"events-committee.near/widget/app\",\n        params: {\n          page: \"proposal\",\n          id: proposal.proposal_id,\n        },\n      })}\n      onClick={(e) => e.stopPropagation()}\n      style={{ textDecoration: \"none\" }}\n    >\n      <div\n        className={\n          \"proposal-card d-flex justify-content-between gap-2 text-muted cursor-pointer p-3 w-100 flex-wrap flex-sm-nowrap \" +\n          (index !== 0 && \" border\")\n        }\n      >\n        <div className=\"d-flex gap-4 w-100\">\n          <Widget\n            src={\"events-committee.near/widget/devhub.entity.proposal.Profile\"}\n            props={{\n              accountId,\n            }}\n          />\n          <div className=\"d-flex flex-column gap-2 w-100 text-wrap\">\n            <div className=\"d-flex gap-2 align-items-center flex-wrap w-100\">\n              <div className=\"h6 mb-0 text-black\">{proposal.name}</div>\n              <Widget\n                src={\"events-committee.near/widget/devhub.entity.proposal.CategoryTag\"}\n                props={{\n                  category: proposal.category,\n                }}\n              />\n            </div>\n            <div className=\"d-flex gap-2 align-items-center flex-wrap flex-sm-nowrap text-sm w-100\">\n              <div>#{proposal.proposal_id} \uff65 </div>\n              <div className=\"text-truncate\">\n                By {profile.name ?? accountId} \uff65{\" \"}\n              </div>\n              <Widget\n                src=\"near/widget/TimeAgo\"\n                props={{\n                  blockHeight,\n                  blockTimestamp: proposal.timestamp,\n                }}\n              />\n            </div>\n            <div className=\"d-flex gap-2 align-items-center\">\n              <Widget\n                src=\"events-committee.near/widget/devhub.entity.proposal.LikeButton\"\n                props={{\n                  item,\n                  proposalId: proposal.id,\n                  notifyAccountId: accountId,\n                }}\n              />\n\n              <Widget\n                src={\"events-committee.near/widget/devhub.entity.proposal.CommentIcon\"}\n                props={{\n                  item,\n                  showOverlay: false,\n                  onClick: () => {},\n                }}\n              />\n            </div>\n          </div>\n        </div>\n        <div className=\"align-self-center\" style={{ minWidth: \"fit-content\" }}>\n          <Widget\n            src={\"events-committee.near/widget/devhub.entity.proposal.StatusTag\"}\n            props={{\n              timelineStatus: proposal.timeline.status,\n            }}\n          />\n        </div>\n      </div>\n    </a>\n  );\n};\n\nconst getProposal = (proposal_id) => {\n  return Near.asyncView(\"events-committee.near\", \"get_proposal\", {\n    proposal_id,\n  });\n};\n\nconst FeedPage = () => {\n  const QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\n\n  State.init({\n    data: [],\n    cachedItems: {},\n    author: \"\",\n    stage: \"\",\n    sort: \"\",\n    category: \"\",\n    input: \"\",\n    loading: false,\n    loadingMore: false,\n    aggregatedCount: 0,\n    currentlyDisplaying: 0,\n  });\n\n  const queryName =\n    \"thomasguntenaar_near_events_committee_proposals_proposals_with_latest_snapshot\";\n  const query = `query GetLatestSnapshot($offset: Int = 0, $limit: Int = 10, $where: ${queryName}_bool_exp = {}) {\n    ${queryName}(\n      offset: $offset\n      limit: $limit\n      order_by: {proposal_id: desc}\n      where: $where\n    ) {\n      author_id\n      block_height\n      name\n      category\n      summary\n      editor_id\n      proposal_id\n      ts\n      timeline\n      views\n    }\n    ${queryName}_aggregate(\n      order_by: {proposal_id: desc}\n      where: $where\n    )  {\n      aggregate {\n        count\n      }\n    }\n  }`;\n\n  function fetchGraphQL(operationsDoc, operationName, variables) {\n    return asyncFetch(QUERYAPI_ENDPOINT, {\n      method: \"POST\",\n      headers: { \"x-hasura-role\": `thomasguntenaar_near` },\n      body: JSON.stringify({\n        query: operationsDoc,\n        variables: variables,\n        operationName: operationName,\n      }),\n    });\n  }\n\n  function separateNumberAndText(str) {\n    const numberRegex = /\\d+/;\n\n    if (numberRegex.test(str)) {\n      const number = str.match(numberRegex)[0];\n      const text = str.replace(numberRegex, \"\").trim();\n      return { number: parseInt(number), text };\n    } else {\n      return { number: null, text: str.trim() };\n    }\n  }\n\n  const buildWhereClause = () => {\n    let where = {};\n    if (state.author) {\n      where = { author_id: { _eq: state.author }, ...where };\n    }\n\n    if (state.category) {\n      where = { category: { _eq: state.category }, ...where };\n    }\n\n    if (state.stage) {\n      // timeline is stored as jsonb\n      where = {\n        timeline: { _cast: { String: { _ilike: `%${state.stage}%` } } },\n        ...where,\n      };\n    }\n    if (state.input) {\n      const { number, text } = separateNumberAndText(state.input);\n      if (number) {\n        where = { proposal_id: { _eq: number }, ...where };\n      }\n\n      if (text) {\n        where = { description: { _ilike: `%${text}%` }, ...where };\n      }\n    }\n\n    return where;\n  };\n\n  const buildOrderByClause = () => {\n    /**\n     * TODO\n     * Most commented -> edit contract and indexer\n     * Unanswered -> 0 comments\n     */\n  };\n\n  const makeMoreItems = () => {\n    if (state.aggregatedCount <= state.currentlyDisplaying) return;\n    fetchProposals(state.data.length);\n  };\n\n  const fetchProposals = (offset) => {\n    if (!offset) {\n      offset = 0;\n    }\n    if (state.loading) return;\n    const FETCH_LIMIT = 10;\n    const variables = {\n      limit: FETCH_LIMIT,\n      offset,\n      where: buildWhereClause(),\n    };\n    fetchGraphQL(query, \"GetLatestSnapshot\", variables).then(async (result) => {\n      if (result.status === 200) {\n        if (result.body.data) {\n          const data =\n            result.body.data\n              .thomasguntenaar_near_events_committee_proposals_proposals_with_latest_snapshot;\n          const totalResult =\n            result.body.data\n              .thomasguntenaar_near_events_committee_proposals_proposals_with_latest_snapshot_aggregate;\n          State.update({ aggregatedCount: totalResult.aggregate.count });\n          // Parse timeline\n          fetchBlockHeights(data, offset);\n        }\n      }\n    });\n  };\n\n  const renderItem = (item, index) => (\n    <div\n      key={item.proposal_id}\n      className={\n        (index !== state.data.length - 1 && \"border-bottom \") + index === 0 &&\n        \" rounded-top-2\"\n      }\n    >\n      <FeedItem proposal={item} index={index} />\n    </div>\n  );\n  const cachedRenderItem = (item, index) => {\n    if (props.term) {\n      return renderItem(item, {\n        searchKeywords: [props.term],\n      });\n    }\n\n    const key = JSON.stringify(item);\n\n    if (!(key in state.cachedItems)) {\n      state.cachedItems[key] = renderItem(item, index);\n      State.update();\n    }\n    return state.cachedItems[key];\n  };\n\n  useEffect(() => {\n    fetchProposals();\n  }, [state.author, state.sort, state.category, state.stage]);\n\n  const mergeItems = (newItems) => {\n    const items = [\n      ...new Set([...newItems, ...state.data].map((i) => JSON.stringify(i))),\n    ].map((i) => JSON.parse(i));\n    // Sorting in the front end\n    if (state.sort === \"proposal_id\" || state.sort === \"\") {\n      items.sort((a, b) => b.proposal_id - a.proposal_id);\n    } else if (state.sort === \"views\") {\n      items.sort((a, b) => b.views - a.views);\n    }\n\n    return items;\n  };\n\n  const fetchBlockHeights = (data, offset) => {\n    let promises = data.map((item) => getProposal(item.proposal_id));\n    Promise.all(promises).then((blockHeights) => {\n      data = data.map((item, index) => ({\n        ...item,\n        timeline: JSON.parse(item.timeline),\n        social_db_post_block_height:\n          blockHeights[index].social_db_post_block_height,\n      }));\n      if (offset) {\n        let newData = mergeItems(data);\n        State.update({\n          data: newData,\n          currentlyDisplaying: newData.length,\n          loading: false,\n        });\n      } else {\n        State.update({\n          data,\n          currentlyDisplaying: data.length,\n          loading: false,\n        });\n      }\n    });\n  };\n\n  const loader = (\n    <div className=\"d-flex justify-content-center align-items-center w-100\">\n      <Widget\n        src={\"events-committee.near/widget/devhub.components.molecule.Spinner\"}\n      />\n    </div>\n  );\n\n  const renderedItems = state.data ? state.data.map(cachedRenderItem) : null;\n\n  return (\n    <Container className=\"w-100 py-4 px-2 d-flex flex-column gap-3\">\n      <div className=\"d-flex justify-content-between flex-wrap gap-2 align-items-center\">\n        <Heading>\n          Proposals\n          <span className=\"text-muted text-normal\">\n            ({state.aggregatedCount ?? state.data.length}){\" \"}\n          </span>\n        </Heading>\n        <div className=\"d-flex flex-wrap gap-4 align-items-center\">\n          <Widget\n            src={\n              \"events-committee.near/widget/devhub.feature.proposal-search.by-input\"\n            }\n            props={{\n              search: state.input,\n              className: \"w-xs-100\",\n              onSearch: (input) => {\n                State.update({ input });\n                fetchProposals();\n              },\n              onEnter: () => {\n                fetchProposals();\n              },\n            }}\n          />\n          <Widget\n            src={\"events-committee.near/widget/devhub.feature.proposal-search.by-sort\"}\n            props={{\n              onStateChange: (select) => {\n                State.update({ sort: select.value });\n              },\n            }}\n          />\n          <div className=\"d-flex gap-4 align-items-center\">\n            <Widget\n              src={\n                \"events-committee.near/widget/devhub.feature.proposal-search.by-category\"\n              }\n              props={{\n                onStateChange: (select) => {\n                  State.update({ category: select.value });\n                },\n              }}\n            />\n            <Widget\n              src={\n                \"events-committee.near/widget/devhub.feature.proposal-search.by-stage\"\n              }\n              props={{\n                onStateChange: (select) => {\n                  State.update({ stage: select.value });\n                },\n              }}\n            />\n            <Widget\n              src={\n                \"events-committee.near/widget/devhub.feature.proposal-search.by-author\"\n              }\n              props={{\n                onAuthorChange: (select) => {\n                  State.update({ author: select.value });\n                },\n              }}\n            />\n          </div>\n        </div>\n        <div className=\"mt-2 mt-xs-0\">\n          <Link\n            to={href({\n              widgetSrc: \"events-committee.near/widget/app\",\n              params: { page: \"create-proposal\" },\n            })}\n          >\n            <Widget\n              src={\"events-committee.near/widget/devhub.components.molecule.Button\"}\n              props={{\n                label: (\n                  <div className=\"d-flex gap-2 align-items-center\">\n                    <div>\n                      <i class=\"bi bi-plus-circle-fill\"></i>\n                    </div>\n                    Submit Proposal\n                  </div>\n                ),\n                classNames: { root: \"green-btn\" },\n              }}\n            />\n          </Link>\n        </div>\n      </div>\n      <div style={{ minHeight: \"50vh\" }}>\n        {!Array.isArray(state.data) ? (\n          loader\n        ) : (\n          <div className=\"card no-border rounded-0 mt-4 py-3 full-width-div\">\n            <div className=\"container-xl\">\n              <div className=\"text-muted bg-grey text-sm mt-2 p-3 rounded-3\">\n                <p className=\"d-flex gap-3 align-items-center mb-0\">\n                  <div>\n                    <i class=\"bi bi-info-circle\"></i>\n                  </div>\n                  <div>\n                    <span className=\"fw-bold\">\n                      Welcome to the\n                      {/* <a\n                        href=\"https://near.social/devhub.near/widget/app?page=community&handle=developer-dao&tab=overview\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                      > */}\n                      Events Committee Proposal Feed!\n                      {/* </a> */}\n                    </span>\n                    This dedicated space makes it easy to submit and track\n                    funding proposals from the Events Committee, the cross-team\n                    organization responsible for hosting and sponsoring\n                    developer-focused events. You are welcome to respond to any\n                    RFPs that are accepting submissions or submit an independent\n                    proposal.\n                  </div>\n                </p>\n              </div>\n              <div className=\"mt-4 border rounded-2\">\n                {state.data.length > 0 ? (\n                  <InfiniteScroll\n                    pageStart={0}\n                    loadMore={makeMoreItems}\n                    hasMore={state.aggregatedCount > state.data.length}\n                    loader={loader}\n                    useWindow={false}\n                    threshold={100}\n                  >\n                    {renderedItems}\n                  </InfiniteScroll>\n                ) : (\n                  loader\n                )}\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </Container>\n  );\n};\n\nreturn FeedPage(props);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/events-committee.near/widget/devhub.entity.proposal.Feed", "fact_widget_deployments_id": "fec4f2169019634303ea36de1a9c046c", "inserted_timestamp": "2024-05-02T17:39:26.862Z", "modified_timestamp": "2024-05-02T17:39:26.862Z", "__row_index": 16}