{"tx_hash": "GWhb4FGvmqUfybmEaD2G46yQeZNtVu8y5adNcsDv9wbG", "action_id_social": "FW1VGFKggkc3PRQbsvN1shSknzFEZKwrMAMAdfyz4DAe-0-widget", "block_id": 101827157, "block_timestamp": "2023-09-24T05:40:40.408Z", "signer_id": "c842b1a648114a20cfca00f01718ee4c6f46d772951d9f8f31dffc189da63b80", "widget_name": "chatbot", "source_code": "const [messages, setMessages] = useState([]);\nconst [inputText, setInputText] = useState(\"\");\nconst [scrollToBottom, setScrollToBottom] = useState(true);\nconst [coinData, setCoinData] = useState([]);\n\nconst handleInputChange = (e) => {\n  setInputText(e.target.value);\n};\n\nconst addMessage = (text, isUser) => {\n  const newMessage = { text, isUser };\n  setMessages([...messages, newMessage]);\n};\n\nconst handleSendMessage = () => {\n  if (inputText.trim() === \"\") return;\n\n  // Add user message\n  addMessage(inputText, true);\n  // Simulate bot response\n  setTimeout(() => {\n    const userMessage = inputText.trim();\n    let botResponse = \"\uc8c4\uc1a1\ud574\uc694, \uc774\ud574\ud558\uc9c0 \ubabb\ud588\uc5b4\uc694.\"; // Default bot response\n\n    if (userMessage === \"\uc548\ub155\") {\n      botResponse = \"\uc548\ub155\ud558\uc138\uc694\";\n    } else if (userMessage.includes(\"\uc2dc\uac04\")) {\n      const now = new Date();\n      const hours = now.getHours();\n      const minutes = now.getMinutes();\n      botResponse = `\ud604\uc7ac \uc2dc\uac04\uc740 ${hours}\uc2dc ${minutes}\ubd84\uc774\uc5d0\uc694.`;\n    } else if (userMessage.toLowerCase().startsWith(\"ticker\")) {\n      const coinSymbol = userMessage.substring(7).toUpperCase();\n      // Fetch Bitcoin price from Binance API\n      asyncFetch(\n        `https://api.binance.com/api/v3/ticker/price?symbol=${coinSymbol}USDT`\n      )\n        .then(({ body }) => {\n          const coinPrice = parseFloat(body.price);\n          botResponse = `\ud604\uc7ac ${coinSymbol} \uac00\uaca9\uc740 $${coinPrice.toFixed(\n            2\n          )}\uc785\ub2c8\ub2e4.`;\n          addMessage(botResponse, true);\n        })\n        .catch((error) => {\n          console.error(\"Error fetching Bitcoin price:\", error);\n          botResponse = \"\uc8c4\uc1a1\ud574\uc694, \uc815\ubcf4\ub97c \uac00\uc838\uc62c \uc218 \uc5c6\uc5b4\uc694.\";\n          addMessage(botResponse, true);\n        });\n    }\n\n    addMessage(botResponse, true);\n\n    // Set scrollToBottom to trigger scrolling\n    setScrollToBottom(true);\n  }, 1000); // Simulate a delay for the bot's response\n\n  setInputText(\"\");\n};\n\nconst ChatAppWrapper = styled.div`\n  width: 100%;\n  height: 100vh;\n\n  .chat-app {\n    background-color: #bacee0;\n    width:100%;\n    height:100%;\n  }\n`;\n\nreturn (\n  <ChatAppWrapper>\n    <div className=\"chat-app\">\n      <div className=\"chat-window\">\n        <div className=\"messages\">\n          {messages.map((message, index) => (\n            <div\n              key={index}\n              className={`message ${message.isUser ? \"user\" : \"bot\"}`}\n            >\n              {message.text}\n            </div>\n          ))}\n        </div>\n        <div\n          className=\"input-box\"\n          style={{\n            position: \"fixed\",\n            bottom: \"50px\",\n            width: \"Calc(100% - 160px)\",\n          }}\n        >\n          <input\n            type=\"text\"\n            value={inputText}\n            onChange={(e) => {\n              handleInputChange(e);\n            }}\n          />\n\n          <button\n            onClick={handleSendMessage}\n            style={{\n              position: \"absolute\",\n              bottom: \"0\",\n              right: \"0\",\n              height: \"100%\",\n              width: \"60px\",\n            }}\n          >\n            \uc804\uc1a1\n          </button>\n        </div>\n      </div>\n    </div>\n  </ChatAppWrapper>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/c842b1a648114a20cfca00f01718ee4c6f46d772951d9f8f31dffc189da63b80/widget/chatbot", "fact_widget_deployments_id": "30e1c3c4d61f00597ce1bf6f0bc04e01", "inserted_timestamp": "2023-09-24T07:30:00.403Z", "modified_timestamp": "2023-09-24T07:30:00.403Z", "__row_index": 0}