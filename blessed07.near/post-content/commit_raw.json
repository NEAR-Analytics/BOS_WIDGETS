{"tx_hash": "67zJ8hAovERX8pPmU7VdeXmvPWq2XTp6qWM5yyHtaYAQ", "action_id_social": "BK2AKUMLuX3MSDf8fq6advn9Vzx5wsSVUNNCm1uwDbiJ-0-widget", "block_id": 106746966, "block_timestamp": "2023-11-28T17:02:31.496Z", "signer_id": "blessed07.near", "widget_name": "post-content", "source_code": "const PostContainer = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: flex-start;\n  align-items: flex-start;\n  padding: 16px;\n  gap: 8px;\n  margin: .8rem 0;\n`;\n\nconst ImageContainer = styled.div`\n    position: relative;\n    display: flex;\n    flex-flow: row nowrap;\n    justify-content: center;\n    align-items: center;\n    width: 100px;\n    min-width: 100px;\n    max-width: 100px;\n    height: 100px;\n    background: #D9D9D9;\n    border-radius: 50% 50%;\n`;\n\nconst Img = styled.img`\n    border-radius: 50% 50%;\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n    object-position: center;\n`;\n\nconst PostContentContainer = styled.div`\n    position: relative;\n    display: flex;\n    flex-flow: column nowrap;\n    gap: 16px;\n    width: 100%;\n`;\n\nconst PostTopContainer = styled.div`\n    flex-basis: auto 1 0;\n    width: 100%;\n    position: relative;\n    display: flex;\n    flex-flow: row nowrap;\n    justify-content: space-between;\n    padding: 8px 0;\n`;\n\nconst PostContent = styled.div`\n    position: relative;\n`;\n\nconst Grid = styled.div`\n  box-spacing: border-box;\n  display: grid;\n  grid-template-columns: repeat(${gridData?.columns || 2}, 1fr);\n  padding: 10px;\n  gap: 8px;\n  width: 100%;\n\n  @media (hover: none) {\n    grid-template-columns: repeat(1, 1fr);\n  }\n`;\n\nconst PostImage = styled.img`\n    border-radius: 8px 8px;\n    position: relative;\n    width: 400px;\n    height: 400px;\n`;\n\nconst accountId = props.accountId;\nif (!accountId) {\n  return \"No accountId\";\n}\n\nconst blockHeight =\n  props.blockHeight === \"now\" ? \"now\" : parseInt(props.blockHeight);\nconst myName = Social.get(`${accountId}/profile/name`);\nconst pinned = !!props.pinned;\nconst hideMenu = !!props.hideMenu;\nconst hideButtons = !!props.hideButtons;\nconst content =\n  props.content ??\n  JSON.parse(Social.get(`${accountId}/post/main`, blockHeight) ?? \"null\");\nconst subscribe = !!props.subscribe;\nconst raw = !!props.raw;\nconst groupId = props.groupId ?? content.groupId;\nconst indexKey = props.indexKey;\nconst permissions = props.permissions;\nconst fullPostLink = props.fullPostLink;\n\nconst notifyAccountId = accountId;\nconst item = {\n  type: \"social\",\n  path: `${accountId}/post/main`,\n  blockHeight,\n};\n\nconst link =\n  props.link ??\n  props.fullPostLink ??\n  `/mob.near/widget/MainPage.N.Post.Page?accountId=${accountId}&blockHeight=${blockHeight}`;\n// const imgWrapperStyle = { width: \"40px\", height: \"40px\" };\nconst profile = Social.getr(`${accountId}/profile`);\nconst image = profile.image;\n\n// Function to formatAccountId if accountId is not a `.near` account\nconst formatAccountId = (acctId) => {\n  if (acctId.split(\".near\").length == 2) {\n    return acctId;\n  }\n  return `${acctId?.substring(0, 6)}...${acctId?.substring(acctId.length - 4)}`;\n};\n\n// Function to extractHashtags\nconst extractHashtags = (text) => {\n  const hashtagRegex = /#(\\w+)/gi;\n  hashtagRegex.lastIndex = 0;\n  const hashtags = new Set();\n  for (const match of text.matchAll(hashtagRegex)) {\n    if (\n      !/[\\w`]/.test(match.input.charAt(match.index - 1)) &&\n      !/[/\\w`]/.test(match.input.charAt(match.index + match[0].length))\n    ) {\n      hashtags.add(match[1].toLowerCase());\n    }\n  }\n  return [...hashtags];\n};\n\nextractHashtags(content?.text);\n\n// Function to extractImages\nconst extractImages = (text) => {\n  // Define the regex pattern\n  const regex = /!\\[\\]\\((https?:\\/\\/[^\\)]+)\\)/g;\n  const matches = [...text.matchAll(regex)];\n\n  const imageUrls = matches.map((match) => match[1]);\n  console.log(imageUrls);\n\n  return imageUrls;\n};\n\nconst postImages = extractImages(content?.text);\nconst arrm = props.pushToArray;\n\n// Push contents to the parent state\nif (content.text) {\n  arrm([content]);\n}\n\nreturn (\n  <>\n    <PostContainer>\n      <ImageContainer>\n        {image ? (\n          <Img src={`https://ipfs.near.social/ipfs/${image.ipfs_cid}`} />\n        ) : (\n          <div style={{ fontSize: \"40px\", margin: \"auto\" }}>\n            {myName ? myName[0]?.toUpperCase() : \"U\"}\n          </div>\n        )}\n      </ImageContainer>\n      <PostContentContainer>\n        <PostTopContainer>\n          <div\n            class=\"\"\n            style={{ display: \"flex\", alignItems: \"center\", gap: \"16px\" }}\n          >\n            <div>{myName}</div>\n            <div>@{formatAccountId(accountId)}</div>\n            <Widget\n              loading=\"\"\n              src=\"mob.near/widget/TimeAgo\"\n              props={{ blockHeight }}\n            />\n          </div>\n        </PostTopContainer>\n        <PostContent>\n          <div>{content?.text}</div>\n          <Grid>\n            {postImages &&\n              postImages.map((eachPostImage) => (\n                <PostImage src={eachPostImage} />\n              ))}\n          </Grid>\n        </PostContent>\n      </PostContentContainer>\n    </PostContainer>\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/blessed07.near/widget/post-content", "fact_widget_deployments_id": "7f1d42a4d72c40d5f4f7aee23448104f", "inserted_timestamp": "2023-11-28T18:52:12.320Z", "modified_timestamp": "2023-11-28T18:52:12.320Z", "__row_index": 11}