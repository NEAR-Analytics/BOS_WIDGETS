{"tx_hash": "GtPbRYVs191Q2j27hGiU9EqXVQM6q7MALjfwR5BhBMDG", "action_id_social": "DUHEYoK7BD6knGmjgdVNceZ1yeXPVR1r9rsHyAEa9XKU-0-widget", "block_id": 106783982, "block_timestamp": "2023-11-29T04:49:21.293Z", "signer_id": "littlelace.near", "widget_name": "ComponentScroll", "source_code": "// scrollbar\nconst ScrollBar = styled.div`\n  width: 10px;\n  height: 100%;\n  right: 0;\n  top: 0px;\n  position: absolute;\n  border-radius: 7px;\n  bottom: 0px;\n  background-color: rgba(0, 0, 0, 0.35);\n  opacity: 1;\n  align-self: center;\n  justify-self: center;\n`;\n\nconst ScrollBarTrack = styled.div`\n  position: relative;\n  height: 100%;\n`;\n\nconst ScrollBarThumb = styled.div`\n  position: absolute;\n  width: 100%;\n  background-color: #888;\n  border-radius: 4px;\n`;\n\nconst [scrollbarHeight, setScrollbarHeight] = useState(0);\nconst [thumbTop, setThumbTop] = useState(0);\n\nconst handleScroll = (event) => {\n  const { scrollTop, scrollHeight, clientHeight } = event.target;\n\n  const calculatedHeight = (clientHeight / scrollHeight) * clientHeight;\n  const calculatedTop = (scrollTop / scrollHeight) * 100;\n\n  console.log(props)\n  setScrollbarHeight(calculatedHeight);\n  setThumbTop(calculatedTop);\n};\n\nreturn (\n  <ScrollBar >\n    <ScrollBarTrack>\n      <ScrollBarThumb\n        scrollbarHeight={scrollbarHeight}\n        thumbTop={thumbTop + \"%\"}\n      />\n    </ScrollBarTrack>\n  </ScrollBar>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/littlelace.near/widget/ComponentScroll", "fact_widget_deployments_id": "eac17da79b58ed72798cf6936f6e2d3b", "inserted_timestamp": "2023-11-29T06:47:32.112Z", "modified_timestamp": "2023-11-29T06:47:32.112Z", "__row_index": 2}