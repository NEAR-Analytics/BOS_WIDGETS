{"tx_hash": "7RndXjwZeSt1bRU4YQVVnf884RTjUBCNyf4zAeTTjo4G", "action_id_social": "2SnJksZJGGJ1GHUrJVchYRUmr1aYou981kLnWuidNDdM-0-widget", "block_id": 99774505, "block_timestamp": "2023-08-27T11:37:29.791Z", "signer_id": "tonitran.near", "widget_name": "InfoAssist", "source_code": "State.init({\r\n  data: null,\r\n  isFetched: false,\r\n  isModalOpen: false,\r\n  isButtonShow: true,\r\n  selectingId: \"\",\r\n  selectingIdContent: \"\",\r\n  selectingIdUrl: \"\",\r\n  chatcontent: \"\",\r\n  queryText: \"\",\r\n  isSending: false,\r\n});\r\n\r\nconst Wrapper = styled.div`\r\n  body {\r\n  background: #444;\r\n}\r\n\r\n.custom-textarea {\r\n  width: 70%; \r\n}\r\n\r\n.loading-spinner {\r\n  border: 4px solid rgba(0, 0, 0, 0.1);\r\n  border-top: 4px solid #fff;\r\n  border-radius: 50%;\r\n  width: 20px;\r\n  height: 20px;\r\n  animation: spin 1s linear infinite;\r\n}\r\n\r\n@keyframes spin {\r\n  0% {\r\n    transform: rotate(0deg);\r\n  }\r\n  100% {\r\n    transform: rotate(360deg);\r\n  }\r\n}\r\n\r\n.play-btn {\r\n  width: 30px;\r\n  height: 30px;\r\n  background: radial-gradient( rgba(255, 0, 128, 0.8) 60%, rgba(255, 255, 255, 1) 62%);\r\n  border-radius: 50%;\r\n  position: relative;\r\n  display: block;\r\n  margin: 3px auto;\r\n  box-shadow: 0px 0px 2.5px 0.3px rgba(255, 0, 128, 0.8);\r\n}\r\n\r\n/* triangle */\r\n.play-btn::after {\r\n  content: \"\";\r\n  position: absolute;\r\n  left: 50%;\r\n  top: 50%;\r\n  -webkit-transform: translateX(-40%) translateY(-50%);\r\n  transform: translateX(-40%) translateY(-50%);\r\n  transform-origin: center center;\r\n  width: 0;\r\n  height: 0;\r\n  border-top: 10px solid transparent;\r\n  border-bottom: 10px solid transparent;\r\n  border-left: 15px solid #fff;\r\n  z-index: 100;\r\n  -webkit-transition: all 400ms cubic-bezier(0.55, 0.055, 0.675, 0.19);\r\n  transition: all 400ms cubic-bezier(0.55, 0.055, 0.675, 0.19);\r\n}\r\n\r\n/* pulse wave */\r\n.play-btn:before {\r\n  content: \"\";\r\n  position: absolute;\r\n  width: 150%;\r\n  height: 150%;\r\n  -webkit-animation-delay: 0s;\r\n  animation-delay: 0s;\r\n  -webkit-animation: pulsate1 2s;\r\n  animation: pulsate1 2s;\r\n  -webkit-animation-direction: forwards;\r\n  animation-direction: forwards;\r\n  -webkit-animation-iteration-count: infinite;\r\n  animation-iteration-count: infinite;\r\n  -webkit-animation-timing-function: steps;\r\n  animation-timing-function: steps;\r\n  opacity: 1;\r\n  border-radius: 50%;\r\n  border: 5px solid rgba(255, 255, 255, .75);\r\n  top: -30%;\r\n  left: -30%;\r\n  background: rgba(198, 16, 0, 0);\r\n}\r\n\r\n@-webkit-keyframes pulsate1 {\r\n  0% {\r\n    -webkit-transform: scale(0.6);\r\n    transform: scale(0.6);\r\n    opacity: 1;\r\n    box-shadow: inset 0px 0px 25px 3px rgba(255, 255, 255, 0.75), 0px 0px 25px 10px rgba(255, 255, 255, 0.75);\r\n  }\r\n  100% {\r\n    -webkit-transform: scale(1);\r\n    transform: scale(1);\r\n    opacity: 0;\r\n    box-shadow: none;\r\n\r\n  }\r\n}\r\n\r\n@keyframes pulsate1 {\r\n  0% {\r\n    -webkit-transform: scale(0.6);\r\n    transform: scale(0.6);\r\n    opacity: 1;\r\n    box-shadow: inset 0px 0px 25px 3px rgba(255, 255, 255, 0.75), 0px 0px 25px 10px rgba(255, 255, 255, 0.75);\r\n  }\r\n  100% {\r\n    -webkit-transform: scale(1, 1);\r\n    transform: scale(1);\r\n    opacity: 0;\r\n    box-shadow: none;\r\n\r\n  }\r\n}\r\n`;\r\n\r\nfunction setQueryText(text) {\r\n  State.update({ queryText: text });\r\n}\r\n\r\nfunction playAudio() {\r\n  asyncFetch(\"https://news.nftfi.cloud/newaudiourl/\").then(({ body }) => {\r\n    console.log(\"Audio body:\", body);\r\n    let audio = new Audio(body);\r\n    audio.play();\r\n  });\r\n}\r\n\r\nfunction handleKeyPress(event) {\r\n  if (event.key === \"Enter\" && state.queryText.trim() !== \"\") {\r\n    console.log(\"going to call onSendClick...\");\r\n    onSendClick(state.selectingId, state.queryText);\r\n  }\r\n}\r\n\r\nfunction updateChatbox(question, answer) {\r\n  console.log(\"updateChatbox is called\");\r\n\r\n  const newChatContent =\r\n    state.chatcontent + \"Q: \" + question + \"\\r\\n\" + \"A: \" + answer + \"\\r\\n\";\r\n\r\n  console.log(\"newChatContent: \", newChatContent);\r\n  State.update({ chatcontent: newChatContent });\r\n  console.log(\"state.chatcontent: \", state.chatcontent);\r\n}\r\n\r\nfunction getContentAndUrl(selectedID) {\r\n  const selectedArticle = state.data.find(\r\n    (article) => article.id === selectedID\r\n  );\r\n\r\n  if (selectedArticle) {\r\n    const content = selectedArticle.summary;\r\n    const url = selectedArticle.url;\r\n    console.log(\"content: \", content);\r\n    console.log(\"url: \", url);\r\n    State.update({\r\n      selectingIdContent: content,\r\n      selectingIdUrl: url,\r\n    });\r\n    console.log(\"state.selectingIdContent: \", state.selectingIdContent);\r\n    console.log(\"state.selectingIdUrl: \", state.selectingIdUrl);\r\n  } else {\r\n    State.update({\r\n      selectingIdContent: \"Article not found\",\r\n    });\r\n  }\r\n}\r\n\r\nfunction openModal(articleId) {\r\n  console.log(\"Clicked on button with article ID:\", articleId);\r\n  getContentAndUrl(articleId);\r\n  State.update({\r\n    isModalOpen: true,\r\n    isButtonShow: false,\r\n    selectingId: articleId,\r\n  });\r\n  console.log(\"isModalOpen: \", state.isModalOpen);\r\n  console.log(\"isButtonShow: \", state.isButtonShow);\r\n  console.log(\"buttons: \", buttons);\r\n}\r\n\r\nfunction closeModal() {\r\n  State.update({ isModalOpen: false, isButtonShow: true, selectingId: \"\" });\r\n  console.log(\"isModalOpen: \", state.isModalOpen);\r\n  console.log(\"isButtonShow: \", state.isButtonShow);\r\n  console.log(\"buttons: \", buttons);\r\n}\r\n\r\nfunction onSendClick(articleId, queryText) {\r\n  State.update({ queryText: \"\", isSending: true });\r\n  console.log(\"onSendClick is called with queryText:\", queryText);\r\n  asyncFetch(\"https://news.nftfi.cloud/articles/\" + articleId + \"/ask/\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ query: queryText }),\r\n  })\r\n    .then((response) => {\r\n      const answer = response.body.answer;\r\n      updateChatbox(queryText, answer);\r\n    })\r\n    .then(() => {\r\n      State.update({ isSending: false });\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error:\", error);\r\n    });\r\n}\r\n\r\nif (!state.isFetched) {\r\n  asyncFetch(\"https://news.nftfi.cloud/titles/\").then(({ body }) => {\r\n    State.update({ data: body, isFetched: true });\r\n    console.log(\"Finish fectching\");\r\n  });\r\n}\r\n\r\nconst buttons = state.data.map((button) => {\r\n  return (\r\n    <button\r\n      key={button.id}\r\n      type=\"button\"\r\n      style={{\r\n        width: \"100%\",\r\n        whiteSpace: \"nowrap\",\r\n        overflow: \"hidden\",\r\n        textOverflow: \"ellipsis\",\r\n        textAlign: \"left\",\r\n      }}\r\n      onClick={() => openModal(button.id)}\r\n    >\r\n      ({button.published.split(\"-\").slice(1).join(\"-\")}) {button.title}\r\n    </button>\r\n  );\r\n});\r\n\r\nreturn (\r\n  <div>\r\n    <Wrapper>\r\n      <a class=\"play-btn\" href=\"#\" onClick={() => playAudio()}></a>\r\n      <div style={{ textAlign: \"center\" }}>\r\n        ( Selected Category = \"Blockchain\" )\r\n      </div>\r\n    </Wrapper>\r\n    {state.isButtonShow && buttons}\r\n    {state.isModalOpen && (\r\n      <div\r\n        id=\"modal\"\r\n        class=\"fixed z-10 inset-0 overflow-y-auto\"\r\n        aria-labelledby=\"modal-title\"\r\n        role=\"dialog\"\r\n        aria-modal=\"true\"\r\n      >\r\n        <div class=\"flex min-h-screen pt-0 px-0 pb-20 sm:block sm:p-0\">\r\n          <div class=\"inline-block align-top bg-gray-900 text-blue rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-top sm:w-full\">\r\n            <div class=\"px-0 pt-0 pb-4 sm:p-6 sm:pb-4\">\r\n              <p id=\"modal-summary\" class=\"mt-2 text-sm\">\r\n                <p style={{ whiteSpace: \"pre-line\", textAlign: \"left\" }}>\r\n                  {state.selectingIdContent}\r\n                </p>\r\n                <a\r\n                  href={state.selectingIdUrl}\r\n                  target=\"_blank\"\r\n                  class=\"mt-2 text-indigo-500 hover:text-indigo-400\"\r\n                >\r\n                  Original Source\r\n                </a>\r\n                <div class=\"mt-1\">\r\n                  <div\r\n                    id=\"chatbox\"\r\n                    class=\"mt-1\"\r\n                    style={{ whiteSpace: \"pre-line\" }}\r\n                  >\r\n                    {state.chatcontent}\r\n                  </div>\r\n                  <div class=\"d-flex flex-column\">\r\n                    <Wrapper>\r\n                      <div>\r\n                        <textarea\r\n                          id=\"querytext\"\r\n                          width=\"1600\"\r\n                          rows=\"2\"\r\n                          maxlength=\"200\"\r\n                          class=\"px-3 py-2 text-gray-700 border rounded-lg focus:outline-none focus:shadow-outline\"\r\n                          placeholder=\"Input your question ...\"\r\n                          value={state.queryText}\r\n                          onChange={(e) => setQueryText(e.target.value)}\r\n                          onKeyUp={(e) => handleKeyPress(e)}\r\n                        ></textarea>\r\n\r\n                        <button\r\n                          id=\"sendButton\"\r\n                          class=\"mt-2 bg-indigo-500 hover:bg-indigo-400 text-blue font-bold py-2 px-4 rounded\"\r\n                          onClick={() =>\r\n                            onSendClick(state.selectingId, state.queryText)\r\n                          }\r\n                        >\r\n                          {state.isSending ? (\r\n                            <span class=\"loading-spinner\">sending...</span>\r\n                          ) : (\r\n                            <i class=\"fas fa-chevron-right\">Send</i>\r\n                          )}\r\n                        </button>\r\n                      </div>\r\n                    </Wrapper>\r\n                  </div>\r\n                </div>\r\n              </p>\r\n            </div>\r\n\r\n            <button\r\n              id=\"modal-close\"\r\n              type=\"button\"\r\n              class=\"mt-0 w-full inline-flex justify-top rounded-md border border-transparent shadow-sm px-4 py-2 bg-indigo-700 text-base font-medium hover:bg-indigo-800 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-900 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm\"\r\n              onClick={() => closeModal()}\r\n            >\r\n              Back\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )}\r\n  </div>\r\n);\r\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/tonitran.near/widget/InfoAssist", "fact_widget_deployments_id": "ee0f813493cfe028b08a078533469cd8", "inserted_timestamp": "2023-08-27T13:28:59.748Z", "modified_timestamp": "2023-08-27T13:28:59.748Z", "__row_index": 5}