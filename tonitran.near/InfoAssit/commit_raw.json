{"tx_hash": "3gatepzLJUV69z5LWrQaA8orW8X5aQYy8zeuXPHodZdN", "action_id_social": "4zqvfUHJ8bCa72T6EmmWzV2Nw5DJ9VcvNvMaZ4Ma6epT-0-widget", "block_id": 99769007, "block_timestamp": "2023-08-27T09:52:54.036Z", "signer_id": "tonitran.near", "widget_name": "InfoAssit", "source_code": "State.init({\n  data: null,\n  isFetched: false,\n  isModalOpen: false,\n  isButtonShow: true,\n  selectingId: \"\",\n  selectingIdContent: \"\",\n  selectingIdUrl: \"\",\n  chatcontent: \"\",\n  queryText: \"\",\n  isSending: false,\n});\n\nconst Wrapper = styled.div`\n  body {\n  background: #444;\n}\n\n.custom-textarea {\n  width: 70%; \n}\n\n.loading-spinner {\n  border: 4px solid rgba(0, 0, 0, 0.1);\n  border-top: 4px solid #fff;\n  border-radius: 50%;\n  width: 20px;\n  height: 20px;\n  animation: spin 1s linear infinite;\n}\n\n@keyframes spin {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n\n.play-btn {\n  width: 30px;\n  height: 30px;\n  background: radial-gradient( rgba(255, 0, 128, 0.8) 60%, rgba(255, 255, 255, 1) 62%);\n  border-radius: 50%;\n  position: relative;\n  display: block;\n  margin: 3px auto;\n  box-shadow: 0px 0px 2.5px 0.3px rgba(255, 0, 128, 0.8);\n}\n\n/* triangle */\n.play-btn::after {\n  content: \"\";\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  -webkit-transform: translateX(-40%) translateY(-50%);\n  transform: translateX(-40%) translateY(-50%);\n  transform-origin: center center;\n  width: 0;\n  height: 0;\n  border-top: 10px solid transparent;\n  border-bottom: 10px solid transparent;\n  border-left: 15px solid #fff;\n  z-index: 100;\n  -webkit-transition: all 400ms cubic-bezier(0.55, 0.055, 0.675, 0.19);\n  transition: all 400ms cubic-bezier(0.55, 0.055, 0.675, 0.19);\n}\n\n/* pulse wave */\n.play-btn:before {\n  content: \"\";\n  position: absolute;\n  width: 150%;\n  height: 150%;\n  -webkit-animation-delay: 0s;\n  animation-delay: 0s;\n  -webkit-animation: pulsate1 2s;\n  animation: pulsate1 2s;\n  -webkit-animation-direction: forwards;\n  animation-direction: forwards;\n  -webkit-animation-iteration-count: infinite;\n  animation-iteration-count: infinite;\n  -webkit-animation-timing-function: steps;\n  animation-timing-function: steps;\n  opacity: 1;\n  border-radius: 50%;\n  border: 5px solid rgba(255, 255, 255, .75);\n  top: -30%;\n  left: -30%;\n  background: rgba(198, 16, 0, 0);\n}\n\n@-webkit-keyframes pulsate1 {\n  0% {\n    -webkit-transform: scale(0.6);\n    transform: scale(0.6);\n    opacity: 1;\n    box-shadow: inset 0px 0px 25px 3px rgba(255, 255, 255, 0.75), 0px 0px 25px 10px rgba(255, 255, 255, 0.75);\n  }\n  100% {\n    -webkit-transform: scale(1);\n    transform: scale(1);\n    opacity: 0;\n    box-shadow: none;\n\n  }\n}\n\n@keyframes pulsate1 {\n  0% {\n    -webkit-transform: scale(0.6);\n    transform: scale(0.6);\n    opacity: 1;\n    box-shadow: inset 0px 0px 25px 3px rgba(255, 255, 255, 0.75), 0px 0px 25px 10px rgba(255, 255, 255, 0.75);\n  }\n  100% {\n    -webkit-transform: scale(1, 1);\n    transform: scale(1);\n    opacity: 0;\n    box-shadow: none;\n\n  }\n}\n`;\n\nfunction setQueryText(text) {\n  State.update({ queryText: text });\n}\n\nfunction playAudio() {\n  asyncFetch(\"https://news.nftfi.cloud/newaudiourl/\").then(({ body }) => {\n    console.log(\"Audio body:\", body);\n    let audio = new Audio(body);\n    audio.play();\n  });\n}\n\nfunction handleKeyPress(event) {\n  if (event.key === \"Enter\" && state.queryText.trim() !== \"\") {\n    console.log(\"going to call onSendClick...\");\n    onSendClick(state.selectingId, state.queryText);\n  }\n}\n\nfunction updateChatbox(question, answer) {\n  console.log(\"updateChatbox is called\");\n \n  const newChatContent =\n    state.chatcontent + \"Q: \" + question + \"\\r\\n\" + \"A: \" + answer + \"\\r\\n\";\n\n  console.log(\"newChatContent: \", newChatContent);\n  State.update({ chatcontent: newChatContent });\n  console.log(\"state.chatcontent: \", state.chatcontent);\n}\n\nfunction getContentAndUrl(selectedID) {\n  const selectedArticle = state.data.find(\n    (article) => article.id === selectedID\n  );\n\n  if (selectedArticle) {\n    const content = selectedArticle.summary;\n    const url = selectedArticle.url;\n    console.log(\"content: \", content);\n    console.log(\"url: \", url);\n    State.update({\n      selectingIdContent: content,\n      selectingIdUrl: url,\n    });\n    console.log(\"state.selectingIdContent: \", state.selectingIdContent);\n    console.log(\"state.selectingIdUrl: \", state.selectingIdUrl);\n  } else {\n    State.update({\n      selectingIdContent: \"Article not found\",\n    });\n  }\n}\n\nfunction openModal(articleId) {\n  console.log(\"Clicked on button with article ID:\", articleId);\n  getContentAndUrl(articleId);\n  State.update({\n    isModalOpen: true,\n    isButtonShow: false,\n    selectingId: articleId,\n  });\n  console.log(\"isModalOpen: \", state.isModalOpen);\n  console.log(\"isButtonShow: \", state.isButtonShow);\n  console.log(\"buttons: \", buttons);\n}\n\nfunction closeModal() {\n  State.update({ isModalOpen: false, isButtonShow: true, selectingId: \"\" });\n  console.log(\"isModalOpen: \", state.isModalOpen);\n  console.log(\"isButtonShow: \", state.isButtonShow);\n  console.log(\"buttons: \", buttons);\n}\n\nfunction onSendClick(articleId, queryText) {\n  State.update({ queryText: \"\", isSending: true });\n  console.log(\"onSendClick is called with queryText:\", queryText);\n  asyncFetch(\"https://news.nftfi.cloud/articles/\" + articleId + \"/ask/\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ query: queryText }),\n  })\n    .then((response) => {\n      const answer = response.body.answer;\n      updateChatbox(queryText, answer);\n    })\n    .then(() => {\n      State.update({ isSending: false });\n    })\n    .catch((error) => {\n      console.error(\"Error:\", error);\n    });\n}\n\nif (!state.isFetched) {\n\n  asyncFetch(\"https://news.nftfi.cloud/titles/\").then(({ body }) => {\n    State.update({ data: body, isFetched: true });\n    console.log(\"Finish fectching\");\n  });\n}\n\nconst buttons = state.data.map((button) => {\n  return (\n    <button\n      key={button.id}\n      type=\"button\"\n      style={{\n        width: \"100%\",\n        whiteSpace: \"nowrap\",\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n        textAlign: \"left\",\n      }}\n      onClick={() => openModal(button.id)}\n    >\n      ({button.published.split(\"-\").slice(1).join(\"-\")}) {button.title}\n    </button>\n  );\n});\n\nreturn (\n  <div>\n    <Wrapper>\n      <a class=\"play-btn\" href=\"#\" onClick={() => playAudio()}></a>\n      <div style={{ textAlign: \"center\" }}>\n ( Selected Category = \"Blockchain\" )\n </div>\n    </Wrapper>\n    {state.isButtonShow && buttons}\n    {state.isModalOpen && (\n      <div\n        id=\"modal\"\n        class=\"fixed z-10 inset-0 overflow-y-auto\"\n        aria-labelledby=\"modal-title\"\n        role=\"dialog\"\n        aria-modal=\"true\"\n      >\n        <div class=\"flex min-h-screen pt-0 px-0 pb-20 sm:block sm:p-0\">\n          <div class=\"inline-block align-top bg-gray-900 text-blue rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-top sm:w-full\">\n            <div class=\"px-0 pt-0 pb-4 sm:p-6 sm:pb-4\">\n              <p id=\"modal-summary\" class=\"mt-2 text-sm\">\n                <p style={{ whiteSpace: \"pre-line\", textAlign: \"left\" }}>\n                  {state.selectingIdContent}\n                </p>\n                <a\n                  href={state.selectingIdUrl}\n                  target=\"_blank\"\n                  class=\"mt-2 text-indigo-500 hover:text-indigo-400\"\n                >\n                  Link \u0111\u1ea7y \u0111\u1ee7\n                </a>\n                <div class=\"mt-1\">\n                  <div\n                    id=\"chatbox\"\n                    class=\"mt-1\"\n                    style={{ whiteSpace: \"pre-line\" }}\n                  >\n                    {state.chatcontent}\n                  </div>\n                  <div class=\"d-flex flex-column\">\n                    <Wrapper>\n                      <div>\n                        <textarea\n                          id=\"querytext\"\n                          width=\"1600\"\n                          rows=\"2\"\n                          maxlength=\"200\"\n                          class=\"px-3 py-2 text-gray-700 border rounded-lg focus:outline-none focus:shadow-outline\"\n                          placeholder=\"Nh\u1eadp c\u00e2u h\u1ecfi ...\"\n                          value={state.queryText}\n                          onChange={(e) => setQueryText(e.target.value)}\n                          onKeyUp={(e) => handleKeyPress(e)}\n                        ></textarea>\n\n                        <button\n                          id=\"sendButton\"\n                          class=\"mt-2 bg-indigo-500 hover:bg-indigo-400 text-blue font-bold py-2 px-4 rounded\"\n                          onClick={() =>\n                            onSendClick(state.selectingId, state.queryText)\n                          }\n                        >\n                          {state.isSending ? (\n                            <span class=\"loading-spinner\">sending...</span>\n                          ) : (\n                            <i class=\"fas fa-chevron-right\">Send</i>\n                          )}\n                        </button>\n                      </div>\n                    </Wrapper>\n                  </div>\n                </div>\n              </p>\n            </div>\n\n            <button\n              id=\"modal-close\"\n              type=\"button\"\n              class=\"mt-0 w-full inline-flex justify-top rounded-md border border-transparent shadow-sm px-4 py-2 bg-indigo-700 text-base font-medium hover:bg-indigo-800 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-900 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm\"\n              onClick={() => closeModal()}\n            >\n              Back\n            </button>\n          </div>\n        </div>\n      </div>\n    )}\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/tonitran.near/widget/InfoAssit", "fact_widget_deployments_id": "dc69a799802637e8aae0dfdf81c0e858", "inserted_timestamp": "2023-08-27T11:33:58.945Z", "modified_timestamp": "2023-08-27T11:33:58.945Z", "__row_index": 2}