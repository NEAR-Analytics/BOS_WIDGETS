{"tx_hash": "519mhdtvtRQWaaiKW1AviTF5dnQBAQxrgb38N3tW9iU9", "action_id_social": "CNT6RSmsdoNGJMPhnDAqmVE7jAhGzbfBpcTdeAjX4PC2-0-widget", "block_id": 111253314, "block_timestamp": "2024-01-25T04:10:05.003Z", "signer_id": "659f08890482b5a2270c0096ab85a8dd1d1e8f0fb656b4fa44e72049a81e0f43", "widget_name": "billbos-reward", "source_code": "const state = props.state;\nconst handleRequest = props.handleRequest ? props.handleRequest : () => {};\nconst BACKEND_API = props.BACKEND_API;\nconst coreContractAddress = props.coreContractAddress;\nconst CHAIN_LIST = [25925, 35011];\n\nState.init({\n  name: \"\",\n});\n\nconst BillBOSCoreABI = fetch(\n  \"https://gist.githubusercontent.com/Chayanonc/1c7b2cf1559ed20b342f76846966cb65/raw/fa27150e36d18d43d6298c8dd27f8c8e852dde23/billbos-core.json\"\n).body;\n\nif (!BillBOSCoreABI) {\n  return \"Loading\";\n}\n\nconst [totalView, setTotalView] = useState(0);\nconst [ratioOfWallet, setRatioOfWallet] = useState(0);\nconst [totalEarningPerUser, setTotalEarningPerUser] = useState(0);\nconst [currentEarning, setCurrentEarning] = useState(0);\nconst [claim, setClaim] = useState({});\n\nfunction getReward() {\n  CHAIN_LIST.map((item) => {\n    const provider = new ethers.providers.JsonRpcProvider(\n      state.chains[item].rpcUrl\n    );\n    const contract = new ethers.Contract(\n      state.chains[item].billBOSCore,\n      BillBOSCoreABI,\n      provider\n    );\n    console.log(\"address\", state.chains[item].billBOSCore);\n    contract.getReward(state.walletAddress).then((res) => {\n      console.log(\"get reward\");\n      console.log({ item, res });\n      claim[`${item}`] = Number(ethers.utils.formatEther(res[0])).toFixed(6);\n    });\n  });\n}\n\ngetReward();\nfunction tapRewards() {\n  const walletAddress = state.walletAddress;\n  const month = Number(state.monthCount);\n\n  const urlView =\n    BACKEND_API +\n    `/ads/total-webpageowner-view-by-owner-address?month=${month}&walletAddress=${walletAddress}`;\n  asyncFetch(urlView, {\n    method: \"GET\",\n  }).then((res) => {\n    console.log({ res });\n    if (res.ok) {\n      setTotalView(res.body.view);\n    }\n  });\n  const urlRatio =\n    BACKEND_API +\n    `/ads/ratio-webpageOwnerview-by-allwebpageOwner?month=${month}&walletAddress=${walletAddress}`;\n  asyncFetch(urlRatio, {\n    method: \"GET\",\n  }).then((res) => {\n    if (res.ok) {\n      setRatioOfWallet(Number(res.body.ratio));\n    }\n  });\n\n  const signer = Ethers.provider().getSigner();\n  const contract = new ethers.Contract(\n    coreContractAddress,\n    BillBOSCoreABI,\n    signer\n  );\n\n  contract.getTotalEarningPerUser(state.walletAddress).then((res) => {\n    setTotalEarningPerUser(Number(ethers.utils.formatEther(res)));\n  });\n\n  contract.getCurrentEarning().then((res) => {\n    setCurrentEarning(Number(ethers.utils.formatEther(res)));\n  });\n\n  console.log({ claim });\n\n  return (\n    <div>\n      <div\n        style={{ height: \"430px\" }}\n        className=\"bg-black container flex items-center\"\n      >\n        <div className=\"w-96 text-white\">\n          <h2 className=\"text-4xl font-semibold\">\n            Generate Ads ID. Earn Crypto Together\n          </h2>\n          <p className=\"mt-2\">Earn up to 20% commission on every view</p>\n        </div>\n      </div>\n      {state.walletConnected ? (\n        <div\n          style={{ marginTop: \"-50px\" }}\n          className=\"container rounded-t-3xl gray-surface min-h-screen\"\n        >\n          <div className=\"flex justify-between py-8 items-center \">\n            <div>\n              <h2 className=\"font-semibold text-xl \">Overview</h2>\n              <p className=\"text-sm\">\n                Unlock the power of onchain data for Web3 Ads\n              </p>\n            </div>\n            <div>\n              <Widget\n                src=\"chayanonc-ph.near/widget/billbos-ads\"\n                props={{\n                  btnName: \"Get my ads component\",\n                  btnClass:\n                    \"brand-green px-2.5 py-2 rounded-xl text-white text-sm font-semibold\",\n                  height: \"467px\",\n                  width: \"550px\",\n                  isOpenDefault: false,\n                  body: \"\",\n                }}\n              />\n            </div>\n          </div>\n          <div className=\"grid grid-cols-3 gap-4 mb-5\">\n            <div className=\"p-3 bg-white rounded-xl \">\n              <div>\n                <p className=\"text-xs secondary-text\">\n                  This Month Total Earnings\n                </p>\n                <p className=\"text-xl mt-1 font-medium\">\n                  {Number(ratioOfWallet * currentEarning).toFixed(6)}\n                </p>\n              </div>\n            </div>\n            <div className=\"p-3 bg-white rounded-xl\">\n              <div>\n                <p className=\"text-xs secondary-text\">My Total View</p>\n                <p className=\"text-xl mt-1 font-medium\">{totalView}</p>\n              </div>\n            </div>\n            <div className=\"p-3 bg-white rounded-xl\">\n              <div>\n                <p className=\"text-xs secondary-text\">My Total Earnings</p>\n                <p className=\"text-xl mt-1 font-medium\">\n                  {Number(\n                    ratioOfWallet * currentEarning + totalEarningPerUser\n                  ).toFixed(6)}{\" \"}\n                  USDT\n                </p>\n              </div>\n            </div>\n          </div>\n          <div className=\"w-full my-4\">\n            <p className=\"text-sm font-medium\">Reward</p>\n          </div>\n          <div className=\"flex gap-3\">\n            {CHAIN_LIST\n              ? CHAIN_LIST.map((item, i) => {\n                  return (\n                    <Widget\n                      src=\"porx-dev.near/widget/billbos-reward-card\"\n                      props={{\n                        chainName: state.chains[item].name,\n                        amount: claim[`${item}`] || \"0.000000\",\n                        tokenName: \"USDT\",\n                        onClaim: onClaim,\n                      }}\n                    />\n                  );\n                })\n              : \"\"}\n          </div>\n        </div>\n      ) : (\n        <>\n          <div\n            style={{ marginTop: \"-50px\" }}\n            className=\"container rounded-t-3xl gray-surface min-h-screen\"\n          >\n            <div className=\" flex justify-center\">\n              <div className=\"w-1/2\">\n                <Widget\n                  src=\"chayanonc-ph.near/widget/billbos-authen\"\n                  props={{}}\n                />\n              </div>\n            </div>\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n\nreturn (\n  <>\n    <Widget\n      src=\"chayanonc-ph.near/widget/billbos-css\"\n      props={{ children: tapRewards() }}\n    />\n  </>\n);\n", "metadata": {"fork_of": "659f08890482b5a2270c0096ab85a8dd1d1e8f0fb656b4fa44e72049a81e0f43/widget/billbos-reward@111249298"}, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/659f08890482b5a2270c0096ab85a8dd1d1e8f0fb656b4fa44e72049a81e0f43/widget/billbos-reward", "fact_widget_deployments_id": "504a584ba2e04bc70d68991ba68cf3dc", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 1}