{"tx_hash": "4g3SHEvCkwSjx5VZ5giYeUVDBPxkdY8Mm2tTw2NHn2TU", "action_id_social": "FtXmZ2eigMmRFbfwF4TRhdJnESTjBCVn8UpXoSxxCgrD-1-widget", "block_id": 87453950, "block_timestamp": "2023-03-16T23:02:12.558Z", "signer_id": "evrything.near", "widget_name": "Everything.View.Thing", "source_code": "const ERROR_WIDGET = \"evrything.near/widget/Everything.Error\";\n\nconst ThingContainer = styled.div`\n  padding: 2px;\n`;\n\nconst thingId = props.thingId;\n\nif (thingId === null) {\n  return (\n    <Widget\n      src={ERROR_WIDGET}\n      props={{\n        message: \"thing id was not provided.\",\n      }}\n    />\n  );\n}\n\nconst type = props.type;\n\nif (type === null) {\n  return (\n    <Widget\n      src={ERROR_WIDGET}\n      props={{\n        message: `provided type: \"${props.type}\" is not valid.`,\n      }}\n    />\n  );\n}\n\nconst data = fetch(type.queries?.getById.url, {\n  method: \"POST\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n  body: JSON.stringify({\n    query: type.queries?.getById.query,\n    variables: {\n      thingId: thingId,\n    },\n  }),\n});\n\nif (data.body.errors) {\n  return (\n    <Widget\n      src={ERROR_WIDGET}\n      props={{\n        message: JSON.stringify(data.body.errors[0].message),\n      }}\n    />\n  );\n}\n\nreturn (\n  <ThingContainer>\n    <Widget\n      src={props.widget}\n      props={{\n        data: data.body.data,\n      }}\n    />\n  </ThingContainer>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/evrything.near/widget/Everything.View.Thing", "fact_widget_deployments_id": "485545abc9f0bae769bbe0976cd15f3d", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 4}