{"tx_hash": "7jTfh2WV6GwPFgvBwM79qmA1jThq8auj3VdMUtSNiF3K", "action_id_social": "9G7TT92biRbZ2oMu52SYUvk73LL19sgaC9TyraiGDRph-0-widget", "block_id": 108274795, "block_timestamp": "2023-12-18T19:52:50.770Z", "signer_id": "devhub.near", "widget_name": "devhub.page.admin.moderatorsTab", "source_code": "const { accessControlInfo, createEditTeam } = props;\n\nconst { Tile } =\n  VM.require(\"devhub.near/widget/devhub.components.molecule.Tile\") ||\n  (() => <></>);\n\nif (!Tile) {\n  return <div>Loading...</div>;\n}\n\nconst [editModerators, setEditModerators] = useState(false);\nconst [moderators, setModerators] = useState(\n  accessControlInfo.members_list[\"team:moderators\"].children || []\n);\n\nconst handleEditModerators = () => {\n  createEditTeam({\n    teamName: \"moderators\",\n    description:\n      \"The moderator group has permissions to edit any posts and apply all labels, including restricted ones.\",\n    label: \"any\",\n    editPost: true,\n    useLabels: true,\n    members: moderators,\n    contractCall: \"edit_member\",\n  });\n};\n\nconst handleCancelModerators = () => {\n  setEditModerators(false);\n  setModerators(accessControlInfo.members_list[\"team:moderators\"].children);\n};\n\nreturn (\n  <>\n    <h1>Moderators</h1>\n    <div className=\"card-body\">\n      <h5>\n        The moderator group has permissions to edit any posts and apply all\n        labels, including restricted ones.\n      </h5>\n      <Widget\n        src={\"devhub.near/widget/devhub.components.molecule.PostControls\"}\n        props={{\n          icon: \"bi bi-gear-wide-connected\",\n          className: \"mb-3\",\n\n          title: \"Edit members\",\n          onClick: () => setEditModerators(!editModerators),\n          testId: \"edit-members\",\n        }}\n      />\n    </div>\n    <Tile className=\"p-3\">\n      {editModerators ? (\n        <>\n          <Widget\n            src=\"devhub.near/widget/devhub.components.molecule.ListEditor\"\n            props={{\n              data: {\n                maxLength: 100,\n                placeholder: \"member.near\",\n                prefix: \"member\",\n                list: moderators,\n              },\n              setList: setModerators,\n              // Could add a check to see if it is an valid account id.\n              validate: (newItem) => true,\n              invalidate: () => null,\n            }}\n          />\n          <div\n            className={\n              \"d-flex align-items-center justify-content-end gap-3 mt-4\"\n            }\n          >\n            <Widget\n              src={\"devhub.near/widget/devhub.components.molecule.Button\"}\n              props={{\n                classNames: {\n                  root: \"btn-outline-danger shadow-none border-0\",\n                },\n                label: \"Cancel\",\n                onClick: handleCancelModerators,\n              }}\n            />\n            <Widget\n              src={\"devhub.near/widget/devhub.components.molecule.Button\"}\n              props={{\n                classNames: { root: \"btn\" },\n                icon: {\n                  type: \"bootstrap_icon\",\n                  variant: \"bi-check-circle-fill\",\n                },\n                label: \"Submit\",\n                onClick: handleEditModerators,\n              }}\n            />\n          </div>\n        </>\n      ) : (\n        <>\n          <div class=\"pt-4\">Members</div>\n\n          {moderators && (\n            <div class=\"vstack\">\n              {moderators.length ? (\n                moderators.map((child) => (\n                  <Tile className=\"w-25 p-3 m-1\" minHeight={10}>\n                    <Widget\n                      src={`neardevgov.near/widget/ProfileLine`}\n                      props={{ accountId: child }}\n                    />\n                  </Tile>\n                ))\n              ) : (\n                <div>No moderators</div>\n              )}\n            </div>\n          )}\n        </>\n      )}\n    </Tile>\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/devhub.near/widget/devhub.page.admin.moderatorsTab", "fact_widget_deployments_id": "8e0b654b4c4a669770dc7a8b3ffff666", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 5}