{"tx_hash": "BJ4dMQ44SQF3fVQo2gz5wGx3rX7SfQDAESNVNovCGc9s", "action_id_social": "ds7ZDVbcQZNHsRLqSJAFzQubnvnTvRebqAyyuaTmtdK-0-widget", "block_id": 120483058, "block_timestamp": "2024-06-05T09:32:57.363Z", "signer_id": "devhub.near", "widget_name": "devhub.entity.addon.blogv2.Viewer", "source_code": "const { Card } = VM.require(\n  \"devhub.near/widget/devhub.entity.addon.blogv2.Card\"\n);\n\nif (!Card) {\n  return <p>Loading modules...</p>;\n}\n\nconst { href } = VM.require(\"devhub.near/widget/core.lib.url\") || (() => {});\n\nconst {\n  data,\n  handle,\n  hideTitle,\n  communityAddonId,\n  setAddonView,\n  transactionHashes,\n  permissions,\n} = props;\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, minmax(0, 1fr));\n  gap: 1rem;\n\n  @media screen and (max-width: 768px) {\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n  }\n`;\n\nconst Heading = styled.h3`\n  color: #151515;\n  font-size: 2rem;\n  font-style: normal;\n  font-weight: 700;\n  line-height: 120%; /* 48px */\n  margin-bottom: 2rem;\n\n  @media screen and (max-width: 768px) {\n    font-size: 1.5rem;\n  }\n`;\n\nconst CardContainer = styled.div`\n  transition: all 300ms;\n  border-radius: 1rem;\n  height: 100%;\n\n  &:hover {\n    box-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1),\n      0 4px 6px -4px rgb(0 0 0 / 0.1);\n  }\n`;\n\nif (!handle) {\n  return <div>Missing handle</div>;\n}\n\nconst [blogPostQueryString, setBlogPostQueryString] = useState(\"\");\nconst [blogPostFilterCategory, setBlogPostFilterCategory] = useState(\"\");\n\nconst blogPostQueryStringLowerCase = blogPostQueryString\n  ? blogPostQueryString.toLowerCase().trim()\n  : \"\";\n\nlet blogData = Social.get([`${handle}.community.devhub.near/blog/**`], \"final\");\n\nconst categories = {\n  none: {\n    label: \"None\",\n    value: \"\",\n  },\n};\n\nfunction flattenBlogObject(blogsObject) {\n  if (!blogsObject) return [];\n  return (\n    Object.keys(blogsObject)\n      .map((key) => {\n        return {\n          ...blogsObject[key].metadata,\n          id: key,\n          content: blogsObject[key][\"\"],\n        };\n      })\n      // Show only published blogs\n      .filter((blog) => blog.status === \"PUBLISH\")\n      .map((flattenedBlog) => {\n        if (!categories[flattenedBlog.category]) {\n          console.log(\"flattenedBlog.category\", flattenedBlog.category);\n          categories[flattenedBlog.category] = {\n            label: flattenedBlog.category,\n            value: flattenedBlog.category,\n          };\n        }\n        return flattenedBlog;\n      })\n      // Every instance of the blog tab has its own blogs\n      .filter((blog) => blog.communityAddonId === communityAddonId)\n      .filter(\n        (flattenedBlog) =>\n          !blogPostQueryStringLowerCase ||\n          flattenedBlog.content\n            ?.toLowerCase()\n            .includes(blogPostQueryStringLowerCase) ||\n          flattenedBlog.title\n            ?.toLowerCase()\n            .includes(blogPostQueryStringLowerCase) ||\n          flattenedBlog.subtitle\n            ?.toLowerCase()\n            .includes(blogPostQueryStringLowerCase)\n      )\n      .filter(\n        (flattenedBlog) =>\n          !blogPostFilterCategory ||\n          flattenedBlog.category === blogPostFilterCategory\n      )\n  );\n}\n\nif (transactionHashes) {\n  // Fetch new blog data\n  const subscribeToBlogForNextFifteenSec = (tries) => {\n    console.log(\"Trying to fetch new blog data\");\n    let newBlogData = Social.get(\n      [`${handle}.community.devhub.near/blog/**`],\n      \"final\"\n    );\n    if (tries >= 5) {\n      // If we have tried 5 times, just use the data we have for example onBlogUpdate\n      blogData = newBlogData;\n      return;\n    }\n    // Check the number of blogs in this instance with a different status\n    if (\n      flattenBlogObject(newBlogData).length !==\n      flattenBlogObject(blogData).length\n    ) {\n      blogData = newBlogData;\n    } else {\n      setTimeout(() => {\n        subscribeToBlogForNextFifteenSec(tries + 1);\n      }, 3000);\n    }\n  };\n  // After a second subscribe to the blog data\n  setTimeout(() => {\n    subscribeToBlogForNextFifteenSec(0);\n  }, 1000);\n}\n\nconst processedData = flattenBlogObject(blogData)\n  // Sort by published date\n  .sort((blog1, blog2) => {\n    return new Date(blog2.publishedAt) - new Date(blog1.publishedAt);\n  });\n\nfunction BlogCardWithLink(flattenedBlog) {\n  return (\n    <Link\n      style={{ textDecoration: \"none\" }}\n      to={href({\n        widgetSrc: \"devhub.near/widget/app\",\n        params: {\n          page: \"blogv2\",\n          id: flattenedBlog.id,\n          community: handle,\n          communityAddonId, // Passed in addon.jsx\n        },\n      })}\n    >\n      {BlogCard(flattenedBlog)}\n    </Link>\n  );\n}\n\nfunction NoBlogCard() {\n  return (\n    <div onClick={() => setAddonView(\"configure\")} className=\"min-vh-100\">\n      <div>\n        {BlogCard({\n          category: \"\",\n          title: \"No blogs yet\",\n          description: \"Click here to add your first blog!\",\n          publishedAt: new Date().toISOString(),\n          id: \"new\",\n        })}\n      </div>\n    </div>\n  );\n}\n\nfunction BlogCard(flattenedBlog) {\n  return (\n    <CardContainer>\n      <Card data={flattenedBlog} />\n    </CardContainer>\n  );\n}\n\nconst searchInput = useMemo(\n  () => (\n    <div className=\"d-flex flex-wrap gap-4 align-items-center\">\n      <Widget\n        src=\"devhub.near/widget/devhub.components.molecule.Input\"\n        props={{\n          className: \"flex-grow-1\",\n          skipPaddingGap: true,\n          placeholder: \"search blog posts\",\n          debounceTimeout: 300,\n          onChange: (e) => {\n            setBlogPostQueryString(e.target.value);\n          },\n          inputProps: {\n            prefix: <i class=\"bi bi-search m-auto\"></i>,\n          },\n        }}\n      />\n    </div>\n  ),\n  []\n);\n\nconst categoryInput = useMemo(() => {\n  const options = Object.values(categories);\n\n  return (\n    <div className=\"d-flex flex-wrap gap-4 align-items-center\">\n      <Widget\n        src=\"devhub.near/widget/devhub.components.molecule.DropDown\"\n        props={{\n          options: options,\n          label: \"Category\",\n          onUpdate: (selectedCategory) => {\n            setBlogPostFilterCategory(selectedCategory.value);\n          },\n        }}\n      />\n    </div>\n  );\n}, [categories]);\n\nif (!processedData || processedData.length === 0) {\n  return (\n    <div\n      className=\"d-flex flex-column align-items-center justify-content-center gap-4\"\n      style={{ height: 384 }}\n    >\n      <h5 className=\"h5 d-inline-flex gap-2 m-0 text-center\">\n        {\"This blog isn't configured yet.\"}\n        <br />\n        {permissions.can_configure\n          ? \"Go to settings to configure your blog or create your first post.\"\n          : \"\"}\n      </h5>\n    </div>\n  );\n}\n\nreturn (\n  <div class=\"w-100\">\n    {!hideTitle && <Heading>Latest Blog Posts</Heading>}\n    <div className=\"d-flex justify-content-start flex-wrap gap-2 align-items-center mb-5\">\n      {data.searchEnabled ? searchInput : \"\"}\n      {data.categoriesEnabled ? categoryInput : \"\"}\n    </div>\n    <Grid>\n      {processedData &&\n        processedData.map((flattenedBlog) => BlogCardWithLink(flattenedBlog))}\n    </Grid>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/devhub.near/widget/devhub.entity.addon.blogv2.Viewer", "fact_widget_deployments_id": "ae019cad917ee5959b5dda63c8651123", "inserted_timestamp": "2024-06-05T11:08:30.675Z", "modified_timestamp": "2024-06-05T11:08:30.675Z", "__row_index": 5}