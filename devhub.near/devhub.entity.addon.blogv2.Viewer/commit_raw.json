{"tx_hash": "65pRnmRzeRC53myqM7NmGn2rPKq3YC6HyA3NQQZ3YiM5", "action_id_social": "E7CRhGsGdHh91ChV45LmyoABz3gQjeX2sTZdNQnt8YQA-0-widget", "block_id": 122114121, "block_timestamp": "2024-06-27T15:36:57.421Z", "signer_id": "devhub.near", "widget_name": "devhub.entity.addon.blogv2.Viewer", "source_code": "const { Tailwind } = VM.require(\"uiisnear.near/widget/tailwind\");\nconst { ButtonConf } = VM.require(\"uiisnear.near/widget/button\");\nconst {\n  Pagination,\n  PaginationContent,\n  PaginationItem,\n  PaginationLink,\n  PaginationPrevious,\n  PaginationNext,\n  PaginationEllipsis,\n  paginationPreviousClassname,\n  paginationNextClassname,\n} = VM.require(\"uiisnear.near/widget/pagination\");\n\nconst { Card } = VM.require(\n  \"devhub.near/widget/devhub.entity.addon.blogv2.Card\"\n);\n\nif (!Card) {\n  return <p>Loading modules...</p>;\n}\n\nconst { href } = VM.require(\"devhub.near/widget/core.lib.url\") || (() => {});\n\nconst [paginationLink, setPaginationLink] = useState(\"\");\nconst [paginationLinkPrevious, setPaginationLinkPrevious] = useState(\"\");\nconst [paginationLinkNext, setPaginationLinkNext] = useState(\"\");\nconst [paginationLinkActive, setPaginationLinkActive] = useState(\"\");\n\nif (ButtonConf == undefined) return \"\";\n\nif (paginationLink === \"\")\n  return <ButtonConf output={setPaginationLink} variant=\"ghost\" size=\"icon\" />;\nif (paginationLinkPrevious === \"\")\n  return (\n    <ButtonConf\n      output={setPaginationLinkPrevious}\n      variant=\"ghost\"\n      size=\"default\"\n      className={paginationPreviousClassname}\n    />\n  );\nif (paginationLinkNext === \"\")\n  return (\n    <ButtonConf\n      output={setPaginationLinkNext}\n      variant=\"ghost\"\n      size=\"default\"\n      className={paginationNextClassname}\n    />\n  );\nif (paginationLinkActive === \"\")\n  return (\n    <ButtonConf\n      output={setPaginationLinkActive}\n      variant=\"outline\"\n      size=\"icon\"\n    />\n  );\n\nif (Tailwind == undefined) return \"\";\n\nconst {\n  data,\n  handle,\n  hideTitle,\n  communityAddonId,\n  setAddonView,\n  transactionHashes,\n  permissions,\n} = props;\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, minmax(0, 1fr));\n  gap: 1rem;\n\n  @media screen and (max-width: 768px) {\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n  }\n`;\n\nconst Heading = styled.div`\n  color: #151515;\n  font-size: 2rem;\n  font-style: normal;\n  font-weight: 700;\n  line-height: 120%; /* 48px */\n  margin-bottom: 0.5rem;\n\n  @media screen and (max-width: 768px) {\n    font-size: 1.5rem;\n  }\n`;\n\nconst SubHeading = styled.div`\n  color: #3b3b3b;\n  font-size: 1.5rem;\n  font-style: normal;\n  font-weight: 600;\n  line-height: 100%;\n  margin-bottom: 2rem;\n\n  @media screen and (max-width: 768px) {\n    font-size: 1rem;\n  }\n`;\n\nconst CardContainer = styled.div`\n  transition: all 300ms;\n  border-radius: 1rem;\n  height: 100%;\n\n  &:hover {\n    box-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1),\n      0 4px 6px -4px rgb(0 0 0 / 0.1);\n  }\n`;\n\nif (!handle) {\n  return <div>Missing handle</div>;\n}\n\nconst [blogPostQueryString, setBlogPostQueryString] = useState(\"\");\nconst [blogPostFilterCategory, setBlogPostFilterCategory] = useState(\"\");\n\nconst blogPostQueryStringLowerCase = blogPostQueryString\n  ? blogPostQueryString.toLowerCase().trim()\n  : \"\";\n\nconst [blogData, setBlogData] = useState([]);\n\nconst initialBlogData = Social.get(\n  [`${handle}.community.devhub.near/blog/**`],\n  \"final\"\n);\n\nuseEffect(() => {\n  if (initialBlogData) {\n    setBlogData(initialBlogData);\n  }\n}, [initialBlogData]);\n\nconst categories = {\n  none: {\n    label: \"None\",\n    value: \"\",\n  },\n};\n\nfunction flattenBlogObject(blogsObject) {\n  if (!blogsObject) return [];\n  return (\n    Object.keys(blogsObject)\n      .map((key) => {\n        return {\n          ...blogsObject[key].metadata,\n          id: key,\n          content: blogsObject[key][\"\"],\n        };\n      })\n      // Show only published blogs\n      .filter((blog) => blog.status === \"PUBLISH\")\n      // Every instance of the blog tab has its own blogs\n      .filter((blog) => blog.communityAddonId === communityAddonId)\n      // Add categories to the dropdown\n      .map((flattenedBlog) => {\n        if (!categories[flattenedBlog.category]) {\n          categories[flattenedBlog.category] = {\n            label: flattenedBlog.category,\n            value: flattenedBlog.category,\n          };\n        }\n        return flattenedBlog;\n      })\n      .filter(\n        (flattenedBlog) =>\n          !blogPostQueryStringLowerCase ||\n          flattenedBlog.content\n            ?.toLowerCase()\n            .includes(blogPostQueryStringLowerCase) ||\n          flattenedBlog.title\n            ?.toLowerCase()\n            .includes(blogPostQueryStringLowerCase) ||\n          flattenedBlog.subtitle\n            ?.toLowerCase()\n            .includes(blogPostQueryStringLowerCase)\n      )\n      .filter(\n        (flattenedBlog) =>\n          !blogPostFilterCategory ||\n          flattenedBlog.category === blogPostFilterCategory\n      )\n  );\n}\nfunction checkHashes() {\n  if (transactionHashes) {\n    // Fetch new blog data\n    const subscribeToBlogForNextFifteenSec = (tries) => {\n      if (tries >= 5) {\n        return;\n      }\n      Near.asyncView(\"social.near\", \"get\", {\n        keys: [`${handle}.community.devhub.near/blog/**`],\n      }).then((result) => {\n        try {\n          const newBlogPosts = result[`${handle}.community.devhub.near`].blog;\n          // Check the number of blogs in this instance with a different status\n          if (\n            flattenBlogObject(newBlogPosts).length !==\n            flattenBlogObject(blogData).length\n          ) {\n            setBlogData(newBlogPosts);\n          } else {\n            setTimeout(() => {\n              subscribeToBlogForNextFifteenSec(tries + 1);\n            }, 3000);\n          }\n        } catch (e) {}\n      });\n    };\n    // After a second subscribe to the blog data\n    setTimeout(() => {\n      subscribeToBlogForNextFifteenSec(0);\n    }, 1000);\n  }\n}\nuseEffect(() => {\n  // Only render one time\n  checkHashes();\n}, []);\n\nconst processedData = flattenBlogObject(blogData)\n  // Sort by published date\n  .sort((blog1, blog2) => {\n    if (data.orderBy === \"timeasc\") {\n      return new Date(blog1.publishedAt) - new Date(blog2.publishedAt);\n    }\n    if (data.orderBy === \"alpha\") {\n      return (blog1.title || \"\").localeCompare(blog2.title || \"\");\n    }\n    // timedesc is the default order\n    return new Date(blog2.publishedAt) - new Date(blog1.publishedAt);\n  });\n\n// Pagination\nconst [currentPage, setCurrentPage] = useState(0);\nconst amountOfBlogPosts = processedData.length || 0;\nconst amountOfBlogPostsPerPage = data.postPerPage || 100; // Default to 100 if not set\nconst amountOfPages = Math.ceil(amountOfBlogPosts / amountOfBlogPostsPerPage);\nlet currentPageData = (processedData || [1, 2, 3, 4, 5]).slice(\n  currentPage * amountOfBlogPostsPerPage,\n  (currentPage + 1) * amountOfBlogPostsPerPage\n);\nconst showPreviousButton = currentPage !== 0;\nconst showNextButton = currentPage !== amountOfPages - 1;\n// End Pagination\n\nfunction BlogCardWithLink(flattenedBlog) {\n  return (\n    <Link\n      style={{ textDecoration: \"none\" }}\n      to={href({\n        widgetSrc: \"devhub.near/widget/app\",\n        params: {\n          page: \"blogv2\",\n          id: flattenedBlog.id,\n          community: handle,\n        },\n      })}\n    >\n      {BlogCard(flattenedBlog)}\n    </Link>\n  );\n}\n\nfunction BlogCard(flattenedBlog) {\n  return (\n    <CardContainer>\n      <Card data={flattenedBlog} addonParameters={data} />\n    </CardContainer>\n  );\n}\n\nconst searchInput = useMemo(\n  () => (\n    <div className=\"d-flex flex-wrap gap-4 align-items-center\">\n      <Widget\n        src=\"devhub.near/widget/devhub.components.molecule.Input\"\n        props={{\n          key: \"search-blog-posts\",\n          className: \"flex-grow-1\",\n          skipPaddingGap: true,\n          placeholder: \"search blog posts\",\n          debounceTimeout: 300,\n          onChange: (e) => {\n            setBlogPostQueryString(e.target.value);\n          },\n          inputProps: {\n            prefix: <i class=\"bi bi-search m-auto\"></i>,\n          },\n        }}\n      />\n    </div>\n  ),\n  []\n);\n\nconst categoryInput = useMemo(() => {\n  const options = Object.values(categories);\n\n  return (\n    <div className=\"d-flex flex-wrap gap-4 align-items-center\">\n      <Widget\n        src=\"devhub.near/widget/devhub.components.molecule.DropDown\"\n        props={{\n          options: options,\n          label: \"Category\",\n          onUpdate: (selectedCategory) => {\n            setBlogPostFilterCategory(selectedCategory.value);\n          },\n        }}\n      />\n    </div>\n  );\n}, [categories]);\n\nif (!processedData || processedData.length === 0) {\n  return (\n    <div\n      className=\"d-flex flex-column align-items-center justify-content-center gap-4\"\n      style={{ height: 384 }}\n    >\n      <h5 className=\"h5 d-inline-flex gap-2 m-0 text-center\">\n        {\"This blog isn't configured yet.\"}\n        <br />\n        {permissions.can_configure\n          ? \"Go to settings to configure your blog or create your first post.\"\n          : \"\"}\n      </h5>\n    </div>\n  );\n}\n\nreturn (\n  <div class=\"w-100\">\n    {!hideTitle && (\n      <Heading data-testid=\"blog-instance-title\">{data.title || \"\"}</Heading>\n    )}\n    {!hideTitle && (\n      <SubHeading data-testid=\"blog-instance-subtitle\">\n        {data.subtitle || \"\"}\n      </SubHeading>\n    )}\n    <div className=\"d-flex justify-content-start flex-wrap gap-2 align-items-center mb-5\">\n      {data.searchEnabled === \"enabled\" ? searchInput : \"\"}\n      {data.categoriesEnabled === \"enabled\" ? categoryInput : \"\"}\n    </div>\n    <Grid>\n      {processedData &&\n        currentPageData.map((flattenedBlog) => BlogCardWithLink(flattenedBlog))}\n    </Grid>\n    <Tailwind>\n      <div className=\"flex mx-auto w-max pt-10\">\n        <Pagination>\n          <PaginationContent>\n            {showPreviousButton && (\n              <PaginationItem>\n                <PaginationPrevious\n                  className={paginationLinkPrevious}\n                  onClick={() => setCurrentPage(currentPage - 1)}\n                />\n              </PaginationItem>\n            )}\n            {[...Array(amountOfPages)].map((_, index) => {\n              return (\n                <PaginationItem>\n                  <PaginationLink\n                    className={\n                      index === currentPage\n                        ? paginationLinkActive\n                        : paginationLink\n                    }\n                    isActive={index === currentPage}\n                    onClick={() => setCurrentPage(index)}\n                  >\n                    {index + 1}\n                  </PaginationLink>\n                </PaginationItem>\n              );\n            })}\n            {showNextButton && (\n              <PaginationItem>\n                <PaginationNext\n                  className={paginationLinkNext}\n                  onClick={() => setCurrentPage(currentPage + 1)}\n                />\n              </PaginationItem>\n            )}\n          </PaginationContent>\n        </Pagination>\n      </div>\n    </Tailwind>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/devhub.near/widget/devhub.entity.addon.blogv2.Viewer", "fact_widget_deployments_id": "892066188b470ba79f60b12fb45385f9", "inserted_timestamp": "2024-06-27T16:54:28.525Z", "modified_timestamp": "2024-06-27T16:54:28.525Z", "__row_index": 1}