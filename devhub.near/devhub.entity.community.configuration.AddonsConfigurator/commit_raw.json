{"tx_hash": "BJ4dMQ44SQF3fVQo2gz5wGx3rX7SfQDAESNVNovCGc9s", "action_id_social": "ds7ZDVbcQZNHsRLqSJAFzQubnvnTvRebqAyyuaTmtdK-0-widget", "block_id": 120483058, "block_timestamp": "2024-06-05T09:32:57.363Z", "signer_id": "devhub.near", "widget_name": "devhub.entity.community.configuration.AddonsConfigurator", "source_code": "const { getAllAddons } =\n  VM.require(\"devhub.near/widget/core.adapter.devhub-contract\") ||\n  (() => {});\n\nconst { generateRandom6CharUUID } = VM.require(\n  \"devhub.near/widget/core.lib.stringUtils\"\n);\n\ngenerateRandom6CharUUID || (generateRandom6CharUUID = () => {});\n\nconst { href } = VM.require(\"devhub.near/widget/core.lib.url\") || (() => {});\n\nconst availableAddons = getAllAddons() || [];\n\nconst isActive = props.isActive;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n`;\n\nconst Item = styled.div`\n  padding: 10px;\n  margin: 5px;\n  display: flex;\n  align-items: center;\n  gap: 10px;\n`;\n\nconst Icon = styled.span`\n  margin-right: 10px;\n`;\n\nconst EditableField = styled.input`\n  flex: 1;\n`;\n\nconst ToggleButton = styled.input`\n  margin-left: 10px;\n`;\n\nconst Table = styled.table`\n  width: 100%;\n  border-collapse: collapse;\n`;\n\nconst Header = styled.thead`\n  background-color: #f0f0f0;\n`;\n\nconst HeaderCell = styled.th`\n  padding: 10px;\n  text-align: left;\n`;\n\nconst Row = styled.tr``;\n\nconst Cell = styled.td`\n  padding: 10px;\n`;\n\nconst AddonItem = ({\n  data,\n  onUpdate,\n  onMove,\n  onRemove,\n  index,\n  isTop,\n  isBottom,\n}) => {\n  const handleNameChange = (event) => {\n    const newName = event.target.value;\n    onUpdate({ ...data, display_name: newName });\n  };\n\n  const handleEnableChange = () => {\n    onUpdate({ ...data, enabled: !data.enabled });\n  };\n\n  const moveItemUp = () => {\n    if (!isTop) {\n      onMove(index, index - 1);\n    }\n  };\n\n  const moveItemDown = () => {\n    if (!isBottom) {\n      onMove(index, index + 1);\n    }\n  };\n\n  const removeItem = () => {\n    onRemove(data.id);\n  };\n\n  const addonMatch =\n    availableAddons.find((it) => it.id === data.addon_id) ?? null;\n\n  return (\n    <Row>\n      <Cell>\n        <div style={{ display: \"flex\", flexDirection: \"column\", gap: \"0\" }}>\n          <button\n            className=\"btn btn-sm btn-secondary rounded-0\"\n            onClick={moveItemUp}\n            disabled={!isActive || isTop}\n            style={{ visibility: isTop && !isBottom ? \"hidden\" : \"visible\" }}\n          >\n            <i className=\"bi bi-arrow-up\"></i>\n          </button>\n          <button\n            className=\"btn btn-sm btn-secondary rounded-0\"\n            onClick={moveItemDown}\n            disabled={!isActive || isBottom}\n            style={{ visibility: isBottom && !isTop ? \"hidden\" : \"visible\" }}\n          >\n            <i className=\"bi bi-arrow-down\"></i>\n          </button>\n        </div>\n      </Cell>\n      <Cell>\n        <div>{addonMatch.title}</div>\n      </Cell>\n      <Cell>\n        <Widget\n          src=\"devhub.near/widget/devhub.components.molecule.Input\"\n          props={{\n            label: \" \",\n            value: data.display_name,\n            onChange: handleNameChange,\n            inputProps: {\n              min: 3,\n              max: 30,\n              disabled: !data.enabled || !isActive,\n            },\n          }}\n        />\n      </Cell>\n      <Cell>\n        <div\n          className={\n            \"d-flex flex-column flex-1 align-items-start justify-content-evenly\"\n          }\n        >\n          <Widget\n            src={\"devhub.near/widget/devhub.components.atom.Toggle\"}\n            props={{\n              value: data.enabled,\n              onChange: handleEnableChange,\n              disabled: !isActive,\n            }}\n          />\n        </div>\n      </Cell>\n      <Cell>\n        <div style={{ display: \"flex\", gap: \"2px\" }}>\n          {isActive && (\n            <button className=\"btn btn-outline-danger\" onClick={removeItem}>\n              <i className=\"bi bi-trash-fill\" />\n            </button>\n          )}\n        </div>\n      </Cell>\n    </Row>\n  );\n};\n\nfunction arraysAreEqual(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < arr1.length; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nconst AddonsConfigurator = ({ data, onSubmit }) => {\n  const [originalList, setOriginalList] = useState(data);\n  const [list, setList] = useState(data);\n  const [changesMade, setChangesMade] = useState(false);\n\n  useEffect(() => {\n    setOriginalList(data);\n  }, [data]);\n\n  const updateItem = (updatedItem) => {\n    const updatedList = list.map((item) =>\n      item.id === updatedItem.id ? updatedItem : item\n    );\n    setList(updatedList);\n    setChangesMade(!arraysAreEqual(originalList, updatedList));\n  };\n\n  const moveItem = (fromIndex, toIndex) => {\n    const updatedList = [...list];\n    const [movedItem] = updatedList.splice(fromIndex, 1);\n    updatedList.splice(toIndex, 0, movedItem);\n    setList(updatedList);\n    setChangesMade(!arraysAreEqual(originalList, updatedList));\n  };\n\n  const [selectedAddon, setSelectedAddon] = useState(null);\n\n  /**\n   * Necessary solution to migrate the old blogs to the new blogv2.\n   * Since the blogs are migrated before the addon instance is created.\n   */\n  const getRandomIdExceptFirstBlogV2Instance = (selectedAddonId) => {\n    if (selectedAddonId !== \"blogv2\") {\n      return generateRandom6CharUUID();\n    }\n    const firstBlogV2Addon = availableAddons.find(\n      (addon) => addon.id === \"blogv2\"\n    );\n    if (!firstBlogV2Addon) {\n      // If no blogv2 addon is found, return a static id\n      // \"first-blogv2-no-random-id\";\n      return \"blogv2\";\n    }\n    return `blogv2-id-${generateRandom6CharUUID()}`;\n  };\n\n  const handleAddItem = () => {\n    const newItem = {\n      id: getRandomIdExceptFirstBlogV2Instance(selectedAddon.id),\n      addon_id: selectedAddon.id,\n      display_name: selectedAddon.title,\n      enabled: true,\n      parameters: \"{}\",\n    };\n    const updatedList = [...list, newItem];\n    setList(updatedList);\n    setChangesMade(!arraysAreEqual(originalList, updatedList));\n    setSelectedAddon(null);\n  };\n\n  const removeItem = (id) => {\n    const updatedList = list.filter((item) => item.id !== id);\n    setList(updatedList);\n    setChangesMade(!arraysAreEqual(originalList, updatedList));\n  };\n\n  return (\n    <Container>\n      <p>\n        Add or remove custom tabs, which will appear in your community's\n        navigation bar.\n        <br />\n        You can customize them on each page.\n      </p>\n      {list.length > 0 && (\n        <Table>\n          <Header>\n            <Row>\n              <HeaderCell style={{ width: \"30px\" }}>Order</HeaderCell>\n              <HeaderCell>Tab Type</HeaderCell>\n              <HeaderCell>Tab Name</HeaderCell>\n              <HeaderCell style={{ width: \"45px\" }}>Enabled</HeaderCell>\n              {isActive && (\n                <HeaderCell style={{ width: \"40px\" }}>Actions</HeaderCell>\n              )}\n            </Row>\n          </Header>\n          <tbody data-testid=\"addon-table\">\n            {list.map((item, index) => (\n              <AddonItem\n                key={item.id}\n                data={item}\n                onUpdate={updateItem}\n                onMove={moveItem}\n                onRemove={removeItem}\n                index={index}\n                isTop={index === 0}\n                isBottom={index === list.length - 1}\n              />\n            ))}\n          </tbody>\n        </Table>\n      )}\n      {isActive && availableAddons && (\n        <div className=\"d-flex justify-content-center pt-2\">\n          <div className=\"d-flex gap-2 flex-grow-1 px-4\">\n            <Widget\n              src={\"devhub.near/widget/devhub.components.molecule.Select\"}\n              props={{\n                className: \"flex-grow-1\",\n                options: availableAddons.map((addon) => ({\n                  label: addon.title,\n                  value: addon.id,\n                })),\n                value: selectedAddon.id ?? \"\",\n                onChange: (e) =>\n                  setSelectedAddon(\n                    availableAddons.find((addon) => addon.id === e.target.value)\n                  ),\n                placeholder: \"Select an addon\",\n              }}\n            />\n            <button\n              className=\"btn btn-success\"\n              onClick={handleAddItem}\n              disabled={!selectedAddon}\n            >\n              <i className=\"bi bi-plus\" />\n            </button>\n          </div>\n        </div>\n      )}\n      {isActive && (\n        <div\n          className={\"d-flex align-items-center justify-content-end gap-3 mt-4\"}\n        >\n          <Widget\n            src={\"devhub.near/widget/devhub.components.molecule.Button\"}\n            props={{\n              classNames: { root: \"btn-success\" },\n              disabled: !changesMade,\n              icon: {\n                type: \"bootstrap_icon\",\n                variant: \"bi-check-circle-fill\",\n              },\n              label: \"Submit\",\n              onClick: () => onSubmit(list),\n            }}\n          />\n        </div>\n      )}\n    </Container>\n  );\n};\n\nreturn AddonsConfigurator(props);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/devhub.near/widget/devhub.entity.community.configuration.AddonsConfigurator", "fact_widget_deployments_id": "7be1a2f269beaac85431cdec50eb6d9d", "inserted_timestamp": "2024-06-05T11:08:30.675Z", "modified_timestamp": "2024-06-05T11:08:30.675Z", "__row_index": 0}