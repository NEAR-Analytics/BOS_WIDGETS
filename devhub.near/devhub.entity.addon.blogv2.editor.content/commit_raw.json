{"tx_hash": "BJ4dMQ44SQF3fVQo2gz5wGx3rX7SfQDAESNVNovCGc9s", "action_id_social": "ds7ZDVbcQZNHsRLqSJAFzQubnvnTvRebqAyyuaTmtdK-0-widget", "block_id": 120483058, "block_timestamp": "2024-06-05T09:32:57.363Z", "signer_id": "devhub.near", "widget_name": "devhub.entity.addon.blogv2.editor.content", "source_code": "const { Card } =\n  VM.require(\"devhub.near/widget/devhub.entity.addon.blogv2.Card\") ||\n  (() => <></>);\nconst { Page } =\n  VM.require(\"devhub.near/widget/devhub.entity.addon.blogv2.Page\") ||\n  (() => <></>);\nconst { href } = VM.require(\"devhub.near/widget/core.lib.url\") || (() => {});\n\nconst categories = [\n  {\n    label: \"Guide\",\n    value: \"guide\",\n  },\n  {\n    label: \"News\",\n    value: \"news\",\n  },\n  {\n    label: \"Reference\",\n    value: \"reference\",\n  },\n];\n\nconst selectOptions = useMemo(\n  () =>\n    categories.map((it) => ({\n      label: it.label,\n      value: it.value,\n    })),\n  [categories]\n);\n\nconst Banner = styled.div`\n  border-radius: var(--bs-border-radius-xl) !important;\n  height: 100%;\n\n  & > div :not(.btn) {\n    position: absolute;\n    display: none;\n    margin: 0 !important;\n    width: 0 !important;\n    height: 0 !important;\n  }\n\n  .btn {\n    padding: 0.5rem 0.75rem !important;\n    min-height: 32;\n    line-height: 1;\n\n    border: none;\n    border-radius: 50px;\n    --bs-btn-color: #ffffff;\n    --bs-btn-bg: #087990;\n    --bs-btn-border-color: #087990;\n    --bs-btn-hover-color: #ffffff;\n    --bs-btn-hover-bg: #055160;\n    --bs-btn-hover-border-color: #055160;\n    --bs-btn-focus-shadow-rgb: 49, 132, 253;\n    --bs-btn-active-color: #ffffff;\n    --bs-btn-active-bg: #055160;\n    --bs-btn-active-border-color: #055160;\n    --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n    opacity: 0.8;\n\n    &:hover {\n      opacity: 1;\n    }\n  }\n`;\n\nconst DropdownBtnContainer = styled.div`\n  font-size: 13px;\n  min-width: 150px;\n\n  .custom-select {\n    position: relative;\n  }\n\n  .select-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    border: 1px solid #ccc;\n    border-radius-top: 5px;\n    cursor: pointer;\n    background-color: #fff;\n    border-radius: 5px;\n  }\n\n  .no-border {\n    border: none !important;\n  }\n\n  .options-card {\n    position: absolute;\n    bottom: 100%;\n    right: 0;\n    width: 200%;\n    border: 1px solid #ccc;\n    background-color: #fff;\n    padding: 0.5rem;\n    z-index: 99;\n    font-size: 13px;\n    border-radius:0.375rem !important;\n  }\n\n  .left {\n    right: 0 !important;\n    left: auto !important;\n  }\n\n  @media screen and (max-width: 768px) {\n    .options-card {\n      right: 0 !important;\n      left: auto !important;\n    }\n  }\n\n  .option {\n    margin-block: 5px;\n    padding: 10px;\n    cursor: pointer;\n    border-bottom: 1px solid #f0f0f0;\n    transition: background-color 0.3s ease;\n    border-radius: 0.375rem !important;\n  }\n\n  .option:hover {\n    background-color: #f0f0f0; /* Custom hover effect color */\n  }\n\n  .option:last-child {\n    border-bottom: none;\n  }\n\n  .selected {\n    background-color: #f0f0f0;\n  }\n\n  .disabled {\n    background-color: #f4f4f4 !important;\n    cursor: not-allowed !important;\n    font-weight: 500;\n    color: #b3b3b3;\n  }\n\n  .disabled .circle {\n    opacity: 0.5;\n  }\n\n  .circle {\n    width: 8px;\n    height: 8px;\n    border-radius: 50%;\n  }\n\n  .grey {\n    background-color: rgba(129, 129, 129, 0.5);\n  }\n\n  .green {\n    background-color: #00ec97;\n  }\n\n  a:hover {\n    text-decoration: none;\n  }\n\n}\n`;\n\nconst {\n  data,\n  handle,\n  onSubmit,\n  onCancel,\n  onDelete,\n  allBlogs: allBlogsOfThisInstance,\n  communityAddonId,\n  setSelectedItemChanged,\n} = props;\n\nconst allBlogKeys =\n  Social.keys(`${handle}.community.devhub.near/blog/*`, \"final\") || {};\n\nconst initialData = data;\n\nconst [initialBlogAmount, setInitialBlogAmount] = useState(\n  Object.keys(allBlogKeys[`${handle}.community.devhub.near`][\"blog\"] || {})\n    .length || 0\n);\n\n// Parse the date string to create a Date object\nconst publishedAtDate = new Date(initialData.publishedAt || new Date());\nconst year = publishedAtDate.getFullYear();\nconst month = (publishedAtDate.getMonth() + 1).toString().padStart(2, \"0\");\nconst day = publishedAtDate.getDate().toString().padStart(2, \"0\");\nconst initialFormattedDate = year + \"-\" + month + \"-\" + day;\n\nconst [content, setContent] = useState(initialData.content || \"\");\nconst [title, setTitle] = useState(initialData.title || \"\");\nconst [subtitle, setSubtitle] = useState(initialData.subtitle || \"\");\nconst [description, setDescription] = useState(initialData.description || \"\");\nconst [author, setAuthor] = useState(initialData.author || context.accountId);\nconst [previewMode, setPreviewMode] = useState(\"edit\"); // \"edit\" or \"preview\" // \"card\" or \"page\"\nconst [date, setDate] = useState(initialFormattedDate || new Date());\nconst [category, setCategory] = useState(initialData.category || \"guide\");\nconst [disabledSubmitBtn, setDisabledSubmitBtn] = useState(false);\nconst [isDraftBtnOpen, setDraftBtnOpen] = useState(false);\nconst [selectedStatus, setSelectedStatus] = useState(\n  initialData.status || \"DRAFT\"\n);\nconst [isDeleteModalOpen, setDeleteModal] = useState(false);\n\n// Dont ask me again check when deleting\nconst [submittedBlogDeleted, setSubmittedBlogDeleted] = useState(null);\nuseEffect(() => {\n  const checkForDeletedBlogInSocialDB = () => {\n    const communityAccount = `${handle}.community.devhub.near`;\n    Near.asyncView(\"social.near\", \"get\", {\n      keys: [`${communityAccount}/blog/**`],\n      options: {\n        return_deleted: true,\n      },\n    }).then((result) => {\n      try {\n        if (\n          JSON.parse(result[communityAccount].blog[submittedBlogDeleted]) ===\n          null\n        ) {\n          // Blog is deleted\n          setSubmittedBlogDeleted(null);\n        }\n      } catch (e) {}\n      setTimeout(() => checkForDeletedBlogInSocialDB(), 1000);\n    });\n  };\n  if (submittedBlogDeleted) {\n    checkForDeletedBlogInSocialDB();\n  }\n}, [submittedBlogDeleted]);\n\n// Dont ask me again check when updating and creating blogs\nconst [submittedBlogData, setSubmittedBlogData] = useState(null);\nuseEffect(() => {\n  const checkForNewOrUpdatedBlogInSocialDB = () => {\n    const communityAccount = `${handle}.community.devhub.near`;\n    Near.asyncView(\"social.near\", \"get\", {\n      keys: [`${communityAccount}/blog/**`],\n    }).then((result) => {\n      try {\n        if (initialData.id) {\n          // Update\n          const updatedBlog =\n            result[communityAccount][\"blog\"][initialData.id].metadata;\n          updatedBlog.content =\n            result[communityAccount][\"blog\"][initialData.id][\"\"];\n\n          let theyMatch = true;\n          let keys = Object.keys(submittedBlogData);\n          for (const key of keys) {\n            // Get the full data of the new blog and compare it to socialDB\n            if (updatedBlog[key] !== submittedBlogData[key]) {\n              theyMatch = false;\n              break;\n            }\n          }\n          if (theyMatch) {\n            setSubmittedBlogData(null);\n          }\n        } else {\n          // Create\n          let blogArray = Object.keys(result).map(\n            (blogKey) => result[communityAccount][\"blog\"][blogKey]\n          );\n\n          if (\n            blogArray.length &&\n            blogArray.find(\n              (blog) =>\n                blog.metadata.title === submittedBlogData.title &&\n                blog.metadata.description === submittedBlogData.description\n            )\n          ) {\n            setSubmittedBlogData(null);\n          }\n        }\n      } catch (e) {\n        console.log(\"Error in useEffect checkForNewOrUpdatedBlogInSocialDB\", e);\n      }\n      setTimeout(() => checkForNewOrUpdatedBlogInSocialDB(), 1000);\n    });\n  };\n  if (submittedBlogData) {\n    checkForNewOrUpdatedBlogInSocialDB();\n  }\n}, [submittedBlogData]);\n\nconst LoadingButtonSpinner = (\n  <span\n    class=\"submit-blog-loading-indicator spinner-border spinner-border-sm\"\n    role=\"status\"\n    aria-hidden=\"true\"\n  ></span>\n);\n\nconst SubmitBtn = () => {\n  const btnOptions = [\n    {\n      iconColor: \"grey\",\n      label: \"Save Draft\",\n      description:\n        \"The author can still edit the blog before sharing it with the community.\",\n      value: \"DRAFT\",\n    },\n    {\n      iconColor: \"bg-devhub-green\",\n      label: \"Publish\",\n      description:\n        \"The blog will be shared with the community and can be viewed by everyone.\",\n      value: \"PUBLISH\",\n    },\n  ];\n\n  const handleOptionClick = (option) => {\n    setDraftBtnOpen(false);\n    setSelectedStatus(option.value);\n    setSubmittedBlogData(null);\n    // TODO test is\n    handleSubmit(option.value);\n  };\n\n  const toggleDropdown = () => {\n    setDraftBtnOpen(!isDraftBtnOpen);\n    setSubmittedBlogData(null);\n  };\n\n  const handleSubmit = (status) => {\n    // Set the title for dont ask me again check\n    setSubmittedBlogData({\n      title,\n      subtitle,\n      description,\n      author,\n      date,\n      content,\n      category,\n      community: handle,\n      publishedAt,\n      status,\n    });\n    handlePublish(status);\n  };\n\n  const selectedOption = btnOptions.find((i) => i.value === selectedStatus);\n\n  return (\n    <DropdownBtnContainer>\n      <div\n        className=\"custom-select shadow-sm\"\n        tabIndex=\"0\"\n        onBlur={() => setDraftBtnOpen(false)}\n      >\n        <div\n          data-testid=\"parent-submit-blog-button\"\n          className={`select-header d-flex gap-1 align-items-center submit-draft-button ${\n            shouldBeDisabled() ? \"disabled\" : \"\"\n          }`}\n        >\n          <div\n            onClick={() =>\n              !shouldBeDisabled() && handleSubmit(selectedOption.value)\n            }\n            className=\"py-2.5 px-2 d-flex gap-2 align-items-center \"\n            data-testid=\"submit-blog-button\"\n          >\n            {submittedBlogData ? (\n              LoadingButtonSpinner\n            ) : (\n              <div className={\"circle \" + selectedOption.iconColor}></div>\n            )}\n            <div className={`selected-option`}>{selectedOption.label}</div>\n          </div>\n          <div\n            className=\"h-100 py-2.5 px-2\"\n            style={{ borderLeft: \"1px solid #ccc\" }}\n            onClick={toggleDropdown}\n          >\n            <i\n              data-testid=\"toggle-dropdown\"\n              class={`bi bi-chevron-${isDraftBtnOpen ? \"up\" : \"down\"}`}\n            ></i>\n          </div>\n        </div>\n\n        {isDraftBtnOpen && (\n          <div className=\"options-card\">\n            {btnOptions.map((option) => (\n              <div\n                key={option.value}\n                className={`option ${\n                  selectedOption.value === option.value ? \"selected\" : \"\"\n                }`}\n                onClick={() => handleOptionClick(option)}\n                data-testid={\"submit-button-option-\" + option.value}\n              >\n                <div className={`d-flex gap-2 align-items-center`}>\n                  <div className={\"circle \" + option.iconColor}></div>\n                  <div className=\"fw-bold\">{option.label}</div>\n                </div>\n                <div className=\"text-muted text-xs\">{option.description}</div>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </DropdownBtnContainer>\n  );\n};\n\nconst Container = styled.div`\n  width: 100%;\n  margin: 0 auto;\n  text-align: left;\n`;\n\nconst shouldBeDisabled = () => {\n  return hasEmptyFields() || submittedBlogData;\n};\n\nconst hasEmptyFields = () => {\n  return (\n    content.trim() === \"\" ||\n    title.trim() === \"\" ||\n    subtitle.trim() === \"\" ||\n    description.trim() === \"\" ||\n    author.trim() === \"\" ||\n    date === \"NaN-NaN-NaN\" ||\n    category.trim() === \"\"\n  );\n};\n\nconst unsavedChanges = () => {\n  return (\n    initialData.content !== content ||\n    initialData.title !== title ||\n    initialData.subtitle !== subtitle ||\n    initialData.description !== description ||\n    initialData.author !== author ||\n    initialData.category !== category ||\n    initialData.publishedAt !== date ||\n    initialData.status !== selectedStatus\n  );\n};\n\nuseEffect(() => {\n  if (unsavedChanges()) {\n    setSelectedItemChanged(true);\n  } else {\n    setSelectedItemChanged(false);\n  }\n}, [\n  content,\n  title,\n  subtitle,\n  description,\n  author,\n  category,\n  date,\n  selectedStatus,\n]);\n\nconst handlePublish = (status) => {\n  onSubmit &&\n    onSubmit(\n      {\n        id: data.id || undefined,\n        title,\n        subtitle,\n        description,\n        date,\n        content,\n        status,\n        author,\n        category,\n        community: handle,\n      },\n      data.id !== undefined\n    );\n};\n\nfunction handleDelete() {\n  setSubmittedBlogDeleted(initialData.id);\n  onDelete(data.id);\n}\n\nconst tabs = [\n  { name: \"Edit\", value: \"edit\" },\n  { name: \"Preview\", value: \"preview\" },\n];\n\nreturn (\n  <Container>\n    <div className=\"flex flex-wrap-reverse gap-1 justify-between w-100 mb-4\">\n      <div className=\"sm:hidden grow rounded-md shadow-sm ring-1 ring-inset ring-gray-300 focus-within:ring-2 focus-within:ring-indigo-600\">\n        <label\n          htmlFor=\"tabs\"\n          className=\"sr-only block text-xs font-medium text-gray-900\"\n        >\n          Select a tab\n        </label>\n        <select\n          id=\"tabs\"\n          name=\"tabs\"\n          className=\"block w-full rounded-md border-gray-300 focus:border-indigo-500 focus:ring-indigo-500 h-9 border-gray-300 block w-full border-0 p-0 text-gray-900 placeholder:text-gray-400 focus:ring-0 sm:text-sm sm:leading-6\"\n          defaultValue={tabs.find((tab) => tab.value === previewMode).name}\n        >\n          {tabs.map((tab) => {\n            return (\n              <option key={tab.name} onClick={() => setPreviewMode(tab.value)}>\n                {tab.name}\n              </option>\n            );\n          })}\n        </select>\n      </div>\n      <div className=\"hidden sm:block\">\n        <div className=\"-mb-px flex gap-x-3 px-2\" aria-label=\"Tabs\">\n          {tabs.map((tab) => {\n            return (\n              <a\n                key={tab.name}\n                onClick={() => setPreviewMode(tab.value)}\n                className={`${\n                  tab.value === previewMode ? \"hidden\" : \"\"\n                } rounded-md px-3.5 py-2.5 text-sm cursor-pointer font-semibold whitespace-nowrap overflow-hidden truncate text-devhub-gray`}\n              >\n                {tab.name}\n              </a>\n            );\n          })}\n        </div>\n      </div>\n      <div className=\"flex gap-x-3\">\n        <p className=\"text-nowrap text-sm text-devhub-gray font-semibold py-2.5 px-1\">\n          Status:{\" \"}\n          <span\n            className={`px-3 py-2 rounded-full font-semibold text-xs ${\n              initialData.status == \"PUBLISH\"\n                ? \"text-green-600 bg-green-50\"\n                : \"text-blue-600 bg-blue-50\"\n            }`}\n          >\n            {initialData.status === \"PUBLISH\" ? (\n              <Link\n                to={href({\n                  widgetSrc: \"devhub.near/widget/app\",\n                  params: {\n                    page: \"blogv2\",\n                    id: initialData.id,\n                    community: handle,\n                    communityAddonId,\n                  },\n                })}\n                target=\"_blank\"\n                className=\"cursor-pointer underline\"\n              >\n                Published\n              </Link>\n            ) : (\n              <>Draft</>\n            )}\n          </span>\n        </p>\n      </div>\n    </div>\n\n    <div>\n      {previewMode === \"edit\" && (\n        <div className=\"tab-pane show active p-4\" id=\"edit\">\n          <Widget\n            src=\"devhub.near/widget/devhub.entity.addon.blogv2.editor.form\"\n            props={{\n              title,\n              setTitle,\n              subtitle,\n              setSubtitle,\n              options: selectOptions,\n              category,\n              setCategory,\n              description,\n              setDescription,\n              author,\n              setAuthor,\n              date,\n              setDate,\n              content,\n              setContent,\n            }}\n          />\n          {/* Show delete button */}\n          <div\n            className={\"d-flex align-items-center justify-between gap-3 mt-4\"}\n          >\n            {data.id ? (\n              <>\n                <Widget\n                  src={\n                    \"devhub.near/widget/devhub.entity.addon.blogv2.editor.ConfirmModal\"\n                  }\n                  props={{\n                    isOpen: isDeleteModalOpen,\n                    onCancelClick: () => setDeleteModal(false),\n                    onConfirmClick: () => {\n                      setDeleteModal(false);\n                      handleDelete();\n                    },\n                    title: \"Are you sure you want to delete this blog?\",\n                    content: \"This will permanently remove your blog.\",\n                    confirmLabel: \"Ready to Delete\",\n                    cancelLabel: \"Cancel\",\n                  }}\n                />\n                <Widget\n                  src={`devhub.near/widget/devhub.components.molecule.Button`}\n                  props={{\n                    classNames: {\n                      root: \"btn-outline-danger shadow-none border-0 btn-sm\",\n                    },\n                    label: (\n                      <div className=\"d-flex align-items-center gap-1\">\n                        <i class=\"bi bi-trash3\"></i> Delete\n                      </div>\n                    ),\n                    testId: \"delete-blog-button\",\n                    disabled: submittedBlogDeleted,\n                    onClick: () => setDeleteModal(true),\n                  }}\n                />\n              </>\n            ) : null}\n            <div className=\"flex gap-x-3\">\n              <Widget\n                src={`devhub.near/widget/devhub.components.molecule.Button`}\n                props={{\n                  classNames: {\n                    root: \"d-flex h-100 text-muted fw-bold btn-outline shadow-none border-0 btn-sm\",\n                  },\n                  label: \"Cancel\",\n                  onClick: onCancel,\n                }}\n              />\n              <SubmitBtn />\n            </div>\n          </div>\n        </div>\n      )}\n      {previewMode === \"preview\" && (\n        <div\n          className=\"w-100 h-100 p-4 flex flex-column gap-4\"\n          id=\"preview\"\n          style={{ position: \"relative\" }}\n        >\n          <Card\n            data={{\n              title,\n              subtitle,\n              description,\n              publishedAt: date,\n              content,\n              author,\n              category,\n              community: handle,\n            }}\n          />\n\n          <Page\n            data={{\n              title,\n              subtitle,\n              description,\n              publishedAt: date,\n              content,\n              author,\n              category,\n              community: handle,\n            }}\n          />\n        </div>\n      )}\n    </div>\n  </Container>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/devhub.near/widget/devhub.entity.addon.blogv2.editor.content", "fact_widget_deployments_id": "03e0f9fe072c611dfd1592f0b8efae80", "inserted_timestamp": "2024-06-05T11:08:30.675Z", "modified_timestamp": "2024-06-05T11:08:30.675Z", "__row_index": 0}