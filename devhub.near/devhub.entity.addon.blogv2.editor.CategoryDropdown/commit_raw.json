{"tx_hash": "BJ4dMQ44SQF3fVQo2gz5wGx3rX7SfQDAESNVNovCGc9s", "action_id_social": "ds7ZDVbcQZNHsRLqSJAFzQubnvnTvRebqAyyuaTmtdK-0-widget", "block_id": 120483058, "block_timestamp": "2024-06-05T09:32:57.363Z", "signer_id": "devhub.near", "widget_name": "devhub.entity.addon.blogv2.editor.CategoryDropdown", "source_code": "const { selectedValue, onChange, disabled } = props;\n\nonChange = onChange || (() => {});\n\nconst options = [\n  {\n    title: \"Guide\",\n    description: \"\",\n    value: \"guide\",\n  },\n  {\n    title: \"News\",\n    description: \"\",\n    value: \"news\",\n  },\n  {\n    title: \"Reference\",\n    description: \"\",\n    value: \"reference\",\n  },\n];\n\nconst [isOpen, setIsOpen] = useState(false);\nconst [selectedOptionValue, setSelectedValue] = useState(selectedValue);\n\nconst toggleDropdown = () => {\n  setIsOpen(!isOpen);\n};\n\nuseEffect(() => {\n  if (selectedValue && selectedValue !== selectedOptionValue) {\n    setSelectedValue(selectedValue);\n  }\n}, [selectedValue]);\n\nuseEffect(() => {\n  if (selectedValue !== selectedOptionValue) {\n    onChange(selectedOptionValue);\n  }\n}, [selectedOptionValue]);\n\nconst handleOptionClick = (option) => {\n  setSelectedValue(option.value);\n  setIsOpen(false);\n};\n\nconst Container = styled.div`\n  .drop-btn {\n    width: 100%;\n    text-align: left;\n    padding-inline: 10px;\n  }\n\n  .dropdown-toggle:after {\n    position: absolute;\n    top: 46%;\n    right: 2%;\n  }\n\n  .dropdown-menu {\n    width: 100%;\n  }\n\n  .dropdown-item.active,\n  .dropdown-item:active {\n    background-color: #f0f0f0 !important;\n    color: black;\n  }\n\n  .disabled {\n    background-color: #f8f8f8 !important;\n    cursor: not-allowed !important;\n    border-radius: 5px;\n    opacity: inherit !important;\n  }\n\n  .disabled.dropdown-toggle::after {\n    display: none !important;\n  }\n\n  .custom-select {\n    position: relative;\n  }\n\n  .selected {\n    background-color: #f0f0f0;\n  }\n\n  .cursor-pointer {\n    cursor: pointer;\n  }\n\n  .text-wrap {\n    overflow: hidden;\n    white-space: normal;\n  }\n`;\n\nconst Item = ({ option }) => {\n  if (!option) {\n    return <div className=\"text-muted\">Select Category</div>;\n  }\n  return (\n    <div className=\"d-flex gap-3 align-items-center w-100\">\n      <div className=\"d-flex flex-column gap-1 w-100 text-wrap\">\n        <div className=\"h6 mb-0\"> {option.title}</div>\n      </div>\n    </div>\n  );\n};\n\nconst selectedOption =\n  options.find((item) => item.value === selectedOptionValue) ?? null;\n\nreturn (\n  <Container>\n    <div\n      className=\"custom-select w-100\"\n      tabIndex=\"0\"\n      onBlur={() => setIsOpen(false)}\n    >\n      <div\n        className={\n          \"dropdown-toggle bg-white border rounded-2 btn drop-btn w-100 \" +\n          (disabled ? \"disabled\" : \"\")\n        }\n        onClick={!disabled && toggleDropdown}\n      >\n        <div className={`selected-option`}>\n          <Item option={selectedOption} />\n        </div>\n      </div>\n\n      {isOpen && (\n        <div className=\"dropdown-menu rounded-2 dropdown-menu-end dropdown-menu-lg-start px-2 shadow show w-100\">\n          <div>\n            {options.map((option) => (\n              <div\n                key={option.value}\n                className={`dropdown-item cursor-pointer w-100 my-1 ${\n                  selectedOption.value === option.value ? \"selected\" : \"\"\n                }`}\n                onClick={() => handleOptionClick(option)}\n              >\n                <Item option={option} />\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  </Container>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/devhub.near/widget/devhub.entity.addon.blogv2.editor.CategoryDropdown", "fact_widget_deployments_id": "d2d745ad98cf7dab34cbcbe7ba7934fe", "inserted_timestamp": "2024-06-05T11:08:30.675Z", "modified_timestamp": "2024-06-05T11:08:30.675Z", "__row_index": 1}