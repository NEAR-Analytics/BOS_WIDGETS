{"tx_hash": "BJ4dMQ44SQF3fVQo2gz5wGx3rX7SfQDAESNVNovCGc9s", "action_id_social": "ds7ZDVbcQZNHsRLqSJAFzQubnvnTvRebqAyyuaTmtdK-0-widget", "block_id": 120483058, "block_timestamp": "2024-06-05T09:32:57.363Z", "signer_id": "devhub.near", "widget_name": "devhub.entity.addon.blogv2.editor.provider", "source_code": "const { getPost, setCommunitySocialDB } = VM.require(\n  \"devhub.near/widget/core.adapter.devhub-contract\"\n);\n\nconst { generateRandom6CharUUID } = VM.require(\n  \"devhub.near/widget/core.lib.stringUtils\"\n);\n\ngenerateRandom6CharUUID || (generateRandom6CharUUID = () => {});\n\nconst { Layout, handle, communityAddonId } = props;\n\nsetCommunitySocialDB = setCommunitySocialDB || (() => <></>);\ngetPost = getPost || (() => <></>);\n\nconst handleGetData = (v) => {\n  const id = transformString(v.title);\n  return blogData[id] || {};\n};\n\nconst blogData =\n  Social.get([`${handle}.community.devhub.near/blog/**`], \"final\") || {};\n\n// Show only published blogs\nconst processedData = Object.keys(blogData)\n  .map((key) => {\n    return {\n      ...blogData[key].metadata,\n      id: key,\n      content: blogData[key][\"\"],\n    };\n  })\n  // Every instance of the blog tab has its own blogs\n  .filter((blog) => blog.communityAddonId === communityAddonId)\n  // Sort by published date\n  .sort((blog1, blog2) => {\n    return new Date(blog2.publishedAt) - new Date(blog1.publishedAt);\n  });\n\nfunction transformString(str) {\n  // Convert the string to lowercase\n  const lowerCaseStr = str.toLowerCase();\n\n  // Replace spaces with hyphens\n  const transformedStr = lowerCaseStr.replace(/ /g, \"-\");\n\n  // Return the transformed string\n  return transformedStr;\n}\n\nconst handleOnSubmit = (v, isEdit) => {\n  let id = isEdit\n    ? v.id\n    : `${transformString(v.title)}-${generateRandom6CharUUID()}`;\n  let publishedAt = new Date(v.date).toISOString().slice(0, 10);\n\n  let metadata = {\n    title: v.title,\n    publishedAt,\n    status: v.status,\n    subtitle: v.subtitle,\n    description: v.description,\n    author: v.author,\n    category: v.category,\n    updatedAt: new Date().toISOString().slice(0, 10),\n  };\n\n  if (!isEdit) {\n    // Set this once when created\n    metadata.createdAt = new Date().toISOString().slice(0, 10);\n    metadata.communityAddonId = communityAddonId;\n  }\n\n  setCommunitySocialDB({\n    handle,\n    data: {\n      blog: {\n        [id]: {\n          \"\": v.content,\n          metadata,\n        },\n      },\n    },\n  });\n};\n\nconst handleOnDelete = (id) => {\n  setCommunitySocialDB({\n    handle,\n    data: {\n      blog: {\n        [id]: {\n          \"\": null,\n          metadata: {\n            title: null,\n            createdAt: null,\n            updatedAt: null,\n            publishedAt: null,\n            status: null,\n            subtitle: null,\n            description: null,\n            author: null,\n            id: null,\n            category: null,\n            communityAddonId: null,\n          },\n        },\n      },\n    },\n  });\n};\n\nreturn (\n  <Layout\n    data={processedData || []}\n    getData={handleGetData}\n    onSubmit={handleOnSubmit}\n    onDelete={handleOnDelete}\n  />\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/devhub.near/widget/devhub.entity.addon.blogv2.editor.provider", "fact_widget_deployments_id": "1e596d90155d42d5aef65b951cdd8ffd", "inserted_timestamp": "2024-06-05T11:08:30.675Z", "modified_timestamp": "2024-06-05T11:08:30.675Z", "__row_index": 0}