{"tx_hash": "J5DLgQAHtbXC6Ygh67jV4bfKgoPxJacXQhFeBejYH22D", "action_id_social": "GxYiTtZStCkRTPC6Jcpqd27gAknsRzedzcnBSbrjKzgQ-0-widget", "block_id": 117511822, "block_timestamp": "2024-04-24T09:18:21.125Z", "signer_id": "dropcast.near", "widget_name": "airdrop", "source_code": "const accountId = context.accountId;\nconst Owner = \"dropcast.near\";\nconst API_URL = props.API_URL || \"http://localhost:2402\";\nconst USER = props.USER || {};\nconst TOKEN = props.TOKEN || \"\";\nconst Logout = props.Logout;\n\n//Styles\nconst Wrapper = styled.div`\n  display: flex;\n  width: 100%;\n  padding: 64px;\n  height: fit-content;\n  position: relative;\n  align-items: stretch;\n  flex-direction: column;\n  color: rgb(229 229 229);\n  background: rgb(23,23,23);\n  @media (max-width: 510px) {\n      padding: 30px;\n  }\n`;\n\nconst Label = styled.label`\n    font-size: 14px;\n    margin-bottom: 4px;\n`;\n\nconst Card = styled.div`\n    gap: 24px;\n    display: flex;\n    width: 100%;\n    padding: 48px;\n    border-radius: 8px;\n    position: relative;\n    flex-direction: column;\n    background: rgb(38, 38, 38);\n    @media (max-width: 620px) {\n      padding: 15px;\n      height: 100%;\n      .menu {\n        width: 74vw;\n      }\n    }  \n`;\n\nconst DropBox = styled.label`\n    margin: 10px 0;\n    padding: 30px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n    border: 3px dotted #a3a3a3;\n    border-radius: 5px;\n`;\n\nconst Button = styled.button`\n    color: #FFF;\n    padding: 12px;\n    border-radius: 6px;\n    background-image: linear-gradient(to right, rgb(147, 51, 234), rgb(99, 102, 241));\n`;\n\nconst UploadButton = styled.button`\n    text-decoration: none;\n    background-color: #005af0;\n    color: #ffffff;\n    padding: 10px 20px;\n    border: none;\n    outline: none;\n    transition: 0.3s;\n`;\nconst DepButton = styled.button`\n    color: #FFF;\n    padding: 1px 4px;\n    border-radius: 6px;\n    background-image: linear-gradient(to right, rgb(147, 51, 234), rgb(99, 102, 241), rgb(99, 102, 241));\n`;\n\nconst CardText = styled.h3`\n    font-size: 22px;\n    font-weight: 600;\n`;\n\nconst DropBoxText1 = styled.h4`\n    font-size: 17px;\n    font-weight: 400;\n`;\nconst DropBoxText2 = styled.h4`\n    margin-top: 10px;\n    margin-bottom: 20px;\n    font-size: 12px;\n    color: #a3a3a3;\n`;\n\nconst [file, setFile] = useState(null);\nconst [selectedToken, setSelectedToken] = useState(\"\");\nconst [tokenList, setTokenList] = useState([]);\nconst [airdropFee, setAirdropFee] = useState(0);\nconst [notification, setNotification] = useState(\"\");\n\nconst changeOption = (value) => {\n  setSelectedToken({ value });\n};\n\nconst handleFileChange = (files) => {\n  setFile(files[0]);\n};\n\nconst handleDeposit = async () => {\n  console.log(Storage.get(\"timeId\"));\n  if (!airdropFee) {\n    setNotification(\"First, upload file, then you will get fee amount.\");\n    return;\n  }\n  const oneTeraGas = 1000000000000;\n  const oneNEARInYoctoNEAR = 1000000000000000000000000;\n  const receiver = \"humans-of-near.near\";\n  // Let's transfer amount NEAR to frol.near\n  //   const result = Near.call(\n  //     \"transfer-near.near\",\n  //     \"transfer_near\",\n  //     receiver,\n  //     oneTeraGas,\n  //     Number(airdropFee) * oneNEARInYoctoNEAR\n  //   );\n  const result = Near.call(\n    \"transfer-near.near\",\n    \"transfer_near\",\n    {\n      receiver_id: receiver,\n      memo: Storage.get(\"timeId\"),\n    },\n    oneTeraGas,\n    Number(airdropFee) * oneNEARInYoctoNEAR\n  );\n  console.log(\"tx-result\", result);\n};\n\nconst handleSubmit = async (e) => {\n  e.preventDefault();\n  if (!file) {\n    setNotification(\"please select file\");\n    return;\n  }\n\n  const reader = new FileReader();\n\n  reader.onload = () => {\n    const fileData = reader.result;\n    try {\n      const response = asyncFetch(\"http://localhost:2402/api/project/airdrop\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          data: fileData,\n          name: file.name,\n          userId: USER?._id || \"65dc747ae9ed2a19c505e1c2\",\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\",\n          // \"x-a uth-token\": TOKEN,\n        },\n      });\n      response.then(({ body }) => {\n        if (body.status === true) {\n          setNotification(\"You have uploaded file successfully.\");\n          setAirdropFee(body.airdropFee);\n          Storage.set(\"timeId\", body.timeId);\n        }\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  reader.readAsDataURL(file);\n};\n\nuseEffect(() => {\n  console.log(\"window.location.href\", window.location.href);\n  console.log(\"props.transactionHashes\", props.transactionHashes);\n  const response = asyncFetch(\n    `http://localhost:2402/api/project/get_token_list`,\n    {\n      method: \"POST\",\n      body: JSON.stringify({\n        accountId,\n      }),\n\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-auth-token\": TOKEN,\n      },\n    }\n  );\n  response.then(({ body }) => {\n    setTokenList(body.data);\n  });\n  console.log(Alert);\n}, []);\n\nreturn (\n  <Wrapper>\n    <Card>\n      <div>\n        <Label>{`Select airdrop token`}</Label>\n        <Widget\n          props={{\n            noLabel: true,\n            width: \"40vw\",\n            options: tokenList,\n            value: selectedToken.value,\n            onChange: (val) => changeOption(val),\n          }}\n          src={`${Owner}/widget/Select`}\n        />\n      </div>\n      <div>\n        <Label>Airdrop Fee(NEAR)</Label>\n        <div className=\"d-flex flex-row\">\n          <input\n            type=\"number\"\n            name=\"airdrop_fee\"\n            value={airdropFee}\n            className=\"w-full px-2 py-1 rounded-3 border-0\"\n            onChange={(e) => {}}\n            style={{ fontSize: 14, width: \"90%\" }}\n          />\n          <DepButton className=\"btn\" onClick={handleDeposit}>\n            Deposit\n          </DepButton>\n        </div>\n      </div>\n      <CardText>Upload Files</CardText>\n      <DropBox>\n        <DropBoxText1>Select File here</DropBoxText1>\n        <DropBoxText2>Files Supported: .xls, .xlsx</DropBoxText2>\n        <Files onChange={handleFileChange} clickable multiple={false}>\n          {file && (\n            <div id=\"fileName\" className=\"px-3 py-1 mt-3 rounded-pill\">\n              {file?.name}\n            </div>\n          )}\n        </Files>\n        <UploadButton onClick={handleSubmit}>Upload</UploadButton>\n      </DropBox>\n      {notification && (\n        <div\n          className=\"d-flex justify-content-end position-absolute\"\n          style={{ right: 10 }}\n        >\n          <Widget\n            props={{\n              text: notification,\n              type: \"info\",\n              setNotification,\n            }}\n            src={`${Owner}/widget/Alert`}\n          />\n        </div>\n      )}\n    </Card>\n  </Wrapper>\n);\n", "metadata": {"fork_of": "dropcast.near/widget/airdrop@117510911"}, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/dropcast.near/widget/airdrop", "fact_widget_deployments_id": "25495916dff04498ca5e9734afcf3058", "inserted_timestamp": "2024-04-24T11:36:56.195Z", "modified_timestamp": "2024-04-24T11:36:56.195Z", "__row_index": 12}