{"tx_hash": "FarXM5z8MMtMndSD5sryHX3i8wXtgLVGVXQ3uu2oM8Zv", "action_id_social": "DRutPVAAuKrHo2UCd17k61ckY38wzVy1eVo2y3RyiYN5-0-widget", "block_id": 113235794, "block_timestamp": "2024-02-20T18:21:28.394Z", "signer_id": "dropcast.near", "widget_name": "discord", "source_code": "const accountId = context.accountId;\nconst Owner = \"dropcast.near\";\nconst CLIENT_ID = \"1206878767633534976\";\nconst CLIENT_SECRET = \"GhYxHW-FZyo0pqK26xx7BVgwTa5VCLn6\";\nconst BASE_URL = \"https://near.org/dropcast.near/widget/\";\nconst OAuthScope = [\"identify\", \"guilds\"].join(\" \");\n// const API_URL = \"https://dropcast.nearverselabs.com\";\nconst API_URL = \"http://localhost:2402\";\n\nconst discordCode = props.code || \"\";\n\nconst TOKEN = Storage.get(\"token\", `${Owner}/widget/discord`);\nconst USER = Storage.get(\"user\", `${Owner}/widget/discord`);\n\nState.init({\n  error: \"\",\n  loaded: false,\n  go_login: false,\n  token: TOKEN,\n  user: USER,\n});\n\nconst convertObject = (params) => {\n  return Object.keys(params)\n    .map((param) => `${param}=${params[param]}`)\n    .join(\"&\");\n};\n\nconst fetchData = () => {\n  const params = {\n    client_id: CLIENT_ID,\n    client_secret: CLIENT_SECRET,\n    grant_type: \"authorization_code\",\n    code: discordCode,\n    redirect_uri: `${BASE_URL}discord`,\n    scope: OAuthScope,\n  };\n\n  const urlSearchParams = convertObject(params);\n\n  let promise = asyncFetch(`https://discordapp.com/api/v9/oauth2/token`, {\n    headers: {\n      \"Content-Type\": \"application/x-www-form-urlencoded\",\n    },\n    method: \"POST\",\n    body: urlSearchParams,\n  });\n\n  promise\n    .then((data) => {\n      if (data.status === 200) {\n        asyncFetch(`${API_URL}/api/auth/discord`, {\n          headers: {\n            \"Content-Type\": \"application/x-www-form-urlencoded\",\n          },\n          method: \"POST\",\n          body: convertObject(data.body),\n        }).then((res) => {\n          const result = res.body;\n\n          if (result.token) {\n            Storage.set(\"token\", result.token);\n            Storage.set(\"user\", result.user);\n            State.update({\n              token: result.token,\n              user: result.user,\n              loaded: true,\n            });\n          } else if (result.error)\n            State.update({ error: result.error, loaded: true, go_login: true });\n        });\n      } else {\n        console.log(TOKEN, \"=======><===========11111111\");\n\n        if (!TOKEN) State.update({ go_login: true, loaded: true });\n        return;\n      }\n    })\n    .catch((error) => {\n      console.log(TOKEN, \"=======><===========22222222\");\n      if (!TOKEN) State.update({ go_login: true, loaded: true });\n    });\n};\n\nconst Logout = () => {\n  Storage.set(\"token\", null);\n  Storage.set(\"user\", null);\n};\n\nconsole.log(state, \"==>state\");\n\nif (state.token)\n  return (\n    <Widget\n      src={`${Owner}/widget/main`}\n      props={{ API_URL, TOKEN: state.token, USER: state.user, Logout }}\n    />\n  );\n\nif (!discordCode || !accountId || state.go_login)\n  return <Widget src={`${Owner}/widget/login`} />;\nelse if (!state.loaded && !state.token)\n  setTimeout(() => {\n    fetchData();\n  }, 1000);\n\nreturn <div>{result.error || `Loading`}</div>;\n", "metadata": {"fork_of": "dropcast.near/widget/discord@113235696"}, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/dropcast.near/widget/discord", "fact_widget_deployments_id": "40820f07b4944cab33c89f8126859003", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 34}