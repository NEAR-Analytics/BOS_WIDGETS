{"tx_hash": "6RojdpSf28n5hMa174LajBXbYUKwUHBUFcVQthftGsrD", "action_id_social": "2QYRMcFQPWMf5WL2H8dkw8kmsCkMuJP32h5HoaxYAMb8-0-widget", "block_id": 112816892, "block_timestamp": "2024-02-14T13:34:53.218Z", "signer_id": "dropcast.near", "widget_name": "discord", "source_code": "const accountId = context.accountId;\nconst Owner = \"dropcast.near\";\nconst CLIENT_ID = \"1206878767633534976\";\nconst CLIENT_SECRET = \"GhYxHW-FZyo0pqK26xx7BVgwTa5VCLn6\";\nconst BASE_URL = \"https://near.org/dropcast.near/widget/\";\nconst OAuthScope = [\"identify\", \"guilds\"].join(\" \");\nconst API_URL = \"http://localhost:3000/api\";\n\nconst discordCode = props.code || \"\";\n\nState.init({\n  loaded: false,\n  error: \"\",\n  token: \"\",\n  user: {},\n});\n\nconst convertObject = (params) => {\n  return Object.keys(params)\n    .map((param) => `${param}=${params[param]}`)\n    .join(\"&\");\n};\n\nconst fetchData = () => {\n  State.update({\n    loaded: true,\n  });\n\n  const params = {\n    client_id: CLIENT_ID,\n    client_secret: CLIENT_SECRET,\n    grant_type: \"authorization_code\",\n    code: discordCode,\n    redirect_uri: `${BASE_URL}discord`,\n    scope: OAuthScope,\n  };\n\n  const urlSearchParams = convertObject(params);\n\n  let promise = asyncFetch(`https://discordapp.com/api/v9/oauth2/token`, {\n    headers: {\n      \"Content-Type\": \"application/x-www-form-urlencoded\",\n    },\n    method: \"POST\",\n    body: urlSearchParams,\n  });\n\n  promise.then((data) => {\n    if (data.status === 200) {\n      asyncFetch(`${API_URL}/auth/discord`, {\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\",\n        },\n        method: \"POST\",\n        body: convertObject(data.body),\n      }).then((res) => {\n        const result = res.body;\n        console.log(result, \"==>reusult\");\n        if (result.token)\n          State.update({ token: result.token, user: result.user });\n        else if (result.error) State.update({ error: result.error });\n      });\n    } else {\n      return <Widget src={`${Owner}/widget/login`} />;\n    }\n  });\n};\n\nif (!discordCode || !accountId) return <Widget src={`${Owner}/widget/login`} />;\nelse if (!state.loaded) fetchData();\n\nif (state.token)\n  return (\n    <Widget\n      src={`${Owner}/widget/main`}\n      props={{ TOKEN: state.token, USER: state.user }}\n    />\n  );\nreturn <div>{result.error || `Loading`}</div>;\n", "metadata": {"fork_of": "dropcast.near/widget/discord@112814012"}, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/dropcast.near/widget/discord", "fact_widget_deployments_id": "5625978bd7ffc8ba51c2a669565be85a", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 60}