{"tx_hash": "7tPgGoCTuYCFUaLmEotQNSiRZhZx9SgK22Q2YfR8JrFH", "action_id_social": "2dCxpYPeBCGECm6nmiFhiGNXoTfkiDvMNNoantSJfnju-0-widget", "block_id": 113230636, "block_timestamp": "2024-02-20T16:31:07.226Z", "signer_id": "dropcast.near", "widget_name": "discord", "source_code": "const accountId = context.accountId;\nconst Owner = \"dropcast.near\";\nconst CLIENT_ID = \"1206878767633534976\";\nconst CLIENT_SECRET = \"GhYxHW-FZyo0pqK26xx7BVgwTa5VCLn6\";\nconst BASE_URL = \"https://near.org/dropcast.near/widget/\";\nconst OAuthScope = [\"identify\", \"guilds\"].join(\" \");\n// const API_URL = \"https://dropcast.nearverselabs.com\";\nconst API_URL = \"http://localhost:2402\";\n\nconst discordCode = props.code || \"\";\n\nconst _token = Storage.get(\"token\");\nconst _user = Storage.get(\"user\");\n\nconsole.log({ _token, _user }, \"==>\");\n\nState.init({\n  loaded: false,\n  error: \"\",\n  token: \"\",\n  user: {},\n});\n\nconst convertObject = (params) => {\n  return Object.keys(params)\n    .map((param) => `${param}=${params[param]}`)\n    .join(\"&\");\n};\n\nconst fetchData = () => {\n  State.update({\n    loaded: true,\n  });\n\n  const params = {\n    client_id: CLIENT_ID,\n    client_secret: CLIENT_SECRET,\n    grant_type: \"authorization_code\",\n    code: discordCode,\n    redirect_uri: `${BASE_URL}discord`,\n    scope: OAuthScope,\n  };\n\n  const urlSearchParams = convertObject(params);\n\n  let promise = asyncFetch(`https://discordapp.com/api/v9/oauth2/token`, {\n    headers: {\n      \"Content-Type\": \"application/x-www-form-urlencoded\",\n    },\n    method: \"POST\",\n    body: urlSearchParams,\n  });\n\n  promise\n    .then((data) => {\n      if (data.status === 200) {\n        asyncFetch(`${API_URL}/api/auth/discord`, {\n          headers: {\n            \"Content-Type\": \"application/x-www-form-urlencoded\",\n          },\n          method: \"POST\",\n          body: convertObject(data.body),\n        }).then((res) => {\n          const result = res.body;\n          console.log(result, \"==>reusult\");\n\n          if (result.token) {\n            Storage.set(\"token\", result.token);\n            Storage.set(\"user\", JSON.stringify(result.user));\n            State.update({ token: result.token, user: result.user });\n          } else if (result.error) State.update({ error: result.error });\n        });\n      } else {\n        return <Widget src={`${Owner}/widget/login`} />;\n      }\n    })\n    .catch((error) => {\n      console.log(error);\n    });\n};\n\nif (!discordCode || !accountId) return <Widget src={`${Owner}/widget/login`} />;\nelse if (!state.loaded) fetchData();\n\nif (state.token)\n  return (\n    <Widget\n      src={`${Owner}/widget/main`}\n      props={{ TOKEN: state.token, USER: state.user }}\n    />\n  );\nreturn <div>{result.error || `Loading`}</div>;\n", "metadata": {"fork_of": "dropcast.near/widget/discord@113230508"}, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/dropcast.near/widget/discord", "fact_widget_deployments_id": "ec8c8f58a02a319398c92611a094ace2", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 14}