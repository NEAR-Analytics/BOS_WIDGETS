{"tx_hash": "AUujPbXjQGPCFLqqpbfQZ3cXPfzcbRW8JyxzVpqA83zo", "action_id_social": "5bCjxrM5FxHNWESaHBkYfr3tjTcUT9ENnsJUTtBHXFJW-0-widget", "block_id": 113358840, "block_timestamp": "2024-02-22T14:17:44.758Z", "signer_id": "dropcast.near", "widget_name": "manager", "source_code": "const accountId = context.accountId;\nconst Owner = \"dropcast.near\";\nconst API_URL = props.API_URL || \"http://localhost:2402\";\nconst TOKEN = props.TOKEN || \"\";\nconst changePage = props.changePage || ((page) => {});\nconst Logout = props.Logout;\n\n//Styles\nconst Wrapper = styled.div`\n    display: flex;\n    width: 100%;\n    height: 100%;\n    padding: 64px;\n    position: relative;\n    align-items: stretch;\n    flex-direction: column;\n    color: rgb(229 229 229);\n    background: rgb(23,23,23);\n    @media (max-width: 620px) {\n        padding: 29px;\n    }   \n`;\n\nconst ProjectButton = styled.button`\n    color: #FFF;\n    padding: 8px 16px;\n    border-radius: 6px;\n    background-image: linear-gradient(to right, rgb(147, 51, 234), rgb(99, 102, 241), rgb(99, 102, 241));\n`;\n\nconst GridWrapper = styled.div`\n  gap: 10px;\n  display: grid;\n  grid-template-columns: repeat(3,minmax(0,1fr));\n  @media (max-width: 935px) {\n    grid-template-columns: repeat(1,minmax(0,1fr));\n  }\n  @media (min-width: 935px) and (max-width: 1400px) {\n    grid-template-columns: repeat(2,minmax(0,1fr));\n  }\n`;\nState.init({\n  list: [],\n  edit: false,\n  loaded: false,\n  isRegister: false,\n  project: {},\n});\n\nconst handleNewProject = () => {\n  State.update({\n    isRegister: true,\n  });\n};\n\nconst getList = () => {\n  let promise = asyncFetch(`${API_URL}/api/project/me`, {\n    headers: {\n      \"Content-Type\": \"application/x-www-form-urlencoded\",\n      \"x-auth-token\": TOKEN,\n    },\n    method: \"GET\",\n  });\n\n  promise\n    .then((data) => {\n      if (data.status === 200) {\n        State.update({\n          ...state,\n          loaded: true,\n          list: data.body,\n        });\n      } else {\n        State.update({\n          ...state,\n          error: data.body,\n        });\n        Logout();\n      }\n    })\n    .catch(() => {\n      Logout();\n    });\n};\n\nconst editMyProject = (project) => {\n  State.update({\n    ...state,\n    edit: true,\n    project,\n  });\n};\n\nif (!state.loaded) getList();\n\nif (state.isRegister)\n  return (\n    <Widget\n      src={`${Owner}/widget/register`}\n      props={{ API_URL, TOKEN, changePage }}\n    />\n  );\n\nif (state.edit)\n  return (\n    <Widget\n      src={`${Owner}/widget/register`}\n      props={{ API_URL, TOKEN, type: \"edit\", project: state.project }}\n    />\n  );\n\nreturn (\n  <Wrapper>\n    <p>Start by creating a new Vulcan Project</p>\n    <div className=\"mb-2\">\n      <ProjectButton className=\"btn\" onClick={handleNewProject}>\n        + New Project\n      </ProjectButton>\n    </div>\n    <GridWrapper>\n      {state.list.map((project) => (\n        <Widget\n          props={{\n            API_URL,\n            TOKEN,\n            project,\n            editMyProject,\n            type: \"manager\",\n            changePage,\n          }}\n          key={project._id}\n          src={`${Owner}/widget/project`}\n        />\n      ))}\n    </GridWrapper>\n  </Wrapper>\n);\n", "metadata": {"fork_of": "dropcast.near/widget/manager@113267117"}, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/dropcast.near/widget/manager", "fact_widget_deployments_id": "758be413fd0121d5db632c82826e9dc8", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 17}