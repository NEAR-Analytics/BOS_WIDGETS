{"tx_hash": "2HUqbsfXf34q8DRSpbvTYFgu3g6BXxxWsGTMTUecmoni", "action_id_social": "6MKwqg2nqHQDT15oVYPyVAW77VjyX7RYymyzbPnu8BXZ-0-widget", "block_id": 97819373, "block_timestamp": "2023-08-01T06:18:07.990Z", "signer_id": "idknwhoru.near", "widget_name": "SWF.2023.grit.PlayerList", "source_code": "const cronosContractAddress = \"0xC6A3f8A89136fede4BD4CA36a1864bDA811937c9\";\n\nconst images = [\n  \"https://ipfs.near.social/ipfs/bafkreifdek56fab4d55vun6to66dzizhy76ly65gdy3eo6lv5vnzbxgrty\",\n  \"https://ipfs.near.social/ipfs/bafkreibslifqs6pz37vy2mrrlmogtatlg5s2d5fc4bfiv4rzcgzubgekeu\",\n  \"https://ipfs.near.social/ipfs/bafkreibshwzbeoxguy5mot6nilssix3ilmpt6w5xv6bazvt2edbnaa5spe\",\n  \"https://ipfs.near.social/ipfs/bafkreic5tco2sgvxdacogftgk3rlsjohb3ptqomr4o5vwtkrzvlfajnl7y\",\n  \"https://ipfs.near.social/ipfs/bafkreigpfirgs42t4rfbbixixm4w5ukqxsbflvvn2nxl7zdktalncxqh2a\",\n  \"https://ipfs.near.social/ipfs/bafkreias744aadzv7ivxuyoqtzwbbd6lawph5hewidapwwgyj5rnt73iri\",\n  \"https://ipfs.near.social/ipfs/bafkreicl2wdomm22rlz2h3gt62uilbharqgh4gmfbx7j7mbnbrkkfxq564\",\n  \"https://ipfs.near.social/ipfs/bafkreiew5g7eizlh6ms7al5y23g7juioejle2bhv3cbyqoq55upxt2dlyu\",\n];\n\nconst cronosContractABI = [\n  {\n    type: \"function\",\n    stateMutability: \"view\",\n    outputs: [\n      {\n        type: \"tuple[]\",\n        name: \"\",\n        internalType: \"struct MyERC20.PlayerInfo[]\",\n        components: [\n          { type: \"address\", name: \"playerAddress\", internalType: \"address\" },\n          { type: \"string\", name: \"koreanName\", internalType: \"string\" },\n          { type: \"string\", name: \"englishName\", internalType: \"string\" },\n          { type: \"string\", name: \"birthDate\", internalType: \"string\" },\n          { type: \"string\", name: \"position\", internalType: \"string\" },\n          { type: \"string\", name: \"team\", internalType: \"string\" },\n          {\n            type: \"uint256\",\n            name: \"totalDonationAmount\",\n            internalType: \"uint256\",\n          },\n        ],\n      },\n    ],\n    name: \"getAllPlayers\",\n    inputs: [],\n  },\n];\n\nconst getAllPlayers = () => {\n  const cronosContract = new ethers.Contract(\n    cronosContractAddress,\n    cronosContractABI,\n    Ethers.provider().getSigner()\n  );\n\n  cronosContract.getAllPlayers().then((players) => {\n    State.update({ players });\n  });\n};\n\nif (Ethers.provider()) {\n  const signer = Ethers.provider().getSigner();\n  signer\n    .getAddress()\n    .then((address) => {\n      State.update({ address });\n    })\n    .catch((err) => {\n      console.log({ err });\n    });\n}\n\nif (state.players === undefined) {\n  getAllPlayers();\n}\n\nconsole.log(state.players);\n\nconst Card = styled.div`\n    width: 25%;\n    height: 100%;\n    border: solid 1px #bbb;\n    cursor: pointer;\n`;\n\nconst Cards = () => {\n  if (state.players !== undefined) {\n    return (\n      <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\n        {state.players.map((player, idx) => {\n          if (idx > 7) {\n            return null;\n          }\n          return (\n            <Card>\n              <img src={images[idx]} width={\"100%\"}></img>\n              <h1>{player[1]}</h1>\n              <h2>{ethers.utils.formatEther(player[6])} CRO</h2>\n              <h3>{player[5]}</h3>\n              <h3>{player[4]}</h3>\n              <h3>{player[3]}</h3>\n            </Card>\n          );\n        })}\n      </div>\n    );\n  }\n};\n\nconst PlayListWrapper = styled.div`\n  .playlist-label {\n    color: #fff;\n  }\n`;\n\nreturn (\n  <PlayListWrapper>\n    <h1 className=\"playlist-label\">\uac00\uc7a5 \ud56b\ud55c \uc120\uc218</h1>\n    <button>\uc804\uccb4\ubcf4\uae30</button>\n    <button>\uacf5\uaca9\uc218</button>\n    <button>\uc218\ube44\uc218</button>\n    <button>\uace8\ud0a4\ud37c</button>\n    <Cards />\n  </PlayListWrapper>\n);\np;\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/idknwhoru.near/widget/SWF.2023.grit.PlayerList", "fact_widget_deployments_id": "27ba1c8e9c37fe7ab9e4fe7ac0377bf6", "inserted_timestamp": "2023-08-01T08:17:45.703Z", "modified_timestamp": "2023-08-01T08:17:45.703Z", "__row_index": 5}