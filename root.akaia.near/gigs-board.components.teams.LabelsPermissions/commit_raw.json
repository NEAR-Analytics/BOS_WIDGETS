{"tx_hash": "HBiJ8kvBdpniU5gYWR1pvZAVitBLfwUDDMcJRXuoeWFU", "action_id_social": "4DZFUdich7vanVcocSBDnE6Yhmv88ZVkjFcUQuCekNGz-0-widget", "block_id": 91956266, "block_timestamp": "2023-05-16T02:01:32.262Z", "signer_id": "root.akaia.near", "widget_name": "gigs-board.components.teams.LabelsPermissions", "source_code": "/* INCLUDE: \"common.jsx\" */\nconst nearDevGovGigsContractAccountId =\n  props.nearDevGovGigsContractAccountId ||\n  (context.widgetSrc ?? \"devgovgigs.near\").split(\"/\", 1)[0];\n\nconst nearDevGovGigsWidgetsAccountId =\n  props.nearDevGovGigsWidgetsAccountId ||\n  (context.widgetSrc ?? \"devgovgigs.near\").split(\"/\", 1)[0];\n\n/**\n * Reads a board config from DevHub contract storage.\n * Currently a mock.\n *\n * Boards are indexed by their ids.\n */\nconst boardConfigByBoardId = ({ boardId }) => {\n  return {\n    probablyUUIDv4: {\n      id: \"probablyUUIDv4\",\n\n      columns: [\n        { title: \"Draft\", labelFilters: [\"S-draft\"] },\n        { title: \"Review\", labelFilters: [\"S-review\"] },\n      ],\n\n      dataTypes: { Issue: true, PullRequest: true },\n      description: \"Latest NEAR Enhancement Proposals by status\",\n      repoURL: \"https://github.com/near/NEPs\",\n      title: \"NEAR Protocol NEPs\",\n    },\n  }[boardId];\n};\n\nfunction widget(widgetName, widgetProps, key) {\n  widgetProps = {\n    ...widgetProps,\n    nearDevGovGigsContractAccountId: props.nearDevGovGigsContractAccountId,\n    nearDevGovGigsWidgetsAccountId: props.nearDevGovGigsWidgetsAccountId,\n    referral: props.referral,\n  };\n\n  return (\n    <Widget\n      src={`${nearDevGovGigsWidgetsAccountId}/widget/gigs-board.${widgetName}`}\n      props={widgetProps}\n      key={key}\n    />\n  );\n}\n\nfunction href(widgetName, linkProps) {\n  linkProps = { ...linkProps };\n\n  if (props.nearDevGovGigsContractAccountId) {\n    linkProps.nearDevGovGigsContractAccountId =\n      props.nearDevGovGigsContractAccountId;\n  }\n\n  if (props.nearDevGovGigsWidgetsAccountId) {\n    linkProps.nearDevGovGigsWidgetsAccountId =\n      props.nearDevGovGigsWidgetsAccountId;\n  }\n\n  if (props.referral) {\n    linkProps.referral = props.referral;\n  }\n\n  const linkPropsQuery = Object.entries(linkProps)\n    .map(([key, value]) => (value === null ? null : `${key}=${value}`))\n    .filter((nullable) => nullable !== null)\n    .join(\"&\");\n\n  return `/#/${nearDevGovGigsWidgetsAccountId}/widget/gigs-board.pages.${widgetName}${\n    linkPropsQuery ? \"?\" : \"\"\n  }${linkPropsQuery}`;\n}\n\nconst CompactContainer = styled.div`\n  width: fit-content !important;\n  max-width: 100%;\n`;\n\nconst FormCheckLabel = styled.label`\n  white-space: nowrap;\n`;\n/* END_INCLUDE: \"common.jsx\" */\n\nconst access_info =\n  Near.view(nearDevGovGigsContractAccountId, \"get_access_control_info\") ?? null;\n\nif (!access_info) {\n  return <div>Loading...</div>;\n}\n\nconst rules_list = props.rules_list ?? access_info.rules_list;\n\nconst permissionExplainer = (permission) => {\n  if (permission.startsWith(\"starts-with:\")) {\n    let s = permission.substring(\"starts-with:\".length);\n    if (s == \"\") {\n      return \"Any label\";\n    } else {\n      return `Labels that start with \"${s}\"`;\n    }\n  } else {\n    return permission;\n  }\n};\n\nreturn (\n  <div className=\"card border-secondary\" key=\"labelpermissions\">\n    <div className=\"card-header\">\n      <i class=\"bi-lock-fill\"> </i>\n      <small class=\"text-muted\">Restricted Labels</small>\n    </div>\n    <ul class=\"list-group list-group-flush\">\n      {Object.entries(rules_list).map(([pattern, metadata]) => (\n        <li class=\"list-group-item\" key={pattern}>\n          <span class=\"badge text-bg-primary\" key={`${pattern}-permission`}>\n            {permissionExplainer(pattern)}\n          </span>{\" \"}\n          {metadata.description}\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/root.akaia.near/widget/gigs-board.components.teams.LabelsPermissions", "fact_widget_deployments_id": "159f6f87eee5797faf05f36287cf11c7", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}