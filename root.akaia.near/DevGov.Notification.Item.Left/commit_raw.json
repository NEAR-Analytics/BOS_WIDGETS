{"tx_hash": "Hzf8Vs1SBQym27inKYaWSsdoXaxQtvBAApyxA7aYGCUZ", "action_id_social": "DjhJTiF3x2AoAuTgsTKqAWVDTBFugQTqWJXdJENoVQj1-0-widget", "block_id": 92287275, "block_timestamp": "2023-05-20T09:32:12.931Z", "signer_id": "root.akaia.near", "widget_name": "DevGov.Notification.Item.Left", "source_code": "/* INCLUDE: \"common.jsx\" */\nconst nearDevGovGigsContractAccountId =\n  props.nearDevGovGigsContractAccountId ||\n  (context.widgetSrc ?? \"devgovgigs.near\").split(\"/\", 1)[0];\n\nconst nearDevGovGigsWidgetsAccountId =\n  props.nearDevGovGigsWidgetsAccountId ||\n  (context.widgetSrc ?? \"devgovgigs.near\").split(\"/\", 1)[0];\n\n/**\n * Reads a board config from DevHub contract storage.\n * Currently a mock.\n *\n * Boards are indexed by their ids.\n */\nconst boardConfigByBoardId = ({ boardId }) => {\n  return {\n    probablyUUIDv4: {\n      id: \"probablyUUIDv4\",\n      columns: [\n        { title: \"Draft\", labelFilters: [\"S-draft\"] },\n        { title: \"Review\", labelFilters: [\"S-review\"] },\n        { title: \"HALP!\", labelFilters: [\"help\"] },\n      ],\n      dataTypes: { Issue: true, PullRequest: true },\n      description: \"Latest NEAR Enhancement Proposals by status\",\n      repoURL: \"https://github.com/near/NEPs\",\n      title: \"NEAR Protocol NEPs\",\n    },\n  }[boardId];\n};\n\nfunction widget(widgetName, widgetProps, key) {\n  widgetProps = {\n    ...widgetProps,\n    nearDevGovGigsContractAccountId: props.nearDevGovGigsContractAccountId,\n    nearDevGovGigsWidgetsAccountId: props.nearDevGovGigsWidgetsAccountId,\n    referral: props.referral,\n  };\n\n  return (\n    <Widget\n      src={`${nearDevGovGigsWidgetsAccountId}/widget/gigs-board.${widgetName}`}\n      props={widgetProps}\n      key={key}\n    />\n  );\n}\n\nfunction href(widgetName, linkProps) {\n  linkProps = { ...linkProps };\n\n  if (props.nearDevGovGigsContractAccountId) {\n    linkProps.nearDevGovGigsContractAccountId =\n      props.nearDevGovGigsContractAccountId;\n  }\n\n  if (props.nearDevGovGigsWidgetsAccountId) {\n    linkProps.nearDevGovGigsWidgetsAccountId =\n      props.nearDevGovGigsWidgetsAccountId;\n  }\n\n  if (props.referral) {\n    linkProps.referral = props.referral;\n  }\n\n  const linkPropsQuery = Object.entries(linkProps)\n    .filter(([_key, nullable]) => (nullable ?? null) !== null)\n    .map(([key, value]) => `${key}=${value}`)\n    .join(\"&\");\n\n  return `/#/${nearDevGovGigsWidgetsAccountId}/widget/gigs-board.pages.${widgetName}${\n    linkPropsQuery ? \"?\" : \"\"\n  }${linkPropsQuery}`;\n}\n\nconst formHandler =\n  ({ formStateKey }) =>\n  ({ fieldName, updateHandler }) =>\n  (input) =>\n    State.update((lastState) => ({\n      ...lastState,\n\n      [formStateKey]: {\n        ...lastState[formStateKey],\n\n        [fieldName]:\n          typeof updateHandler === \"function\"\n            ? updateHandler({\n                input: input?.target?.value ?? input ?? null,\n                lastState,\n              })\n            : input?.target?.value ?? input ?? null,\n      },\n    }));\n\nconst CompactContainer = styled.div`\n  width: fit-content !important;\n  max-width: 100%;\n`;\n/* END_INCLUDE: \"common.jsx\" */\n\nif (!props.type) {\n  return \"Loading ...\";\n}\n\nconst type = props.type.split(\"/\")[1];\nreturn props.type ? (\n  <>\n    {type == \"like\"\n      ? \"liked\"\n      : type == \"reply\"\n      ? \"replied\"\n      : type == \"edit\"\n      ? \"edited\"\n      : \"???\"}{\" \"}\n    your\n    <a className=\"fw-bold text-muted\" href={href(\"Post\", { id: props.post })}>\n      Developer Governance post\n    </a>\n  </>\n) : (\n  \"Loading ...\"\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/root.akaia.near/widget/DevGov.Notification.Item.Left", "fact_widget_deployments_id": "5b06c2540003b1425d130309f641fecf", "inserted_timestamp": "2000-01-01T00:00:00.000Z", "modified_timestamp": "2000-01-01T00:00:00.000Z", "__row_index": 71}