{"tx_hash": "2XyCracowMNzjEK71674Sqzf3QCzcHurwYYotSrk3UyG", "action_id_social": "CcKsqdSqVuLKBw5E9ZEdq4HvbVvshApnJubJqLNVWx1o-0-widget", "block_id": 92110464, "block_timestamp": "2023-05-18T02:11:35.875Z", "signer_id": "root.akaia.near", "widget_name": "gigs-board.entities.GithubRepo.TicketCard", "source_code": "/* INCLUDE: \"common.jsx\" */\nconst nearDevGovGigsContractAccountId =\n  props.nearDevGovGigsContractAccountId ||\n  (context.widgetSrc ?? \"devgovgigs.near\").split(\"/\", 1)[0];\n\nconst nearDevGovGigsWidgetsAccountId =\n  props.nearDevGovGigsWidgetsAccountId ||\n  (context.widgetSrc ?? \"devgovgigs.near\").split(\"/\", 1)[0];\n\nconst SharedState = {\n  components: {\n    community: {\n      CommunityHeader: {\n        read: () => {\n          Storage.get(\n            \"state\",\n            `${nearDevGovGigsWidgetsAccountId}/widget/gigs-board.components.community.CommunityHeader`\n          );\n        },\n      },\n    },\n  },\n\n  localWrite: (state) => {\n    Storage.set(\"state\", state);\n  },\n};\n\n/**\n * Reads a board config from DevHub contract storage.\n * Currently a mock.\n *\n * Boards are indexed by their ids.\n */\nconst boardConfigByBoardId = ({ boardId }) => {\n  return {\n    probablyUUIDv4: {\n      id: \"probablyUUIDv4\",\n\n      columns: [\n        { title: \"Draft\", labelFilters: [\"S-draft\"] },\n        { title: \"Review\", labelFilters: [\"S-review\"] },\n      ],\n\n      dataTypes: { Issue: true, PullRequest: true },\n      description: \"Latest NEAR Enhancement Proposals by status\",\n      repoURL: \"https://github.com/near/NEPs\",\n      title: \"NEAR Protocol NEPs\",\n    },\n  }[boardId];\n};\n\nfunction widget(widgetName, widgetProps, key) {\n  widgetProps = {\n    ...widgetProps,\n    nearDevGovGigsContractAccountId: props.nearDevGovGigsContractAccountId,\n    nearDevGovGigsWidgetsAccountId: props.nearDevGovGigsWidgetsAccountId,\n    referral: props.referral,\n  };\n\n  return (\n    <Widget\n      src={`${nearDevGovGigsWidgetsAccountId}/widget/gigs-board.${widgetName}`}\n      props={widgetProps}\n      key={key}\n    />\n  );\n}\n\nfunction href(widgetName, linkProps) {\n  linkProps = { ...linkProps };\n\n  if (props.nearDevGovGigsContractAccountId) {\n    linkProps.nearDevGovGigsContractAccountId =\n      props.nearDevGovGigsContractAccountId;\n  }\n\n  if (props.nearDevGovGigsWidgetsAccountId) {\n    linkProps.nearDevGovGigsWidgetsAccountId =\n      props.nearDevGovGigsWidgetsAccountId;\n  }\n\n  if (props.referral) {\n    linkProps.referral = props.referral;\n  }\n\n  const linkPropsQuery = Object.entries(linkProps)\n    .filter(([_key, nullable]) => (nullable ?? null) !== null)\n    .map(([key, value]) => `${key}=${value}`)\n    .join(\"&\");\n\n  return `/#/${nearDevGovGigsWidgetsAccountId}/widget/gigs-board.pages.${widgetName}${\n    linkPropsQuery ? \"?\" : \"\"\n  }${linkPropsQuery}`;\n}\n\nconst CompactContainer = styled.div`\n  width: fit-content !important;\n  max-width: 100%;\n`;\n\nconst FormCheckLabel = styled.label`\n  white-space: nowrap;\n`;\n/* END_INCLUDE: \"common.jsx\" */\n\nconst Card = styled.div`\n  &:hover {\n    box-shadow: rgba(3, 102, 214, 0.3) 0px 0px 0px 3px;\n  }\n`;\n\nconst LimitedMarkdown = styled.div`\n  max-height: 6em;\n`;\n\nconst ticketTypes = {\n  Issue: { displayName: \"Issue\", icon: \"bi-lightbulb\" },\n  PullRequest: { displayName: \"Pull request\", icon: \"bi-git\" },\n};\n\nconst GithubRepoTicketCard = ({\n  data: { _links, labels, number, title, type, user },\n}) => (\n  <Card className=\"card border-secondary\">\n    <div className=\"card-header\">\n      <small className=\"text-muted\">\n        <div className=\"row justify-content-between align-items-center\">\n          <div className=\"col-4\">\n            <a\n              className=\"link-dark text-truncate text-decoration-none\"\n              href={user.html_url}\n              rel=\"noreferrer\"\n              target=\"_blank\"\n            >\n              <img\n                alt={`${user.login}'s GitHub avatar`}\n                className=\"img-fluid rounded\"\n                src={user.avatar_url}\n              />\n\n              <span className=\"ms-1 text-muted\">@{user.login}</span>\n            </a>\n          </div>\n\n          <div className=\"col-1 d-flex justify-content-end\">\n            <a\n              className=\"card-link\"\n              href={_links.html.href}\n              rel=\"noreferrer\"\n              role=\"button\"\n              target=\"_blank\"\n              title=\"Open in new tab\"\n            >\n              <i className=\"bi bi-share\" />\n            </a>\n          </div>\n        </div>\n      </small>\n    </div>\n\n    <div className=\"card-body d-flex flex-column gap-3\">\n      <div className=\"card-text d-flex flex-column gap-3\">\n        <span className=\"d-flex flex-nowrap gap-2\">\n          <i className={`bi ${ticketTypes[type].icon}`} />\n          <span>{`${ticketTypes[type].displayName} #${number}`}</span>\n        </span>\n\n        <span>{title}</span>\n      </div>\n\n      <div className=\"card-title d-flex flex-wrap gap-2 m-0\">\n        {labels.map((label) => (\n          <a href={label.url} key={label.id} title={label.description}>\n            <span\n              className=\"badge\"\n              style={{ backgroundColor: `#${label.color}` }}\n            >\n              {label.name}\n            </span>\n          </a>\n        ))}\n      </div>\n    </div>\n  </Card>\n);\n\nreturn GithubRepoTicketCard(props);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/root.akaia.near/widget/gigs-board.entities.GithubRepo.TicketCard", "fact_widget_deployments_id": "a27cd8a566fae5d0f23c12a1f17b1172", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 5}