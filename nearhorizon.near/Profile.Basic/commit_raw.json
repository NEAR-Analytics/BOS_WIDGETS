{"tx_hash": "7Gcp8DN7BU1NotpxVVHEiyKMg4EeKRGxuJH764WoqSdF", "action_id_social": "FX7zoRfU2LhD6rEj9SuWi1NCjq82r36qEUA6r9N6fNoU-0-widget", "block_id": 104540547, "block_timestamp": "2023-10-30T13:42:47.499Z", "signer_id": "nearhorizon.near", "widget_name": "Profile.Basic", "source_code": "const ownerId = \"nearhorizon.near\";\n\nState.init({\n  // Profile data\n  description: \"\",\n  descriptionError: \"\",\n  website: \"\",\n  websiteError: \"\",\n  linktree: \"\",\n  linktreeError: \"\",\n  verticals: \"\",\n  verticalsError: \"\",\n  product_type: [],\n  product_typeError: \"\",\n  company_size: 0,\n  company_sizeError: \"\",\n  profileIsFetched: false,\n\n  // Project data\n  geo: \"\",\n  geoError: \"\",\n  problem: \"\",\n  problemError: \"\",\n  success_position: \"\",\n  success_positionError: \"\",\n  win: \"\",\n  winError: \"\",\n  why: \"\",\n  whyError: \"\",\n  vision: \"\",\n  visionError: \"\",\n  projectIsFetched: false,\n});\n\nif (!state.profileIsFetched) {\n  Near.asyncView(\n    \"social.near\",\n    \"get\",\n    { keys: [`${context.accountId}/profile/**`] },\n    \"final\",\n    false\n  ).then((data) => {\n    const profile = data[`${context.accountId}`]?.profile || {};\n    State.update({\n      description: profile.description,\n      website: profile.website ?? profile.linktree?.website,\n      linktree: profile.linktree,\n      verticals: profile.verticals ?? { [profile.category]: \"\" },\n      product_type: profile.product_type,\n      company_size: profile.team ?? profile.company_size,\n      profileIsFetched: true,\n    });\n  });\n}\n\nif (!state.projectIsFetched) {\n  Near.asyncView(\n    ownerId,\n    \"get_project\",\n    { account_id: context.accountId },\n    \"final\",\n    false\n  ).then((project) => {\n    State.update({\n      geo: project.geo,\n      problem: project.problem,\n      success_position: project.success_position,\n      win: project.win,\n      why: project.why,\n      vision: project.vision,\n      projectIsFetched: true,\n    });\n  });\n}\n\nlet completed = 0;\nconst total = 15;\nif (state.name) completed++;\nif (state.description) completed++;\nif (state.tagline) completed++;\nif (state.image) completed++;\nif (state.website) completed++;\nif (state.linktree) completed++;\nif (state.verticals) completed++;\nif (state.product_type) completed++;\nif (state.company_size) completed++;\nif (state.geo) completed++;\nif (state.problem) completed++;\nif (state.success_position) completed++;\nif (state.win) completed++;\nif (state.why) completed++;\nif (state.vision) completed++;\n\nif (!state.profileIsFetched || !state.projectIsFetched) {\n  return <>Loading...</>;\n}\n\nconst Container = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 1rem;\n`;\n\nconst Header = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n\n  @media screen and (max-width: 768px) {\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: flex-start;\n    gap: 1rem;\n  }\n\n  & > div {\n    display: flex;\n    align-items: center;\n    gap: 1rem;\n\n    & > h2 {\n      color: #000;\n      font-family: Inter;\n      font-size: 1.1875rem;\n      font-style: normal;\n      font-weight: 700;\n      line-height: normal;\n    }\n\n    & > small {\n      color: var(--ui-elements-gray, #7e868c);\n      font-family: Inter;\n      font-size: 0.875rem;\n      font-style: normal;\n      font-weight: 400;\n      line-height: 1.25rem; /* 142.857% */\n      letter-spacing: 0.00875rem;\n    }\n  }\n`;\n\nconst EditButton = styled.button`\n  display: flex;\n  height: 2.5rem;\n  padding: 0.5rem 1rem;\n  justify-content: center;\n  align-items: center;\n  gap: 0.5rem;\n  border-radius: 3.125rem;\n  border: 1px solid var(--ui-elements-light, #eceef0);\n  background: var(--background-light, #fafafa);\n  color: var(--text-text-link, #006adc);\n  text-align: center;\n  font-family: Inter;\n  font-size: 0.875rem;\n  font-style: normal;\n  font-weight: 600;\n  line-height: 142%; /* 1.2425rem */\n  letter-spacing: 0.00875rem;\n`;\n\nconst data = (\n  <>\n    <Widget\n      src={`${ownerId}/widget/Inputs.LabeledData`}\n      props={{\n        label: \"Description\",\n        content: (\n          <Widget\n            src={`${ownerId}/widget/DescriptionArea`}\n            props={{ description: state.description, width: \"100%\" }}\n          />\n        ),\n      }}\n    />\n    <Widget\n      src={`${ownerId}/widget/Inputs.LabeledData`}\n      props={{\n        label: \"Website\",\n        content: state.website ? (\n          <a\n            href={`https://${state.website}`}\n            target=\"_blank\"\n            referrerPolicy=\"no-referrer\"\n          >\n            {state.website}\n          </a>\n        ) : null,\n      }}\n    />\n    {/* <Widget */}\n    {/*   src={`${ownerId}/widget/Inputs.LabeledData`} */}\n    {/*   props={{ */}\n    {/*     label: \"Point of contact\", */}\n    {/*   }} */}\n    {/* /> */}\n    <Widget\n      src={`${ownerId}/widget/Inputs.LabeledData`}\n      props={{\n        label: \"Company size\",\n        content: state.company_size,\n      }}\n    />\n    <Widget\n      src={`${ownerId}/widget/Inputs.LabeledData`}\n      props={{\n        label: \"Location\",\n        content: state.geo,\n      }}\n    />\n    <Widget\n      src={`${ownerId}/widget/Inputs.LabeledData`}\n      props={{\n        label: \"Social profiles\",\n        content: (\n          <Widget\n            src={`${ownerId}/widget/SocialLinks`}\n            props={{ links: state.linktree }}\n          />\n        ),\n      }}\n    />\n    <Widget\n      src={`${ownerId}/widget/Inputs.LabeledData`}\n      props={{\n        label: \"What problem(s) are you solving?\",\n        content: state.problem ? (\n          <Widget\n            src={`${ownerId}/widget/DescriptionArea`}\n            props={{ description: state.problem, width: \"100%\" }}\n          />\n        ) : null,\n      }}\n    />\n    <Widget\n      src={`${ownerId}/widget/Inputs.LabeledData`}\n      props={{\n        label: \"What makes your team uniquely positioned for success?\",\n        content: state.success_position ? (\n          <Widget\n            src={`${ownerId}/widget/DescriptionArea`}\n            props={{ description: state.success_position, width: \"100%\" }}\n          />\n        ) : null,\n      }}\n    />\n    <Widget\n      src={`${ownerId}/widget/Inputs.LabeledData`}\n      props={{\n        label: \"Why are you building on NEAR?\",\n        content: state.why ? (\n          <Widget\n            src={`${ownerId}/widget/DescriptionArea`}\n            props={{ description: state.why, width: \"100%\" }}\n          />\n        ) : null,\n      }}\n    />\n    <Widget\n      src={`${ownerId}/widget/Inputs.LabeledData`}\n      props={{\n        label: \"Why do you think you are going to win?\",\n        content: state.win ? (\n          <Widget\n            src={`${ownerId}/widget/DescriptionArea`}\n            props={{ description: state.win, width: \"100%\" }}\n          />\n        ) : null,\n      }}\n    />\n    <Widget\n      src={`${ownerId}/widget/Inputs.LabeledData`}\n      props={{\n        label: \"What is your vision for the future?\",\n        content: state.vision ? (\n          <Widget\n            src={`${ownerId}/widget/DescriptionArea`}\n            props={{ description: state.vision, width: \"100%\" }}\n          />\n        ) : null,\n      }}\n    />\n  </>\n);\n\nconst { edit: _, ...editData } = state;\n\nconst edit = (\n  <Widget\n    src={`${ownerId}/widget/Profile.BasicForm`}\n    props={{\n      data: editData,\n      save: state.save,\n      onSave: (data) => {\n        State.update({ save: false });\n\n        const profileKeys = [\n          \"description\",\n          \"website\",\n          \"company_size\",\n          \"linktree\",\n        ];\n        const projectKeys = [\n          \"problem\",\n          \"success_position\",\n          \"why\",\n          \"win\",\n          \"vision\",\n          \"geo\",\n        ];\n\n        const profileData = {};\n\n        for (const key of profileKeys) {\n          if (Array.isArray(data[key])) {\n            if (\n              data[key].every((v) => state[key].includes(v)) &&\n              state[key].every((v) => data[key].includes(v)) &&\n              data[key].length === state[key].length\n            ) {\n              continue;\n            }\n          }\n\n          if (typeof data[key] === \"object\") {\n            if (\n              Object.keys(data[key]).every(\n                (k) => data[key][k] === state[key][k]\n              ) &&\n              Object.keys(state[key]).every(\n                (k) => data[key][k] === state[key][k]\n              )\n            ) {\n              continue;\n            }\n          }\n\n          if (data[key] !== state[key]) {\n            profileData[key] = data[key];\n          }\n        }\n\n        const projectData = {};\n\n        for (const key of projectKeys) {\n          if (Array.isArray(data[key])) {\n            if (\n              data[key].every((v) => state[key].includes(v)) &&\n              state[key].every((v) => data[key].includes(v)) &&\n              data[key].length === state[key].length &&\n              data[key].length > 0\n            ) {\n              continue;\n            }\n          }\n\n          if (typeof data[key] === \"object\") {\n            if (\n              Object.keys(data[key]).every(\n                (k) => data[key][k] === state[key][k]\n              ) &&\n              Object.keys(state[key]).every(\n                (k) => data[key][k] === state[key][k]\n              )\n            ) {\n              continue;\n            }\n          }\n\n          if (data[key] !== state[key]) {\n            projectData[key] = data[key];\n          }\n        }\n\n        if (\n          Object.keys(profileData).length > 0 &&\n          Object.keys(projectData).length === 0\n        ) {\n          Social.set(\n            { profile: profileData },\n            {\n              onCommit: () => {\n                State.update({ ...profileData, edit: false });\n              },\n            }\n          );\n          return;\n        }\n\n        if (\n          Object.keys(profileData).length === 0 &&\n          Object.keys(projectData).length > 0\n        ) {\n          Near.call(ownerId, \"edit_project\", {\n            project: projectData,\n            account_id: context.accountId,\n          });\n          return;\n        }\n\n        if (\n          Object.keys(profileData).length > 0 &&\n          Object.keys(projectData).length > 0\n        ) {\n          Near.call([\n            {\n              contractName: ownerId,\n              methodName: \"edit_project\",\n              args: { project: projectData, account_id: context.accountId },\n            },\n            {\n              contractName: \"social.near\",\n              methodName: \"set\",\n              args: {\n                data: {\n                  [context.accountId]: { profile: profileData },\n                },\n              },\n            },\n          ]);\n          return;\n        }\n      },\n    }}\n  />\n);\n\nconst EditButtons = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 1rem;\n  width: 100%;\n`;\n\nconst CancelButton = styled.button`\n  display: flex;\n  height: 2.5rem;\n  padding: 0.5rem 1rem;\n  justify-content: center;\n  align-items: center;\n  gap: 0.5rem;\n  border-radius: 3.125rem;\n  border: 1px solid var(--ui-elements-light, #eceef0);\n  background: var(--background-light, #fafafa);\n  color: var(--text-text-primary, #101828);\n  text-align: center;\n  font-family: Inter;\n  font-size: 0.875rem;\n  font-style: normal;\n  font-weight: 600;\n  line-height: 142%; /* 1.2425rem */\n  letter-spacing: 0.00875rem;\n`;\n\nconst SaveButton = styled.button`\n  display: flex;\n  height: 2.5rem;\n  padding: 0.5rem 1rem;\n  justify-content: center;\n  align-items: center;\n  gap: 0.5rem;\n  border-radius: 3.125rem;\n  background: var(--primary-primary-default, #00ec97);\n  border: 1px solid var(--primary-primary-default, #00ec97);\n  color: var(--text-text-dark, #11181c);\n  text-align: center;\n  font-family: \"Mona Sans\";\n  font-size: 0.875rem;\n  font-style: normal;\n  font-weight: 600;\n  line-height: 142%; /* 1.2425rem */\n  letter-spacing: 0.00875rem;\n`;\n\nconst editButtons = (\n  <>\n    <CancelButton onClick={() => State.update({ edit: false })}>\n      Cancel\n    </CancelButton>\n    <SaveButton onClick={() => State.update({ save: true })}>\n      <svg\n        width=\"18\"\n        height=\"18\"\n        viewBox=\"0 0 18 18\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          d=\"M15 4.5L6.75 12.75L3 9\"\n          stroke=\"currentColor\"\n          stroke-width=\"1.66667\"\n          stroke-linecap=\"round\"\n          stroke-linejoin=\"round\"\n        />\n      </svg>\n      Update section\n    </SaveButton>\n  </>\n);\n\nreturn (\n  <Container>\n    <Header>\n      <div>\n        <h2>Project overview</h2>\n        <small>\n          Completed:{\" \"}\n          {(completed / total).toLocaleString(\"en-GB\", { style: \"percent\" })}\n        </small>\n      </div>\n      {state.edit ? (\n        <div>{editButtons}</div>\n      ) : (\n        <EditButton onClick={() => State.update({ edit: !state.edit })}>\n          <svg\n            width=\"18\"\n            height=\"18\"\n            viewBox=\"0 0 18 18\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              d=\"M8.99998 15.0002H15.75M2.25 15.0002H3.50591C3.87279 15.0002 4.05624 15.0002 4.22887 14.9587C4.38192 14.922 4.52824 14.8614 4.66245 14.7791C4.81382 14.6864 4.94354 14.5567 5.20296 14.2972L14.625 4.87517C15.2463 4.25385 15.2463 3.24649 14.625 2.62517C14.0037 2.00385 12.9963 2.00385 12.375 2.62517L2.95295 12.0472C2.69352 12.3067 2.5638 12.4364 2.47104 12.5877C2.3888 12.722 2.32819 12.8683 2.29145 13.0213C2.25 13.194 2.25 13.3774 2.25 13.7443V15.0002Z\"\n              stroke=\"currentColor\"\n              stroke-width=\"1.66667\"\n              stroke-linecap=\"round\"\n              stroke-linejoin=\"round\"\n            />\n          </svg>\n          Edit section\n        </EditButton>\n      )}\n    </Header>\n    {state.edit ? (\n      <>\n        {edit}\n        <EditButtons>{editButtons}</EditButtons>\n      </>\n    ) : (\n      data\n    )}\n  </Container>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/nearhorizon.near/widget/Profile.Basic", "fact_widget_deployments_id": "362c1fcb98579240283cbb753ffd9401", "inserted_timestamp": "2023-10-30T15:37:40.518Z", "modified_timestamp": "2023-10-30T15:37:40.518Z", "__row_index": 0}