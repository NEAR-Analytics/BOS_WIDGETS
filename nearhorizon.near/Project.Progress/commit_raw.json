{"tx_hash": "BxEEP6EftS7rtZyPKm6yh2zX3kPVunQssEGTv63qx6cN", "action_id_social": "DjGT7Nk3BDDhUFSdSAZwyftGe4wC2XSpYiWtrwgZvHjx-0-widget", "block_id": 94301334, "block_timestamp": "2023-06-16T09:34:23.603Z", "signer_id": "nearhorizon.near", "widget_name": "Project.Progress", "source_code": "const ownerId = \"nearhorizon.near\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: flex-start;\n  padding: 0.5em 1em;\n  gap: 0.5em;\n  background: #d9f4ff;\n  border-radius: 8px;\n  width: 100%;\n`;\n\nconst Row = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: flex-start;\n  padding: 0px;\n  gap: 0.5em;\n  width: 100%;\n`;\n\nconst Label = styled.span`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: flex-start;\n  padding: 0px;\n  gap: 0.5em;\n  font-style: normal;\n  font-weight: 600;\n  font-size: 0.75em;\n  line-height: 1em;\n  color: #11181c;\n  width: 35%;\n`;\n\nconst Value = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  align-items: center;\n  padding: 0px;\n  gap: 0.5em;\n  font-style: normal;\n  font-weight: 700;\n  font-size: 0.75em;\n  line-height: 1.4em;\n  color: #11181c;\n  width: 65%;\n`;\n\nState.init({\n  project: null,\n  projectIsFetched: false,\n  profile: null,\n  profileIsFetched: false,\n  completion: 0,\n  credits: 0,\n});\n\nif (!state.projectIsFetched) {\n  Near.asyncView(\n    ownerId,\n    \"get_project\",\n    { account_id: props.accountId },\n    \"final\",\n    false\n  ).then((project) => State.update({ project, projectIsFetched: true }));\n}\n\nif (!state.profileIsFetched) {\n  Near.asyncView(\n    \"social.near\",\n    \"get\",\n    { keys: [`${props.accountId}/profile/**`] },\n    \"final\",\n    false\n  ).then((profile) =>\n    State.update({\n      profile: profile[props.accountId].profile,\n      profileIsFetched: true,\n    })\n  );\n}\n\nif (!state.projectIsFetched || !state.profileIsFetched) {\n  return <>Loading...</>;\n}\n\nif (state.project.credits) {\n  asyncFetch(\n    `https://api-op3o.onrender.com/data/credits/projects/${props.accountId}/balance`\n  ).then(({ body: credits }) => State.update({ credits }));\n}\n\nasyncFetch(\"https://api-op3o.onrender.com/data/projects/completion\").then(\n  ({ body: { list } }) =>\n    State.update({\n      completion: list\n        .find(({ id }) => id === props.accountId)\n        .completion.toLocaleString(\"en-US\", { style: \"percent\" }),\n    })\n);\n\nreturn (\n  <Container>\n    <Row>\n      <Label>Credits:</Label>\n      <Value>\n        {state.project.credits ? (\n          <>\n            {Number(state.credits).toLocaleString(\"en-US\", {\n              notation: \"compact\",\n            })}{\" \"}\n            NHZN\n          </>\n        ) : (\n          <>Not available</>\n        )}{\" \"}\n        <Widget\n          src={`${ownerId}/widget/Tooltip`}\n          props={{\n            content:\n              \"Horizon Credits (NHZN) help track service usage and inform payments distributed to Horizon service partners.\",\n          }}\n        />\n      </Value>\n    </Row>\n    <Row>\n      <Label>Profile:</Label>\n      <Value>\n        {state.completion}\n        <Widget\n          src={`${ownerId}/widget/Tooltip`}\n          props={{\n            content:\n              \"Completion status of your profile. Once fully complete, your project will be more discoverable by others in the community\",\n          }}\n        />\n      </Value>\n    </Row>\n  </Container>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/nearhorizon.near/widget/Project.Progress", "fact_widget_deployments_id": "0ef6a205de0abd56dadd71445b2c8394", "inserted_timestamp": "2000-01-01T00:00:00.000Z", "modified_timestamp": "2000-01-01T00:00:00.000Z", "__row_index": 0}