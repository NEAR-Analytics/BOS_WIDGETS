{"tx_hash": "DHaC3bB38sUEDGAE6zmigA3pSqUSvur37bez1G45NZQW", "action_id_social": "2vMKi9Ughs3CkpcRGr2TU5v8NWNZ4y3jYiZKZCxyEoJm-0-widget", "block_id": 93275958, "block_timestamp": "2023-06-02T09:59:01.726Z", "signer_id": "nearhorizon.near", "widget_name": "Request.List", "source_code": "const ownerId = \"nearhorizon.near\";\nconst search = props.search ?? \"\";\n\nState.init({\n  items: [],\n  itemsIsFetched: false,\n});\n\nasyncFetch(\n  `https://api-op3o.onrender.com/data/requests?sort=timedesc&q=${search}`\n).then(({ body: items }) => State.update({ items, itemsIsFetched: true }));\n\nif (!state.itemsIsFetched) {\n  return <>Loading...</>;\n}\n\nreturn (\n  <Widget\n    src={`${ownerId}/widget/List`}\n    props={{\n      filter: ([accountId, cid]) =>\n        state.items.some(([id, c]) => id === accountId && c === cid),\n      items: state.items,\n      createItem: ([accountId, cid]) => (\n        <Widget\n          src={`${ownerId}/widget/Request.Card`}\n          props={{ accountId, cid }}\n        />\n      ),\n    }}\n  />\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/nearhorizon.near/widget/Request.List", "fact_widget_deployments_id": "ac93f58c28cb1e57000123204a1f8821", "inserted_timestamp": "2000-01-01T00:00:00.000Z", "modified_timestamp": "2000-01-01T00:00:00.000Z", "__row_index": 6}