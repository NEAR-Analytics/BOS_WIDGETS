{"tx_hash": "7q6XQpyC9pBpmbaS76yF8pXHYwx8fyLNNu3yKTiGrGtL", "action_id_social": "Cs5MY872pGM5QinGmXpBiP15ZGqVKiUp4jHt8DzFJ1po-0-widget", "block_id": 91064168, "block_timestamp": "2023-05-04T07:56:29.326Z", "signer_id": "nearhorizon.near", "widget_name": "Project.List", "source_code": "const ownerId = \"nearhorizon.near\";\nconst search = props.search ?? \"\";\n\nState.init({\n  items: [],\n  itemsIsFetched: false,\n});\n\nif (!state.itemsIsFetched) {\n  Near.asyncView(ownerId, \"get_projects\", {}, \"final\", false).then((items) =>\n    State.update({ items, itemsIsFetched: true })\n  );\n\n  return <>Loading...</>;\n}\n\nconsole.log({\n  search,\n  items: state.items,\n  itemsFiltered: state.items.filter((accountId) => accountId.includes(search)),\n});\n\nreturn (\n  <Widget\n    src={`${ownerId}/widget/List`}\n    props={{\n      filter: (accountId) => accountId.includes(search),\n      items: state.items,\n      createItem: (accountId) => (\n        <Widget src={`${ownerId}/widget/Project.Card`} props={{ accountId }} />\n      ),\n    }}\n  />\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/nearhorizon.near/widget/Project.List", "fact_widget_deployments_id": "c551540fc70dd0cee1904faa7eaa883c", "inserted_timestamp": "2000-01-01T00:00:00.000Z", "modified_timestamp": "2000-01-01T00:00:00.000Z", "__row_index": 9}