{"tx_hash": "FhQ6Fqa9uVLjGtmy3ckQ4d6k8wiC8kCvVW8MN8MVLcqN", "action_id_social": "Em4NZqvPW3f76SPCkHbkkZZBSBYrpE8FfFQyAQZvSrjK-0-widget", "block_id": 101408611, "block_timestamp": "2023-09-18T15:03:46.184Z", "signer_id": "nearhorizon.near", "widget_name": "Vendor.About", "source_code": "// const onSave = props.onSave ?? (() => {});\nconst ownerId = \"nearhorizon.near\";\nconst accountId = props.accountId;\nconst isAdmin = props.isAdmin;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: flex-start;\n  gap: 1em;\n  padding: 0.5em 0.2em;\n  width: 100%;\n`;\n\nconst Heading = styled.div`\n  padding-bottom: 0.5em;\n  font-style: normal;\n  font-weight: 700;\n  font-size: 1.125em;\n  line-height: 1.5em;\n  color: #000;\n  width: 100%;\n`;\n\nState.init({\n  description: \"\",\n  services: \"\",\n  descriptionIsFetched: false,\n});\n\nif (!state.descriptionIsFetched) {\n  Near.asyncView(\n    \"social.near\",\n    \"get\",\n    { keys: [`${accountId}/profile/**`] },\n    \"final\",\n    false,\n  ).then((data) =>\n    State.update({\n      profile: data[accountId].profile,\n      description: data[accountId].profile.description,\n      services: data[accountId].profile.services,\n      descriptionIsFetched: true,\n    }),\n  );\n  return <>Loading...</>;\n}\n\nconst onSave = (data) => {\n  Social.set(data, {\n    onCommit: () =>\n      State.update({ profile: { ...state.profile, ...data.profile } }),\n  });\n};\n\nconst DetailsGrid = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: flex-start;\n  justify-content: flex-start;\n  flex-wrap: wrap;\n  gap: 2rem;\n  width: 100%;\n\n  @media screen and (max-width: 600px) {\n    & > div {\n      width: 100%;\n    }\n  }\n\n  @media screen and (min-width: 600px) and (max-width: 768px) {\n    & > div {\n      width: calc((100% - 2rem) * 0.5);\n    }\n  }\n\n  @media screen and (min-width: 768px) and (max-width: 1024px) {\n    & > div {\n      width: calc((100% - 4rem) * 0.3333);\n    }\n  }\n\n  @media screen and (min-width: 1024px) {\n    & > div {\n      width: calc((100% - 8rem) * 0.25);\n    }\n  }\n`;\n\nreturn (\n  <Container>\n    <Heading>Details</Heading>\n    <DetailsGrid>\n      <Widget\n        src={`${ownerId}/widget/Inputs.Viewable.Text`}\n        props={{\n          label: \"Website\",\n          id: \"website\",\n          value: state.profile.linktree.website,\n          link: `https://${state.profile.linktree.website}`,\n          onSave: (website) => onSave({ linktree: { website } }),\n          canEdit: isAdmin,\n        }}\n      />\n      <Widget\n        src={`${ownerId}/widget/Inputs.Viewable.Links`}\n        props={{\n          label: \"Links\",\n          id: \"links\",\n          value: state.profile.linktree,\n          onSave: (linktree) => onSave({ linktree }),\n          canEdit: isAdmin,\n        }}\n      />\n      <Widget\n        src={`${ownerId}/widget/Inputs.Viewable.Select`}\n        props={{\n          label: \"Vendor type\",\n          id: \"type\",\n          value: state.profile.vendor_type,\n          options: [\n            { text: \"Individual contributor\", value: \"individual\" },\n            { text: \"Organization\", value: \"organization\" },\n          ],\n          onSave: ({ value: vendor_type }) => onSave({ vendor_type }),\n          canEdit: isAdmin,\n        }}\n      />\n      {/*<Widget\n      src={`${ownerId}/widget/Inputs.Viewable.Tags`}\n      props={{\n        label: \"Skills\",\n        id: \"skills\",\n        value: Object.keys(state.profile.skills || {}).map((name) => ({\n          name,\n        })),\n        options: [\n          { name: \"defi\" },\n          { name: \"exchange\" },\n          { name: \"staking\" },\n          { name: \"farming\" },\n        ],\n        onSave: (skills) =>\n          onSave({\n            skills: tags.reduce(\n              (acc, { name }) => Object.assign(acc, { [name]: \"\" }),\n              {}\n            ),\n          }),\n        canEdit: isAdmin,\n      }}\n    />*/}\n      <Widget\n        src={`${ownerId}/widget/Inputs.Viewable.MultiSelect`}\n        props={{\n          label: \"Payment\",\n          id: \"payment\",\n          value: Object.keys(state.profile.payments || {}).map((id) => ({\n            id,\n            name: id[0].toUpperCase() + id.slice(1),\n          })),\n          options: [\n            { name: \"Fiat\", id: \"fiat\" },\n            { name: \"Crypto\", id: \"crypto\" },\n            { name: \"Credits\", id: \"credits\" },\n          ],\n          onSave: (payments) =>\n            onSave({\n              payments: payments.reduce(\n                (acc, { id }) => Object.assign(acc, { [id]: \"\" }),\n                {},\n              ),\n            }),\n          canEdit: isAdmin,\n        }}\n      />\n      <Widget\n        src={`${ownerId}/widget/Inputs.Viewable.Number`}\n        props={{\n          label: \"Rate\",\n          id: \"rate\",\n          value: state.profile.rate,\n          onSave: (rate) => onSave({ rate }),\n          canEdit: isAdmin,\n        }}\n      />\n      <Widget\n        src={`${ownerId}/widget/Inputs.Viewable.MultiSelect`}\n        props={{\n          label: \"Available for\",\n          id: \"work\",\n          value: Object.keys(state.profile.work || {}).map((id) => ({\n            id,\n            name:\n              id === \"short\"\n                ? \"Short-term work\"\n                : id === \"long\"\n                ? \"Long-term work\"\n                : \"Full-time job\",\n          })),\n          options: [\n            { name: \"Short-term work\", id: \"short\" },\n            { name: \"Long-term work\", id: \"long\" },\n            { name: \"Full-time job\", id: \"full\" },\n          ],\n          onSave: (work) =>\n            onSave({\n              work: work.reduce(\n                (acc, { id }) => Object.assign(acc, { [id]: \"\" }),\n                {},\n              ),\n            }),\n          canEdit: isAdmin,\n        }}\n      />\n      <Widget\n        src={`${ownerId}/widget/Inputs.Viewable.Text`}\n        props={{\n          label: \"Location\",\n          id: \"location\",\n          value: state.profile.location,\n          onSave: (location) => onSave({ location }),\n          canEdit: isAdmin,\n        }}\n      />\n    </DetailsGrid>\n\n    <Heading>About vendor</Heading>\n    <Widget\n      src={`${ownerId}/widget/Inputs.Viewable.TextArea`}\n      props={{\n        label: \"Description\",\n        id: \"description\",\n        value: state.description,\n        onSave: (description) => onSave({ profile: { description } }),\n        canEdit: props.isAdmin,\n      }}\n    />\n    <Widget\n      src={`${ownerId}/widget/Inputs.Viewable.TextArea`}\n      props={{\n        label: \"Skills and services\",\n        id: \"services\",\n        value: state.services,\n        onSave: (services) => onSave({ profile: { services } }),\n        canEdit: props.isAdmin,\n      }}\n    />\n  </Container>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/nearhorizon.near/widget/Vendor.About", "fact_widget_deployments_id": "7177c94e2d615e9e3c7fb3a3087a28a7", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}