{"tx_hash": "88QPnWJNsvhmHEg6cKPCDJcRvYdfmgBaiz5QdThUNGeK", "action_id_social": "GFtLP7Hqab4Wf6HEWPFsdM8pkv1YdRKvMZ9rTAvMMLTn-0-widget", "block_id": 99112571, "block_timestamp": "2023-08-18T20:01:07.895Z", "signer_id": "nearhorizon.near", "widget_name": "Vendor.Contracts", "source_code": "const ownerId = \"nearhorizon.near\";\nconst search = props.search ?? \"\";\n\nState.init({\n  map: {},\n  mapIsFetched: false,\n  items: [],\n  itemsIsFetched: false,\n});\n\nif (!state.itemsIsFetched) {\n  const mapEntries = Object.entries(state.map);\n\n  if (state.mapIsFetched && mapEntries.every(([_, { fetched }]) => fetched)) {\n    const items = mapEntries.reduce((acc, [projectId, { history }]) => {\n      acc.push(...history.map((cid) => [[projectId, cid], props.accountId]));\n\n      return acc;\n    }, []);\n\n    State.update({ items, itemsIsFetched: true });\n  } else if (!state.mapIsFetched) {\n    Near.asyncView(\n      ownerId,\n      \"get_vendor_contributions\",\n      { account_id: props.accountId },\n      \"final\",\n      false\n    ).then((items) => {\n      const map = {};\n      for (const [project_id, _] of items) {\n        map[project_id] = { fetched: false, history: [] };\n      }\n      State.update({ map });\n      items.forEach(([project_id, vendor_id]) => {\n        Near.asyncView(\n          ownerId,\n          \"get_contribution_history\",\n          { project_id, vendor_id },\n          \"final\",\n          false\n        ).then((history) => {\n          state.map[project_id].history = history;\n          state.map[project_id].fetched = true;\n          State.update({ map: state.map });\n        });\n      });\n      State.update({ map, mapIsFetched: true });\n    });\n\n    return <>Loading...</>;\n  } else {\n    return <>Loading...</>;\n  }\n}\n\nconst Container = styled.div`\n  width: 100%;\n\n  .cont {\n    width: 100% !important;\n  }\n`;\n\nreturn (\n  <Container>\n    {state.items.length === 0 ? (\n      <>No contracts</>\n    ) : (\n      <Widget\n        src={`${ownerId}/widget/List`}\n        props={{\n          full: true,\n          filter: ([[projectId]]) => projectId.includes(search),\n          search,\n          items: state.items,\n          createItem: ([[projectId, cid], vendorId]) => (\n            <Widget\n              src={`${ownerId}/widget/Contribution.Card`}\n              props={{ projectId, cid, vendorId, isVendorView: true }}\n            />\n          ),\n        }}\n      />\n    )}\n  </Container>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/nearhorizon.near/widget/Vendor.Contracts", "fact_widget_deployments_id": "ad8dd26f2d731ecc807942a862dcdb58", "inserted_timestamp": "2023-08-18T21:45:00.756Z", "modified_timestamp": "2023-08-18T21:45:00.756Z", "__row_index": 0}