{"tx_hash": "7ZW9Ktbe6o9QC6cdZAyvmzjskVD51C4BKHpwmmicTccb", "action_id_social": "21FqByLsisBJ5zDcNND47iS1FecqAa4YnWDLHwokUTAJ-0-widget", "block_id": 100692914, "block_timestamp": "2023-09-08T22:36:57.357Z", "signer_id": "ostolex.near", "widget_name": "LaserChess3DOnline", "source_code": "// */laserchess3d/let45fc.testnet-laserchess3d-room-74e209f6-1662-4009-9286-61319b45f4cd/**\n\n// {\n//     \"sn\": \"l++3d++kd++b+++2/2b7/3B+6/b++1B1ss+1b+++1B+/b+++1B+1S+S1b++1B/6b+++3/7B++2/2B+DKD3L\",\n//     \"lastMove\": {\n//         \"type\": \"special\",\n//         \"srcLocation\": {\n//             \"colIndex\": \"2\",\n//             \"rowIndex\": \"3\",\n//         },\n//         \"destLocation\": {\n//             \"colIndex\": \"2\",\n//             \"rowIndex\": \"3\",\n//         }\n//     },\n//     \"numberOfMoves\": \"0\",\n//     \"userColor\": \"blue\",\n//     \"opponentColor\": \"red\",\n// }\n\nconst widgetKey = \"laserchess3d\";\n\nconst boardSetups = {\n  ace: \"l++3d++kd++b+++2/2b7/3B+6/b++1B1ss+1b+++1B+/b+++1B+1S+S1b++1B/6b+++3/7B++2/2B+DKD3L\",\n  curiosity:\n    \"l++3d++kd++s+++2/19/3B+2b++3/b++B2B+++s+2b+++B+/b+++B+2S+b+2b++B/3B2b+++3/19/2S+DKD3L\",\n  grail:\n    \"l++3bd++b+++3/5k4/b++3bd++s+3/b+++1s1B+1B+++3/3b+1b+++1S1B+/3S+DB++3B/4K5/3B+DB++3L\",\n  mercury:\n    \"l+3bkb+++2S+/5d++b+++3/b+++2s+1d++4/b++3B+3B1/1b++3b+++3B/4D1S+2B+/3B+D5/s+2B+KB++3L+++\",\n  sophie:\n    \"l++3kB+b+++3/3d++1d+3B/b++3bb+++1S+1B+/7s2/2S7/b+++1s+1B+B++3B/b++3D+++1D3/3B+b+++K3L\",\n  random: \"null\",\n};\n\nconst gameTypes = {\n  ai: \"ai\",\n  online: \"online\",\n};\n\nState.init({\n  roomId: props.roomId,\n  sn: props.sn,\n  lastMoveData: null,\n  firstLoad: true,\n});\n\nconst getLastMove = (myLastMove, opponentLastMove) => {\n  if (\n    myLastMove.numberOfMoves === undefined &&\n    opponentLastMove.numberOfMoves === undefined\n  )\n    return userColor === \"blue\" ? myLastMove : opponentLastMove;\n  if (\n    myLastMove.numberOfMoves !== undefined &&\n    opponentLastMove.numberOfMoves !== undefined\n  )\n    if (\n      parseInt(myLastMove.numberOfMoves) >\n        parseInt(opponentLastMove.numberOfMoves) ||\n      (myLastMove.userColor === \"red\" &&\n        myLastMove.numberOfMoves === opponentLastMove.numberOfMoves)\n    ) {\n      return myLastMove;\n    } else {\n      return opponentLastMove;\n    }\n  if (\n    myLastMove.numberOfMoves !== undefined &&\n    opponentLastMove.numberOfMoves === undefined\n  ) {\n    return myLastMove;\n  }\n  if (\n    opponentLastMove.numberOfMoves !== undefined &&\n    myLastMove.numberOfMoves === undefined\n  ) {\n    return opponentLastMove;\n  }\n};\n\nconst ownerAccountId = state.roomId.split(\"---\")[0];\n\nconst userColor = ownerAccountId == context.accountId ? \"blue\" : \"red\";\nconst opponentColor = userColor == \"blue\" ? \"red\" : \"blue\";\n\nlet roomsData = Social.get(`*/${widgetKey}/${state.roomId}/**`, \"final\", {\n  subscribe: true,\n});\n\nif (roomsData == null) {\n  return <h1>Loading game data...</h1>;\n}\n\nconst players = Object.keys(roomsData);\nif (players.length != 2)\n  return (\n    <h1>Something went wrong. We wonder how you even could get on this page</h1>\n  );\nconst opponentAccountId = players.filter((el) => el !== context.accountId)[0];\n\nconst myMoveData = roomsData[context.accountId][widgetKey][state.roomId];\nconst opponentMoveData = roomsData[opponentAccountId][widgetKey][state.roomId];\nlet lastMoveData = getLastMove(myMoveData, opponentMoveData);\n\nif (lastMoveData) State.update({ lastMoveData: lastMoveData });\n\nconst sn = lastMoveData.sn || state.sn;\n\nconst iframeHtml = `\n<!doctype html>\n<html lang=\"en\">\n   <head>\n      <meta charset=\"UTF-8\">\n      <title>Laser chess</title>\n      <link rel=\"stylesheet\" href=\"https://near-social-laser-chess.github.io/laser-chess-3d/css/style.css\">\n      <script defer=\"defer\" src=\"https://near-social-laser-chess.github.io/laser-chess-3d/bundle.js\"></script>\n      <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\n      <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js\"></script>\n   </head>\n   <body>\n      <div class=\"rotate-buttons\">\n         <div class=\"rotate-header\">Rotate</div>\n         <div class=\"buttons\">\n            <button class=\"rotate-button\" type=\"button\" aria-label=\"rotate piece left\" disabled=\"disabled\">\n               <svg viewBox=\"0 0 24 24\" aria-hidden=\"true\">\n                  <path d=\"M7.11 8.53L5.7 7.11C4.8 8.27 4.24 9.61 4.07 11h2.02c.14-.87.49-1.72 1.02-2.47zM6.09 13H4.07c.17 1.39.72 2.73 1.62 3.89l1.41-1.42c-.52-.75-.87-1.59-1.01-2.47zm1.01 5.32c1.16.9 2.51 1.44 3.9 1.61V17.9c-.87-.15-1.71-.49-2.46-1.03L7.1 18.32zM13 4.07V1L8.45 5.55 13 10V6.09c2.84.48 5 2.94 5 5.91s-2.16 5.43-5 5.91v2.02c3.95-.49 7-3.85 7-7.93s-3.05-7.44-7-7.93z\"></path>\n               </svg>\n            </button>\n            <button class=\"rotate-button\" type=\"button\" aria-label=\"rotate piece right\" disabled=\"disabled\">\n               <svg viewBox=\"0 0 24 24\" aria-hidden=\"true\">\n                  <path d=\"M15.55 5.55L11 1v3.07C7.06 4.56 4 7.92 4 12s3.05 7.44 7 7.93v-2.02c-2.84-.48-5-2.94-5-5.91s2.16-5.43 5-5.91V10l4.55-4.45zM19.93 11c-.17-1.39-.72-2.73-1.62-3.89l-1.42 1.42c.54.75.88 1.6 1.02 2.47h2.02zM13 17.9v2.02c1.39-.17 2.74-.71 3.9-1.61l-1.44-1.44c-.75.54-1.59.89-2.46 1.03zm3.89-2.42l1.42 1.41c.9-1.16 1.45-2.5 1.62-3.89h-2.02c-.14.87-.48 1.72-1.02 2.48z\"></path>\n               </svg>\n            </button>\n         </div>\n      </div>\n      <div class=\"winner-message\" aria-label=\"winner message\">\n        <div class=\"winner-message__content\">\n          <div id=\"winner-message__header\"></div>\n          <div id=\"winner-message__info\"></div>\n          <div class=\"container\">\n            <div class=\"row winner-message-buttons\" style=\"width: 100%;\">\n              <div class=\"col-md-6\">\n                <a class=\"btn btn-primary\" href=\"https://wallet.near.org/send-money/ostolex.near\" style=\"color: #fff;\" target=\"_blank\">Support developers</a>\n              </div>\n              <div class=\"col-md-6\">\n                <a href=\"https://unchain.fund/#donate\" class=\"btn btn-warning target=\"_blank\">Support Ukraine</a>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <script>\n\n      const callback = (moveData) => {\n          window.top.postMessage(moveData, \"*\");\n      };\n      window.addEventListener('message', async (e) => {\n            const data = JSON.parse(event.data);\n            if (!data) return;\n            if (data.initType === \"init\") {\n              await EntryPoint.initGame({\n                type: \"online\",\n                userColor: data.additional.userColor,\n                opponentColor: data.additional.opponentColor,\n                numberOfMoves: parseInt(data.numberOfMoves),\n                currentPlayer: \\`\\${\n                  data.currentPlayer ||  data.additional.opponentColor\n                }\\`,\n                sn: data.sn,\n              }, callback);\n              window.top.postMessage(\"initialized\", \"*\");\n            }\n        });\n        window.addEventListener('message', async (event) => {\n            const moveData = JSON.parse(event.data);\n            if (!moveData) {\n                return;\n            }\n            if (moveData.initType === \"move\") await EntryPoint.makeMove(moveData);\n        });  \n      \n      </script>\n   </body>\n</html>\n`;\n\nconst onGameMessage = (moveData) => {\n  if (moveData === \"initialized\") {\n    State.update({ firstLoad: false });\n    return;\n  }\n  Social.set({\n    [widgetKey]: {\n      [state.roomId]: { ...moveData },\n    },\n  });\n};\n\nlet whosTurn = \"\";\nif (!lastMoveData.opponentColor) {\n  whosTurn = \"blue\";\n} else {\n  whosTurn = lastMoveData.opponentColor;\n}\n\nconst isGameOver = state.sn.toLowerCase().split(\"k\").length - 1 != 2;\n\nif (!lastMoveData) {\n  return <h1>Loading...</h1>;\n}\n\nreturn (\n  <>\n    <h2>You are playing against {opponentAccountId}</h2>\n    <h2>\n      {!isGameOver\n        ? whosTurn == userColor\n          ? \"Your turn\"\n          : \"Opponent's turn\"\n        : \"Game over\"}\n    </h2>\n    <button class=\"btn btn-danger\" onClick={props.exitCallback}>\n      Exit\n    </button>\n    <iframe\n      srcDoc={iframeHtml}\n      message={\n        !lastMoveData.numberOfMoves\n          ? JSON.stringify({\n              initType: \"init\",\n              additional: {\n                userColor: userColor,\n                opponentColor: opponentColor,\n              },\n              numberOfMoves: 0,\n              currentPlayer: \"blue\",\n              sn: state.sn,\n            })\n          : state.firstLoad\n          ? JSON.stringify({\n              initType: \"init\",\n              ...lastMoveData,\n              additional: {\n                userColor: userColor,\n                opponentColor: opponentColor,\n              },\n            })\n          : lastMoveData.userColor === userColor\n          ? JSON.stringify(null)\n          : JSON.stringify({\n              initType: \"move\",\n              ...lastMoveData,\n              additional: {\n                userColor: lastMoveData.userColor,\n                opponentColor: lastMoveData.opponentColor,\n              },\n            })\n      }\n      onMessage={onGameMessage}\n      class=\"w-100 h-100\"\n      style={{ width: \"100%\", height: \"700px\" }}\n    />\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/ostolex.near/widget/LaserChess3DOnline", "fact_widget_deployments_id": "1f5da85569815b12c9af90f257fa4435", "inserted_timestamp": "2023-09-09T00:35:47.951Z", "modified_timestamp": "2023-09-09T00:35:47.951Z", "__row_index": 3}