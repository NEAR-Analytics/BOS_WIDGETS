{"tx_hash": "HKQ7NYHQUt1FbjCZ9xp8v4dw4Ti9X3DPDN6bYsGLKGUM", "action_id_social": "AMMwMGnAT6GhBANwbwLPQmS94uNPpHHAWaXpDwmefDyq-0-widget", "block_id": 118918488, "block_timestamp": "2024-05-14T18:52:09.612Z", "signer_id": "bf1028297b255e9aad25314732c86c67d4e5ee2519462d61bc325f6630a834c8", "widget_name": "CoinPrice", "source_code": "const DATAPrice = (props) => {\r\n  const keys = props.keys ?? [\r\n    \"wrap.near\",\r\n    \"aurora\",\r\n    \"2260fac5e5542a773aa44fbcfedf7c193bc2c599.factory.bridge.near\",\r\n    \"aaaaaa20d9e0e2461697782ef11675f668207961.factory.bridge.near\",\r\n    \"linear-protocol.near\",\r\n    \"4691937a7508860f876c9c0a2a617e7d9e945d4b.factory.bridge.near\",\r\n  ];\r\n\r\n  const tokenColors = [\r\n    \"green\",\r\n    \"#3b0380\",\r\n    \"orange\",\r\n    \"red\",\r\n    \"green\",\r\n    \"black\",\r\n    \"blue\",\r\n  ];\r\n\r\n  const checkPriceLink = \"https://www.coingecko.com/en/coins/\";\r\n\r\n  const linkToken = [\r\n    \"near\",\r\n    \"ethereum\",\r\n    \"bitcoin\",\r\n    \"aurora-near\",\r\n    \"inear-protocol\",\r\n    \"woo-network\",\r\n  ];\r\n\r\n  const tokenImg = [\r\n    \"https://ipfs.near.social/ipfs/bafkreigy3uyyaianaeohczuys2bvwvfm6c6wtahbn5mwl6do5bk4w2fnni\",\r\n    \"https://ipfs.near.social/ipfs/bafkreibddakqw35thdstr7vb2zohixpjth4ff26xciu2otxftjbifhnfpa\",\r\n    \"https://ipfs.near.social/ipfs/bafkreihyafuo35nm3mifpmzsc546vco5bkj243mti3wmgwuzx663rkv7dy\",\r\n    \"https://ipfs.near.social/ipfs/bafkreihc7fmdrxhzfozf6es5tujsvyqtgfq4nroctgptufmfyzkhrcuham\",\r\n    \"https://ipfs.near.social/ipfs/bafkreiht5axwgfoptyf2b7o2omyfvdgxwsdtxg4rie3ivknj752ryjyqqy\",\r\n    \"https://ipfs.near.social/ipfs/bafkreidggzeg2jomuhw5o7b2vqwf4jsgk6fof5dzgcep6kxpqnt6x45i3i\",\r\n  ];\r\n\r\n  const [prices, setPrices] = useState([]);\r\n\r\n  const fetchPrices = async () => {\r\n    let priceData = Near.view(\"priceoracle.near\", \"get_price_data\", {});\r\n    let assetsData = Near.view(\"oracle-prices.near\", \"get_config\", { keys });\r\n\r\n    let priceDataPrepared = [];\r\n    priceData.prices.map(\r\n      (data) => (priceDataPrepared[data.asset_id] = data.price)\r\n    );\r\n\r\n    let newPrices = assetsData.map((asset, index) => {\r\n      let assetAccountId = asset[0];\r\n      let assetName = asset[1].token_name;\r\n      let assetDecimals = asset[1].decimals;\r\n\r\n      let assetPrice = priceDataPrepared[assetAccountId];\r\n      let price = new Big(assetPrice.multiplier).div(\r\n        new Big(10).pow(assetPrice.decimals - assetDecimals)\r\n      );\r\n\r\n      const Logo = styled.img`\r\n        border-radius: 50%;\r\n        width: 45px;\r\n        height: auto;\r\n      `;\r\n\r\n      const LogoLink = styled.a`\r\n        top: 20px;\r\n        left: 20px;\r\n        background-color: none;\r\n\r\n        padding: 10px;\r\n        &:hover {\r\n          & > ${Logo} {\r\n            animation: tilt 1s ease infinite;\r\n          }\r\n        }\r\n\r\n        @keyframes tilt {\r\n          0% { transform: rotateZ(0deg); }\r\n          25% { transform: rotateZ(-5deg); }\r\n          50% { transform: rotateZ(5deg); }\r\n          75% { transform: rotateZ(-5deg); }\r\n          100% { transform: rotateZ(5deg); }\r\n        }\r\n      `;\r\n\r\n      return (\r\n        <div\r\n          className=\"col\"\r\n          key={assetAccountId}\r\n          style={{ color: tokenColors[index] }}\r\n        >\r\n          <LogoLink\r\n            href={`${checkPriceLink}${linkToken[index]}`}\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            style={{\r\n              textDecoration: \"none\",\r\n              color: \"inherit\",\r\n              transition: \"background-color 0.3s, transform 0.3s\",\r\n              display: \"inline-block\",\r\n            }}\r\n            onMouseEnter={(e) => {\r\n              e.currentTarget.style.backgroundColor = \"#f0f0f0\";\r\n              e.currentTarget.style.transform = \"scale(1.1)\";\r\n            }}\r\n            onMouseLeave={(e) => {\r\n              e.currentTarget.style.backgroundColor = \"transparent\";\r\n              e.currentTarget.style.transform = \"scale(1)\";\r\n            }}\r\n          >\r\n            <Logo\r\n              src={tokenImg[index]}\r\n              alt={assetName}\r\n              style={{ width: \"50px\", height: \"50px\", borderRadius: \"50%\" }}\r\n            />\r\n\r\n            <div>{assetName}</div>\r\n\r\n            <div>${price.toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, \"$&,\")}</div>\r\n          </LogoLink>\r\n        </div>\r\n      );\r\n    });\r\n\r\n    setPrices(newPrices);\r\n\r\n    // Schedule the next fetch after 10 seconds\r\n    setTimeout(fetchPrices, 3000);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchPrices(); // Fetch prices on initial render\r\n  }, []);\r\n\r\n  const H5 = styled.h5`\r\n    font-family: Century Gothic, CenturyGothic, AppleGothic, sans-serif;\r\n    color: black;\r\n    \r\n  `;\r\n\r\n  const CoinPrices = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: space-between;\r\n\r\n    .col {\r\n      flex: 1;\r\n      text-align: center;\r\n      border-radius: 5px;\r\n    }\r\n\r\n    h5 {\r\n      font-family: Century Gothic, CenturyGothic, AppleGothic, sans-serif;\r\n      color: black;\r\n      text-align: center;\r\n      margin:10px;\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n      /* Adjust styles for smaller screens */\r\n      .col {\r\n        flex: 1;\r\n        margin: 5px;\r\n        width: 100%; /* Full width on smaller screens */\r\n      }\r\n    }\r\n  `;\r\n\r\n  return (\r\n    <CoinPrices class=\"container\">\r\n      <div\r\n        class=\"row\"\r\n        style={{\r\n          padding: \"10px\",\r\n        }}\r\n      >\r\n        {prices}\r\n      </div>\r\n    </CoinPrices>\r\n  );\r\n};\r\n\r\nif (!DATAPrice) {\r\n  return \"Loading...\";\r\n}\r\nreturn <DATAPrice />;\r\n", "metadata": {"fork_of": "pichtran.near/widget/CoinPrice@113945331"}, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bf1028297b255e9aad25314732c86c67d4e5ee2519462d61bc325f6630a834c8/widget/CoinPrice", "fact_widget_deployments_id": "af34bbfbedf31122375acdf5adcf1172", "inserted_timestamp": "2024-05-14T20:51:59.390Z", "modified_timestamp": "2024-05-14T20:51:59.390Z", "__row_index": 0}