{"tx_hash": "3umiQwRyGib64G59woPGJ9Fb2r6w4A4RTWyeV71kNcYk", "action_id_social": "5itTyNobJcSB3s1teHdTzYxcaryBrf5m5SSH2Ti9cQQs-0-widget", "block_id": 108532834, "block_timestamp": "2023-12-22T06:39:30.186Z", "signer_id": "720288545047ae42c47ce521b155241fb760359af60496c46cb74c4358c5870a", "widget_name": "Home", "source_code": "function isMobileDevice() {\n  return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\n    navigator.userAgent\n  );\n}\n\nconst HomeWarp = styled.div`\n  width: 100%;\n  margin: 0;\n  padding: 0;\n  min-height: 720px;\n  padding-top: ${isMobileDevice() ? \"0\" : \"15px\"};\n  padding-bottom: ${isMobileDevice() ? \"0\" : \"15px\"};\n  background-color: #080d17;\n  position: relative;\n`;\n\nconst TradeWarp = styled.div`\n  width: ${isMobileDevice() ? \"100%\" : \"460px\"};\n  background-color: #080d17;\n  border: 1px solid #323232;\n  border-width: ${isMobileDevice() ? \"0\" : \"1px\"};\n  border-radius: 16px;\n  position: relative;\n  overflow: hidden;\n  margin: 0 auto;\n  padding-bottom: 10px;\n`;\n\nconst DropdownMenu = styled.div`\n  color: #fff;\n\n  position: relative;\n\n  .menu-box {\n    padding: 0 0.75rem;\n    font-weight: 600;\n    height: 48px;\n    display: flex;\n    align-items: center;\n    border-bottom: 1px solid #323232;\n  }\n  .menu-left {\n    flex: 1 1 0%;\n    display: flex;\n    column-gap: 10px;\n  }\n  .menu-right {\n    flex: none;\n  }\n  .coin-logo {\n    width: 28px;\n  }\n  .coin-name {\n    font-size: 18px;\n  }\n  .markets-text {\n    color: #98969e;\n  }\n`;\nconst GroupWarp = styled.div`\n  width: 100%;\n  position: absolute;\n  top: 48px;\n  left: 0;\n  opacity: 0;\n  height: auto;\n  background-color: #080d17;\n  border: 1px solid #323232;\n  z-index: 0;\n  animation-name: slideLeftAndFade;\n  animation: slideLeftAndFade 0.6s linear forwards;\n  animation-iteration-count: 1;\n\n  cursor: pointer;\n  .group-ul {\n    list-style: none;\n    display: flex;\n    flex-direction: column;\n    row-gap: 0.25rem;\n    padding-left: 0;\n  }\n  .group-li {\n    display: flex;\n    padding: 6px 0.75rem;\n    font-weight: 600;\n  }\n  .group-li-left {\n    flex: 1 1 0%;\n  }\n  .group-li-right {\n    flex: none;\n  }\n\n  .group-header-box {\n    padding: 10px 0.75rem;\n    display: flex;\n    align-items: center;\n    color: #98969e;\n    font-size: 12px;\n  }\n  .header-th {\n    flex: 1 1 0%;\n  }\n  .coin-logo {\n    width: 24px;\n  }\n  .coin-name {\n    font-size: 14px;\n  }\n\n  @keyframes slideLeftAndFade {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n`;\n\nconst TradeTab = styled.div`\n  width: 100%;\n  height: 40px;\n  border-bottom: 1px solid #323232;\n  display: flex;\n  align-items: center;\n  color: #fff;\n  font-size: 13px;\n  font-weight: 600;\n  .tab-btn {\n    display: flex;\n    flex: 1 1 0%;\n    align-items: center;\n    justify-content: center;\n    height: 40px;\n    cursor: pointer;\n    &.active {\n      border-bottom: 2px solid #617168;\n      animation-name: slideLeftAndFade;\n      animation: slideLeftAndFade 0.3s linear forwards;\n      animation-iteration-count: 1;\n    }\n  }\n  @keyframes slideLeftAndFade {\n    from {\n      opacity: 0.5;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n`;\n\nconst TardeType = styled.div`\n  width: 100%;\n  height: 80px;\n  display: flex;\n  align-items: center;\n  padding: 0 0.75rem;\n  column-gap: 0.75rem;\n  color: #fff;\n  .type-btn {\n    flex: 1 1 0%;\n    height: 36px;\n    cursor: pointer;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border: 1px solid #3d3947;\n    background-color: #252526;\n    font-size: 14px;\n    font-weight: 600;\n    border-radius: 10px;\n    &.active {\n      border-color: #009b72;\n      color: #009b72;\n      background-color: #111114;\n      transition: cubic-bezier(0.075, 0.82, 0.165, 1);\n    }\n  }\n`;\n\nconst exContract = [\n  {\n    symbol: \"ETH-USD\",\n    price: \"0\",\n    id: 1,\n    settleCoin: {\n      name: \"USD\",\n    },\n    tradeCoin: {\n      name: \"ETH\",\n      coin: \"https://trade.dydx.exchange/currencies/eth.svg\",\n    },\n  },\n  {\n    symbol: \"BTC-USD\",\n    price: \"0\",\n    id: 2,\n    settleCoin: {\n      name: \"USD\",\n    },\n    tradeCoin: {\n      name: \"BTC\",\n      coin: \"\thttps://trade.dydx.exchange/currencies/btc.svg\",\n    },\n  },\n];\n\nconst [exContractList, setExContractList] = useState(exContract);\n\nconst exUrl = \"https://zksync.satori.finance/\";\n\nconst nearId =\n  \"720288545047ae42c47ce521b155241fb760359af60496c46cb74c4358c5870a\";\n\nconst keys = [\n  \"aurora\",\n  \"2260fac5e5542a773aa44fbcfedf7c193bc2c599.factory.bridge.near\",\n];\n\nState.init({\n  groupVisible: false,\n  contractInfo: exContractList[0],\n  tradeTabIndex: 0,\n  tradeTypeIndex: 0,\n});\n\nconst fetchPrices = async () => {\n  const priceData = Near.view(\"priceoracle.near\", \"get_price_data\", {});\n  const assetsData = Near.view(\"oracle-prices.near\", \"get_config\", { keys });\n  const priceDataPrepared = [];\n  priceData.prices.map(\n    (data) => (priceDataPrepared[data.asset_id] = data.price)\n  );\n  const newPrices = assetsData.map((asset, index) => {\n    const assetAccountId = asset[0];\n    const assetDecimals = asset[1].decimals;\n\n    const assetPrice = priceDataPrepared[assetAccountId];\n    const price = new Big(assetPrice.multiplier).div(\n      new Big(10).pow(assetPrice.decimals - assetDecimals)\n    );\n    return price.toString();\n  });\n\n  return newPrices;\n};\n\nconst loopPrice = async () => {\n  try {\n    const [etpPrice, btcPrice] = fetchPrices();\n    exContract[0].price = etpPrice;\n    exContract[1].price = btcPrice;\n    setExContractList(exContract);\n  } finally {\n    setTimeout(() => {\n      loopPrice();\n    }, 30000);\n  }\n};\n\nconst sizeContractSymbol = useMemo(() => {\n  return [\n    state.contractInfo.tradeCoin.name,\n    state.contractInfo.settleCoin.name,\n  ];\n}, [state.contractInfo]);\n\nconst tradeTab = [{ name: \"Limit\" }, { name: \"Market\" }];\n\nconst tradeTypeBtn = [{ name: \"Long\" }, { name: \"Short\" }];\n\nuseEffect(() => {\n  loopPrice();\n}, []);\n\nreturn (\n  <HomeWarp>\n    <TradeWarp>\n      <Widget src={`${nearId}/widget/H5Header`} />\n      <DropdownMenu>\n        <div\n          class=\"menu-box\"\n          onClick={() => {\n            State.update({ groupVisible: !state.groupVisible });\n            console.log(state.groupVisible);\n          }}\n        >\n          <div class=\"menu-left\">\n            <img\n              class=\"coin-logo\"\n              src={state.contractInfo.tradeCoin.coin}\n              alt=\"\"\n            />\n            <span class=\"coin-name\">{state.contractInfo.symbol}</span>\n          </div>\n\n          <div class=\"menu-right\">\n            <span class=\"markets-text\">All Markets</span>\n            <span class=\"down-triangle\">\n              <svg\n                data-v-fd82d23f=\"\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"16\"\n                height=\"16\"\n                viewBox=\"0 0 16 16\"\n                fill=\"none\"\n              >\n                <path\n                  data-v-fd82d23f=\"\"\n                  d=\"M7.29273 9.76817C7.68325 10.1588 8.31646 10.1588 8.707 9.76823L12.0065 6.46872L11.0645 5.52539L7.99984 8.59206L4.93583 5.52539L3.99316 6.46806L7.29273 9.76817Z\"\n                  fill=\"#98969e\"\n                ></path>\n              </svg>\n            </span>\n          </div>\n        </div>\n\n        {state.groupVisible && (\n          <GroupWarp>\n            <ul class=\"group-ul\">\n              <li class=\"group-header-box\">\n                <div class=\"header-th\">\n                  <span class=\"th-txt\">Market</span>\n                </div>\n                <div>\n                  <span class=\"th-txt\">Price</span>\n                </div>\n              </li>\n              {exContractList.map((item) => (\n                <li\n                  class=\"group-li\"\n                  onClick={() => {\n                    State.update({ contractInfo: item, groupVisible: false });\n                  }}\n                >\n                  <div class=\"group-li-left\">\n                    <img class=\"coin-logo\" src={item.tradeCoin.coin} alt=\"\" />\n                    <span class=\"coin-name\">{item.symbol}</span>\n                  </div>\n                  <div class=\"group-li-right\">\n                    <span class=\"price\">{item.price}</span>\n                  </div>\n                </li>\n              ))}\n            </ul>\n          </GroupWarp>\n        )}\n      </DropdownMenu>\n      <TradeTab>\n        {tradeTab.map((item, index) => (\n          <div\n            class={`tab-btn ${state.tradeTabIndex === index ? \"active\" : \"\"}`}\n            onClick={() => {\n              State.update({ tradeTabIndex: index });\n            }}\n          >\n            <span>{item.name}</span>\n          </div>\n        ))}\n      </TradeTab>\n      <TardeType>\n        {tradeTypeBtn.map((item, index) => (\n          <div\n            class={`type-btn ${state.tradeTypeIndex === index ? \"active\" : \"\"}`}\n            onClick={() => {\n              State.update({ tradeTypeIndex: index });\n            }}\n          >\n            <span>{item.name}</span>\n          </div>\n        ))}\n      </TardeType>\n      {state.tradeTabIndex === 0 ? (\n        <Widget\n          src={`${nearId}/widget/Limit`}\n          props={{\n            contractSymbol: sizeContractSymbol,\n            price: state.contractInfo.price,\n            exUrl,\n            nearId,\n          }}\n        />\n      ) : (\n        <Widget\n          src={`${nearId}/widget/Market`}\n          props={{\n            contractSymbol: sizeContractSymbol,\n            price: state.contractInfo.price,\n            exUrl,\n            nearId,\n          }}\n        />\n      )}\n    </TradeWarp>\n  </HomeWarp>\n);\n", "metadata": {"fork_of": "720288545047ae42c47ce521b155241fb760359af60496c46cb74c4358c5870a/widget/Home@108532258"}, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/720288545047ae42c47ce521b155241fb760359af60496c46cb74c4358c5870a/widget/Home", "fact_widget_deployments_id": "eb4d66188230cc6573972b9c0be3663c", "inserted_timestamp": "2023-12-22T08:53:25.673Z", "modified_timestamp": "2023-12-22T09:25:53.646Z", "__row_index": 1}