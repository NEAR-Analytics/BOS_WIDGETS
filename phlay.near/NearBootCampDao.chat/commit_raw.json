{"tx_hash": "7j3M85e7EZxANecATvUfrKmxgfwQ25JyniqusEDp8NhW", "action_id_social": "CfsiUWbZJ1gYNeuE4wPs5BWXWGPzX5EzxhYxMuu1qFdr-0-widget", "block_id": 100034684, "block_timestamp": "2023-08-30T22:34:22.946Z", "signer_id": "phlay.near", "widget_name": "NearBootCampDao.chat", "source_code": "const contract =\n  \"ece61a112fbb05b5ff96fd4d63cb259c4bae966477829666d46ddc4e5121d801\";\n\n//Getting the messages from the contract\nconst messages = Near.view(contract, \"get_messages\", { limit: 20 });\n\n//initializing state\nState.init({ message: \"\" });\n\n//functionality for sending messages\nconst sendMessage = () => {\n  if (state.message.length != 0) {\n    Near.call(contract, \"send\", {\n      text: state.message,\n    });\n  }\n};\n\n//getting logged in user\nconst accountId = context.accountId;\n\n//Using Styled Controls\nconst SendControls = styled.div`\n  display: flex;\n  gap: 1em;\n  margin: 0.5em;\n  position: sticky;\n  bottom: 10px;\n`;\nconst container = {\n  display: \"flex\",\n  flexDirection: \"column\",\n  width: \"100%\",\n  gap: 20,\n  backgroundColor: \"#010322\",\n  padding: \"0.5em 4vw\",\n  height: \"100vh\",\n};\nconst Header = styled.div`\n  width: 100%;\n  padding: 50px 10px;\n  font-weight: 600;\n  font-size: 30px;\n  position: sticky;\n  top: 0;\n  z-index: 100;\n  background-color: #ffffff;\n`;\n\nconst Wrapper = styled.div`\n  background-color: #010322;\n`;\n\nreturn (\n  <Wrapper>\n    <Header>\n      <p>\ud83e\udd77\ud83c\udffb Near BootCamp 23 DAO \u26d3\ufe0f \ud83d\udd75\ufe0f\u200d\u2642\ufe0f</p>\n      <button>Chat</button>\n      <button>Proposals</button>\n    </Header>\n    <div style={container}>\n      {messages.reverse().map((message) => (\n        <div\n          style={{\n            alignSelf: `${accountId === message.author && \"flex-end\"}`,\n            maxWidth: \"250px\",\n            display: \"flex\",\n            flexDirection: \"row\",\n            alignItems: \"flex-end\",\n            gap: 5,\n          }}\n        >\n          {/* Profile Picture */}\n          {accountId !== message.author && (\n            <div style={{ width: \"40px\" }}>\n              <Widget\n                src=\"calebjacob.near/widget/AccountProfile\"\n                props={{\n                  accountId: message.author,\n                }}\n              />\n            </div>\n          )}\n          <div style={{ position: \"relative\" }}>\n            <p\n              style={{\n                backgroundColor: `${\n                  accountId === message.author ? \"#7933FF\" : \"#FFFFFF\"\n                }`,\n                borderRadius: \"12px\",\n                padding: \"10px\",\n                color: `${\n                  accountId === message.author ? \"#FFFFFF\" : \"#000000\"\n                }`,\n              }}\n            >\n              {message.text}\n            </p>\n            <div\n              style={{\n                fontSize: \"12px\",\n                color: \"#FFFFFF\",\n                position: \"absolute\",\n                bottom: \"-5px\",\n                left: `${message.author !== accountId ? 0 : \"90%\"}`,\n              }}\n            >\n              <Widget\n                src=\"andyh.near/widget/TimeAgo\"\n                props={{\n                  blockHeight: message.block_height,\n                }}\n              />\n            </div>\n          </div>\n        </div>\n      ))}\n      <SendControls>\n        <button>\ud83d\udcc3</button>\n        <input\n          type=\"text\"\n          onInput={(e) => State.update({ message: e.target.value })}\n          value={state.message}\n        />\n        <button\n          onClick={() => {\n            sendMessage();\n          }}\n        >\n          Send\n        </button>\n      </SendControls>\n    </div>\n  </Wrapper>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/phlay.near/widget/NearBootCampDao.chat", "fact_widget_deployments_id": "789f09d1a9b461af17e12282a1a242ee", "inserted_timestamp": "2023-08-31T00:33:11.138Z", "modified_timestamp": "2023-08-31T00:33:11.138Z", "__row_index": 1}