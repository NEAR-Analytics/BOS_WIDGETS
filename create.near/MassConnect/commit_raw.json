{"tx_hash": "AYS5FHGq99FsBoFUqzxJCcAZamPB3tic7uD9ZfZcosHD", "action_id_social": "AA7D2t73pcjmnL1URgTU6r3c5Z5duG8VYFBkLkGNyHk4-0-widget", "block_id": 81304369, "block_timestamp": "2022-12-23T19:11:26.529Z", "signer_id": "create.near", "widget_name": "MassConnect", "source_code": "const userId = context.accountId;\nconst ownerId = \"create.near\";\n\nif (!userId) {\n  return \"Please log in with NEAR :)\";\n}\n\nconst accounts = Social.keys(`*/graph/connect/*`, \"final\", {\n  return_type: \"BlockHeight\",\n  values_only: true,\n});\n\nif (accounts === null) {\n  return \"Loading\";\n}\n\nconst leadersData = Social.keys(`${userId}/graph/connect/*`, \"final\");\nif (leadersData === null) {\n  return \"Loading\";\n}\n\nconst leaders = leadersData[userId][\"graph\"][\"connect\"] ?? {};\n\nlet connectDev = prop.connectDev ?? false;\n\nif (connectDev) {\n  leaders[ownerId] = true;\n}\n\nState.init({\n  leaders,\n  connectDev,\n});\n\nlet leadersAll = [];\nObject.keys(accounts).forEach((accountId) => {\n  Object.keys(accounts[accountId].graph.connect).forEach((leadersAccountId) => {\n    leadersAll[leadersAccountId] = (leadersAll[leadersAccountId] ?? 0) + 1;\n  });\n});\n\nlet leadersTop = Object.keys(leadersAll).sort(\n  (a, b) => leadersAll[b] - leadersAll[a]\n);\n\nlet handleChange = (accountId) => {\n  let leaders = state.leaders;\n  leaders[accountId] = !leaders[accountId];\n  State.update({ leaders });\n};\n\nlet connectDevChange = () => {\n  handleChange(ownerId);\n  State.update({ connectDev: !state.connectDev });\n};\n\nlet leadersBlocks = leadersTop.map((accountId) => (\n  <li\n    className={`list-group-item ${\n      state.leaders[accountId] ? \"list-group-item-success\" : \"\"\n    }`}\n  >\n    <div className=\"form-check\">\n      <input\n        className=\"form-check-input\"\n        type=\"checkbox\"\n        value={accountId}\n        disabled={accountId == userId}\n        id={`connect-${accountId}`}\n        name={`connect-${accountId}`}\n        onChange={() => handleChange(accountId)}\n        checked={state.leaders[accountId] ?? false}\n      />\n      <label className=\"form-check-label\" for={`connect-${accountId}`}>\n        <Widget\n          src=\"zavodil.near/widget/ProfileLine\"\n          props={{\n            accountId,\n            link: \"\",\n          }}\n        />{\" \"}\n        <span\n          className=\"badge rounded-pill bg-primary\"\n          title={`${leadersAll[accountId]} leaders`}\n        >\n          {leadersAll[accountId]}\n        </span>\n        <a\n          className=\"btn btn-sm btn-outline-secondary border-0\"\n          href={`#/mob.near/widget/ProfilePage?accountId=${accountId}`}\n          target=\"_blank\"\n        >\n          <i className=\"bi bi-window-plus me-1\" title=\"Open in new tab\"></i>\n        </a>\n      </label>\n    </div>\n  </li>\n));\n\nlet dataConnect = {};\nObject.keys(state.leaders).map((accountId) => {\n  if (accountId !== userId) {\n    let connect = !!state.leaders[accountId];\n    dataConnect[accountId] = connect ? \"\" : null;\n  }\n});\n\nlet dataGraph = [];\nlet dataNotify = [];\n\nObject.keys(state.leaders).map((accountId) => {\n  if (leaders[accountId] != state.leaders[accountId]) {\n    let connect = !!state.leaders[accountId];\n    dataGraph.push({\n      key: \"connect\",\n      value: {\n        type: connect ? \"add\" : \"remove\",\n        accountId,\n      },\n    });\n\n    dataNotify.push({\n      key: accountId,\n      value: {\n        type: connect ? \"add\" : \"remove\",\n      },\n    });\n  }\n});\n\nconst data = {\n  graph: {\n    connect: dataConnect,\n  },\n  index: {\n    graph: JSON.stringify(dataGraph),\n    notify: JSON.stringify(dataNotify),\n  },\n};\n\nreturn (\n  <>\n    <h3>Choose Leaders</h3>\n    <p>Select from the list of accounts below.</p>\n\n    <div className=\"mb-3\">\n      <CommitButton\n        disabled={context.loading}\n        className={`btn ${\n          context.loading ? \"btn-outline-dark\" : \"btn-primary\"\n        }`}\n        data={data}\n      >\n        {context.loading ? \"Loading\" : \"Connect\"}\n      </CommitButton>\n    </div>\n    <h5>Near Social Community</h5>\n    <ul className=\"list-group\">{leadersBlocks}</ul>\n\n    <div className=\"mt-2 mb-3\">\n      <CommitButton\n        disabled={context.loading}\n        className={`btn ${\n          context.loading ? \"btn-outline-dark\" : \"btn-primary\"\n        }`}\n        data={data}\n      >\n        {context.loading ? \"Loading\" : \"Connect\"}\n      </CommitButton>\n    </div>\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/create.near/widget/MassConnect", "fact_widget_deployments_id": "a1f088310a510f5697968592b4a44a34", "inserted_timestamp": "2000-01-01T00:00:00.000Z", "modified_timestamp": "2000-01-01T00:00:00.000Z", "__row_index": 1}