{"tx_hash": "8wxHXesX4LjTcdwAoX7Ejq5Vzw4oN9nhmbMbx6pdYeTi", "action_id_social": "z2NSxRjDKcGGf9YPDQ9xddaPELt7GTnSeYSKMbi7Max-0-widget", "block_id": 107040085, "block_timestamp": "2023-12-03T04:08:38.629Z", "signer_id": "create.near", "widget_name": "project.form", "source_code": "const UUID = {\n  generate: (template) => {\n    if (typeof template !== \"string\") {\n      template = \"xxxxxxxx-xxxx-xxxx-yxxx-xxxxxxxxxxxx\";\n    }\n    return template.replace(/[xy]/g, (c) => {\n      var r = (Math.random() * 16) | 0;\n      var v = c === \"x\" ? r : (r & 0x3) | 0x8;\n      return v.toString(16);\n    });\n  },\n};\n\n\nconst { handleCreateProject, defaultProject, buttonChildren, buttonProps } =\n  props;\n\nState.init({\n  error: undefined,\n  project: defaultProject ?? {\n    id: UUID.generate(),\n    logo: undefined,\n    title: undefined,\n    description: undefined,\n    tags: [],\n  },\n});\n\nconst update = (k, v) => State.update({ [k]: v });\nconst updateP = (k, v) => update(\"project\", { ...state.project, [k]: v });\n\nconst beforeHandleCreateProject = () => {\n  update(\"error\", undefined);\n  if (!state.project.title) {\n    update(\"error\", \"Title is required\");\n  }\n  if (!state.error) {\n    handleCreateProject(state.project);\n  }\n};\n\nconst IT = \"nearui.near/widget/Input.ExperimentalText\";\nconst SI = \"nearui.near/widget/Social.ImageUpload\";\nconst IB = \"nearui.near/widget/Input.Button\";\nreturn (\n  <div className=\"p-4 bg-white rounded-4\">\n    <div className=\"d-flex flex-column gap-3\">\n      <h3>{buttonChildren || \"Create Project\"}</h3>\n      <Widget\n        src={IT}\n        props={{\n          label: \"Title\",\n          placeholder: \"My project\",\n          inputProps: {\n            defaultValue: state.project.title,\n          },\n          onChange: (v) => updateP(\"title\", v),\n        }}\n      />\n      <Widget\n        src={IT}\n        props={{\n          label: \"Description\",\n          placeholder: \"Describe your project\",\n          textarea: true,\n          inputProps: {\n            defaultValue: state.project.description,\n          },\n          onChange: (v) => updateP(\"description\", v),\n        }}\n      />\n      <Widget\n        src={IT}\n        props={{\n          label: \"Tags\",\n          placeholder: \"Separate with commas\",\n          inputProps: {\n            defaultValue: state.project.tags.join(\", \"),\n          },\n          onChange: (v) =>\n            updateP(\n              \"tags\",\n              (v || \"\")\n                .split(\",\")\n                .filter((v) => v !== \"\")\n                .map((v) => v.trim())\n            ),\n        }}\n      />\n      <h6 className=\"mb-0\">Logo</h6>\n      {state.project.logo && (\n        <img src={state.project.logo} alt=\"\" height={100} width={100} />\n      )}\n      <Widget\n        src={SI}\n        props={{\n          onChange: (v) => updateP(\"logo\", v),\n          value: state.project.logo,\n        }}\n      />\n      <div className=\"text-danger mt-2\">{state.error}</div>\n      <Widget\n        src={IB}\n        props={{\n          children: buttonChildren ?? \"Create Project\",\n          variant: \"success\",\n          onClick: () => beforeHandleCreateProject(),\n        }}\n      />\n    </div>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/create.near/widget/project.form", "fact_widget_deployments_id": "bb1f4abeada419cb4cf5b0fe4b7a67db", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 3}