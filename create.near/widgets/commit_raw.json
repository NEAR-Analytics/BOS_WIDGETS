{"tx_hash": "EtGRhasWU2gWxBrGrRUhnbxmb9M6aJm1z61ttp7Y63Vp", "action_id_social": "4mzPMpasQWjP18SD8FzQbYody3VLQ3HkF6EZCBHf2m2w-0-widget", "block_id": 110532822, "block_timestamp": "2024-01-16T08:21:26.858Z", "signer_id": "create.near", "widget_name": "widgets", "source_code": "const accountId = props.accountId ?? context.accountId ?? \"devs.near\";\n\nlet data = Social.keys(`${accountId}/widget/*`, \"final\", {\n  return_type: \"BlockHeight\",\n  values_only: true,\n});\n\nif (!data) {\n  return \"Loading\";\n}\n\ndata = Object.entries(data[accountId].widget ?? {});\ndata.sort((a, b) => b[1] - a[1]);\n\nconst creatorId = props.creatorId ?? context.accountId ?? \"devs.near\";\nconst widgetName = props.widgetName ?? \"DAO.Members\";\n\nconst GRAPHQL_ENDPOINT = \"https://near-queryapi.api.pagoda.co\";\nconst STORE = \"storage.googleapis.com\";\nconst BUCKET = \"databricks-near-query-runner\";\nconst BASE_URL = `https://${STORE}/${BUCKET}/output/near_bos_component_details/component_rpc_loads`;\nconst dataset = `${BASE_URL}/${creatorId}/widget/${widgetName}`;\n\nconst DESC_MAX_WORDS = 15;\nconst DEPENDANCY_MAX = 5;\n\nconst [isLoadingRpcImpressions, setLoadingRpcImpressions] = useState(true);\nconst [componentImpressionsData, setComponentImpressionsData] = useState({\n  impressions: undefined,\n  weekly_chart_data_config: undefined,\n  executed_at: undefined,\n});\nconst [developerSince, setDeveloperSince] = useState(undefined);\nconst [numberOfComponentsPublished, setNumberOfComponentsPublished] =\n  useState(0);\nconst [showAllDependencies, setShowAllDependencies] = useState(false);\n\nconst indexerQueries = `\n  query GetWidgetCount {\n   eduohe_near_nearcon_2023_widget_activity_feed_widget_activity_aggregate(\n      where: {account_id: {_eq: \"${creatorId}\"}}\n    ) {\n      aggregate {\n        count(distinct: true, columns: widget_name)\n      }\n    }\n  }\n  query GetDeveloperSince {\n  eduohe_near_nearcon_2023_widget_activity_feed_widget_activity_aggregate(\n      where: {account_id: {_eq: \"${creatorId}\"}}\n    ) {\n      aggregate {\n        min {\n          block_timestamp\n        }\n      }\n    }\n  }\n`;\n\nconst normalizeMarkdown = (text) => {\n  // convert headers to normal text (remove # symbols)\n  text = text.replace(/^#+\\s*/gm, \"\");\n  // convert bold and italic to normal text (remove * and _ symbols)\n  text = text.replace(/(\\*\\*|__)(.*?)\\1/g, \"$2\");\n  text = text.replace(/(\\*|_)(.*?)\\1/g, \"$2\");\n  // remove links\n  text = text.replace(/\\[(.*?)\\]\\(.*?\\)/g, \"$1\");\n  // remove images\n  text = text.replace(/!\\[(.*?)\\]\\(.*?\\)/g, \"$1\");\n  return text.trim();\n};\n\nconst formatDate = (date) => {\n  return date.toISOString().split(\"T\")[0];\n};\n\nconst computeWeekLabel = (weekDateString) => {\n  let startDate = new Date(weekDateString);\n  let endDate = new Date(startDate);\n  endDate.setDate(startDate.getDate() + 6);\n  let label = `${formatDate(startDate)} - ${formatDate(endDate)}`;\n  return label;\n};\n\nconst getComponentImpressions = () => {\n  try {\n    const url = `${dataset}.json`;\n    const res = fetch(url);\n    if (res.ok) {\n      const parsedResults = JSON.parse(res.body);\n      const weekly_chart_data = parsedResults.data.rpc_loads\n        .sort((a, b) => new Date(a.week) - new Date(b.week))\n        .map((row) => ({\n          \"RPC Impressions\": row.number_of_rpc_loads,\n          Week: computeWeekLabel(row.week),\n        }));\n\n      const weekly_chart_data_config = {\n        tooltip: {\n          trigger: \"axis\",\n          confine: true,\n        },\n        grid: {\n          left: \"3%\",\n          right: \"4%\",\n          containLabel: true,\n        },\n        xAxis: {\n          type: \"category\",\n          boundaryGap: false,\n          data: weekly_chart_data.map((r) => r.Week),\n          axisLine: { show: false },\n          axisTick: { show: false },\n          axisLabel: { show: false },\n        },\n        yAxis: {\n          type: \"value\",\n          splitLine: { show: false },\n          axisLine: { show: false },\n          axisTick: { show: false },\n          axisLabel: { show: false },\n        },\n        series: [\n          {\n            name: \"Number of Views\",\n            type: \"line\",\n            smooth: true,\n            data: weekly_chart_data.map((r) => r[\"RPC Impressions\"]),\n            areaStyle: {},\n            color: \"#59e691\",\n            showSymbol: false,\n          },\n        ],\n      };\n      setLoadingRpcImpressions(false);\n      setComponentImpressionsData({\n        impressions: parsedResults.data.total_rpc_loads,\n        weekly_chart_data_config,\n        executed_at: parsedResults.executed_at,\n      });\n    }\n  } catch (error) {\n    console.error(\n      \"Error on fetching component impression data: \",\n      error.message\n    );\n  }\n};\n\nfunction fetchGraphQL(operationsDoc, operationName, variables) {\n  return asyncFetch(`${GRAPHQL_ENDPOINT}/v1/graphql`, {\n    method: \"POST\",\n    headers: { \"x-hasura-role\": \"eduohe_near\" },\n    body: JSON.stringify({\n      query: operationsDoc,\n      variables: variables,\n      operationName: operationName,\n    }),\n  });\n}\n\nconst Sidebar = styled.div`\n  > div {\n    padding-bottom: 32px;\n    border-bottom: 1px solid #eceef0;\n    margin-bottom: 32px;\n\n    &:last-child {\n      padding-bottom: 0;\n      border-bottom: none;\n      margin-bottom: 0;\n    }\n  }\n\n  @media (max-width: 995px) {\n    grid-row: 1;\n  }\n`;\n\nconst SideBarContainer = styled.div`\n  @media (max-width: 995px) {\n    margin-top: 10px;\n  }\n`;\n\nconst SmallTitle = styled.h3`\n  color: #687076;\n  font-weight: 600;\n  font-size: 12px;\n  line-height: 15px;\n  margin-bottom: 20px;\n  text-transform: uppercase;\n\n  @media (max-width: 770px) {\n    margin-bottom: 16px;\n  }\n`;\n\nconst Bio = styled.div`\n  color: #11181c;\n  font-size: 14px;\n  line-height: 20px;\n  margin-bottom: 15px;\n  margin-top: 20px;\n\n  > *:last-child {\n    margin-bottom: 15 !important;\n  }\n\n  @media (max-width: 900px) {\n    margin-bottom: 15px;\n  }\n`;\n\nconst Text = styled.p`\n  margin: 0;\n  font-size: 14px;\n  line-height: 20px;\n  color: ${(p) => (p.bold ? \"#11181C\" : \"#687076\")};\n  font-weight: ${(p) => (p.bold ? \"600\" : \"400\")};\n  font-size: ${(p) => (p.small ? \"12px\" : \"14px\")};\n\n  i {\n    margin-right: 4px;\n  }\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 25px;\n  padding-bottom: 25px;\n  border-bottom: 1px solid #eceef0;\n`;\n\nconst Stats = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n\nconst StatsBadge = styled.div`\n  display: flex;\n  align-items: center;\n  margin-right: 20px;\n`;\n\nconst Icon = styled.i`\n  font-size: 15px;\n  fill: currentColor;\n  padding-right: 5px;\n`;\n\nconst StatsText = styled.p`\n  margin: 0;\n  font-size: 14px;\n  line-height: 20px;\n  color: \"#11181C\";\n  font-weight: ${(p) => (p.bold ? \"600\" : \"400\")};\n  font-size: ${(p) => (p.small ? \"12px\" : \"14px\")};\n  border-radius: 12px;\n`;\n\nconst GraphContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  @media (min-width: 450px) {\n    flex-direction: row;\n  }\n`;\n\nconst Graph = styled.div`\n  display: flex;\n  margin-top: -24px;\n  @media (min-width: 450px) {\n    margin-left: 30px;\n  }\n`;\n\nconst ItemsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n`;\n\nconst code = Social.get(`${creatorId}/widget/${widgetName}`);\nconst dependencyMatch =\n  code && code.matchAll(/<Widget[\\s\\S]*?src=.*?\"(.+)\"[\\s\\S]*?\\/>/g);\nlet dependencySources = [...(dependencyMatch || [])]\n  .map((r) => r[1])\n  .filter((r) => !!r);\ndependencySources = dependencySources.filter(\n  (r, i) => dependencySources.indexOf(r) === i && r !== \"(.+)\"\n);\n\nconst accountProfileDescription =\n  Social.getr(`${creatorId}/profile`).description ?? \"\";\n\nif (accountProfileDescription) {\n  const text = normalizeMarkdown(accountProfileDescription).split(\" \");\n  accountProfileDescription = text.slice(0, DESC_MAX_WORDS);\n  if (text.length >= DESC_MAX_WORDS) {\n    accountProfileDescription.push(\"...\");\n  }\n  accountProfileDescription = accountProfileDescription.join(\" \");\n}\n\nif (isLoadingRpcImpressions) {\n  getComponentImpressions();\n}\n\nuseEffect(() => {\n  fetchGraphQL(indexerQueries, \"GetWidgetCount\", {}).then((result) => {\n    if (result.status === 200 && result.body) {\n      if (result.body.errors) {\n        console.log(\"GetWidgetCount error:\", result.body.errors);\n        return;\n      }\n      let data = result.body.data;\n      if (data) {\n        const noComponents =\n          data\n            .eduohe_near_nearcon_2023_widget_activity_feed_widget_activity_aggregate\n            .aggregate.count;\n        setNumberOfComponentsPublished(noComponents);\n      }\n    }\n  });\n}, []);\n\nuseEffect(() => {\n  fetchGraphQL(indexerQueries, \"GetDeveloperSince\", {}).then((result) => {\n    if (result.status === 200 && result.body) {\n      if (result.body.errors) {\n        console.log(\"GetDeveloperSince error:\", result.body.errors);\n        return;\n      }\n      let data = result.body.data;\n      if (\n        data &&\n        data.eduohe_near_nearcon_2023_widget_activity_feed_widget_activity_aggregate\n      ) {\n        const developerSince =\n          data\n            .eduohe_near_nearcon_2023_widget_activity_feed_widget_activity_aggregate\n            .aggregate.min.block_timestamp;\n        setDeveloperSince(developerSince);\n      }\n    }\n  });\n}, []);\n\nconst widgets = data.map((p, i) => {\n  const widgetName = `${p[0]}`;\n  return (\n    <div className=\"d-flex flex-row justify-content-between\" key={i}>\n      <h5 className=\"m-3 mt-5\">\n        <a href={`#/${creatorId}/widget/${widgetName}`}>\n          {p[0] || <i>widget</i>}\n        </a>\n      </h5>\n      <Sidebar>\n        <SideBarContainer>\n          <Container>\n            <GraphContainer>\n              <div\n                className=\"ms-3\"\n                style={{ display: \"flex\", flexDirection: \"column\" }}\n              >\n                <Text small style={{ marginBottom: \"10px\" }}>\n                  Views\n                </Text>\n                <Text medium bold style={{ marginBottom: \"10px\" }}>\n                  {componentImpressionsData.impressions ?? \"...\"}\n                </Text>\n              </div>\n              <div\n                className=\"ms-3\"\n                style={{ display: \"flex\", flexDirection: \"column\" }}\n              >\n                <Text small style={{ marginBottom: \"10px\" }}>\n                  Updated\n                </Text>\n                <Text medium bold style={{ marginBottom: \"10px\" }}>\n                  <Widget\n                    src=\"mob.near/widget/TimeAgo@97556750\"\n                    props={{ keyPath: `${creatorId}/widget/${widgetName}` }}\n                  />\n                  ago\n                </Text>\n              </div>\n              {componentImpressionsData.weekly_chart_data_config && (\n                <Graph>\n                  <Widget\n                    src=\"near/widget/Chart\"\n                    props={{\n                      definition:\n                        componentImpressionsData.weekly_chart_data_config,\n                      width: \"180px\",\n                      height: \"100px\",\n                    }}\n                  />\n                </Graph>\n              )}\n            </GraphContainer>\n          </Container>\n        </SideBarContainer>\n      </Sidebar>\n    </div>\n  );\n});\n\nreturn (\n  <div className=\"col\">\n    <div className=\"card h-100\">\n      <div className=\"card-header d-flex flex-row justify-content-between\">\n        <div className=\"mt-3 mb-3 ms-2\">\n          <Widget src=\"mob.near/widget/Profile\" props={{ accountId }} />{\" \"}\n        </div>\n        <Container>\n          <Stats>\n            <StatsBadge>\n              <Icon className=\"ph ph-code\" />\n              <span className=\"badge rounded-pill bg-secondary\">\n                {numberOfComponentsPublished\n                  ? numberOfComponentsPublished + \" published\"\n                  : \"...\"}\n              </span>\n            </StatsBadge>\n            <StatsBadge>\n              <Icon className=\"bi bi-calendar\" />\n              <span className=\"badge rounded-pill bg-secondary\">\n                {developerSince ? (\n                  <Widget\n                    key=\"foo\"\n                    src=\"near/widget/TimeAgo\"\n                    props={{\n                      alwaysRelative: true,\n                      blockTimestamp: developerSince,\n                    }}\n                  />\n                ) : (\n                  <span>...</span>\n                )}\n              </span>\n            </StatsBadge>\n          </Stats>\n        </Container>\n      </div>\n      <div className=\"card-body\">{widgets}</div>\n    </div>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/create.near/widget/widgets", "fact_widget_deployments_id": "87be9ab5115470ff39102783ae34d964", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 1}