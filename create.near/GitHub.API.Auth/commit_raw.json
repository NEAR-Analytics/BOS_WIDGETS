{"tx_hash": "GMbsnAuhEvo2UjZvUYJow9t7Ub7sFtS9rDf4yr8V8DMi", "action_id_social": "4y9ZbG3546VeZs2UEty6KSLwS5z5ScpNNC5B1KCf5NRm-0-widget", "block_id": 110419330, "block_timestamp": "2024-01-14T22:28:11.098Z", "signer_id": "create.near", "widget_name": "GitHub.API.Auth", "source_code": "const [apiKey, setApiKey] = useState(\"\");\nconst [owner, setOwner] = useState(\"\");\nconst [repo, setRepo] = useState(\"\");\nconst [githubData, setGithubData] = useState(null);\nconst [error, setError] = useState(null);\nconst [isLoading, setIsLoading] = useState(false);\n\nconst githubApiBaseUrl = \"https://api.github.com\";\n\nconst handleFetch = () => {\n  console.log(\"handleFetch called\");\n\n  if (apiKey.trim() === \"\") {\n    setError(\"invalid access token\");\n    return;\n  }\n\n  if (owner.trim() === \"\") {\n    setError(\"invalid username\");\n    return;\n  }\n\n  if (repo.trim() === \"\") {\n    setError(\"invalid repository\");\n    return;\n  }\n\n  setIsLoading(true);\n  setError(null);\n\n  const apiUrl = `${githubApiBaseUrl}/repos/${owner}/${repo}/contents`;\n\n  const headers = {\n    Authorization: `token ${apiKey}`,\n  };\n\n  asyncFetch(apiUrl, { headers })\n    .then((response) => {\n      if (!response.ok) {\n        setError(`HTTP error! Status: ${response.status}`);\n      }\n      return response;\n    })\n    .then((data) => {\n      console.log(\"Data:\", data);\n      const files = data.body;\n      setGithubData(files);\n    })\n    .catch((error) => {\n      console.error(\"Error fetching data:\", error);\n      setGithubData(null);\n    });\n};\n\nreturn (\n  <div>\n    <div className=\"m-3\">\n      <h3 className=\"mb-2\">GitHub API</h3>\n      <h5 className=\"mb-2\">Authentication Demo</h5>\n\n      <p>\n        <i>\u2192 interact with a private repository</i>\n      </p>\n      <input\n        type=\"text\"\n        placeholder=\"personal access token\"\n        value={apiKey}\n        onChange={(e) => setApiKey(e.target.value)}\n      />\n    </div>\n    <div className=\"m-3\">\n      <input\n        type=\"text\"\n        placeholder=\"owner / username\"\n        value={owner}\n        onChange={(e) => setOwner(e.target.value)}\n      />\n    </div>\n    <div className=\"m-3\">\n      <input\n        type=\"text\"\n        placeholder=\"repository name\"\n        value={repo}\n        onChange={(e) => setRepo(e.target.value)}\n      />\n      <button className=\"btn btn-outline-primary mt-3\" onClick={handleFetch}>\n        Fetch\n      </button>\n      {githubData && (\n        <div className=\"mt-3 m-1\">\n          <hr />\n          <h5>Content:</h5>\n          <ul>\n            {githubData.map((file) => (\n              <li key={file.name}>\n                <a\n                  href={file.html_url}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  {file.name}\n                </a>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n      <div className=\"mt-3 m-1\">{error && <p>{error}</p>}</div>\n    </div>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/create.near/widget/GitHub.API.Auth", "fact_widget_deployments_id": "5288e8192ce79bfe4750148162a62f7d", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}