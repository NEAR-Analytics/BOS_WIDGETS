{"tx_hash": "4ygZUdjs8QqDb2d4jTL3dgwghCDZENXZvf85fXGnEni5", "action_id_social": "Cp43fDTqiynZVjhwKs87zgXhoNtF7bfiMr3i88a43mFd-0-widget", "block_id": 105224336, "block_timestamp": "2023-11-08T13:33:13.956Z", "signer_id": "a_liutiev.near", "widget_name": "potlock.projects.listPage", "source_code": "const ownerId = \"nearhorizon.near\";\nconst urlProps = props.urlProps ?? {};\nconst entity = props.entity ?? \"projects\";\nconst filters = props.filters ?? [];\nconst renderItem = props.renderItem ?? ((item) => JSON.stringify(item));\nconst title = props.title ?? \"Registered Projects on \ud83e\uded5 Potlock\";\n\nconst getFilters = () => {\n  if (urlProps.sort) {\n    Storage.set(`${entity}-sort`, urlProps.sort);\n  }\n\n  return filters.reduce(\n    (acc, key) =>\n      urlProps[key]\n        ? Object.assign(acc, {\n            [key]: new Set(urlProps[key].split(\",\")),\n          })\n        : acc,\n    {}\n  );\n};\n\nconst selected = (options) => {\n  const selectedKeys = Object.keys(options);\n  return (\n    selectedKeys.length > 0 && selectedKeys.some((key) => options[key].size > 0)\n  );\n};\n\nconst url = ({ filters, sort }) => {\n  const urlString = \"\";\n\n  const options =\n    Object.keys(filters ?? {}).length > 0 ? filters : state.filters;\n\n  if (selected(options)) {\n    const selectedKeys = Object.keys(options);\n\n    urlString += selectedKeys\n      .map((key) => {\n        const values = Array.from(options[key]);\n        return `${key}=${values.join(\",\")}`;\n      })\n      .join(\"&\");\n  }\n\n  if (state.search) {\n    if (urlString.length > 0) {\n      urlString += \"&\";\n    }\n    urlString += `q=${state.search}`;\n  }\n\n  const sortOption = state.sort ?? sort;\n\n  if (sortOption) {\n    urlString += `&sort=${sortOption}`;\n  }\n\n  return urlString;\n};\n\nState.init({\n  filters: getFilters(),\n  search: urlProps.q,\n  sort: urlProps.sort,\n  items: null,\n  itemsIsFetched: false,\n});\n\nif (!state.itemsIsFetched) {\n  asyncFetch(`https://api-op3o.onrender.com/data/${entity}?${url()}`).then(\n    ({ body: items }) => State.update({ items, itemsIsFetched: true })\n  );\n\n  return <>\u23f3 Loading Projects...</>;\n}\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  padding: 0;\n  width: 100%;\n  gap: 2em;\n\n  & > h1 {\n    font-family: \"FK Grotesk\";\n    font-style: normal;\n    font-weight: 700;\n    font-size: 32px;\n    line-height: 40px;\n    color: #101828;\n  }\n`;\n\nreturn (\n  <Container>\n    <h1>{title}</h1>\n    <Widget\n      src={`${ownerId}/widget/Inputs.Filters`}\n      props={{\n        urlFilters: state.filters,\n        search: state.search,\n        url,\n        entity,\n        filters: props.filterOptions,\n        change: ({ filters, search }) => {\n          State.update({ filters, search, itemsIsFetched: false });\n        },\n      }}\n    />\n    <Widget\n      src={`${ownerId}/widget/Project.ListSection`}\n      props={{\n        entity,\n        count: state.items.length,\n        items: state.items,\n        sort: state.sort,\n        url,\n        descriptor: props.descriptor,\n        onSort: (sort) => {\n          State.update({ sort, itemsIsFetched: false });\n        },\n        renderItem,\n      }}\n    />\n  </Container>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/a_liutiev.near/widget/potlock.projects.listPage", "fact_widget_deployments_id": "a9682eead84c0d526761bb88b3a1e558", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 1}