{"tx_hash": "4ygZUdjs8QqDb2d4jTL3dgwghCDZENXZvf85fXGnEni5", "action_id_social": "Cp43fDTqiynZVjhwKs87zgXhoNtF7bfiMr3i88a43mFd-0-widget", "block_id": 105224336, "block_timestamp": "2023-11-08T13:33:13.956Z", "signer_id": "a_liutiev.near", "widget_name": "Inputs.Verticals", "source_code": "const ownerId = \"potlock.near\";\n\n/** @type {{text:string;value:string}[]} */\nconst options = [\n  { text: \"DeSci\", value: \"desci\" },\n  { text: \"DeFi\", value: \"defi\" },\n  { text: \"Gaming\", value: \"gaming\" },\n  { text: \"Metaverse\", value: \"metaverse\" },\n  { text: \"Commercial\", value: \"commercial\" },\n  { text: \"Sports and Entertainment\", value: \"sports-and-entertainment\" },\n  { text: \"Infrastructure\", value: \"infrastructure\" },\n  { text: \"Social\", value: \"social\" },\n  { text: \"Social Impact\", value: \"social-impact\" },\n  { text: \"Creative\", value: \"creative\" },\n  { text: \"Education\", value: \"education\" },\n  // { text: \"Other\", value: \"other\" },\n];\n\n/**\n * @param {string} old\n *\n * @returns {string[]}\n * */\nconst mapOldToNew = (old) => {\n  if (old === \"wallets\") {\n    return [\"infrastructure\"];\n  }\n  if (old === \"gaming/metaverse\") {\n    return [\"gaming\", \"metaverse\"];\n  }\n  if (old === \"nft\") {\n    return [\"creative\"];\n  }\n  if (old === \"dao\") {\n    return [\"social-impact\"];\n  }\n  return [old];\n};\n\n/**\n * @param {string} value\n *\n * @returns {{text:string;value:string}}\n * */\nconst mapValueToOption = (value) => {\n  const option = options.find((option) => option.value === value);\n  return (\n    option ?? {\n      text: value.charAt(0).toUpperCase() + value.substring(1),\n      value,\n    }\n  );\n};\n\n/**\n * @param {{text:string;value?:string;customOption?:boolean;}} option\n * @returns {string}\n * */\nconst mapOptionToValue = (option) => {\n  return option.customOption ? option.text.toLowerCase() : option.value;\n};\n\nreturn (\n  <Widget\n    src={`${ownerId}/widget/Inputs.MultiSelect`}\n    props={{\n      label: \"Verticals *\",\n      noLabel: props.noLabel,\n      placeholder: \"Start typing\",\n      options,\n      labelKey: \"text\",\n      value: props.verticals\n        .reduce((acc, value) => [...acc, ...mapOldToNew(value)], [])\n        .map(mapValueToOption),\n      onChange: (verticals) => props.update(verticals.map(mapOptionToValue)),\n      validate: () => {\n        if (!props.verticals) {\n          props.setError(\"Please select a vertical\");\n        }\n        if (\n          !mapOldToNew(props.verticals).every((vertical) =>\n            options.find(({ value }) => vertical === value)\n          )\n        ) {\n          props.setError(\"Please select a valid vetical\");\n        }\n      },\n      error: props.error,\n    }}\n  />\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/a_liutiev.near/widget/Inputs.Verticals", "fact_widget_deployments_id": "0d272e34686a05a575f7193b451b8f3f", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 6}