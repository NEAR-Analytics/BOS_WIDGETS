{"tx_hash": "DmKespKJun3zY32zKJGUSkmac8PasJLfgTpcnmg8fHfL", "action_id_social": "Hmh626bWVhkuQU6r6YEmm5giaWquVRSEWU3V5DfnCFNa-0-widget", "block_id": 112730006, "block_timestamp": "2024-02-13T06:43:47.141Z", "signer_id": "acvzii.tg", "widget_name": "hot", "source_code": "const contract = \"game.hot.tg\";\nconst balance = Near.view(contract, \"ft_balance_of\", {\n  account_id: context.accountId,\n});\n\n// Use and manipulate state\nState.init({ balance });\n\nconst onBtnClick = () => {\n  Near.call(contract, \"claim\", {});\n};\n\n// Define components\nconst miningForm = (\n  <>\n    <div class=\"text-center py-4\">\n      <button class=\"btn btn-primary btn-lg\" onClick={onBtnClick}>\n        \u6316\u6316\n      </button>\n    </div>\n  </>\n);\n\nconst notLoggedInWarning = <p class=\"text-center py-2\"> Login to continue </p>;\n\n// Render\nreturn (\n  <>\n    <div class=\"py-4\">\n      <h1 class=\"text-center py-4\">$HOT mining</h1>\n      <p class=\"text-center\">\n        \u9322\u9322: {context.accountId ? balance / 1000000 : 0} $HOT\n      </p>\n      {context.accountId ? miningForm : notLoggedInWarning}\n    </div>\n  </>\n);\n", "metadata": {"name": "", "tags": {"bos-gg": ""}}, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/acvzii.tg/widget/hot", "fact_widget_deployments_id": "e1a7c5aebfacf2c623fc86ba9bd1d6e6", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}