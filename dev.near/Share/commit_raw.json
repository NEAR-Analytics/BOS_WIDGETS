{"tx_hash": "BhDr4wSHrzYp5ywEwjnjTzjzsMMBMe7tWMVBcP4yYSz3", "action_id_social": "ASajVFqA6hAbJyfQEyBH37Djr9L3VmeK7UYVnWBNnACw-0-widget", "block_id": 120436508, "block_timestamp": "2024-06-04T18:08:58.503Z", "signer_id": "dev.near", "widget_name": "Share", "source_code": "const API_URL = \"https://annotation.nearspace.info/api\";\nconst PROBLEM_ID = 1;\nconst STATUS_ANNOTATION_PENDING = 0;\nconst STORAGE_KEY = `session_storage`;\nconst ACCOUNT_ID = \"dev.near\";\nconst SIGNATURE_RECIPIENT = \"ai.near\";\n\nconst { annotationId } = props;\nif (!annotationId) {\n  return \"Provide annotation ids\";\n}\n\nconst referer = fetch(`${API_URL}/get_referer/`, { method: \"POST\" }).body;\nif (!referer) return \"\";\nconst CALLBACK_URL = `${referer}${ACCOUNT_ID}/widget/Share?annotationId=${annotationId}`;\n\nState.init({\n  resetSession: false,\n  pendingAuth: false,\n  pendingRequest: false,\n\n  theme: styled.div`${css}`,\n});\n\nconst onAuth = (data) => {\n  const isSessionValid = !!data.is_signature_valid && !!data.session_id;\n  console.log(\"onAuth Index\", data, isSessionValid);\n  State.update({\n    sessionId: data.session_id,\n    isSessionValid,\n    resetSession: false,\n    pendingAuth: false,\n  });\n  Storage.privateSet(STORAGE_KEY, data.session_id);\n};\n\nconst hashParams = (window?.location?.hash ?? \"\")\n  .split(\"&\")\n  .reduce((acc, param) => {\n    const [key, value] = param.split(\"=\");\n    if (key) {\n      acc[decodeURIComponent(key)] = decodeURIComponent(value);\n    }\n    return acc;\n  }, {});\n\nconsole.log(\"hash,\", hashParams);\n\nconst onLogout = () => {\n  console.log(\"onLogout\");\n  Storage.privateSet(STORAGE_KEY, null);\n  State.update({\n    isSessionValid: false,\n    sessionId: null,\n    resetSession: true,\n    pendingRequest: false,\n    pendingAuth: false,\n  });\n};\n\nconst onTask = (data) => {\n  console.log(\"Index onTask\", data);\n  if (!data.is_session_valid) {\n    State.update({\n      resetSession: true,\n      isSessionValid: false,\n      pendingRequest: false,\n    });\n  }\n};\n\nconst sessionContainer = (\n  <>\n    <Widget\n      src={`${ACCOUNT_ID}/widget/op-session`}\n      props={{\n        storageKey: STORAGE_KEY,\n        message: \"Welcome to NEAR.AI\",\n        recipient: SIGNATURE_RECIPIENT,\n        callbackUrl: CALLBACK_URL,\n        apiUrl: `${API_URL}/auth/`,\n        signature: hashParams?.signature,\n        publicKey: hashParams?.publicKey,\n        onAuth,\n        onLogout,\n        className: \"btn btn-primary p-2\",\n        resetSession: state.resetSession,\n        setResetSession: (resetSession) => {\n          console.log(\"setResetSession\", resetSession);\n          State.update({ resetSession });\n        },\n        pendingAuth: state.pendingAuth,\n        setPendingAuth: (pendingAuth) => {\n          State.update({ pendingAuth });\n        },\n      }}\n    />\n  </>\n);\n\nconst showSessionContainer =\n  state.resetSession || (!state.pendingRequest && !state.isSessionValid);\n\nconst Theme = state.theme;\n\nconsole.log(\n  \"Index: \",\n  state.resetSession,\n  state.pendingRequest,\n  state.isSessionValid,\n  \"showSessionContainer\",\n  showSessionContainer,\n  state.sessionId\n);\n\nreturn (\n  <Theme style={{ padding: \"0 20px\" }}>\n    {state.pendingRequest && <Widget src={`${ACCOUNT_ID}/widget/op-loading`} />}\n    {state.sessionId && (\n      <>\n        Annotation: {annotationId}\n        <Widget\n          src={`${ACCOUNT_ID}/widget/op-task`}\n          props={{\n            apiUrl: API_URL,\n            sessionId: state.sessionId,\n            storageKey: STORAGE_KEY,\n            annotationId,\n            problemId: PROBLEM_ID,\n            adminMode: true,\n            onRequest: onTask,\n            pendingRequest: state.pendingRequest,\n            setPendingRequest: (pendingRequest) => {\n              State.update({ pendingRequest });\n            },\n          }}\n        />\n      </>\n    )}\n    {showSessionContainer && sessionContainer}\n  </Theme>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/dev.near/widget/Share", "fact_widget_deployments_id": "51f890bf7b63ed4fa99bb9292373c878", "inserted_timestamp": "2024-06-04T19:08:15.837Z", "modified_timestamp": "2024-06-04T19:08:15.837Z", "__row_index": 3}