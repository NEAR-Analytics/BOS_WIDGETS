{"tx_hash": "GrXR3rrHbwD8RuSZDpdYGpD5T966jxP7X4vEwdEHaAth", "action_id_social": "GHRSRhTsQSgKnKHUuQSVrunJzbqRsT6uVFW1ezmqGkzD-0-widget", "block_id": 120353629, "block_timestamp": "2024-06-03T14:47:01.062Z", "signer_id": "dev.near", "widget_name": "Admin", "source_code": "const ACCOUNT_ID = \"dev.near\";\nconst API_URL = \"https://annotation.nearspace.info/api\";\nconst PROBLEM_ID = 1;\nconst STATUS_ANNOTATION_PENDING = 0;\nconst SIGNATURE_RECIPIENT = \"ai.near\";\nconst STORAGE_KEY = `session_storage`;\n// const CALLBACK_URL = `https://viewer-six.vercel.app/${ACCOUNT_ID}/widget/op-index`;\n\nconst CSS_URL =\n  \"https://gist.githubusercontent.com/zavodil/10ed1d07c893e04571332f1cb2408226/raw/d65b8f258eb23217c5f58d05248fdb8aab4c5768/add.style.css\";\n\nconst css = fetch(CSS_URL).body;\nif (!css) return \"\";\n\n// TODO - replace `referer` with window.location\nconst referer = fetch(`${API_URL}/get_referer/`, { method: \"POST\" }).body;\nif (!referer) return \"\";\nconst CALLBACK_URL = `${referer}${ACCOUNT_ID}/widget/Index`;\n\nState.init({\n  showMessage: true,\n  showSpec: true,\n  showDiff: true,\n  showPrompt: true,\n  resetSession: false,\n  pendingAuth: false,\n  pendingRequest: false,\n  //sessionId: localSessionId,\n\n  theme: styled.div`${css}`,\n});\n\nconst Theme = state.theme;\n\nif (!context.accountId) {\n  return (\n    <Theme>\n      <div class=\"row h-100 text-center\">\n        <div class=\"col-sm-12 my-auto\">\n          <h2>Annotation platforn</h2>\n\n          <div class=\"pt-3\" role=\"button\">\n            Sign in to Continue\n          </div>\n        </div>\n      </div>\n    </Theme>\n  );\n}\n\nconst getTask = () => {\n  console.log(\"index get Task\", state.sessionId);\n  State.update({ pendingRequest: true });\n  asyncFetch(`${API_URL}/admin/get_all_annotation_headers/`, {\n    method: \"POST\",\n    body: JSON.stringify({\n      session_id: state.sessionId,\n      account_id: context.accountId,\n      problem_id: PROBLEM_ID,\n      status: STATUS_ANNOTATION_PENDING,\n    }),\n  }).then((res) => {\n    if (res.ok) {\n      if (res.body.is_session_valid) {\n        console.log(\"Index session valid\");\n        let annotationId = (res.body.annotations ?? [])?.[0]?.id ?? 0;\n        State.update({\n          annotations: res.body.annotations ?? [],\n          annotationId,\n          selectedAnnotationIds: [annotationId],\n          requestTask: (res.body.annotations ?? []).length == 0,\n          isSessionValid: res.body.is_session_valid,\n          pendingRequest: false,\n        });\n      } else {\n        console.log(\"is_session_valid FALSE. state\", state);\n\n        State.update({\n          //resetSession: true,\n          resetSession: !state.resetSession,\n          sessionId: null,\n          isSessionValid: false,\n          pendingRequest: false,\n        });\n      }\n    }\n    console.log(\"get_all_annotation_headers resp\", res.ok, res.body);\n  });\n};\n\nconst onAuth = (data) => {\n  const isSessionValid = !!data.is_signature_valid && !!data.session_id;\n  console.log(\"onAuth Index\", data, isSessionValid);\n  State.update({\n    sessionId: data.session_id,\n    isSessionValid,\n    resetSession: false,\n    pendingAuth: false,\n  });\n  Storage.privateSet(STORAGE_KEY, data.session_id);\n};\n\nconst hashParams = (window?.location?.hash ?? \"\")\n  .split(\"&\")\n  .reduce((acc, param) => {\n    const [key, value] = param.split(\"=\");\n    if (key) {\n      acc[decodeURIComponent(key)] = decodeURIComponent(value);\n    }\n    return acc;\n  }, {});\n\nconsole.log(\"hash,\", hashParams);\n\nconst onLogout = () => {\n  console.log(\"onLogout\");\n  Storage.privateSet(STORAGE_KEY, null);\n  State.update({\n    isSessionValid: false,\n    sessionId: null,\n    resetSession: true,\n    pendingRequest: false,\n    pendingAuth: false,\n  });\n};\n\nconst sessionContainer = (\n  <>\n    <Widget\n      src={`${ACCOUNT_ID}/widget/op-session`}\n      props={{\n        storageKey: STORAGE_KEY,\n        message: \"Welcome to NEAR.AI\",\n        recepient: SIGNATURE_RECIPIENT,\n        callbackUrl: CALLBACK_URL,\n        apiUrl: `${API_URL}/auth/`,\n        signature: hashParams?.signature,\n        publicKey: hashParams?.publicKey,\n        onAuth,\n        onLogout,\n        className: \"btn btn-primary p-2\",\n        resetSession: state.resetSession,\n        setResetSession: (resetSession) => {\n          console.log(\"setResetSession\", resetSession);\n          State.update({ resetSession });\n        },\n        pendingAuth: state.pendingAuth,\n        setPendingAuth: (pendingAuth) => {\n          State.update({ pendingAuth });\n        },\n      }}\n    />\n  </>\n);\n\nconst onTask = (data) => {\n  console.log(\"Index onTask\", data);\n  if (!data.is_session_valid) {\n    State.update({\n      resetSession: true,\n      isSessionValid: false,\n      pendingRequest: false,\n    });\n  }\n};\n\nlet isGetTask = false;\n\nif (!state.pendingRequest && !state.pendingAuth && !state.requestTask) {\n  if (state.sessionId && !state.annotations) {\n    isGetTask = true;\n  }\n}\n\nif (isGetTask) {\n  getTask();\n}\n\nconst showSessionContainer =\n  state.resetSession || (!state.pendingRequest && !state.isSessionValid);\n\nconst showRequestTaskContainer =\n  !showSessionContainer && state.isSessionValid && state.requestTask;\nconst showTaskContainer =\n  !showRequestTaskContainer &&\n  !showSessionContainer &&\n  state.isSessionValid &&\n  (state.annotations ?? []).length > 0;\n\nconst taskContainer = (annotationId) => (\n  <Widget\n    src={`${ACCOUNT_ID}/widget/op-admin-task`}\n    props={{\n      sessionId: state.sessionId,\n      apiUrl: API_URL,\n      annotationId: annotationId ?? (state.annotations ?? [])?.[0]?.id,\n      problemId: PROBLEM_ID,\n      onRequest: onTask,\n      pendingRequest: state.pendingRequest,\n      showPrompt: state.showPrompt,\n      showDiff: state.showDiff,\n      showMessage: state.showMessage,\n      showSpec: state.showSpec,\n      setPendingRequest: (pendingRequest) => {\n        State.update({ pendingRequest });\n      },\n    }}\n  />\n);\n\nconsole.log(\n  \"Index: \",\n  state.pendingRequest,\n  state.isSessionValid,\n  \"showSessionContainer\",\n  showSessionContainer\n);\n\nreturn (\n  <Theme class=\"w-100\">\n    {state.pendingRequest && <Widget src={`${ACCOUNT_ID}/widget/op-loading`} />}\n\n    {showSessionContainer && sessionContainer}\n\n    {!showSessionContainer && (\n      <div class=\"container\">\n        <div class=\"row align-items-start alert alert-light\" role=\"alert\">\n          <div class=\"col\">\n            <strong>Settings:</strong>\n          </div>\n          <div class=\"col\">\n            <label class=\"list-group-item\">\n              <input\n                class=\"form-check-input me-1\"\n                type=\"checkbox\"\n                checked={!!state.showMessage}\n                onChange={(e) =>\n                  State.update({ showMessage: e.target.checked })\n                }\n              />\n              Show messages\n            </label>\n          </div>{\" \"}\n          <div class=\"col\">\n            <label class=\"list-group-item\">\n              <input\n                class=\"form-check-input me-1\"\n                type=\"checkbox\"\n                checked={!!state.showSpec}\n                onChange={(e) => State.update({ showSpec: e.target.checked })}\n              />\n              Show specs\n            </label>\n          </div>{\" \"}\n          <div class=\"col\">\n            <label class=\"list-group-item\">\n              <input\n                class=\"form-check-input me-1\"\n                type=\"checkbox\"\n                checked={!!state.showDiff}\n                onChange={(e) => State.update({ showDiff: e.target.checked })}\n              />\n              Show specs diffs\n            </label>\n          </div>{\" \"}\n          <div class=\"col\">\n            <label class=\"list-group-item\">\n              <input\n                class=\"form-check-input me-1\"\n                type=\"checkbox\"\n                checked={!!state.showPrompt}\n                onChange={(e) => State.update({ showPrompt: e.target.checked })}\n              />\n              Show prompts\n            </label>\n          </div>\n        </div>\n\n        <div class=\"row\">\n          <div class=\"col-sm pe-2\" style={{ maxWidth: \"25%\" }}>\n            <h6>User tasks:</h6>\n            <ul class=\"list-group\">\n              {(state.annotations ?? []).map((annotation) => (\n                <div\n                  role=\"button\"\n                  class={`list-group-item ${\n                    !state.requestTask &&\n                    (state.selectedAnnotationIds ?? []).includes(annotation.id)\n                      ? \"active\"\n                      : \"\"\n                  }`}\n                  onClick={() => {\n                    let selectedAnnotationIds = state.selectedAnnotationIds;\n                    const index = state.selectedAnnotationIds.indexOf(\n                      annotation.id\n                    );\n                    if (index > -1) {\n                      selectedAnnotationIds.splice(index, 1);\n                    } else {\n                      selectedAnnotationIds.push(annotation.id);\n                    }\n                    State.update({\n                      annotationId: annotation.id,\n                      selectedAnnotationIds,\n                      requestTask: false,\n                    });\n                  }}\n                >\n                  {annotation.title} / {annotation.account_id}\n                </div>\n              ))}\n            </ul>\n          </div>\n          {(!showTaskContainer ||\n            (state.selectedAnnotationIds ?? []).length == 0) && (\n            <div\n              class=\"col align-middle justify-content-center align-self-center text-center\"\n              style={{ minHeight: \"200px\" }}\n            >\n              Click on user task to view\n            </div>\n          )}\n\n          {showTaskContainer &&\n            (state.selectedAnnotationIds ?? []).map((annotationId) => (\n              <div class=\"col-sm\">{taskContainer(annotationId)}</div>\n            ))}\n        </div>\n      </div>\n    )}\n\n    <div class=\"mt-5\">\n      {!showSessionContainer && (\n        <div class=\"d-block\">\n          <button disabled={pendingRequest} onClick={() => onLogout()}>\n            {state.isSessionValid\n              ? \"Logout\"\n              : state.pendingAuth\n              ? \"Restart Login\"\n              : \"Log In\"}\n          </button>\n        </div>\n      )}\n    </div>\n  </Theme>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/dev.near/widget/Admin", "fact_widget_deployments_id": "0ea0aae505ca0e3b838f2b25c87c5401", "inserted_timestamp": "2024-06-03T16:43:44.628Z", "modified_timestamp": "2024-06-03T16:43:44.628Z", "__row_index": 0}