{"tx_hash": "E3WnfNLVxbwieshD392y8MsTBPDTjtkonSX42eNCejb7", "action_id_social": "7oNB6rv2YLui4p7449SDt2wYtP9CY98itkRRW57m19F1-0-widget", "block_id": 104757827, "block_timestamp": "2023-11-02T10:56:19.015Z", "signer_id": "dapplets.near", "widget_name": "N", "source_code": "const hashtag = props.hashtag;\nconst groupId = props.groupId;\n\nif (!state || state.hashtag !== hashtag || state.groupId !== groupId) {\n  State.update({\n    feedIndex: hashtag ? \"hashtag\" : groupId ? \"group\" : \"premium\",\n    hashtag,\n    groupId,\n  });\n}\n\nconst options = [\n  {\n    id: \"premium\",\n    title: \"Premium\",\n  },\n  {\n    id: \"following\",\n    title: \"Following\",\n    disabled: !context.accountId,\n  },\n  {\n    id: \"all\",\n    title: \"All Posts\",\n  },\n  {\n    id: \"menu\",\n    title: \"Menu\",\n    mobileOnly: true,\n  },\n];\n\nif (state.hashtag) {\n  options.splice(\n    options.findIndex(({ id }) => id === \"all\"),\n    1,\n    {\n      id: \"hashtag\",\n      title: `#${state.hashtag}`,\n    }\n  );\n} else if (state.groupId) {\n  options.splice(\n    options.findIndex(({ id }) => id === \"all\"),\n    1,\n    {\n      id: \"group\",\n      title: `Group`,\n    }\n  );\n}\n\nconst [followingAccounts, setFollowingAccounts] = useState([]);\n\nconst graph = context.accountId\n  ? Social.keys(`${context.accountId}/graph/follow/*`, \"final\")\n  : {};\nuseEffect(() => {\n  if (graph !== null) {\n    const accounts = Object.keys(graph[context.accountId].graph.follow || {});\n    accounts.push(context.accountId);\n    setFollowingAccounts(accounts);\n  }\n}, [graph, context.accountId]);\n\nconst premiumData = Social.get(\n  \"premium.social.near/badge/premium/accounts/*\",\n  \"final\"\n);\n\nconst [premiumAccounts, setPremiumAccounts] = useState([]);\nconst [mergedAccounts, setMergedAccounts] = useState([]);\nconst [premium, setPremium] = useState(false);\nconst [premiumExpiringSoon, setPremiumExpiringSoon] = useState(false);\n\nconst ExpiringSoonDuration = 604800000; // 7 * 24 * 60 * 60 * 1000;\n\nuseEffect(() => {\n  if (premiumData) {\n    const now = Date.now();\n    setPremium(false);\n    setPremiumExpiringSoon(false);\n    setPremiumAccounts(\n      Object.entries(premiumData)\n        .filter(([accountId, expiration]) => {\n          expiration = parseFloat(expiration);\n          const active = expiration > now;\n          if (accountId === context.accountId && active) {\n            setPremium(true);\n            setPremiumExpiringSoon(expiration - now < ExpiringSoonDuration);\n          }\n          return active;\n        })\n        .map((a) => a[0])\n    );\n  }\n}, [premiumData]);\n\nuseEffect(() => {\n  setMergedAccounts([...new Set([...followingAccounts, ...premiumAccounts])]);\n}, [premiumAccounts, followingAccounts]);\n\nconst Wrapper = styled.div`\n  margin-top: calc(-1 * var(--body-top-padding, 0));\n  @media(min-width: 992px) {\n    .b-s {\n      border-left: 1px solid #eee;\n    }\n    .b-e {\n      border-right: 1px solid #eee;\n    }\n  }\n`;\n\nconst Nav = styled.div`\n  .nav-pills {\n    background: #fbfbfb;\n    font-weight: 500;\n    --bs-nav-pills-border-radius: 0;\n    --bs-nav-link-color: #000;\n    --bs-nav-pills-link-active-color: #000;\n    --bs-nav-pills-link-active-bg: #fbfbfb;\n    --bs-nav-link-padding-y: 0.75rem;\n    border-bottom: 1px solid #eee;\n    padding-top: 3px;\n  }\n  .nav-link.active {\n    border-bottom: 3px solid rgb(13, 110, 253);\n  }\n\n  .nav-item:not(:has(> .disabled)):hover {\n    background: rgba(13, 110, 253, 0.15);\n  }\n\n  margin: 0 -12px;\n`;\n\nconst isPremiumFeed = state.feedIndex === \"premium\";\n\nreturn (\n  <Wrapper className=\"row\">\n    <div className=\"col-lg-8 b-e b-s\">\n      <Nav>\n        <ul className=\"nav nav-pills nav-fill\">\n          {options.map((option, i) => (\n            <li\n              className={`nav-item ${option.mobileOnly ? \"d-lg-none\" : \"\"}`}\n              key={i}\n            >\n              <button\n                className={`nav-link ${\n                  state.feedIndex === option.id ? \"active\" : \"\"\n                } ${option.disabled ? \"disabled\" : \"\"}`}\n                aria-disabled={!!option.disabled}\n                onClick={() =>\n                  !option.disabled && State.update({ feedIndex: option.id })\n                }\n              >\n                {option.title}\n              </button>\n            </li>\n          ))}\n        </ul>\n      </Nav>\n      <div\n        className={`${state.feedIndex === \"menu\" ? \"d-none\" : \"\"} d-lg-block`}\n      >\n        <Widget\n          key=\"onboarding\"\n          loading=\"\"\n          src=\"mob.near/widget/N.ProfileOnboarding\"\n          props={{}}\n        />\n        {state.feedIndex === \"group\" ? (\n          <Widget\n            src=\"mob.near/widget/N.Group\"\n            props={{ groupId: state.groupId }}\n          />\n        ) : (\n          <>\n            {context.accountId && isPremiumFeed && !premium && (\n              <Widget\n                key=\"not-premium\"\n                loading=\"\"\n                src=\"mob.near/widget/N.NotPremiumCompose\"\n                props={{}}\n              />\n            )}\n            {context.accountId && isPremiumFeed && premiumExpiringSoon && (\n              <Widget\n                key=\"expiring-premium\"\n                loading=\"\"\n                src=\"mob.near/widget/N.NotPremiumCompose\"\n                props={{\n                  text: \"Your Premium subscription expiring soon!\",\n                  buttonText: \"Renew subscription\",\n                }}\n              />\n            )}\n            {context.accountId && (\n              <Widget\n                key=\"compose\"\n                loading=\"\"\n                src=\"mob.near/widget/MainPage.N.Compose\"\n                props={{}}\n              />\n            )}\n            {state.feedIndex === \"hashtag\" ? (\n              <Widget\n                key=\"hash-feed\"\n                src=\"mob.near/widget/Hashtag.N.Feed\"\n                props={{ hashtag: state.hashtag }}\n              />\n            ) : isPremiumFeed ? (\n              <Widget\n                key=\"premium-feed\"\n                src=\"dapplets.near/widget/MainPage.N.Feed\"\n                props={{ accounts: mergedAccounts, isPremiumFeed }}\n              />\n            ) : (\n              <Widget\n                key=\"reg-feed\"\n                src=\"dapplets.near/widget/MainPage.N.Feed\"\n                props={{\n                  accounts:\n                    state.feedIndex === \"following\"\n                      ? followingAccounts\n                      : undefined,\n                }}\n              />\n            )}\n          </>\n        )}\n      </div>\n    </div>\n    <div\n      className={`${\n        state.feedIndex !== \"menu\" ? \"d-none\" : \"pt-3\"\n      } d-lg-block col-lg-4 b-e`}\n    >\n      <Widget src=\"mob.near/widget/Welcome.RHS\" props={props} />\n    </div>\n  </Wrapper>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/dapplets.near/widget/N", "fact_widget_deployments_id": "31ffa5b7b2cac3a8f2eecb859b08f8f4", "inserted_timestamp": "2023-11-02T12:47:53.439Z", "modified_timestamp": "2023-11-02T12:47:53.439Z", "__row_index": 0}