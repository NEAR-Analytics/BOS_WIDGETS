{"tx_hash": "3SXokLe9ynp27jxcbCBZV4RTrgnF8B5kHeHvYKi6Qr4U", "action_id_social": "54FUiU5yLpneSvzMuT5RruKAK4KT8RLPFvrEYTFUJyi1-0-widget", "block_id": 98192897, "block_timestamp": "2023-08-06T09:56:45.870Z", "signer_id": "nearui.near", "widget_name": "index", "source_code": "const NDCUI_ACCOUNT = \"nearui.near\";\n\nState.init({\n  widget: state.widget ?? props.widget ?? \"overview\",\n});\n\nconst data = Social.keys(`${NDCUI_ACCOUNT}/widget/*`, \"final\", {\n  return_type: \"BlockHeight\",\n});\n\nif (!data) return \"\";\n\nfunction convertToNestedObject(obj) {\n  const result = {};\n  Object.keys(obj)\n    .filter((key) => key !== \"index\")\n    .forEach((key) => {\n      let parts = key.split(\".\");\n      let firstPart = parts.shift();\n      if (parts[1] === \"demo\") {\n        return;\n      }\n      if (parts.length) {\n        result[firstPart] = result[firstPart] || {};\n        result[firstPart][parts.join(\".\")] = obj[key];\n      } else {\n        result[firstPart] = obj[key];\n      }\n    });\n  return result;\n}\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  font-family: \"Open Sans\", sans-serif;\n\n  @media (max-width: 800px) {\n    flex-wrap: wrap;\n  }\n`;\n\nconst Sidebar = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  background: #fff;\n  box-shadow: rgba(99, 99, 99, 0.2) 0px 2px 8px 0px;\n  border-radius: 8px;\n  min-width: 240px;\n  width: 240px;\n  padding: 40px 17px 30px;\n  z-index: 1;\n  bottom: 0;\n  margin-bottom: 40px;\n  height: fit-content;\n\n  @media (max-width: 800px) {\n    width: 100%;\n  }\n\n  h3 {\n    margin: 0;\n    font-size: 14px;\n    font-weight: 500;\n    color: #999;\n    padding: 6px 21px;\n  }\n\n  a {\n    display: block;\n    font-size: 14px;\n    font-weight: 600;\n    padding: 6px 21px;\n    border-radius: 4px;\n    color: #141414;\n    cursor: pointer;\n    transition: all 0.2s ease-in-out;\n    text-decoration: none;\n    text-transform: capitalize;\n  }\n\n  a.active {\n    background: #edf4fc !important;\n    color: #4498e0 !important;\n  }\n\n  a:hover {\n    color: #4498e0 !important;\n  }\n`;\n\nconst Content = styled.div`\n  flex: 1;\n  margin-left: 20px;\n  min-height: 70vh;\n  margin-bottom: auto;\n\n  @media (max-width: 800px) {\n    width: 100%;\n    padding: 0;\n    margin: 0;\n  }\n`;\n\nconst otherItems = {\n  \"Developer tools\": [\n    {\n      name: (\n        <>\n          bOS workspace <i className=\"bi bi-box-arrow-up-right\"></i>\n        </>\n      ),\n      link: \"https://github.com/sekaiking/bos-workspace\",\n      otherProps: {\n        target: \"_blank\",\n      },\n    },\n  ],\n};\n\nconst mock = {\n  index: 0,\n  \"Data.ChartJs\": 0,\n  \"Data.Balances\": 0,\n  \"Data.Balances.demo\": 0,\n  \"Typography.OpenSansFont\": 0,\n  \"Typography.Text\": 0,\n  \"Typography.Text.demo\": 0,\n  \"Navigation.Paginate\": 0,\n  \"Navigation.Steps\": 0,\n  \"Navigation.Steps.demo\": 0,\n  \"Feedback.Spinner\": 0,\n  \"Feedback.Skeleton\": 0,\n  \"Feedback.Skeleton.demo\": 0,\n  \"Input.Select\": 0,\n  \"Navigation.PrevNext\": 0,\n  \"Element.Token\": 0,\n  \"Input.Button\": 0,\n  \"Input.Button.demo\": 0,\n  \"Layout.Modal\": 0,\n  \"Layout.Header\": 0,\n  \"Element.User\": 0,\n  \"Element.User.demo\": 0,\n  \"Input.Text\": 0,\n  \"Input.Text.demo\": 0,\n  \"Input.Checkbox\": 0,\n  \"Input.Checkbox.demo\": 0,\n  \"Social.FollowButton\": 0,\n  \"Social.ImageUpload\": 0,\n  overview: 0,\n};\nconst widgets = mock ?? data[NDCUI_ACCOUNT].widget;\nconst widgetsObj = convertToNestedObject(widgets);\n\nconst tabContent = () => {\n  const hasDemo = widgets[`${state.widget}.demo`] !== undefined;\n  return (\n    <Content className=\"container\">\n      <div>\n        <Widget\n          src={`${NDCUI_ACCOUNT}/widget/${state.widget}${\n            hasDemo ? \".demo\" : \"\"\n          }`}\n          props={{\n            demoMode: true,\n          }}\n        />\n      </div>\n    </Content>\n  );\n};\n\nconst widgetsKeys = Object.keys(widgetsObj)\n  .sort((a, b) => {\n    if (a.toLowerCase() > b.toLowerCase()) return 1;\n    if (a.toLowerCase() < b.toLowerCase()) return -1;\n    return 0;\n  })\n  .sort((a, b) => {\n    if (typeof widgetsObj[a] === \"object\") return 1;\n    return -1;\n  });\nreturn (\n  <Wrapper>\n    <Sidebar>\n      {widgetsKeys.map((folder) => {\n        if (typeof widgetsObj[folder] !== \"object\") {\n          return (\n            <a\n              href={`#/${NDCUI_ACCOUNT}/widget/index?widget=${folder}`}\n              onClick={() => {\n                State.update({\n                  widget: folder,\n                });\n              }}\n              className={state.widget === folder ? \"active\" : \"\"}\n            >\n              {folder}\n            </a>\n          );\n        }\n        return (\n          <div>\n            <h3>{folder}</h3>\n            {Object.keys(widgetsObj[folder])\n              .sort((a, b) => {\n                if (a.toLowerCase() > b.toLowerCase()) return 1;\n                if (a.toLowerCase() < b.toLowerCase()) return -1;\n                return 0;\n              })\n              .map((widget) => {\n                const fullWidgetName = `${folder}.${widget}`;\n                return (\n                  <a\n                    href={`#/${NDCUI_ACCOUNT}/widget/index?widget=${fullWidgetName}`}\n                    onClick={() => {\n                      State.update({\n                        widget: fullWidgetName,\n                      });\n                    }}\n                    className={state.widget === fullWidgetName ? \"active\" : \"\"}\n                  >\n                    {widget}\n                  </a>\n                );\n              })}\n          </div>\n        );\n      })}\n      {Object.keys(otherItems).map((folder) => {\n        return (\n          <div>\n            <h3>{folder}</h3>\n            {otherItems[folder].map((item) => {\n              return (\n                <a href={item.link} {...item.otherProps}>\n                  {item.name}\n                </a>\n              );\n            })}\n          </div>\n        );\n      })}\n    </Sidebar>\n    {tabContent()}\n    <Widget src={`${NDCUI_ACCOUNT}/widget/Typography.OpenSansFont`} />\n  </Wrapper>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/nearui.near/widget/index", "fact_widget_deployments_id": "fde909e193274acf511c62742ccb33d1", "inserted_timestamp": "2023-08-06T11:32:20.591Z", "modified_timestamp": "2023-08-06T11:32:20.591Z", "__row_index": 14}