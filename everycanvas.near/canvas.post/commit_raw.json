{"tx_hash": "F98Cbq7WBXQHSNAAh272C5GjRbHyJ8ucJJ7gCYMRpkyd", "action_id_social": "71Mk8HzvZxsNJdFkLQu58QDm3hngtACSL1SBL2hF7uLm-0-widget", "block_id": 119359673, "block_timestamp": "2024-05-20T17:41:53.121Z", "signer_id": "everycanvas.near", "widget_name": "canvas.post", "source_code": "const Wrapper = styled.div`\n  max-width: 400px;\n  margin: 0 auto;\n`;\n\nconst TabContent = styled.div`\n  margin-top: 1rem;\n`;\n\nconst Form = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  width: 100%;\n`;\nconst Label = styled.label`\n  font-weight: bold;\n`;\n\nconst Input = styled.input`\n  padding: 5px;\n`;\n\nconst Select = styled.select`\n  padding: 8px;\n`;\n\nconst FormGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Statistics = styled.div`\n  padding: 10px;\n  background-color: #f3f3f3;\n  border-radius: 5px;\n`;\n\nconst handlePost = () => {\n  Social.set({\n    // save for embedding a canvas\n    post: {\n      main: JSON.stringify({\n        content: \"[EMBED](everycanvas.near/widget/p.view?path=...blockHeight=)\",\n        shapes: selectedShapes,\n      }),\n    },\n    index: {\n      post: JSON.stringify([\n        {\n          key: \"main\",\n          value: {\n            type: \"md\",\n          },\n        },\n        {\n          key: props.item, // the canvas you're on\n          value: {\n            type: \"canvas\",\n          },\n        },\n      ]),\n    },\n  });\n};\n\nconst shapes = JSON.parse(props.shapes ?? \"[]\");\n\nconst calculateStatistics = (shapesData) => {\n  const initialStats = {\n    typeCounts: {},\n    totalPosition: { x: 0, y: 0 },\n    count: 0,\n  };\n\n  const stats = shapesData.reduce((accumulator, shape) => {\n    // Count types\n    accumulator.typeCounts[shape.type] = (accumulator.typeCounts[shape.type] || 0) + 1;\n\n    // Sum positions\n    accumulator.totalPosition.x += shape.x;\n    accumulator.totalPosition.y += shape.y;\n\n    // Increment count for average calculation\n    accumulator.count++;\n\n    return accumulator;\n  }, initialStats);\n\n  // Calculate averages\n  const averagePosition = {\n    x: stats.totalPosition.x / stats.count,\n    y: stats.totalPosition.y / stats.count,\n  };\n\n  return {\n    typeCounts: stats.typeCounts,\n    averagePosition: averagePosition,\n  };\n};\n\nconst stats = calculateStatistics(shapes);\n\nreturn (\n  <Wrapper>\n    <h3>post shapes</h3>\n    <Form>\n      <FormGroup>\n        <Label>shapes</Label>\n        <textarea className=\"form-control\" rows={5} value={JSON.stringify(shapes)} />\n      </FormGroup>\n      <Statistics>\n        <p>\n          <strong>Types of Shapes:</strong> {JSON.stringify(stats.typeCounts)}\n        </p>\n        <p>\n          <strong>Average Position:</strong> X: {stats.averagePosition.x.toFixed(2)}, Y:{\" \"}\n          {stats.averagePosition.y.toFixed(2)}\n        </p>\n        {/* Display other stats */}\n      </Statistics>\n\n      <FormGroup>\n        <button className=\"btn btn-success mb-1\" onClick={handlePost} disabled={shapes.length <= 0}>\n          Post\n        </button>\n      </FormGroup>\n    </Form>\n  </Wrapper>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/everycanvas.near/widget/canvas.post", "fact_widget_deployments_id": "9996515973c90c2612de091809620b97", "inserted_timestamp": "2024-05-20T19:51:25.009Z", "modified_timestamp": "2024-05-20T19:51:25.009Z", "__row_index": 0}