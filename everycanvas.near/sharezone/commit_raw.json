{"tx_hash": "4mcinremnM6HSk6QnZWhjqTYJb2NCMWtr52uVsejRgCp", "action_id_social": "Hm5hNGqMh3tN6GHAgLbRdKp75cESwACK2kdfp3fRPsds-0-widget", "block_id": 106286596, "block_timestamp": "2023-11-22T16:15:57.695Z", "signer_id": "everycanvas.near", "widget_name": "sharezone", "source_code": "const ModalBackdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1001;\n`;\n\nconst ModalBox = styled.div`\n  background: white;\n  min-width: 400px;\n  max-width: 600px;\n  padding: 20px;\n  border-radius: 8px;\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);\n  z-index: 1002;\n`;\n\nconst ModalHeader = styled.div`\n  display: flex;\n  justify-content: end;\n  align-items: center;\n`;\n\nconst CloseButton = styled.button`\n  background: #f44336;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  padding: 10px 15px;\n  cursor: pointer;\n  float: right;\n`;\n\nconst ModalContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-width: 300px;\n  padding: 10px;\n`;\n\nfunction Modal({ onClose, children }) {\n  return (\n    <ModalBackdrop>\n      <ModalBox>\n        <ModalHeader>\n          <CloseButton onClick={onClose}>Close</CloseButton>\n        </ModalHeader>\n        <ModalContent>{children}</ModalContent>\n      </ModalBox>\n    </ModalBackdrop>\n  );\n}\n\nconst {\n  // these are available to plugins from the ShareZone\n  getSelectedShapes,\n  getSnapshot,\n  deleteShapes,\n  getShapePageBounds,\n  createShapeId,\n  createShape,\n  updateShape,\n  asSvg,\n  asPng,\n  asDataUrl,\n} = props;\n\nconst [isModalOpen, setModalOpen] = useState(false);\n\nconst save = (v) => {\n  Social.set(\n    {\n      thing: {\n        canvas: {\n          \"\": v.reference,\n          metadata: {\n            type: \"canvas\",\n          },\n        },\n      },\n    },\n    {\n      force: true,\n      onCommit: () => {\n        setModalOpen(false);\n      },\n      onCancel: () => {\n        setModalOpen(false);\n      },\n    }\n  );\n};\n\nconst Button = styled.button`\n  padding: 10px 20px;\n`;\n\nconst toggleModal = () => {\n  setModalOpen(!isModalOpen);\n};\n\nconst snapshot = JSON.stringify(getSnapshot());\n\n// these two are related, this is almost an entire plugin here\nreturn (\n  <>\n    {context.accountId && (\n      <Button className=\"classic\" onClick={toggleModal}>\n        <i className=\"bi bi-save\"></i> save canvas\n      </Button>\n    )}\n    {isModalOpen && (\n      <Modal onClose={toggleModal}>\n        <div className=\"w-100\">\n          <Widget\n            src=\"everycanvas.near/widget/create.hyperfile\"\n            props={{\n              data: snapshot,\n              source: \"tldraw\",\n              type: \"canvas\",\n              filename: \"canvas\",\n            }}\n          />\n        </div>\n        {/* Attributions should be a plugin */}\n        <Widget\n          src=\"miraclx.near/widget/Attribution\"\n          props={{ dep: true, authors: [\"hack.near\", \"flowscience.near\"] }}\n        />\n      </Modal>\n    )}\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/everycanvas.near/widget/sharezone", "fact_widget_deployments_id": "f693718f3641c9e3b76835f65084d276", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 5}