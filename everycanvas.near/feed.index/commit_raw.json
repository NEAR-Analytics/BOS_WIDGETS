{"tx_hash": "AXSGwAHi64HsNG1MJEmj7Xk72MzJFZ1NrftdtX9erN2U", "action_id_social": "4QgiKxHR6DhmwwmwqERDbdYi9cJL2gAKv4FL4QHeRtfo-0-widget", "block_id": 106625924, "block_timestamp": "2023-11-27T04:05:36.865Z", "signer_id": "everycanvas.near", "widget_name": "feed.index", "source_code": "// Feed\nconst type = props.type || \"canvas\";\n\nconst things = Social.keys(`*/${type}/*`, \"final\", {\n  return_type: \"BlockHeight\",\n});\n\nif (!things) {\n  return \"Loading...\";\n}\n\nconst Container = styled.div`\n  margin: 0 auto;\n  padding: 20px;\n  width: 100%;\n  max-width: 1200px;\n`;\n\nconst Grid = styled.div`\n  display: grid;\n  grid-gap: 10px;\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n\n  @media (min-width: 576px) {\n    grid-gap: 15px;\n  }\n\n  @media (min-width: 992px) {\n    grid-gap: 20px;\n  }\n\n  > * {\n    transition: transform 0.3s ease; // Smooth transition for hover effect\n\n    &:hover {\n      transform: scale(1.03); // Subtle scale effect on hover\n    }\n  }\n`;\n\nconst processData = useCallback(\n  (data) => {\n    const accounts = Object.entries(data);\n\n    const allItems = accounts\n      .map((account) => {\n        const accountId = account[0];\n        return Object.entries(account[1][type]).map((kv) => {\n          return {\n            accountId,\n            type: type,\n            name: kv[0],\n            metadatadata: Social.get(\n              `${accountId}/${type}/${kv[0]}/metadata/**`,\n              \"final\"\n            ),\n          };\n        });\n      })\n      .flat();\n\n    // sort by latest\n    allItems.sort((a, b) => b.blockHeight - a.blockHeight);\n    return allItems;\n  },\n  [type]\n);\n\nconst items = processData(things);\n\nif (!items) {\n  return \"Loading data...\";\n}\n\nif (items.length === 0) {\n  return `No items of type: \"${type}\" found.`;\n}\n\nfunction Item({ accountId, name, type, metadata }) {\n  // Use metadata.name if it exists, otherwise use the passed name\n  const displayName = metadata.name || name;\n  const defaultImage =\n    \"https://ipfs.near.social/ipfs/bafkreihi3qh72njb3ejg7t2mbxuho2vk447kzkvpjtmulsb2njd6m2cfgi\";\n\n  return (\n    <div\n      className=\"card\"\n      style={{\n        maxWidth: \"100%\",\n        height: \"200px\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"space-between\",\n        overflow: \"hidden\",\n      }}\n    >\n      <div\n        className=\"card-img-top\"\n        style={{\n          backgroundImage: `url(${metadata.backgroundImage || defaultImage})`,\n          height: \"80px\",\n          backgroundSize: \"cover\",\n          backgroundPosition: \"center\",\n        }}\n      />\n\n      <div className=\"card-body\">\n        <Link\n          to={`/${accountId}/${type}/${name}`}\n          style={{ textDecoration: \"none\" }}\n        >\n          <h5 className=\"card-title\">\n            {accountId}/{displayName}\n          </h5>\n        </Link>\n        {metadata.description && (\n          <p\n            className=\"card-text\"\n            style={{ overflow: \"hidden\", textOverflow: \"ellipsis\" }}\n          >\n            {metadata.description}\n          </p>\n        )}\n      </div>\n      {context.accountId && (\n        <div\n          className=\"pb-2\"\n          style={{ display: \"flex\", justifyContent: \"flex-end\", gap: \"4px\" }}\n        >\n          <Widget\n            src=\"mob.near/widget/N.StarButton\"\n            props={{\n              notifyAccountId: accountId,\n              item: {\n                type: \"social\",\n                path: `${accountId}/${type}/${name}`,\n              },\n            }}\n          />\n          <Widget\n            src=\"mob.near/widget/N.LikeButton\"\n            props={{\n              notifyAccountId: accountId,\n              item: {\n                type: \"social\",\n                path: `${accountId}/${type}/${name}`,\n              },\n            }}\n          />\n        </div>\n      )}\n    </div>\n  );\n}\n\nreturn (\n  <Container>\n    <div className=\"d-flex justify-content-between align-items-center mb-3\">\n      <h3>every {type}</h3>\n      {/* <div>\n        <button className=\"classic me-2\">\n          <i className=\"bi bi-upload\" />\n        </button>\n        <button className=\"classic\">\n          <i className=\"bi bi-gear\" />\n        </button>\n      </div> */}\n    </div>\n    <Widget\n      src=\"everycanvas.near/widget/ItemFeed\"\n      props={{\n        items: items,\n        renderItem: Item,\n        perPage: 100,\n        renderLayout: (items) => <Grid>{items}</Grid>,\n      }}\n    />\n  </Container>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/everycanvas.near/widget/feed.index", "fact_widget_deployments_id": "3475d9955701966e9e4742fae17f9147", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 1}