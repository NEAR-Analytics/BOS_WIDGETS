{"tx_hash": "F98Cbq7WBXQHSNAAh272C5GjRbHyJ8ucJJ7gCYMRpkyd", "action_id_social": "71Mk8HzvZxsNJdFkLQu58QDm3hngtACSL1SBL2hF7uLm-0-widget", "block_id": 119359673, "block_timestamp": "2024-05-20T17:41:53.121Z", "signer_id": "everycanvas.near", "widget_name": "tldraw.Action", "source_code": "/**\n * Modal can be moved to its own module\n */\nconst ModalBackdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1001;\n`;\n\nconst ModalBox = styled.div`\n  background: white;\n  min-width: 400px;\n  max-width: 600px;\n  padding: 20px;\n  border-radius: 8px;\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);\n  z-index: 1002;\n`;\n\nconst ModalHeader = styled.div`\n  display: flex;\n  justify-content: end;\n  align-items: center;\n`;\n\nconst CloseButton = styled.button`\n  background: #f44336;\n  color: white !important;\n  border: none;\n  border-radius: 5px;\n  padding: 10px 15px;\n  cursor: pointer;\n  float: right;\n`;\n\nconst ModalContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-width: 300px;\n  padding: 10px;\n`;\n\nfunction Modal({ onClose, children }) {\n  return (\n    <ModalBackdrop>\n      <ModalBox>\n        <ModalHeader>\n          <CloseButton onClick={onClose}>Close</CloseButton>\n        </ModalHeader>\n        <ModalContent>{children}</ModalContent>\n      </ModalBox>\n    </ModalBackdrop>\n  );\n}\n\nconst StyledActionButton = styled.div`\n  position: fixed;\n  z-index: 290;\n  border-radius: 50%;\n  cursor: pointer;\n  background: radial-gradient(circle at 30% 30%, #4a4949, #000000);\n\n  box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1), 0px 2px 4px rgba(0, 0, 0, 0.06),\n    0px 10px 15px rgba(0, 0, 0, 0.1);\n  transition: transform 0.2s ease, box-shadow 0.2s ease; // smooth transition\n\n  &:hover {\n    background: radial-gradient(circle at 70% 30%, #4a4949, #000000);\n    box-shadow: 0px 5px 20px rgba(0, 0, 0, 0.2);\n    transform: scale(0.98) translateY(4px); // scale down slightly and move downward\n  }\n\n  &:active {\n    box-shadow: 0px 2px 14px rgba(0, 0, 0, 0.2);\n    transform: scale(0.96) translateY(6px); // more scale down and more downward movement for click\n  }\n\n  /* Desktop and Tablet */\n  @media (min-width: 768px) {\n    width: 120px;\n    height: 120px;\n    right: 30px;\n    bottom: 50px;\n  }\n\n  /* Mobile */\n  @media (max-width: 767px) {\n    width: 48px;\n    height: 48px;\n    right: 15px;\n    bottom: 110px;\n  }\n`;\n\nconst [isModalOpen, setModalOpen] = useState(false);\nconst [activePluginId, setActivePluginId] = useState(\"openai\");\n\nconst toggleModal = () => {\n  setModalOpen(!isModalOpen);\n};\n\nconst Button = styled.button`\n  // this could take in theme\n  padding: 10px 20px;\n`;\n\nconst {\n  path,\n  getSelectedShapes,\n  getSnapshot,\n  getSelectionAsText,\n  getSelectionAsImageDataUrl,\n  getContentOfPreviousResponse,\n  makeEmptyResponseShape,\n  populateResponseShape,\n} = props;\n\nconst parts = path.split(\"/\");\nconst creatorId = parts[0];\n\nconst snapshot = getSnapshot();\nconst selectedShapes = getSelectedShapes();\n\nconst plugins = [\n  {\n    id: \"openai\",\n    interface: {\n      src: \"everycanvas.near/widget/magic\",\n      props: {\n        shapes: JSON.stringify(selectedShapes),\n        getSelectionAsText: getSelectionAsText,\n        getSelectionAsImageDataUrl: getSelectionAsImageDataUrl,\n        getContentOfPreviousResponse: getContentOfPreviousResponse,\n        makeEmptyResponseShape: makeEmptyResponseShape,\n        populateResponseShape: populateResponseShape,\n      },\n      attribution: [\"petersalomonsen.near\"], // this should come from widget metadata\n    },\n  },\n];\n\nconst activePlugin = plugins.find((plugin) => plugin.id === activePluginId);\n\nreturn (\n  <>\n    <StyledActionButton onClick={toggleModal} />\n    {isModalOpen && (\n      <Modal onClose={toggleModal}>\n        <div className=\"w-100\">\n          <Widget src={activePlugin.interface.src} props={activePlugin.interface.props} />\n        </div>\n        <Widget\n          src=\"miraclx.near/widget/Attribution\"\n          props={{ dep: true, authors: activePlugin.interface.attribution }}\n        />\n      </Modal>\n    )}\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/everycanvas.near/widget/tldraw.Action", "fact_widget_deployments_id": "77932047aae1bd805ea00caa847859bc", "inserted_timestamp": "2024-05-20T19:51:25.009Z", "modified_timestamp": "2024-05-20T19:51:25.009Z", "__row_index": 0}