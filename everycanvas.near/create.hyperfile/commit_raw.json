{"tx_hash": "FmXfZD9oWnTzq9CVce2sVSzGSgyV1jVZQxjhVRDJBf9W", "action_id_social": "4d1WCGx9QFVNSm7o1gXW9ZJVRSrTMHmzPzHVhMNEPBLE-0-widget", "block_id": 106178979, "block_timestamp": "2023-11-21T04:28:08.817Z", "signer_id": "everycanvas.near", "widget_name": "create.hyperfile", "source_code": "const Wrapper = styled.div`\n  max-width: 400px;\n  margin: 0 auto;\n`;\n\nconst Form = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  width: 100%;\n`;\n\nconst Label = styled.label`\n  font-weight: bold;\n`;\n\nconst Input = styled.input`\n  padding: 5px;\n`;\n\nconst Select = styled.select`\n  padding: 8px;\n`;\n\nconst FormGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n`;\n\nconst adapters = [\n  // these can come from the user (or app) settings\n  // {\n  //   title: \"Local Storage\",\n  //   value: \"everycanvas.near/widget/adapter.local\",\n  // },\n  // {\n  //   title: \"SocialDB\",\n  //   value: \"everycanvas.near/widget/adapter.social\",\n  // },\n  {\n    title: \"IPFS\",\n    value: \"everycanvas.near/widget/adapter.ipfs\",\n  },\n  // {\n  //   title: \"GitHub\",\n  //   value: \"hack.near/widget/adapter.github\",\n  // },\n  // {\n  //   title: \"Obsidian\",\n  //   value: \"hack.near/widget/adapter.obsidian\",\n  // },\n  // {\n  //   title: \"Tldraw\",\n  //   value: \"hack.near/widget/adapter.tldraw\",\n  // },\n];\n\nconst defaultAdapter = adapters[0];\n\nconst [json, setJson] = useState(props.data ?? \"\");\nconst [source, setSource] = useState(props.source ?? \"\");\nconst [adapter, setAdapter] = useState(defaultAdapter.value ?? \"\");\nconst [reference, setReference] = useState(undefined);\n\nfunction generateUID() {\n  return (\n    Math.random().toString(16).slice(2) +\n    Date.now().toString(36) +\n    Math.random().toString(16).slice(2)\n  );\n}\n\nconst thingId = state.name ?? generateUID();\n\nconst handleCreate = () => {\n  // load in the state.adapter\n  const { create } = VM.require(adapter) || (() => {});\n  if (create) {\n    create(json).then((reference) => {\n      console.log(\"reference\", reference);\n      const hyperfile = {\n        thing: {\n          [thingId]: {\n            \"\": JSON.stringify({\n              fileformat: `${props.type}.${source}`,\n              source: source,\n              adapter: adapter,\n              reference: reference,\n            }),\n            metadata: {\n              type: props.type,\n            },\n          },\n        },\n      };\n      // we're not logged in, so it doesn't do anything!\n      Social.set(hyperfile, { force: true });\n    });\n  }\n};\n\nreturn (\n  <Wrapper>\n    <Form>\n      <FormGroup>\n        <Label>source</Label>\n        <Input\n          type=\"text\"\n          value={source}\n          onChange={(e) => onChangeSource(e.target.value)}\n          disabled={props.source} // disable if source is passed in\n        />\n      </FormGroup>\n      <textarea\n        className=\"form-control mb-3\"\n        rows={5}\n        value={json}\n        onChange={(e) => setJson(e.target.value)}\n      />\n      <FormGroup>\n        <Label>adapter</Label>\n        <Select value={adapter} onChange={(e) => setAdapter(e.target.value)}>\n          {adapters.map((o) => (\n            <option value={o.value}>{o.title}</option>\n          ))}\n        </Select>\n      </FormGroup>\n      <button className=\"btn btn-success mb-1\" onClick={handleCreate}>\n        Create\n      </button>\n    </Form>\n  </Wrapper>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/everycanvas.near/widget/create.hyperfile", "fact_widget_deployments_id": "50073358bb10f9708701232d5571bc8a", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 1}