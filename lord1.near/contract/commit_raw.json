{"tx_hash": "86jJQEajy2D7eP7zewrr6ZcWuQeb2Dae73eMcTVWNSSM", "action_id_social": "is2qQ6qaA6TdRxwnSRJkSB196k8N19yNgFDh7JT3WeG-0-widget", "block_id": 99017342, "block_timestamp": "2023-08-17T13:38:44.523Z", "signer_id": "lord1.near", "widget_name": "contract", "source_code": "const API_KEY = \"e79c2e9b-116c-4d8a-9617-5e2471e4deaa\";\r\nconst themeColors = [\r\n  \"#A084E8\",\r\n  \"#6F61C0\",\r\n  \"#241468\",\r\n  \"#9F0D7F\",\r\n  \"#EA1179\",\r\n  \"#F79BD3\",\r\n];\r\n55;\r\nconst spinnerColors = { color1: \"#6F61C0\", color2: \"#241468\" };\r\n\r\nconst queries = [\r\n  {\r\n    hash: \"14cd52e2-af58-4550-a848-ac2fe85b3b70\",\r\n    firstReqTime: 15,\r\n    id: 1,\r\n    query: `SELECT\r\n              ADDRESS as \"Address\",\r\n              ADDRESS_NAME as  \"Address Name\",\r\n              PROJECT_NAME as \"Project Type\",\r\n              LABEL_TYPE  as \"Label Type\",\r\n              min(block_timestamp)::date  as \"First day\"\r\n              FROM near.core.fact_transactions LEFT outer join near.core.dim_address_labels on TX_RECEIVER = ADDRESS\r\n              where  TX_RECEIVER in ('{{address}}') GROUP BY 1,2,3,4`,\r\n  },\r\n  {\r\n    hash: \"5fe48402-2103-46f6-bdb8-3a02880ab69d\",\r\n    firstReqTime: 10,\r\n    id: 2,\r\n    query: `with a as\r\n              (SELECT\r\n              date_trunc('day',BLOCK_TIMESTAMP)::date as date ,\r\n              count(DISTINCT tx_hash) as \"Number of Transactions\",\r\n              round(sum(transaction_fee / power(10, 24)),3) as \"Fee(Near)\",\r\n              sum(TX:actions[0]:FunctionCall:deposit / POW(10, 24)) as \"Volume (Near)\" ,\r\n              sum(\"Number of Transactions\") over (order by date asc) as \"Cum Transactions\" ,\r\n              sum( \"Fee(Near)\") over (order by date asc) as \"Cum Fee\" ,\r\n              sum(\"Volume (Near)\") over (order by date asc) as \"Cum Volume\"\r\n              FROM near.core.fact_transactions\r\n              where TX_RECEIVER in ('{{address}}')\r\n              group by 1 order by date asc )\r\n              select\r\n              date_part(epoch,to_timestamp(date)) as date ,\r\n              \"Number of Transactions\" ,\r\n              \"Fee(Near)\" ,\r\n              round(\"Volume (Near)\",2)as \"Volume (Near)\" ,\r\n              \"Cum Transactions\"  ,\r\n              round(\"Cum Fee\",3) as \"Cum Fee\" ,\r\n              round(\"Cum Volume\",2) as \"Cum Volume\"\r\n              from a\r\n              where date is not null and \"Volume (Near)\" is not null`,\r\n  },\r\n  {\r\n    hash: \"099f61fd-22bf-49dc-a8e2-d87a8a4ecb99\",\r\n    firstReqTime: 10,\r\n    id: 3,\r\n    query: `SELECT\r\n              count(DISTINCT tx_hash) as transactions,\r\n              count(DISTINCT tx_signer) as users,\r\n              round(transactions / users) as avg_txs_per_user ,\r\n              round(sum(transaction_fee / power(10, 24)),3) as fee_usd,\r\n              round((fee_usd/transactions),3) as avg_fee_per_user ,\r\n              round(sum(case when TX:actions[0]:FunctionCall:deposit / POW(10, 24) is not null then TX:actions[0]:FunctionCall:deposit / POW(10, 24)\r\n              when TX:actions[0]:Transfer:deposit / POW(10, 24) is not null then TX:actions[0]:Transfer:deposit / POW(10, 24)\r\n              when TX:actions[0]:Delegate:delegate_action:actions[0]:FunctionCall:deposit / POW(10, 24) is not null then TX:actions[0]:Delegate:delegate_action:actions[0]:FunctionCall:deposit / POW(10, 24)\r\n              end)) as AMOUNT_NEAR ,\r\n              round((AMOUNT_NEAR/transactions),3) as avg_AMOUNT_per_user\r\n              FROM near.core.fact_transactions\r\n              where TX_RECEIVER in ('{{address}}')`,\r\n  },\r\n  {\r\n    hash: \"02d41371-2d86-4159-be7c-d79414df3168\",\r\n    firstReqTime: 10,\r\n    id: 4,\r\n    query: `with\r\n              user as (\r\n              select\r\n              BLOCK_TIMESTAMP::date as date,\r\n              COUNT(DISTINCT tx_signer) as user\r\n              from near.core.fact_transactions\r\n              where TX_RECEIVER in ('{{address}}')\r\n              group by 1),\r\n              raw as (\r\n              select tx_signer ,BLOCK_TIMESTAMP::date as date\r\n              FROM near.core.fact_transactions\r\n              where TX_RECEIVER in ('{{address}}')),\r\n              first as (\r\n              SELECT tx_signer as news, MIN(date) as first_date\r\n              FROM raw\r\n              GROUP BY 1),\r\n              b as\r\n              (SELECT\r\n              first_date as date,\r\n              user as total_daily_user ,\r\n              COUNT(DISTINCT news) as new_daily_user,\r\n              SUM(new_daily_user) OVER (ORDER BY first_date ASC) as cum_daily_user\r\n              FROM first inner join   user\r\n              on first_date = date\r\n              GROUP BY 1,2\r\n              ORDER BY 1)\r\n              select\r\n              date_part(epoch,to_timestamp(date))::int as date ,\r\n              total_daily_user ,\r\n              new_daily_user ,\r\n              cum_daily_user\r\n              from b`,\r\n  },\r\n  // {\r\n  //   hash: \"53dbf2a1-cd23-4ddf-b9bd-451b2b84c100\",\r\n  //  firstReqTime:10,\r\n  //  id: 5,\r\n  //   query: `SELECT\r\n  //             count(DISTINCT tx_hash) as transactions,\r\n  //             tx_signer\r\n  //             FROM near.core.fact_transactions\r\n  //             where TX_RECEIVER in ('{{address}}')\r\n  //             GROUP BY 2 order by 1  desc limit 10`,\r\n  // },\r\n  // {\r\n  //   hash: \"fa6edc9a-fbe2-43a1-854b-4d7d263f0b6c\",\r\n  //  firstReqTime:10,\r\n  //  id: 6,\r\n  //   query: `with a as\r\n  //           (SELECT\r\n  //           sum(TX:actions[0]:FunctionCall:deposit / POW(10, 24)) as AMOUNT_NEAR ,\r\n  //           tx_signer\r\n  //           FROM near.core.fact_transactions\r\n  //           where TX_RECEIVER in ('{{address}}')\r\n  //           GROUP BY 2 having AMOUNT_NEAR is not null\r\n  //           order by 1  desc limit 10)\r\n  //           select\r\n  //           round(AMOUNT_NEAR)  as AMOUNT_NEAR ,\r\n  //           tx_signer\r\n  //           from a`,\r\n  // },\r\n  {\r\n    hash: \"64edecd3-2f66-44e3-a657-565e17bf612e\",\r\n    firstReqTime: 10,\r\n    id: 7,\r\n    query: `SELECT\r\n              count(DISTINCT tx_hash) as transactions,\r\n              round(sum(transaction_fee / power(10, 24)),3) as fee ,\r\n              'Success' as status\r\n              FROM near.core.fact_transactions\r\n              where TX_RECEIVER in ('{{address}}')\r\n              and TX_STATUS ='Success'\r\n              union\r\n              SELECT\r\n              count(DISTINCT tx_hash) as transactions,\r\n              round(sum(transaction_fee / power(10, 24)),3) as fee ,\r\n              'Fail' as status\r\n              FROM near.core.fact_transactions\r\n              where TX_RECEIVER in ('{{address}}')\r\n              and TX_STATUS !='Success'`,\r\n  },\r\n  {\r\n    hash: \"046a7cbd-4838-4cb3-90fd-6be9e4cfb114\",\r\n    firstReqTime: 10,\r\n    id: 8,\r\n    query: `with a as\r\n              ( SELECT\r\n              count(DISTINCT tx_hash) as transactions,\r\n              tx_signer as users\r\n              -- sum(TX:actions[0]:FunctionCall:deposit / POW(10, 24)) as AMOUNT_NEAR ,\r\n              FROM near.core.fact_transactions\r\n              where TX_RECEIVER in ('{{address}}')\r\n              group by 2)\r\n              select\r\n              count(DISTINCT users) as users,\r\n              case\r\n              when transactions =1 then '1'\r\n              when transactions =2 then '2'\r\n              when transactions =3 then '3'\r\n              when transactions between 3 and 10 then '(3-10]'\r\n              when transactions between 10 and 50 then '(10-50]'\r\n              when transactions between 50 and 100 then '(50-100]'\r\n              when transactions > 100 then '> 100'\r\n              else  'else'\r\n              end as groups\r\n              from a\r\n              group by 2 order by 1 desc`,\r\n  },\r\n  {\r\n    hash: \"c04e2f1f-530c-4ce2-bb6a-d5a8cb60ac0f\",\r\n    firstReqTime: 10,\r\n    id: 9,\r\n    query: `with a as\r\n              (SELECT\r\n              sum(TX:actions[0]:FunctionCall:deposit / POW(10, 24)) as AMOUNT_NEAR,\r\n              tx_signer as users\r\n              FROM near.core.fact_transactions\r\n              where TX_RECEIVER in ('{{address}}')\r\n              group by 2)\r\n              select\r\n              count(DISTINCT users) as users,\r\n              case\r\n              when AMOUNT_NEAR < 1 then '< 1'\r\n              when AMOUNT_NEAR between 1 and 2 then '1-2'\r\n              when AMOUNT_NEAR between 2 and 5 then '2-3'\r\n              when AMOUNT_NEAR between 5 and 10 then '(5-10]'\r\n              when AMOUNT_NEAR between 10 and 50 then '(10-50]'\r\n              when AMOUNT_NEAR between 50 and 100 then '(50-100]'\r\n              when AMOUNT_NEAR > 100 then '> 100'\r\n              else  null\r\n              end as groups\r\n              from a\r\n              where groups is not null\r\n              group by 2 order by 1 desc`,\r\n  },\r\n  {\r\n    hash: \"75684a26-d968-4566-9d27-8b9635182c33\",\r\n    firstReqTime: 20,\r\n    id: 10,\r\n    query: `with a as\r\n            (select\r\n            count(DISTINCT tx_hash) as transactions ,\r\n            rank()over(  order by transactions desc)as rank_transactions ,\r\n            count(DISTINCT tx_signer) as users,\r\n            rank()over(  order by users desc)as rank_users ,\r\n            round(sum(transaction_fee / power(10, 24)),3) as fee,\r\n            rank()over(  order by fee desc)as rank_fee ,\r\n            TX_RECEIVER as ADDRESS\r\n            from(\r\n            select distinct ADDRESS\r\n            FROM  near.core.dim_address_labels\r\n            where  LABEL_TYPE in (SELECT LABEL_TYPE  as \"Label Type\" FROM  near.core.dim_address_labels  where  ADDRESS in ('{{address}}'))\r\n            ) as label\r\n            inner join near.core.fact_transactions\r\n            on ADDRESS = TX_RECEIVER\r\n            group by 7)\r\n            select * from  a\r\n            order by 1 desc ,3 desc ,5 desc limit 4`,\r\n  },\r\n];\r\n2;\r\nState.init({\r\n  propsCharts: {},\r\n  result: { address: \"\" },\r\n  address: \"social.near\",\r\n  ui: { error: [], loading: true, isDisabledSearchButton: false },\r\n  loader: false,\r\n  initialLoad: true,\r\n});\r\nconst formatNumber = (num) => {\r\n  if (num >= 1000000000) {\r\n    return (num / 1000000000).toFixed(1).replace(/\\.0$/, \"\") + \"b\";\r\n  }\r\n  if (num >= 1000000) {\r\n    return (num / 1000000).toFixed(1).replace(/\\.0$/, \"\") + \"m\";\r\n  }\r\n  if (num >= 1000) {\r\n    return (num / 1000).toFixed(1).replace(/\\.0$/, \"\") + \"k\";\r\n  }\r\n  return num;\r\n};\r\n\r\nconst inputHandler = ({ target }) => {\r\n  if (state.ui.loading) return;\r\n  const address = target.value.toLowerCase().trim();\r\n  State.update({ address: address, loader: false });\r\n};\r\nconst createQuery = (address) => {\r\n  const queriesArr = queries.map((q) => {\r\n    const queryWithAddress = q.query.replaceAll(\"{{address}}\", address);\r\n    q.query = queryWithAddress;\r\n    return q;\r\n  });\r\n  return queriesArr;\r\n};\r\n\r\nconst updateResultState = ({ data, error, isLoading, queryRunId, id }) => {\r\n  State.update(({ result }) => {\r\n    const newResult = {\r\n      ...result,\r\n      [`query${id}`]: {\r\n        data:\r\n          data?.rows === undefined ? null : data.rows === null ? [] : data.rows,\r\n        error: error,\r\n        isLoading: isLoading,\r\n        queryRunId: queryRunId,\r\n        id: id,\r\n      },\r\n    };\r\n    if (error) {\r\n      const queryError = `query${id} : ${error}`;\r\n      console.log(state.ui.error);\r\n      return {\r\n        ...state,\r\n        result: { ...newResult },\r\n        ui: { ...state.ui, error: [...state.ui.error, queryError] },\r\n      };\r\n    } else {\r\n      return {\r\n        ...state,\r\n        result: { ...newResult },\r\n      };\r\n    }\r\n  });\r\n};\r\n\r\nconst runqueries = () => {\r\n  if (state.address.length === 0) {\r\n    State.update({\r\n      ui: {\r\n        ...state.ui,\r\n        error: [...state.ui.error, \"please add an contract address\"],\r\n      },\r\n    });\r\n    return;\r\n  }\r\n  const isNewquery = state.result.address !== state.address;\r\n  if (!isNewquery) {\r\n    State.update({\r\n      ui: {\r\n        ...state.ui,\r\n        error: [...state.ui.error, \"this query already has runed\"],\r\n      },\r\n    });\r\n    return;\r\n  }\r\n  const queriesArr = createQuery(state.address);\r\n  const loader = queriesArr.map((q) => {\r\n    const props = {\r\n      apiKey: API_KEY,\r\n      id: q.id,\r\n      query: q.query,\r\n      onResult: updateResultState,\r\n      firstReqTime: q.firstReqTime,\r\n      queryOption: {\r\n        page: {\r\n          number: 1,\r\n          size: 1000,\r\n        },\r\n        cacheTime: 60,\r\n        ...q?.queryOption,\r\n      },\r\n    };\r\n\r\n    return <Widget src=\"lord1.near/widget/api-flipside\" props={props} />;\r\n  });\r\n  State.update({\r\n    loader: loader,\r\n    ui: { ...state.ui, loading: true },\r\n    result: { ...state.result, address: state.address },\r\n  });\r\n};\r\n1;\r\nconst getMixProps = (data, serieses, colors, chartOption) => {\r\n  data = data || [];\r\n  serieses = serieses || [{ key: \"\", seriesName: \"\", type: \"\", id: 1 }];\r\n  colors = colors || themeColors;\r\n  chartOption = chartOption || {};\r\n\r\n  const dataFormat = serieses.map((series) => {\r\n    const dataFormated = data.map((d) => [d.date * 1000, d[series.key]]);\r\n    return {\r\n      data: dataFormated,\r\n      name: series.seriesName,\r\n      type: series.type,\r\n      axisId: series.id,\r\n    };\r\n  });\r\n  const props = {\r\n    series: dataFormat,\r\n    colors: colors,\r\n    chartOption: {\r\n      title: \"chart title\",\r\n      subtitle: \"chart subtitle\",\r\n      legend: true,\r\n      stacking: \"false\",\r\n      ...chartOption,\r\n    },\r\n    spinnerColors: [\"#6F61C0\", \"#241468\"],\r\n  };\r\n  return props;\r\n};\r\nconst getPieProps = (data, [key, value], colors, chartOption) => {\r\n  data = data || [];\r\n  colors = colors || themeColors;\r\n  chartOption = chartOption || {};\r\n\r\n  const dataFormat = data.map((s) => [s[key], s[value]]);\r\n  const props = {\r\n    data: dataFormat,\r\n    colors: colors,\r\n    chartOption: {\r\n      title: \"chart title\",\r\n      type: \"pie\",\r\n      legend: false,\r\n      connector: false,\r\n      ...chartOption,\r\n    },\r\n    spinnerColors: [\"#6F61C0\", \"#241468\"],\r\n  };\r\n  return props;\r\n};\r\n\r\nconst fetchInitialData = (hash) => {\r\n  const data = fetch(\r\n    `https://api.flipsidecrypto.com/api/v2/queries/${hash}/data/latest`,\r\n    {\r\n      subscribe: true,\r\n      method: \"GET\",\r\n      headers: {\r\n        Accept: \"*/*\",\r\n      },\r\n    }\r\n  );\r\n  console.log(\"data\", data);\r\n\r\n  const result = {\r\n    data: data && data.body,\r\n    error: (data && data.error) || null,\r\n    isLoading: !data && !error,\r\n  };\r\n  return result;\r\n};\r\nif (state.initialLoad) {\r\n  const data = {};\r\n  const errors = [];\r\n  queries.forEach(({ hash, id }) => {\r\n    const result = fetchInitialData(hash);\r\n    if (result.error) errors.push(`query${id} : ${result.error}`);\r\n    data[`query${id}`] = {\r\n      ...result,\r\n      id,\r\n      queryRunId: undefined,\r\n    };\r\n  });\r\n\r\n  if (Object.values(data).every((d) => !d.isLoading)) {\r\n    State.update({\r\n      result: { address: \"social.near\", ...data },\r\n      ui: { ...state.ui, error: [...state.ui.error, ...errors] },\r\n      initialLoad: false,\r\n    });\r\n  }\r\n}\r\nconst isAllDataLoaded = () => {\r\n  const resultArr = Object.entries(state.result);\r\n  if (resultArr.length <= 1) return true;\r\n  return resultArr.every((query, i) => {\r\n    if (i === 0) return true;\r\n    return !query[1].isLoading;\r\n  });\r\n};\r\nif (isAllDataLoaded()) {\r\n  State.update({ ui: { ...state.ui, loading: false } });\r\n}\r\nif (state.ui.error.length > 0) {\r\n  function hide() {\r\n    const errors = state.ui.error;\r\n    errors.shift();\r\n    if (errors.length > 0) setTimeout(hide, 2500);\r\n    State.update({ ui: { ...state.ui, error: errors } });\r\n  }\r\n  setTimeout(hide, 2500);\r\n}\r\nconsole.log(\"11\", state);\r\n// #############################################################\r\n// return to dom\r\n// #############################################################\r\nreturn (\r\n  <div className=\"container-fluid\">\r\n    {state.loader && <div className=\"d-none\">{state.loader}</div>}\r\n    <div className=\"toast-container position-fixed bottom-0 end-0 p-3\">\r\n      {state.ui.error.length > 0 &&\r\n        state.ui.error.map((er) => (\r\n          <div\r\n            className=\"toast show align-items-center text-bg-danger border-0\"\r\n            role=\"alert\"\r\n            aria-live=\"assertive\"\r\n            aria-atomic=\"true\"\r\n          >\r\n            <div className=\"d-flex\">\r\n              <div className=\"toast-body\">{er}</div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n    </div>\r\n    <div className=\"header p-5 text-center bg-secondary\">header</div>\r\n    <div className=\"search py-4\">\r\n      <div className=\"row\">\r\n        <div className=\"col-8 \">\r\n          <input\r\n            defaultValue=\"social.near\"\r\n            onBlur={inputHandler}\r\n            type=\"Address\"\r\n            className=\"form-control\"\r\n            id=\"address\"\r\n            placeholder=\"contract address\"\r\n          />\r\n        </div>\r\n        <div className=\"col-4 col-lg-auto\">\r\n          <button\r\n            disabled={state.ui.loading}\r\n            onClick={runqueries}\r\n            type=\"button\"\r\n            style={{ backgroundColor: themeColors[1] }}\r\n            className=\"btn w-100 text-white\"\r\n          >\r\n            {state.ui.loading ? (\r\n              <div className=\"text-center px-4\">\r\n                <div className=\"spinner-border spinner-border-sm\" role=\"status\">\r\n                  <span className=\"visually-hidden\">Loading...</span>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              \"search\"\r\n            )}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div className=\"section1 py-4\">\r\n      <div className=\"row\">\r\n        <div className=\" col-lg-4\">\r\n          <div className=\"shadow-sm rounded bg-light h-100\">\r\n            {state.result?.query1?.isLoading && (\r\n              <div className=\"d-flex justify-content-center align-items-center h-100 p-4 py-5\">\r\n                <div className=\"spinner-border spinner-border-sm\" role=\"status\">\r\n                  <span className=\"visually-hidden\">Loading...</span>\r\n                </div>\r\n              </div>\r\n            )}\r\n            {state.result?.query1?.error && (\r\n              <div className=\"d-flex justify-content-center align-items-center h-100 py-5\">\r\n                An error occurred for this section\r\n              </div>\r\n            )}\r\n            {state.result?.query1?.data[0]?.address === null && (\r\n              <div className=\"d-flex justify-content-center align-items-center h-100 py-5\">\r\n                This address is not a contract\r\n              </div>\r\n            )}\r\n            {state.result?.query1?.data[0]?.address && (\r\n              <>\r\n                <div className=\"py-3\">\r\n                  <span className=\"fw-bold fs-5\">\r\n                    {state.result.query1.data[0][\"project type\"]}\r\n                  </span>\r\n                  <span className=\"fw-bold\">\r\n                    ({state.result.query1.data[0][\"label type\"]})\r\n                  </span>\r\n                </div>\r\n                <div className=\"py-1\">\r\n                  <span className=\"fw-semibold\">contract address :</span>\r\n                  <span>({state.result.query1.data[0][\"address\"]})</span>\r\n                </div>\r\n                <div className=\"py-1\">\r\n                  <span className=\"fw-semibold\">developed :</span>\r\n                  <span>\r\n                    (\r\n                    {new Date(\r\n                      state.result.query1.data[0][\"first day\"]\r\n                    ).toLocaleDateString(\"en\")}\r\n                    )\r\n                  </span>\r\n                </div>\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\" col-lg-8\">\r\n          <div className=\"shadow-sm rounded bg-light\">\r\n            {state.result?.query10?.isLoading && (\r\n              <div className=\"d-flex justify-content-center align-items-center h-100 p-4 py-5\">\r\n                <div className=\"spinner-border spinner-border-sm\" role=\"status\">\r\n                  <span className=\"visually-hidden\">Loading...</span>\r\n                </div>\r\n              </div>\r\n            )}\r\n            {state.result?.query10?.error && (\r\n              <div className=\"d-flex justify-content-center align-items-center h-100 py-5\">\r\n                An error occurred for this section\r\n              </div>\r\n            )}\r\n            {state.result?.query10?.data && (\r\n              <div className=\" table-responsive\">\r\n                <table className=\"table table-hover table-striped table-borderless \">\r\n                  <thead>\r\n                    <tr>\r\n                      <th className=\"col-2\" scope=\"col\">\r\n                        Same contracts ({state.address})\r\n                      </th>\r\n                      <th className=\"col-1\" scope=\"col\">\r\n                        Transaction\r\n                      </th>\r\n                      <th className=\"col-1\" scope=\"col\">\r\n                        Transaction rank\r\n                      </th>\r\n                      <th className=\"col-1\" scope=\"col\">\r\n                        Fee\r\n                      </th>\r\n                      <th className=\"col-1\" scope=\"col\">\r\n                        Fee rank\r\n                      </th>\r\n                      <th className=\"col-1\" scope=\"col\">\r\n                        User\r\n                      </th>\r\n                      <th className=\"col-1\" scope=\"col\">\r\n                        User rank\r\n                      </th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody className=\"\">\r\n                    {state.result?.query10?.data.length === 0 && (\r\n                      <tr>\r\n                        <td className=\"text-center p-4\" colspan=\"8\">\r\n                          No same contracts\r\n                        </td>\r\n                      </tr>\r\n                    )}\r\n                    {state.result?.query10?.data.length > 1 &&\r\n                      state.result.query10.data.map((row) => {\r\n                        return (\r\n                          <tr key={row.address}>\r\n                            <td>{row.address}</td>\r\n                            <td>{formatNumber(row.transactions)}</td>\r\n                            <td>{row.rank_transactions}</td>\r\n                            <td>{row.fee}</td>\r\n                            <td>{row.rank_fee}</td>\r\n                            <td>{formatNumber(row.users)}</td>\r\n                            <td>{row.rank_users}</td>\r\n                          </tr>\r\n                        );\r\n                      })}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div className=\"section2 py-4\">\r\n      <div className=\"row g-2\">\r\n        <div className=\"col-6 col-xl-3\">\r\n          <div className=\"shadow-sm rounded bg-light\">\r\n            <div className=\"\">\r\n              <div\r\n                style={{ backgroundColor: themeColors[1] }}\r\n                className=\"text-white text-center p-1 rounded-4\"\r\n              >\r\n                {state.result?.query3?.isLoading && (\r\n                  <div className=\"text-center p-4 pb-1\">\r\n                    <div\r\n                      className=\"spinner-border spinner-border-sm\"\r\n                      role=\"status\"\r\n                    >\r\n                      <span className=\"visually-hidden\">Loading...</span>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n                {state.result?.query3?.error && (\r\n                  <div className=\"d-flex justify-content-center align-items-center h-100 p-4 pb-1\">\r\n                    error\r\n                  </div>\r\n                )}\r\n                {state.result?.query3?.data && (\r\n                  <div className=\"fs-4 fw-bold d-flex justify-content-center align-items-center h-100 p-4 pb-1 \">\r\n                    {formatNumber(state.result?.query3?.data[0].transactions)}\r\n                  </div>\r\n                )}\r\n                <div className=\"\">Number of transactions</div>\r\n              </div>\r\n              <div\r\n                style={{ backgroundColor: themeColors[0] }}\r\n                className=\"text-white mx-auto w-75 mt-2 text-center p-1 rounded-4\"\r\n              >\r\n                {state.result?.query3?.isLoading && (\r\n                  <div className=\"text-center p-4 pb-1\">\r\n                    <div\r\n                      className=\"spinner-border spinner-border-sm\"\r\n                      role=\"status\"\r\n                    >\r\n                      <span className=\"visually-hidden\">Loading...</span>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n                {state.result?.query3?.error && (\r\n                  <div className=\"d-flex justify-content-center align-items-center h-100 p-4 pb-1\">\r\n                    error\r\n                  </div>\r\n                )}\r\n                {state.result?.query3?.data && (\r\n                  <div className=\"fs-4 fw-bold d-flex justify-content-center align-items-center h-100 p-4 pb-1 \">\r\n                    {formatNumber(\r\n                      state.result?.query3?.data[0].avg_txs_per_user\r\n                    )}\r\n                  </div>\r\n                )}\r\n                <div className=\"\">avg of transactions</div>\r\n              </div>\r\n            </div>\r\n            <div\r\n              className=\"chart d-flex justify-content-center align-items-center \"\r\n              style={{ minHeight: \"12rem\" }}\r\n            >\r\n              <div\r\n                className={`w-100 ${\r\n                  state.result?.query7?.isLoading ? \"d-block\" : \"d-none\"\r\n                }`}\r\n              >\r\n                <Widget\r\n                  src={`easypoll-v0.ndc-widgets.near/widget/Common.Spinner`}\r\n                  props={{ ...spinnerColors }}\r\n                />\r\n              </div>\r\n              {state.result?.query7?.error && (\r\n                <div className=\"\">An error occurred for this section</div>\r\n              )}\r\n              <div className={`${state.result?.query7?.data ? \"\" : \"d-none\"}`}>\r\n                <Widget\r\n                  src=\"lord1.near/widget/Pie-chart\"\r\n                  props={getPieProps(\r\n                    state.result.query7.data,\r\n                    [\"status\", \"transactions\"],\r\n                    undefined,\r\n                    { title: \"Trans Status\" }\r\n                  )}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-6 col-xl-3\">\r\n          <div className=\"shadow-sm rounded bg-light\">\r\n            <div className=\"\">\r\n              <div\r\n                style={{ backgroundColor: themeColors[1] }}\r\n                className=\"text-white text-center p-1 rounded-4\"\r\n              >\r\n                {state.result?.query3?.isLoading && (\r\n                  <div className=\"text-center p-4 pb-1\">\r\n                    <div\r\n                      className=\"spinner-border spinner-border-sm\"\r\n                      role=\"status\"\r\n                    >\r\n                      <span className=\"visually-hidden\">Loading...</span>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n                {state.result?.query3?.error && (\r\n                  <div className=\"d-flex justify-content-center align-items-center h-100 p-4 pb-1\">\r\n                    error\r\n                  </div>\r\n                )}\r\n                {state.result?.query3?.data && (\r\n                  <div className=\"fs-4 fw-bold d-flex justify-content-center align-items-center h-100 p-4 pb-1 \">\r\n                    {formatNumber(state.result?.query3?.data[0].users)}\r\n                  </div>\r\n                )}\r\n                <div className=\"\">Number of users</div>\r\n              </div>\r\n              <div\r\n                style={{ backgroundColor: themeColors[0] }}\r\n                className=\"text-white mx-auto w-75 mt-2 text-center p-1 rounded-4\"\r\n              >\r\n                {state.result?.query3?.isLoading && (\r\n                  <div className=\"text-center p-4 pb-1\">\r\n                    <div\r\n                      className=\"spinner-border spinner-border-sm\"\r\n                      role=\"status\"\r\n                    >\r\n                      <span className=\"visually-hidden\">Loading...</span>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n                {state.result?.query3?.error && (\r\n                  <div className=\"d-flex justify-content-center align-items-center h-100 p-4 pb-1\">\r\n                    error\r\n                  </div>\r\n                )}\r\n                {state.result?.query3?.data && (\r\n                  <div className=\"fs-4 fw-bold d-flex justify-content-center align-items-center h-100 p-4 pb-1 \">\r\n                    {\"-\"}\r\n                  </div>\r\n                )}\r\n                <div className=\"\">avg of users</div>\r\n              </div>\r\n            </div>\r\n            <div\r\n              className=\"chart d-flex justify-content-center align-items-center \"\r\n              style={{ minHeight: \"12rem\" }}\r\n            >\r\n              <div\r\n                className={`w-100 ${\r\n                  state.result?.query8?.isLoading ? \"d-block\" : \"d-none\"\r\n                }`}\r\n              >\r\n                <Widget\r\n                  src={`easypoll-v0.ndc-widgets.near/widget/Common.Spinner`}\r\n                  props={{ ...spinnerColors }}\r\n                />\r\n              </div>\r\n              {state.result?.query8?.error && (\r\n                <div className=\"\">An error occurred for this section</div>\r\n              )}\r\n              <div className={`${state.result?.query8?.data ? \"\" : \"d-none\"}`}>\r\n                <Widget\r\n                  src=\"lord1.near/widget/Pie-chart\"\r\n                  props={getPieProps(\r\n                    state.result.query8.data,\r\n                    [\"groups\", \"users\"],\r\n                    undefined,\r\n                    { title: \"Share of Users\", type: \"donut\" }\r\n                  )}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-6 col-xl-3\">\r\n          <div className=\"shadow-sm rounded bg-light\">\r\n            <div className=\"\">\r\n              <div\r\n                style={{ backgroundColor: themeColors[1] }}\r\n                className=\"text-white text-center p-1 rounded-4\"\r\n              >\r\n                {state.result?.query3?.isLoading && (\r\n                  <div className=\"text-center p-4 pb-1\">\r\n                    <div\r\n                      className=\"spinner-border spinner-border-sm\"\r\n                      role=\"status\"\r\n                    >\r\n                      <span className=\"visually-hidden\">Loading...</span>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n                {state.result?.query3?.error && (\r\n                  <div className=\"d-flex justify-content-center align-items-center h-100 p-4 pb-1\">\r\n                    error\r\n                  </div>\r\n                )}\r\n                {state.result?.query3?.data && (\r\n                  <div className=\"fs-4 fw-bold d-flex justify-content-center align-items-center h-100 p-4 pb-1 \">\r\n                    {formatNumber(state.result?.query3?.data[0].amount_near)}\r\n                  </div>\r\n                )}\r\n                <div className=\"\">Amount (near)</div>\r\n              </div>\r\n              <div\r\n                style={{ backgroundColor: themeColors[0] }}\r\n                className=\"text-white mx-auto w-75 mt-2 text-center p-1 rounded-4\"\r\n              >\r\n                {state.result?.query3?.isLoading && (\r\n                  <div className=\"text-center p-4 pb-1\">\r\n                    <div\r\n                      className=\"spinner-border spinner-border-sm\"\r\n                      role=\"status\"\r\n                    >\r\n                      <span className=\"visually-hidden\">Loading...</span>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n                {state.result?.query3?.error && (\r\n                  <div className=\"d-flex justify-content-center align-items-center h-100 p-4 pb-1\">\r\n                    error\r\n                  </div>\r\n                )}\r\n                {state.result?.query3?.data && (\r\n                  <div className=\"fs-4 fw-bold d-flex justify-content-center align-items-center h-100 p-4 pb-1 \">\r\n                    {formatNumber(\r\n                      state.result?.query3?.data[0].avg_amount_per_user\r\n                    )}\r\n                  </div>\r\n                )}\r\n                <div className=\"\">avg of Amount (near)</div>\r\n              </div>\r\n            </div>\r\n            <div\r\n              className=\"chart d-flex justify-content-center align-items-center \"\r\n              style={{ minHeight: \"12rem\" }}\r\n            >\r\n              <div\r\n                className={`w-100 ${\r\n                  state.result?.query7?.isLoading ? \"d-block\" : \"d-none\"\r\n                }`}\r\n              >\r\n                <Widget\r\n                  src={`easypoll-v0.ndc-widgets.near/widget/Common.Spinner`}\r\n                  props={{ ...spinnerColors }}\r\n                />\r\n              </div>\r\n              {state.result?.query7?.error && (\r\n                <div className=\"\">An error occurred for this section</div>\r\n              )}\r\n              <div className={`${state.result?.query7?.data ? \"\" : \"d-none\"}`}>\r\n                <Widget\r\n                  src=\"lord1.near/widget/Pie-chart\"\r\n                  props={getPieProps(\r\n                    state.result.query7.data,\r\n                    [\"status\", \"fee\"],\r\n                    undefined,\r\n                    { title: \"Fee Status\" }\r\n                  )}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-6 col-xl-3\">\r\n          <div className=\"shadow-sm rounded bg-light\">\r\n            <div className=\"\">\r\n              <div\r\n                style={{ backgroundColor: themeColors[1] }}\r\n                className=\"text-white text-center p-1 rounded-4\"\r\n              >\r\n                {state.result?.query3?.isLoading && (\r\n                  <div className=\"text-center p-4 pb-1\">\r\n                    <div\r\n                      className=\"spinner-border spinner-border-sm\"\r\n                      role=\"status\"\r\n                    >\r\n                      <span className=\"visually-hidden\">Loading...</span>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n                {state.result?.query3?.error && (\r\n                  <div className=\"d-flex justify-content-center align-items-center h-100 p-4 pb-1\">\r\n                    error\r\n                  </div>\r\n                )}\r\n                {state.result?.query3?.data && (\r\n                  <div className=\"fs-4 fw-bold d-flex justify-content-center align-items-center h-100 p-4 pb-1 \">\r\n                    {formatNumber(state.result?.query3?.data[0].fee_usd)}\r\n                  </div>\r\n                )}\r\n                <div className=\"\">Fee usd</div>\r\n              </div>\r\n              <div\r\n                style={{ backgroundColor: themeColors[0] }}\r\n                className=\"text-white mx-auto w-75 mt-2 text-center p-1 rounded-4\"\r\n              >\r\n                {state.result?.query3?.isLoading && (\r\n                  <div className=\"text-center p-4 pb-1\">\r\n                    <div\r\n                      className=\"spinner-border spinner-border-sm\"\r\n                      role=\"status\"\r\n                    >\r\n                      <span className=\"visually-hidden\">Loading...</span>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n                {state.result?.query3?.error && (\r\n                  <div className=\"d-flex justify-content-center align-items-center h-100 p-4 pb-1\">\r\n                    error\r\n                  </div>\r\n                )}\r\n                {state.result?.query3?.data && (\r\n                  <div className=\"fs-4 fw-bold d-flex justify-content-center align-items-center h-100 p-4 pb-1 \">\r\n                    {formatNumber(\r\n                      state.result?.query3?.data[0].avg_fee_per_user\r\n                    )}\r\n                  </div>\r\n                )}\r\n                <div className=\"\">avg of Fee usd</div>\r\n              </div>\r\n            </div>\r\n            <div\r\n              className=\"chart d-flex justify-content-center align-items-center \"\r\n              style={{ minHeight: \"12rem\" }}\r\n            >\r\n              <div\r\n                className={`w-100 ${\r\n                  state.result?.query9?.isLoading ? \"d-block\" : \"d-none\"\r\n                }`}\r\n              >\r\n                <Widget\r\n                  src={`easypoll-v0.ndc-widgets.near/widget/Common.Spinner`}\r\n                  props={{ ...spinnerColors }}\r\n                />\r\n              </div>\r\n              {state.result?.query9?.error && (\r\n                <div className=\"\">An error occurred for this section</div>\r\n              )}\r\n              <div className={`${state.result?.query9?.data ? \"\" : \"d-none\"}`}>\r\n                <Widget\r\n                  src=\"lord1.near/widget/Pie-chart\"\r\n                  props={getPieProps(\r\n                    state.result.query9.data,\r\n                    [\"groups\", \"users\"],\r\n                    undefined,\r\n                    { title: \"Share of Volume\", type: \"donut\" }\r\n                  )}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div className=\"section3-area py-4\">\r\n      <div className=\"row g-2\">\r\n        <div style={{ minHeight: \"12rem\" }} className=\" col-lg-6\">\r\n          <div className=\"h-100 shadow-sm rounded bg-light \">\r\n            <div\r\n              className={`w-100 ${\r\n                state.result?.query2?.isLoading ? \"d-block\" : \"d-none\"\r\n              }`}\r\n            >\r\n              <Widget\r\n                src={`easypoll-v0.ndc-widgets.near/widget/Common.Spinner`}\r\n                props={{ ...spinnerColors }}\r\n              />\r\n            </div>\r\n            {state.result?.query2?.error && (\r\n              <div className=\"\">An error occurred for this section</div>\r\n            )}\r\n            <div className={`${state.result?.query2?.data ? \"\" : \"d-none\"}`}>\r\n              <Widget\r\n                src=\"lord1.near/widget/mix-chart\"\r\n                props={getMixProps(\r\n                  state.result.query2.data,\r\n                  [\r\n                    {\r\n                      key: \"cum transactions\",\r\n                      seriesName: \"Cum Trans\",\r\n                      type: \"areaspline\",\r\n                      id: 2,\r\n                    },\r\n                    {\r\n                      key: \"number of transactions\",\r\n                      seriesName: \"Number of Trans\",\r\n                      type: \"line\",\r\n                      id: 1,\r\n                    },\r\n                  ],\r\n                  undefined,\r\n                  {\r\n                    title: \"Number of Transaction\",\r\n                    subtitle: \"Daily / Cumulative\",\r\n                  }\r\n                )}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div style={{ minHeight: \"12rem\" }} className=\" col-lg-6\">\r\n          <div className=\"h-100 shadow-sm rounded bg-light \">\r\n            <div\r\n              className={`w-100 ${\r\n                state.result?.query2?.isLoading ? \"d-block\" : \"d-none\"\r\n              }`}\r\n            >\r\n              <Widget\r\n                src={`easypoll-v0.ndc-widgets.near/widget/Common.Spinner`}\r\n                props={{ ...spinnerColors }}\r\n              />\r\n            </div>\r\n            {state.result?.query2?.error && (\r\n              <div className=\"\">An error occurred for this section</div>\r\n            )}\r\n            <div className={`${state.result?.query2?.data ? \"\" : \"d-none\"}`}>\r\n              <Widget\r\n                src=\"lord1.near/widget/mix-chart\"\r\n                props={getMixProps(\r\n                  state.result.query2.data,\r\n                  [\r\n                    {\r\n                      key: \"cum volume\",\r\n                      seriesName: \"Cum Volume\",\r\n                      type: \"areaspline\",\r\n                      id: 2,\r\n                    },\r\n                    {\r\n                      key: \"volume (near)\",\r\n                      seriesName: \"Volume\",\r\n                      type: \"line\",\r\n                      id: 1,\r\n                    },\r\n                  ],\r\n                  undefined,\r\n                  {\r\n                    title: \"Volume of Transaction\",\r\n                    subtitle: \"Daily / Cumulative\",\r\n                  }\r\n                )}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div style={{ minHeight: \"12rem\" }} className=\" col-lg-6\">\r\n          <div className=\"h-100 shadow-sm rounded bg-light \">\r\n            <div\r\n              className={`w-100 ${\r\n                state.result?.query4?.isLoading ? \"d-block\" : \"d-none\"\r\n              }`}\r\n            >\r\n              <Widget\r\n                src={`easypoll-v0.ndc-widgets.near/widget/Common.Spinner`}\r\n                props={{ ...spinnerColors }}\r\n              />\r\n            </div>\r\n            {state.result?.query4?.error && (\r\n              <div className=\"\">An error occurred for this section</div>\r\n            )}\r\n            <div className={`${state.result?.query4?.data ? \"\" : \"d-none\"}`}>\r\n              <Widget\r\n                src=\"lord1.near/widget/mix-chart\"\r\n                props={getMixProps(\r\n                  state.result.query4.data,\r\n                  [\r\n                    {\r\n                      key: \"cum_daily_user\",\r\n                      seriesName: \"Cum User\",\r\n                      type: \"areaspline\",\r\n                      id: 2,\r\n                    },\r\n                    {\r\n                      key: \"new_daily_user\",\r\n                      seriesName: \"New Users\",\r\n                      type: \"line\",\r\n                      id: 1,\r\n                    },\r\n                    {\r\n                      key: \"total_daily_user\",\r\n                      seriesName: \"Total Users\",\r\n                      type: \"line\",\r\n                      id: 3,\r\n                    },\r\n                  ],\r\n                  undefined,\r\n                  {\r\n                    title: \"Number of Users\",\r\n                    subtitle: \"User / Cumulative\",\r\n                  }\r\n                )}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div style={{ minHeight: \"12rem\" }} className=\" col-lg-6\">\r\n          <div className=\"h-100 shadow-sm rounded bg-light \">\r\n            <div\r\n              className={`w-100 ${\r\n                state.result?.query2?.isLoading ? \"d-block\" : \"d-none\"\r\n              }`}\r\n            >\r\n              <Widget\r\n                src={`easypoll-v0.ndc-widgets.near/widget/Common.Spinner`}\r\n                props={{ ...spinnerColors }}\r\n              />\r\n            </div>\r\n            {state.result?.query2?.error && <div className=\"\">error</div>}\r\n            <div className={`${state.result?.query2?.data ? \"\" : \"d-none\"}`}>\r\n              <Widget\r\n                src=\"lord1.near/widget/mix-chart\"\r\n                props={getMixProps(\r\n                  state.result.query2.data,\r\n                  [\r\n                    {\r\n                      key: \"cum fee\",\r\n                      seriesName: \"Cum Fee\",\r\n                      type: \"areaspline\",\r\n                      id: 2,\r\n                    },\r\n                    {\r\n                      key: \"fee(near)\",\r\n                      seriesName: \"Fee\",\r\n                      type: \"line\",\r\n                      id: 1,\r\n                    },\r\n                  ],\r\n                  undefined,\r\n                  {\r\n                    title: \"Fee\",\r\n                    subtitle: \"Daily / Cumulative\",\r\n                  }\r\n                )}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div className=\"footer\">footer</div>\r\n  </div>\r\n);\r\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/lord1.near/widget/contract", "fact_widget_deployments_id": "62c5a5f3e0cdba73cd64e52ccd616ca5", "inserted_timestamp": "2023-08-17T15:35:08.189Z", "modified_timestamp": "2023-08-17T15:35:08.189Z", "__row_index": 0}