{"tx_hash": "2woZgoGidWUiaMmndz7AbqUn9htjH5YyHkWBvwVwjAA3", "action_id_social": "7AWREK53d9migTuQpoS14K17e7g6rsMaAvSbErdWN2t6-0-widget", "block_id": 110567130, "block_timestamp": "2024-01-16T18:24:50.753Z", "signer_id": "lord1.near", "widget_name": "contract-area", "source_code": "const themeColor = props.themeColor;\r\nconst generaltheme = {\r\n  height: \"110px\",\r\n  align: \"center\",\r\n  description: \"Tracking the activity of Developers on the NEAR ecosystem.\",\r\n  brand: \"Developer' Tracker \ud83c\udfe6\",\r\n  fontsize: \"100\",\r\n  fontweight: \"25px\",\r\n  afterbrand: \"\",\r\n  afterbrandcolor: themeColor?.dynamic_header?.afterbrandcolor || \"#789efb\",\r\n  fontbrand: \" Arial, sans-serif\",\r\n  color1brand: themeColor?.dynamic_header?.color1brand || \"#000\",\r\n  color2brand: themeColor?.dynamic_header?.color2brand || \"#806ce1\",\r\n  colordescription: themeColor?.dynamic_header?.colordescription || \"#806ce1\",\r\n  fontsubtitle: \" Arial, sans-serif\",\r\n  background:\r\n    themeColor?.dynamic_header?.background ||\r\n    \"radial-gradient(circle, rgba(210,202,250,1) 0%, rgba(230,230,231,0.01) 0%, rgba(235,238,255,1) 100%, rgba(235,231,253,1) 100%, rgba(255,241,241,1) 100%, rgba(46,52,90,1) 100%);\",\r\n};\r\nconst areatheme = {\r\n  height: \"150px\",\r\n  align: \"left\",\r\n  description: \"In which categories are developers most active?\",\r\n  brand: \"Activity\",\r\n  fontsize: \"300\",\r\n  fontweight: \"25px\",\r\n  afterbrand: \" by category\",\r\n  afterbrandcolor: themeColor?.dynamic_header?.afterbrandcolor || \"#789efb\",\r\n  fontbrand: \" Arial, sans-serif\",\r\n  color1brand: themeColor?.dynamic_header?.color1brand || \"#000\",\r\n  color2brand: themeColor?.dynamic_header?.color2brand || \"#806ce1\",\r\n  colordescription: themeColor?.dynamic_header?.colordescription || \"#806ce1\",\r\n  fontsubtitle: \" Arial, sans-serif\",\r\n  background:\r\n    themeColor?.dynamic_header?.background ||\r\n    \"radial-gradient(circle, rgba(210,202,250,1) 0%, rgba(230,230,231,0.01) 0%, rgba(235,238,255,1) 100%, rgba(235,231,253,1) 100%, rgba(255,241,241,1) 100%, rgba(46,52,90,1) 100%);\",\r\n};\r\nconst projecttheme = {\r\n  height: \"150px\",\r\n  align: \"left\",\r\n  description: \"Which projects do developers use most?\",\r\n  brand: \"Project\",\r\n  fontsize: \"300\",\r\n  fontweight: \"25px\",\r\n  afterbrand: \"interactions\",\r\n  afterbrandcolor: themeColor?.dynamic_header?.afterbrandcolor || \"#789efb\",\r\n  fontbrand: \" Arial, sans-serif\",\r\n  color1brand: themeColor?.dynamic_header?.color1brand || \"#000\",\r\n  color2brand: themeColor?.dynamic_header?.color2brand || \"#806ce1\",\r\n  colordescription: themeColor?.dynamic_header?.colordescription || \"#806ce1\",\r\n  fontsubtitle: \" Arial, sans-serif\",\r\n  background:\r\n    themeColor?.dynamic_header?.background ||\r\n    \"radial-gradient(circle, rgba(210,202,250,1) 0%, rgba(230,230,231,0.01) 0%, rgba(235,238,255,1) 100%, rgba(235,231,253,1) 100%, rgba(255,241,241,1) 100%, rgba(46,52,90,1) 100%);\",\r\n};\r\n\r\nconst daotheme = {\r\n  height: \"150px\",\r\n  align: \"left\",\r\n  description: \"Developers activity per DAO\",\r\n  brand: \"DAO\",\r\n  fontsize: \"300\",\r\n  fontweight: \"25px\",\r\n  afterbrand: \"activity\",\r\n  afterbrandcolor: themeColor?.dynamic_header?.afterbrandcolor || \"#789efb\",\r\n  fontbrand: \" Arial, sans-serif\",\r\n  color1brand: themeColor?.dynamic_header?.color1brand || \"#000\",\r\n  color2brand: themeColor?.dynamic_header?.color2brand || \"#806ce1\",\r\n  colordescription: themeColor?.dynamic_header?.colordescription || \"#806ce1\",\r\n  fontsubtitle: \" Arial, sans-serif\",\r\n  background:\r\n    themeColor?.dynamic_header?.background ||\r\n    \"radial-gradient(circle, rgba(210,202,250,1) 0%, rgba(230,230,231,0.01) 0%, rgba(235,238,255,1) 100%, rgba(235,231,253,1) 100%, rgba(255,241,241,1) 100%, rgba(46,52,90,1) 100%);\",\r\n};\r\nconst flowtheme = {\r\n  height: \"110px\",\r\n  align: \"center\",\r\n  description: \"Developers inflow and outflow of funds from and to CEXs\",\r\n  brand: \"CEX inflow vs outflow\",\r\n  fontsize: \"100\",\r\n  fontweight: \"15px\",\r\n  afterbrand: \"\",\r\n  afterbrandcolor: themeColor?.dynamic_header?.afterbrandcolor || \"#789efb\",\r\n  fontbrand: \" Arial, sans-serif\",\r\n  color1brand: themeColor?.dynamic_header?.color1brand || \"#000\",\r\n  color2brand: themeColor?.dynamic_header?.color2brand || \"#806ce1\",\r\n  colordescription: themeColor?.dynamic_header?.colordescription || \"#806ce1\",\r\n  fontsubtitle: \" Arial, sans-serif\",\r\n  background:\r\n    themeColor?.dynamic_header?.background ||\r\n    \"radial-gradient(circle, rgba(210,202,250,1) 0%, rgba(230,230,231,0.01) 0%, rgba(235,238,255,1) 100%, rgba(235,231,253,1) 100%, rgba(255,241,241,1) 100%, rgba(46,52,90,1) 100%);\",\r\n};\r\n\r\nconst staketheme = {\r\n  height: \"110px\",\r\n  align: \"center\",\r\n  description: \"NEAR staking and unstaking activity of developers\",\r\n  brand: \"Staking\",\r\n  fontsize: \"100\",\r\n  fontweight: \"15px\",\r\n  afterbrand: \"Behavior\",\r\n  afterbrandcolor: themeColor?.dynamic_header?.afterbrandcolor || \"#789efb\",\r\n  fontbrand: \" Arial, sans-serif\",\r\n  color1brand: themeColor?.dynamic_header?.color1brand || \"#000\",\r\n  color2brand: themeColor?.dynamic_header?.color2brand || \"#806ce1\",\r\n  colordescription: themeColor?.dynamic_header?.colordescription || \"#806ce1\",\r\n  fontsubtitle: \" Arial, sans-serif\",\r\n  background:\r\n    themeColor?.dynamic_header?.background ||\r\n    \"radial-gradient(circle, rgba(210,202,250,1) 0%, rgba(230,230,231,0.01) 0%, rgba(235,238,255,1) 100%, rgba(235,231,253,1) 100%, rgba(255,241,241,1) 100%, rgba(46,52,90,1) 100%);\",\r\n};\r\n\r\nconst queryHashes = [\r\n  { id: 2, hash: \"f09b0228-aab5-4010-82b6-d367234bda2a\" }, //Distribution of holders based on age of wallet\r\n  { id: 3, hash: \"63361983-ecd6-44a4-97bd-30632a14e9e6\" }, //Distribution of holders based on number of transactions\r\n  { id: 4, hash: \"c1e8970d-f470-48b6-b869-b8206a1c6832\" }, //done- Top 25 area\r\n  { id: 5, hash: \"94ba1703-fcc0-4f32-9bc8-ef81c1979db4\" }, //done-Top 10 platform based on user numbers\r\n  { id: 6, hash: \"1eee7717-ed51-43e0-afb9-416aafbf8970\" }, //tabel-top platforms\r\n  { id: 7, hash: \"397475d1-4eca-4b39-919b-4bd625ab2704\" }, //done-Top 10 platform  based on Fee(Near)\r\n  { id: 8, hash: \"79a796cf-8429-4a0d-b4c0-64c63fe81e5f\" }, //done-Top 10 platform based on amount(Near)\r\n  { id: 9, hash: \"27cd1d05-945e-4a51-b588-5e34c4e3d662\" }, //done-staking\r\n  { id: 10, hash: \"52c0bc46-3c8a-476f-84e4-9b050954ef41\" }, //Flow (cex) activity\r\n  { id: 11, hash: \"eb40355e-6ea6-4cc9-92bb-ead5fa097c96\" }, //done--Top dao\r\n];\r\n\r\nState.init({\r\n  light: true,\r\n  data: [],\r\n  isLoading: true,\r\n  error: [],\r\n});\r\n\r\nconst getMixProps = (data, dateKey, serieses, colors, chartOption) => {\r\n  data = data || [];\r\n  serieses = serieses || [{ key: \"\", seriesName: \"\", type: \"\", id: 1 }];\r\n  colors = colors || [];\r\n  chartOption = chartOption || {};\r\n\r\n  const dataFormat = serieses.map((series) => {\r\n    const dataFormated = data.map((d) => [d[dateKey] * 1000, d[series.key]]);\r\n    return {\r\n      data: dataFormated,\r\n      name: series.seriesName,\r\n      type: series.type,\r\n      axisId: series.id,\r\n    };\r\n  });\r\n  const props = {\r\n    series: dataFormat,\r\n    colors: colors,\r\n    chartOption: {\r\n      title: \"chart title\",\r\n      subtitle: \"chart subtitle\",\r\n      legend: true,\r\n      stacking: \"false\",\r\n      ...chartOption,\r\n    },\r\n\r\n    overrideOptions: {\r\n      plotOptions: {\r\n        column: {\r\n          stacking: \"false\",\r\n        },\r\n        series: {\r\n          dataGrouping: { enabled: false },\r\n        },\r\n      },\r\n    },\r\n    themeColor: { chart: themeColor.chart },\r\n    spinnerColors: themeColor.spinnerColors,\r\n  };\r\n  return props;\r\n};\r\n\r\nconst getPieProps = (data, [key, value], colors, chartOption) => {\r\n  data = data || [];\r\n  colors = colors || [];\r\n  chartOption = chartOption || {};\r\n\r\n  const dataFormat = data.map((s) => [s[key], s[value]]);\r\n  const props = {\r\n    data: dataFormat,\r\n    colors: colors,\r\n    chartOption: {\r\n      title: \"chart title\",\r\n      type: \"pie\",\r\n      legend: false,\r\n      connector: false,\r\n      ...chartOption,\r\n    },\r\n    themeColor: { chart: themeColor.chart },\r\n    spinnerColors: themeColor.spinnerColors,\r\n  };\r\n  return props;\r\n};\r\n\r\nconst formatNumber = (num) => {\r\n  if ((num ?? NaN) === NaN) return \"-\";\r\n  if (num >= 1000000000) {\r\n    return (num / 1000000000).toFixed(1).replace(/\\.0$/, \"\") + \"b\";\r\n  }\r\n  if (num >= 1000000) {\r\n    return (num / 1000000).toFixed(1).replace(/\\.0$/, \"\") + \"m\";\r\n  }\r\n  if (num >= 1000) {\r\n    return (num / 1000).toFixed(1).replace(/\\.0$/, \"\") + \"k\";\r\n  }\r\n  return num.toFixed(4);\r\n};\r\n\r\nconst handleData = () => {\r\n  const data = {};\r\n  const errors = [];\r\n  queryHashes.forEach(({ hash, id }) => {\r\n    const result = fetchData(hash);\r\n    if (result.error) errors.push(`hash${id} : ${result.error}`);\r\n    data[`hash${id}`] = {\r\n      ...result,\r\n      id,\r\n    };\r\n  });\r\n\r\n  if (Object.values(data).every((d) => !d.isLoading)) {\r\n    State.update({\r\n      data: data,\r\n      error: [...state.error, ...errors],\r\n      isLoading: false,\r\n    });\r\n  }\r\n};\r\nconst convertData = (data) => {\r\n  if (typeof data !== \"string\") {\r\n    return data;\r\n  }\r\n  let converted;\r\n  try {\r\n    converted = JSON.parse(data);\r\n  } catch (er) {\r\n    converted = data;\r\n  }\r\n  return converted;\r\n};\r\nconst fetchData = (hash) => {\r\n  const data = fetch(\r\n    `https://api.flipsidecrypto.com/api/v2/queries/${hash}/data/latest`,\r\n    {\r\n      subscribe: true,\r\n      method: \"GET\",\r\n      headers: {\r\n        Accept: \"*/*\",\r\n      },\r\n    }\r\n  );\r\n  const result = {\r\n    data: (data && convertData(data.body)) || null,\r\n    error: (data && !data.ok && (data.status || data.error)) || null,\r\n    isLoading: !data && !error,\r\n  };\r\n  return result;\r\n};\r\n\r\nif (state.isLoading) {\r\n  handleData();\r\n}\r\n\r\nif (state.error.length > 0) {\r\n  function hide() {\r\n    const errors = state.error;\r\n    errors.shift();\r\n    if (errors.length > 0) setTimeout(hide, 2500);\r\n    State.update({ error: errors });\r\n  }\r\n  setTimeout(hide, 2500);\r\n}\r\n\r\nreturn (\r\n  <div className=\"container-fluid py-2\">\r\n    <div className=\"pl-2\">\r\n      <div\r\n        className=\"my-4 shadow-sm pb-2 rounded-4\"\r\n        style={{ background: themeColor?.sbt_area?.section_bg }}\r\n      >\r\n        <Widget src=\"lord1.near/widget/header-dynamic\" props={generaltheme} />\r\n        <div style={{ marginLeft: \"1rem\" }}>\r\n          <Widget\r\n            src=\"lord1.near/widget/tab-contract-area\"\r\n            props={{\r\n              backgroundColor: themeColor?.tab_sbt?.backgroundColor,\r\n              textColor: themeColor?.tab_sbt?.textColor,\r\n              headerColor: themeColor?.tab_sbt?.headerColor,\r\n              numberColor: themeColor?.tab_sbt?.numberColor,\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row w-100 py-4 g-4\">\r\n        <div className=\" col-12 col-md-6\">\r\n          <div\r\n            style={{ background: themeColor?.sbt_area?.card_bg }}\r\n            className=\"w-100 mx-auto shadow-sm rounded-4\"\r\n          >\r\n            <h6\r\n              style={{ color: themeColor?.sbt_area?.card_title_color }}\r\n              className=\"pt-4 ps-4\"\r\n            >\r\n              <i> Age of developers' wallets distribution</i>\r\n            </h6>\r\n            <Widget\r\n              src=\"lord1.near/widget/Pie-chart\"\r\n              props={getPieProps(\r\n                state.data?.hash2?.data,\r\n                [\"date_diff\", \"signer\"],\r\n                themeColor.chartColor,\r\n                {\r\n                  title: \"\",\r\n                  type: \"pie\",\r\n                  connector: true,\r\n                  legend: true,\r\n                }\r\n              )}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\" col-12 col-md-6\">\r\n          <div\r\n            style={{ background: themeColor?.sbt_area?.card_bg }}\r\n            className=\"w-100 mx-auto shadow-sm rounded-4\"\r\n          >\r\n            <h6\r\n              style={{ color: themeColor?.sbt_area?.card_title_color }}\r\n              className=\"pt-4 ps-4\"\r\n            >\r\n              <i> Distribution of #Trxs among the developers.</i>\r\n            </h6>\r\n            <Widget\r\n              src=\"lord1.near/widget/Pie-chart\"\r\n              props={getPieProps(\r\n                state.data?.hash3?.data,\r\n                [\"number_of_transaction\", \"signer\"],\r\n                themeColor.chartColor,\r\n                {\r\n                  title: \"\",\r\n                  type: \"pie\",\r\n                  connector: true,\r\n                  legend: true,\r\n                }\r\n              )}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        className=\"my-4 shadow-sm  rounded-4\"\r\n        style={{ background: themeColor?.sbt_area?.section_bg }}\r\n      >\r\n        <Widget src=\"lord1.near/widget/header-dynamic\" props={areatheme} />\r\n        <div className=\"row w-100 pb-2 px-2 mx-0\">\r\n          <div\r\n            style={{ background: themeColor?.sbt_area?.card_bg }}\r\n            className=\"shadow-sm rounded-2 overflow-auto\"\r\n          >\r\n            <Widget\r\n              src=\"lord1.near/widget/table-pagination\"\r\n              props={{\r\n                themeColor: { table_pagination: themeColor.table_pagination },\r\n                data: state.data?.hash4?.data,\r\n                rowsCount: 10,\r\n                columns: [\r\n                  { title: \"Activity area\", key: \"project\", colors: \"#806ce1\" },\r\n                  { title: \"Transactions\", key: \"transactions\", round: \"yes\" },\r\n                  { title: \"Users\", key: \"active_users\", round: \"yes\" },\r\n                  { title: \"Avg Trxs\", key: \"avg_trxs\" },\r\n                  { title: \"Volume(Near)\", key: \"amount_near\", round: \"yes\" },\r\n                  { title: \"Fee (Near)\", key: \"fee_in_near\", round: \"yes\" },\r\n                ],\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        className=\"my-4 shadow-sm  rounded-4\"\r\n        style={{ background: themeColor?.sbt_area?.section_bg }}\r\n      >\r\n        <Widget src=\"lord1.near/widget/header-dynamic\" props={projecttheme} />\r\n        <div className=\"row g-4 w-100 pb-2 mx-0\">\r\n          <div className=\"col-6\">\r\n            <div\r\n              style={{ background: themeColor?.sbt_area?.card_bg }}\r\n              className=\"shadow-sm rounded-2 overflow-auto\"\r\n            >\r\n              <Widget\r\n                src=\"lord1.near/widget/table-pagination\"\r\n                props={{\r\n                  themeColor: { table_pagination: themeColor.table_pagination },\r\n                  data: state.data?.hash5?.data,\r\n                  columns: [\r\n                    { title: \"Project\", key: \"PROJECT\", colors: \"#806ce1\" },\r\n                    {\r\n                      title: \"Active Users\",\r\n                      key: \"ACTIVE_USERS\",\r\n                      round: \"yes\",\r\n                    },\r\n                  ],\r\n                  rowsCount: 5,\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-6\">\r\n            <div\r\n              style={{ background: themeColor?.sbt_area?.card_bg }}\r\n              className=\"shadow-sm rounded-2 overflow-auto\"\r\n            >\r\n              <Widget\r\n                src=\"lord1.near/widget/table-pagination\"\r\n                props={{\r\n                  themeColor: { table_pagination: themeColor.table_pagination },\r\n                  data: state.data?.hash6?.data,\r\n                  columns: [\r\n                    { title: \"Project\", key: \"PROJECT\", colors: \"#806ce1\" },\r\n                    {\r\n                      title: \"Transactions\",\r\n                      key: \"TRANSACTIONS\",\r\n                      round: \"yes\",\r\n                    },\r\n                  ],\r\n                  rowsCount: 5,\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-6\">\r\n            <div\r\n              style={{ background: themeColor?.sbt_area?.card_bg }}\r\n              className=\"shadow-sm rounded-2 overflow-auto\"\r\n            >\r\n              <Widget\r\n                src=\"lord1.near/widget/table-pagination\"\r\n                props={{\r\n                  themeColor: { table_pagination: themeColor.table_pagination },\r\n                  data: state.data?.hash7?.data,\r\n                  columns: [\r\n                    { title: \"Project\", key: \"PROJECT\", colors: \"#806ce1\" },\r\n                    { title: \"Fee(Near)\", key: \"FEE_IN_NEAR\", round: \"yes\" },\r\n                  ],\r\n                  rowsCount: 5,\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-6\">\r\n            <div\r\n              style={{ background: themeColor?.sbt_area?.card_bg }}\r\n              className=\"shadow-sm rounded-2 overflow-auto\"\r\n            >\r\n              <Widget\r\n                src=\"lord1.near/widget/table-pagination\"\r\n                props={{\r\n                  themeColor: { table_pagination: themeColor.table_pagination },\r\n                  data: state.data?.hash8?.data,\r\n\r\n                  columns: [\r\n                    { title: \"Project\", key: \"PROJECT\", colors: \"#806ce1\" },\r\n                    { title: \"Volume(Near)\", key: \"AMOUNT_NEAR\", round: \"yes\" },\r\n                  ],\r\n                  rowsCount: 5,\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div\r\n        className=\"my-4 shadow-sm  rounded-4\"\r\n        style={{ background: themeColor?.sbt_area?.section_bg }}\r\n      >\r\n        <Widget src=\"lord1.near/widget/header-dynamic\" props={staketheme} />\r\n        <div className=\"row w-100 pb-2 px-2 mx-0\">\r\n          <div\r\n            style={{ background: themeColor?.sbt_area?.card_bg }}\r\n            className=\"shadow-sm rounded-2\"\r\n          >\r\n            <Widget\r\n              src=\"lord1.near/widget/multiple-mix-chart\"\r\n              props={{\r\n                data: state.data?.hash9?.data,\r\n                charts: [\r\n                  {\r\n                    title: \"Volume(Near)\",\r\n                    subtitle:\r\n                      \"How much staked or unstaked by developers' wallets\",\r\n                    dateKey: \"week\",\r\n                    oppKey: \"staking_amount\",\r\n                    negKey: \"unstaking_amount\",\r\n                    oppTitle: \"Staking\",\r\n                    negTitle: \"Unstaking\",\r\n                    type: \"spline\",\r\n                  },\r\n                  {\r\n                    title: \"User\",\r\n                    subtitle: \"How many User staked or unstaked\",\r\n                    dateKey: \"week\",\r\n                    oppKey: \"staking_signer\",\r\n                    negKey: \"unstaking_signer\",\r\n                    oppTitle: \"Staking\",\r\n                    negTitle: \"Unstaking\",\r\n                    type: \"areaspline\",\r\n                  },\r\n                  {\r\n                    title: \"Transactions\",\r\n                    subtitle:\r\n                      \"How many staked or unstaked transaction done by developers\",\r\n                    dateKey: \"week\",\r\n                    oppKey: \"staking_trxs\",\r\n                    negKey: \"unstaking_trxs\",\r\n                    oppTitle: \"Staking\",\r\n                    negTitle: \"Unstaking\",\r\n                    type: \"column\",\r\n                  },\r\n                ],\r\n                themeColor: { chart: themeColor.chart },\r\n                colors: themeColor.chartColor,\r\n                spinnerColors: themeColor?.spinnerColors,\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div\r\n        className=\"my-4 shadow-sm  rounded-4\"\r\n        style={{ background: themeColor?.sbt_area?.section_bg }}\r\n      >\r\n        <Widget src=\"lord1.near/widget/header-dynamic\" props={flowtheme} />\r\n        <div className=\"row g-4 w-100 pb-2 px-2 mx-0\">\r\n          <div\r\n            style={{ background: themeColor?.sbt_area?.card_bg }}\r\n            className=\"shadow-sm rounded-2\"\r\n          >\r\n            <Widget\r\n              src=\"lord1.near/widget/multiple-mix-chart\"\r\n              props={{\r\n                data: state.data?.hash10?.data,\r\n                charts: [\r\n                  {\r\n                    title: \"Near Volume\",\r\n                    subtitle:\r\n                      \"The developers' interactions with Cexs, inflow and outflow- Volume(Near)\",\r\n                    dateKey: \"week\",\r\n                    oppKey: \"inflow_amount\",\r\n                    negKey: \"outflow_amount\",\r\n                    oppTitle: \"inflow\",\r\n                    negTitle: \"outflow\",\r\n                    type: \"areaspline\",\r\n                  },\r\n                  {\r\n                    title: \"Sender/Receiver\",\r\n                    subtitle:\r\n                      \"The developers' interactions with Cexs, inflow and outflow- wallets\",\r\n                    dateKey: \"week\",\r\n                    oppKey: \"inflow_signer\",\r\n                    negKey: \"outflow_signer\",\r\n                    oppTitle: \"inflow\",\r\n                    negTitle: \"outflow\",\r\n                    type: \"column\",\r\n                  },\r\n                  {\r\n                    title: \"Send/Receive transactions\",\r\n                    subtitle:\r\n                      \"The SBT holder's interactions with Cexs, inflow and outflow- transactions\",\r\n                    dateKey: \"week\",\r\n                    oppKey: \"inflow_trxs\",\r\n                    negKey: \"outflow_trxs\",\r\n                    oppTitle: \"inflow\",\r\n                    negTitle: \"outflow\",\r\n                    type: \"column\",\r\n                  },\r\n                ],\r\n                themeColor: { chart: themeColor.chart },\r\n                colors: themeColor.chartColor,\r\n                spinnerColors: themeColor?.spinnerColors,\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div\r\n        className=\"my-4 shadow-sm  rounded-4\"\r\n        style={{ background: themeColor?.sbt_area?.section_bg }}\r\n      >\r\n        <Widget src=\"lord1.near/widget/header-dynamic\" props={daotheme} />\r\n        <div className=\"row w-100 pb-2 px-2 mx-0\">\r\n          <div\r\n            style={{ background: themeColor?.sbt_area?.card_bg }}\r\n            className=\"shadow-sm rounded-2 overflow-auto\"\r\n          >\r\n            <Widget\r\n              src=\"lord1.near/widget/table-pagination\"\r\n              props={{\r\n                themeColor: { table_pagination: themeColor.table_pagination },\r\n                data: state.data?.hash11?.data,\r\n                columns: [\r\n                  { title: \"Project\", key: \"project\", colors: \"#806ce1\" },\r\n                  { title: \"Transactions\", key: \"transactions\", round: \"yes\" },\r\n                  { title: \"Active Users\", key: \"active_users\", round: \"yes\" },\r\n                ],\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"toast-container position-fixed bottom-0 end-0 p-3\">\r\n        {state.error.length > 0 &&\r\n          state.error.map((er) => (\r\n            <div\r\n              className=\"toast show align-items-center text-bg-danger border-0\"\r\n              role=\"alert\"\r\n              aria-live=\"assertive\"\r\n              aria-atomic=\"true\"\r\n            >\r\n              <div className=\"d-flex\">\r\n                <div className=\"toast-body\">{er}</div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\n// const props = {\r\n//   themeColor: {\r\n//     dynamic_header: {\r\n//       afterbrandcolor: \"#789efb\",\r\n//       color1brand: \"#000\",\r\n//       color2brand: \"#806ce1\",\r\n//       colordescription: \"#806ce1\",\r\n//       background:\r\n//         \"radial-gradient(circle, rgba(210,202,250,1) 0%, rgba(230,230,231,0.01) 0%, rgba(235,238,255,1) 100%, rgba(235,231,253,1) 100%, rgba(255,241,241,1) 100%, rgba(46,52,90,1) 100%);\",\r\n//     },\r\n//     tab_sbt: {\r\n//       backgroundColor: \"rgb(49,62,89)\",\r\n//       textColor: \"#fff\",\r\n//       headerColor: \"#806ce1\",\r\n//       numberColor: \"#fff\",\r\n//     },\r\n//     sbt_area: {\r\n//       section_bg: \"rgba(25,33,80)\",\r\n//       card_bg: \"rgb(49, 62, 89)\",\r\n//       card_title_color: \"#806ce1\",\r\n//     },\r\n//   },\r\n// };\r\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/lord1.near/widget/contract-area", "fact_widget_deployments_id": "9393534e790240f88dade1c356109556", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}