{"tx_hash": "Gvko5XZLGtALbNFojfGLpA6ugJEdwDUUMbhF1x2CFLzf", "action_id_social": "A3jVLfMHVe6dbpZGamBFxejVtCBrhGgUsCrU4GmAffRi-0-widget", "block_id": 101499447, "block_timestamp": "2023-09-19T20:25:40.796Z", "signer_id": "lord1.near", "widget_name": "election-scan", "source_code": "const themeColor = props.themeColor;\nconst generaltheme = {\n  height: \"110px\",\n  align: \"center\",\n  description: \"Tracking the activity in Election process.\",\n  brand: \"Election Scan\",\n  fontsize: \"100\",\n  fontweight: \"25px\",\n  afterbrand: \"\ud83c\udfe6\",\n  afterbrandcolor: themeColor?.dynamic_header?.afterbrandcolor || \"#789efb\",\n  fontbrand: \" Arial, sans-serif\",\n  color1brand: themeColor?.dynamic_header?.color1brand || \"#000\",\n  color2brand: themeColor?.dynamic_header?.color2brand || \"#806ce1\",\n  colordescription: themeColor?.dynamic_header?.colordescription || \"#806ce1\",\n  fontsubtitle: \" Arial, sans-serif\",\n  background:\n    themeColor?.dynamic_header?.background ||\n    \"radial-gradient(circle, rgba(210,202,250,1) 0%, rgba(230,230,231,0.01) 0%, rgba(235,238,255,1) 100%, rgba(235,231,253,1) 100%, rgba(255,241,241,1) 100%, rgba(46,52,90,1) 100%);\",\n};\n\nconst queryHashes = [{ id: 1, hash: \"2286f370-240d-4e62-a301-3331ec2e2ef0\" }];\n\nState.init({\n  filter: \"\",\n  data: [],\n  filteredData: [],\n  isLoading: true,\n  error: [],\n});\n\nconst Input = styled.input`\ncolor:${themeColor?.search_sbt?.input_text_color};\nbackground-color:${themeColor?.search_sbt?.input_bg};\nborder: 1px solid ${themeColor?.search_sbt?.input_border};\n&:focus{\n  background-color:${themeColor?.search_sbt?.input_bg};\n  color:${themeColor?.search_sbt?.input_text_color};\nborder: 1px solid ${themeColor?.search_sbt?.input_border};\n};\n&:hover{\n  background-color:${themeColor?.search_sbt?.input_bg_hover}\n};\n\n`;\nconst Button = styled.button`\n    color: ${themeColor?.search_sbt?.search_btn_text};\n    font-size: 16px;\n    padding: 0.5rem 1rem;\n    font-weight: 400;\n    background-color: ${themeColor?.search_sbt?.search_btn_bg};\n    &:hover {background-color: ${themeColor?.search_sbt?.search_btn_bg_hover}};\n    border: 1px solid ${themeColor?.search_sbt?.search_btn_bg};\n    box-shadow: 0 2px 0 rgba(0, 0, 0, 0.02);\n    min-height: calc(1.5em + 1rem + 2px);\n    border-radius: 40px;\n    line-height: 29px;\n    letter-spacing: 0.01em;\n`;\nconst handleData = () => {\n  const data = {};\n  const errors = [];\n  queryHashes.forEach(({ hash, id }) => {\n    const result = fetchData(hash);\n    if (result.error) errors.push(`hash${id} : ${result.error}`);\n    data[`hash${id}`] = {\n      ...result,\n      id,\n    };\n  });\n\n  if (Object.values(data).every((d) => !d.isLoading)) {\n    State.update({\n      data: data,\n      filteredData: data.hash1.data,\n      error: [...state.error, ...errors],\n      isLoading: false,\n    });\n  }\n};\nconst inputHandler = ({ target }) => {\n  const filter = target.value.toLowerCase().trim();\n  State.update({ filter: filter });\n};\n\nconst filterData = () => {\n  if (!state.filter.length) {\n    State.update({ error: [...state.error, \"please insert an address\"] });\n    return;\n  }\n  if (state.data === state.filter) {\n    State.update({ error: [...state.error, \"please insert a new address\"] });\n    return;\n  }\n\n  const filteredData = state.data.hash1?.data?.filter((row) =>\n    Object.values(row)\n      .join()\n      .toLocaleLowerCase()\n      .includes(state.filter.toLocaleLowerCase())\n  );\n  State.update({ filteredData: filteredData || [] });\n};\nconst fetchData = (hash) => {\n  const data = fetch(\n    `https://api.flipsidecrypto.com/api/v2/queries/${hash}/data/latest`,\n    {\n      subscribe: true,\n      method: \"GET\",\n      headers: {\n        Accept: \"*/*\",\n      },\n    }\n  );\n  const result = {\n    data: (data && data.body) || null,\n    error: (data && !data.ok && (data.status || data.error)) || null,\n    isLoading: !data && !error,\n  };\n  return result;\n};\n\nif (state.isLoading) {\n  handleData();\n}\n\nif (state.error.length > 0) {\n  function hide() {\n    const errors = state.error;\n    errors.shift();\n    if (errors.length > 0) setTimeout(hide, 2500);\n    State.update({ error: errors });\n  }\n  setTimeout(hide, 2500);\n}\n\nreturn (\n  <div\n    style={{ backgroundColor: themeColor.page_bg }}\n    className=\"container-fluid py-2\"\n  >\n    <div className=\"pl-2\">\n      <div\n        style={{ background: themeColor?.sbt_area?.section_bg }}\n        className=\"shadow-sm rounded-2 overflow-auto\"\n      >\n        <Widget src=\"lord1.near/widget/header-dynamic\" props={generaltheme} />\n\n        <div className=\"search w-100 pl-4 py-4\">\n          <div className=\"row\">\n            <div className=\"col-8 \">\n              <Input\n                onBlur={inputHandler}\n                defaultValue={state.filter}\n                type=\"input\"\n                className=\"form-control form-control-lg rounded-4\"\n                id=\"address\"\n                placeholder=\"address/hash/time/function ...\"\n              />\n            </div>\n            <div className=\"col-4 col-lg-auto\">\n              <Button\n                disabled={state.isLoading}\n                onClick={filterData}\n                className=\"btn-lg\"\n                type=\"button\"\n                style={{ \"margin-left\": \"1%\" }}\n              >\n                {state.isLoading ? (\n                  <div className=\"text-center px-4\">\n                    <div\n                      className=\"spinner-border spinner-border-sm\"\n                      role=\"status\"\n                    >\n                      <span className=\"visually-hidden\">Loading...</span>\n                    </div>\n                  </div>\n                ) : (\n                  \"search\"\n                )}\n              </Button>\n            </div>\n          </div>\n        </div>\n        <div className=\"w-100 p-2\" style={{ \"border-radius\": \"100px\" }}>\n          <Widget\n            src=\"lord1.near/widget/table-pagination\"\n            props={{\n              themeColor: { table_pagination: themeColor.table_pagination },\n              data: state.filteredData,\n              columns: [\n                { title: \"Number\", key: \"rank\", colors: \"#806ce1\" },\n                {\n                  title: \"Status\",\n                  key: \"status\",\n                },\n                { title: \"Timestamp\", key: \"time\" },\n                {\n                  title: \"Signer\",\n                  key: \"SINGER\",\n                  link: \"yes\",\n                  beforehref:\n                    \"https://near.social/mob.near/widget/ProfilePage?accountId=\",\n                  hyperlink: \"yes\",\n                },\n                { title: \"Function \", key: \"function\" },\n                {\n                  title: \"Target\",\n                  key: \"target\",\n                  explain: \"yes\",\n                },\n                {\n                  title: \"Info\",\n                  key: \"PROP\",\n                  explain: \"yes\",\n                },\n                { title: \"Fee(Near)\", key: \"fee\" },\n\n                {\n                  title: \"Hash\",\n                  key: \"trxs\",\n                  link: \"yes\",\n                  beforehref: \"https://nearblocks.io/txns/\",\n                  afterhref: \"\",\n                },\n              ],\n              rowsCount: 20,\n            }}\n          />\n        </div>\n      </div>\n      <div className=\"toast-container position-fixed bottom-0 end-0 p-3\">\n        {state.error.length > 0 &&\n          state.error.map((er) => (\n            <div\n              className=\"toast show align-items-center text-bg-danger border-0\"\n              role=\"alert\"\n              aria-live=\"assertive\"\n              aria-atomic=\"true\"\n            >\n              <div className=\"d-flex\">\n                <div className=\"toast-body\">{er}</div>\n              </div>\n            </div>\n          ))}\n      </div>\n    </div>\n  </div>\n);\n\n// const props = {\n//   themeColor: {\n//     dynamic_header: {\n//       afterbrandcolor: \"#789efb\",\n//       color1brand: \"#000\",\n//       color2brand: \"#806ce1\",\n//       colordescription: \"#806ce1\",\n//       background:\n//         \"radial-gradient(circle, rgba(210,202,250,1) 0%, rgba(230,230,231,0.01) 0%, rgba(235,238,255,1) 100%, rgba(235,231,253,1) 100%, rgba(255,241,241,1) 100%, rgba(46,52,90,1) 100%);\",\n//     },\n//     tab_sbt: {\n//       backgroundColor: \"rgb(49,62,89)\",\n//       textColor: \"#fff\",\n//       headerColor: \"#806ce1\",\n//       numberColor: \"#fff\",\n//     },\n//     sbt_area: {\n//       section_bg: \"rgba(25,33,80)\",\n//       card_bg: \"rgb(49, 62, 89)\",\n//       card_title_color: \"#806ce1\",\n//     },\n//   },\n// };\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/lord1.near/widget/election-scan", "fact_widget_deployments_id": "5955a2c1dde35609e227473b7ee34f12", "inserted_timestamp": "2023-09-19T22:26:51.599Z", "modified_timestamp": "2023-09-19T22:26:51.599Z", "__row_index": 0}