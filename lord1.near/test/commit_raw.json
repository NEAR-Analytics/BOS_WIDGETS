{"tx_hash": "BcKDLrTqPcfep37kCgBZ4grChWmZ1WcwkMrFW9aKJ7T8", "action_id_social": "AfLvT1ChgkJy5vYG69VzNeYh1sPQRYrbNdGD8JbKkMPH-0-widget", "block_id": 103701967, "block_timestamp": "2023-10-19T02:40:22.054Z", "signer_id": "lord1.near", "widget_name": "test", "source_code": "const Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  gap: 3em;\r\n  padding-bottom: 3em;\r\n`;\r\n\r\nconst Header = styled.h1`\r\n  font-style: normal;\r\n  font-weight: 700;\r\n  font-size: 2em;\r\n  line-height: 1.4em;\r\n  text-align: center;\r\n  color: #000000;\r\n`;\r\n\r\nconst Form = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n  width: 60%;\r\n  gap: 1em;\r\n`;\r\n\r\nconst FormHeader = styled.h3`\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: flex-start;\r\n  padding: 0px 0px 0.5em;\r\n  border-bottom: 1px solid #eceef0;\r\n  font-style: normal;\r\n  font-weight: 700;\r\n  font-size: 1.125em;\r\n  line-height: 1.25em;\r\n  color: #000000;\r\n  width: 100%;\r\n`;\r\n\r\nconst FormFooter = styled.div`\r\n  display: flex;\r\n  flex-direction: row-reverse;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n`;\r\n\r\nState.init({\r\n  blockchain: null,\r\n  blockchainError: \"\",\r\n  contract_address: \"\",\r\n  contract_addressError: \"\",\r\n  protocol: \"\",\r\n  protocolError: \"\",\r\n  contract_name: \"\",\r\n  contract_nameError: \"\",\r\n  label: null,\r\n  labelError: \"\",\r\n  sublabel: null,\r\n  sublabelError: \"\",\r\n  discord: \"\",\r\n  discordError: \"\",\r\n  accountsWithPermissions: [],\r\n  accountsWithPermissionsIsFetched: false,\r\n});\r\n\r\nif (!state.accountsWithPermissionsIsFetched) {\r\n  Near.asyncView(\r\n    \"social.near\",\r\n    \"debug_get_permissions\",\r\n    { account_id: context.accountId },\r\n    \"final\",\r\n    false\r\n  ).then((data) =>\r\n    State.update({\r\n      accountsWithPermissions: data\r\n        .map(([info]) => info)\r\n        .filter((info) => \"AccountId\" in info)\r\n        .map(({ AccountId }) => AccountId),\r\n      accountsWithPermissionsIsFetched: true,\r\n    })\r\n  );\r\n}\r\n\r\nconst validateForm = () => {\r\n  return (\r\n    state.contract_address &&\r\n    state.contract_addressError === \"\" &&\r\n    state.blockchain &&\r\n    state.blockchainError === \"\" &&\r\n    state.label &&\r\n    state.labelError === \"\" &&\r\n    state.sublabel &&\r\n    state.sublabelError === \"\" &&\r\n    state.protocol &&\r\n    state.protocolError === \"\" &&\r\n    state.contract_name &&\r\n    state.contract_nameError === \"\" &&\r\n    (!state.discord || state.discordError === \"\")\r\n  );\r\n};\r\n\r\nreturn (\r\n  <Container>\r\n    <div>\r\n      <Header>Add a Label to Flipside</Header>\r\n    </div>\r\n    <Form>\r\n      <FormHeader>Label Form</FormHeader>\r\n      <Widget\r\n        src={`lord1.near/widget/Dropdown`}\r\n        props={{\r\n          label: \"Select a Supported Chain *\",\r\n          placeholder: \"Chains \",\r\n          options: [\r\n            { text: \"Algorand\", value: \"Algorand\" },\r\n            { text: \"Arbitrum\", value: \"Arbitrum\" },\r\n            { text: \"Aurora\", value: \"Aurora\" },\r\n            { text: \"Avalanche\", value: \"Avalanche\" },\r\n            { text: \"Axelar\", value: \"Axelar\" },\r\n            { text: \"Base\", value: \"Base\" },\r\n            { text: \"Bitcoin\", value: \"Bitcoin\" },\r\n            { text: \"BSC/Binance\", value: \"BSC/Binance\" },\r\n            { text: \"Cosmos\", value: \"Cosmos\" },\r\n            { text: \"Ethereum\", value: \"Ethereum\" },\r\n            { text: \"EVMOS\", value: \"EVMOS\" },\r\n            { text: \"Flow\", value: \"Flow\" },\r\n            { text: \"Gnosis\", value: \"Gnosis\" },\r\n            { text: \"Near *\", value: \"Near\" },\r\n            { text: \"Optimism\", value: \"Optimism\" },\r\n            { text: \"Osmosis\", value: \"Osmosis\" },\r\n            { text: \"Polygon\", value: \"Polygon\" },\r\n            { text: \"Sei\", value: \"Sei\" },\r\n            { text: \"Solana\", value: \"Solana\" },\r\n            { text: \"Terra\", value: \"Terra\" },\r\n            { text: \"Thorchain\", value: \"Thorchain\" },\r\n          ],\r\n          dev: state.blockchain,\r\n          update: (blockchain) => State.update({ blockchain }),\r\n          setError: (blockchainError) => State.update({ blockchainError }),\r\n          error: state.blockchainError,\r\n        }}\r\n      />\r\n\r\n      <Widget\r\n        src={`contribut3.near/widget/Inputs.Text`}\r\n        props={{\r\n          label: \"Paste the Contract Address *\",\r\n          placeholder: \"OxA9D1e08C7793af67e9d92fe308d5697FB81d3E43\",\r\n          value: state.contract_address,\r\n          onChange: (contract_address) => State.update({ contract_address }),\r\n          validate: () => {\r\n            if (state.contract_address.length < 5) {\r\n              State.update({\r\n                contract_addressError: \"Name must be at least 5 characters\",\r\n              });\r\n              return;\r\n            }\r\n\r\n            if (state.contract_address.length > 100) {\r\n              State.update({\r\n                contract_addressError: \"Name must be less than 100 characters\",\r\n              });\r\n              return;\r\n            }\r\n\r\n            State.update({ contract_addressError: \"\" });\r\n          },\r\n          error: state.contract_addressError,\r\n        }}\r\n      />\r\n      <Widget\r\n        src={`contribut3.near/widget/Inputs.Text`}\r\n        props={{\r\n          label: \"Add the protocol the contract belongs to *\",\r\n          placeholder: \"Coinbase\",\r\n          value: state.protocol,\r\n          onChange: (protocol) => State.update({ protocol }),\r\n          validate: () => {\r\n            if (state.protocol.length < 2) {\r\n              State.update({\r\n                protocolError: \"Name must be at least 2 characters\",\r\n              });\r\n              return;\r\n            }\r\n\r\n            if (state.protocol.length > 100) {\r\n              State.update({\r\n                protocolError: \"Name must be less than 100 characters\",\r\n              });\r\n              return;\r\n            }\r\n\r\n            State.update({ protocolError: \"\" });\r\n          },\r\n          error: state.protocolError,\r\n        }}\r\n      />\r\n      <Widget\r\n        src={`contribut3.near/widget/Inputs.Text`}\r\n        props={{\r\n          label: \"Add the contract name *\",\r\n          placeholder: \"Coinbase hot wallet 10\",\r\n          value: state.contract_name,\r\n          onChange: (contract_name) => State.update({ contract_name }),\r\n          validate: () => {\r\n            if (state.contract_name.length < 5) {\r\n              State.update({\r\n                contract_nameError: \"Name must be at least 5 characters\",\r\n              });\r\n              return;\r\n            }\r\n\r\n            if (state.contract_name.length > 100) {\r\n              State.update({\r\n                contract_nameError: \"Name must be less than 100 characters\",\r\n              });\r\n              return;\r\n            }\r\n\r\n            State.update({ contract_nameError: \"\" });\r\n          },\r\n          error: state.contract_nameError,\r\n        }}\r\n      />\r\n\r\n      <Widget\r\n        src={`lord1.near/widget/Dropdown`}\r\n        props={{\r\n          label: \"Select a Supported Label Type *\",\r\n          placeholder: \"Label\",\r\n          options: [\r\n            { text: \"cex\", value: \"cex\" },\r\n            { text: \"chadmin\", value: \"chadmin\" },\r\n            { text: \"dapp\", value: \"dapp\" },\r\n            { text: \"defi\", value: \"defi\" },\r\n            { text: \"dex\", value: \"dex\" },\r\n            { text: \"flotsam\", value: \"flotsam\" },\r\n            { text: \"layer2\", value: \"layer2\" },\r\n            { text: \"nft\", value: \"nft\" },\r\n            { text: \"operator\", value: \"operator\" },\r\n            { text: \"token\", value: \"token\" },\r\n          ],\r\n          dev: state.label,\r\n          update: (label) => State.update({ label }),\r\n          setError: (labelError) => State.update({ labelError }),\r\n          error: state.labelError,\r\n        }}\r\n      />\r\n      <Widget\r\n        src={`lord1.near/widget/Dropdown`}\r\n        props={{\r\n          label: \"Select a Supported Label Subtype *\",\r\n          placeholder: \"Subtype\",\r\n          options: [\r\n            { text: \"aggregator_contract\", value: \"aggregator_contract\" },\r\n            { text: \"airdrop_contract\", value: \"airdrop_contract\" },\r\n            { text: \"auction\", value: \"auction\" },\r\n            { text: \"bridge\", value: \"bridge\" },\r\n            { text: \"chadmin\", value: \"chadmin\" },\r\n            { text: \"custody_contract\", value: \"custody_contract\" },\r\n            { text: \"dao\", value: \"dao\" },\r\n            { text: \"deposit_wallet\", value: \"deposit_wallet\" },\r\n            { text: \"operator\", value: \"operator\" },\r\n            { text: \"distributor_cex\", value: \"distributor_cex\" },\r\n            { text: \"donation_address\", value: \"donation_address\" },\r\n            { text: \"escrow\", value: \"escrow\" },\r\n            { text: \"fee_wallet\", value: \"fee_wallet\" },\r\n            { text: \"foundation\", value: \"foundation\" },\r\n            { text: \"general_contract\", value: \"general_contract\" },\r\n            { text: \"genesis_block\", value: \"genesis_block\" },\r\n            { text: \"governance\", value: \"governance\" },\r\n            { text: \"hot_wallet\", value: \"hot_wallet\" },\r\n            { text: \"marketplace\", value: \"marketplace\" },\r\n            { text: \"memo_hot_wallet\", value: \"memo_hot_wallet\" },\r\n            { text: \"mining_pool\", value: \"mining_pool\" },\r\n            { text: \"mint_burn\", value: \"mint_burn\" },\r\n            { text: \"mint_contract\", value: \"mint_contract\" },\r\n            { text: \"multisig\", value: \"multisig\" },\r\n            { text: \"nf_position_manager\", value: \"nf_position_manager\" },\r\n            { text: \"nf_token_contract\", value: \"nf_token_contract\" },\r\n            { text: \"nft\", value: \"nft\" },\r\n            { text: \"oracle\", value: \"oracle\" },\r\n            { text: \"pool\", value: \"pool\" },\r\n            { text: \"reserve\", value: \"reserve\" },\r\n            { text: \"rewards\", value: \"rewards\" },\r\n            { text: \"router\", value: \"router\" },\r\n            { text: \"staking_contract\", value: \"staking_contract\" },\r\n            { text: \"strategy\", value: \"strategy\" },\r\n            { text: \"swap_contract\", value: \"swap_contract\" },\r\n            { text: \"swap_router\", value: \"swap_router\" },\r\n            { text: \"token_address\", value: \"token_address\" },\r\n            { text: \"token_contract\", value: \"token_contract\" },\r\n            { text: \"token_distribution\", value: \"token_distribution\" },\r\n            { text: \"token_sale\", value: \"token_sale\" },\r\n            { text: \"token_vesting\", value: \"token_vesting\" },\r\n            { text: \"toxic\", value: \"toxic\" },\r\n            { text: \"treasury\", value: \"treasury\" },\r\n            { text: \"validator\", value: \"validator\" },\r\n            { text: \"vault\", value: \"vault\" },\r\n            { text: \"voting\", value: \"voting\" },\r\n          ],\r\n          dev: state.sublabel,\r\n          update: (sublabel) => State.update({ sublabel }),\r\n          setError: (sublabelError) => State.update({ sublabelError }),\r\n          error: state.sublabelError,\r\n        }}\r\n      />\r\n      <Widget\r\n        src={`contribut3.near/widget/Inputs.Text`}\r\n        props={{\r\n          label: \"Discord Handle\",\r\n          placeholder: \"@sick_discord_handle\",\r\n          value: state.discord,\r\n          onChange: (discord) => State.update({ discord }),\r\n          validate: () => {\r\n            if (state.discord.length < 2) {\r\n              State.update({\r\n                discordError: \"Name must be at least 2 characters\",\r\n              });\r\n              return;\r\n            }\r\n\r\n            if (state.discord.length > 20) {\r\n              State.update({\r\n                discordError: \"Name must be less than 20 characters\",\r\n              });\r\n              return;\r\n            }\r\n\r\n            State.update({ discordError: \"\" });\r\n          },\r\n          error: state.discordError,\r\n        }}\r\n      />\r\n      <FormFooter>\r\n        <Widget\r\n          src={`contribut3.near/widget/Buttons.Green`}\r\n          props={{\r\n            disabled: !validateForm(),\r\n            onClick: () => {\r\n              if (!validateForm()) return;\r\n              const data = {\r\n                labelrecord: {\r\n                  gateway: \"flipside_gateway\",\r\n                  value: {\r\n                    blockchain: state.blockchain.value,\r\n                    contract_address: state.contract_address,\r\n                    protocol: state.protocol,\r\n                    contract_name: state.contract_name,\r\n                    label_type: state.label.value,\r\n                    label_subtype: state.sublabel.value,\r\n                    discord_handle: state.discord,\r\n                  },\r\n                },\r\n              };\r\n\r\n              const transactions = [\r\n                {\r\n                  contractName: \"social.near\",\r\n                  methodName: \"register_label\",\r\n                  args: { data },\r\n                },\r\n              ];\r\n              Near.call(transactions);\r\n            },\r\n            text: (\r\n              <>\r\n                <svg\r\n                  width=\"17\"\r\n                  height=\"18\"\r\n                  viewBox=\"0 0 17 18\"\r\n                  fill=\"none\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                  <path\r\n                    d=\"M2.875 16.5V12.75M2.875 5.25V1.5M1 3.375H4.75M1 14.625H4.75M9.25 2.25L7.94937 5.63165C7.73786 6.18157 7.6321 6.45653 7.46765 6.68781C7.32189 6.8928 7.1428 7.07189 6.93781 7.21765C6.70653 7.3821 6.43157 7.48786 5.88165 7.69937L2.5 9L5.88165 10.3006C6.43157 10.5121 6.70653 10.6179 6.93781 10.7824C7.1428 10.9281 7.32189 11.1072 7.46765 11.3122C7.6321 11.5435 7.73786 11.8184 7.94937 12.3684L9.25 15.75L10.5506 12.3684C10.7621 11.8184 10.8679 11.5435 11.0324 11.3122C11.1781 11.1072 11.3572 10.9281 11.5622 10.7824C11.7935 10.6179 12.0684 10.5121 12.6184 10.3006L16 9L12.6184 7.69937C12.0684 7.48786 11.7935 7.3821 11.5622 7.21765C11.3572 7.07189 11.1781 6.8928 11.0324 6.68781C10.8679 6.45653 10.7621 6.18157 10.5506 5.63165L9.25 2.25Z\"\r\n                    stroke=\"#11181C\"\r\n                    stroke-width=\"1.66667\"\r\n                    stroke-linecap=\"round\"\r\n                    stroke-linejoin=\"round\"\r\n                  />\r\n                </svg>\r\n                Submit Contract to Flipside\r\n              </>\r\n            ),\r\n          }}\r\n        />\r\n      </FormFooter>\r\n    </Form>\r\n  </Container>\r\n);\r\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/lord1.near/widget/test", "fact_widget_deployments_id": "695281d66885846355c3d10b4f2ab3d3", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 40}