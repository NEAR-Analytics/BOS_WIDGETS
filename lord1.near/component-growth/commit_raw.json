{"tx_hash": "9bqs2PbgYzELCZJVSG5WsHPnXETgvBt5n5MX3MF1kzqX", "action_id_social": "AfZb7oJBAZY87tbQ2vn4AA5xvriwJyPee7kMuYbZ33BY-0-widget", "block_id": 109094761, "block_timestamp": "2023-12-29T16:30:24.795Z", "signer_id": "lord1.near", "widget_name": "component-growth", "source_code": "const themeColor = props.themeColor;\r\nconst generaltheme = {\r\n  height: \"110px\",\r\n  align: \"center\",\r\n  description: \"\",\r\n  brand: \"Dev\",\r\n  fontsize: \"40px\",\r\n  fontweight: \"25px\",\r\n  afterbrand: \"Activity\",\r\n  afterbrandcolor: themeColor?.dynamic_header?.afterbrandcolor || \"#789efb\",\r\n  fontbrand: \" Arial, sans-serif\",\r\n  color1brand: themeColor?.dynamic_header?.color1brand || \"#000\",\r\n  color2brand: themeColor?.dynamic_header?.color2brand || \"#806ce1\",\r\n  colordescription: themeColor?.dynamic_header?.colordescription || \"#806ce1\",\r\n  fontsubtitle: \" Arial, sans-serif\",\r\n  background:\r\n    themeColor?.dynamic_header?.background ||\r\n    \"radial-gradient(circle, rgba(210,202,250,1) 0%, rgba(230,230,231,0.01) 0%, rgba(235,238,255,1) 100%, rgba(235,231,253,1) 100%, rgba(255,241,241,1) 100%, rgba(46,52,90,1) 100%);\",\r\n};\r\nconst areatheme = {\r\n  height: \"110px\",\r\n  align: \"center\",\r\n  description: \"\",\r\n  brand: \"Developer\",\r\n  fontsize: \"40px\",\r\n  fontweight: \"25px\",\r\n  afterbrand: \"List \",\r\n  afterbrandcolor: themeColor?.dynamic_header?.afterbrandcolor || \"#789efb\",\r\n  fontbrand: \" Arial, sans-serif\",\r\n  color1brand: themeColor?.dynamic_header?.color1brand || \"#000\",\r\n  color2brand: themeColor?.dynamic_header?.color2brand || \"#806ce1\",\r\n  colordescription: themeColor?.dynamic_header?.colordescription || \"#806ce1\",\r\n  fontsubtitle: \" Arial, sans-serif\",\r\n  background:\r\n    themeColor?.dynamic_header?.background ||\r\n    \"radial-gradient(circle, rgba(210,202,250,1) 0%, rgba(230,230,231,0.01) 0%, rgba(235,238,255,1) 100%, rgba(235,231,253,1) 100%, rgba(255,241,241,1) 100%, rgba(46,52,90,1) 100%);\",\r\n};\r\n\r\nconst queryHashes = [\r\n  { id: 0, hash: \"b5367144-cab7-4958-8aee-47413aee5f48\" }, // year\r\n  { id: 1, hash: \"e29fa083-fcce-4ed5-bbe1-3c2360f4e4ef\" }, // build pie\r\n  { id: 2, hash: \"9fd4c873-ac7a-4eb3-81fa-1275e643d521\" }, // update pie\r\n  { id: 3, hash: \"9eea11d0-09c3-4f3d-bbb6-08ac45fde825\" }, // total pie\r\n  { id: 4, hash: \"2f9faa31-2158-44be-aaac-895358c37752\" }, // dev list\r\n  { id: 9, hash: \"c4a45c73-69c5-4afa-ade7-dc6561609c40\" }, // total\r\n  { id: 10, hash: \"43a71a7a-c4e3-4174-b4c8-3e21baeacc98\" }, // trxs daily\r\n  { id: 11, hash: \"c19a9392-ba34-4531-8e25-06d9b8d8715f\" }, // new and active dev(weekly)\r\n];\r\n\r\nState.init({\r\n  light: true,\r\n  data: [],\r\n  isLoading: true,\r\n  error: [],\r\n});\r\n\r\nconst getMixProps = (data, dateKey, serieses, colors, chartOption) => {\r\n  data = data || [];\r\n  serieses = serieses || [{ key: \"\", seriesName: \"\", type: \"\", id: 1 }];\r\n  colors = colors || [];\r\n  chartOption = chartOption || {};\r\n\r\n  const dataFormat = serieses.map((series) => {\r\n    const dataFormated = data.map((d) => [d[dateKey] * 1000, d[series.key]]);\r\n    return {\r\n      data: dataFormated,\r\n      name: series.seriesName,\r\n      type: series.type,\r\n      axisId: series.id,\r\n    };\r\n  });\r\n  const props = {\r\n    series: dataFormat,\r\n    colors: colors,\r\n    chartOption: {\r\n      title: \"chart title\",\r\n      subtitle: \"chart subtitle\",\r\n      legend: true,\r\n      stacking: \"false\",\r\n      ...chartOption,\r\n    },\r\n\r\n    overrideOptions: {\r\n      plotOptions: {\r\n        column: {\r\n          stacking: \"false\",\r\n        },\r\n        series: {\r\n          dataGrouping: { enabled: false },\r\n        },\r\n      },\r\n    },\r\n    themeColor: { chart: themeColor.chart },\r\n    spinnerColors: themeColor.spinnerColors,\r\n  };\r\n  return props;\r\n};\r\n\r\nconst getPieProps = (data, [key, value], colors, chartOption) => {\r\n  data = data || [];\r\n  colors = colors || [];\r\n  chartOption = chartOption || {};\r\n\r\n  const dataFormat = data.map((s) => [s[key], s[value]]);\r\n  const props = {\r\n    data: dataFormat,\r\n    colors: colors,\r\n    chartOption: {\r\n      title: \"chart title\",\r\n      type: \"pie\",\r\n      legend: false,\r\n      connector: false,\r\n      ...chartOption,\r\n    },\r\n    themeColor: { chart: themeColor.chart },\r\n    spinnerColors: themeColor.spinnerColors,\r\n  };\r\n  return props;\r\n};\r\n\r\nconst handleData = () => {\r\n  const data = {};\r\n  const errors = [];\r\n  queryHashes.forEach(({ hash, id }) => {\r\n    const result = fetchData(hash);\r\n    if (result.error) errors.push(`hash${id} : ${result.error}`);\r\n    data[`hash${id}`] = {\r\n      ...result,\r\n      id,\r\n    };\r\n  });\r\n\r\n  if (Object.values(data).every((d) => !d.isLoading)) {\r\n    State.update({\r\n      data: data,\r\n      error: [...state.error, ...errors],\r\n      isLoading: false,\r\n    });\r\n  }\r\n};\r\nconst convertData = (data) => {\r\n  if (typeof data !== \"string\") {\r\n    return data;\r\n  }\r\n  let converted;\r\n  try {\r\n    converted = JSON.parse(data);\r\n  } catch (er) {\r\n    converted = data;\r\n  }\r\n  return converted;\r\n};\r\n\r\nconst fetchData = (hash) => {\r\n  const data = fetch(\r\n    `https://api.flipsidecrypto.com/api/v2/queries/${hash}/data/latest`,\r\n    {\r\n      subscribe: true,\r\n      method: \"GET\",\r\n      headers: {\r\n        Accept: \"*/*\",\r\n      },\r\n    }\r\n  );\r\n  const result = {\r\n    data: (data && convertData(data.body)) || null,\r\n    error: (data && !data.ok && (data.status || data.error)) || null,\r\n    isLoading: !data && !error,\r\n  };\r\n  console.log(hash, data);\r\n  return result;\r\n};\r\n\r\nif (state.isLoading) {\r\n  handleData();\r\n}\r\n\r\nif (state.error.length > 0) {\r\n  function hide() {\r\n    const errors = state.error;\r\n    errors.shift();\r\n    if (errors.length > 0) setTimeout(hide, 2500);\r\n    State.update({ error: errors });\r\n  }\r\n  setTimeout(hide, 2500);\r\n}\r\n\r\nconst formatNumber = (num) => {\r\n  if (num >= 1000000000) {\r\n    return (num / 1000000000).toFixed(2).replace(/\\.0$/, \"\") + \"b\";\r\n  }\r\n  if (num >= 1000000) {\r\n    return (num / 1000000).toFixed(2).replace(/\\.0$/, \"\") + \"m\";\r\n  }\r\n  if (num >= 1000) {\r\n    return (num / 1000).toFixed(2).replace(/\\.0$/, \"\") + \"k\";\r\n  }\r\n\r\n  if (num < 1000 && num > 0.0001) {\r\n    return (Math.round(num * 1000) / 1000).toFixed(3) + \"\";\r\n  }\r\n\r\n  return num;\r\n};\r\n\r\nconst singers = {\r\n  height: \"110px\",\r\n  align: \"center\",\r\n  brand: \"Developers\",\r\n  description: `${formatNumber(state.data?.hash9?.data[0].singers)}`,\r\n  fontsize: \"25px\",\r\n  fontweight: \"25px\",\r\n  afterbrand: \"\",\r\n  afterbrandcolor: themeColor?.dynamic_header?.afterbrandcolor || \"#789efb\",\r\n  fontbrand: \" Arial, sans-serif\",\r\n  color1brand: themeColor?.dynamic_header?.color1brand || \"#000\",\r\n  color2brand: themeColor?.dynamic_header?.color2brand || \"#806ce1\",\r\n  colordescription: themeColor?.dynamic_header?.colordescription || \"#806ce1\",\r\n  fontsubtitle: \" Arial, sans-serif\",\r\n  background:\r\n    themeColor?.dynamic_header?.background ||\r\n    \"radial-gradient(circle, rgba(210,202,250,1) 0%, rgba(230,230,231,0.01) 0%, rgba(235,238,255,1) 100%, rgba(235,231,253,1) 100%, rgba(255,241,241,1) 100%, rgba(46,52,90,1) 100%);\",\r\n};\r\nconst total_trxs = {\r\n  height: \"110px\",\r\n  align: \"center\",\r\n  brand: \"Transactions\",\r\n  description: `${formatNumber(state.data?.hash9?.data[0].total_trxs)}`,\r\n  fontsize: \"25px\",\r\n  fontweight: \"25px\",\r\n  afterbrand: \"\",\r\n  afterbrandcolor: themeColor?.dynamic_header?.afterbrandcolor || \"#789efb\",\r\n  fontbrand: \" Arial, sans-serif\",\r\n  color1brand: themeColor?.dynamic_header?.color1brand || \"#000\",\r\n  color2brand: themeColor?.dynamic_header?.color2brand || \"#806ce1\",\r\n  colordescription: themeColor?.dynamic_header?.colordescription || \"#806ce1\",\r\n  fontsubtitle: \" Arial, sans-serif\",\r\n  background:\r\n    themeColor?.dynamic_header?.background ||\r\n    \"radial-gradient(circle, rgba(210,202,250,1) 0%, rgba(230,230,231,0.01) 0%, rgba(235,238,255,1) 100%, rgba(235,231,253,1) 100%, rgba(255,241,241,1) 100%, rgba(46,52,90,1) 100%);\",\r\n};\r\nconst widget = {\r\n  height: \"110px\",\r\n  align: \"center\",\r\n  brand: \"Widgets\",\r\n  description: `${formatNumber(state.data?.hash9?.data[0].widget)}`,\r\n  fontsize: \"25px\",\r\n  fontweight: \"25px\",\r\n  afterbrand: \"\",\r\n  afterbrandcolor: themeColor?.dynamic_header?.afterbrandcolor || \"#789efb\",\r\n  fontbrand: \" Arial, sans-serif\",\r\n  color1brand: themeColor?.dynamic_header?.color1brand || \"#000\",\r\n  color2brand: themeColor?.dynamic_header?.color2brand || \"#806ce1\",\r\n  colordescription: themeColor?.dynamic_header?.colordescription || \"#806ce1\",\r\n  fontsubtitle: \" Arial, sans-serif\",\r\n  background:\r\n    themeColor?.dynamic_header?.background ||\r\n    \"radial-gradient(circle, rgba(210,202,250,1) 0%, rgba(230,230,231,0.01) 0%, rgba(235,238,255,1) 100%, rgba(235,231,253,1) 100%, rgba(255,241,241,1) 100%, rgba(46,52,90,1) 100%);\",\r\n};\r\nconst update_trxs = {\r\n  height: \"110px\",\r\n  align: \"center\",\r\n  brand: \"Update Trxs\",\r\n  description: `${formatNumber(state.data?.hash9?.data[0].update_trxs)}`,\r\n  fontsize: \"25px\",\r\n  fontweight: \"25px\",\r\n  afterbrand: \"\",\r\n  afterbrandcolor: themeColor?.dynamic_header?.afterbrandcolor || \"#789efb\",\r\n  fontbrand: \" Arial, sans-serif\",\r\n  color1brand: themeColor?.dynamic_header?.color1brand || \"#000\",\r\n  color2brand: themeColor?.dynamic_header?.color2brand || \"#806ce1\",\r\n  colordescription: themeColor?.dynamic_header?.colordescription || \"#806ce1\",\r\n  fontsubtitle: \" Arial, sans-serif\",\r\n  background:\r\n    themeColor?.dynamic_header?.background ||\r\n    \"radial-gradient(circle, rgba(210,202,250,1) 0%, rgba(230,230,231,0.01) 0%, rgba(235,238,255,1) 100%, rgba(235,231,253,1) 100%, rgba(255,241,241,1) 100%, rgba(46,52,90,1) 100%);\",\r\n};\r\nconst credits = {\r\n  height: \"110px\",\r\n  align: \"center\",\r\n  brand: \"Credits\",\r\n  description: `${formatNumber(state.data?.hash9?.data[0].credits)}`,\r\n  fontsize: \"25px\",\r\n  fontweight: \"25px\",\r\n  afterbrand: \"\",\r\n  afterbrandcolor: themeColor?.dynamic_header?.afterbrandcolor || \"#789efb\",\r\n  fontbrand: \" Arial, sans-serif\",\r\n  color1brand: themeColor?.dynamic_header?.color1brand || \"#000\",\r\n  color2brand: themeColor?.dynamic_header?.color2brand || \"#806ce1\",\r\n  colordescription: themeColor?.dynamic_header?.colordescription || \"#806ce1\",\r\n  fontsubtitle: \" Arial, sans-serif\",\r\n  background:\r\n    themeColor?.dynamic_header?.background ||\r\n    \"radial-gradient(circle, rgba(210,202,250,1) 0%, rgba(230,230,231,0.01) 0%, rgba(235,238,255,1) 100%, rgba(235,231,253,1) 100%, rgba(255,241,241,1) 100%, rgba(46,52,90,1) 100%);\",\r\n};\r\nconst build_trxs = {\r\n  height: \"110px\",\r\n  align: \"center\",\r\n  brand: \"Build Trxs\",\r\n  description: `${formatNumber(state.data?.hash9?.data[0].build_trxs)}`,\r\n  fontsize: \"25px\",\r\n  fontweight: \"25px\",\r\n  afterbrand: \"\",\r\n  afterbrandcolor: themeColor?.dynamic_header?.afterbrandcolor || \"#789efb\",\r\n  fontbrand: \" Arial, sans-serif\",\r\n  color1brand: themeColor?.dynamic_header?.color1brand || \"#000\",\r\n  color2brand: themeColor?.dynamic_header?.color2brand || \"#806ce1\",\r\n  colordescription: themeColor?.dynamic_header?.colordescription || \"#806ce1\",\r\n  fontsubtitle: \" Arial, sans-serif\",\r\n  background:\r\n    themeColor?.dynamic_header?.background ||\r\n    \"radial-gradient(circle, rgba(210,202,250,1) 0%, rgba(230,230,231,0.01) 0%, rgba(235,238,255,1) 100%, rgba(235,231,253,1) 100%, rgba(255,241,241,1) 100%, rgba(46,52,90,1) 100%);\",\r\n};\r\nlet header = (\r\n  <div className=\"row\">\r\n    <div className=\"col-md-12\">\r\n      <Widget src=\"lord1.near/widget/header-dynamic\" props={hellosinger} />\r\n      <div className=\"row\">\r\n        <div className=\"col-md-2\">\r\n          <Widget src=\"lord1.near/widget/header-dynamic\" props={singers} />\r\n        </div>\r\n        <div className=\"col-md-2\">\r\n          <Widget src=\"lord1.near/widget/header-dynamic\" props={total_trxs} />{\" \"}\r\n        </div>\r\n        <div className=\"col-md-2\">\r\n          <Widget src=\"lord1.near/widget/header-dynamic\" props={widget} />{\" \"}\r\n        </div>\r\n        <div className=\"col-md-2\">\r\n          <Widget src=\"lord1.near/widget/header-dynamic\" props={update_trxs} />\r\n        </div>{\" \"}\r\n        <div className=\"col-md-2\">\r\n          <Widget src=\"lord1.near/widget/header-dynamic\" props={credits} />\r\n        </div>{\" \"}\r\n        <div className=\"col-md-2\">\r\n          <Widget src=\"lord1.near/widget/header-dynamic\" props={build_trxs} />\r\n        </div>{\" \"}\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\nlet zero = (\r\n  <div\r\n    className=\"my-4 shadow-sm pb-2 rounded-4\"\r\n    style={{ background: themeColor?.sbt_area?.section_bg }}\r\n  >\r\n    {\" \"}\r\n    <div className=\"row w-100 pb-2 px-2 mx-0\">\r\n      <div className=\"col-md-6\">\r\n        <Widget\r\n          src=\"lord1.near/widget/mix-chart\"\r\n          props={getMixProps(\r\n            state.data?.hash10?.data,\r\n            \"date\",\r\n            [\r\n              {\r\n                key: \"total_trxs\",\r\n                seriesName: \"Total Trxs\",\r\n                type: \"spline\",\r\n                id: 1,\r\n              },\r\n\r\n              {\r\n                key: \"update_trxs\",\r\n                seriesName: \"Update Trxs\",\r\n                type: \"spline\",\r\n                id: 1,\r\n              },\r\n              {\r\n                key: \"build_trxs\",\r\n                seriesName: \"Build Trxs\",\r\n                type: \"column\",\r\n                id: 1,\r\n              },\r\n\r\n              {\r\n                key: \"widget\",\r\n                seriesName: \"Widget\",\r\n                type: \"column\",\r\n                id: 1,\r\n              },\r\n            ],\r\n            themeColor.chartColor,\r\n            {\r\n              title: \"Development Trend on weekly basis\",\r\n              subtitle: \"\",\r\n              stacking: \"normal\",\r\n            }\r\n          )}\r\n        />{\" \"}\r\n      </div>{\" \"}\r\n      <div className=\"  col-md-6\">\r\n        <Widget\r\n          src=\"lord1.near/widget/mix-chart\"\r\n          props={getMixProps(\r\n            state.data?.hash10?.data,\r\n            \"date\",\r\n            [\r\n              {\r\n                key: \"cum_widget\",\r\n                seriesName: \"Total Widgets\",\r\n                type: \"areaspline\",\r\n                id: 2,\r\n              },\r\n\r\n              {\r\n                key: \"cum_total_trxs\",\r\n                seriesName: \"Total Trxs\",\r\n                type: \"areaspline\",\r\n                id: 2,\r\n              },\r\n              {\r\n                key: \"cum_update_trxs\",\r\n                seriesName: \"Total Update Trxs\",\r\n                type: \"areaspline\",\r\n                id: 2,\r\n              },\r\n              {\r\n                key: \"cum_build_trxs\",\r\n                seriesName: \"Total Build Trxs\",\r\n                type: \"areaspline\",\r\n                id: 2,\r\n              },\r\n            ],\r\n            themeColor.chartColor,\r\n            {\r\n              title: \"Development Growth on weekly basis\",\r\n              subtitle: \"\",\r\n              stacking: \"normal\",\r\n            }\r\n          )}\r\n        />{\" \"}\r\n      </div>{\" \"}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nlet first = (\r\n  <div\r\n    className=\"my-4 shadow-sm pb-2 rounded-4\"\r\n    style={{ background: themeColor?.sbt_area?.section_bg }}\r\n  >\r\n    <Widget src=\"lord1.near/widget/header-dynamic\" props={generaltheme} />\r\n    <div className=\"row w-100 pb-2 px-2 mx-0\">\r\n      <div className=\" col-12 col-md-8\">\r\n        <Widget\r\n          src=\"lord1.near/widget/mix-chart\"\r\n          props={getMixProps(\r\n            state.data?.hash11?.data,\r\n            \"date\",\r\n            [\r\n              {\r\n                key: \"new\",\r\n                seriesName: \"New Dev\",\r\n                type: \"column\",\r\n                id: 1,\r\n              },\r\n              {\r\n                key: \"active\",\r\n                seriesName: \"Active Dev\",\r\n                type: \"column\",\r\n                id: 1,\r\n              },\r\n              {\r\n                key: \"cum\",\r\n                seriesName: \"Total Dev\",\r\n                type: \"spline\",\r\n                id: 2,\r\n              },\r\n            ],\r\n            themeColor.chartColor,\r\n            {\r\n              title: \"Number of weekly devs\",\r\n              subtitle: \"\",\r\n              stacking: \"normal\",\r\n            }\r\n          )}\r\n        />{\" \"}\r\n      </div>\r\n\r\n      <div className=\" col-12 col-md-4\">\r\n        <div\r\n          style={{ background: themeColor?.sbt_area?.card_bg }}\r\n          className=\"w-100 mx-auto shadow-sm rounded-4\"\r\n        >\r\n          <h6\r\n            style={{ color: themeColor?.sbt_area?.card_title_color }}\r\n            className=\"pt-4 ps-4\"\r\n          >\r\n            <i>Number of devs based on year joint</i>\r\n          </h6>\r\n          <Widget\r\n            src=\"lord1.near/widget/Pie-chart\"\r\n            props={getPieProps(\r\n              state.data?.hash0?.data,\r\n              [\"first_tx\", \"singer\"],\r\n              themeColor.chartColor,\r\n              {\r\n                title: \"\",\r\n                type: \"pie\",\r\n                connector: true,\r\n                legend: true,\r\n              }\r\n            )}\r\n          />\r\n        </div>{\" \"}\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\nlet second = (\r\n  <div className=\"row w-100 py-4 g-4\">\r\n    <div className=\" col-12 col-md-4\">\r\n      <div\r\n        style={{ background: themeColor?.sbt_area?.card_bg }}\r\n        className=\"w-100 mx-auto shadow-sm rounded-4\"\r\n      >\r\n        <h6\r\n          style={{ color: themeColor?.sbt_area?.card_title_color }}\r\n          className=\"pt-4 ps-4\"\r\n        >\r\n          <i> Number of Devs based on Build Trxs</i>\r\n        </h6>\r\n        <Widget\r\n          src=\"lord1.near/widget/Pie-chart\"\r\n          props={getPieProps(\r\n            state.data?.hash1?.data,\r\n            [\"update\", \"singer\"],\r\n            themeColor.chartColor,\r\n            {\r\n              title: \"\",\r\n              type: \"pie\",\r\n              connector: true,\r\n              legend: true,\r\n            }\r\n          )}\r\n        />\r\n      </div>\r\n    </div>\r\n    <div className=\" col-12 col-md-4\">\r\n      <div\r\n        style={{ background: themeColor?.sbt_area?.card_bg }}\r\n        className=\"w-100 mx-auto shadow-sm rounded-4\"\r\n      >\r\n        <h6\r\n          style={{ color: themeColor?.sbt_area?.card_title_color }}\r\n          className=\"pt-4 ps-4\"\r\n        >\r\n          <i> Number of Devs based on Update Trxs</i>\r\n        </h6>\r\n        <Widget\r\n          src=\"lord1.near/widget/Pie-chart\"\r\n          props={getPieProps(\r\n            state.data?.hash2?.data,\r\n            [\"update\", \"singer\"],\r\n            themeColor.chartColor,\r\n            {\r\n              title: \"\",\r\n              type: \"pie\",\r\n              connector: true,\r\n              legend: true,\r\n            }\r\n          )}\r\n        />\r\n      </div>\r\n    </div>\r\n    <div className=\" col-12 col-md-4\">\r\n      <div\r\n        style={{ background: themeColor?.sbt_area?.card_bg }}\r\n        className=\"w-100 mx-auto shadow-sm rounded-4\"\r\n      >\r\n        <h6\r\n          style={{ color: themeColor?.sbt_area?.card_title_color }}\r\n          className=\"pt-4 ps-4\"\r\n        >\r\n          <i> Number of Devs based on Total Trxs</i>\r\n        </h6>\r\n        <Widget\r\n          src=\"lord1.near/widget/Pie-chart\"\r\n          props={getPieProps(\r\n            state.data?.hash3?.data,\r\n            [\"update\", \"singer\"],\r\n            themeColor.chartColor,\r\n            {\r\n              title: \"\",\r\n              type: \"pie\",\r\n              connector: true,\r\n              legend: true,\r\n            }\r\n          )}\r\n        />\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nlet third = (\r\n  <div\r\n    className=\"my-4 shadow-sm  rounded-4\"\r\n    style={{ background: themeColor?.sbt_area?.section_bg }}\r\n  >\r\n    <Widget src=\"lord1.near/widget/header-dynamic\" props={areatheme} />\r\n    <div className=\"row w-100 pb-2 px-2 mx-0\">\r\n      <div\r\n        style={{ background: themeColor?.sbt_area?.card_bg }}\r\n        className=\"shadow-sm rounded-2 overflow-auto\"\r\n      >\r\n        <Widget\r\n          src=\"lord1.near/widget/table-pagination\"\r\n          props={{\r\n            themeColor: { table_pagination: themeColor.table_pagination },\r\n            data: state.data?.hash4?.data,\r\n            rowsCount: 10,\r\n            columns: [\r\n              {\r\n                title: \"Developer\",\r\n                key: \"singer\",\r\n                link: \"yes\",\r\n                beforehref: `https://near.social/mob.near/widget/ProfilePage?accountId=`,\r\n                hyperlink: \"yes\",\r\n              },\r\n              { title: \"Trxs\", key: \"total_trxs\" },\r\n              { title: \"Widget\", key: \"widget\", colors: \"#806ce1\" },\r\n              { title: \"First date\", key: \"min_date\" },\r\n              { title: \"Active date\", key: \"active_date\" },\r\n              { title: \"Update Trxs\", key: \"update_trxs\" },\r\n              { title: \"Build Trxs\", key: \"build_trxs\" },\r\n              { title: \"Trxs Rank\", key: \"trx_rank\", colors: \"#806ce1\" },\r\n              { title: \"Widget Rank\", key: \"widget_rank\", colors: \"#806ce1\" },\r\n              { title: \"Days Rank\", key: \"days_rank\", colors: \"#806ce1\" },\r\n              { title: \"Stars Received\", key: \"stars_received\" },\r\n              { title: \"Stars Sent\", key: \"stars_sent\" },\r\n              { title: \"Unstars Received\", key: \"unstars_received\" },\r\n              { title: \"Unstars Sent\", key: \"unstars_sent\" },\r\n            ],\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\nreturn (\r\n  <div className=\"container-fluid py-2\">\r\n    <div className=\"pl-2\">\r\n      {header}\r\n      {zero}\r\n      {first}\r\n      {second}\r\n      {third}\r\n\r\n      <div className=\"toast-container position-fixed bottom-0 end-0 p-3\">\r\n        {state.error.length > 0 &&\r\n          state.error.map((er) => (\r\n            <div\r\n              className=\"toast show align-items-center text-bg-danger border-0\"\r\n              role=\"alert\"\r\n              aria-live=\"assertive\"\r\n              aria-atomic=\"true\"\r\n            >\r\n              <div className=\"d-flex\">\r\n                <div className=\"toast-body\">{er}</div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\n// const props = {\r\n//   themeColor: {\r\n//     dynamic_header: {\r\n//       afterbrandcolor: \"#789efb\",\r\n//       color1brand: \"#000\",\r\n//       color2brand: \"#806ce1\",\r\n//       colordescription: \"#806ce1\",\r\n//       background:\r\n//         \"radial-gradient(circle, rgba(210,202,250,1) 0%, rgba(230,230,231,0.01) 0%, rgba(235,238,255,1) 100%, rgba(235,231,253,1) 100%, rgba(255,241,241,1) 100%, rgba(46,52,90,1) 100%);\",\r\n//     },\r\n//     tab_sbt: {\r\n//       backgroundColor: \"rgb(49,62,89)\",\r\n//       textColor: \"#fff\",\r\n//       headerColor: \"#806ce1\",\r\n//       numberColor: \"#fff\",\r\n//     },\r\n//     sbt_area: {\r\n//       section_bg: \"rgba(25,33,80)\",\r\n//       card_bg: \"rgb(49, 62, 89)\",\r\n//       card_title_color: \"#806ce1\",\r\n//     },\r\n//   },\r\n// };\r\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/lord1.near/widget/component-growth", "fact_widget_deployments_id": "5f5918f635d72235e8e71048c677b68d", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 4}