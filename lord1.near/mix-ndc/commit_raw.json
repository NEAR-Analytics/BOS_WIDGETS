{"tx_hash": "gjPuJmSBw63Xvk65bPVMRD1rnzkizvRrX5F5wLdn5Z5", "action_id_social": "DW1dSqi7YyTa35igSWnSo1TJHqH9aNigLwxjeQ2y88kM-0-widget", "block_id": 101549935, "block_timestamp": "2023-09-20T12:27:53.258Z", "signer_id": "lord1.near", "widget_name": "mix-ndc", "source_code": "const themeColor = props.themeColor;\nconst firsttheme = {\n  height: \"90px\",\n  align: \"center\",\n  description: \"\",\n  brand: \"Comment Activity\",\n  fontsize: \"50\",\n  fontweight: \"20px\",\n  afterbrand: \"\ud83c\udfe6\",\n  afterbrandcolor: themeColor?.dynamic_header?.afterbrandcolor || \"#789efb\",\n  fontbrand: \" Arial, sans-serif\",\n  color1brand: themeColor?.dynamic_header?.color1brand || \"#000\",\n  color2brand: themeColor?.dynamic_header?.color2brand || \"#806ce1\",\n  colordescription: themeColor?.dynamic_header?.colordescription || \"#806ce1\",\n  fontsubtitle: \" Arial, sans-serif\",\n  background:\n    themeColor?.dynamic_header?.background ||\n    \"radial-gradient(circle, rgba(210,202,250,1) 0%, rgba(230,230,231,0.01) 0%, rgba(235,238,255,1) 100%, rgba(235,231,253,1) 100%, rgba(255,241,241,1) 100%, rgba(46,52,90,1) 100%);\",\n};\n\nconst secondtheme = {\n  height: \"90px\",\n  align: \"center\",\n  description: \"\",\n  brand: \"Vote Activity\",\n  fontsize: \"50\",\n  fontweight: \"25px\",\n  afterbrand: \"\ud83d\udc4d\",\n  afterbrandcolor: themeColor?.dynamic_header?.afterbrandcolor || \"#789efb\",\n  fontbrand: \" Arial, sans-serif\",\n  color1brand: themeColor?.dynamic_header?.color1brand || \"#000\",\n  color2brand: themeColor?.dynamic_header?.color2brand || \"#806ce1\",\n  colordescription: themeColor?.dynamic_header?.colordescription || \"#806ce1\",\n  fontsubtitle: \" Arial, sans-serif\",\n  background:\n    themeColor?.dynamic_header?.background ||\n    \"radial-gradient(circle, rgba(210,202,250,1) 0%, rgba(230,230,231,0.01) 0%, rgba(235,238,255,1) 100%, rgba(235,231,253,1) 100%, rgba(255,241,241,1) 100%, rgba(46,52,90,1) 100%);\",\n};\n\nconst thirdtheme = {\n  height: \"90px\",\n  align: \"center\",\n  description: \"\",\n  brand: \"Nomination Activity\",\n  fontsize: \"50\",\n  fontweight: \"25px\",\n  afterbrand: \"\ud83c\udfe6\",\n  afterbrandcolor: themeColor?.dynamic_header?.afterbrandcolor || \"#789efb\",\n  fontbrand: \" Arial, sans-serif\",\n  color1brand: themeColor?.dynamic_header?.color1brand || \"#000\",\n  color2brand: themeColor?.dynamic_header?.color2brand || \"#806ce1\",\n  colordescription: themeColor?.dynamic_header?.colordescription || \"#806ce1\",\n  fontsubtitle: \" Arial, sans-serif\",\n  background:\n    themeColor?.dynamic_header?.background ||\n    \"radial-gradient(circle, rgba(210,202,250,1) 0%, rgba(230,230,231,0.01) 0%, rgba(235,238,255,1) 100%, rgba(235,231,253,1) 100%, rgba(255,241,241,1) 100%, rgba(46,52,90,1) 100%);\",\n};\n\nconst queryHashes = [\n  { id: 1, hash: \"3ca36592-256e-4dda-97e3-de5f71baeba5\" },\n  { id: 2, hash: \"2c93f2aa-7da5-4c42-acb5-0a09592a4e8d\" },\n  { id: 3, hash: \"d4c425df-b98c-41c9-8fc5-d89ff7b6316e\" },\n];\n\nState.init({\n  light: true,\n  data: [],\n  isLoading: true,\n  error: [],\n  value: \"acceleration\",\n  tab: \"first\",\n});\n\n// api code start\nconst handleData = () => {\n  const data = {};\n  const errors = [];\n  queryHashes.forEach(({ hash, id }) => {\n    const result = fetchData(hash);\n    if (result.error) errors.push(`hash${id} : ${result.error}`);\n    data[`hash${id}`] = {\n      ...result,\n      id,\n    };\n  });\n\n  if (Object.values(data).every((d) => !d.isLoading)) {\n    State.update({\n      data: data,\n      error: [...state.error, ...errors],\n      isLoading: false,\n    });\n  }\n};\n\nconst fetchData = (hash) => {\n  const data = fetch(\n    `https://api.flipsidecrypto.com/api/v2/queries/${hash}/data/latest`,\n    {\n      subscribe: true,\n      method: \"GET\",\n      headers: {\n        Accept: \"*/*\",\n      },\n    }\n  );\n  const result = {\n    data: (data && data.body) || null,\n    error: (data && !data.ok && (data.status || data.error)) || null,\n    isLoading: !data && !error,\n  };\n  return result;\n};\n\nif (state.isLoading) {\n  handleData();\n}\n\nif (state.error.length > 0) {\n  function hide() {\n    const errors = state.error;\n    errors.shift();\n    if (errors.length > 0) setTimeout(hide, 2500);\n    State.update({ error: errors });\n  }\n  setTimeout(hide, 2500);\n}\n// api code finish\n\nconst tabs = {\n  firstarea: \"first\",\n  secondarea: \"second\",\n  thirdarea: \"third\",\n  fourtharea: \"fourth\",\n  fiftharea: \"fifth\",\n};\n\nconst setTab = (tab) => State.update({ tab });\n\nconst Container = styled.div`\n  &&{text-align:center};\n  .tabContent{\n    display:inline-flex;\n    align-items:center;\n    background: rgba(26, 46, 51, 0.25);\n    border: 1px solid rgba(255, 255, 255, 0.3);\n    border-radius: 10px;\n    padding:3px 4px;\n    list-style-type:none;\n    margin: 0 auto;\n  }\n  .tab-item .active{\n    background: #304352;\n\n  }\n  .tab-item button{\n    background-color:transparent;\n    border-radius: 8px;\n    font-weight: 500;\n    font-size: 14px;\n    color:#fff;\n    height:40px;\n    padding:0 22px;\n    border:none;\n\n  }\n`;\n\nconst getMixProps = (data, dateKey, serieses, colors, chartOption) => {\n  data = data || [];\n  serieses = serieses || [{ key: \"\", seriesName: \"\", type: \"\", id: 1 }];\n  colors = colors || [];\n  chartOption = chartOption || {};\n\n  const dataFormat = serieses.map((series) => {\n    const dataFormated = data.map((d) => [d[dateKey] * 1000, d[series.key]]);\n    return {\n      data: dataFormated,\n      name: series.seriesName,\n      type: series.type,\n      axisId: series.id,\n    };\n  });\n  const props = {\n    series: dataFormat,\n    colors: colors,\n    chartOption: {\n      title: \"chart title\",\n      subtitle: \"chart subtitle\",\n      legend: true,\n      stacking: \"false\",\n      ...chartOption,\n    },\n\n    overrideOptions: {\n      plotOptions: {\n        column: {\n          stacking: \"false\",\n        },\n        series: {\n          dataGrouping: { enabled: false },\n        },\n      },\n    },\n    themeColor: { chart: themeColor.chart },\n    spinnerColors: themeColor.spinnerColors,\n  };\n  return props;\n};\n\nlet first = (\n  <div\n    style={{ background: themeColor?.sbt_area?.section_bg }}\n    className=\"shadow-sm rounded-2 overflow-auto\"\n  >\n    <Widget src=\"lord1.near/widget/header-dynamic\" props={firsttheme} />\n    <Widget\n      src=\"lord1.near/widget/multiple-mix-chart\"\n      props={{\n        data: state.data?.hash1?.data,\n        charts: [\n          {\n            title: \"Commentator Number\",\n            subtitle: \"Number of Commentator or Remover\",\n            dateKey: \"week\",\n            oppKey: \"add_commentator\",\n            negKey: \"removed_signer_id\",\n            oppTitle: \"commentator\",\n            negTitle: \"Remover\",\n            type: \"spline\",\n          },\n          {\n            title: \"Candidate Number\",\n            subtitle:\n              \"The number of candidates who received comments or were removed from comments\",\n            dateKey: \"week\",\n            oppKey: \"add_candidate\",\n            negKey: \"removed_candidate\",\n            oppTitle: \"candidate(added)\",\n            negTitle: \"candidate(removed)\",\n            type: \"areaspline\",\n          },\n          {\n            title: \"Comment Number\",\n            subtitle: \"Number of comments transactions(add or remove)\",\n            dateKey: \"week\",\n            oppKey: \"add_tx_hash\",\n            negKey: \"removed_tx_hash\",\n            oppTitle: \"Add Comment\",\n            negTitle: \"Remove Comment\",\n            type: \"column\",\n          },\n        ],\n        themeColor: { chart: themeColor.chart },\n        colors: themeColor.chartColor,\n        spinnerColors: themeColor?.spinnerColors,\n      }}\n    />\n  </div>\n);\nlet second = (\n  <div\n    style={{ background: themeColor?.sbt_area?.section_bg }}\n    className=\"shadow-sm rounded-2 overflow-auto\"\n  >\n    <Widget src=\"lord1.near/widget/header-dynamic\" props={secondtheme} />\n    <Widget\n      src=\"lord1.near/widget/multiple-mix-chart\"\n      props={{\n        data: state.data?.hash2?.data,\n        charts: [\n          {\n            title: \"UpVoters\",\n            subtitle: \"Number of UpVoters and Removers\",\n            dateKey: \"week\",\n            oppKey: \"voter_vote\",\n            negKey: \"voter_remove\",\n            oppTitle: \"Upvote\",\n            negTitle: \"Remove vote\",\n            type: \"spline\",\n          },\n          {\n            title: \"Candidate\",\n            subtitle:\n              \"The number of candidates who received votes or were excluded from the votes\",\n            dateKey: \"week\",\n            oppKey: \"candidate_vote\",\n            negKey: \"candidate_remove\",\n            oppTitle: \"Upvote\",\n            negTitle: \"Remove vote\",\n            type: \"spline\",\n          },\n          {\n            title: \"Vote Actions\",\n            subtitle: \"Number of Upvote and remove actions\",\n            dateKey: \"week\",\n            oppKey: \"hash_vote\",\n            negKey: \"hash_remove\",\n            oppTitle: \"Upvote\",\n            negTitle: \"Remove vote\",\n            type: \"spline\",\n          },\n        ],\n        themeColor: { chart: themeColor.chart },\n        colors: themeColor.chartColor,\n        spinnerColors: themeColor?.spinnerColors,\n      }}\n    />\n  </div>\n);\nlet third = (\n  <div\n    style={{ background: themeColor?.sbt_area?.section_bg }}\n    className=\"shadow-sm rounded-2 overflow-auto\"\n  >\n    <Widget src=\"lord1.near/widget/header-dynamic\" props={thirdtheme} />\n    <Widget\n      src=\"lord1.near/widget/multiple-mix-chart\"\n      props={{\n        data: state.data?.hash3?.data,\n        charts: [\n          {\n            title: \"Nominations\",\n            subtitle: \"Number of nominations and revocations\",\n            dateKey: \"week\",\n            oppKey: \"add_tx_hash\",\n            negKey: \"removed_tx_hash\",\n            oppTitle: \"Nominations\",\n            negTitle: \"Revocations\",\n            type: \"column\",\n          },\n          {\n            title: \"Nominees\",\n            subtitle: \"Number of Nominees and Revokers\",\n            dateKey: \"week\",\n            oppKey: \"nominee\",\n            negKey: \"SIGNER_ID\",\n            oppTitle: \"Nominee\",\n            negTitle: \"Revoker\",\n            type: \"column\",\n          },\n        ],\n        themeColor: { chart: themeColor.chart },\n        colors: themeColor.chartColor,\n        spinnerColors: themeColor?.spinnerColors,\n      }}\n    />\n  </div>\n);\n\nreturn (\n  <div className=\"container-fluid py-2\">\n    <div className=\"pl-2\">\n      <div>\n        <div>\n          <Container>\n            <ul className=\"tabContent\">\n              <li className=\"tab-item\">\n                <button\n                  className={`${state.tab === tabs.firstarea ? \"active\" : \"\"}`}\n                  aria-current=\"page\"\n                  onClick={() => setTab(tabs.firstarea)}\n                >\n                  Comment Trend\n                </button>\n              </li>\n              <li className=\"tab-item\">\n                <button\n                  className={`${state.tab === tabs.secondarea ? \"active\" : \"\"}`}\n                  aria-current=\"page\"\n                  onClick={() => setTab(tabs.secondarea)}\n                >\n                  Vote Trend\n                </button>\n              </li>\n              <li className=\"tab-item\">\n                <button\n                  className={`${state.tab === tabs.thirdarea ? \"active\" : \"\"}`}\n                  aria-current=\"page\"\n                  onClick={() => setTab(tabs.thirdarea)}\n                >\n                  Nomination Trend\n                </button>\n              </li>\n            </ul>\n          </Container>\n        </div>\n      </div>\n      <div>\n        <div className=\"content\">\n          {state.tab === \"first\" && first}\n          {state.tab === \"second\" && second}\n          {state.tab === \"third\" && third}\n        </div>\n      </div>\n\n      <div className=\"toast-container position-fixed bottom-0 end-0 p-3\">\n        {state.error.length > 0 &&\n          state.error.map((er) => (\n            <div\n              className=\"toast show align-items-center text-bg-danger border-0\"\n              role=\"alert\"\n              aria-live=\"assertive\"\n              aria-atomic=\"true\"\n            >\n              <div className=\"d-flex\">\n                <div className=\"toast-body\">{er}</div>\n              </div>\n            </div>\n          ))}\n      </div>\n    </div>\n  </div>\n);\n\n// const props = {\n//   themeColor: {\n//     dynamic_header: {\n//       afterbrandcolor: \"#789efb\",\n//       color1brand: \"#000\",\n//       color2brand: \"#806ce1\",\n//       colordescription: \"#806ce1\",\n//       background:\n//         \"radial-gradient(circle, rgba(210,202,250,1) 0%, rgba(230,230,231,0.01) 0%, rgba(235,238,255,1) 100%, rgba(235,231,253,1) 100%, rgba(255,241,241,1) 100%, rgba(46,52,90,1) 100%);\",\n//     },\n//     tab_sbt: {\n//       backgroundColor: \"rgb(49,62,89)\",\n//       textColor: \"#fff\",\n//       headerColor: \"#806ce1\",\n//       numberColor: \"#fff\",\n//     },\n//     sbt_area: {\n//       section_bg: \"rgba(25,33,80)\",\n//       card_bg: \"rgb(49, 62, 89)\",\n//       card_title_color: \"#806ce1\",\n//     },\n//   },\n// };\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/lord1.near/widget/mix-ndc", "fact_widget_deployments_id": "7b1a29c89aebd2a80aac2d56dd763045", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}