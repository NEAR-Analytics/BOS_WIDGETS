{"tx_hash": "6vb7dbuXVAzQLBvyGJPeMSYNWDMQzsf1iVUF6pLYCn2Z", "action_id_social": "Eiv8gyZA4dZ8jtR4EJekNvxqb8qaoGsCTMxyAUgFBiXC-0-widget", "block_id": 101530560, "block_timestamp": "2023-09-20T06:09:31.503Z", "signer_id": "lord1.near", "widget_name": "second-tab-explore-election", "source_code": "const themeColor = props.themeColor;\r\n\r\nconst firsttheme = {\r\n  height: \"110px\",\r\n  align: \"center\",\r\n  description: `Track the activity of Users in Election process`,\r\n  brand: \"Election Scan\",\r\n  fontsize: \"100\",\r\n  fontweight: \"25px\",\r\n  afterbrand: \"\",\r\n  afterbrandcolor: themeColor?.dynamic_header?.afterbrandcolor || \"#789efb\",\r\n  fontbrand: \" Arial, sans-serif\",\r\n  color1brand: themeColor?.dynamic_header?.color1brand || \"#000\",\r\n  color2brand: themeColor?.dynamic_header?.color2brand || \"#806ce1\",\r\n  colordescription: themeColor?.dynamic_header?.colordescription || \"#806ce1\",\r\n  fontsubtitle: \" Arial, sans-serif\",\r\n  background:\r\n    themeColor?.dynamic_header?.background ||\r\n    \"radial-gradient(circle, rgba(210,202,250,1) 0%, rgba(230,230,231,0.01) 0%, rgba(235,238,255,1) 100%, rgba(235,231,253,1) 100%, rgba(255,241,241,1) 100%, rgba(46,52,90,1) 100%);\",\r\n};\r\n\r\nconst no_data = {\r\n  height: \"90px\",\r\n  align: \"center\",\r\n  description: \"\",\r\n  brand: \"No data\",\r\n  fontsize: \"75\",\r\n  fontweight: \"25px\",\r\n  afterbrand: \"available\",\r\n  afterbrandcolor: themeColor?.dynamic_header?.afterbrandcolor || \"#789efb\",\r\n  fontbrand: \" Arial, sans-serif\",\r\n  color1brand: themeColor?.dynamic_header?.color1brand || \"#000\",\r\n  color2brand: themeColor?.dynamic_header?.color2brand || \"#806ce1\",\r\n  colordescription: themeColor?.dynamic_header?.colordescription || \"#806ce1\",\r\n  fontsubtitle: \" Arial, sans-serif\",\r\n  background:\r\n    themeColor?.dynamic_header?.background ||\r\n    \"radial-gradient(circle, rgba(210,202,250,1) 0%, rgba(230,230,231,0.01) 0%, rgba(235,238,255,1) 100%, rgba(235,231,253,1) 100%, rgba(255,241,241,1) 100%, rgba(46,52,90,1) 100%);\",\r\n};\r\n\r\nconst getMixProps = (data, dateKey, serieses, colors, chartOption) => {\r\n  data = data || [];\r\n  serieses = serieses || [{ key: \"\", seriesName: \"\", type: \"\", id: 1 }];\r\n  colors = colors || [];\r\n  chartOption = chartOption || {};\r\n\r\n  const dataFormat = serieses.map((series) => {\r\n    const dataFormated = data.map((d) => [d[dateKey] * 1000, d[series.key]]);\r\n    return {\r\n      data: dataFormated,\r\n      name: series.seriesName,\r\n      type: series.type,\r\n      axisId: series.id,\r\n    };\r\n  });\r\n  const props = {\r\n    series: dataFormat,\r\n    colors: colors,\r\n    chartOption: {\r\n      title: \"chart title\",\r\n      subtitle: \"chart subtitle\",\r\n      legend: true,\r\n      stacking: \"false\",\r\n      ...chartOption,\r\n    },\r\n    overrideOptions: {\r\n      plotOptions: {\r\n        column: {\r\n          stacking: \"false\",\r\n        },\r\n        series: {\r\n          dataGrouping: { enabled: false },\r\n        },\r\n      },\r\n    },\r\n    themeColor: { chart: themeColor.chart },\r\n    spinnerColors: themeColor.spinnerColors,\r\n  };\r\n  return props;\r\n};\r\n\r\nconst getPieProps = (data, [key, value], colors, chartOption) => {\r\n  data = data || [];\r\n  colors = colors || [];\r\n  chartOption = chartOption || {};\r\n\r\n  const groupedData = {};\r\n  for (const item of data) {\r\n    const keyValue = item[key];\r\n    const valueValue = item[value];\r\n\r\n    if (groupedData[keyValue]) {\r\n      groupedData[keyValue] += valueValue;\r\n    } else {\r\n      groupedData[keyValue] = valueValue;\r\n    }\r\n  }\r\n\r\n  const dataFormat = Object.entries(groupedData).map(\r\n    ([groupKey, groupValue]) => [groupKey, groupValue]\r\n  );\r\n\r\n  const props = {\r\n    data: dataFormat,\r\n    colors: colors,\r\n    chartOption: {\r\n      title: \"chart title\",\r\n      type: \"pie\",\r\n      legend: false,\r\n      connector: false,\r\n      ...chartOption,\r\n    },\r\n    themeColor: { chart: themeColor.chart },\r\n    spinnerColors: themeColor.spinnerColors,\r\n  };\r\n  return props;\r\n};\r\n\r\nconst noData = <div className=\"w-100 py-4 text-center\"> No data available</div>;\r\n\r\nlet third = (\r\n  <div className=\" col-12 col-md-12\">\r\n    <span className=\" col-12 col-md-4\">\r\n      <div\r\n        style={{ background: themeColor?.sbt_area?.card_bg }}\r\n        className=\"w-100 mx-auto shadow-sm rounded-4\"\r\n      >\r\n        <h6\r\n          style={{ color: themeColor?.sbt_area?.card_title_color }}\r\n          className=\"pt-4 ps-4\"\r\n        >\r\n          <i>Activity of User</i>\r\n        </h6>\r\n        <Widget\r\n          src=\"lord1.near/widget/Pie-chart\"\r\n          props={getPieProps(\r\n            props.secondData,\r\n            [\"function\", \"total\"],\r\n            themeColor.chartColor,\r\n            {\r\n              title: \"\",\r\n              type: \"pie\",\r\n              connector: true,\r\n              legend: true,\r\n            }\r\n          )}\r\n        />\r\n      </div>\r\n    </span>\r\n    <div className=\"py-2\"></div>\r\n    <span className=\" col-12 col-md-8\">\r\n      <div\r\n        style={{ background: themeColor?.sbt_area?.card_bg }}\r\n        className=\"shadow-sm rounded-2\"\r\n      >\r\n        <Widget\r\n          src=\"lord1.near/widget/mix-chart\"\r\n          props={getMixProps(\r\n            props.thirdData,\r\n            \"timestamp\",\r\n            [\r\n              {\r\n                key: \"bond\",\r\n                seriesName: \"Bond\",\r\n                type: \"column\",\r\n                id: 1,\r\n              },\r\n              {\r\n                key: \"vote\",\r\n                seriesName: \"Vote\",\r\n                type: \"column\",\r\n                id: 1,\r\n              },\r\n              {\r\n                key: \"proposal\",\r\n                seriesName: \"Proposal\",\r\n                type: \"column\",\r\n                id: 1,\r\n              },\r\n              {\r\n                key: \"new\",\r\n                seriesName: \"new\",\r\n                type: \"column\",\r\n                id: 1,\r\n              },\r\n              {\r\n                key: \"policy\",\r\n                seriesName: \"policy\",\r\n                type: \"column\",\r\n                id: 1,\r\n              },\r\n              {\r\n                key: \"revoke\",\r\n                seriesName: \"revoke\",\r\n                type: \"column\",\r\n                id: 1,\r\n              },\r\n              {\r\n                key: \"total\",\r\n                seriesName: \"total\",\r\n                type: \"spline\",\r\n                id: 2,\r\n              },\r\n              {\r\n                key: \"trxs\",\r\n                seriesName: \"trxs\",\r\n                type: \"spline\",\r\n                id: 1,\r\n              },\r\n            ],\r\n            themeColor.chartColor,\r\n            {\r\n              title: \"Daily Election Activity\",\r\n              subtitle: `Number of daily transactions `,\r\n              stacking: \"normal\",\r\n            }\r\n          )}\r\n        />\r\n      </div>\r\n    </span>\r\n  </div>\r\n);\r\n\r\nlet second = (\r\n  <div\r\n    style={{ background: themeColor?.sbt_area?.section_bg }}\r\n    className=\"shadow-sm rounded-2 overflow-auto\"\r\n  >\r\n    <Widget src=\"lord1.near/widget/header-dynamic\" props={firsttheme} />\r\n    <div className=\"p-2 rounded-4 overflow-auto\">\r\n      {props.secondData.length > 0 ? (\r\n        <Widget\r\n          src=\"lord1.near/widget/table-pagination\"\r\n          props={{\r\n            themeColor: { table_pagination: themeColor.table_pagination },\r\n            data: props.secondData,\r\n            rowsCount: 10,\r\n            columns: [\r\n              { title: \"Number\", key: \"rank\", colors: \"#806ce1\" },\r\n              {\r\n                title: \"Status\",\r\n                key: \"status\",\r\n              },\r\n              { title: \"Timestamp\", key: \"time\" },\r\n              {\r\n                title: \"Signer\",\r\n                key: \"signer\",\r\n                link: \"yes\",\r\n                beforehref:\r\n                  \"https://near.social/mob.near/widget/ProfilePage?accountId=\",\r\n                hyperlink: \"yes\",\r\n              },\r\n              { title: \"Function \", key: \"function\" },\r\n              {\r\n                title: \"Target\",\r\n                key: \"SINGER\",\r\n                link: \"yes\",\r\n                beforehref:\r\n                  \"https://near.social/mob.near/widget/ProfilePage?accountId=\",\r\n                hyperlink: \"yes\",\r\n              },\r\n              { title: \"Fee(Near)\", key: \"fee\" },\r\n\r\n              {\r\n                title: \"Hash\",\r\n                key: \"trxs\",\r\n                link: \"yes\",\r\n                beforehref: \"https://nearblocks.io/txns/\",\r\n                afterhref: \"\",\r\n              },\r\n            ],\r\n          }}\r\n        />\r\n      ) : (\r\n        noData\r\n      )}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nreturn (\r\n  <div\r\n    style={{ backgroundColor: themeColor?.search_sbt?.table_bg }}\r\n    className=\"table-responsive\"\r\n  >\r\n    {props.thirdData.length > 0 && props.secondData.length > 0 ? (\r\n      <div className=\"\">\r\n        {third}\r\n        <div className=\"w-100 py-2\"></div>\r\n        {second}\r\n      </div>\r\n    ) : (\r\n      <Widget src=\"lord1.near/widget/header-dynamic\" props={no_data} />\r\n    )}\r\n  </div>\r\n);\r\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/lord1.near/widget/second-tab-explore-election", "fact_widget_deployments_id": "4868fe7846e0857714fe36d54af3f22f", "inserted_timestamp": "2023-09-20T08:19:45.742Z", "modified_timestamp": "2023-09-20T08:19:45.742Z", "__row_index": 1}