{"tx_hash": "4MVcNU9YvPcwwXfvMyzidigvLE4maX8aVZvsY847zAYv", "action_id_social": "7R6yhdKysnHZvBg6c8UDSgtHuTs4hbn9oksecpaRK28d-0-widget", "block_id": 107952430, "block_timestamp": "2023-12-14T20:59:34.057Z", "signer_id": "lord1.near", "widget_name": "wrapped-sharddog", "source_code": "const themeColor = props.themeColor;\nconst explor_balance_nft_theme = themeColor?.explor_balance?.nft || {};\nconst accountId = props.accountId ?? context.accountId ?? \"\";\n\nconst operationsDoc = `\n  query MyQuery {\n    mb_views_nft_tokens(\n      order_by: {last_transfer_timestamp: desc}\n      where: {owner: {_eq: \"${state.searchedAccountId}\"}, _and: {nft_contract_name: { _eq: \"ShardDog\" },burned_timestamp: {_is_null: true}, last_transfer_timestamp: {}}}\n    ) {\n      nft_contract_id\n      title\n      description\n      media\n      last_transfer_receipt_id\n      metadata_id\n      token_id\n      nft_contract_name\n      nft_contract_icon\n\n    }\n  }\n`;\nconst general_theme = {\n  height: \"150px\",\n  align: \"center\",\n  description: \"Total NFT\",\n  brand: `${state.result.data?.length || \"0\"}`,\n  fontsize: \"45px\",\n  fontweight: \"25px\",\n  afterbrand: \"\",\n  afterbrandcolor: themeColor?.dynamic_header?.afterbrandcolor || \"#789efb\",\n  fontbrand: \" Arial, sans-serif\",\n  color1brand: themeColor?.dynamic_header?.color1brand || \"#000\",\n  color2brand: themeColor?.dynamic_header?.color2brand || \"#806ce1\",\n  colordescription: themeColor?.dynamic_header?.colordescription || \"#806ce1\",\n  fontsubtitle: \" Arial, sans-serif\",\n  background:\n    themeColor?.dynamic_header?.background ||\n    \"radial-gradient(circle, rgba(210,202,250,1) 0%, rgba(230,230,231,0.01) 0%, rgba(235,238,255,1) 100%, rgba(235,231,253,1) 100%, rgba(255,241,241,1) 100%, rgba(46,52,90,1) 100%);\",\n};\n\n// --------------------------------------------\n\nState.init({\n  searchedAccountId: \"\",\n  result: {},\n  isLoading: true,\n  error: [],\n});\n\nconst checkNewAccountId = () => {\n  if (state.searchedAccountId === accountId) {\n    return;\n  } else {\n    State.update({\n      searchedAccountId: accountId,\n      result: {},\n      isLoading: true,\n    });\n  }\n};\ncheckNewAccountId();\n\nconst handleData = () => {\n  const result = fetchData();\n  if (result.isLoading) {\n    State.update({\n      isLoading: true,\n      result: {\n        isLoading: true,\n        error: false,\n        data: null,\n      },\n    });\n  }\n  if (result.error) {\n    const errors = state.error;\n    errors.push(`${result.error}`);\n    State.update({\n      error: errors,\n      isLoading: false,\n      result: {\n        isLoading: false,\n        error: true,\n        data: null,\n      },\n    });\n  }\n  if (result.data) {\n    State.update({\n      isLoading: false,\n      result: {\n        isLoading: false,\n        error: false,\n        data: result.data.data.mb_views_nft_tokens,\n      },\n    });\n  }\n};\n\nconst fetchData = () => {\n  const data = fetch(`https://graph.mintbase.xyz/mainnet`, {\n    method: \"POST\",\n    headers: {\n      \"mb-api-key\": \"anon\",\n      \"content-type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      query: operationsDoc,\n      variables: {},\n      operationName: \"MyQuery\",\n    }),\n  });\n  const result = {\n    data: (data && data.body) || null,\n    error: (data && !data.ok && (data.status || data.error)) || null,\n    isLoading: !data && !error,\n  };\n  return result;\n};\n\nif (state.isLoading) {\n  handleData();\n}\n\n// error managment #######################\nif (state.error.length > 0) {\n  function hide() {\n    const errors = state.error;\n    errors.shift();\n    if (errors.length > 0) setTimeout(hide, 2500);\n    State.update({ error: errors });\n  }\n  setTimeout(hide, 2500);\n}\n\n//-------------------------------------------------------------------------------------\nconst dataForReduce = state.result.data || [];\nconst countByNftContractName = dataForReduce.reduce((acc, item) => {\n  acc[item.title] = (acc[item.title] || 0) + 1;\n  return acc;\n}, {});\n\nconst dataForChart = Object.entries(countByNftContractName).map(\n  ([title, count]) => ({\n    title,\n    count,\n  })\n);\n\nconst countByNftContractName1 = dataForReduce.reduce((acc, item) => {\n  acc[item.nft_contract_id] = (acc[item.nft_contract_id] || 0) + 1;\n  return acc;\n}, {});\n\nconst dataForChart1 = Object.entries(countByNftContractName1).map(\n  ([nft_contract_id, counts]) => ({\n    nft_contract_id,\n    counts,\n  })\n);\n//-------------------------------------------------------------------------------------\n\nconst getPieProps = (data, [key, value], colors, chartOption) => {\n  data = data || [];\n  colors = colors || [];\n  chartOption = chartOption || {};\n\n  const dataFormat = data.map((s) => [s[key], s[value]]);\n  const props = {\n    data: dataFormat,\n    colors: colors,\n    chartOption: {\n      title: \"chart title\",\n      type: \"pie\",\n      legend: false,\n      connector: false,\n      ...chartOption,\n    },\n    themeColor: { chart: themeColor.chart },\n    spinnerColors: themeColor.spinnerColors,\n  };\n  return props;\n};\n//-------------------------------------------------------------------------------------\n\n// ----------------------------------------------------\nconst noData = <div className=\"w-100 py-4 text-center\"> No data available</div>;\nconst CardIsLoading = () =>\n  state.isLoading && (\n    <div\n      className=\"d-flex flex-column gap-1\"\n      style={{\n        padding: \"60px 12px\",\n      }}\n    >\n      <Widget\n        src={`easypoll-v0.ndc-widgets.near/widget/Common.Spinner`}\n        props={{\n          ...spinnerColors,\n        }}\n      />\n      <span\n        style={{\n          fontWeight: \"bold\",\n          fontsize: 15,\n          color: \"#4f46e5\",\n          textAlign: \"center\",\n        }}\n      >\n        Loading...\n      </span>\n    </div>\n  );\nconst CardHasError = () =>\n  state.result.error && (\n    <div className=\"d-flex justify-content-center align-items-center h-100 p-4 pb-1\">\n      An error occurred for this section\n    </div>\n  );\n\nconst ChartIsLoading = () => (\n  <div className={`w-100 ${state.result?.isLoading ? \"d-block\" : \"d-none\"}`}>\n    <Widget\n      src={`easypoll-v0.ndc-widgets.near/widget/Common.Spinner`}\n      props={{ ...spinnerColors }}\n    />\n  </div>\n);\nconst ChartHasError = () =>\n  state.result?.error && (\n    <div className=\"py-4 text-center\">An error occurred for this section</div>\n  );\n\n//-------------------------------------------------------------------------------------\nreturn (\n  <>\n    <div className=\"row\">\n      <Widget src=\"lord1.near/widget/header-dynamic\" props={general_theme} />\n\n      <div className=\"col-6\">\n        <div\n          style={{ background: themeColor?.sbt_area?.section_bg }}\n          className=\"shadow-sm rounded-2 overflow-auto p-2\"\n        >\n          {ChartIsLoading()}\n          {ChartHasError()}\n          {dataForChart && (\n            <Widget\n              src=\"lord1.near/widget/Pie-chart\"\n              props={getPieProps(\n                dataForChart1,\n                [\"nft_contract_id\", \"counts\"],\n                themeColor.chartColor,\n                {\n                  title: \"Contract\",\n                  type: \"pie\",\n                  connector: true,\n                  legend: true,\n                }\n              )}\n            />\n          )}\n        </div>\n      </div>\n\n      <div className=\"col-6\">\n        <div\n          style={{ background: themeColor?.sbt_area?.section_bg }}\n          className=\"shadow-sm rounded-2 overflow-auto p-2\"\n        >\n          {ChartIsLoading()}\n          {ChartHasError()}\n          {dataForChart && (\n            <Widget\n              src=\"lord1.near/widget/Pie-chart\"\n              props={getPieProps(\n                dataForChart,\n                [\"title\", \"count\"],\n                themeColor.chartColor,\n                {\n                  title: \"Collection\",\n                  type: \"pie\",\n                  connector: true,\n                  legend: true,\n                }\n              )}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n    <div className=\"mt-4 border-top\">\n      <div\n        style={{ background: themeColor?.sbt_area?.section_bg }}\n        className=\"shadow-sm rounded-2 overflow-auto p-2\"\n      >\n        <div\n          style={{ background: themeColor?.sbt_area?.card_bg }}\n          className=\"shadow-sm rounded-2 overflow-auto\"\n        >\n          {CardIsLoading()}\n          {CardHasError()}\n          {state.result.data && (\n            <Widget\n              src=\"lord1.near/widget/table-pagination\"\n              props={{\n                themeColor: { table_pagination: themeColor.table_pagination },\n                data: state.result.data,\n                columns: [\n                  { title: \"Title\", key: \"title\", colors: \"#806ce1\" },\n                  { title: \"Contract Name\", key: \"nft_contract_name\" },\n                  { title: \"Token Id\", key: \"token_id\", colors: \"#806ce1\" },\n                  { title: \"Contract Id\", key: \"nft_contract_id\" },\n                  { title: \"Description\", key: \"description\" },\n                  { title: \"Image\", key: \"media\", pic: \"yes\", src: \"media\" },\n                ],\n                rowsCount: 10,\n              }}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/lord1.near/widget/wrapped-sharddog", "fact_widget_deployments_id": "5490a34e8db09e28f231195c48d704a6", "inserted_timestamp": "2023-12-14T22:51:03.183Z", "modified_timestamp": "2023-12-20T03:22:11.422Z", "__row_index": 0}