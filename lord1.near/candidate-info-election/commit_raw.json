{"tx_hash": "129hVBpux7wtvhGYkVRr4ZUHGr7Wai47JYA6VHxkAFdj", "action_id_social": "98P1BLziB6N5U99AxBGgwLM86t7bUgBHGRvtQbsgmzRU-0-widget", "block_id": 105860559, "block_timestamp": "2023-11-16T22:37:54.604Z", "signer_id": "lord1.near", "widget_name": "candidate-info-election", "source_code": "const themeColor = props.themeColor;\r\n\r\nconst daotheme = {\r\n  height: \"100px\",\r\n  align: \"left\",\r\n  description: \"Explore the on-chain information of your favored candidate.\",\r\n  brand: \"Candidate\",\r\n  fontsize: \"30px\",\r\n  fontweight: \"30px\",\r\n  afterbrand: \"Informations\",\r\n  afterbrandcolor: themeColor?.dynamic_header?.afterbrandcolor || \"#789efb\",\r\n  fontbrand: \" Arial, sans-serif\",\r\n  color1brand: themeColor?.dynamic_header?.color1brand || \"#000\",\r\n  color2brand: themeColor?.dynamic_header?.color2brand || \"#806ce1\",\r\n  colordescription: themeColor?.dynamic_header?.colordescription || \"#806ce1\",\r\n  fontsubtitle: \" Arial, sans-serif\",\r\n  background:\r\n    themeColor?.dynamic_header?.background ||\r\n    \"radial-gradient(circle, rgba(210,202,250,1) 0%, rgba(230,230,231,0.01) 0%, rgba(235,238,255,1) 100%, rgba(235,231,253,1) 100%, rgba(255,241,241,1) 100%, rgba(46,52,90,1) 100%);\",\r\n};\r\n\r\nconst queryHashes = [\r\n  { id: 1, hash: \"fa5ab0ec-d69f-4167-95b3-f0d88effe0dc\" },\r\n  { id: 2, hash: \"4b1691db-4073-4d1d-84f8-caac41a66feb\" },\r\n  { id: 3, hash: \"c182b428-e513-41c8-9a79-651fb2ea5ad0\" },\r\n];\r\n\r\nState.init({\r\n  light: true,\r\n  data: [],\r\n  isLoading: true,\r\n  error: [],\r\n  tab: \"second\",\r\n});\r\n\r\nconst tabs = {\r\n  firstTab: \"first\",\r\n  secondTab: \"second\",\r\n  thirdTab: \"third\",\r\n};\r\n\r\nconst setTab = (tab) => State.update({ tab });\r\n\r\nconst Container = styled.div`\r\n  &&{text-align:left};\r\n  .tabContent{\r\n    display:inline-flex;\r\n    align-items:center;\r\n    background: rgba(26, 46, 51, 0.25);\r\n    border: 1px solid rgba(255, 255, 255, 0.3);\r\n    border-radius: 10px;\r\n    padding:3px 4px;\r\n    list-style-type:none;\r\n    margin-left: 1%;\r\n  }\r\n  .tab-item .active{\r\n    background: #304352;\r\n\r\n  }\r\n  .tab-item button{\r\n    background-color:transparent;\r\n    border-radius: 8px;\r\n    font-weight: 500;\r\n    font-size: 14px;\r\n    color:#fff;\r\n    height:30px;\r\n    padding:0 22px;\r\n    border:none;\r\n\r\n  }\r\n`;\r\n\r\nconst getMixProps = (data, dateKey, serieses, colors, chartOption) => {\r\n  data = data || [];\r\n  serieses = serieses || [{ key: \"\", seriesName: \"\", type: \"\", id: 1 }];\r\n  colors = colors || [];\r\n  chartOption = chartOption || {};\r\n\r\n  const dataFormat = serieses.map((series) => {\r\n    const dataFormated = data.map((d) => [d[dateKey] * 1000, d[series.key]]);\r\n    return {\r\n      data: dataFormated,\r\n      name: series.seriesName,\r\n      type: series.type,\r\n      axisId: series.id,\r\n    };\r\n  });\r\n  const props = {\r\n    series: dataFormat,\r\n    colors: colors,\r\n    chartOption: {\r\n      title: \"chart title\",\r\n      subtitle: \"chart subtitle\",\r\n      legend: true,\r\n      stacking: \"false\",\r\n      ...chartOption,\r\n    },\r\n\r\n    overrideOptions: {\r\n      plotOptions: {\r\n        column: {\r\n          stacking: \"false\",\r\n        },\r\n        series: {\r\n          dataGrouping: { enabled: false },\r\n        },\r\n      },\r\n    },\r\n    themeColor: { chart: themeColor.chart },\r\n    spinnerColors: themeColor.spinnerColors,\r\n  };\r\n  return props;\r\n};\r\n\r\nconst handleData = () => {\r\n  const data = {};\r\n  const errors = [];\r\n  queryHashes.forEach(({ hash, id }) => {\r\n    const result = fetchData(hash);\r\n    if (result.error) errors.push(`hash${id} : ${result.error}`);\r\n    data[`hash${id}`] = {\r\n      ...result,\r\n      id,\r\n    };\r\n  });\r\n\r\n  if (Object.values(data).every((d) => !d.isLoading)) {\r\n    State.update({\r\n      data: data,\r\n      error: [...state.error, ...errors],\r\n      isLoading: false,\r\n    });\r\n  }\r\n};\r\n\r\nconst fetchData = (hash) => {\r\n  const data = fetch(\r\n    `https://api.flipsidecrypto.com/api/v2/queries/${hash}/data/latest`,\r\n    {\r\n      subscribe: true,\r\n      method: \"GET\",\r\n      headers: {\r\n        Accept: \"*/*\",\r\n      },\r\n    }\r\n  );\r\n  const result = {\r\n    data: (data && data.body) || null,\r\n    error: (data && !data.ok && (data.status || data.error)) || null,\r\n    isLoading: !data && !error,\r\n  };\r\n  return result;\r\n};\r\n\r\nif (state.isLoading) {\r\n  handleData();\r\n}\r\n\r\nif (state.error.length > 0) {\r\n  function hide() {\r\n    const errors = state.error;\r\n    errors.shift();\r\n    if (errors.length > 0) setTimeout(hide, 2500);\r\n    State.update({ error: errors });\r\n  }\r\n  setTimeout(hide, 2500);\r\n}\r\nreturn (\r\n  <div className=\"container-fluid\">\r\n    <div className=\"pl-2\">\r\n      <div\r\n        className=\"my-4 shadow-sm  rounded-4\"\r\n        style={{ background: themeColor?.sbt_area?.section_bg }}\r\n      >\r\n        <Widget src=\"lord1.near/widget/header-dynamic\" props={daotheme} />\r\n        <div>\r\n          <div>\r\n            <Container>\r\n              <ul className=\"tabContent\">\r\n                <li className=\"tab-item\">\r\n                  <button\r\n                    className={`${\r\n                      state.tab === tabs.secondTab ? \"active\" : \"\"\r\n                    }`}\r\n                    aria-current=\"page\"\r\n                    onClick={() => setTab(tabs.secondTab)}\r\n                  >\r\n                    HOM\r\n                  </button>\r\n                </li>\r\n                <li className=\"tab-item\">\r\n                  <button\r\n                    className={`${state.tab === tabs.firstTab ? \"active\" : \"\"}`}\r\n                    aria-current=\"page\"\r\n                    onClick={() => setTab(tabs.firstTab)}\r\n                  >\r\n                    COA\r\n                  </button>\r\n                </li>\r\n\r\n                <li className=\"tab-item\">\r\n                  <button\r\n                    className={`${state.tab === tabs.thirdTab ? \"active\" : \"\"}`}\r\n                    aria-current=\"page\"\r\n                    onClick={() => setTab(tabs.thirdTab)}\r\n                  >\r\n                    TA\r\n                  </button>\r\n                </li>\r\n              </ul>\r\n            </Container>\r\n          </div>\r\n        </div>\r\n        <div className=\"row w-100 pb-2 px-2 mx-0\">\r\n          <div\r\n            style={{ background: themeColor?.sbt_area?.card_bg }}\r\n            className=\"shadow-sm rounded-2 overflow-auto\"\r\n          >\r\n            {state.tab === \"first\" && (\r\n              <Widget\r\n                src=\"lord1.near/widget/table-pagination\"\r\n                props={{\r\n                  themeColor: { table_pagination: themeColor.table_pagination },\r\n                  data: state.data?.hash1?.data,\r\n                  columns: [\r\n                    {\r\n                      title: \"Candidate\",\r\n                      key: \"SINGER\",\r\n                      description: \"Top Candidate in Election\",\r\n                      link: \"yes\",\r\n                      hyperlink: \"yes\",\r\n                      beforehref:\r\n                        \"https://near.social/mob.near/widget/ProfilePage?accountId=\",\r\n                    },\r\n\r\n                    {\r\n                      title: \"Votes\",\r\n                      key: \"VOTES\",\r\n                      description: \"Total Number of Votes\",\r\n                    },\r\n                    {\r\n                      title: \"OG\",\r\n                      key: \"og\",\r\n                      description: \"Does it have OG or not?\",\r\n                    },\r\n                    {\r\n                      title: \"Vibes\",\r\n                      key: \"vibes\",\r\n                      description: \"Does it have Vibes or not?\",\r\n                    },\r\n                    {\r\n                      title: \"GD\",\r\n                      key: \"gooddollar\",\r\n                      description: \"Does it have Gooddollar or not?\",\r\n                    },\r\n                    {\r\n                      title: \"Fractal\",\r\n                      key: \"fractal\",\r\n                      description: \"Does it have Fractal or not?\",\r\n                    },\r\n                    {\r\n                      title: \"Regens\",\r\n                      key: \"regens\",\r\n                      description: \"Does it have Regens or not? \",\r\n                    },\r\n                    {\r\n                      title: \"First Date\",\r\n                      key: \"first\",\r\n                      description: \"First day of candidate's activity\",\r\n                    },\r\n                    {\r\n                      title: \"Trxs\",\r\n                      key: \"transactions\",\r\n                      description: \"Total Number of candidate's transactions\",\r\n                    },\r\n                    {\r\n                      title: \"Age\",\r\n                      key: \"age\",\r\n                      description: \"Age  of candidate's wallet\",\r\n                    },\r\n                    {\r\n                      title: \"Active Days\",\r\n                      key: \"Dates\",\r\n                      description:\r\n                        \"How many days has the candidate been active on the Near network ?\",\r\n                    },\r\n                    {\r\n                      title: \"Fee\",\r\n                      key: \"fee_usd\",\r\n                      description:\r\n                        \"Total fee volume of Candidate's transactions (Near)\",\r\n                    },\r\n                    {\r\n                      title: \"Volume\",\r\n                      key: \"amount_near\",\r\n                      description:\r\n                        \"Total volume of Candidate's transactions (Near)\",\r\n                    },\r\n                  ],\r\n                }}\r\n              />\r\n            )}\r\n\r\n            {state.tab === \"second\" && (\r\n              <Widget\r\n                src=\"lord1.near/widget/table-pagination\"\r\n                props={{\r\n                  themeColor: { table_pagination: themeColor.table_pagination },\r\n                  data: state.data?.hash2?.data,\r\n                  columns: [\r\n                    {\r\n                      title: \"Candidate\",\r\n                      key: \"SINGER\",\r\n                      description: \"Top Candidate in Election\",\r\n                      link: \"yes\",\r\n                      hyperlink: \"yes\",\r\n                      beforehref:\r\n                        \"https://near.social/mob.near/widget/ProfilePage?accountId=\",\r\n                    },\r\n\r\n                    {\r\n                      title: \"Votes\",\r\n                      key: \"VOTES\",\r\n                      description: \"Total Number of Votes\",\r\n                    },\r\n                    {\r\n                      title: \"OG\",\r\n                      key: \"og\",\r\n                      description: \"Does it have OG or not?\",\r\n                    },\r\n                    {\r\n                      title: \"Vibes\",\r\n                      key: \"vibes\",\r\n                      description: \"Does it have Vibes or not?\",\r\n                    },\r\n                    {\r\n                      title: \"GD\",\r\n                      key: \"gooddollar\",\r\n                      description: \"Does it have Gooddollar or not?\",\r\n                    },\r\n                    {\r\n                      title: \"Fractal\",\r\n                      key: \"fractal\",\r\n                      description: \"Does it have Fractal or not?\",\r\n                    },\r\n                    {\r\n                      title: \"Regens\",\r\n                      key: \"regens\",\r\n                      description: \"Does it have Regens or not? \",\r\n                    },\r\n                    {\r\n                      title: \"First Date\",\r\n                      key: \"first\",\r\n                      description: \"First day of candidate's activity\",\r\n                    },\r\n                    {\r\n                      title: \"Trxs\",\r\n                      key: \"transactions\",\r\n                      description: \"Total Number of candidate's transactions\",\r\n                    },\r\n                    {\r\n                      title: \"Age\",\r\n                      key: \"age\",\r\n                      description: \"Age  of candidate's wallet\",\r\n                    },\r\n                    {\r\n                      title: \"Active Days\",\r\n                      key: \"Dates\",\r\n                      description:\r\n                        \"How many days has the candidate been active on the Near network ?\",\r\n                    },\r\n                    {\r\n                      title: \"Fee\",\r\n                      key: \"fee_usd\",\r\n                      description:\r\n                        \"Total fee volume of Candidate's transactions (Near)\",\r\n                    },\r\n                    {\r\n                      title: \"Volume\",\r\n                      key: \"amount_near\",\r\n                      description:\r\n                        \"Total volume of Candidate's transactions (Near)\",\r\n                    },\r\n                  ],\r\n                }}\r\n              />\r\n            )}\r\n\r\n            {state.tab === \"third\" && (\r\n              <Widget\r\n                src=\"lord1.near/widget/table-pagination\"\r\n                props={{\r\n                  themeColor: { table_pagination: themeColor.table_pagination },\r\n                  data: state.data?.hash3?.data,\r\n                  columns: [\r\n                    {\r\n                      title: \"Candidate\",\r\n                      key: \"SINGER\",\r\n                      description: \"Top Candidate in Election\",\r\n                      link: \"yes\",\r\n                      hyperlink: \"yes\",\r\n                      beforehref:\r\n                        \"https://near.social/mob.near/widget/ProfilePage?accountId=\",\r\n                    },\r\n\r\n                    {\r\n                      title: \"Votes\",\r\n                      key: \"VOTES\",\r\n                      description: \"Total Number of Votes\",\r\n                    },\r\n                    {\r\n                      title: \"OG\",\r\n                      key: \"og\",\r\n                      description: \"Does it have OG or not?\",\r\n                    },\r\n                    {\r\n                      title: \"Vibes\",\r\n                      key: \"vibes\",\r\n                      description: \"Does it have Vibes or not?\",\r\n                    },\r\n                    {\r\n                      title: \"GD\",\r\n                      key: \"gooddollar\",\r\n                      description: \"Does it have Gooddollar or not?\",\r\n                    },\r\n                    {\r\n                      title: \"Fractal\",\r\n                      key: \"fractal\",\r\n                      description: \"Does it have Fractal or not?\",\r\n                    },\r\n                    {\r\n                      title: \"Regens\",\r\n                      key: \"regens\",\r\n                      description: \"Does it have Regens or not? \",\r\n                    },\r\n                    {\r\n                      title: \"First Date\",\r\n                      key: \"first\",\r\n                      description: \"First day of candidate's activity\",\r\n                    },\r\n                    {\r\n                      title: \"Trxs\",\r\n                      key: \"transactions\",\r\n                      description: \"Total Number of candidate's transactions\",\r\n                    },\r\n                    {\r\n                      title: \"Age\",\r\n                      key: \"age\",\r\n                      description: \"Age  of candidate's wallet\",\r\n                    },\r\n                    {\r\n                      title: \"Active Days\",\r\n                      key: \"Dates\",\r\n                      description:\r\n                        \"How many days has the candidate been active on the Near network ?\",\r\n                    },\r\n                    {\r\n                      title: \"Fee\",\r\n                      key: \"fee_usd\",\r\n                      description:\r\n                        \"Total fee volume of Candidate's transactions (Near)\",\r\n                    },\r\n                    {\r\n                      title: \"Volume\",\r\n                      key: \"amount_near\",\r\n                      description:\r\n                        \"Total volume of Candidate's transactions (Near)\",\r\n                    },\r\n                  ],\r\n                }}\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"toast-container position-fixed bottom-0 end-0 p-3\">\r\n        {state.error.length > 0 &&\r\n          state.error.map((er) => (\r\n            <div\r\n              className=\"toast show align-items-center text-bg-danger border-0\"\r\n              role=\"alert\"\r\n              aria-live=\"assertive\"\r\n              aria-atomic=\"true\"\r\n            >\r\n              <div className=\"d-flex\">\r\n                <div className=\"toast-body\">{er}</div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\n// const props = {\r\n//   themeColor: {\r\n//     dynamic_header: {\r\n//       afterbrandcolor: \"#789efb\",\r\n//       color1brand: \"#000\",\r\n//       color2brand: \"#806ce1\",\r\n//       colordescription: \"#806ce1\",\r\n//       background:\r\n//         \"radial-gradient(circle, rgba(210,202,250,1) 0%, rgba(230,230,231,0.01) 0%, rgba(235,238,255,1) 100%, rgba(235,231,253,1) 100%, rgba(255,241,241,1) 100%, rgba(46,52,90,1) 100%);\",\r\n//     },\r\n//     tab_sbt: {\r\n//       backgroundColor: \"rgb(49,62,89)\",\r\n//       textColor: \"#fff\",\r\n//       headerColor: \"#806ce1\",\r\n//       numberColor: \"#fff\",\r\n//     },\r\n//     sbt_area: {\r\n//       section_bg: \"rgba(25,33,80)\",\r\n//       card_bg: \"rgb(49, 62, 89)\",\r\n//       card_title_color: \"#806ce1\",\r\n//     },\r\n//   },\r\n// };\r\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/lord1.near/widget/candidate-info-election", "fact_widget_deployments_id": "32633fe279ace01d1bcbb23969269ab0", "inserted_timestamp": "2023-11-17T00:34:34.395Z", "modified_timestamp": "2023-11-17T00:34:34.395Z", "__row_index": 0}