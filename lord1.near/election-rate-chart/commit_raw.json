{"tx_hash": "CNoedM4GbFYPx4QQYtsuuJCvgeWKEhgDL6dearMXfUzp", "action_id_social": "8dRJ7qC9EC89a8XKfsx3EAkQSVNpmLHLtLLNDckA1J5j-0-widget", "block_id": 101483837, "block_timestamp": "2023-09-19T15:31:11.469Z", "signer_id": "lord1.near", "widget_name": "election-rate-chart", "source_code": "const themeColor = props.themeColor;\r\n\r\nconst queryHashes = [{ id: 1, hash: \"c178fbd9-697e-4e36-9770-8c6162fa0004\" }];\r\n\r\nState.init({\r\n  light: true,\r\n  data: [],\r\n  isLoading: true,\r\n  error: [],\r\n});\r\n\r\nconst getMixProps = (data, dateKey, serieses, colors, chartOption) => {\r\n  data = data || [];\r\n  serieses = serieses || [{ key: \"\", seriesName: \"\", type: \"\", id: 1 }];\r\n  colors = colors || [];\r\n  chartOption = chartOption || {};\r\n\r\n  const dataFormat = serieses.map((series) => {\r\n    const dataFormated = data.map((d) => [d[dateKey] * 1000, d[series.key]]);\r\n    return {\r\n      data: dataFormated,\r\n      name: series.seriesName,\r\n      type: series.type,\r\n      axisId: series.id,\r\n    };\r\n  });\r\n  const props = {\r\n    series: dataFormat,\r\n    colors: colors,\r\n    chartOption: {\r\n      title: \"chart title\",\r\n      subtitle: \"chart subtitle\",\r\n      legend: true,\r\n      stacking: \"false\",\r\n      ...chartOption,\r\n    },\r\n\r\n    overrideOptions: {\r\n      plotOptions: {\r\n        column: {\r\n          stacking: \"false\",\r\n        },\r\n        series: {\r\n          dataGrouping: { enabled: false },\r\n        },\r\n      },\r\n    },\r\n    themeColor: { chart: themeColor.chart },\r\n    spinnerColors: themeColor.spinnerColors,\r\n  };\r\n  return props;\r\n};\r\n\r\nconst handleData = () => {\r\n  const data = {};\r\n  const errors = [];\r\n  queryHashes.forEach(({ hash, id }) => {\r\n    const result = fetchData(hash);\r\n    if (result.error) errors.push(`hash${id} : ${result.error}`);\r\n    data[`hash${id}`] = {\r\n      ...result,\r\n      id,\r\n    };\r\n  });\r\n\r\n  if (Object.values(data).every((d) => !d.isLoading)) {\r\n    State.update({\r\n      data: data,\r\n      error: [...state.error, ...errors],\r\n      isLoading: false,\r\n    });\r\n  }\r\n};\r\n\r\nconst fetchData = (hash) => {\r\n  const data = fetch(\r\n    `https://api.flipsidecrypto.com/api/v2/queries/${hash}/data/latest`,\r\n    {\r\n      subscribe: true,\r\n      method: \"GET\",\r\n      headers: {\r\n        Accept: \"*/*\",\r\n      },\r\n    }\r\n  );\r\n  const result = {\r\n    data: (data && data.body) || null,\r\n    error: (data && !data.ok && (data.status || data.error)) || null,\r\n    isLoading: !data && !error,\r\n  };\r\n  return result;\r\n};\r\n\r\nif (state.isLoading) {\r\n  handleData();\r\n}\r\n\r\nif (state.error.length > 0) {\r\n  function hide() {\r\n    const errors = state.error;\r\n    errors.shift();\r\n    if (errors.length > 0) setTimeout(hide, 2500);\r\n    State.update({ error: errors });\r\n  }\r\n  setTimeout(hide, 2500);\r\n}\r\n\r\nreturn (\r\n  <div className=\"container-fluid py-2\">\r\n    <div>\r\n      <div className=\"row md-12\">\r\n        <div calseeName=\"row col-md-12\">\r\n          <div className=\"col-12\">\r\n            <div\r\n              style={{ backgroundColor: themeColor?.sbt_info?.card_bg }}\r\n              className=\"shadow-sm rounded-4\"\r\n            >\r\n              <Widget\r\n                src=\"lord1.near/widget/mix-chart\"\r\n                props={getMixProps(\r\n                  state.data?.hash1?.data,\r\n                  \"time\",\r\n                  [\r\n                    {\r\n                      key: \"total_ballots_cum\",\r\n                      seriesName: \"Max ballots\",\r\n                      type: \"areaspline\",\r\n                      id: 2,\r\n                    },\r\n                    {\r\n                      key: \"total_vote_cum\",\r\n                      seriesName: \"Cumulative vote\",\r\n                      type: \"areaspline\",\r\n                      id: 2,\r\n                    },\r\n\r\n                    {\r\n                      key: \"singers\",\r\n                      seriesName: \"Daily voter\",\r\n                      type: \"column\",\r\n                      id: 1,\r\n                    },\r\n                  ],\r\n                  themeColor.chartColor,\r\n                  {\r\n                    title: \"Vote Status (Total)\",\r\n                    subtitle: \"\",\r\n                    stacking: \"normal\",\r\n                  }\r\n                )}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"py-2\"></div>\r\n\r\n        <div className=\"col-lg-6\">\r\n          <div\r\n            style={{ backgroundColor: themeColor?.sbt_info?.card_bg }}\r\n            className=\"shadow-sm rounded-4\"\r\n          >\r\n            <Widget\r\n              src=\"lord1.near/widget/mix-chart\"\r\n              props={getMixProps(\r\n                state.data?.hash1?.data,\r\n                \"time\",\r\n                [\r\n                  {\r\n                    key: \"hom_rate_cum\",\r\n                    seriesName: \"Max ballots\",\r\n                    type: \"areaspline\",\r\n                    id: 2,\r\n                  },\r\n                  {\r\n                    key: \"hom_cum\",\r\n                    seriesName: \"Cumulative vote\",\r\n                    type: \"areaspline\",\r\n                    id: 2,\r\n                  },\r\n                  {\r\n                    key: \"hom\",\r\n                    seriesName: \"Daily vote\",\r\n                    type: \"column\",\r\n                    id: 1,\r\n                  },\r\n                ],\r\n                themeColor.chartColor,\r\n                {\r\n                  title: \"Vote Status (House of Merit)\",\r\n                  subtitle: \"\",\r\n                  stacking: \"normal\",\r\n                }\r\n              )}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-lg-6\">\r\n          <div\r\n            style={{ backgroundColor: themeColor?.sbt_info?.card_bg }}\r\n            className=\"shadow-sm rounded-4\"\r\n          >\r\n            <Widget\r\n              src=\"lord1.near/widget/mix-chart\"\r\n              props={getMixProps(\r\n                state.data?.hash1?.data,\r\n                \"time\",\r\n                [\r\n                  {\r\n                    key: \"coa_rate_cum\",\r\n                    seriesName: \"Max ballots\",\r\n                    type: \"areaspline\",\r\n                    id: 2,\r\n                  },\r\n                  {\r\n                    key: \"coa_cum\",\r\n                    seriesName: \"Cumulative vote\",\r\n                    type: \"areaspline\",\r\n                    id: 2,\r\n                  },\r\n                  {\r\n                    key: \"coa\",\r\n                    seriesName: \"Daily vote\",\r\n                    type: \"column\",\r\n                    id: 1,\r\n                  },\r\n                ],\r\n                themeColor.chartColor,\r\n                {\r\n                  title: \"Vote Status (Council Of Advisors)\",\r\n                  subtitle: \"\",\r\n                  stacking: \"normal\",\r\n                }\r\n              )}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"py-2\"></div>\r\n      <div className=\"row md-12\">\r\n        <div className=\"col-lg-6\">\r\n          <div\r\n            style={{ backgroundColor: themeColor?.sbt_info?.card_bg }}\r\n            className=\"shadow-sm rounded-4\"\r\n          >\r\n            <Widget\r\n              src=\"lord1.near/widget/mix-chart\"\r\n              props={getMixProps(\r\n                state.data?.hash1?.data,\r\n                \"time\",\r\n                [\r\n                  {\r\n                    key: \"tc_rate_cum\",\r\n                    seriesName: \"Max ballots\",\r\n                    type: \"areaspline\",\r\n                    id: 2,\r\n                  },\r\n                  {\r\n                    key: \"tc_cum\",\r\n                    seriesName: \"Cumulative vote\",\r\n                    type: \"areaspline\",\r\n                    id: 2,\r\n                  },\r\n                  {\r\n                    key: \"tc\",\r\n                    seriesName: \"Daily vote\",\r\n                    type: \"column\",\r\n                    id: 1,\r\n                  },\r\n                ],\r\n                themeColor.chartColor,\r\n                {\r\n                  title: \"Vote Status (Transparency Commission)\",\r\n                  subtitle: \"\",\r\n                  stacking: \"normal\",\r\n                }\r\n              )}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-lg-6\">\r\n          <div\r\n            style={{ backgroundColor: themeColor?.sbt_info?.card_bg }}\r\n            className=\"shadow-sm rounded-4\"\r\n          >\r\n            <Widget\r\n              src=\"lord1.near/widget/mix-chart\"\r\n              props={getMixProps(\r\n                state.data?.hash1?.data,\r\n                \"time\",\r\n                [\r\n                  {\r\n                    key: \"bp_rate_cum\",\r\n                    seriesName: \"Max ballots\",\r\n                    type: \"areaspline\",\r\n                    id: 2,\r\n                  },\r\n                  {\r\n                    key: \"bp_cum\",\r\n                    seriesName: \"Cumulative vote\",\r\n                    type: \"areaspline\",\r\n                    id: 2,\r\n                  },\r\n                  {\r\n                    key: \"bp\",\r\n                    seriesName: \"Daily vote\",\r\n                    type: \"column\",\r\n                    id: 1,\r\n                  },\r\n                ],\r\n                themeColor.chartColor,\r\n                {\r\n                  title: \"Vote Status (Budget Package)\",\r\n                  subtitle: \"\",\r\n                  stacking: \"normal\",\r\n                }\r\n              )}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"toast-container position-fixed bottom-0 end-0 p-3\">\r\n        {state.error.length > 0 &&\r\n          state.error.map((er) => (\r\n            <div\r\n              className=\"toast show align-items-center text-bg-danger border-0\"\r\n              role=\"alert\"\r\n              aria-live=\"assertive\"\r\n              aria-atomic=\"true\"\r\n            >\r\n              <div className=\"d-flex\">\r\n                <div className=\"toast-body\">{er}</div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\n// const props = {\r\n//   themeColor: {\r\n//     dynamic_header: {\r\n//       afterbrandcolor: \"#789efb\",\r\n//       color1brand: \"#000\",\r\n//       color2brand: \"#806ce1\",\r\n//       colordescription: \"#806ce1\",\r\n//       background:\r\n//         \"radial-gradient(circle, rgba(210,202,250,1) 0%, rgba(230,230,231,0.01) 0%, rgba(235,238,255,1) 100%, rgba(235,231,253,1) 100%, rgba(255,241,241,1) 100%, rgba(46,52,90,1) 100%);\",\r\n//     },\r\n//     tab_sbt: {\r\n//       backgroundColor: \"rgb(49,62,89)\",\r\n//       textColor: \"#fff\",\r\n//       headerColor: \"#806ce1\",\r\n//       numberColor: \"#fff\",\r\n//     },\r\n//     sbt_area: {\r\n//       section_bg: \"rgba(25,33,80)\",\r\n//       card_bg: \"rgb(49, 62, 89)\",\r\n//       card_title_color: \"#806ce1\",\r\n//     },\r\n//   },\r\n// };\r\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/lord1.near/widget/election-rate-chart", "fact_widget_deployments_id": "37a7d216bd317a2f19da484f0bd7d5ef", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}