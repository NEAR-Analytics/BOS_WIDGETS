{"tx_hash": "FwDbhpddsZcAaP4jjoxsf3t9ggi4LixDLT8k8GiHkcve", "action_id_social": "3VHWnyCTArv6NLrTRYn5WHJDKT8VWmgBzPruLH3B2Qvi-0-widget", "block_id": 107924677, "block_timestamp": "2023-12-14T12:49:35.036Z", "signer_id": "lord1.near", "widget_name": "wrapped-balance-usd", "source_code": "const APIKEY = \"36f2b87a-7ee6-40d8-80b9-5e68e587a5b5\";\r\nconst themeColor = props.themeColor;\r\nconst explor_balance_nft_theme = themeColor?.explor_balance?.nft || {};\r\nconst accountId = props.accountId ?? context.accountId ?? \"\";\r\n55;\r\n// ------------------------\r\n// format to small characters like 200k, 200m, 200b...\r\nconst formatNumber = (num) => {\r\n  if (num >= 1000000000) {\r\n    return (num / 1000000000).toFixed(1).replace(/\\.0$/, \"\") + \"b\";\r\n  }\r\n  if (num >= 1000000) {\r\n    return (num / 1000000).toFixed(1).replace(/\\.0$/, \"\") + \"m\";\r\n  }\r\n  if (num >= 1000) {\r\n    return (num / 1000).toFixed(1).replace(/\\.0$/, \"\") + \"k\";\r\n  }\r\n  return num;\r\n};\r\n// -------------------------------\r\nconst general_theme = {\r\n  height: \"110px\",\r\n  align: \"center\",\r\n  description: \"Total Balances (USD)\",\r\n  brand: `${\r\n    state.result.data.totalUsd ? formatNumber(state.result.data.totalUsd) : \"0\"\r\n  }`,\r\n  fontsize: \"100\",\r\n  fontweight: \"25px\",\r\n  afterbrand: \"\",\r\n  afterbrandcolor: themeColor?.dynamic_header?.afterbrandcolor || \"#789efb\",\r\n  fontbrand: \" Arial, sans-serif\",\r\n  color1brand: themeColor?.dynamic_header?.color1brand || \"#000\",\r\n  color2brand: themeColor?.dynamic_header?.color2brand || \"#806ce1\",\r\n  colordescription: themeColor?.dynamic_header?.colordescription || \"#806ce1\",\r\n  fontsubtitle: \" Arial, sans-serif\",\r\n  background:\r\n    themeColor?.dynamic_header?.background ||\r\n    \"radial-gradient(circle, rgba(210,202,250,1) 0%, rgba(230,230,231,0.01) 0%, rgba(235,238,255,1) 100%, rgba(235,231,253,1) 100%, rgba(255,241,241,1) 100%, rgba(46,52,90,1) 100%);\",\r\n};\r\nconst general_theme1 = {\r\n  height: \"110px\",\r\n  align: \"center\",\r\n  description: \"\",\r\n  brand: \"Balance \",\r\n  fontsize: \"30px\",\r\n  fontweight: \"25px\",\r\n  afterbrand: \"distribution\",\r\n  afterbrandcolor: themeColor?.dynamic_header?.afterbrandcolor || \"#789efb\",\r\n  fontbrand: \" Arial, sans-serif\",\r\n  color1brand: themeColor?.dynamic_header?.color1brand || \"#000\",\r\n  color2brand: themeColor?.dynamic_header?.color2brand || \"#806ce1\",\r\n  colordescription: themeColor?.dynamic_header?.colordescription || \"#806ce1\",\r\n  fontsubtitle: \" Arial, sans-serif\",\r\n  background:\r\n    themeColor?.dynamic_header?.background ||\r\n    \"radial-gradient(circle, rgba(210,202,250,1) 0%, rgba(230,230,231,0.01) 0%, rgba(235,238,255,1) 100%, rgba(235,231,253,1) 100%, rgba(255,241,241,1) 100%, rgba(46,52,90,1) 100%);\",\r\n};\r\n// -----------------------\r\n\r\nState.init({\r\n  searchedAccountId: \"\",\r\n  result: {},\r\n  isLoading: true,\r\n  error: [],\r\n});\r\n\r\nconst checkNewAccountId = () => {\r\n  if (state.searchedAccountId === accountId) {\r\n    return;\r\n  } else {\r\n    State.update({\r\n      searchedAccountId: accountId,\r\n      result: {},\r\n      isLoading: true,\r\n    });\r\n  }\r\n};\r\ncheckNewAccountId();\r\n\r\nconst handleData = () => {\r\n  const result = fetchData();\r\n  if (result.isLoading) {\r\n    State.update({\r\n      isLoading: true,\r\n      result: {\r\n        isLoading: true,\r\n        error: false,\r\n        data: null,\r\n      },\r\n    });\r\n  }\r\n  if (result.error) {\r\n    const errors = state.error;\r\n    errors.push(`${result.error}`);\r\n    State.update({\r\n      error: errors,\r\n      isLoading: false,\r\n      result: {\r\n        isLoading: false,\r\n        error: true,\r\n        data: null,\r\n      },\r\n    });\r\n  }\r\n  if (result.data) {\r\n    State.update({\r\n      isLoading: false,\r\n      result: {\r\n        isLoading: false,\r\n        error: false,\r\n        data: {\r\n          balancesTotal: result.data.balancesTotal,\r\n          totalUsd: result.data.totalUsd,\r\n        },\r\n      },\r\n    });\r\n  }\r\n};\r\n\r\nconst fetchData = () => {\r\n  const data = fetch(\r\n    `https://api.pikespeak.ai/account/balances?accounts=${accountId}`,\r\n    {\r\n      mode: \"cors\",\r\n      headers: {\r\n        \"x-api-key\": APIKEY,\r\n      },\r\n    }\r\n  );\r\n  const result = {\r\n    data: (data && data.body) || null,\r\n    error: (data && !data.ok && (data.status || data.error)) || null,\r\n    isLoading: !data && !error,\r\n  };\r\n  return result;\r\n};\r\n\r\nif (state.isLoading) {\r\n  handleData();\r\n}\r\n\r\n// error managment #######################\r\nif (state.error.length > 0) {\r\n  function hide() {\r\n    const errors = state.error;\r\n    errors.shift();\r\n    if (errors.length > 0) setTimeout(hide, 2500);\r\n    State.update({ error: errors });\r\n  }\r\n  setTimeout(hide, 2500);\r\n}\r\n\r\n// ------------------------------\r\n\r\n//-----------------------------------------------------------------------------------------------------\r\n\r\n// -------------------------------\r\nconst getPieProps = (data, [key, value], colors, chartOption) => {\r\n  data = data || [];\r\n  colors = colors || [];\r\n  chartOption = chartOption || {};\r\n\r\n  const dataFormat = data.map((s) => [s[key], s[value]]);\r\n  const props = {\r\n    data: dataFormat,\r\n    colors: colors,\r\n    chartOption: {\r\n      title: \"chart title\",\r\n      type: \"pie\",\r\n      legend: false,\r\n      connector: false,\r\n      ...chartOption,\r\n    },\r\n    themeColor: { chart: themeColor.chart },\r\n    spinnerColors: themeColor.spinnerColors,\r\n  };\r\n  return props;\r\n};\r\n// ------------------------------------\r\nconst CardIsLoading = () =>\r\n  state.isLoading && (\r\n    <div\r\n      className=\"d-flex flex-column gap-1\"\r\n      style={{\r\n        padding: \"60px 12px\",\r\n      }}\r\n    >\r\n      <Widget\r\n        src={`easypoll-v0.ndc-widgets.near/widget/Common.Spinner`}\r\n        props={{\r\n          ...spinnerColors,\r\n        }}\r\n      />\r\n      <span\r\n        style={{\r\n          fontWeight: \"bold\",\r\n          fontsize: 15,\r\n          color: \"#4f46e5\",\r\n          textAlign: \"center\",\r\n        }}\r\n      >\r\n        Loading...\r\n      </span>\r\n    </div>\r\n  );\r\nconst CardHasError = () =>\r\n  state.result.error && (\r\n    <div className=\"d-flex justify-content-center align-items-center h-100 p-4 pb-1\">\r\n      An error occurred for this section\r\n    </div>\r\n  );\r\nconst ChartIsLoading = () => (\r\n  <div className={`w-100 ${state.result?.isLoading ? \"d-block\" : \"d-none\"}`}>\r\n    <Widget\r\n      src={`easypoll-v0.ndc-widgets.near/widget/Common.Spinner`}\r\n      props={{ ...spinnerColors }}\r\n    />\r\n  </div>\r\n);\r\nconst ChartHasError = () =>\r\n  state.result?.error && (\r\n    <div className=\"py-4 text-center\">An error occurred for this section</div>\r\n  );\r\n\r\n//-----------------------------------------------------------------------------------------------------\r\nreturn (\r\n  <div>\r\n    <div className=\"row\">\r\n      <div className=\"col-8\">\r\n        <Widget src=\"lord1.near/widget/header-dynamic\" props={general_theme} />\r\n        <div\r\n          style={{\r\n            background: themeColor?.sbt_area?.section_bg,\r\n            \"margin-top\": \"20px\",\r\n          }}\r\n          className=\"shadow-sm rounded-2 overflow-auto p-2\"\r\n        >\r\n          <div className=\"mt-4 border-top\">\r\n            {CardIsLoading()}\r\n            {CardHasError()}\r\n            {state.result.data && (\r\n              <Widget\r\n                src=\"lord1.near/widget/table-pagination\"\r\n                props={{\r\n                  themeColor: { table_pagination: themeColor.table_pagination },\r\n                  data: state.result.data.balancesTotal,\r\n                  columns: [\r\n                    { title: \"Symbol\", key: \"symbol\", colors: \"#806ce1\" },\r\n                    { title: \"Contract\", key: \"contract\" },\r\n                    { title: \"USD Price \", key: \"usdPrice\", colors: \"#806ce1\" },\r\n                    { title: \"Amount\", key: \"amount\" },\r\n                  ],\r\n                  rowsCount: 10,\r\n                }}\r\n              />\r\n            )}\r\n          </div>\r\n        </div>{\" \"}\r\n      </div>\r\n      <div className=\"col-4\">\r\n        <Widget src=\"lord1.near/widget/header-dynamic\" props={general_theme1} />\r\n        <div\r\n          style={{ background: themeColor?.sbt_area?.section_bg }}\r\n          className=\"shadow-sm rounded-2 overflow-auto p-2\"\r\n        >\r\n          {ChartIsLoading()}\r\n          {ChartHasError()}\r\n          {state.result.data && (\r\n            <Widget\r\n              src=\"lord1.near/widget/Pie-chart\"\r\n              props={getPieProps(\r\n                state.result.data.balancesTotal,\r\n                [\"symbol\", \"usdPrice\"],\r\n                themeColor.chartColor,\r\n                {\r\n                  title: \"\",\r\n                  type: \"pie\",\r\n                  connector: true,\r\n                  legend: true,\r\n                }\r\n              )}\r\n            />\r\n          )}\r\n        </div>{\" \"}\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/lord1.near/widget/wrapped-balance-usd", "fact_widget_deployments_id": "b0b64f8341175a54179620bdaa5a8e4a", "inserted_timestamp": "2023-12-14T14:51:36.588Z", "modified_timestamp": "2023-12-20T03:22:11.422Z", "__row_index": 2}