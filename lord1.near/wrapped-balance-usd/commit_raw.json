{"tx_hash": "5g2t67Hy9SNCwxX9mC58zhxmPpov9ZxX54fhZtcPcB3x", "action_id_social": "C2xLHQMRsms178oB3dxniW9DH6agmLXz1zDx6mwpz6ef-0-widget", "block_id": 108183983, "block_timestamp": "2023-12-17T16:55:47.366Z", "signer_id": "lord1.near", "widget_name": "wrapped-balance-usd", "source_code": "const APIKEY = \"36f2b87a-7ee6-40d8-80b9-5e68e587a5b5\";\nconst themeColor = props.themeColor;\nconst explor_balance_nft_theme = themeColor?.explor_balance?.nft || {};\nconst accountId = props.accountId ?? context.accountId ?? \"\";\n// ------------------------\n// format to small characters like 200k, 200m, 200b...\nconst formatNumber = (num) => {\n  if (num >= 1000000000) {\n    return (num / 1000000000).toFixed(1).replace(/\\.0$/, \"\") + \"b\";\n  }\n  if (num >= 1000000) {\n    return (num / 1000000).toFixed(1).replace(/\\.0$/, \"\") + \"m\";\n  }\n  if (num >= 1000) {\n    return (num / 1000).toFixed(1).replace(/\\.0$/, \"\") + \"k\";\n  }\n  return num;\n};\n// -------------------------------\nconst general_theme = {\n  height: \"110px\",\n  align: \"center\",\n  description: \"Total Balances (USD)\",\n  brand: `${\n    state.result.data.totalUsd ? formatNumber(state.result.data.totalUsd) : \"0\"\n  }`,\n  fontsize: \"100\",\n  fontweight: \"25px\",\n  afterbrand: \"\",\n  afterbrandcolor: themeColor?.dynamic_header?.afterbrandcolor || \"#789efb\",\n  fontbrand: \" Arial, sans-serif\",\n  color1brand: themeColor?.dynamic_header?.color1brand || \"#000\",\n  color2brand: themeColor?.dynamic_header?.color2brand || \"#806ce1\",\n  colordescription: themeColor?.dynamic_header?.colordescription || \"#806ce1\",\n  fontsubtitle: \" Arial, sans-serif\",\n  background:\n    themeColor?.dynamic_header?.background ||\n    \"radial-gradient(circle, rgba(210,202,250,1) 0%, rgba(230,230,231,0.01) 0%, rgba(235,238,255,1) 100%, rgba(235,231,253,1) 100%, rgba(255,241,241,1) 100%, rgba(46,52,90,1) 100%);\",\n};\nconst general_theme1 = {\n  height: \"110px\",\n  align: \"center\",\n  description: \"\",\n  brand: \"Balance \",\n  fontsize: \"30px\",\n  fontweight: \"25px\",\n  afterbrand: \"distribution\",\n  afterbrandcolor: themeColor?.dynamic_header?.afterbrandcolor || \"#789efb\",\n  fontbrand: \" Arial, sans-serif\",\n  color1brand: themeColor?.dynamic_header?.color1brand || \"#000\",\n  color2brand: themeColor?.dynamic_header?.color2brand || \"#806ce1\",\n  colordescription: themeColor?.dynamic_header?.colordescription || \"#806ce1\",\n  fontsubtitle: \" Arial, sans-serif\",\n  background:\n    themeColor?.dynamic_header?.background ||\n    \"radial-gradient(circle, rgba(210,202,250,1) 0%, rgba(230,230,231,0.01) 0%, rgba(235,238,255,1) 100%, rgba(235,231,253,1) 100%, rgba(255,241,241,1) 100%, rgba(46,52,90,1) 100%);\",\n};\n// -----------------------\n\nState.init({\n  searchedAccountId: \"\",\n  result: {},\n  isLoading: true,\n  error: [],\n});\n\nconst checkNewAccountId = () => {\n  if (state.searchedAccountId === accountId) {\n    return;\n  } else {\n    State.update({\n      searchedAccountId: accountId,\n      result: {},\n      isLoading: true,\n    });\n  }\n};\ncheckNewAccountId();\n\nconst handleData = () => {\n  const result = fetchData();\n  if (result.isLoading) {\n    State.update({\n      isLoading: true,\n      result: {\n        isLoading: true,\n        error: false,\n        data: null,\n      },\n    });\n  }\n  if (result.error) {\n    const errors = state.error;\n    errors.push(`${result.error}`);\n    State.update({\n      error: errors,\n      isLoading: false,\n      result: {\n        isLoading: false,\n        error: true,\n        data: null,\n      },\n    });\n  }\n  if (result.data) {\n    State.update({\n      isLoading: false,\n      result: {\n        isLoading: false,\n        error: false,\n        data: {\n          balancesTotal: result.data.balancesTotal,\n          totalUsd: result.data.totalUsd,\n        },\n      },\n    });\n  }\n};\n\nconst fetchData = () => {\n  const data = fetch(\n    `https://api.pikespeak.ai/account/balances?accounts=${state.searchedAccountId}`,\n    {\n      mode: \"cors\",\n      headers: {\n        \"x-api-key\": APIKEY,\n      },\n    }\n  );\n  const result = {\n    data: (data && data.body) || null,\n    error: (data && !data.ok && (data.status || data.error)) || null,\n    isLoading: !data && !error,\n  };\n  return result;\n};\n\nif (state.isLoading) {\n  handleData();\n}\n\n// error managment #######################\nif (state.error.length > 0) {\n  function hide() {\n    const errors = state.error;\n    errors.shift();\n    if (errors.length > 0) setTimeout(hide, 2500);\n    State.update({ error: errors });\n  }\n  setTimeout(hide, 2500);\n}\n\n// ------------------------------\n\n//-----------------------------------------------------------------------------------------------------\n\n// -------------------------------\nconst getPieProps = (data, [key, value], colors, chartOption) => {\n  data = data || [];\n  colors = colors || [];\n  chartOption = chartOption || {};\n\n  const dataFormat = data.map((s) => [s[key], s[value]]);\n  const props = {\n    data: dataFormat,\n    colors: colors,\n    chartOption: {\n      title: \"chart title\",\n      type: \"pie\",\n      legend: false,\n      connector: false,\n      ...chartOption,\n    },\n    themeColor: { chart: themeColor.chart },\n    spinnerColors: themeColor.spinnerColors,\n  };\n  return props;\n};\n// ------------------------------------\nconst CardIsLoading = () =>\n  state.isLoading && (\n    <div\n      className=\"d-flex flex-column gap-1\"\n      style={{\n        padding: \"60px 12px\",\n      }}\n    >\n      <Widget\n        src={`easypoll-v0.ndc-widgets.near/widget/Common.Spinner`}\n        props={{\n          ...spinnerColors,\n        }}\n      />\n      <span\n        style={{\n          fontWeight: \"bold\",\n          fontsize: 15,\n          color: \"#4f46e5\",\n          textAlign: \"center\",\n        }}\n      >\n        Loading...\n      </span>\n    </div>\n  );\nconst CardHasError = () =>\n  state.result.error && (\n    <div className=\"d-flex justify-content-center align-items-center h-100 p-4 pb-1\">\n      An error occurred for this section\n    </div>\n  );\nconst ChartIsLoading = () => (\n  <div className={`w-100 ${state.result?.isLoading ? \"d-block\" : \"d-none\"}`}>\n    <Widget\n      src={`easypoll-v0.ndc-widgets.near/widget/Common.Spinner`}\n      props={{ ...spinnerColors }}\n    />\n  </div>\n);\nconst ChartHasError = () =>\n  state.result?.error && (\n    <div className=\"py-4 text-center\">An error occurred for this section</div>\n  );\n\n//-----------------------------------------------------------------------------------------------------\nreturn (\n  <div>\n    <div className=\"row\">\n      <div className=\"col-8\">\n        <Widget src=\"lord1.near/widget/header-dynamic\" props={general_theme} />\n        <div\n          style={{\n            background: themeColor?.sbt_area?.section_bg,\n            \"margin-top\": \"20px\",\n          }}\n          className=\"shadow-sm rounded-3 overflow-auto p-2\"\n        >\n          <div\n            style={{ background: themeColor?.sbt_area?.card_bg }}\n            className=\"shadow-sm rounded-2 overflow-auto\"\n          >\n            <div className=\"mt-4 border-top\">\n              {CardIsLoading()}\n              {CardHasError()}\n              {state.result.data && (\n                <Widget\n                  src=\"lord1.near/widget/table-pagination\"\n                  props={{\n                    themeColor: {\n                      table_pagination: themeColor.table_pagination,\n                    },\n                    data: state.result.data.balancesTotal,\n                    columns: [\n                      { title: \"Symbol\", key: \"symbol\", colors: \"#806ce1\" },\n                      { title: \"Contract\", key: \"contract\" },\n                      {\n                        title: \"USD Price \",\n                        key: \"usdPrice\",\n                        colors: \"#806ce1\",\n                        round: \"yes\",\n                      },\n                      { title: \"Amount\", key: \"amount\", round: \"yes\" },\n                    ],\n                    rowsCount: 10,\n                  }}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"col-4\">\n        <Widget src=\"lord1.near/widget/header-dynamic\" props={general_theme1} />\n        <div\n          style={{ background: themeColor?.sbt_area?.section_bg }}\n          className=\"shadow-sm rounded-2 overflow-auto p-2\"\n        >\n          {ChartIsLoading()}\n          {ChartHasError()}\n          {state.result.data && (\n            <Widget\n              src=\"lord1.near/widget/Pie-chart\"\n              props={getPieProps(\n                state.result.data.balancesTotal,\n                [\"symbol\", \"usdPrice\"],\n                themeColor.chartColor,\n                {\n                  title: \"\",\n                  type: \"pie\",\n                  connector: true,\n                  legend: true,\n                }\n              )}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/lord1.near/widget/wrapped-balance-usd", "fact_widget_deployments_id": "ab30703ce723cd2c41e822eb56b0bac4", "inserted_timestamp": "2023-12-17T18:47:42.355Z", "modified_timestamp": "2023-12-20T03:22:11.422Z", "__row_index": 0}