{"tx_hash": "Cr6EeW2eGkAkwWjAmcqxV7FzADF6hqMFGXC2Z9Z7sVg3", "action_id_social": "ddMdNJXPTRdJRHXPmftSNJNPeSLP3ypHAuJRVZHY1Rq-0-widget", "block_id": 101161419, "block_timestamp": "2023-09-15T06:01:42.986Z", "signer_id": "lord1.near", "widget_name": "ndc-info", "source_code": "const themeColor = props.themeColor;\nconst generaltheme = {\n  height: \"110px\",\n  align: \"center\",\n  description:\n    \"Tracking the activity of Soul Bound Token holders in Nomination process.\",\n  brand: \"NDC Tracker\",\n  fontsize: \"100\",\n  fontweight: \"25px\",\n  afterbrand: \"\ud83c\udfe6\",\n  afterbrandcolor: themeColor?.dynamic_header?.afterbrandcolor || \"#789efb\",\n  fontbrand: \" Arial, sans-serif\",\n  color1brand: themeColor?.dynamic_header?.color1brand || \"#000\",\n  color2brand: themeColor?.dynamic_header?.color2brand || \"#806ce1\",\n  colordescription: themeColor?.dynamic_header?.colordescription || \"#806ce1\",\n  fontsubtitle: \" Arial, sans-serif\",\n  background:\n    themeColor?.dynamic_header?.background ||\n    \"radial-gradient(circle, rgba(210,202,250,1) 0%, rgba(230,230,231,0.01) 0%, rgba(235,238,255,1) 100%, rgba(235,231,253,1) 100%, rgba(255,241,241,1) 100%, rgba(46,52,90,1) 100%);\",\n};\n\nconst queryHashes = [\n  { id: 1, hash: \"30e55bab-a7ff-4777-a72e-1c0bddd12ff6\" },\n  { id: 2, hash: \"6f3bf58b-a569-4a0d-bba5-ab73885f3c44\" },\n  { id: 3, hash: \"b88d5f66-5278-470e-b93c-335e94876bd6\" },\n];\n\nState.init({\n  light: true,\n  data: [],\n  isLoading: true,\n  error: [],\n});\n\nconst getMixProps = (data, dateKey, serieses, colors, chartOption) => {\n  data = data || [];\n  serieses = serieses || [{ key: \"\", seriesName: \"\", type: \"\", id: 1 }];\n  colors = colors || [];\n  chartOption = chartOption || {};\n\n  const dataFormat = serieses.map((series) => {\n    const dataFormated = data.map((d) => [d[dateKey] * 1000, d[series.key]]);\n    return {\n      data: dataFormated,\n      name: series.seriesName,\n      type: series.type,\n      axisId: series.id,\n    };\n  });\n  const props = {\n    series: dataFormat,\n    colors: colors,\n    chartOption: {\n      title: \"chart title\",\n      subtitle: \"chart subtitle\",\n      legend: true,\n      stacking: \"false\",\n      ...chartOption,\n    },\n\n    overrideOptions: {\n      plotOptions: {\n        column: {\n          stacking: \"false\",\n        },\n        series: {\n          dataGrouping: { enabled: false },\n        },\n      },\n    },\n    themeColor: { chart: themeColor.chart },\n    spinnerColors: themeColor.spinnerColors,\n  };\n  return props;\n};\n\nconst getPieProps = (data, [key, value], colors, chartOption) => {\n  data = data || [];\n  colors = colors || [];\n  chartOption = chartOption || {};\n\n  const dataFormat = data.map((s) => [s[key], s[value]]);\n  const props = {\n    data: dataFormat,\n    colors: colors,\n    chartOption: {\n      title: \"chart title\",\n      type: \"pie\",\n      legend: false,\n      connector: false,\n      ...chartOption,\n    },\n    themeColor: { chart: themeColor.chart },\n    spinnerColors: themeColor.spinnerColors,\n  };\n  return props;\n};\n\nconst formatNumber = (num) => {\n  if ((num ?? NaN) === NaN) return \"-\";\n  if (num >= 1000000000) {\n    return (num / 1000000000).toFixed(1).replace(/\\.0$/, \"\") + \"b\";\n  }\n  if (num >= 1000000) {\n    return (num / 1000000).toFixed(1).replace(/\\.0$/, \"\") + \"m\";\n  }\n  if (num >= 1000) {\n    return (num / 1000).toFixed(1).replace(/\\.0$/, \"\") + \"k\";\n  }\n  return num.toFixed(4);\n};\n\nconst handleData = () => {\n  const data = {};\n  const errors = [];\n  queryHashes.forEach(({ hash, id }) => {\n    const result = fetchData(hash);\n    if (result.error) errors.push(`hash${id} : ${result.error}`);\n    data[`hash${id}`] = {\n      ...result,\n      id,\n    };\n  });\n\n  if (Object.values(data).every((d) => !d.isLoading)) {\n    State.update({\n      data: data,\n      error: [...state.error, ...errors],\n      isLoading: false,\n    });\n  }\n};\n\nconst fetchData = (hash) => {\n  const data = fetch(\n    `https://api.flipsidecrypto.com/api/v2/queries/${hash}/data/latest`,\n    {\n      subscribe: true,\n      method: \"GET\",\n      headers: {\n        Accept: \"*/*\",\n      },\n    }\n  );\n  const result = {\n    data: (data && data.body) || null,\n    error: (data && !data.ok && (data.status || data.error)) || null,\n    isLoading: !data && !error,\n  };\n  return result;\n};\n\nif (state.isLoading) {\n  handleData();\n}\n\nif (state.error.length > 0) {\n  function hide() {\n    const errors = state.error;\n    errors.shift();\n    if (errors.length > 0) setTimeout(hide, 2500);\n    State.update({ error: errors });\n  }\n  setTimeout(hide, 2500);\n}\n\nreturn (\n  <div className=\"container-fluid py-2\">\n    <div className=\"pl-2\">\n      <div\n        className=\"my-4 shadow-sm pb-2 rounded-4\"\n        style={{ background: themeColor?.sbt_area?.section_bg }}\n      >\n        <Widget src=\"lord1.near/widget/header-dynamic\" props={generaltheme} />\n        <div style={{ marginLeft: \"1rem\" }}>\n          <Widget\n            src=\"lord1.near/widget/tab-ndc\"\n            props={{\n              backgroundColor:\n                themeColor?.tab_sbt?.backgroundColor || \"#d2cafa\",\n              textColor: themeColor?.tab_sbt?.textColor || \"#fff\",\n              headerColor: themeColor?.tab_sbt?.headerColor || \"#806ce1\",\n              numberColor: themeColor?.tab_sbt?.numberColor || \"#fff\",\n              numberintextColor:\n                themeColor?.tab_sbt?.numberintextColor || \"#806ce1\",\n              dark: themeColor?.tab_sbt?.dark || \"dark\",\n            }}\n          />\n        </div>\n      </div>\n      <div className=\"row g-4 w-100 pb-2 px-2 mx-0\">\n        <div\n          style={{ background: themeColor?.sbt_area?.card_bg }}\n          className=\"shadow-sm rounded-2\"\n        >\n          <Widget\n            src=\"lord1.near/widget/mix-chart\"\n            props={getMixProps(\n              state.data?.hash1?.data,\n              \"timestamp\",\n              [\n                {\n                  key: \"hom\",\n                  seriesName: \"House Of Merit\",\n                  type: \"spline\",\n                  id: 1,\n                },\n                {\n                  key: \"coa\",\n                  seriesName: \"Council Of Advisors\",\n                  type: \"spline\",\n                  id: 1,\n                },\n                {\n                  key: \"tc\",\n                  seriesName: \"Transparency Commission\",\n                  type: \"spline\",\n                  id: 1,\n                },\n              ],\n              themeColor.chartColor,\n              {\n                title: \"Nomination for Each House\",\n                subtitle:\n                  \"Number of weekly Nominations for Each House (regardless of revoked ones)\",\n                stacking: \"normal\",\n              }\n            )}\n          />\n        </div>\n      </div>\n      <div className=\"row w-100 py-4 g-4\">\n        <div className=\" col-12 col-md-6\">\n          <div\n            style={{ background: themeColor?.sbt_area?.card_bg }}\n            className=\"w-100 mx-auto shadow-sm rounded-4\"\n          >\n            <h6\n              style={{ color: themeColor?.sbt_area?.card_title_color }}\n              className=\"pt-4 ps-4\"\n            >\n              <i>Number of transactions based on Functions </i>\n            </h6>\n            <Widget\n              src=\"lord1.near/widget/Pie-chart\"\n              props={getPieProps(\n                state.data?.hash2?.data,\n                [\"function\", \"trxs\"],\n                themeColor.chartColor,\n                {\n                  title: \"\",\n                  type: \"pie\",\n                  connector: true,\n                  legend: true,\n                }\n              )}\n            />\n          </div>\n        </div>\n        <div className=\" col-12 col-md-6\">\n          <div\n            style={{ background: themeColor?.sbt_area?.card_bg }}\n            className=\"w-100 mx-auto shadow-sm rounded-4\"\n          >\n            <h6\n              style={{ color: themeColor?.sbt_area?.card_title_color }}\n              className=\"pt-4 ps-4\"\n            >\n              <i>Number of users based on Functions</i>\n            </h6>\n            <Widget\n              src=\"lord1.near/widget/Pie-chart\"\n              props={getPieProps(\n                state.data?.hash3?.data,\n                [\"function\", \"nominee\"],\n                themeColor.chartColor,\n                {\n                  title: \"\",\n                  type: \"pie\",\n                  connector: true,\n                  legend: true,\n                }\n              )}\n            />\n          </div>\n        </div>\n      </div>\n\n      <div\n        className=\"my-4 shadow-sm  rounded-4\"\n        style={{ background: themeColor?.sbt_area?.section_bg }}\n      ></div>\n      <Widget\n        src=\"lord1.near/widget/tabel-ndc\"\n        props={getPieProps(themeColor.chartColor)}\n      />\n\n      <div\n        className=\"my-4 shadow-sm  rounded-4\"\n        style={{ background: themeColor?.sbt_area?.section_bg }}\n      >\n        <Widget\n          src=\"lord1.near/widget/mix-ndc\"\n          props={getPieProps(themeColor.chartColor)}\n        />\n      </div>\n\n      <div className=\"toast-container position-fixed bottom-0 end-0 p-3\">\n        {state.error.length > 0 &&\n          state.error.map((er) => (\n            <div\n              className=\"toast show align-items-center text-bg-danger border-0\"\n              role=\"alert\"\n              aria-live=\"assertive\"\n              aria-atomic=\"true\"\n            >\n              <div className=\"d-flex\">\n                <div className=\"toast-body\">{er}</div>\n              </div>\n            </div>\n          ))}\n      </div>\n    </div>\n  </div>\n);\n\n// const props = {\n//   themeColor: {\n//     dynamic_header: {\n//       afterbrandcolor: \"#789efb\",\n//       color1brand: \"#000\",\n//       color2brand: \"#806ce1\",\n//       colordescription: \"#806ce1\",\n//       background:\n//         \"radial-gradient(circle, rgba(210,202,250,1) 0%, rgba(230,230,231,0.01) 0%, rgba(235,238,255,1) 100%, rgba(235,231,253,1) 100%, rgba(255,241,241,1) 100%, rgba(46,52,90,1) 100%);\",\n//     },\n//     tab_sbt: {\n//       backgroundColor: \"rgb(49,62,89)\",\n//       textColor: \"#fff\",\n//       headerColor: \"#806ce1\",\n//       numberColor: \"#fff\",\n//     },\n//     sbt_area: {\n//       section_bg: \"rgba(25,33,80)\",\n//       card_bg: \"rgb(49, 62, 89)\",\n//       card_title_color: \"#806ce1\",\n//     },\n//   },\n// };\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/lord1.near/widget/ndc-info", "fact_widget_deployments_id": "bef6b112a9b3bbae387dbc2a4dcb5322", "inserted_timestamp": "2023-09-15T07:49:58.654Z", "modified_timestamp": "2023-09-15T07:49:58.654Z", "__row_index": 2}