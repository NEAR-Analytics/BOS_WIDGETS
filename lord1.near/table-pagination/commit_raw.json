{"tx_hash": "2mgwtweVcrNEJYNbBpbZBrhUKc85g2LHNnBEukKBpUtX", "action_id_social": "AiFZ78GkUj7xcEusSzENT2xYpsMZkjfK1jEQtt29cTkb-0-widget", "block_id": 100628264, "block_timestamp": "2023-09-08T01:20:40.727Z", "signer_id": "lord1.near", "widget_name": "table-pagination", "source_code": "if (!props.data || !props.columns) {\r\n  return \"column and data props are required.\";\r\n}\r\nState.init({ currentPage: 1 });\r\nconst data = props.data || [];\r\nconst rowsCount = props.rowsCount || null;\r\nconst themeColor = props.themeColor;\r\n\r\nconst handlePagination = () => {\r\n  if (!rowsCount) return { table: data };\r\n  const currentPage = state.currentPage;\r\n  const totalPages = Math.ceil(data.length / rowsCount);\r\n  const currentTableData = data.slice(\r\n    (currentPage - 1) * rowsCount,\r\n    rowsCount * currentPage\r\n  );\r\n  const buttons = Array(totalPages).fill(0);\r\n  buttons[currentPage - 1] = 1;\r\n  return { buttons, table: currentTableData };\r\n};\r\nconst Table = styled.table`\r\n  --bs-table-color: ${themeColor?.table_pagination?.table_color};\r\n  --bs-table-bg: ${themeColor?.table_pagination?.table_bg};\r\n  --bs-table-border-color: ${themeColor?.table_pagination?.table_border_color};\r\n  --bs-table-accent-bg: ${themeColor?.table_pagination?.table_accent_bg};\r\n  --bs-table-striped-color: ${themeColor?.table_pagination?.table_striped_color};\r\n  --bs-table-striped-bg: ${themeColor?.table_pagination?.table_striped_bg};\r\n  --bs-table-hover-color: ${themeColor?.table_pagination?.table_hover_color};\r\n  --bs-table-hover-bg:${themeColor?.table_pagination?.table_hover_bg}\r\n`;\r\nreturn (\r\n  <div className=\"table-responsive\">\r\n    <Table\r\n      className={`table table-hover table-striped table-borderless ${props.className}`}\r\n    >\r\n      <thead>\r\n        <tr>\r\n          {props.columns.map((th) => (\r\n            <th key={th.title} className=\"col-1\" scope=\"col\">\r\n              <div>\r\n                {th.description ? (\r\n                  <OverlayTrigger\r\n                    placement={th.position || \"top\"}\r\n                    overlay={<Tooltip>{th.description}</Tooltip>}\r\n                  >\r\n                    <span>{th.title}</span>\r\n                  </OverlayTrigger>\r\n                ) : (\r\n                  <span>{th.title}</span>\r\n                )}\r\n              </div>\r\n            </th>\r\n          ))}\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        {props.data.length > 0 &&\r\n          handlePagination().table.map((row, i) => {\r\n            return (\r\n              <tr key={row.project}>\r\n                {props.columns.map((td) => {\r\n                  const key = td.key ? row[td.key] : i + 1;\r\n                  return <td>{key}</td>;\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n      </tbody>\r\n    </Table>\r\n    {!props.rowsCount ? (\r\n      \"\"\r\n    ) : (\r\n      <div className=\"py-4\">\r\n        <div>\r\n          <ul className=\"pagination pagination-sm gap-2 justify-content-center\">\r\n            {props.data.length > 0 &&\r\n              handlePagination().buttons.map((btn, i) => {\r\n                return (\r\n                  <li key={i} className=\"page-item\">\r\n                    <button\r\n                      onClick={() => State.update({ currentPage: i + 1 })}\r\n                      className=\"page-link btn\"\r\n                      style={{\r\n                        borderColor:\r\n                          themeColor?.table_pagination?.btn_border ?? \"#000\",\r\n                        color:\r\n                          themeColor?.table_pagination?.btn_color ?? \"#000\",\r\n                        backgroundColor: btn\r\n                          ? themeColor?.table_pagination?.btn_bg_active ??\r\n                            \"gray\"\r\n                          : themeColor?.table_pagination?.btn_bg ??\r\n                            \"transparent\",\r\n                      }}\r\n                    >\r\n                      {i + 1}\r\n                    </button>\r\n                  </li>\r\n                );\r\n              })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    )}\r\n  </div>\r\n);\r\n\r\n// const props = {\r\n//   data: [],\r\n//   columns: [\r\n//     { title: \"id\" }, //if key does not provided , rows will be ascending numbers\r\n//     { title: \"title\", key: \"key in data\" ,description:\"here is a\",position:\"top/right/buttom/left\"},\r\n//   ],\r\n//   rowsCount: 2, // if zero or null , the whole table will be render\r\n//   className: \"table-bordered\",\r\n//   themeColor: {\r\n//     table_pagination: {\r\n//       table_bg: \"rgb(25,33,50)\",\r\n//       table_color: \"rgb(255,255,255)\",\r\n//       table_border_color: \"\",\r\n//       table_accent_bg: \"\",\r\n//       table_striped_color: \"rgb(255,255,255)\",\r\n//       table_striped_bg: \"\",\r\n//       table_hover_color: \"rgb(255,255,255)\",\r\n//       table_hover_bg: \"\",\r\n//       btn_border: \"#fff\",\r\n//       btn_bg: \"rgba(49, 62, 89,0.5)\",\r\n//       btn_bg_active: \"rgb(25,33,50)\",\r\n//       btn_color: \"#fff\",\r\n//     },\r\n//   },\r\n// };\r\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/lord1.near/widget/table-pagination", "fact_widget_deployments_id": "7e454c1f6b47a0b962c02439d5b7ad27", "inserted_timestamp": "2023-09-08T03:04:30.837Z", "modified_timestamp": "2023-09-08T03:04:30.837Z", "__row_index": 80}