{"tx_hash": "DaVWvixsUTvMg6PKLFhSuz3PSAT4pURGzwbThMfGHqvw", "action_id_social": "26uUU6RzBrBsmCd8tz4XYe5B6uVNWXLXL4cyJQfDLmrN-0-widget", "block_id": 100706661, "block_timestamp": "2023-09-09T03:06:39.719Z", "signer_id": "lord1.near", "widget_name": "table-pagination", "source_code": "if (!props.data || !props.columns) {\n  return \"column and data props are required.\";\n}\nState.init({ currentPage: 1, searchValue: \"\" });\nconst data = props.data || [];\nconst rowsCount = props.rowsCount || null;\nconst themeColor = props.themeColor;\nconst handleSearch = (event) => {\n  const value = event.target.value;\n  State.update({ searchValue: value });\n};\nconst handlePagination = () => {\n  if (!rowsCount) return { table: data };\n  const currentPage = state.currentPage;\n  const totalPages = Math.ceil(data.length / rowsCount);\n  const currentTableData = data.slice(\n    (currentPage - 1) * rowsCount,\n    rowsCount * currentPage\n  );\n  const buttons = Array(totalPages).fill(0);\n  buttons[currentPage - 1] = 1;\n  return { buttons, table: currentTableData };\n};\nconst Table = styled.table`\n  --bs-table-color: ${themeColor?.table_pagination?.table_color};\n  --bs-table-bg: ${themeColor?.table_pagination?.table_bg};\n  --bs-table-border-color: ${themeColor?.table_pagination?.table_border_color};\n  --bs-table-accent-bg: ${themeColor?.table_pagination?.table_accent_bg};\n  --bs-table-striped-color: ${themeColor?.table_pagination?.table_striped_color};\n  --bs-table-striped-bg: ${themeColor?.table_pagination?.table_striped_bg};\n  --bs-table-hover-color: ${themeColor?.table_pagination?.table_hover_color};\n  --bs-table-hover-bg:${themeColor?.table_pagination?.table_hover_bg};\n  --bs-table-hover-bg:${themeColor?.table_pagination?.columntextcolor};\n\n`;\nreturn (\n  <div className=\"table-responsive\">\n    <Table\n      className={`table table-hover table-striped table-borderless ${props.className}`}\n    >\n      <thead>\n        <tr>\n          {props.columns.map((th) => (\n            <th key={th.title} className=\"col-1\" scope=\"col\">\n              <div>\n                {th.description ? (\n                  <OverlayTrigger\n                    placement={th.position || \"top\"}\n                    overlay={<Tooltip>{th.description}</Tooltip>}\n                  >\n                    <span>{th.title}</span>\n                  </OverlayTrigger>\n                ) : (\n                  <span>{th.title}</span>\n                )}\n              </div>\n            </th>\n          ))}\n        </tr>\n      </thead>\n\n      <tbody>\n        {props.data.length > 0 &&\n          handlePagination()\n            .table.filter((row) =>\n              Object.values(row).some((value) =>\n                value.toString().includes(state.searchValue)\n              )\n            )\n            .map((row, i) => {\n              return (\n                <tr key={row.project}>\n                  {props.columns.map((td) => {\n                    const key = td.key ? row[td.key] : i + 1;\n                    return (\n                      <td\n                        style={{\n                          color:\n                            td.colors ||\n                            themeColor?.table_pagination?.columntextcolor,\n                        }}\n                      >\n                        {td.link === \"yes\" ? (\n                          <a\n                            className=\"d-inline-block\"\n                            target=\"_blank\"\n                            href={`${td.beforehref}${row.project}${td.afterhref}`}\n                            style={{\n                              \"text-decoration\": \"none\",\n                            }}\n                          >\n                            {td.heyperlink === \"yes\" ? (\n                              key\n                            ) : (\n                              <svg\n                                width=\"20\"\n                                height=\"20\"\n                                viewBox=\"0 0 20 20\"\n                                fill=\"none\"\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                              >\n                                <path\n                                  d=\"M12.9167 5.25001L12.9167 1.75001M12.9167 1.75001H9.41674M12.9167 1.75001L7.66675 7M6.50008 1.75H5.21675C4.23666 1.75 3.74661 1.75 3.37226 1.94074C3.04298 2.10852 2.77527 2.37623 2.60749 2.70552C2.41675 3.07986 2.41675 3.56991 2.41675 4.55V9.45C2.41675 10.4301 2.41675 10.9201 2.60749 11.2945C2.77527 11.6238 3.04298 11.8915 3.37226 12.0593C3.74661 12.25 4.23666 12.25 5.21675 12.25H10.1167C11.0968 12.25 11.5869 12.25 11.9612 12.0593C12.2905 11.8915 12.5582 11.6238 12.726 11.2945C12.9167 10.9201 12.9167 10.4301 12.9167 9.45V8.16667\"\n                                  stroke=\"#806ce1\"\n                                  stroke-width=\"2.5\"\n                                  stroke-linecap=\"round\"\n                                  stroke-linejoin=\"round\"\n                                />\n                              </svg>\n                            )}\n                          </a>\n                        ) : (\n                          key\n                        )}\n                      </td>\n                    );\n                  })}\n                </tr>\n              );\n            })}\n      </tbody>\n    </Table>\n    <input\n      type=\"text\"\n      placeholder=\"Search...\"\n      onChange={handleSearch}\n      style={{\n        width: \"20%\",\n        height: \"30px\",\n        borderRadius: \"50px\",\n        \"margin-left\": \"2px\",\n      }}\n    />\n\n    {!props.rowsCount ? (\n      \"\"\n    ) : (\n      <div className=\"py-4\">\n        <div>\n          <ul className=\"pagination pagination-sm gap-2 justify-content-center\">\n            {props.data.length > 0 &&\n              handlePagination().buttons.map((btn, i) => {\n                return (\n                  <li key={i} className=\"page-item\">\n                    <button\n                      onClick={() => State.update({ currentPage: i + 1 })}\n                      className=\"page-link btn\"\n                      style={{\n                        borderColor:\n                          themeColor?.table_pagination?.btn_border ?? \"#000\",\n                        color:\n                          themeColor?.table_pagination?.btn_color ?? \"#000\",\n                        backgroundColor: btn\n                          ? themeColor?.table_pagination?.btn_bg_active ??\n                            \"gray\"\n                          : themeColor?.table_pagination?.btn_bg ??\n                            \"transparent\",\n                      }}\n                    >\n                      {i + 1}\n                    </button>\n                  </li>\n                );\n              })}\n          </ul>\n        </div>\n      </div>\n    )}\n  </div>\n);\n\n// const props = {\n//   data: [],\n//   columns: [\n//     { title: \"id\" }, //if key does not provided , rows will be ascending numbers\n//     { title: \"title\", key: \"key in data\" ,description:\"here is a\",position:\"top/right/buttom/left\",\n//    link: \"yes\",\n//      beforehref: \"https://near.social/mob.near/widget/ProfilePage?accountId=\",\n//      afterhref: \"\",\n//      colors: \"green\"},\n\n//   ],\n//   rowsCount: 2, // if zero or null , the whole table will be render\n//   className: \"table-bordered\",\n//   themeColor: {\n//     table_pagination: {\n//       table_bg: \"rgb(25,33,50)\",\n//       table_color: \"rgb(255,255,255)\",\n//       table_border_color: \"\",\n//       table_accent_bg: \"\",\n//       table_striped_color: \"rgb(255,255,255)\",\n//       table_striped_bg: \"\",\n//       table_hover_color: \"rgb(255,255,255)\",\n//       table_hover_bg: \"\",\n//       btn_border: \"#fff\",\n//       btn_bg: \"rgba(49, 62, 89,0.5)\",\n//       btn_bg_active: \"rgb(25,33,50)\",\n//       btn_color: \"#fff\",\n//       columntextcolor: \"\"\n//     },\n//   },\n// };\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/lord1.near/widget/table-pagination", "fact_widget_deployments_id": "efa56d19a284cb128aaf26f8c7431452", "inserted_timestamp": "2023-09-09T05:17:02.898Z", "modified_timestamp": "2023-09-09T05:17:02.898Z", "__row_index": 22}