{"tx_hash": "FTV9oLqaZ5KFZs9JGY4JhrnjbcuATcW5LAgTmhdxLM7g", "action_id_social": "GuwUy9EwpYvMAv6NoR27h7aFv6Eh76ox4SCGA3qr4kCw-0-widget", "block_id": 108183528, "block_timestamp": "2023-12-17T16:47:52.548Z", "signer_id": "lord1.near", "widget_name": "wrapped-transfer", "source_code": "const APIKEY = \"36f2b87a-7ee6-40d8-80b9-5e68e587a5b5\";\nconst themeColor = props.themeColor;\nconst singer = props.singer;\n\nconst queries = [\n  {\n    id: \"incoming-near\",\n    query: \"incoming-near\",\n  },\n  {\n    id: \"incoming-token\",\n    query: \"incoming-token\",\n  },\n  {\n    id: \"outgoing-near\",\n    query: \"outgoing-near\",\n  },\n  {\n    id: \"outgoing-token\",\n    query: \"outgoing-token\",\n  },\n];\n// --------------------------\n\nState.init({\n  searchedSinger: \"\",\n  result: {},\n  isLoading: false,\n  error: [],\n});\n\n// -----------------------------\n\nconst checkNewSinger = () => {\n  if (state.searchedSinger === singer) {\n    return;\n  } else {\n    State.update({\n      searchedSinger: singer,\n      result: {},\n      isLoading: true,\n      error: [],\n    });\n  }\n};\ncheckNewSinger();\n\n// --------------------------\n\n// handle hashed data #############################\nconst handleHasedData = ({ query, id }) => {\n  if (state.result[\"query\" + id].isDone) return;\n  const result = fetchData(query);\n  if (result.isLoading) {\n    State.update({\n      isLoading: true,\n      result: {\n        ...state.result,\n        [\"query\" + id]: { isLoading: true, error: false, data: null },\n      },\n    });\n  }\n  if (result.error) {\n    const errors = state.error;\n    errors.push(`query (${id}): ${result.error}`);\n    State.update({\n      error: errors,\n      result: {\n        ...state.result,\n        [\"query\" + id]: {\n          isLoading: false,\n          error: true,\n          data: null,\n          isDone: true,\n        },\n      },\n    });\n  }\n  if (result.data) {\n    State.update({\n      result: {\n        ...state.result,\n        [\"query\" + id]: {\n          isLoading: false,\n          error: false,\n          data: result.data,\n          isDone: true,\n        },\n      },\n    });\n  }\n};\nconst fetchData = (query) => {\n  const data = fetch(\n    `https://api.pikespeak.ai/account/${query}/${state.searchedSinger}`,\n    {\n      subscribe: true,\n      headers: {\n        \"x-api-key\": APIKEY,\n      },\n    }\n  );\n  const result = {\n    data: (data && data.body) || null,\n    error: (data && !data.ok && (data.status || data.error)) || null,\n    isLoading: !data && !error,\n  };\n  return result;\n};\n\n// ------------------------------------------------------\nconst isAllDataLoaded = () => {\n  const resultArr = Object.entries(state.result);\n  if (resultArr.length === 0) return false;\n  return resultArr.every((query) => {\n    return !query[1].isLoading;\n  });\n};\n\nif (isAllDataLoaded()) {\n  State.update({ isLoading: false });\n}\n\nif (state.isLoading) {\n  queries.forEach((query) => handleHasedData(query));\n}\n\n// ----------------------------------------------\n\n// error managment #######################\nif (state.error.length > 0) {\n  function hide() {\n    const errors = state.error;\n    errors.shift();\n    if (errors.length > 0) setTimeout(hide, 2500);\n    State.update({ error: errors });\n  }\n  setTimeout(hide, 2500);\n}\n\n// -------------------\n\nconst sentnear = {\n  height: \"90px\",\n  align: \"center\",\n  description: \"\",\n  brand: \"Incoming \",\n  fontsize: \"25px\",\n  fontweight: \"25px\",\n  afterbrand: \"NEAR\",\n  afterbrandcolor: themeColor?.dynamic_header?.afterbrandcolor || \"#789efb\",\n  fontbrand: \" Arial, sans-serif\",\n  color1brand: themeColor?.dynamic_header?.color1brand || \"#000\",\n  color2brand: themeColor?.dynamic_header?.color2brand || \"#806ce1\",\n  colordescription: themeColor?.dynamic_header?.colordescription || \"#806ce1\",\n  fontsubtitle: \" Arial, sans-serif\",\n  background:\n    themeColor?.dynamic_header?.background ||\n    \"radial-gradient(circle, rgba(210,202,250,1) 0%, rgba(230,230,231,0.01) 0%, rgba(235,238,255,1) 100%, rgba(235,231,253,1) 100%, rgba(255,241,241,1) 100%, rgba(46,52,90,1) 100%);\",\n};\nconst recievenear = {\n  height: \"90px\",\n  align: \"center\",\n  description: \"\",\n  brand: \"Outgoing  \",\n  fontsize: \"25px\",\n  fontweight: \"25px\",\n  afterbrand: \"NEAR\",\n  afterbrandcolor: themeColor?.dynamic_header?.afterbrandcolor || \"#789efb\",\n  fontbrand: \" Arial, sans-serif\",\n  color1brand: themeColor?.dynamic_header?.color1brand || \"#000\",\n  color2brand: themeColor?.dynamic_header?.color2brand || \"#806ce1\",\n  colordescription: themeColor?.dynamic_header?.colordescription || \"#806ce1\",\n  fontsubtitle: \" Arial, sans-serif\",\n  background:\n    themeColor?.dynamic_header?.background ||\n    \"radial-gradient(circle, rgba(210,202,250,1) 0%, rgba(230,230,231,0.01) 0%, rgba(235,238,255,1) 100%, rgba(235,231,253,1) 100%, rgba(255,241,241,1) 100%, rgba(46,52,90,1) 100%);\",\n};\nconst senttoken = {\n  height: \"90px\",\n  align: \"center\",\n  description: \"\",\n  brand: \"Outgoing   \",\n  fontsize: \"25px\",\n  fontweight: \"25px\",\n  afterbrand: \"Tokens\",\n  afterbrandcolor: themeColor?.dynamic_header?.afterbrandcolor || \"#789efb\",\n  fontbrand: \" Arial, sans-serif\",\n  color1brand: themeColor?.dynamic_header?.color1brand || \"#000\",\n  color2brand: themeColor?.dynamic_header?.color2brand || \"#806ce1\",\n  colordescription: themeColor?.dynamic_header?.colordescription || \"#806ce1\",\n  fontsubtitle: \" Arial, sans-serif\",\n  background:\n    themeColor?.dynamic_header?.background ||\n    \"radial-gradient(circle, rgba(210,202,250,1) 0%, rgba(230,230,231,0.01) 0%, rgba(235,238,255,1) 100%, rgba(235,231,253,1) 100%, rgba(255,241,241,1) 100%, rgba(46,52,90,1) 100%);\",\n};\nconst recievetoken = {\n  height: \"90px\",\n  align: \"center\",\n  description: \"\",\n  brand: \"Incoming  \",\n  fontsize: \"25px\",\n  fontweight: \"25px\",\n  afterbrand: \"Tokens\",\n  afterbrandcolor: themeColor?.dynamic_header?.afterbrandcolor || \"#789efb\",\n  fontbrand: \" Arial, sans-serif\",\n  color1brand: themeColor?.dynamic_header?.color1brand || \"#000\",\n  color2brand: themeColor?.dynamic_header?.color2brand || \"#806ce1\",\n  colordescription: themeColor?.dynamic_header?.colordescription || \"#806ce1\",\n  fontsubtitle: \" Arial, sans-serif\",\n  background:\n    themeColor?.dynamic_header?.background ||\n    \"radial-gradient(circle, rgba(210,202,250,1) 0%, rgba(230,230,231,0.01) 0%, rgba(235,238,255,1) 100%, rgba(235,231,253,1) 100%, rgba(255,241,241,1) 100%, rgba(46,52,90,1) 100%);\",\n};\n\n// dom sections ##############################################\nconst noData = <div className=\"w-100 py-4 text-center\"> No data available</div>;\n\nconst CardIsLoading = (queryId) =>\n  state.result?.[`query${queryId}`]?.isLoading && (\n    <div\n      className=\"d-flex flex-column gap-1\"\n      style={{\n        padding: \"60px 12px\",\n      }}\n    >\n      <Widget\n        src={`easypoll-v0.ndc-widgets.near/widget/Common.Spinner`}\n        props={{\n          ...spinnerColors,\n        }}\n      />\n      <span\n        style={{\n          fontWeight: \"bold\",\n          fontsize: 15,\n          color: \"#4f46e5\",\n          textAlign: \"center\",\n        }}\n      >\n        Loading...\n      </span>\n    </div>\n  );\nconst CardHasError = (queryId) =>\n  state.result?.[`query${queryId}`]?.error && (\n    <div className=\"d-flex justify-content-center align-items-center h-100 p-4 pb-1\">\n      An error occurred for this section\n    </div>\n  );\n\n// ==============\n\nconst Incoming_near = (\n  <div\n    className=\"my-4 shadow-sm  rounded-4\"\n    style={{ background: themeColor?.sbt_area?.section_bg }}\n  >\n    <Widget src=\"lord1.near/widget/header-dynamic\" props={sentnear} />\n    <div className=\"row w-100 pb-2 px-2 mx-0\">\n      <div\n        style={{ background: themeColor?.sbt_area?.card_bg }}\n        className=\"shadow-sm rounded-2 overflow-auto\"\n      >\n        {CardIsLoading(\"incoming-near\")}\n        {CardHasError(\"incoming-near\")}\n        {state.result[\"query\" + \"incoming-near\"]?.data && (\n          <Widget\n            src=\"lord1.near/widget/table-pagination\"\n            props={{\n              themeColor: { table_pagination: themeColor.table_pagination },\n              data: state.result[\"query\" + \"incoming-near\"]?.data,\n              rowsCount: 5,\n              columns: [\n                { title: \"Sender\", key: \"sender\", colors: \"#806ce1\" },\n                { title: \"Count\", key: \"count\" },\n                { title: \"Amount\", key: \"amount\", round: \"yes\" },\n              ],\n            }}\n          />\n        )}\n      </div>\n    </div>\n  </div>\n);\nconst Incoming_token = (\n  <div\n    className=\"my-4 shadow-sm  rounded-4\"\n    style={{ background: themeColor?.sbt_area?.section_bg }}\n  >\n    <Widget src=\"lord1.near/widget/header-dynamic\" props={recievenear} />\n    <div className=\"row w-100 pb-2 px-2 mx-0\">\n      <div\n        style={{ background: themeColor?.sbt_area?.card_bg }}\n        className=\"shadow-sm rounded-2 overflow-auto\"\n      >\n        {CardIsLoading(\"outgoing-near\")}\n        {CardHasError(\"outgoing-near\")}\n        {state.result[\"query\" + \"outgoing-near\"]?.data && (\n          <Widget\n            src=\"lord1.near/widget/table-pagination\"\n            props={{\n              themeColor: { table_pagination: themeColor.table_pagination },\n              data: state.result[\"query\" + \"outgoing-near\"]?.data,\n              rowsCount: 5,\n              columns: [\n                { title: \"Receiver\", key: \"receiver\", colors: \"#806ce1\" },\n                { title: \"Count\", key: \"count\" },\n                { title: \"Amount\", key: \"amount\", round: \"yes\" },\n              ],\n            }}\n          />\n        )}\n      </div>\n    </div>\n  </div>\n);\nconst Outgoing_near = (\n  <div\n    className=\"my-4 shadow-sm  rounded-4\"\n    style={{ background: themeColor?.sbt_area?.section_bg }}\n  >\n    <Widget src=\"lord1.near/widget/header-dynamic\" props={recievetoken} />\n    <div className=\"row w-100 pb-2 px-2 mx-0\">\n      <div\n        style={{ background: themeColor?.sbt_area?.card_bg }}\n        className=\"shadow-sm rounded-2 overflow-auto\"\n      >\n        {\" \"}\n        {CardIsLoading(\"incoming-token\")}\n        {CardHasError(\"incoming-token\")}\n        {state.result[\"query\" + \"incoming-token\"]?.data && (\n          <Widget\n            src=\"lord1.near/widget/table-pagination\"\n            props={{\n              themeColor: { table_pagination: themeColor.table_pagination },\n              data: state.result[\"query\" + \"incoming-token\"]?.data,\n              rowsCount: 5,\n              columns: [\n                { title: \"Sender\", key: \"sender\", colors: \"#806ce1\" },\n                { title: \"Count\", key: \"count\" },\n                { title: \"Amount\", key: \"amount\", round: \"yes\" },\n                { title: \"Contract\", key: \"contract\" },\n              ],\n            }}\n          />\n        )}\n      </div>\n    </div>\n  </div>\n);\nconst Outgoing_token = (\n  <div\n    className=\"my-4 shadow-sm  rounded-4\"\n    style={{ background: themeColor?.sbt_area?.section_bg }}\n  >\n    <Widget src=\"lord1.near/widget/header-dynamic\" props={senttoken} />\n    <div className=\"row w-100 pb-2 px-2 mx-0\">\n      <div\n        style={{ background: themeColor?.sbt_area?.card_bg }}\n        className=\"shadow-sm rounded-2 overflow-auto\"\n      >\n        {CardIsLoading(\"outgoing-token\")}\n        {CardHasError(\"outgoing-token\")}\n        {state.result[\"query\" + \"outgoing-token\"]?.data && (\n          <Widget\n            src=\"lord1.near/widget/table-pagination\"\n            props={{\n              themeColor: { table_pagination: themeColor.table_pagination },\n              data: state.result[\"query\" + \"outgoing-token\"]?.data,\n              rowsCount: 5,\n              columns: [\n                { title: \"Sender\", key: \"sender\", colors: \"#806ce1\" },\n                { title: \"Count\", key: \"count\" },\n                { title: \"Amount\", key: \"amount\", round: \"yes\" },\n                { title: \"Contract\", key: \"contract\" },\n              ],\n            }}\n          />\n        )}\n      </div>\n    </div>\n  </div>\n);\nreturn (\n  <>\n    <div className=\"toast-container position-fixed bottom-0 end-0 p-3\">\n      {state.error.length > 0 &&\n        state.error.map((er) => (\n          <div\n            className=\"toast show align-items-center text-bg-danger border-0\"\n            role=\"alert\"\n            aria-live=\"assertive\"\n            aria-atomic=\"true\"\n          >\n            <div className=\"d-flex\">\n              <div className=\"toast-body\">{er}</div>\n            </div>\n          </div>\n        ))}\n    </div>\n    <div className=\"row\">\n      <div className=\"col-md-6\">{Incoming_near}</div>\n      <div className=\"col-md-6\">{Incoming_token}</div>\n      <div className=\"col-md-6\">{Outgoing_near}</div>\n      <div className=\"col-md-6\">{Outgoing_token}</div>\n    </div>\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/lord1.near/widget/wrapped-transfer", "fact_widget_deployments_id": "c238c79acebc948e8f65a91624dcea02", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}