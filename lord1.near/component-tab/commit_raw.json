{"tx_hash": "GrNkmnGDXZG6mGEPWM9YBazrQi4Vi8eu7ZSCUZrik1rj", "action_id_social": "79JdWtj5h5PHqv6KMb7YsWXEHwzt3BxC8gB7gBfJRK8v-0-widget", "block_id": 113286979, "block_timestamp": "2024-02-21T12:25:06.155Z", "signer_id": "lord1.near", "widget_name": "component-tab", "source_code": "const hash = \"fe16224c-e176-4479-a40f-2e720e1b8cdf\";\r\nconst columnNamesFinall = [\r\n  \"Transactions\",\r\n  \"Components\",\r\n  \"History (day)\",\r\n  \"Stars Received\",\r\n];\r\n\r\nconst columnImg = {\r\n  nomination:\r\n    \"https://raw.githubusercontent.com/lordking1234/blockchain-icon/main/chart-line-solid.svg\",\r\n  transactions:\r\n    \"https://raw.githubusercontent.com/lordking1234/blockchain-icon/main/heart-solid.svg\",\r\n  fee: \"https://raw.githubusercontent.com/lordking1234/blockchain-icon/main/house.svg\",\r\n  active_users:\r\n    \"https://raw.githubusercontent.com/lordking1234/blockchain-icon/main/file-contract-solid.svg\",\r\n};\r\nState.init({\r\n  searchedSinger: \"\",\r\n  data: [],\r\n  isLoading: true,\r\n  error: [],\r\n});\r\nconst checkNewSinger = () => {\r\n  if (state.searchedSinger === props.singer) {\r\n    return;\r\n  } else {\r\n    State.update({ searchedSinger: props.singer, isLoading: true });\r\n  }\r\n};\r\ncheckNewSinger();\r\nconst handleData = () => {\r\n  const result = fetchData(hash);\r\n  if (result.isLoading) {\r\n    State.update({ isLoading: true, data: [] });\r\n  }\r\n  if (result.error) {\r\n    const errors = state.error;\r\n    errors.push(`error message is : \"${result.error}\"`);\r\n    State.update({ error: errors, isLoading: false });\r\n  }\r\n  if (result.data) {\r\n    const signerData = result.data.find(\r\n      ({ singer }) => singer === state.searchedSinger\r\n    );\r\n    State.update({ data: signerData ? [signerData] : [], isLoading: false });\r\n  }\r\n};\r\nconst fetchData = (hash) => {\r\n  const data = fetch(\r\n    `https://api.flipsidecrypto.com/api/v2/queries/${hash}/data/latest`,\r\n    {\r\n      subscribe: true,\r\n      method: \"GET\",\r\n      headers: {\r\n        Accept: \"*/*\",\r\n      },\r\n    }\r\n  );\r\n  const result = {\r\n    data: (data && data.body) || null,\r\n    error: (data && !data.ok && (data.status || data.error)) || null,\r\n    isLoading: !data && !error,\r\n  };\r\n  return result;\r\n};\r\nif (state.isLoading) {\r\n  handleData();\r\n}\r\nif (state.error.length > 0) {\r\n  function hide() {\r\n    const errors = state.error;\r\n    errors.shift();\r\n    if (errors.length > 0) setTimeout(hide, 2500);\r\n    State.update({ error: errors });\r\n  }\r\n  setTimeout(hide, 2500);\r\n}\r\n\r\nconst formatNumber = (num) => {\r\n  if (num >= 1000000000) {\r\n    return (num / 1000000000).toFixed(2).replace(/\\.0$/, \"\") + \"b\";\r\n  }\r\n  if (num >= 1000000) {\r\n    return (num / 1000000).toFixed(2).replace(/\\.0$/, \"\") + \"m\";\r\n  }\r\n  if (num >= 1000) {\r\n    return (num / 1000).toFixed(2).replace(/\\.0$/, \"\") + \"k\";\r\n  }\r\n  return num;\r\n};\r\n\r\nconst noData = <div className=\"w-100 py-4 text-center\">No data available</div>;\r\n\r\nconst ParentDiv = styled.div`\r\ncolor:${props.textColor};\r\nflex-basis:23%;\r\npadding:1rem;\r\nmin-height:150px;\r\nmax-height:300px;\r\nbackground:${props.backgroundColor};\r\nborder-radius:25px;\r\ntransition:0.3s all;\r\nbox-shadow: \"0px 0px 10px -1px  #806ce1\";\r\n&:hover{\r\n  transform:scale(1.1);\r\n  opacity:0.9\r\n}\r\n\r\n@media only screen and (max-width: 770px) {\r\n flex-basis:50%\r\n}\r\n>p{font-size:15px}\r\n`;\r\nconst onHandelDate = (inputDate) => {\r\n  let date = new Date(inputDate);\r\n  let monthNames = [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\",\r\n  ];\r\n  let day = date.getDate();\r\n  let month = monthNames[date.getMonth()];\r\n  let year = date.getFullYear();\r\n  let createdAt;\r\n  createdAt = day + \"th \" + month + \" \" + year;\r\n  return createdAt;\r\n};\r\n\r\nreturn (\r\n  <div className=\"d-flex flex-wrap justify-content-around gap-1\">\r\n    <div className=\"toast-container position-fixed bottom-0 end-0 p-3\">\r\n      {state.error.length > 0 &&\r\n        state.error.map((er) => (\r\n          <div\r\n            className=\"toast show align-items-center text-bg-danger border-0\"\r\n            role=\"alert\"\r\n            aria-live=\"assertive\"\r\n            aria-atomic=\"true\"\r\n          >\r\n            <div className=\"d-flex\">\r\n              <div className=\"toast-body\">{er}</div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n    </div>\r\n    {state.data.length > 0 ? (\r\n      <>\r\n        <ParentDiv>\r\n          <OverlayTrigger\r\n            key=\"top\"\r\n            overlay={\r\n              <Tooltip>\r\n                <div>\r\n                  Transactions: Total transactions of a developer (Build +\r\n                  Update + both) related to widget development\r\n                </div>\r\n                <div>\r\n                  Build Transactions: The number of transactions resulting in\r\n                  component builds\r\n                </div>\r\n                <div>\r\n                  Update Transactions: The number of transactions resulting in\r\n                  component updates\r\n                </div>\r\n                <div>\r\n                  Your Rank: Developer rank based on the number of transactions\r\n                  (the lower the better)\r\n                </div>\r\n              </Tooltip>\r\n            }\r\n          >\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexWrap: \"nowrap\",\r\n              }}\r\n            >\r\n              <img\r\n                style={{ marginRight: \"10px\" }}\r\n                width={20}\r\n                src={columnImg.nomination}\r\n              />\r\n              <h5 style={{ color: props.headerColor }}>\r\n                {columnNamesFinall[0]}\r\n              </h5>\r\n            </div>\r\n          </OverlayTrigger>\r\n          <h4 style={{ color: props.numberColor }}>\r\n            {formatNumber(state.data[0].total_trxs)}\r\n          </h4>\r\n          <Widget\r\n            src={\"rubycop.near/widget/NDC.StyledComponents\"}\r\n            props={{ Tag: { title: \"\", className: props.dark } }}\r\n          />\r\n\r\n          <p>\r\n            <div>\r\n              Build | Update Trxs:\r\n              <span style={{ color: props.numberintextColor }}>\r\n                {formatNumber(state.data[0].build_trxs)}\r\n              </span>\r\n              |\r\n              <span style={{ color: props.numberintextColor }}>\r\n                {formatNumber(state.data[0].update_trxs)}\r\n              </span>\r\n            </div>\r\n            <div>\r\n              Forks:\r\n              <span style={{ color: props.numberintextColor }}>\r\n                {formatNumber(state.data[0].fork_of)}\r\n              </span>\r\n            </div>\r\n            <Widget\r\n              src={\"rubycop.near/widget/NDC.StyledComponents\"}\r\n              props={{ Tag: { title: \"\", className: props.dark } }}\r\n            />\r\n            Your Rank \ud83d\udc49\r\n            <span style={{ color: props.numberintextColor }}>\r\n              {formatNumber(state.data[0].trx_rank)}\r\n            </span>\r\n          </p>\r\n        </ParentDiv>\r\n        <ParentDiv>\r\n          <OverlayTrigger\r\n            key=\"top\"\r\n            overlay={\r\n              <Tooltip>\r\n                <div>Components: Total widgets created by a developer</div>\r\n                <div>\r\n                  Active or Not: An active developer is equivalent to having a\r\n                  widget rank of less than 50{\" \"}\r\n                </div>\r\n                <div>\r\n                  Deposits: Deposited volume in Near token for BOS development\r\n                  to social.near contract\r\n                </div>\r\n                <div>\r\n                  Your Rank: Developer rank based on the number of widgets (the\r\n                  lower the better)\r\n                </div>\r\n              </Tooltip>\r\n            }\r\n          >\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexWrap: \"nowrap\",\r\n              }}\r\n            >\r\n              <img\r\n                style={{ marginRight: \"10px\" }}\r\n                width={20}\r\n                src={columnImg.fee}\r\n              />\r\n              <h6 style={{ color: props.headerColor }}>\r\n                {columnNamesFinall[1]}\r\n              </h6>\r\n            </div>\r\n          </OverlayTrigger>\r\n\r\n          <h4 style={{ color: props.numberColor }}>\r\n            {formatNumber(state.data[0].widget)}\r\n          </h4>\r\n          <Widget\r\n            src={\"rubycop.near/widget/NDC.StyledComponents\"}\r\n            props={{ Tag: { title: \"\", className: props.dark } }}\r\n          />\r\n          <p>\r\n            <div>\r\n              Active dev or not ?:\r\n              <span style={{ color: props.numberintextColor }}>\r\n                {formatNumber(state.data[0].active_or_not)}\r\n              </span>\r\n            </div>\r\n            <div>\r\n              Deposits :\r\n              <span style={{ color: props.numberintextColor }}>\r\n                {formatNumber(state.data[0].deposit)}\r\n              </span>\r\n            </div>\r\n            <Widget\r\n              src={\"rubycop.near/widget/NDC.StyledComponents\"}\r\n              props={{ Tag: { title: \"\", className: props.dark } }}\r\n            />\r\n            Your Rank \ud83d\udc49\r\n            <span style={{ color: props.numberintextColor }}>\r\n              {formatNumber(state.data[0].widget_rank)}\r\n            </span>\r\n          </p>\r\n        </ParentDiv>\r\n        <ParentDiv>\r\n          <OverlayTrigger\r\n            key=\"top\"\r\n            overlay={\r\n              <Tooltip>\r\n                When did you first start your development activity, how many\r\n                days have you been active, and what is your rank based on your\r\n                dev history\r\n              </Tooltip>\r\n            }\r\n          >\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexWrap: \"nowrap\",\r\n              }}\r\n            >\r\n              <img\r\n                style={{ marginRight: \"10px\" }}\r\n                width={20}\r\n                src={columnImg.active_users}\r\n              />\r\n              <h6 style={{ color: props.headerColor }}>\r\n                {columnNamesFinall[2]}\r\n              </h6>\r\n            </div>\r\n          </OverlayTrigger>\r\n\r\n          <h4 style={{ color: props.numberColor }}>\r\n            {formatNumber(state.data[0].days)}\r\n          </h4>\r\n          <Widget\r\n            src={\"rubycop.near/widget/NDC.StyledComponents\"}\r\n            props={{ Tag: { title: \"\", className: props.dark } }}\r\n          />\r\n          <p>\r\n            <div>\r\n              Active Since:\r\n              <span style={{ color: props.numberintextColor }}>\r\n                {onHandelDate(state.data[0].min_date)}\r\n              </span>\r\n            </div>\r\n            <div>\r\n              Active Days:\r\n              <span style={{ color: props.numberintextColor }}>\r\n                {formatNumber(state.data[0].active_date)}\r\n              </span>\r\n            </div>\r\n            <Widget\r\n              src={\"rubycop.near/widget/NDC.StyledComponents\"}\r\n              props={{ Tag: { title: \"\", className: props.dark } }}\r\n            />\r\n            Your Rank \ud83d\udc49\r\n            <span style={{ color: props.numberintextColor }}>\r\n              {formatNumber(state.data[0].days_rank)}\r\n            </span>\r\n          </p>\r\n        </ParentDiv>\r\n        <ParentDiv>\r\n          <OverlayTrigger\r\n            key=\"top\"\r\n            overlay={\r\n              <Tooltip>Number of stars received or sent in total</Tooltip>\r\n            }\r\n          >\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexWrap: \"nowrap\",\r\n              }}\r\n            >\r\n              <img\r\n                style={{ marginRight: \"10px\" }}\r\n                width={20}\r\n                src={columnImg.transactions}\r\n              />\r\n              <h6 style={{ color: props.headerColor }}>\r\n                {columnNamesFinall[3]}\r\n              </h6>\r\n            </div>\r\n          </OverlayTrigger>\r\n\r\n          <h4 style={{ color: props.numberColor }}>\r\n            {formatNumber(state.data[0].stars_received)}\r\n          </h4>\r\n          <Widget\r\n            src={\"rubycop.near/widget/NDC.StyledComponents\"}\r\n            props={{ Tag: { title: \"\", className: props.dark } }}\r\n          />\r\n          <p>\r\n            <div>\r\n              Star Received:\r\n              <span style={{ color: props.numberintextColor }}>\r\n                {formatNumber(state.data[0].stars_received)}\r\n              </span>\r\n            </div>\r\n            <div>\r\n              Star Sent:\r\n              <span style={{ color: props.numberintextColor }}>\r\n                {formatNumber(state.data[0].stars_sent)}\r\n              </span>\r\n            </div>\r\n            <Widget\r\n              src={\"rubycop.near/widget/NDC.StyledComponents\"}\r\n              props={{ Tag: { title: \"\", className: props.dark } }}\r\n            />\r\n            Your Rank \ud83d\udc49\r\n            <span style={{ color: props.numberintextColor }}>\r\n              {formatNumber(state.data[0].stars_received_rank)}\r\n            </span>\r\n          </p>\r\n        </ParentDiv>\r\n      </>\r\n    ) : (\r\n      noData\r\n    )}\r\n  </div>\r\n);\r\n//{\r\n//  \"backgroundColor\": \"#d2cafa\",\r\n//  \"textColor\": \"#806ce1\",\r\n//  \"headerColor\": \"#806ce1\",\r\n//  \"numberColor\": \"#fff\",\r\n//  \"numberintextColor\": \"#fff\",\r\n//  \"dark\": \"dark\" or \"\"\r\n//}\r\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/lord1.near/widget/component-tab", "fact_widget_deployments_id": "899d5df35068f740480eb9b214f41f64", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}