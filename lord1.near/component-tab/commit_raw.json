{"tx_hash": "EfSK6U6rA2qk9PZM7gQk5HT3ujbypdQn6Sq4Kyz8XGyz", "action_id_social": "JCW8x1fQNGLVJJWECCWf2eHiLNNi9QVSfrqnwREK66bi-0-widget", "block_id": 106363259, "block_timestamp": "2023-11-23T15:18:22.089Z", "signer_id": "lord1.near", "widget_name": "component-tab", "source_code": "State.init({\r\n  data: [],\r\n  columnNamesFinall: [\r\n    \"Transactions\",\r\n    \"Components\",\r\n    \"History (day)\",\r\n    \"Stars Received\",\r\n  ],\r\n  columnImg: {\r\n    nomination:\r\n      \"https://raw.githubusercontent.com/lordking1234/blockchain-icon/main/chart-line-solid.svg\",\r\n    transactions:\r\n      \"https://raw.githubusercontent.com/lordking1234/blockchain-icon/main/heart-solid.svg\",\r\n    fee: \"https://raw.githubusercontent.com/lordking1234/blockchain-icon/main/house.svg\",\r\n    active_users:\r\n      \"https://raw.githubusercontent.com/lordking1234/blockchain-icon/main/file-contract-solid.svg\",\r\n  },\r\n});\r\nconst data = fetch(\r\n  \"https://api.flipsidecrypto.com/api/v2/queries/fe16224c-e176-4479-a40f-2e720e1b8cdf/data/latest\"\r\n);\r\nState.update({ data: data.body });\r\nconst formatNumber = (num) => {\r\n  if (num >= 1000000000) {\r\n    return (num / 1000000000).toFixed(2).replace(/\\.0$/, \"\") + \"b\";\r\n  }\r\n  if (num >= 1000000) {\r\n    return (num / 1000000).toFixed(2).replace(/\\.0$/, \"\") + \"m\";\r\n  }\r\n  if (num >= 1000) {\r\n    return (num / 1000).toFixed(2).replace(/\\.0$/, \"\") + \"k\";\r\n  }\r\n  return num;\r\n};\r\nconsole.log(state.data);\r\nconst ParentDiv = styled.div`\r\ncolor:${props.textColor};\r\nwidth:30%;\r\npadding:1rem;\r\nmargin-right:1rem;\r\nmin-height:150px;\r\nmax-height:300px;\r\nbackground:${props.backgroundColor};\r\nborder-radius:25px;\r\ntransition:1s all;\r\nbox-shadow: \"0px 0px 10px -1px  #806ce1\";\r\n&:hover{\r\n  transform:scale(1.1)\r\n}\r\n\r\n@media only screen and (max-width: 1000px) {\r\n  \r\n width:40%\r\n  \r\n}\r\n@media only screen and (max-width: 770px) {\r\nx{\r\n  color: rgb(245, 245, 245);\r\n}\r\n width:50%\r\n  \r\n}\r\n>p{font-size:15px}\r\n`;\r\nconst onHandelDate = (inputDate) => {\r\n  let date = new Date(inputDate);\r\n  let monthNames = [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\",\r\n  ];\r\n  let day = date.getDate();\r\n  let month = monthNames[date.getMonth()];\r\n  let year = date.getFullYear();\r\n  let createdAt;\r\n  createdAt = day + \"th \" + month + \" \" + year;\r\n  return createdAt;\r\n};\r\n\r\nreturn (\r\n  <div style={{ display: \"flex\" }}>\r\n    <ParentDiv>\r\n      <OverlayTrigger\r\n        key=\"top\"\r\n        overlay={\r\n          <Tooltip>\r\n            Total number of transactions that include both build and update\r\n            transactions, and your rank in terms of the number of dev\r\n            transactions among other developers\r\n          </Tooltip>\r\n        }\r\n      >\r\n        <div style={{ display: \"flex\", flexWrap: \"nowrap\" }}>\r\n          <img\r\n            style={{ marginRight: \"10px\" }}\r\n            width={20}\r\n            src={state.columnImg.nomination}\r\n          />\r\n          <h5 style={{ color: props.headerColor }}>\r\n            {state.columnNamesFinall[0]}\r\n          </h5>\r\n        </div>\r\n      </OverlayTrigger>\r\n      <h4 style={{ color: props.numberColor }}>\r\n        {formatNumber(state.data[0].total_trxs)}\r\n      </h4>\r\n      <Widget\r\n        src={\"rubycop.near/widget/NDC.StyledComponents\"}\r\n        props={{ Tag: { title: \"\", className: props.dark } }}\r\n      />\r\n\r\n      <p style={{ color: props.textColor }}>\r\n        <div>\r\n          Build Transactions:{\" \"}\r\n          <span style={{ color: props.numberintextColor }}>\r\n            {formatNumber(state.data[0].build_trxs)}\r\n          </span>{\" \"}\r\n        </div>\r\n        <div>\r\n          Update Transactions:{\" \"}\r\n          <span style={{ color: props.numberintextColor }}>\r\n            {formatNumber(state.data[0].update_trxs)}\r\n          </span>{\" \"}\r\n        </div>\r\n        <Widget\r\n          src={\"rubycop.near/widget/NDC.StyledComponents\"}\r\n          props={{ Tag: { title: \"\", className: props.dark } }}\r\n        />\r\n        Your Rank \ud83d\udc49\r\n        <span style={{ color: props.numberintextColor }}>\r\n          {formatNumber(state.data[0].widget_rank)}\r\n        </span>\r\n      </p>\r\n    </ParentDiv>\r\n    <ParentDiv onClick={res}>\r\n      <OverlayTrigger\r\n        key=\"top\"\r\n        overlay={\r\n          <Tooltip>\r\n            How many components have you developed, what is your rank based on\r\n            the number of components, and are you considered an active developer\r\n            (among the top 50 most active)\r\n          </Tooltip>\r\n        }\r\n      >\r\n        <div style={{ display: \"flex\", flexWrap: \"nowrap\" }}>\r\n          <img\r\n            style={{ marginRight: \"10px\" }}\r\n            width={20}\r\n            src={state.columnImg.fee}\r\n          />\r\n          <h6 style={{ color: props.headerColor }}>\r\n            {state.columnNamesFinall[1]}\r\n          </h6>\r\n        </div>\r\n      </OverlayTrigger>\r\n\r\n      <h4 style={{ color: props.numberColor }}>\r\n        {formatNumber(state.data[0].widget)}\r\n      </h4>\r\n      <Widget\r\n        src={\"rubycop.near/widget/NDC.StyledComponents\"}\r\n        props={{ Tag: { title: \"\", className: props.dark } }}\r\n      />\r\n      <p style={{ color: props.textColor }}>\r\n        <div>\r\n          Total Components:{\" \"}\r\n          <span style={{ color: props.numberintextColor }}>\r\n            {formatNumber(state.data[0].widget)}\r\n          </span>{\" \"}\r\n        </div>\r\n        <div>\r\n          Active dev or not :{\" \"}\r\n          <span style={{ color: props.numberintextColor }}>\r\n            {formatNumber(state.data[0].active_or_not)}\r\n          </span>{\" \"}\r\n        </div>\r\n        <Widget\r\n          src={\"rubycop.near/widget/NDC.StyledComponents\"}\r\n          props={{ Tag: { title: \"\", className: props.dark } }}\r\n        />\r\n        Your Rank \ud83d\udc49\r\n        <span style={{ color: props.numberintextColor }}>\r\n          {formatNumber(state.data[0].widget_rank)}\r\n        </span>\r\n      </p>\r\n    </ParentDiv>\r\n    <ParentDiv>\r\n      <OverlayTrigger\r\n        key=\"top\"\r\n        overlay={\r\n          <Tooltip>\r\n            When did you first start your development activity, how many days\r\n            have you been active, and what is your rank based on your dev\r\n            history\r\n          </Tooltip>\r\n        }\r\n      >\r\n        <div style={{ display: \"flex\", flexWrap: \"nowrap\" }}>\r\n          <img\r\n            style={{ marginRight: \"10px\" }}\r\n            width={20}\r\n            src={state.columnImg.active_users}\r\n          />\r\n          <h6 style={{ color: props.headerColor }}>\r\n            {state.columnNamesFinall[2]}\r\n          </h6>\r\n        </div>\r\n      </OverlayTrigger>\r\n\r\n      <h4 style={{ color: props.numberColor }}>\r\n        {formatNumber(state.data[0].days)}\r\n      </h4>\r\n      <Widget\r\n        src={\"rubycop.near/widget/NDC.StyledComponents\"}\r\n        props={{ Tag: { title: \"\", className: props.dark } }}\r\n      />\r\n      <p style={{ color: props.textColor }}>\r\n        <div>\r\n          Active Since:{\" \"}\r\n          <span style={{ color: props.numberintextColor }}>\r\n            {onHandelDate(state.data[0].min_date)}\r\n          </span>{\" \"}\r\n        </div>\r\n        <div>\r\n          Active Days:{\" \"}\r\n          <span style={{ color: props.numberintextColor }}>\r\n            {formatNumber(state.data[0].active_date)}\r\n          </span>{\" \"}\r\n        </div>\r\n        <Widget\r\n          src={\"rubycop.near/widget/NDC.StyledComponents\"}\r\n          props={{ Tag: { title: \"\", className: props.dark } }}\r\n        />\r\n        Your Rank \ud83d\udc49\r\n        <span style={{ color: props.numberintextColor }}>\r\n          {formatNumber(state.data[0].days_rank)}\r\n        </span>\r\n      </p>\r\n    </ParentDiv>{\" \"}\r\n    <ParentDiv>\r\n      <OverlayTrigger\r\n        key=\"top\"\r\n        overlay={<Tooltip>Number of stars received or sent in total</Tooltip>}\r\n      >\r\n        <div style={{ display: \"flex\", flexWrap: \"nowrap\" }}>\r\n          <img\r\n            style={{ marginRight: \"10px\" }}\r\n            width={20}\r\n            src={state.columnImg.transactions}\r\n          />\r\n          <h6 style={{ color: props.headerColor }}>\r\n            {state.columnNamesFinall[3]}\r\n          </h6>\r\n        </div>{\" \"}\r\n      </OverlayTrigger>\r\n\r\n      <h4 style={{ color: props.numberColor }}>\r\n        {formatNumber(state.data[0].stars_received)}\r\n      </h4>\r\n      <Widget\r\n        src={\"rubycop.near/widget/NDC.StyledComponents\"}\r\n        props={{ Tag: { title: \"\", className: props.dark } }}\r\n      />\r\n      <p style={{ color: props.textColor }}>\r\n        <div>\r\n          Star Received:{\" \"}\r\n          <span style={{ color: props.numberintextColor }}>\r\n            {formatNumber(state.data[0].stars_received)}\r\n          </span>{\" \"}\r\n        </div>\r\n        <div>\r\n          Star Sent:\r\n          <span style={{ color: props.numberintextColor }}>\r\n            {formatNumber(state.data[0].stars_sent)}\r\n          </span>{\" \"}\r\n        </div>\r\n        <Widget\r\n          src={\"rubycop.near/widget/NDC.StyledComponents\"}\r\n          props={{ Tag: { title: \"\", className: props.dark } }}\r\n        />\r\n        Your Rank \ud83d\udc49\r\n        <span style={{ color: props.numberintextColor }}>\r\n          {formatNumber(state.data[0].stars_received_rank)}\r\n        </span>\r\n      </p>\r\n    </ParentDiv>\r\n  </div>\r\n);\r\n//{\r\n//  \"backgroundColor\": \"#d2cafa\",\r\n//  \"textColor\": \"#806ce1\",\r\n//  \"headerColor\": \"#806ce1\",\r\n//  \"numberColor\": \"#fff\",\r\n//  \"numberintextColor\": \"#fff\",\r\n//  \"dark\": \"dark\" or \"\"\r\n//}\r\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/lord1.near/widget/component-tab", "fact_widget_deployments_id": "016d923f7a5959ee1a47095bdfa68087", "inserted_timestamp": "2023-11-23T17:21:53.444Z", "modified_timestamp": "2023-11-23T17:21:53.444Z", "__row_index": 0}