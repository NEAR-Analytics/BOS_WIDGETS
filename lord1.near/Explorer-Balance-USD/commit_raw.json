{"tx_hash": "14MfawdTQtu9BTqcHXAyT2hNLYkGHWZ5QUTbii9xakgN", "action_id_social": "DKRP6WDGDzGMivXgrGvCs6d2CBhaHrj6M157o4FwdHUC-0-widget", "block_id": 107309835, "block_timestamp": "2023-12-06T21:24:03.554Z", "signer_id": "lord1.near", "widget_name": "Explorer-Balance-USD", "source_code": "const themeColor = props.themeColor;\r\nconst balances = props.balances; // expected to be in Pikespeak.ai balances API format\r\nconst showTable = props.showTable ?? true;\r\n\r\nif (!balances) {\r\n  const baseApi = \"https://api.pikespeak.ai\";\r\n  const publicApiKey = \"36f2b87a-7ee6-40d8-80b9-5e68e587a5b5\";\r\n  const fetchApiConfig = {\r\n    mode: \"cors\",\r\n    headers: {\r\n      \"x-api-key\": publicApiKey,\r\n    },\r\n  };\r\n  const res = fetch(\r\n    `${baseApi}/account/balances?accounts=${[\r\n      props.accountId ?? context.accountId ?? \"bobo.near\",\r\n    ]}`,\r\n    fetchApiConfig\r\n  );\r\n  if (!res.body) {\r\n    return \"Loading...\";\r\n  }\r\n  balances = res.body;\r\n}\r\n\r\n// Parsing the data to the format expected by the chart\r\nconst balanceData = balances.balancesTotal.map((balance) => balance.usdPrice);\r\nconst balanceLabels = balances.balancesTotal.map((balance) => balance.contract);\r\n\r\n// format to small characters like 200k, 200m, 200b...\r\nconst formatNumber = (num) => {\r\n  if (num >= 1000000000) {\r\n    return (num / 1000000000).toFixed(1).replace(/\\.0$/, \"\") + \"b\";\r\n  }\r\n  if (num >= 1000000) {\r\n    return (num / 1000000).toFixed(1).replace(/\\.0$/, \"\") + \"m\";\r\n  }\r\n  if (num >= 1000) {\r\n    return (num / 1000).toFixed(1).replace(/\\.0$/, \"\") + \"k\";\r\n  }\r\n  return num;\r\n};\r\n\r\nconst totalUsd = formatNumber(balances.totalUsd);\r\n//-----------------------------------------------------------------------------------------------------\r\nconst general_theme = {\r\n  height: \"110px\",\r\n  align: \"center\",\r\n  description: \"Total Balances (USD)\",\r\n  brand: `${totalUsd}`,\r\n  fontsize: \"100\",\r\n  fontweight: \"25px\",\r\n  afterbrand: \"\",\r\n  afterbrandcolor: themeColor?.dynamic_header?.afterbrandcolor || \"#789efb\",\r\n  fontbrand: \" Arial, sans-serif\",\r\n  color1brand: themeColor?.dynamic_header?.color1brand || \"#000\",\r\n  color2brand: themeColor?.dynamic_header?.color2brand || \"#806ce1\",\r\n  colordescription: themeColor?.dynamic_header?.colordescription || \"#806ce1\",\r\n  fontsubtitle: \" Arial, sans-serif\",\r\n  background:\r\n    themeColor?.dynamic_header?.background ||\r\n    \"radial-gradient(circle, rgba(210,202,250,1) 0%, rgba(230,230,231,0.01) 0%, rgba(235,238,255,1) 100%, rgba(235,231,253,1) 100%, rgba(255,241,241,1) 100%, rgba(46,52,90,1) 100%);\",\r\n};\r\n//-----------------------------------------------------------------------------------------------------\r\nreturn (\r\n  <div>\r\n    <div className=\"row\">\r\n      <div className=\"col-4\">\r\n        <Widget src=\"lord1.near/widget/header-dynamic\" props={general_theme} />\r\n      </div>\r\n    </div>\r\n    <Widget\r\n      src=\"lord1.near/widget/table-pagination\"\r\n      props={{\r\n        themeColor: { table_pagination: themeColor.table_pagination },\r\n        data: balances.balancesTotal,\r\n        columns: [\r\n          { title: \"Symbol\", key: \"symbol\", colors: \"#806ce1\" },\r\n          { title: \"Contract\", key: \"contract\" },\r\n          { title: \"USD Price \", key: \"usdPrice\", colors: \"#806ce1\" },\r\n          { title: \"Amount\", key: \"amount\" },\r\n        ],\r\n        rowsCount: 10,\r\n      }}\r\n    />\r\n  </div>\r\n);\r\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/lord1.near/widget/Explorer-Balance-USD", "fact_widget_deployments_id": "54e2a1e758657988f101689f2041c810", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}