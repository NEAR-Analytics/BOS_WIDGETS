{"tx_hash": "8ZGu1pq3xyTDEm7DLLXNekKEufjaMipmgJPmpnAP14gs", "action_id_social": "DavtHJN2wxFtvJPgVdYTHG73FyT1a1giUKyF3TMwDxD-0-widget", "block_id": 97112525, "block_timestamp": "2023-07-23T02:25:25.668Z", "signer_id": "knwtechs.near", "widget_name": "Integration.subscribe", "source_code": "const factoryAddress = \"0x0aBeC91137108C54bdfA2B909E0EC529ECd99429\";\n\n// PROPS\nif (!props.collectionAddress)\n  return (\n    <Widget\n      src={\"knwtechs.near/widget/Common.error\"}\n      props={{ message: \"`collectionAddress` undefined.\" }}\n    />\n  );\nconst tier = Big(props.tier ?? 0).toString();\nconst style = props.style ?? {\n  backgroundColor: \"blue\",\n  fontWeight: 500,\n  minWidth: \"10vw\",\n};\n\nState.init({\n  loading: false,\n});\n\n// CHECK FOR WALLET CONNECTION\nif (state.sender === undefined) {\n  const accounts = Ethers.send(\"eth_requestAccounts\", []);\n  if (accounts.length) {\n    State.update({ sender: accounts[0] });\n  } else {\n    return (\n      <Widget\n        src={\"knwtechs.near/widget/Common.error\"}\n        props={{ message: \"Please login first.\" }}\n      />\n    );\n  }\n}\n\n// CONTRACT INSTANCE\nconst factoryABI = fetch(\n  \"https://raw.githubusercontent.com/knwtechs/subscript.io-contracts/main/artifacts/contracts/SubscriptionsFactory.sol/SubscriptionsFactory.json\"\n);\nif (!factoryABI.ok) {\n  return \"Contract unavailable.\";\n}\n\nconst collectionABI = fetch(\n  \"https://raw.githubusercontent.com/knwtechs/subscript.io-contracts/main/artifacts/contracts/SubscriptionsCollection.sol/SubscriptionsCollection.json\"\n);\nif (!collectionABI.ok) {\n  return \"Contract unavailable.\";\n}\n\nconst subscriptionsFactoryContract = new ethers.Contract(\n  factoryAddress,\n  JSON.parse(factoryABI.body)[\"abi\"],\n  Ethers.provider().getSigner()\n);\nconst subscriptionsCollectionContract = new ethers.Contract(\n  props.collectionAddress,\n  JSON.parse(collectionABI.body)[\"abi\"],\n  Ethers.provider().getSigner()\n);\n\nsubscriptionsCollectionContract\n  .getTierPrice(tier)\n  .then((price) => State.update({ price: price.toString() }));\n\nconst subscribe = () => {\n  console.log({\n    to: state.sender,\n    tier,\n    price: state.price,\n  });\n\n  try {\n    State.update({ loading: true });\n    subscriptionsFactoryContract\n      .subscribe(props.collectionAddress, state.sender, tier, {\n        value: state.price,\n      })\n      .catch((err) => {\n        State.update({ loading: false });\n        console.log(err);\n      })\n      .then((tx) => {\n        console.log(\"Waiting for confirmation: \", tx);\n        tx.wait().then((receipt) => {\n          console.log(\"TX Confirmed: \", receipt);\n          State.update({ loading: false });\n        });\n      });\n  } catch (err) {\n    State.update({ loading: false });\n    console.log(err);\n  }\n};\n\nreturn (\n  <>\n    <button\n      style={style}\n      onClick={subscribe}\n      id={props.id ?? \"subscribeButton\"}\n    >\n      {state.loading ? (\n        <div class=\"spinner-border text-light\" role=\"status\"></div>\n      ) : (\n        \"Subscribe\"\n      )}\n    </button>\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/knwtechs.near/widget/Integration.subscribe", "fact_widget_deployments_id": "6374bc696c05bb350af5cf02bf2ffdb8", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}