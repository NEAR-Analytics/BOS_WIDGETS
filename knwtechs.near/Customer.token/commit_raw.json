{"tx_hash": "HBQwLVD5LsavawtFessqyBXPvSGbBdT9JEkkHhhR41fE", "action_id_social": "Er9vF5fwPUkpTSVx5nnrK1eGdUq7tMreXRqoqo445A5V-0-widget", "block_id": 97114511, "block_timestamp": "2023-07-23T03:02:15.454Z", "signer_id": "knwtechs.near", "widget_name": "Customer.token", "source_code": "const USER = \"knwtechs.near\";\n\nif (!props.collectionAddress || !props.abi || !props.owner)\n  return (\n    <Widget\n      src={`${USER}/widget/Common.error`}\n      props={{ message: \"Missing data\" }}\n    />\n  );\n\nconst tier = props.tier ?? 0;\n\nState.init({\n  name: \"\",\n  image: \"\",\n  amount: 0,\n  price: 0,\n  deadline: 0,\n  totalPaid: 0,\n});\n\nconst iface = new ethers.utils.Interface(props.abi);\n\nconst timestampToDateTime = (timestampInSeconds) => {\n  const timestampInMillis = timestampInSeconds * 1000;\n  const date = new Date(timestampInMillis);\n  return date.toLocaleString();\n};\n\nconst getCollectionName = () => {\n  const encodedData = iface.encodeFunctionData(\"collectionName\", []);\n\n  return Ethers.provider()\n    .call({\n      to: props.collectionAddress,\n      data: encodedData,\n    })\n    .then((n) => {\n      const name = iface.decodeFunctionResult(\"collectionName\", n)[0];\n      State.update({ name: name });\n    });\n};\n\nconst getCollectionImage = () => {\n  try {\n    const encodedData = iface.encodeFunctionData(\"uri\", [0]);\n\n    return Ethers.provider()\n      .call({\n        to: props.collectionAddress,\n        data: encodedData,\n      })\n      .then((url) => {\n        const uri = iface.decodeFunctionResult(\"uri\", url);\n        const real_uri = uri[0].slice(0, uri[0].length - 1);\n        const metas = fetch(real_uri);\n        if (metas.ok) {\n          const jsonmeta = JSON.parse(metas.body);\n          State.update({ image: jsonmeta[\"image\"] });\n        }\n      });\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nconst getPrice = () => {\n  const encodedData = iface.encodeFunctionData(\"getTierPrice\", [tier]);\n\n  return Ethers.provider()\n    .call({\n      to: props.collectionAddress,\n      data: encodedData,\n    })\n    .then((p) => {\n      const price = iface.decodeFunctionResult(\"getTierPrice\", p);\n      const _price = Big(price.toString()).div(Big(10).pow(18)).toString();\n      State.update({ price: _price });\n    });\n};\n\nconst getAmount = () => {\n  const encodedData = iface.encodeFunctionData(\"balanceOf\", [\n    props.owner,\n    tier,\n  ]);\n\n  return Ethers.provider()\n    .call({\n      to: props.collectionAddress,\n      data: encodedData,\n    })\n    .then((amt) => {\n      const amount = iface.decodeFunctionResult(\"balanceOf\", amt);\n      State.update({ amount: amount.toString() });\n    });\n};\n\nconst getDeadline = () => {\n  const encodedData = iface.encodeFunctionData(\"getSubscriptionDeadline\", [\n    tier,\n    props.owner,\n  ]);\n\n  return Ethers.provider()\n    .call({\n      to: props.collectionAddress,\n      data: encodedData,\n    })\n    .then((ts) => {\n      const dl = iface.decodeFunctionResult(\"getSubscriptionDeadline\", ts);\n      const deadline = timestampToDateTime(dl.toString());\n      State.update({ deadline: deadline });\n    });\n};\n\nconst getTotalEarnings = () => {\n  const tierValue = 0;\n  const tierHex = \"0x\" + tierValue.toString(16).padStart(64, \"0\");\n  const filter = {\n    address: props.collectionAddress,\n    topics: [\n      ethers.utils.id(\"SubscriptionUpdate(uint256,address,uint256)\"),\n      tierHex,\n      ethers.utils.hexZeroPad(ethers.utils.getAddress(props.owner), 32),\n    ],\n    fromBlock: 0,\n    toBlock: \"latest\",\n  };\n  Ethers.provider()\n    .getLogs(filter)\n    .then((logs) => {\n      const tot = state.price * logs.length;\n      State.update({ totalPaid: tot });\n    })\n    .catch((err) => console.log(err));\n};\n\nconst fetchData = () => {\n  getCollectionName();\n  getCollectionImage();\n  getPrice();\n  getAmount();\n  getDeadline();\n  getTotalEarnings();\n};\n\nfetchData();\n\nreturn (\n  <div class=\"card bg-light mb-3 d-flex w-100\">\n    <div class=\"card-header text-center\">\n      <img src={state.image} class=\"img-fluid\" />\n    </div>\n    <div class=\"card-body\">\n      <h5 class=\"card-title text-center\">{state.name}</h5>\n    </div>\n    <ul class=\"list-group list-group-flush\">\n      <li class=\"list-group-item\">\n        <i>Amount</i>: {state.amount}\n      </li>\n      <li class=\"list-group-item\">\n        <i>Price</i>: {state.price} \u039e\n      </li>\n      <li class=\"list-group-item\">\n        <i>Total paid</i>: {state.totalPaid} \u039e\n      </li>\n      <li class=\"list-group-item\">\n        <i>Next billing</i>: {state.deadline}\n      </li>\n    </ul>\n    <div class=\"card-body text-center\">\n      <Widget\n        src={`${USER}/widget/Integration.renew`}\n        props={{ collectionAddress: props.collectionAddress }}\n      />\n    </div>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/knwtechs.near/widget/Customer.token", "fact_widget_deployments_id": "15785874828d42681701b3a4ac7fd986", "inserted_timestamp": "2000-01-01T00:00:00.000Z", "modified_timestamp": "2000-01-01T00:00:00.000Z", "__row_index": 1}