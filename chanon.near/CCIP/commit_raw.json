{"tx_hash": "5yFKbAW9e5YWSkQy9pGrzpabzxV525DUDwnSctyttQbt", "action_id_social": "EfieZn2S94dZQB8DQFeY6pgqyHP25nDuJrMEhDQV5VK5-0-widget", "block_id": 107810512, "block_timestamp": "2023-12-13T03:34:26.019Z", "signer_id": "chanon.near", "widget_name": "CCIP", "source_code": "initState({\n  toggleAmount: false,\n  txHash: \"\",\n  tokenDecimals: 18,\n  fromTokenAmount: 0,\n  status: 0,\n});\n\nconst signer = Ethers.send(\"eth_requestAccounts\", [])[0]; // current wallet\n\nif (state.error) {\n  return (\n    <div>\n      Dear user, we regret to inform you that we have received an error callback\n      from the API. Our team is currently investigating the issue and working on\n      resolving it as soon as possible. We apologize for any inconvenience this\n      may have caused and thank you for your patience while we work to address\n      the problem.\n    </div>\n  );\n}\n\nif (!signer) {\n  return (\n    <div>\n      <h3>Please connect your wallet</h3>\n      <Web3Connect />\n    </div>\n  );\n}\n\nif (\n  state.chainId === undefined &&\n  ethers !== undefined &&\n  Ethers.send(\"eth_requestAccounts\", [])[0]\n) {\n  Ethers.provider()\n    .getNetwork()\n    .then((chainIdData) => {\n      if (chainIdData?.chainId) {\n        State.update({ chainId: chainIdData.chainId });\n      }\n    });\n}\n\n// Support Only Avalance Fuji (Testnet) & Sepolia Ethereum (Testnet)\nif (\n  state.chainId !== 43113 &&\n  state.chainId !== 11155111 &&\n  state.chainId !== 10\n) {\n  return (\n    <div>\n      <h3>\n        Wrong Network - We currently support the Avalance Fuji (Testnet) and\n        Sepolia (Testnet) exclusively. Kindly confirm that you are connected to\n        the intended network before proceeding.\n      </h3>\n    </div>\n  );\n}\n\nconst oneInchAbi = fetch(\n  \"https://gist.githubusercontent.com/miguelmota/2759896a63d2e528bee86b2f8bb67e3b/raw/789317fa43d1bf346b4ef0b17b61c59db84486c7/ERC721.json\"\n);\nif (!oneInchAbi.ok) {\n  return \"1inch not ok\";\n}\n\nconst ccipSender = fetch(\n  \"https://gist.githubusercontent.com/taforyou/810058bb7c7fc277f3e56a23a8534658/raw/efe0059806f3b6906704896a385a8eecbb9abd87/CCIPSender.abi.json\"\n);\nif (!ccipSender.ok) {\n  return \"ccipSender not ok\";\n}\n\nasync function queryBalanceOf() {\n  try {\n    const contractAddress = \"0x51E5426eDE4e2d4c2586371372313B5782387222\"; // Apetimisim\n    const oneInch = new ethers.Contract(\n      contractAddress,\n      oneInchAbi.body,\n      Ethers.provider().getSigner()\n    );\n    oneInch.balanceOf(signer).then((x) => {\n      console.log(\"result :=> x \", x); // My own wallet got 4 - 0x04\n    });\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function mintToken() {\n  try {\n    const contractAddress = \"0xd0FD63f94811d9Fd8f147f22bd94AbF21c1d0445\"; // Avalance Fuji sender\n    const ccip = new ethers.Contract(\n      contractAddress,\n      ccipSender.body,\n      Ethers.provider().getSigner()\n    );\n    // Ethers.provider()\n    //   .getFeeData()\n    //   .then((x) => {\n    //     console.log(\"fee Data :\", x);\n    //   });\n    // Ethers.provider()\n    //   .getGasPrice()\n    //   .then((x) => {\n    //     console.log(\"x \", x);\n    //   });\n    // Ethers.provider().getGasPrice()\n    // const gasLimit = ethers.utils.hexlify(1000000); // Example gas limit\n    // const gasPrice = ethers.utils.parseUnits(\"10\", \"gwei\"); // Example gas price\n    ccip\n      // .mintNFT({\n      //   gasPrice: \"0x59682f00\",\n      //   maxFeePerGas: \"0x0bfda3a300\",\n      //   maxPriorityFeePerGas: \"0x59682f00\",\n      // })\n      .mintNFT()\n      // .mintNFT({ gasPrice: \"0x59682f00\" })\n      // .mintNFT({ gasLimit: \"0x826299e00\" })\n      .then((x) => {\n        console.log(\"result :=> x \", x); // My own wallet got 4 - 0x04\n      });\n    // ccip.owner().then((x) => {\n    //   console.log(\"result :=> x \", x); // My own wallet got 4 - 0x04\n    // });\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nreturn (\n  <div>\n    <button class=\"btn btn-success\" onClick={queryBalanceOf} disabled={false}>\n      QueryBalance of\n    </button>\n    <button class=\"btn btn-success\" onClick={mintToken} disabled={false}>\n      Mint\n    </button>\n  </div>\n);\n", "metadata": {"image": {"ipfs_cid": "bafkreie5dynz7bsyuc4niaxopdlcnlaqvx3dhkg2otlyhbz7kh4b3vzxwe"}, "linktree": {"website": "x.com/KillSwitch_Defi/status/1725841436774699513?s=20"}, "tags": {"ccip": ""}}, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/chanon.near/widget/CCIP", "fact_widget_deployments_id": "00f7be7f825edcb6acd4429b9a7d78ac", "inserted_timestamp": "2023-12-13T05:49:48.193Z", "modified_timestamp": "2023-12-20T03:22:11.422Z", "__row_index": 0}