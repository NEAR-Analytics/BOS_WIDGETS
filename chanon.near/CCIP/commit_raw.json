{"tx_hash": "6ED7ZhWyJH3dzaqtLwRHVPn44sfA3Ye4ednKg7BxuacV", "action_id_social": "3Qc49omAfiye6er4bRdpvFYQH3nirSt1XnGAueftYGcF-0-widget", "block_id": 107907609, "block_timestamp": "2023-12-14T07:50:52.656Z", "signer_id": "chanon.near", "widget_name": "CCIP", "source_code": "initState({\n  viewNft: false,\n  mintNft: false,\n  img: null,\n  name: null,\n});\n\nconst signer = Ethers.send(\"eth_requestAccounts\", [])[0]; // current wallet\n\nif (state.error) {\n  return (\n    <div>\n      Dear user, we regret to inform you that we have received an error callback\n      from the API. Our team is currently investigating the issue and working on\n      resolving it as soon as possible. We apologize for any inconvenience this\n      may have caused and thank you for your patience while we work to address\n      the problem.\n    </div>\n  );\n}\n\nif (!signer) {\n  return (\n    <div>\n      <h3>Please connect your wallet</h3>\n      <Web3Connect />\n    </div>\n  );\n}\n\nif (\n  state.chainId === undefined &&\n  ethers !== undefined &&\n  Ethers.send(\"eth_requestAccounts\", [])[0]\n) {\n  Ethers.provider()\n    .getNetwork()\n    .then((chainIdData) => {\n      if (chainIdData?.chainId) {\n        State.update({ chainId: chainIdData.chainId });\n        if (state.chainId == 43113) {\n          State.update({ viewNft: true });\n        }\n        if (state.chainId == 11155111) {\n          State.update({ mintNft: true });\n        }\n      }\n    });\n}\n\n// Support Only Avalance Fuji (Testnet) & Sepolia Ethereum (Testnet)\nif (state.chainId !== 43113 && state.chainId !== 11155111) {\n  return (\n    <div>\n      <h3>\n        Wrong Network - We currently support the Avalance Fuji (Testnet) and\n        Sepolia (Testnet) exclusively. Kindly confirm that you are connected to\n        the intended network before proceeding.\n      </h3>\n    </div>\n  );\n}\n\nconst nftAbi = fetch(\n  \"https://gist.githubusercontent.com/hoanganhlam/0fef79860e992cf3cabf7e8b8fb11ccf/raw/8175a9d95c6bb19e76c33b21c6131f1d45d1bc86/ABI-ERC721.json\"\n);\nif (!nftAbi.ok) {\n  return \"nft not ok\";\n}\n\nconst ccipSender = fetch(\n  \"https://gist.githubusercontent.com/taforyou/810058bb7c7fc277f3e56a23a8534658/raw/efe0059806f3b6906704896a385a8eecbb9abd87/CCIPSender.abi.json\"\n);\nif (!ccipSender.ok) {\n  return \"ccipSender not ok\";\n}\n\nasync function queryBalanceOf() {\n  try {\n    const contractAddress = \"0xBF3d94450104487c25C2BEe4CA7E40eDD7caC73D\"; // NFT Contract Address on Ethereum Sepolia\n    const nftContract = new ethers.Contract(\n      contractAddress,\n      nftAbi.body,\n      Ethers.provider().getSigner()\n    );\n    nftContract.balanceOf(signer).then((x) => {\n      if (x._hex !== \"0x00\") {\n        console.log(\"This wallet has some NFT\"); // Hack\n        nftContract.tokenURI(0).then((y) => {\n          asyncFetch(y).then((response) => {\n            // should check 200\n            State.update({\n              name: response.body.name,\n              img: response.body.image,\n            });\n            console.log(\"name\", response.body.name); // Hack\n            console.log(\"img\", response.body.image); // Hack\n          });\n        });\n      } else {\n        console.log(\"This wallet has no NFT\");\n      }\n    });\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function mintToken() {\n  try {\n    const contractAddress = \"0xd0FD63f94811d9Fd8f147f22bd94AbF21c1d0445\"; // Avalance Fuji sender\n    const ccip = new ethers.Contract(\n      contractAddress,\n      ccipSender.body,\n      Ethers.provider().getSigner()\n    );\n    ccip.mintNFT().then((x) => {\n      console.log(\"result :=> x \", x); // My own wallet got 4 - 0x04\n    });\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nreturn (\n  <div>\n    <button\n      class=\"btn btn-success\"\n      onClick={queryBalanceOf}\n      disabled={state.viewNft}\n    >\n      View NFT (Ethereum Sepolia)\n    </button>\n    <button\n      class=\"btn btn-success\"\n      onClick={mintToken}\n      disabled={state.mintNft}\n    >\n      Mint (Avalance Fuji)\n    </button>\n    <div className=\"mt-2\">\n      // Should display nft owned by current wallet\n      <h3>{state.name}</h3>\n      <img src={`${state.img}`} />\n    </div>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/chanon.near/widget/CCIP", "fact_widget_deployments_id": "43947ac15998b2a566ed0e5188b42f89", "inserted_timestamp": "2023-12-14T09:52:48.873Z", "modified_timestamp": "2023-12-20T03:22:11.422Z", "__row_index": 2}