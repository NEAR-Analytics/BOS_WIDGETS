{"tx_hash": "6hZFPF9hDovBLn8aiCiYA6aFzAQru1EAitnaZ8hjgFwB", "action_id_social": "7LLV4ajWvKnT1PA22iZvehxz3eTGYV3m48g6H41H8ZYL-0-widget", "block_id": 105306357, "block_timestamp": "2023-11-09T16:35:55.412Z", "signer_id": "leinss.near", "widget_name": "CalimochoOverview", "source_code": "State.init({\n  isConnected: false,\n  account: null,\n\n  isNewContract: false,\n\n  documentCid: \"\",\n  isUploading: false,\n  expiration: \"\",\n  quorum: 0,\n  participants: [],\n\n  documents: [],\n})\n\nfunction switchNetwork() {\n  try {\n    Ethers.send(\"wallet_switchEthereumChain\", [\n      { chainId: getAllowedNetwork().hex },\n    ]).then((data) => {\n      State.update({ isConnected: true })\n    })\n  } catch (err) {}\n}\n\nfunction getAllowedNetwork() {\n  return 11155111\n}\n\nif (!state.account) {\n  const accounts = Ethers.send(\"eth_requestAccounts\", [])\n  if (accounts.length) {\n    State.update({ account: accounts[0] })\n    console.log(\"account\", state.account)\n    let provider = Ethers.provider()\n    if (!!provider) {\n      provider.getNetwork().then((network) => {\n        if (network.chainId != getAllowedNetwork()) {\n          State.update({ isConnected: false })\n          switchNetwork()\n        } else {\n          State.update({ isConnected: true })\n        }\n      })\n    }\n  }\n}\n\nconst abi = `[ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"_documentCid\", \"type\": \"string\" }, { \"internalType\": \"uint8\", \"name\": \"_vote\", \"type\": \"uint8\" } ], \"name\": \"addVote\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"currentDocumentId\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"name\": \"docCidToVoting\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"documentId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"documentName\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"string\", \"name\": \"documentCid\", \"type\": \"string\" }, { \"internalType\": \"uint64\", \"name\": \"expiration\", \"type\": \"uint64\" }, { \"internalType\": \"uint256\", \"name\": \"quorum\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"name\": \"docIdToCid\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getAllDocuments\", \"outputs\": [ { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"documentId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"documentName\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"string\", \"name\": \"documentCid\", \"type\": \"string\" }, { \"internalType\": \"address[]\", \"name\": \"participants\", \"type\": \"address[]\" }, { \"internalType\": \"uint64\", \"name\": \"expiration\", \"type\": \"uint64\" }, { \"internalType\": \"uint256\", \"name\": \"quorum\", \"type\": \"uint256\" }, { \"internalType\": \"uint8[]\", \"name\": \"currentVotes\", \"type\": \"uint8[]\" } ], \"internalType\": \"struct Calimocho.DocumentVoting[]\", \"name\": \"\", \"type\": \"tuple[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"_owner\", \"type\": \"address\" } ], \"name\": \"getOwnerDocuments\", \"outputs\": [ { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"documentId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"documentName\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"string\", \"name\": \"documentCid\", \"type\": \"string\" }, { \"internalType\": \"address[]\", \"name\": \"participants\", \"type\": \"address[]\" }, { \"internalType\": \"uint64\", \"name\": \"expiration\", \"type\": \"uint64\" }, { \"internalType\": \"uint256\", \"name\": \"quorum\", \"type\": \"uint256\" }, { \"internalType\": \"uint8[]\", \"name\": \"currentVotes\", \"type\": \"uint8[]\" } ], \"internalType\": \"struct Calimocho.DocumentVoting[]\", \"name\": \"\", \"type\": \"tuple[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"name\": \"ownerToVotings\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"documentId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"documentName\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"string\", \"name\": \"documentCid\", \"type\": \"string\" }, { \"internalType\": \"uint64\", \"name\": \"expiration\", \"type\": \"uint64\" }, { \"internalType\": \"uint256\", \"name\": \"quorum\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"_documentName\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"_documentCid\", \"type\": \"string\" }, { \"internalType\": \"address[]\", \"name\": \"_participants\", \"type\": \"address[]\" }, { \"internalType\": \"uint64\", \"name\": \"_expiration\", \"type\": \"uint64\" }, { \"internalType\": \"uint256\", \"name\": \"_quorum\", \"type\": \"uint256\" } ], \"name\": \"registerDocument\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]`\n\nconst contract = new ethers.Contract(\n  \"0x142918CA2E8a74d92cfD40276a48FE817D928c4F\",\n  abi,\n  Ethers.provider()\n)\n\nfunction getAllDocuments() {\n  contract\n    .getAllDocuments()\n    .then((docs) => {\n      console.log(\"Docs: \", docs)\n      State.update({ documents: docs })\n    })\n    .catch((e) => {\n      console.log(\"Something went wrong fetching the docs: \", e.message)\n    })\n}\ngetAllDocuments()\n\nconst ProjectContainer = styled.div`\n  width: 800px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding-inline: 8px;\n  color: #0095b6;\n  border-style: solid;\n\n  .cali-btn-primary {\n    background-color: #0095b6;\n    color: white;\n    border: none;\n  }\n`\nconst Button = styled.div`\n  height: 60px;\n  width: 100%;\n  display: flex;\n  justify-content: end;\n  align-items: center;\n  gap: 12px;\n  font-weight: 500;\n\n  a {\n    color: #0095b6;\n    font-size: 16px;\n  }\n`\n\nfunction onNewContract() {\n  console.log(\"onNewContract\")\n  State.update({ isNewContract: !state.isNewContract })\n}\n\nfunction onVoteFor(doc) {\n  console.log(\"onVoteFor\", doc)\n}\n\nfunction onAbstain(doc) {\n  console.log(\"onVoteFor\", doc)\n}\n\n// Login Check\n// const loggedIn = !!context.accountId;\nconst loggedIn = state.account\n\nconst Main = ({ doc }) => {\n  const [\n    documentId,\n    documentName,\n    owner,\n    documentCid,\n    participants,\n    expiration,\n    quorum,\n    currentVotes,\n  ] = doc\n  console.log(documentCid)\n  const expirationDate = Date(expiration * 1000)\n\n  return (\n    <ProjectContainer key={documentCid} className=\"m-2 p-4\">\n      <div className=\"row\">\n        <div ClassName=\"center\">\n          <h4 style={{ fontWeight: 1000 }}>Calimocho</h4>\n          <h5 style={{ fontWeight: 200 }}>contract sign</h5>\n        </div>\n        <div>\n          <div class=\"p-4\">\n            <div className=\"mt-1\">\n              Document Name:\n              <input disabled value={documentName} />\n            </div>\n            <div className=\"mt-1\">\n              DocumentCid:\n              <a href={`https://ipfs.io/ipfs/${documentCid}`} target=\"_blank\">\n                {documentCid}\n              </a>\n            </div>\n            <div className=\"mt-1\">\n              Owner:\n              <input disabled value={owner} />\n            </div>\n            <div className=\"mt-1\">\n              Expiration:\n              <input disabled value={expirationDate.toString()} />\n            </div>\n            <div className=\"mt-1\">\n              Participants:\n              <input disabled value={participants.join(\", \")} />\n            </div>\n            <div className=\"mt-1\">\n              Quorum:\n              <input disabled value={quorum} />\n            </div>\n            <div>\n              Current Votes:\n              <input disabled value={currentVotes} />\n            </div>\n          </div>\n\n          <div className=\"\">\n            <Button\n              onClick={() => onAbstain(doc)}\n              className=\"p-2\"\n              style={{\n                backgroundColor: \"#f7a3b0\",\n                color: \"#FFF\",\n                height: 40,\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                paddingInline: 24,\n                border: \"2px solid black\",\n              }}\n            >\n              Abstain\n            </Button>\n\n            <Button\n              onClick={() => onVoteFor(doc)}\n              className=\"p-2 mt-2\"\n              style={{\n                backgroundColor: \"#83c77f\",\n                color: \"#FFF\",\n                height: 40,\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                paddingInline: 24,\n                border: \"2px solid black\",\n              }}\n            >\n              Vote for\n            </Button>\n          </div>\n        </div>\n      </div>\n    </ProjectContainer>\n  )\n}\n\nreturn (\n  <div>\n    {state.isConnected ? (\n      state.isNewContract ? (\n        <>\n          <Button\n            onClick={onNewContract}\n            className=\"p-2\"\n            style={{\n              backgroundColor: \"#83c77f\",\n              color: \"#FFF\",\n              height: 40,\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              paddingInline: 24,\n              border: \"2px solid black\",\n              width: \"fit-content\",\n            }}\n          >\n            Go Back\n          </Button>\n          <Widget src=\"leinss.near/widget/NewQuorum\" />\n        </>\n      ) : (\n        <>\n          <div className=\"\">\n            <Button\n              onClick={onNewContract}\n              className=\"p-2\"\n              style={{\n                backgroundColor: \"#83c77f\",\n                color: \"#FFF\",\n                height: 40,\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                paddingInline: 24,\n                border: \"2px solid black\",\n                width: \"fit-content\",\n              }}\n            >\n              New Contract\n            </Button>\n          </div>\n\n          <h6\n            className=\"text-center p-2 pb-4\"\n            style={{ fontWeight: 600, fontSize: 25, color: \"#0095b6\" }}\n          >\n            YOUR CONTRACTS\n          </h6>\n          {state.documents.map((doc) => {\n            return <Main doc={doc} />\n          })}\n        </>\n      )\n    ) : (\n      <Web3Connect\n        className=\"swap-button-enabled swap-button-text p-2\"\n        connectLabel=\"Connect with wallet\"\n      />\n    )}\n  </div>\n)\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/leinss.near/widget/CalimochoOverview", "fact_widget_deployments_id": "fc1d779c1afd80d93639e0e4521ebcfb", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}