{"tx_hash": "HNAzM13UoDTuC6ykJMM2U7iAStzAKjcqSutD8JNHB57z", "action_id_social": "Bnsq4M53C6zX7D9dPbAafjpKn2epgWKKmWtUXk7bKMRi-0-widget", "block_id": 121026616, "block_timestamp": "2024-06-12T20:19:46.001Z", "signer_id": "nearweekapp.near", "widget_name": "nw-newswire", "source_code": "const accountId = \"near\";\r\nState.init({ page: 1 });\r\nlet mediumPosts = [];\r\n\r\nconst data = fetch(\r\n  `https://nearweek.com/api/nw-newswire?populate=deep&sort=createdAt:desc&pagination[pageSize]=${\r\n    state.page * 11\r\n  }`,\r\n  {\r\n    //subscribe: true,\r\n    method: \"GET\",\r\n    headers: {\r\n      Accept: \"*/*\",\r\n      Authorization:\r\n        \"Bearer 15699f0723aa9fe9f655b1a94e450552476c08807f67b525b5a3c8011eecc8aee6d45923443620f17815b897858be058cd7bd89ddf23a28aabaecb178e7ebc55d380293beeb51a8ce87b40e1518ce4708e4d51a06b115f27fa64ab5cbee5a3511cec785d7ae6a155ecd05ac8196aadae3e9b8e9401b8df8d8b69904f7364f925\",\r\n    },\r\n  }\r\n);\r\n\r\nconst Wrapper = styled.div`\r\n  display: grid;\r\n  margin-bottom: 0px;\r\n  gap: 2px;\r\n`;\r\n\r\nconst H2 = styled.h2`\r\n    color: #1C1F41;\r\n    font-size: 24px;\r\n    font-style: normal;\r\n    font-weight: 500;\r\n    line-height: 15px;\r\n    margin-bottom: 15px;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: grid;\r\n  margin: 0px 0 15px 0;\r\n  gap: 10px;\r\n  width: 100%;`;\r\n\r\nconst Card = styled.a`\r\n    position: relative;\r\n    width: 100%;\r\n    border-radius: 12px;\r\n    background: #fff;\r\n    border: 1px solid #eceef0;\r\n    overflow: hidden;\r\n    padding:12px;\r\n    display:flex !important;\r\n    flex-direction: column;\r\n    gap:10px;\r\n    text-decoration: none !important;\r\n  `;\r\n\r\nconst CardHeader = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  height: 28px;\r\n  width: 100%;\r\n`;\r\n\r\nconst CardUser = styled.div`\r\n& span{\r\n    color: rgba(28, 31, 65, 0.45);\r\n    text-align: right;\r\n    font-size: 12px;\r\n    font-style: normal;\r\n    font-weight: 500;\r\n    line-height: 8.5px;\r\n}\r\n`;\r\n\r\nconst TwitterBage = styled.div`\r\n    height: 28px;\r\n    width: 28px;\r\n    background-color: #000;\r\n    border-radius: 50%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    /* Align the badge to the far right */\r\n    margin-left: auto;\r\n`;\r\n\r\nconst CardContent = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    margin-top: 0;\r\n    flex: 1;\r\n`;\r\n\r\nconst CardTitle = styled.div`\r\n    height:54px;\r\n    overflow: hidden;\r\n    color: #1C1F41;\r\n    text-overflow: ellipsis;\r\n    whitespace: nowrap;\r\n    font-size: 12px;\r\n    font-style: normal;\r\n    font-weight: 500;\r\n    line-height: 18px;\r\n    letter-spacing: 0.12px;\r\n    a {\r\n        color: inherit;\r\n    }\r\n`;\r\n\r\nconst CardFooter = styled.div`\r\n    display: flex;\r\n    justify-content: left;\r\n    align-items: center;\r\n    height:20px;\r\n`;\r\n\r\nconst CardDate = styled.div`\r\n    color: rgba(28, 31, 65, 0.45);\r\n    font-size: 12px;\r\n    font-style: normal;\r\n    font-weight: 500;\r\n    line-height: 8.5px;\r\n    text-align: left;\r\n    \r\n`;\r\n\r\nconst Badges = styled.div`\r\n    display: flex;\r\n    gap: 6px;\r\n`;\r\n\r\nconst Badge = styled.span`\r\n    background: #F5F5F5;\r\n    padding: 6px 20px;\r\n    border-color: hsla(214, 10%, 86%, 1);\r\n    border-radius: 4px;\r\n    color: #9C9C9C;\r\n    text-align: center;\r\n    font-size: 12px;\r\n    font-style: normal;\r\n    font-weight: 500;\r\n    line-height: 8.5px;\r\n    display: ${(props) => (props.index > 1 ? \"none\" : \"block\")}; \r\n`;\r\n\r\nconst ButtonLink = styled.a`\r\n   width: 180px;\r\n  padding: 8px;\r\n  height: 31px;\r\n  background: transparent;\r\n  margin: 4px auto 0 auto;\r\n  border: 1px solid #d7dbdf;\r\n  border-radius: 100px;\r\n  font-weight: 500;\r\n  font-size: 12px;\r\n  line-height: 22px;\r\n  letter-spacing: -0.03em;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n  cursor: pointer;\r\n  white-space: nowrap;\r\n  color: hsla(204, 22%, 9%, 1);\r\n  &:hover,\r\n  &:focus {\r\n    text-decoration: none;\r\n    outline: none;\r\n    }\r\n`;\r\nconst AuthorNDate = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: baseline;\r\n    gap:4px;\r\n    margin-bottom:10px;\r\n  `;\r\n\r\nconst Dot = styled.span`\r\n  color: rgba(28, 31, 65, 0.45);\r\n  text-align: right;\r\n  font-size: 12px;\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  line-height: 8.5px; /* 70.833% */\r\n  letter-spacing: 0.12px;\r\n    `;\r\nconst news = [...(data?.body?.data ?? [])]\r\n  .sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt))\r\n  .slice(0, limit);\r\nconst nwSite = \"https://nearweek.com\";\r\n\r\nfunction dateToDays(date) {\r\n  const timeAgo = (diffSec) =>\r\n    diffSec < 60000\r\n      ? `${(diffSec / 1000) | 0}s`\r\n      : diffSec < 3600000\r\n      ? `${(diffSec / 60000) | 0}min`\r\n      : diffSec < 86400000\r\n      ? `${(diffSec / 3600000) | 0}hr`\r\n      : `${(diffSec / 86400000) | 0}d`;\r\n\r\n  var d = new Date(date);\r\n  return timeAgo(Date.now() - d.getTime());\r\n}\r\n\r\nfunction extractUsernameFromURL(url) {\r\n  let username = \"\";\r\n\r\n  const xcomIndex = url.indexOf(\"x.com/\");\r\n  if (xcomIndex !== -1) {\r\n    const afterXcom = url.substring(xcomIndex + 6); // Extract the part after \"x.com/\"\r\n    const nextSlashIndex = afterXcom.indexOf(\"/\");\r\n    if (nextSlashIndex !== -1) {\r\n      username = afterXcom.substring(0, nextSlashIndex);\r\n    } else {\r\n      username = afterXcom;\r\n    }\r\n  }\r\n\r\n  if (!username) {\r\n    const twitterIndex = url.indexOf(\"twitter.com/\");\r\n    if (twitterIndex !== -1) {\r\n      const afterTwitter = url.substring(twitterIndex + 12); // Extract the part after \"twitter.com/\"\r\n      const nextSlashIndex = afterTwitter.indexOf(\"/\");\r\n      if (nextSlashIndex !== -1) {\r\n        username = afterTwitter.substring(0, nextSlashIndex);\r\n      } else {\r\n        username = afterTwitter;\r\n      }\r\n    }\r\n  }\r\n\r\n  if (!username) {\r\n    const mediumIndex = url.indexOf(\"medium.com/\");\r\n    if (mediumIndex !== -1) {\r\n      const afterMedium = url.substring(mediumIndex + 11);\r\n      const nextSlashIndex = afterMedium.indexOf(\"/\");\r\n      if (nextSlashIndex !== -1) {\r\n        username = afterMedium.substring(0, nextSlashIndex);\r\n      } else {\r\n        username = afterMedium;\r\n      }\r\n    }\r\n  }\r\n\r\n  // if near.org usr = NEAR\r\n  if (!username && url.includes(\"near.org\")) {\r\n    username = \"NEAR\";\r\n  }\r\n\r\n  return username;\r\n}\r\n\r\nfunction NewswireCard() {\r\n  return (\r\n    <div>\r\n      {news && news.length > 0 ? (\r\n        <Wrapper>\r\n          <H2>NEWSWIRE</H2>\r\n          <Content>\r\n            {news.map((item, index) => (\r\n              <Card index={index} href={item.url} target=\"_blank\">\r\n                <div class=\"d-flex flex-grow-1\">\r\n                  <CardContent>\r\n                    <CardHeader>\r\n                      <AuthorNDate>\r\n                        {item.url && (\r\n                          <CardUser>\r\n                            <span>@{extractUsernameFromURL(item.url)} </span>\r\n                          </CardUser>\r\n                        )}\r\n                        <Dot>\u00b7</Dot>\r\n                        <CardDate>\r\n                          {item.createdAt\r\n                            ? `${dateToDays(item.createdAt)}`\r\n                            : \"\"}\r\n                        </CardDate>\r\n                      </AuthorNDate>\r\n                      <TwitterBage>\r\n                        <svg\r\n                          width=\"15\"\r\n                          height=\"14\"\r\n                          viewBox=\"0 0 15 14\"\r\n                          fill=\"none\"\r\n                          xmlns=\"http://www.w3.org/2000/svg\"\r\n                        >\r\n                          <g clip-path=\"url(#clip0_37_8004)\">\r\n                            <path\r\n                              d=\"M0.573242 0.0361328L5.97827 7.2081L0.539062 13.0367H1.76322L6.52544 7.93279L10.3743 13.037H14.5391L8.82957 5.46291L13.8925 0.0361328H12.6684L8.28269 4.73594L4.73889 0.0361328H0.573242ZM2.37358 0.930954H4.28737L12.7379 12.1419H10.8246L2.37358 0.930954Z\"\r\n                              fill=\"white\"\r\n                            />\r\n                          </g>\r\n                          <defs>\r\n                            <clipPath id=\"clip0_37_8004\">\r\n                              <rect\r\n                                width=\"14\"\r\n                                height=\"13\"\r\n                                fill=\"white\"\r\n                                transform=\"translate(0.539062 0.0361328)\"\r\n                              />\r\n                            </clipPath>\r\n                          </defs>\r\n                        </svg>\r\n                      </TwitterBage>\r\n                    </CardHeader>\r\n\r\n                    <CardTitle>\r\n                      <a\r\n                        href={item.url}\r\n                        target=\"_blank\"\r\n                        rel=\"noreferrer noopener\"\r\n                      >\r\n                        {item.title}\r\n                      </a>\r\n                    </CardTitle>\r\n                    <CardFooter>\r\n                      <Badges>\r\n                        {item.categories.length > 0 &&\r\n                          item.categories.map((category) => (\r\n                            <Badge>{category}</Badge>\r\n                          ))}\r\n                      </Badges>\r\n                    </CardFooter>\r\n                  </CardContent>\r\n                </div>\r\n              </Card>\r\n            ))}\r\n          </Content>\r\n        </Wrapper>\r\n      ) : (\r\n        <div>Loading ...</div>\r\n      )}\r\n      <ButtonLink onClick={() => State.update({ page: state.page + 1 })}>\r\n        Load more\r\n      </ButtonLink>\r\n    </div>\r\n  );\r\n}\r\nreturn <NewswireCard />;\r\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/nearweekapp.near/widget/nw-newswire", "fact_widget_deployments_id": "ef7d1393aa58e3cc7467ce1c3d85b08d", "inserted_timestamp": "2024-06-12T22:05:48.067Z", "modified_timestamp": "2024-06-12T22:05:48.067Z", "__row_index": 4}