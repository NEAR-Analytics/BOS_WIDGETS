{"tx_hash": "CyKQduU19pH5tdkMU2JCTcps8nVYSKVXhxb3NyipD8M2", "action_id_social": "JBJuNZQy4bBbLJfusGvsqnjQfxYZ3YkzF3NNFd8YFaJp-0-widget", "block_id": 103200753, "block_timestamp": "2023-10-12T11:41:25.994Z", "signer_id": "nearweekapp.near", "widget_name": "nw-newswire", "source_code": "const accountId = \"near\";\nState.init({ active: 0 });\nlet posts = [];\nlet mediumPosts = [];\n\nconst indexedPosts = Social.index(\"post\", \"main\", {\n  accountId,\n  limit: 20,\n  order: \"desc\",\n});\n\nif (indexedPosts?.length > 0) {\n  posts = [];\n\n  indexedPosts.forEach((post) => {\n    const data = Social.get(`${post.accountId}/post/main`, post.blockHeight);\n    if (data) {\n      const json = JSON.parse(data);\n      const content = json.text.split(\"\\n\");\n      const title = content[0] || \"\";\n      const url = content[1] || content[2] || \"\";\n      const lastLine = content.pop() || \"\";\n      const hasNewsTag = lastLine.indexOf(\"#news\") > -1;\n      const isValid = hasNewsTag && url.indexOf(\"https://\") > -1;\n\n      if (isValid) {\n        const block = Near.block(post.blockHeight);\n        let createdAt = \"\";\n        if (block) {\n          const timeMs = parseFloat(block.header.timestamp_nanosec) / 1e6;\n          createdAt = new Date(timeMs).toISOString();\n        }\n        posts.push({\n          blockHeight: post.blockHeight,\n          title,\n          url,\n          thumbnail: \"https://near.org/favicon.png\",\n          createdAt,\n          categories: [\"Near ORG\", \"blog\"],\n        });\n\n        posts.sort((a, b) => b.blockHeight - a.blockHeight);\n      }\n    }\n  });\n}\n\nconst data = fetch(\n  \"https://nearweek.com/api/md/dao-news?populate=deep&sort=createdAt:desc&pagination[pageSize]=5\",\n  {\n    //subscribe: true,\n    method: \"GET\",\n    headers: {\n      Accept: \"*/*\",\n      Authorization:\n        \"Bearer 15699f0723aa9fe9f655b1a94e450552476c08807f67b525b5a3c8011eecc8aee6d45923443620f17815b897858be058cd7bd89ddf23a28aabaecb178e7ebc55d380293beeb51a8ce87b40e1518ce4708e4d51a06b115f27fa64ab5cbee5a3511cec785d7ae6a155ecd05ac8196aadae3e9b8e9401b8df8d8b69904f7364f925\",\n    },\n  }\n);\n\nconst cssFont = fetch(\"https://fonts.cdnfonts.com/css/hubot-sans\").body;\n\nif (!cssFont) return \"\";\n\nif (!state.theme) {\n  State.update({\n    theme: styled.div`\n    font-family: 'Mona Sans', sans-serif;\n    ${cssFont}\n`,\n  });\n}\nconst Theme = state.theme;\n\nconst Wrapper = styled.div`\n  display: grid;\n  margin-bottom: 0px;\n  gap: 2px;\n`;\n\nconst H2 = styled.h2`\n    color: #1C1F41;\n    font-family: Inter;\n    font-size: 24px;\n    font-style: normal;\n    font-weight: 500;\n    line-height: 15px;\n    margin-bottom: 15px;\n`;\n\nconst Content = styled.div`\n  display: grid;\n  margin: 0px 0 15px 0;\n  gap: 10px;\n  width: 100%;`;\n\nconst Card = styled.div`\n    position: relative;\n    width: 100%;\n    border-radius: 12px;\n    background: #fff;\n    border: 1px solid #eceef0;\n    overflow: hidden;\n    padding:12px;\n    display:flex !important;\n    flex-direction: column;\n    gap:10px;\n  `;\n\nconst CardHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  height: 28px;\n  width: 100%;\n`;\n\nconst CardUser = styled.div`\n& span{\n    color: rgba(28, 31, 65, 0.45);\n    text-align: right;\n    font-family: Inter;\n    font-size: 12px;\n    font-style: normal;\n    font-weight: 500;\n    line-height: 8.5px;\n}\n\n`;\n\nconst TwitterBage = styled.div`\n    height: 28px;\n    width: 28px;\n    background-color: #000;\n    border-radius: 50%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    /* Align the badge to the far right */\n    margin-left: auto;\n`;\n\nconst CardContent = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    margin-top: 0;\n    flex: 1;\n`;\n\nconst CardTitle = styled.div`\n    height:54px;\n    overflow: hidden;\n    color: #1C1F41;\n    text-overflow: ellipsis;\n    whitespace: nowrap;\n    font-family: Inter;\n    font-size: 12px;\n    font-style: normal;\n    font-weight: 500;\n    line-height: 18px;\n    letter-spacing: 0.12px;\n    a {\n        color: inherit;\n    }\n`;\n\nconst CardFooter = styled.div`\n    display: flex;\n    justify-content: left;\n    align-items: center;\n    height:20px;\n`;\n\nconst CardDate = styled.div`\n    color: rgba(28, 31, 65, 0.45);\n    font-family: Inter;\n    font-size: 12px;\n    font-style: normal;\n    font-weight: 500;\n    line-height: 8.5px;\n    text-align: left;\n    \n`;\n\nconst Badges = styled.div`\n    display: flex;\n    gap: 6px;\n`;\n\nconst Badge = styled.span`\n    background: #F5F5F5;\n    padding: 6px 20px;\n    border-color: hsla(214, 10%, 86%, 1);\n    border-radius: 4px;\n    color: #9C9C9C;\n    text-align: center;\n    font-family: Inter;\n    font-size: 12px;\n    font-style: normal;\n    font-weight: 500;\n    line-height: 8.5px;\n    display:   ${(props) => (props.index > 1 ? \"none\" : \"block\")}; \n`;\n\nconst ButtonLink = styled.a`\n  display: block;\n  width: 100%;\n  padding: 8px;\n  height: 32px;\n  background: #FBFCFD;\n  border: 1px solid #D7DBDF;\n  border-radius: 50px;\n  font-weight: 600;\n  font-size: 12px;\n  line-height: 15px;\n  text-align: center;\n  cursor: pointer;\n  color: #11181C !important;\n  margin: 0;\n\n  &:hover,\n  &:focus {\n    background: #ECEDEE;\n    text-decoration: none;\n    outline: none;\n  }\n`;\nconst AuthorNDate = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: baseline;\n    gap:4px;\n    margin-bottom:10px;\n  `;\n\nconst Dot = styled.span`\n  color: rgba(28, 31, 65, 0.45);\n  text-align: right;\n  font-family: Inter;\n  font-size: 12px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: 8.5px; /* 70.833% */\n  letter-spacing: 0.12px;\n    `;\nconst news = [...(data?.body?.data ?? []), ...posts]\n  .sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt))\n  .slice(0, limit);\nconst nwSite = \"https://nearweek.com\";\n\nfunction dateToDays(date) {\n  const timeAgo = (diffSec) =>\n    diffSec < 60000\n      ? `${(diffSec / 1000) | 0}s`\n      : diffSec < 3600000\n      ? `${(diffSec / 60000) | 0}min`\n      : diffSec < 86400000\n      ? `${(diffSec / 3600000) | 0}hr`\n      : `${(diffSec / 86400000) | 0}d`;\n\n  var d = new Date(date);\n  return timeAgo(Date.now() - d.getTime());\n}\n\nfunction extractUsernameFromURL(url) {\n  let username = \"\";\n\n  const xcomIndex = url.indexOf(\"x.com/\");\n  if (xcomIndex !== -1) {\n    const afterXcom = url.substring(xcomIndex + 6); // Extract the part after \"x.com/\"\n    const nextSlashIndex = afterXcom.indexOf(\"/\");\n    if (nextSlashIndex !== -1) {\n      username = afterXcom.substring(0, nextSlashIndex);\n    } else {\n      username = afterXcom;\n    }\n  }\n\n  if (!username) {\n    const twitterIndex = url.indexOf(\"twitter.com/\");\n    if (twitterIndex !== -1) {\n      const afterTwitter = url.substring(twitterIndex + 12); // Extract the part after \"twitter.com/\"\n      const nextSlashIndex = afterTwitter.indexOf(\"/\");\n      if (nextSlashIndex !== -1) {\n        username = afterTwitter.substring(0, nextSlashIndex);\n      } else {\n        username = afterTwitter;\n      }\n    }\n  }\n\n  if (!username) {\n    const mediumIndex = url.indexOf(\"medium.com/\");\n    if (mediumIndex !== -1) {\n      const afterMedium = url.substring(mediumIndex + 11);\n      const nextSlashIndex = afterMedium.indexOf(\"/\");\n      if (nextSlashIndex !== -1) {\n        username = afterMedium.substring(0, nextSlashIndex);\n      } else {\n        username = afterMedium;\n      }\n    }\n  }\n  if (!username && url.includes(\"near.org\")) {\n    username = \"NEAR\";\n  }\n\n  return username;\n}\n\nfunction NewswireCard() {\n  return (\n    <Theme>\n      {news && news.length > 0 ? (\n        <Wrapper>\n          <H2>Newswire</H2>\n          <Content>\n            {news.map((item, index) => (\n              <Card index={index}>\n                <div class=\"d-flex flex-grow-1\">\n                  <CardContent>\n                    <CardHeader>\n                      <AuthorNDate>\n                        {item.url && (\n                          <CardUser>\n                            <span>@{extractUsernameFromURL(item.url)} </span>\n                          </CardUser>\n                        )}\n                        <Dot>\u00b7</Dot>\n                        <CardDate>\n                          {item.createdAt\n                            ? `${dateToDays(item.createdAt)}`\n                            : \"\"}\n                        </CardDate>\n                      </AuthorNDate>\n                      <TwitterBage>\n                        <svg\n                          width=\"15\"\n                          height=\"14\"\n                          viewBox=\"0 0 15 14\"\n                          fill=\"none\"\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                        >\n                          <g clip-path=\"url(#clip0_37_8004)\">\n                            <path\n                              d=\"M0.573242 0.0361328L5.97827 7.2081L0.539062 13.0367H1.76322L6.52544 7.93279L10.3743 13.037H14.5391L8.82957 5.46291L13.8925 0.0361328H12.6684L8.28269 4.73594L4.73889 0.0361328H0.573242ZM2.37358 0.930954H4.28737L12.7379 12.1419H10.8246L2.37358 0.930954Z\"\n                              fill=\"white\"\n                            />\n                          </g>\n                          <defs>\n                            <clipPath id=\"clip0_37_8004\">\n                              <rect\n                                width=\"14\"\n                                height=\"13\"\n                                fill=\"white\"\n                                transform=\"translate(0.539062 0.0361328)\"\n                              />\n                            </clipPath>\n                          </defs>\n                        </svg>\n                      </TwitterBage>\n                    </CardHeader>\n                    <CardTitle>\n                      <a\n                        href={item.url}\n                        target=\"_blank\"\n                        rel=\"noreferrer noopener\"\n                      >\n                        {item.title}\n                      </a>\n                    </CardTitle>\n                    <CardFooter>\n                      <Badges>\n                        {item.categories.length > 0 &&\n                          item.categories.map((category) => (\n                            <Badge>{category}</Badge>\n                          ))}\n                      </Badges>\n                    </CardFooter>\n                  </CardContent>\n                </div>\n              </Card>\n            ))}\n          </Content>\n        </Wrapper>\n      ) : (\n        <div>Loading ...</div>\n      )}\n    </Theme>\n  );\n}\nreturn <NewswireCard />;\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/nearweekapp.near/widget/nw-newswire", "fact_widget_deployments_id": "abf1b4c7977181496a7238d90e7599ec", "inserted_timestamp": "2023-10-12T13:29:59.815Z", "modified_timestamp": "2023-10-12T13:29:59.815Z", "__row_index": 5}