{"tx_hash": "47BmkbMNyepUH76NqwvyLgcNL2aGRoFyWE7pHtJbkyEz", "action_id_social": "3JWvoWgzdUoND6nNoE7bETrJcHuRQDGJ1JYWJvaXxaUY-0-widget", "block_id": 107133130, "block_timestamp": "2023-12-04T11:09:44.871Z", "signer_id": "nearweekapp.near", "widget_name": "nw-newsletter", "source_code": "const rootUser = \"nearweekapp.near\";\n\nfunction NewsletterCard() {\n  State.init({ page: 1 });\n\n  const data = fetch(\n    `https://nearweek.com/api/editions?populate=deep&sort=createdAt:desc&pagination[pageSize]=${\n      state.page * 9\n    }`,\n    {\n      method: \"GET\",\n      headers: {\n        Accept: \"*/*\",\n        Authorization:\n          \"Bearer 15699f0723aa9fe9f655b1a94e450552476c08807f67b525b5a3c8011eecc8aee6d45923443620f17815b897858be058cd7bd89ddf23a28aabaecb178e7ebc55d380293beeb51a8ce87b40e1518ce4708e4d51a06b115f27fa64ab5cbee5a3511cec785d7ae6a155ecd05ac8196aadae3e9b8e9401b8df8d8b69904f7364f925\",\n      },\n    }\n  );\n\n  const ReadButtonLink = styled.a`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    padding: 8px;\n    height: 29px;\n    width: 100%;\n    border: 1px solid #d7dbdf;\n    border-radius: 100px;\n    font-weight: 500;\n    font-size: 12px;\n    line-height: 15px;\n    text-align: center;\n    cursor: pointer;\n    color: ${(p) => (p.primary ? \"#006ADC\" : \"#11181C\")} !important;\n    background: #fbfcfd;\n    white-space: nowrap;\n\n    &:hover,\n    &:focus {\n      background: #ecedee;\n      text-decoration: none;\n      outline: none;\n    }\n  `;\n\n  const SubscribeButtonLink = styled.a`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    padding: 8px;\n    height: 29px;\n    width: 100%;\n    border: 1px solid #2A6BD5;\n    border-radius: 100px;\n    font-weight: 500;\n    font-size: 12px;\n    line-height: 15px;\n    text-align: center;\n    cursor: pointer;\n    color: #fff !important;\n    background: #2A6BD5;\n    white-space: nowrap;\n\n    &:hover,\n    &:focus {\n      background-color: #ffff;\n      color: #2A6BD5 !important;\n      border: 1px solid #2A6BD5;\n      text-decoration: none;\n      outline: none;\n    }\n  `;\n\n  const Card = styled.div`\n    position: relative;\n    cursor: pointer;\n    width: 100%;\n    border-radius: 12px;\n    background: #fff;\n    border: 1px solid #eceef0;\n    overflow: hidden;\n    margin-bottom:10px;\n  `;\n\n  const TopCard = styled.div`\n    position: relative;\n    width: 100%;\n    border-radius: 12px;\n    background: #fff;\n    border: 1px solid rgba(28, 31, 65, 0.10);\n    overflow: hidden;\n    margin-bottom:10px;\n  `;\n\n  const CardTitle = styled.h2`\n  cursor: pointer;\n    overflow: hidden;\n    color: #1C1F41;\n    text-overflow: ellipsis;\n    whitespace: nowrap;\n    font-size: 15px;\n    font-style: normal;\n    font-weight: 500;\n    line-height: 14px;\n    margin-top:10px;\n    margin-bottom:0;\n  `;\n\n  const CordDate = styled.p`\n    color: rgba(28, 31, 65, 0.45);\n    text-align: right;\n    font-size: 12px;\n    font-style: normal;\n    font-weight: 500;\n    line-height: 8.5px;\n\n    text-align:left;\n    margin-bottom:0;\n    margin-top:8px;\n  `;\n\n  const TopCardTitle = styled.h2`\n   overflow: hidden;\n    color: #1C1F41;\n    text-overflow: ellipsis;\n    whitespace: nowrap;\n    font-size: 18px;\n    font-style: normal;\n    font-weight: 500;\n  `;\n\n  const TopCardTitleContainer = styled.h2`\n    width: 100%;\n    display: flex;\n    flex-direction: row;\n    align-items: flex-end;\n    justify-content: space-between;\n    margin: 0;\n\n    border-bottom: 1px solid rgba(28, 31, 65, 0.10);\n\n    & p {\n        color: rgba(28, 31, 65, 0.45);\n        font-size: 12px;\n        font-style: normal;\n        font-weight: 500;\n        line-height: 8.5px;\n\n    }\n  `;\n\n  const TopCardFooterButtons = styled.h2`\n    width:100%;\n    display:flex;\n    gap:14px;\n  `;\n\n  const CardBody = styled.div`\n    padding: 12px 12px 9px 12px;\n    display: flex;\n    gap: 16px;\n    align-items: center;\n\n    > * {\n      min-width: 0;\n    }\n  `;\n\n  const TopCardBody = styled.div`\n    padding: 12px 17px 8px 12px;\n    display: flex;\n    align-items: center;\n\n    > * {\n      min-width: 0;\n    }\n  `;\n\n  const CardContent = styled.div`\n    font-size: 10px;\n    font-weight: 400;\n    line-height: 13px;\n    letter-spacing: -0.02em;\n    color: hsla(0, 0%, 0%, 1);\n    width: 100%;\n  `;\n\n  const CardFooter = styled.div`\n    display: grid;\n    grid-template-column: auto auto;\n    gap: 14px;\n    padding: 6px 16px;\n  `;\n\n  const H2 = styled.h2`\n    color: #1C1F41;\n    font-size: 24px;\n    font-style: normal;\n    font-weight: 500;\n    line-height: 15px;\n    margin-bottom: 15px;\n`;\n\n  const ButtonLoadMore = styled.button`\n  width: 180px;\n  padding: 8px;\n  height: 31px;\n  background: transparent;\n  margin: 20px auto 0 auto;\n  border: 1px solid #d7dbdf;\n  border-radius: 100px;\n  font-weight: 500;\n  font-size: 12px;\n  line-height: 22px;\n  letter-spacing: -0.03em;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  cursor: pointer;\n  white-space: nowrap;\n  color: hsla(204, 22%, 9%, 1);\n  &:hover,\n  &:focus {\n    text-decoration: none;\n    outline: none;\n    }\n  `;\n\n  function formatDate(dateString) {\n    const date = new Date(dateString);\n    const day = date.getDate().toString().padStart(2, \"0\");\n    const month = (date.getMonth() + 1).toString().padStart(2, \"0\");\n    const year = date.getFullYear().toString().slice(-2);\n    return `${day}.${month}.${year}`;\n  }\n\n  function calculateTimeDifference(dateString) {\n    const now = new Date();\n    const creationDate = new Date(dateString);\n    const diffMillis = now - creationDate.getTime();\n    const timeUnits = [\"Month\", \"Day\", \"Hour\", \"Minute\", \"Second\"];\n    const divisors = [\n      30 * 24 * 60 * 60 * 1000,\n      24 * 60 * 60 * 1000,\n      60 * 60 * 1000,\n      60 * 1000,\n      1000,\n    ];\n\n    for (let i = 0; i < divisors.length; i++) {\n      const unitCount = Math.floor(diffMillis / divisors[i]);\n      if (unitCount >= 1) {\n        return `${unitCount} ${timeUnits[i]}${unitCount > 1 ? \"s\" : \"\"}`;\n      }\n    }\n\n    return \"Just Now\";\n  }\n  const issues = data.body.data;\n  const nwSite = \"https://nearweek.com\";\n\n  const updateDetailsPage = props.updateDetailsPage;\n\n  return (\n    <div>\n      <H2>NEWSLETTER</H2>\n      {issues !== null && issues.length > 0 ? (\n        issues.map((issue, index) => (\n          <div key={index}>\n            {/* Display the top card with unique styling */}\n            {index === 0 && (\n              <TopCard>\n                <TopCardBody>\n                  <CardContent>\n                    <img\n                      class=\"rounded\"\n                      width=\"100%\"\n                      height=\"100%\"\n                      src={nwSite + issue.Thumbnail.url}\n                      alt={issue.Thumbnail.alternativeText}\n                    />\n                  </CardContent>\n                </TopCardBody>\n                {/* Display \"Read\" and \"Subscribe\" buttons only for the top card */}\n                {index === 0 && (\n                  <CardFooter>\n                    <TopCardTitleContainer>\n                      <TopCardTitle>\n                        {\"Edition\"} {issue.Number ? issue.Number : \"\"}\n                      </TopCardTitle>\n                      <p>{formatDate(issue.createdAt)}</p>\n                    </TopCardTitleContainer>\n                    <TopCardFooterButtons>\n                      <ReadButtonLink onClick={() => updateDetailsPage(issue)}>\n                        Read\n                      </ReadButtonLink>\n                      <SubscribeButtonLink\n                        href=\"https://subscribe.nearweek.com\"\n                        target=\"_blank\"\n                        primary\n                      >\n                        Subscribe\n                      </SubscribeButtonLink>\n                    </TopCardFooterButtons>\n                  </CardFooter>\n                )}\n              </TopCard>\n            )}\n\n            {/* Display bage */}\n            {index === 0 && (\n              <Widget src={`${rootUser}/widget/nw-newsletter-bage`} />\n            )}\n\n            {/* Display the other three cards with the same styling */}\n            {index > 0 && (\n              <Card onClick={() => updateDetailsPage(issue)}>\n                <CardBody>\n                  <CardContent>\n                    <div class=\"d-flex clearfix\">\n                      <div class=\"d-flex\">\n                        <img\n                          class=\"rounded\"\n                          width=\"67\"\n                          height=\"49\"\n                          src={nwSite + issue.Thumbnail.url}\n                          alt={issue.Thumbnail.alternativeText}\n                        />\n                        <div class=\"d-flex flex-column ms-3 mt-0\">\n                          {/* Display \"Edition -\" followed by the number */}\n                          <CardTitle>\n                            {\"Edition\"} {issue.Number ? issue.Number : \"\"}\n                          </CardTitle>\n                          {/* Display time elapsed since creation date */}\n                          <CordDate>{`${calculateTimeDifference(\n                            issue.createdAt\n                          )}`}</CordDate>\n                        </div>\n                      </div>\n                    </div>\n                  </CardContent>\n                </CardBody>\n              </Card>\n            )}\n          </div>\n        ))\n      ) : (\n        <div>Loading ...</div>\n      )}\n      <ButtonLoadMore onClick={() => State.update({ page: state.page + 1 })}>\n        Load more\n      </ButtonLoadMore>\n    </div>\n  );\n}\n\nreturn <NewsletterCard />;\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/nearweekapp.near/widget/nw-newsletter", "fact_widget_deployments_id": "feea7adf581d1f49d91b52186e2332d6", "inserted_timestamp": "2023-12-04T12:39:38.114Z", "modified_timestamp": "2023-12-20T03:22:11.422Z", "__row_index": 7}