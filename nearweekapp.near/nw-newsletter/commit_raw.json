{"tx_hash": "41uB6tjyc5M1ock5TXm3EfYFtM3CqcsHguF4C1ttsCa3", "action_id_social": "DZYA5Go1wVavqM6wut6Ea8dXcYgcENm3bma4AyNTp6Ag-0-widget", "block_id": 106800455, "block_timestamp": "2023-11-29T10:26:10.869Z", "signer_id": "nearweekapp.near", "widget_name": "nw-newsletter", "source_code": "const rootUser = \"nearweekapp.near\";\r\n\r\nfunction NewsletterCard() {\r\n  State.init({ page: 1 });\r\n  const data = fetch(\r\n    `https://nearweek.com/api/editions?populate=deep&sort=createdAt:desc&pagination[pageSize]=${\r\n      state.page * 9\r\n    }`,\r\n    {\r\n      method: \"GET\",\r\n      headers: {\r\n        Accept: \"*/*\",\r\n        Authorization:\r\n          \"Bearer 15699f0723aa9fe9f655b1a94e450552476c08807f67b525b5a3c8011eecc8aee6d45923443620f17815b897858be058cd7bd89ddf23a28aabaecb178e7ebc55d380293beeb51a8ce87b40e1518ce4708e4d51a06b115f27fa64ab5cbee5a3511cec785d7ae6a155ecd05ac8196aadae3e9b8e9401b8df8d8b69904f7364f925\",\r\n      },\r\n    }\r\n  );\r\n  const cssFont = fetch(\"https://fonts.cdnfonts.com/css/hubot-sans\").body;\r\n\r\n  if (!cssFont) return \"\";\r\n\r\n  if (!state.theme) {\r\n    State.update({\r\n      theme: styled.div`\r\n        font-family: 'Mona Sans', sans-serif;\r\n        font-style: normal;\r\n        ${cssFont}\r\n      `,\r\n    });\r\n  }\r\n  const Theme = state.theme;\r\n\r\n  const ReadButtonLink = styled.a`\r\n    padding: 8px;\r\n    height: 29px;\r\n    width: 100%;\r\n    border: 1px solid #d7dbdf;\r\n    border-radius: 100px;\r\n    font-weight: 500;\r\n    font-size: 12px;\r\n    line-height: 15px;\r\n    text-align: center;\r\n    cursor: pointer;\r\n    color: ${(p) => (p.primary ? \"#006ADC\" : \"#11181C\")} !important;\r\n    background: #fbfcfd;\r\n    white-space: nowrap;\r\n\r\n    &:hover,\r\n    &:focus {\r\n      background: #ecedee;\r\n      text-decoration: none;\r\n      outline: none;\r\n    }\r\n  `;\r\n\r\n  const SubscribeButtonLink = styled.a`\r\n    padding: 8px;\r\n    height: 29px;\r\n    width: 100%;\r\n    border: 1px solid #2A6BD5;\r\n    border-radius: 100px;\r\n    font-weight: 500;\r\n    font-size: 12px;\r\n    line-height: 15px;\r\n    text-align: center;\r\n    cursor: pointer;\r\n    color: #fff !important;\r\n    background: #2A6BD5;\r\n    white-space: nowrap;\r\n\r\n    &:hover,\r\n    &:focus {\r\n      background-color: #ffff;\r\n      color: #2A6BD5 !important;\r\n      border: 1px solid #2A6BD5;\r\n      text-decoration: none;\r\n      outline: none;\r\n    }\r\n  `;\r\n\r\n  const Card = styled.div`\r\n    position: relative;\r\n    cursor: pointer;\r\n    width: 100%;\r\n    border-radius: 12px;\r\n    background: #fff;\r\n    border: 1px solid #eceef0;\r\n    overflow: hidden;\r\n    margin-bottom:10px;\r\n  `;\r\n\r\n  const TopCard = styled.div`\r\n    position: relative;\r\n    width: 100%;\r\n    border-radius: 12px;\r\n    background: #fff;\r\n    border: 1px solid rgba(28, 31, 65, 0.10);\r\n    overflow: hidden;\r\n    margin-bottom:10px;\r\n  `;\r\n\r\n  const CardTitle = styled.h2`\r\n  cursor: pointer;\r\n    overflow: hidden;\r\n    color: #1C1F41;\r\n    text-overflow: ellipsis;\r\n    whitespace: nowrap;\r\n    font-family: Inter;\r\n    font-size: 15px;\r\n    font-style: normal;\r\n    font-weight: 500;\r\n    line-height: 14px;\r\n    margin-top:10px;\r\n    margin-bottom:0;\r\n  `;\r\n\r\n  const CordDate = styled.p`\r\n    color: rgba(28, 31, 65, 0.45);\r\n    text-align: right;\r\n    font-family: Inter;\r\n    font-size: 12px;\r\n    font-style: normal;\r\n    font-weight: 500;\r\n    line-height: 8.5px;\r\n\r\n    text-align:left;\r\n    margin-bottom:0;\r\n    margin-top:8px;\r\n\r\n  `;\r\n\r\n  const TopCardTitle = styled.h2`\r\n   overflow: hidden;\r\n    color: #1C1F41;\r\n    text-overflow: ellipsis;\r\n    whitespace: nowrap;\r\n    font-family: Inter;\r\n    font-size: 18px;\r\n    font-style: normal;\r\n    font-weight: 500;\r\n  `;\r\n\r\n  const TopCardTitleContainer = styled.h2`\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: flex-end;\r\n    justify-content: space-between;\r\n    margin: 0;\r\n\r\n    border-bottom: 1px solid rgba(28, 31, 65, 0.10);\r\n\r\n    & p {\r\n        color: rgba(28, 31, 65, 0.45);\r\n        font-family: Inter;\r\n        font-size: 12px;\r\n        font-style: normal;\r\n        font-weight: 500;\r\n        line-height: 8.5px;\r\n\r\n    }\r\n  `;\r\n\r\n  const TopCardFooterButtons = styled.h2`\r\n    width:100%;\r\n    display:flex;\r\n    gap:14px;\r\n   \r\n  `;\r\n\r\n  const CardBody = styled.div`\r\n    padding: 12px 12px 9px 12px;\r\n    display: flex;\r\n    gap: 16px;\r\n    align-items: center;\r\n\r\n    > * {\r\n      min-width: 0;\r\n    }\r\n  `;\r\n\r\n  const TopCardBody = styled.div`\r\n    padding: 12px 17px 8px 12px;\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    > * {\r\n      min-width: 0;\r\n    }\r\n  `;\r\n\r\n  const CardContent = styled.div`\r\n    font-size: 10px;\r\n    font-weight: 400;\r\n    line-height: 13px;\r\n    letter-spacing: -0.02em;\r\n    color: hsla(0, 0%, 0%, 1);\r\n    width: 100%;\r\n  `;\r\n\r\n  const CardFooter = styled.div`\r\n    display: grid;\r\n    grid-template-column: auto auto;\r\n    gap: 14px;\r\n    padding: 6px 16px;\r\n  `;\r\n\r\n  const H2 = styled.h2`\r\n    color: #1C1F41;\r\n    font-family: Inter;\r\n    font-size: 24px;\r\n    font-style: normal;\r\n    font-weight: 500;\r\n    line-height: 15px;\r\n    margin-bottom: 15px;\r\n`;\r\n  const ButtonLoadMore = styled.button`\r\n  width: 180px;\r\n  padding: 8px;\r\n  height: 31px;\r\n  background: transparent;\r\n  margin: 0 auto;\r\n  border: 1px solid #d7dbdf;\r\n  border-radius: 100px;\r\n  font-weight: 500;\r\n  font-size: 12px;\r\n  line-height: 22px;\r\n  letter-spacing: -0.03em;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n  cursor: pointer;\r\n  white-space: nowrap;\r\n  color: hsla(204, 22%, 9%, 1);\r\n  &:hover,\r\n  &:focus {\r\n    text-decoration: none;\r\n    outline: none;\r\n    }\r\n  `;\r\n\r\n  function formatDate(dateString) {\r\n    const date = new Date(dateString);\r\n    const day = date.getDate().toString().padStart(2, \"0\");\r\n    const month = (date.getMonth() + 1).toString().padStart(2, \"0\");\r\n    const year = date.getFullYear().toString().slice(-2);\r\n    return `${day}.${month}.${year}`;\r\n  }\r\n\r\n  function formatDate(dateString) {\r\n    const date = new Date(dateString);\r\n    const day = date.getDate().toString().padStart(2, \"0\");\r\n    const month = (date.getMonth() + 1).toString().padStart(2, \"0\");\r\n    const year = date.getFullYear().toString().slice(-2);\r\n    return `${day}.${month}.${year}`;\r\n  }\r\n  function calculateTimeDifference(dateString) {\r\n    const now = new Date();\r\n    const creationDate = new Date(dateString);\r\n    const diffMillis = now - creationDate.getTime();\r\n    const timeUnits = [\"Month\", \"Day\", \"Hour\", \"Minute\", \"Second\"];\r\n    const divisors = [\r\n      30 * 24 * 60 * 60 * 1000,\r\n      24 * 60 * 60 * 1000,\r\n      60 * 60 * 1000,\r\n      60 * 1000,\r\n      1000,\r\n    ];\r\n\r\n    for (let i = 0; i < divisors.length; i++) {\r\n      const unitCount = Math.floor(diffMillis / divisors[i]);\r\n      if (unitCount >= 1) {\r\n        return `${unitCount} ${timeUnits[i]}${unitCount > 1 ? \"s\" : \"\"}`;\r\n      }\r\n    }\r\n\r\n    return \"Just Now\";\r\n  }\r\n  const issues = data.body.data;\r\n  const nwSite = \"https://nearweek.com\";\r\n\r\n  const updateDetailsPage = props.updateDetailsPage;\r\n\r\n  return (\r\n    <Theme>\r\n      <H2>Newsletter</H2>\r\n      {issues !== null && issues.length > 0 ? (\r\n        issues.map((issue, index) => (\r\n          <div key={index}>\r\n            {/* Display the top card with unique styling */}\r\n            {index === 0 && (\r\n              <TopCard>\r\n                <TopCardBody>\r\n                  <CardContent>\r\n                    <img\r\n                      class=\"rounded\"\r\n                      width=\"100%\"\r\n                      height=\"100%\"\r\n                      src={nwSite + issue.Thumbnail.url}\r\n                      alt={issue.Thumbnail.alternativeText}\r\n                    />\r\n                  </CardContent>\r\n                </TopCardBody>\r\n                {/* Display \"Read\" and \"Subscribe\" buttons only for the top card */}\r\n                {index === 0 && (\r\n                  <CardFooter>\r\n                    <TopCardTitleContainer>\r\n                      <TopCardTitle>\r\n                        {\"Edition\"} {issue.Number ? issue.Number : \"\"}\r\n                      </TopCardTitle>\r\n                      <p>{formatDate(issue.createdAt)}</p>\r\n                    </TopCardTitleContainer>\r\n                    <TopCardFooterButtons>\r\n                      <ReadButtonLink onClick={() => updateDetailsPage(issue)}>\r\n                        Read\r\n                      </ReadButtonLink>\r\n                      <SubscribeButtonLink\r\n                        href=\"https://subscribe.nearweek.com\"\r\n                        target=\"_blank\"\r\n                        primary\r\n                      >\r\n                        Subscribe\r\n                      </SubscribeButtonLink>\r\n                    </TopCardFooterButtons>\r\n                  </CardFooter>\r\n                )}\r\n              </TopCard>\r\n            )}\r\n\r\n            {/* Display bage */}\r\n            {index === 0 && (\r\n              <Widget src={`${rootUser}/widget/nw-newsletter-bage`} />\r\n            )}\r\n\r\n            {/* Display the other three cards with the same styling */}\r\n            {index > 0 && (\r\n              <Card onClick={() => updateDetailsPage(issue)}>\r\n                <CardBody>\r\n                  <CardContent>\r\n                    <div class=\"d-flex clearfix\">\r\n                      <div class=\"d-flex\">\r\n                        <img\r\n                          class=\"rounded\"\r\n                          width=\"67\"\r\n                          height=\"49\"\r\n                          src={nwSite + issue.Thumbnail.url}\r\n                          alt={issue.Thumbnail.alternativeText}\r\n                        />\r\n                        <div class=\"d-flex flex-column ms-3 mt-0\">\r\n                          {/* Display \"Edition -\" followed by the number */}\r\n                          <CardTitle>\r\n                            {\"Edition\"} {issue.Number ? issue.Number : \"\"}\r\n                          </CardTitle>\r\n                          {/* Display time elapsed since creation date */}\r\n                          <CordDate>{`${calculateTimeDifference(\r\n                            issue.createdAt\r\n                          )}`}</CordDate>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </CardContent>\r\n                </CardBody>\r\n              </Card>\r\n            )}\r\n          </div>\r\n        ))\r\n      ) : (\r\n        <div>Loading ...</div>\r\n      )}\r\n      <ButtonLoadMore onClick={() => State.update({ page: state.page + 1 })}>\r\n        Load more\r\n      </ButtonLoadMore>\r\n    </Theme>\r\n  );\r\n}\r\n\r\nreturn <NewsletterCard />;\r\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/nearweekapp.near/widget/nw-newsletter", "fact_widget_deployments_id": "f497d3ebda90064eb6e037d203d30375", "inserted_timestamp": "2023-11-29T12:31:58.644Z", "modified_timestamp": "2023-12-20T00:36:59.366Z", "__row_index": 0}