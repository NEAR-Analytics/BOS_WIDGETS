{"tx_hash": "BP9y3uCHmSa3MT2YGZXTjzcFsXBMQz26qiY4ff39mTeK", "action_id_social": "24RQdRz782j6fkFQ8KS53H39JU8f2ZnqkcDzH3pi2mCD-0-widget", "block_id": 107152069, "block_timestamp": "2023-12-04T17:47:56.392Z", "signer_id": "marketplacebos.near", "widget_name": "TrendingPost.ChartValueAll", "source_code": "const findHashtags = (str) => {\r\n  const regexp = /\\B\\#\\w\\w+\\b/g;\r\n  let match;\r\n  let tags = [];\r\n  while ((match = regexp.exec(str)) !== null) {\r\n    tags.push(match[0]);\r\n  }\r\n  return tags;\r\n};\r\nconst respBlock = fetch(\"https://api.nearblocks.io/v1/stats\");\r\n\r\nconst newBlock30Days = Math.round(\r\n  parseInt(respBlock.body.stats[0].block) -\r\n    (30 * 24 * 3600) / parseInt(respBlock.body.stats[0].avg_block_time)\r\n);\r\n\r\nlet BlockHeightPost30Days = [];\r\nconst getBlockHeight30daysPost = Social.index(\"post\", \"main\", {\r\n  from: newBlock30Days,\r\n  limit: 99999,\r\n});\r\n\r\ngetBlockHeight30daysPost.forEach((item) => {\r\n  BlockHeightPost30Days.push({\r\n    accountId: item.accountId,\r\n    blockHeight: item.blockHeight,\r\n  });\r\n});\r\n\r\nlet post30days = [];\r\nBlockHeightPost30Days.forEach((item) => {\r\n  const post = Social.get(`${item.accountId}/post/main`, item.blockHeight);\r\n  if (post) {\r\n    post30days.push(JSON.parse(post).text);\r\n  }\r\n});\r\n\r\nlet tagCount30Days = {};\r\npost30days.forEach((item) => {\r\n  const tags = findHashtags(item);\r\n  if (tags.length > 0) {\r\n    tags.forEach((tag) => {\r\n      if (tagCount30Days[tag]) {\r\n        tagCount30Days[tag] = tagCount30Days[tag] + 1;\r\n      } else {\r\n        tagCount30Days[tag] = 1;\r\n      }\r\n    });\r\n  }\r\n});\r\nlet entries30days = Object.entries(tagCount30Days);\r\nlet post30daySorted = entries30days.sort((b, a) => a[1] - b[1]);\r\n\r\nif (!getBlockHeight30daysPost) {\r\n  return \"Loading...\";\r\n}\r\n\r\nconst newBlock1Days = Math.round(\r\n  parseInt(respBlock.body.stats[0].block) -\r\n    (1 * 24 * 3600) / parseInt(respBlock.body.stats[0].avg_block_time)\r\n);\r\nconst newBlock3Days = Math.round(\r\n  parseInt(respBlock.body.stats[0].block) -\r\n    (3 * 24 * 3600) / parseInt(respBlock.body.stats[0].avg_block_time)\r\n);\r\nconst newBlock7Days = Math.round(\r\n  parseInt(respBlock.body.stats[0].block) -\r\n    (7 * 24 * 3600) / parseInt(respBlock.body.stats[0].avg_block_time)\r\n);\r\nconst allPost = Social.get(\"*/post/main/\", \"final\");\r\n\r\nconst tagCountAll = {};\r\nconst tagCount1Days = {};\r\nconst tagCount3Days = {};\r\nconst tagCount7Days = {};\r\nObject.keys(allPost).forEach((item) => {\r\n  const tags = findHashtags(JSON.parse(allPost[item].post.main).text);\r\n  if (tags.length > 0) {\r\n    tags.forEach((tag) => {\r\n      tagCountAll[tag] = 0;\r\n      tagCount1Days[tag] = 0;\r\n      tagCount3Days[tag] = 0;\r\n      tagCount7Days[tag] = 0;\r\n    });\r\n  }\r\n});\r\nObject.keys(tagCountAll).forEach((tag) => {\r\n  const countAllPost = Social.index(\"hashtag\", tag.replace(\"#\", \"\"), {\r\n    from: newBlock,\r\n    limit: 999,\r\n    order: \"asc\",\r\n  });\r\n  const count1DaysPost = Social.index(\"hashtag\", tag.replace(\"#\", \"\"), {\r\n    from: newBlock1Days,\r\n    limit: 999,\r\n    order: \"asc\",\r\n  });\r\n  const count3DaysPost = Social.index(\"hashtag\", tag.replace(\"#\", \"\"), {\r\n    from: newBlock3Days,\r\n    limit: 999,\r\n    order: \"asc\",\r\n  });\r\n  const count7DaysPost = Social.index(\"hashtag\", tag.replace(\"#\", \"\"), {\r\n    from: newBlock7Days,\r\n    limit: 999,\r\n    order: \"asc\",\r\n  });\r\n  tagCountAll[tag] = countAllPost.length || 0;\r\n  tagCount1Days[tag] = count1DaysPost.length || 0;\r\n  tagCount3Days[tag] = count3DaysPost.length || 0;\r\n  tagCount7Days[tag] = count7DaysPost.length || 0;\r\n});\r\n\r\nlet entriesALL = Object.entries(tagCountAll);\r\nlet allPostSorted = entriesALL.sort((b, a) => a[1] - b[1]);\r\n\r\nlet entries1 = Object.entries(tagCount1Days);\r\nlet day1PostSorted = entries1.sort((b, a) => a[1] - b[1]);\r\n\r\nlet entries3 = Object.entries(tagCount3Days);\r\nlet day3PostSorted = entries3.sort((b, a) => a[1] - b[1]);\r\n\r\nlet entries7 = Object.entries(tagCount7Days);\r\nlet day7PostSorted = entries7.sort((b, a) => a[1] - b[1]);\r\n\r\nlet totalItemsAll = 0;\r\n\r\n// Sum the values in the allPostSorted array\r\nfor (let i = 0; i < post30daySorted.length; i++) {\r\n  totalItemsAll += post30daySorted[i][1];\r\n}\r\n\r\nconst labelN = \"Top 10 trending tags on NEAR Social in all time\";\r\n\r\nconst backgroundcolorP = [\r\n  \"blue\",\r\n  \"blue\",\r\n  \"blue\",\r\n  \"blue\",\r\n  \"blue\",\r\n  \"blue\",\r\n  \"blue\",\r\n  \"blue\",\r\n  \"blue\",\r\n  \"blue\",\r\n  \"blue\",\r\n  \"blue\",\r\n  \"blue\",\r\n  \"blue\",\r\n  \"blue\",\r\n  \"blue\",\r\n  \"blue\",\r\n  \"blue\",\r\n  \"blue\",\r\n  \"blue\",\r\n];\r\n\r\nconst borderColorP = [\r\n  \"blue\",\r\n  \"blue\",\r\n  \"blue\",\r\n  \"blue\",\r\n  \"blue\",\r\n  \"blue\",\r\n  \"blue\",\r\n  \"blue\",\r\n  \"blue\",\r\n  \"blue\",\r\n  \"blue\",\r\n  \"blue\",\r\n  \"blue\",\r\n  \"blue\",\r\n  \"blue\",\r\n  \"blue\",\r\n  \"blue\",\r\n  \"blue\",\r\n  \"blue\",\r\n  \"blue\",\r\n];\r\n\r\n// Assuming item1 and item2 are properties of the objects in the 'sorted' array\r\nlet dataP = [];\r\nlet labelP = [];\r\n\r\n// Assuming allPostSorted has at least 20 items\r\nfor (let i = 0; i < 10; i++) {\r\n  if (post30daySorted[i]) {\r\n    dataP.push(post30daySorted[i][1]); // Assuming item[1] contains the data for dataP\r\n    labelP.push(post30daySorted[i][0]); // Assuming item[0] contains the data for labelP\r\n  }\r\n}\r\n\r\n// ... (rest of the code remains unchanged)\r\n\r\nconst StyledTable = styled.table`\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  margin-bottom: 20px;\r\n  border: none;\r\n  overflow: auto;\r\n  @media (max-width: 968px) {\r\n    font-size: 8px;\r\n  }\r\n  @media (max-width: 768px) {\r\n    font-size: 8px;\r\n  }\r\n`;\r\n\r\nconst StyledTh = styled.th`\r\n  padding: 12px;\r\n  text-align: left;\r\n  background-color: #f2f2f2;\r\n  border: none;\r\n  text-align: center;\r\n`;\r\n\r\nconst StyledTd = styled.td`\r\n  padding: 12px;\r\n  border: none;\r\n  text-align: center;\r\n`;\r\n\r\nconst StyledTotalContainer = styled.div`\r\n  border: 4px solid black;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin-top: 20px;\r\n`;\r\n\r\nconst StyledTotalLabel = styled.div`\r\n  font-weight: bold;\r\n  font-size: 18px;\r\n`;\r\n\r\nconst StyledTotalValue = styled.div`\r\n  font-weight: bold;\r\n  font-size: 24px;\r\n  margin-top: 8px;\r\n`;\r\n\r\nconst Table = () => {\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const filteredTags = post30daySorted\r\n    .filter((item) => item[0].toLowerCase().includes(searchTerm.toLowerCase()))\r\n    .slice(0, 10);\r\n  return (\r\n    <>\r\n      <StyledTotalContainer>\r\n        <StyledTotalLabel>Total Posts</StyledTotalLabel>\r\n        <StyledTotalValue>{totalItemsAll}</StyledTotalValue>\r\n      </StyledTotalContainer>\r\n      <br />\r\n      <br />\r\n      <br />\r\n\r\n      <Widget\r\n        src=\"marketplacebos.near/widget/TrendingPost.ChartPost\"\r\n        props={{\r\n          dataP: dataP,\r\n          labelP: labelP,\r\n          backgroundcolorP: backgroundcolorP,\r\n          borderColorP: borderColorP,\r\n          labelN: labelN,\r\n        }}\r\n      />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n\r\n      <StyledTable>\r\n        <thead>\r\n          <tr>\r\n            <StyledTh>TAG NAME</StyledTh>\r\n            <StyledTh>TOTAL POST</StyledTh>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {post30daySorted &&\r\n            post30daySorted\r\n              .filter((item, index) => index <= 100)\r\n              .map((item) => (\r\n                <tr>\r\n                  <StyledTd>\r\n                    <a\r\n                      href={`https://near.social/marketplacebos.near/widget/TrendingPost.TableValue?hashtag=${item[0].replace(\r\n                        \"#\",\r\n                        \"\"\r\n                      )}`}\r\n                    >\r\n                      {item[0]}\r\n                    </a>\r\n                  </StyledTd>\r\n                  <StyledTd>{item[1]}</StyledTd>\r\n                </tr>\r\n              ))}\r\n        </tbody>\r\n      </StyledTable>\r\n    </>\r\n  );\r\n};\r\n\r\nreturn (\r\n  <>\r\n    <Table />\r\n  </>\r\n);\r\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/marketplacebos.near/widget/TrendingPost.ChartValueAll", "fact_widget_deployments_id": "87e0627e8173554e5e1338fc5a8233e8", "inserted_timestamp": "2023-12-04T19:43:18.560Z", "modified_timestamp": "2023-12-20T03:22:11.422Z", "__row_index": 12}