{"tx_hash": "2W4tPba21jwkx4aJT93FK74PBhMGkkMzL4jTVDLkhYN4", "action_id_social": "G3kXTYK93jLcBPVWW9B8UkFbfKeSZLHzctX4hir6Pi2N-0-widget", "block_id": 105985670, "block_timestamp": "2023-11-18T15:24:27.511Z", "signer_id": "marketplacebos.near", "widget_name": "CardMain.CardMini", "source_code": "const [isWhiteBackground1, setIsWhiteBackground1] = useState(true);\nconst [isToggleOn1, setIsToggleOn1] = useState(true);\n\nconst toggleButton1 = () => {\n  setIsToggleOn1((prevState) => !prevState);\n  setIsWhiteBackground1((prevState) => !prevState);\n};\n\nconst CenteredCardWrapper = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n\nconst Card = styled.div`\n  padding: 30px;\n  background: ${(props) => (props.isWhiteBackground ? \"#000000\" : \"#fffff\")};\n  width: 280px;\n  height: 270px;\n  display: flex;\n  flex-direction: column;\n  border: 0.1rem solid #000000;\n  border-radius: 1em;\n  overflow: hidden;\n  position: relative;\n  justify-content: center;\n  align-items: center;\n  transition: background 500ms;\n`;\n\nconst CardBody = styled.div`\n  width: 100%;\n  padding: 0.5rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst CardFooter = styled.div`\n  width: 100%;\n  padding: 0.5rem;\n  font-size: 1rem;\n  font-weight: bold;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst ToggleButton = styled.button`\n  font-family: inherit;\n  width: 1.6rem;\n  height: 1.6rem;\n  background-color: ${(props) => (props.isToggled ? \"black\" : \"black\")};\n  border: none;\n  border-radius: 50%;\n  cursor: pointer;\n  position: absolute;\n  top: 10px; /* \u0110i\u1ec1u ch\u1ec9nh v\u1ecb tr\u00ed theo y */\n  right: 10px; /* \u0110i\u1ec1u ch\u1ec9nh v\u1ecb tr\u00ed theo x */\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: bold;\n  color: white;\n  transition: background-color 300ms;\n  \n`;\n\nconst SunIcon = (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 24 24\"\n    fill=\"currentColor\"\n    className=\"w-6 h-6\"\n  >\n    <path d=\"M12 2.25a.75.75 0 01.75.75v2.25a.75.75 0 01-1.5 0V3a.75.75 0 01.75-.75zM7.5 12a4.5 4.5 0 119 0 4.5 4.5 0 01-9 0zM18.894 6.166a.75.75 0 00-1.06-1.06l-1.591 1.59a.75.75 0 101.06 1.061l1.591-1.59zM21.75 12a.75.75 0 01-.75.75h-2.25a.75.75 0 010-1.5H21a.75.75 0 01.75.75zM17.834 18.894a.75.75 0 001.06-1.06l-1.59-1.591a.75.75 0 10-1.061 1.06l1.59 1.591zM12 18a.75.75 0 01.75.75V21a.75.75 0 01-1.5 0v-2.25A.75.75 0 0112 18zM7.758 17.303a.75.75 0 00-1.061-1.06l-1.591 1.59a.75.75 0 001.06 1.061l1.591-1.59zM6 12a.75.75 0 01-.75.75H3a.75.75 0 010-1.5h2.25A.75.75 0 016 12zM6.697 7.757a.75.75 0 001.06-1.06l-1.59-1.591a.75.75 0 00-1.061 1.06l1.59 1.591z\" />\n  </svg>\n);\n\nconst MoonIcon = (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    fill=\"none\"\n    viewBox=\"0 0 24 24\"\n    strokeWidth={1.5}\n    stroke=\"currentColor\"\n    className=\"w-6 h-6\"\n  >\n    <path\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      d=\"M21.752 15.002A9.718 9.718 0 0118 15.75c-5.385 0-9.75-4.365-9.75-9.75 0-1.33.266-2.597.748-3.752A9.753 9.753 0 003 11.25C3 16.635 7.365 21 12.75 21a9.753 9.753 0 009.002-5.998z\"\n    />\n  </svg>\n);\n\nconst ButtonCopy = styled.button`\n  width: 5rem;\n  height: 30px;\n  font-size: 12px;\n  background-color: black;\n  border: none;\n  border-radius: 24px;\n  cursor: pointer;\n  position: absolute;\n  bottom: 10px;\n  right: 10px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: bold;\n  color: white;\n\n`;\n\nconst TextCopy = styled.span`\n  width: 5rem;\n  height: 30px;\n  font-size: 12px;\n  background-color: black;\n  border: none;\n  border-radius: 24px;\n  cursor: pointer;\n  bottom: 10px;\n  right: 10px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: bold;\n  color: white;\n`;\n\nconst [isToggleSave1, setIsToggleSave1] = useState(false);\nconst toggleSaveButton1 = () => {\n  setIsToggleSave1((prevState) => !prevState); // Toggle the save button state\n};\n\nconst SaveButton = styled.button`\n  width: 2.3rem;\n  height: 30px;\n  background-color: ${(props) => (props.isToggled ? \"#f79a55\" : \"black\")};\n  border: none;\n  border-radius: 24px;\n  cursor: pointer;\n  position: absolute;\n  bottom: 10px; /* Adjust the vertical position */\n  left: 10px; /* Adjust the horizontal position */\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: bold;\n  color: white;\n  transition: background-color 300ms;\n`;\n\nconst ViewButton = styled.button`\n  width: 5rem;\n  height: 30px;\n  font-size: 12px;\n  background-color: black;\n  border: none;\n  border-radius: 24px;\n  cursor: pointer;\n  position: absolute;\n  bottom: 10px; \n  right: 100px; \n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: bold;\n  color: white;\n\n`;\n\nconst Edit = styled.button`\n  width: 5rem;\n  height: 30px;\n  font-size: 12px;\n  background-color: black;\n  border: none;\n  border-radius: 24px;\n  cursor: pointer;\n  position: absolute;\n  top: 10px;\n  right: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: bold;\n  color: white;\n   &:hover {\n    background-color: black;\n  }\n`;\n\nconst SaveIcon = (\n  <i\n    className={\n      isToggleSave1 ? \"bi bi-bookmark-heart-fill\" : \"bi bi-bookmark-heart\"\n    }\n  ></i>\n);\n\nconst copyBtn = props.copyBtn || \"Copy Button\";\nconst component = props.component || \"\";\nconst detailLink = props.detailLink || \"notfound\";\nconst text = props.text || \"\";\nconst edit = props.edit || \"notfound\";\n\nreturn (\n  <Card isWhiteBackground={!isWhiteBackground1}>\n    <CardBody>\n      <CenteredCardWrapper>{component}</CenteredCardWrapper>\n      <SaveButton onClick={toggleSaveButton1} isToggled={isToggleSave1}>\n        {SaveIcon}\n        {save}\n      </SaveButton>\n      <a href={edit}>\n        <Edit\n          type=\"button\"\n          className=\"btn btn-primary\"\n          data-bs-toggle=\"modal\"\n          data-bs-target=\"#exampleModal\"\n        >\n          Edit <i className=\"bi bi-pencil-square\"></i>\n        </Edit>\n      </a>\n      <a href={detailLink}>\n        <ViewButton>\n          Code<i className=\"bi bi-code-slash\"></i>\n        </ViewButton>\n      </a>\n      <ToggleButton onClick={toggleButton1} isToggled={isToggleOn1}>\n        {isToggleOn1 ? SunIcon : MoonIcon}\n      </ToggleButton>\n      <ButtonCopy\n        placement=\"auto\"\n        overlay={\n          <Tooltip>{state.copied ? \"Copied!\" : \"Copy to clipboard\"}</Tooltip>\n        }\n      >\n        <TextCopy\n          onClick={() => {\n            clipboard.writeText(copyBtn).then(() => {\n              State.update({ copied: true });\n              if (props.onCopy) {\n                props.onCopy(copyBtn);\n              }\n            });\n          }}\n        >\n          Copy\n          {state.copied ? (\n            <>\n              {props.copiedIcon ?? (\n                <i className=\"bi bi-clipboard2-check-fill\" />\n              )}{\" \"}\n              {props.copiedLabel ?? props.label}\n            </>\n          ) : (\n            <>\n              {props.clipboardIcon ?? <i className=\"bi bi-clipboard\" />}{\" \"}\n              {props.label}\n            </>\n          )}\n        </TextCopy>\n      </ButtonCopy>\n    </CardBody>\n  </Card>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/marketplacebos.near/widget/CardMain.CardMini", "fact_widget_deployments_id": "340d59d0ed97f8f2ee2dd5ce85afb494", "inserted_timestamp": "2023-11-18T17:26:02.196Z", "modified_timestamp": "2023-11-18T17:26:02.196Z", "__row_index": 12}