{"tx_hash": "GLsCVfNJVw4GeqPrwXhRk7ieso4EbuQ5ak2n7dN6q4v", "action_id_social": "3wWkyXWreCzv9g6ssrrW6kWj88ToP5GG43w9vJTBgkA8-0-widget", "block_id": 104320880, "block_timestamp": "2023-10-27T14:35:51.662Z", "signer_id": "marketplacebos.near", "widget_name": "CardMain.CardMini", "source_code": "const [isWhiteBackground1, setIsWhiteBackground1] = useState(true);\nconst [isToggleOn1, setIsToggleOn1] = useState(true);\n\nconst toggleButton1 = () => {\n  setIsToggleOn1((prevState) => !prevState);\n  setIsWhiteBackground1((prevState) => !prevState);\n};\n\nconst CenteredCardWrapper = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n\nconst Card = styled.div`\n  padding: 30px;\n  background: ${(props) => (props.isWhiteBackground ? \"#000000\" : \"#fffff\")};\n  width: 280px;\n  height: 270px;\n  display: flex;\n  flex-direction: column;\n  border: 0.1rem solid rgba(0, 0, 0, 0.3);\n  border-radius: 1em;\n  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.1);\n  overflow: hidden;\n  position: relative;\n  justify-content: center;\n  align-items: center;\n  transition: background 500ms;\n`;\n\nconst CardBody = styled.div`\n  width: 100%;\n  padding: 0.5rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst CardFooter = styled.div`\n  width: 100%;\n  padding: 0.5rem;\n  font-size: 1rem;\n  font-weight: bold;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst ToggleButton = styled.button`\n  font-family: inherit;\n  width: 1.6rem;\n  height: 1.6rem;\n  background-color: ${(props) => (props.isToggled ? \"#f79a55\" : \"#0a1929ff\")};\n  border: none;\n  border-radius: 50%;\n  cursor: pointer;\n  position: absolute;\n  top: 10px; /* \u0110i\u1ec1u ch\u1ec9nh v\u1ecb tr\u00ed theo y */\n  right: 10px; /* \u0110i\u1ec1u ch\u1ec9nh v\u1ecb tr\u00ed theo x */\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: bold;\n  color: white;\n  transition: background-color 300ms;\n  \n`;\n\nconst SunIcon = (\n  <svg\n    viewBox=\"0 0 16 16\"\n    fill=\"currentColor\"\n    width=\"23\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M8 12a4 4 0 1 0 0-8 4 4 0 0 0 0 8zM8 0a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-1 0v-2A.5.5 0 0 1 8 0zm0 13a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-1 0v-2A.5.5 0 0 1 8 13zm8-5a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1 0-1h2a.5.5 0 0 1 .5.5zM3 8a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1 0-1h2A.5.5 0 0 1 3 8zm10.657-5.657a.5.5 0 0 1 0 .707l-1.414 1.415a.5.5 0 1 1-.707-.708l1.414-1.414a.5.5 0 0 1 .707 0zm-9.193 9.193a.5.5 0 0 1 0 .707L3.05 13.657a.5.5 0 0 1-.707-.707l1.414-1.414a.5.5 0 0 1 .707 0zm9.193 2.121a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.414 1.414a.5.5 0 0 1 0 .707zM4.464 4.465a.5.5 0 0 1-.707 0L2.343 3.05a.5.5 0 1 1 .707-.707l1.414 1.414a.5.5 0 0 1 0 .708z\"\n      color=\"red\"\n    ></path>\n  </svg>\n);\n\nconst MoonIcon = (\n  <svg\n    viewBox=\"0 0 16 16\"\n    fill=\"currentColor\"\n    width=\"23\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M6 .278a.768.768 0 0 1 .08.858 7.208 7.208 0 0 0-.878 3.46c0 4.021 3.278 7.277 7.318 7.277.527 0 1.04-.055 1.533-.16a.787.787 0 0 1 .81.316.733.733 0 0 1-.031.893A8.349 8.349 0 0 1 8.344 16C3.734 16 0 12.286 0 7.71 0 4.266 2.114 1.312 5.124.06A.752.752 0 0 1 6 .278z\"\n      color=\"orange\"\n    ></path>\n    <path\n      d=\"M10.794 3.148a.217.217 0 0 1 .412 0l.387 1.162c.173.518.579.924 1.097 1.097l1.162.387a.217.217 0 0 1 0 .412l-1.162.387a1.734 1.734 0 0 0-1.097 1.097l-.387 1.162a.217.217 0 0 1-.412 0l-.387-1.162A1.734 1.734 0 0 0 9.31 6.593l-1.162-.387a.217.217 0 0 1 0-.412l1.162-.387a1.734 1.734 0 0 0 1.097-1.097l.387-1.162zM13.863.099a.145.145 0 0 1 .274 0l.258.774c.115.346.386.617.732.732l.774.258a.145.145 0 0 1 0 .274l-.774.258a1.156 1.156 0 0 0-.732.732l-.258.774a.145.145 0 0 1-.274 0l-.258-.774a1.156 1.156 0 0 0-.732-.732l-.774-.258a.145.145 0 0 1 0-.274l.774-.258c.346-.115.617-.386.732-.732L13.863.1z\"\n      color=\"black\"\n    ></path>\n  </svg>\n);\n\nconst Edit = styled.button`\n  width: 5rem;\n  height: 30px;\n  font-size: 12px;\n  background-color: #0a1929ff;\n  border: none;\n  border-radius: 24px;\n  cursor: pointer;\n  position: absolute;\n  top: 10px;\n  right: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: bold;\n  color: white;\n   &:hover {\n    background-color: #0a1929ff;\n  }\n`;\n\nconst ButtonCopy = styled.button`\n  width: 5rem;\n  height: 30px;\n  font-size: 12px;\n  background-color: #0a1929ff;\n  border: none;\n  border-radius: 24px;\n  cursor: pointer;\n  position: absolute;\n  bottom: 10px;\n  right: 10px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: bold;\n  color: white;\n   &:hover {\n    background-color: #0a1929ff;\n  }\n`;\n\nconst TextCopy = styled.span`\n  margin-left:10px;\n  font-size: 12px;\n  font: bold;\n  width: 70%;\n  height: 80%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: white;\n  background-color: #0a1929ff;\n`;\n\nconst [isToggleSave1, setIsToggleSave1] = useState(false);\nconst toggleSaveButton1 = () => {\n  setIsToggleSave1((prevState) => !prevState); // Toggle the save button state\n};\n\nconst SaveButton = styled.button`\n  width: 2.3rem;\n  height: 30px;\n  background-color: ${(props) => (props.isToggled ? \"#f79a55\" : \"#0a1929ff\")};\n  border: none;\n  border-radius: 24px;\n  cursor: pointer;\n  position: absolute;\n  bottom: 10px; /* Adjust the vertical position */\n  left: 10px; /* Adjust the horizontal position */\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: bold;\n  color: white;\n  transition: background-color 300ms;\n`;\n\nconst ViewButton = styled.button`\n  width: 5rem;\n  height: 30px;\n  font-size: 12px;\n  background-color: #0a1929ff;\n  border: none;\n  border-radius: 24px;\n  cursor: pointer;\n  position: absolute;\n  bottom: 10px; /* Adjust the vertical position */\n  right: 100px; /* Adjust the horizontal position */\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: bold;\n  color: white;\n   &:hover {\n    background-color: #0a1929ff;\n  }\n`;\n\nconst Modal = styled.div`\n  &.modal.fade {\n    background-color: rgba(0, 0, 0, 0.5); // \u0110\u1eb7t m\u00e0u n\u1ec1n m\u1edd \u0111en\n  }\n`;\n\nconst ModalHeader = styled.div`\n  &.modal-header {\n    background-color: #000; // \u0110\u1eb7t m\u00e0u n\u1ec1n \u0111en cho header\n  }\n`;\n\nconst ModalTitle = styled.h1`\n  &.modal-title.fs-5 {\n    color: #fff; // \u0110\u1eb7t m\u00e0u ch\u1eef tr\u1eafng cho title\n  }\n`;\n\nconst CloseButton = styled.button`\n  &.btn-close {\n    color: #000; // \u0110\u1eb7t m\u00e0u ch\u1eef \u0111en cho n\u00fat close\n  }\n`;\n\nconst SaveChangesButton = styled.button`\n  &.btn.btn-primary {\n    background-color: #ff0000; // \u0110\u1eb7t m\u00e0u \u0111\u1ecf cho n\u00fat \"Save Changes\"\n  }\n`;\n\n\nconst SaveIcon = (\n  <i\n    className={\n      isToggleSave1 ? \"bi bi-bookmark-heart-fill\" : \"bi bi-bookmark-heart\"\n    }\n  ></i>\n);\n\nconst copyBtn = props.copyBtn || \"Copy Button\";\nconst component = props.component || \"\";\nconst detailLink = props.detailLink || \"notfound\";\nconst edit = props.edit || \"Edit components\";\n\nconst [isEditing, setIsEditing] = useState(false);\nconst [editedContent, setEditedContent] = useState(edit);\n\nconst handleEditClick = () => {\n  setIsEditing(true);\n};\n\nconst handleSaveClick = () => {\n  setIsEditing(false);\n  setEditedContent(props.edit);\n};\n\nreturn (\n  <Card isWhiteBackground={!isWhiteBackground1}>\n    <CardBody>\n      <CenteredCardWrapper>{component}</CenteredCardWrapper>\n      <SaveButton onClick={toggleSaveButton1} isToggled={isToggleSave1}>\n        {SaveIcon}\n        {save}\n      </SaveButton>\n      <a href={detailLink}>\n        <ViewButton>\n          Code<i className=\"bi bi-code-slash\"></i>\n        </ViewButton>\n      </a>\n      <Edit\n        type=\"button\" className=\"btn btn-primary\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\"\n      >\n        Edit <i className=\"bi bi-pencil-square\"></i>\n      </Edit>\n           <Modal className=\"modal fade\" id=\"exampleModal\" tabIndex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n        <ModalHeader className=\"modal-header\">\n          <ModalTitle className=\"modal-title fs-5\" id=\"exampleModalLabel\">Modal title</ModalTitle>\n          <CloseButton type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></CloseButton>\n        </ModalHeader>\n        <div className=\"modal-body\">\n          <p>hello</p>\n        </div>\n        <div className=\"modal-footer\">\n          <button type=\"button\" className=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n          <SaveChangesButton type=\"button\" className=\"btn btn-primary\">Save changes</SaveChangesButton>\n        </div>\n      </Modal>\n      <ToggleButton onClick={toggleButton1} isToggled={isToggleOn1}>\n        {isToggleOn1 ? SunIcon : MoonIcon}\n      </ToggleButton>\n      <ButtonCopy\n        placement=\"auto\"\n        overlay={\n          <Tooltip>{state.copied ? \"Copied!\" : \"Copy to clipboard\"}</Tooltip>\n        }\n      >\n        <TextCopy\n          onClick={() => {\n            clipboard.writeText(copyBtn).then(() => {\n              State.update({ copied: true });\n              if (props.onCopy) {\n                props.onCopy(copyBtn);\n              }\n            });\n          }}\n        >\n          Copy\n          {state.copied ? (\n            <>\n              {props.copiedIcon ?? (\n                <i className=\"bi bi-clipboard2-check-fill\" />\n              )}{\" \"}\n              {props.copiedLabel ?? props.label}\n            </>\n          ) : (\n            <>\n              {props.clipboardIcon ?? <i className=\"bi bi-clipboard\" />}{\" \"}\n              {props.label}\n            </>\n          )}\n        </TextCopy>\n      </ButtonCopy>\n    </CardBody>\n  </Card>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/marketplacebos.near/widget/CardMain.CardMini", "fact_widget_deployments_id": "533428acd98ba8a3b445c3df3482407e", "inserted_timestamp": "2023-10-27T16:37:13.284Z", "modified_timestamp": "2023-10-27T16:37:13.284Z", "__row_index": 0}