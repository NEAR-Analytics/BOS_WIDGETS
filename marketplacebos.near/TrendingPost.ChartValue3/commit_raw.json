{"tx_hash": "5p5JnKGUxkzbuWkijLGxr3q7EZ3rwm5LVmEyKgp1cEVq", "action_id_social": "CpEctPLWN19JnCsRRmR2uySKobu44end3R4SR6GnRJYk-0-widget", "block_id": 107152625, "block_timestamp": "2023-12-04T18:00:11.700Z", "signer_id": "marketplacebos.near", "widget_name": "TrendingPost.ChartValue3", "source_code": "const findHashtags = (str) => {\n  const regexp = /\\B\\#\\w\\w+\\b/g;\n  let match;\n  let tags = [];\n  while ((match = regexp.exec(str)) !== null) {\n    tags.push(match[0]);\n  }\n  return tags;\n};\nconst respBlock = fetch(\"https://api.nearblocks.io/v1/stats\");\n\n// 3 days\nconst newBlock3Days = Math.round(\n  parseInt(respBlock.body.stats[0].block) -\n    (3 * 24 * 3600) / parseInt(respBlock.body.stats[0].avg_block_time)\n);\n\nlet BlockHeightPost3Days = [];\nconst getBlockHeight3daysPost = Social.index(\"post\", \"main\", {\n  from: newBlock3Days,\n  limit: 99999,\n});\nif (!getBlockHeight3daysPost) {\n  return \"Loading...\";\n}\ngetBlockHeight3daysPost.forEach((item) => {\n  BlockHeightPost3Days.push({\n    accountId: item.accountId,\n    blockHeight: item.blockHeight,\n  });\n});\n\n\nlet post3days = [];\nBlockHeightPost3Days.forEach((item) => {\n  const post = Social.get(`${item.accountId}/post/main`, item.blockHeight);\n  if (post) {\n    post3days.push(JSON.parse(post).text);\n  }\n});\n\nlet tagCount3Days = {};\npost3days.forEach((item) => {\n  const tags = findHashtags(item);\n  if (tags.length > 0) {\n    tags.forEach((tag) => {\n      if (tagCount3Days[tag]) {\n        tagCount3Days[tag] = tagCount3Days[tag] + 1;\n      } else {\n        tagCount3Days[tag] = 1;\n      }\n    });\n  }\n});\nlet entries3days = Object.entries(tagCount3Days);\nlet post3daySorted = entries3days.sort((b, a) => a[1] - b[1]);\n\nlet totalItems3Days = 0;\n\n// Sum the values in the day3PostSorted array\nfor (let i = 0; i < post3daySorted.length; i++) {\n  totalItems3Days += post3daySorted[i][1];\n}\n\nconst labelN = \"Top 10 trending tags on NEAR Social in 3 days\";\n\nconst backgroundcolorP = [\n  \"blue\",\n  \"blue\",\n  \"blue\",\n  \"blue\",\n  \"blue\",\n  \"blue\",\n  \"blue\",\n  \"blue\",\n  \"blue\",\n  \"blue\",\n  \"blue\",\n  \"blue\",\n  \"blue\",\n  \"blue\",\n  \"blue\",\n  \"blue\",\n  \"blue\",\n  \"blue\",\n  \"blue\",\n  \"blue\",\n];\n\nconst borderColorP = [\n  \"blue\",\n  \"blue\",\n  \"blue\",\n  \"blue\",\n  \"blue\",\n  \"blue\",\n  \"blue\",\n  \"blue\",\n  \"blue\",\n  \"blue\",\n  \"blue\",\n  \"blue\",\n  \"blue\",\n  \"blue\",\n  \"blue\",\n  \"blue\",\n  \"blue\",\n  \"blue\",\n  \"blue\",\n  \"blue\",\n];\n\nlet dataP = [];\nlet labelP = [];\n\n// Assuming allPostSorted has at least 20 items\nfor (let i = 0; i < 10; i++) {\n  if (post3daySorted[i]) {\n    dataP.push(post3daySorted[i][1]); // Assuming item[1] contains the data for dataP\n    labelP.push(post3daySorted[i][0]); // Assuming item[0] contains the data for labelP\n  }\n}\n\n// ... (rest of the code remains unchanged)\n\nconst StyledTable = styled.table`\n  width: 100%;\n  border-collapse: collapse;\n  margin-bottom: 20px;\n  border: none;\n  overflow: auto;\n  @media (max-width: 968px) {\n    font-size: 8px;\n  }\n  @media (max-width: 768px) {\n    font-size: 8px;\n  }\n`;\n\nconst StyledTh = styled.th`\n  padding: 12px;\n  text-align: left;\n  background-color: #f2f2f2;\n  border: none;\n  text-align: center;\n`;\n\nconst StyledTd = styled.td`\n  padding: 12px;\n  border: none;\n  text-align: center;\n`;\n\nconst StyledTotalContainer = styled.div`\n  border: 4px solid black;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 20px;\n`;\n\nconst StyledTotalLabel = styled.div`\n  font-weight: bold;\n  font-size: 18px;\n`;\n\nconst StyledTotalValue = styled.div`\n  font-weight: bold;\n  font-size: 24px;\n  margin-top: 8px;\n`;\n\nconst Table = () => {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  // Filtered tags based on the search term\n  // Limit to the top 10 filtered tags\n  return (\n    <>\n      <StyledTotalContainer>\n        <StyledTotalLabel>Total Posts</StyledTotalLabel>\n        <StyledTotalValue>{totalItems3Days}</StyledTotalValue>\n      </StyledTotalContainer>\n      <br />\n      <br />\n      <br />\n\n      <Widget\n        src=\"marketplacebos.near/widget/TrendingPost.ChartPost\"\n        props={{\n          dataP: dataP,\n          labelP: labelP,\n          backgroundcolorP: backgroundcolorP,\n          borderColorP: borderColorP,\n          labelN: labelN,\n        }}\n      />\n      <br />\n      <br />\n      <br />\n      <br />\n\n      <StyledTable>\n        <thead>\n          <tr>\n            <StyledTh>TAG NAME</StyledTh>\n            <StyledTh>TOTAL POST</StyledTh>\n          </tr>\n        </thead>\n        <tbody>\n          {post3daySorted &&\n            post3daySorted\n              .filter((item, index) => index <= 10)\n              .map((item) => (\n                <tr>\n                  <StyledTd>\n                    <a\n                      href={`https://near.social/marketplacebos.near/widget/TrendingPost.ChartValueProps?hashtag=${item[0].replace(\n                        \"#\",\n                        \"\"\n                      )}`}\n                    >\n                      {item[0]}\n                    </a>\n                  </StyledTd>\n                  <StyledTd>{item[1]}</StyledTd>\n                </tr>\n              ))}\n        </tbody>\n      </StyledTable>\n    </>\n  );\n};\n\nreturn (\n  <>\n    <Table />\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/marketplacebos.near/widget/TrendingPost.ChartValue3", "fact_widget_deployments_id": "e9d02f299c8a2f1967db3ba4b00b9cc5", "inserted_timestamp": "2023-12-04T19:50:18.063Z", "modified_timestamp": "2023-12-20T03:22:11.422Z", "__row_index": 16}