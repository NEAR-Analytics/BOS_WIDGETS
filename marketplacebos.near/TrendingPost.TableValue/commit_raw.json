{"tx_hash": "8uf2enKwMWxwTLr2aSaTHDE1271m6L9KBVBPGzFnph56", "action_id_social": "GKbtkbcusmeSdJmXKjURNkTrf96i1tfvNGkcfZSgH12b-0-widget", "block_id": 106818254, "block_timestamp": "2023-11-29T17:22:58.200Z", "signer_id": "marketplacebos.near", "widget_name": "TrendingPost.TableValue", "source_code": "const StyledButton = styled.button`\n  cursor: pointer;\n  border: none;\n  background: none;\n  transition: transform 0.2s;\n  &:hover {\n    transform: scale(1.25);\n  }\n  &:active {\n    transform: scale(1);\n  }\n`;\n\nconst StyledSVG = styled.svg`\n  width: 50px;\n  height: 50px;\n  fill: none; /* You can use fill instead of stroke in styled-components */\n  stroke: #4299e1; /* Replace with your desired color */\n`;\n\nconst respBlock = fetch(\"https://api.nearblocks.io/v1/stats\");\n\nconst newBlock = Math.round(\n  parseInt(respBlock.body.stats[0].block) -\n    (30 * 24 * 3600) / parseInt(respBlock.body.stats[0].avg_block_time)\n);\nconst newBlock3Days = Math.round(\n  parseInt(respBlock.body.stats[0].block) -\n    (3 * 24 * 3600) / parseInt(respBlock.body.stats[0].avg_block_time)\n);\nconst newBlock7Days = Math.round(\n  parseInt(respBlock.body.stats[0].block) -\n    (7 * 24 * 3600) / parseInt(respBlock.body.stats[0].avg_block_time)\n);\nconst allPost = Social.index(\"hashtag\", props.hashtag || \"near\", {\n  from: newBlock,\n  limit: 300,\n  order: \"asc\",\n});\n\nlet postEngagement = [];\n\nif (allPost.length > 0) {\n  allPost.forEach((item) => {\n    const allComment = Social.index(\n      \"comment\",\n      {\n        type: \"social\",\n        path: `${item.accountId}/post/main`,\n        blockHeight: item.blockHeight,\n      },\n      {\n        limit: 9999,\n        order: \"desc\",\n      }\n    );\n    const allLike = Social.index(\"like\", {\n      type: \"social\",\n      path: `${item.accountId}/post/main`,\n      blockHeight: item.blockHeight,\n    });\n    const allRepost = Social.index(\n      \"repost\",\n      {\n        type: \"social\",\n        path: `${item.accountId}/post/main`,\n        blockHeight: item.blockHeight,\n      },\n      {\n        limit: 9999,\n        order: \"desc\",\n      }\n    );\n\n    const allComment3Days = Social.index(\n      \"comment\",\n      {\n        type: \"social\",\n        path: `${item.accountId}/post/main`,\n        blockHeight: item.blockHeight,\n      },\n      {\n        from: newBlock3Days,\n        limit: 9999,\n        order: \"asc\",\n      }\n    );\n    const allLike3Days = Social.index(\n      \"like\",\n      {\n        type: \"social\",\n        path: `${item.accountId}/post/main`,\n        blockHeight: item.blockHeight,\n      },\n      {\n        from: newBlock3Days,\n        limit: 9999,\n        order: \"asc\",\n      }\n    );\n    const allRepost3Days = Social.index(\n      \"repost\",\n      {\n        type: \"social\",\n        path: `${item.accountId}/post/main`,\n        blockHeight: item.blockHeight,\n      },\n      { from: newBlock3Days, limit: 9999, order: \"asc\" }\n    );\n\n    const allComment7Days = Social.index(\n      \"comment\",\n      {\n        type: \"social\",\n        path: `${item.accountId}/post/main`,\n        blockHeight: item.blockHeight,\n      },\n      {\n        from: newBlock7Days,\n        limit: 9999,\n        order: \"asc\",\n      }\n    );\n    const allLike7Days = Social.index(\n      \"like\",\n      {\n        type: \"social\",\n        path: `${item.accountId}/post/main`,\n        blockHeight: item.blockHeight,\n      },\n      {\n        from: newBlock7Days,\n        limit: 9999,\n        order: \"asc\",\n      }\n    );\n    const allRepost7Days = Social.index(\n      \"repost\",\n      {\n        type: \"social\",\n        path: `${item.accountId}/post/main`,\n        blockHeight: item.blockHeight,\n      },\n      { from: newBlock7Days, limit: 9999, order: \"asc\" }\n    );\n\n    const res = fetch(\n      `https://api.near.social/time?blockHeight=${item.blockHeight}`\n    );\n    const dateCreated = res.body;\n\n    if (allComment.length + allLike.length + allRepost.length > 0) {\n      postEngagement.push({\n        accountId: item.accountId,\n        blockHeight: item.blockHeight,\n        allLike: allLike.length,\n        allComment: allComment.length,\n        allRepost: allRepost.length,\n        EP:\n          (allComment.length * 3 + allLike.length + allRepost.length * 2) /\n            Math.floor(\n              (Date.now() - new Date(dateCreated)) / 1000 / (3600 * 24)\n            ) || 0,\n        EP3D:\n          (allComment3Days.length * 3 +\n            allLike3Days.length +\n            allRepost3Days.length * 2) /\n            3 || 0,\n        EP7D:\n          (allComment7Days.length * 3 +\n            allLike7Days.length +\n            allRepost7Days.length * 2) /\n            7 || 0,\n        dateCreated: dateCreated,\n      });\n    }\n  });\n}\n\nconst compare = (b, a) => {\n  if (a.EP < b.EP) {\n    return -1;\n  }\n  if (a.EP > b.EP) {\n    return 1;\n  }\n  return 0;\n};\nconst sort = postEngagement.sort(compare);\n\nlet totalItems = 0;\nlet totalAccountPosts = 0;\nlet totalLikes = 0;\nlet totalComments = 0;\nlet totalReposts = 0;\n\n// Iterate over postEngagement array to count totals\npostEngagement.forEach((item) => {\n  totalItems += 1; // Assuming each item represents a post\n  totalAccountPosts += 1; // Assuming each item represents an account post\n  totalLikes += item.allLike || 0;\n  totalComments += item.allComment || 0;\n  totalReposts += item.allRepost || 0;\n});\n\nconst StyledTable = styled.table`\n  width: 100%;\n  border-collapse: collapse;\n  margin-bottom: 20px;\n  border: none;\n      font-size: 10px;\n\n  @media (max-width: 1268px) {\n    font-size: 8px;\n  }\n  @media (max-width: 768px) {\n    font-size: 8px;\n  }\n`;\n\nconst StyledTh = styled.th`\n  padding: 12px;\n  text-align: left;\n  background-color: #f2f2f2;\n  border: none;\n  text-align: center;\n`;\n\nconst StyledTd = styled.td`\n  padding: 12px;\n  border: none;\n  text-align: center;\n`;\n\nconst StyledContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 20px;\n  border: 4px solid black;\n   border-right: 2px solid black;\n  padding-right: 10px; \n  &:last-child {\n    border-right: none; \n  }\n  @media (min-width: 768px) {\n    flex-direction: row;\n    justify-content: space-around;\n  }\n`;\n\nconst StyledTotalContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  text-align: center;\n\n  @media (min-width: 768px) {\n    margin: 0 10px; /* Add some spacing between the two containers on wider screens */\n  }\n`;\n\nconst StyledTotalLabel = styled.div`\n  font-weight: bold;\n  font-size: 18px;\n`;\n\nconst StyledTotalValue = styled.div`\n  font-weight: bold;\n  font-size: 24px;\n  margin-top: 8px;\n`;\n\nconst Wap = styled.div`\n  padding: 30px;\n  align-items: center;\n  text-align: center;\n`;\n\nconst labelN = \"Top trending posts on NEAR Social\";\n\nconst backgroundcolorP = [\n  \"blue\",\n  \"blue\",\n  \"blue\",\n  \"blue\",\n  \"blue\",\n  \"blue\",\n  \"blue\",\n  \"blue\",\n  \"blue\",\n  \"blue\",\n  \"blue\",\n  \"blue\",\n  \"blue\",\n  \"blue\",\n  \"blue\",\n  \"blue\",\n  \"blue\",\n  \"blue\",\n  \"blue\",\n  \"blue\",\n  \"blue\",\n  \"blue\",\n  \"blue\",\n  \"blue\",\n  \"blue\",\n  \"blue\",\n  \"blue\",\n  \"blue\",\n  \"blue\",\n  \"blue\",\n  \"blue\",\n  \"blue\",\n];\n\nconst borderColorP = [\n  \"blue\",\n  \"blue\",\n  \"blue\",\n  \"blue\",\n  \"blue\",\n  \"blue\",\n  \"blue\",\n  \"blue\",\n  \"blue\",\n  \"blue\",\n  \"blue\",\n  \"blue\",\n  \"blue\",\n  \"blue\",\n  \"blue\",\n  \"blue\",\n  \"blue\",\n  \"blue\",\n  \"blue\",\n  \"blue\",\n  \"blue\",\n  \"blue\",\n  \"blue\",\n  \"blue\",\n  \"blue\",\n  \"blue\",\n  \"blue\",\n  \"blue\",\n  \"blue\",\n  \"blue\",\n  \"blue\",\n  \"blue\",\n];\n\nlet dataP = [];\nlet labelP = [];\n\n// Check if item.accountId is defined and not null\npostEngagement.forEach((item) => {\n  if (item.accountId) {\n    dataP.push(item.EP || 0); // Assuming EP is the ENCOURAGE POINT\n    labelP.push(\n      new Date(item.dateCreated).toLocaleString(\"en-GB\", {\n        hour12: false,\n      }) || \"\"\n    ); // Assuming dateCreated is the date\n  }\n});\n// Check if item.accountId is defined and not null\n\nconst Table = () => {\n  return (\n    <>\n      <Wap>\n        <StyledContainer>\n          <StyledTotalContainer>\n            <StyledTotalLabel>Total Posts</StyledTotalLabel>\n            <StyledTotalValue>{totalItems}</StyledTotalValue>\n          </StyledTotalContainer>\n          <StyledTotalContainer>\n            <StyledTotalLabel>Total Account Posts</StyledTotalLabel>\n            <StyledTotalValue>{totalAccountPosts}</StyledTotalValue>\n          </StyledTotalContainer>\n          <StyledTotalContainer>\n            <StyledTotalLabel>Total Likes</StyledTotalLabel>\n            <StyledTotalValue>{totalLikes}</StyledTotalValue>\n          </StyledTotalContainer>\n          <StyledTotalContainer>\n            <StyledTotalLabel>Total Comments</StyledTotalLabel>\n            <StyledTotalValue>{totalComments}</StyledTotalValue>\n          </StyledTotalContainer>\n          <StyledTotalContainer>\n            <StyledTotalLabel>Total Reposts</StyledTotalLabel>\n            <StyledTotalValue>{totalReposts}</StyledTotalValue>\n          </StyledTotalContainer>\n        </StyledContainer>\n        <br />\n        <br />\n        <br />\n        <br />\n        <Widget\n          src=\"marketplacebos.near/widget/TrendingPost.ChartPost\"\n          props={{\n            dataP: dataP,\n            labelP: labelP,\n            backgroundcolorP: backgroundcolorP,\n            borderColorP: borderColorP,\n            labelN: labelN,\n          }}\n        />\n        <br />\n        <br />\n        <div>Trending Tag: <a href={`https://near.social/?hashtag=${props.hashtag || \"near\"}`}>{props.hashtag || \"near\"}</a>\n        </div>\n        <br />\n\n        <br />\n        <StyledTable>\n          <thead>\n            <tr>\n              <StyledTh>POST ID</StyledTh>\n              <StyledTh>ACCOUNT_ID</StyledTh>\n              <StyledTh>ENCOURAGE POINT</StyledTh>\n              <StyledTh>ENCOURAGE POINT_3Days</StyledTh>\n              <StyledTh>ENCOURAGE POINT_7Days</StyledTh>\n              <StyledTh>TOTAL LIKES</StyledTh>\n              <StyledTh>TOTAL COMMENTS</StyledTh>\n              <StyledTh>TOTAL REPOSTS</StyledTh>\n              <StyledTh>CREATED</StyledTh>\n            </tr>\n          </thead>\n          <tbody>\n            {sort.map((item) => (\n              <tr>\n                <StyledTd scope=\"row\">\n                  <a\n                    href={`https://near.social/mob.near/widget/MainPage.N.Post.Page?accountId=${item.accountId}&blockHeight=${item.blockHeight}`}\n                  >\n                    {item.blockHeight}\n                  </a>\n                </StyledTd>\n                <StyledTd maxWidth=\"100px\">\n                  <a\n                    href={`https://near.social/mob.near/widget/ProfilePage?accountId=${\n                      typeof item.accountId === \"string\" &&\n                      item.accountId.includes(\".near\")\n                        ? item.accountId\n                        : typeof item.accountId === \"string\" &&\n                          item.accountId.slice(0, 7) +\n                            \"...\" +\n                            item.accountId.slice(\n                              item.accountId.length - 10,\n                              item.accountId.length - 1\n                            )\n                    }`}\n                  >\n                    {typeof item.accountId === \"string\" &&\n                    item.accountId.includes(\".near\")\n                      ? item.accountId\n                      : typeof item.accountId === \"string\" &&\n                        item.accountId.slice(0, 7) +\n                          \"...\" +\n                          item.accountId.slice(\n                            item.accountId.length - 10,\n                            item.accountId.length - 1\n                          )}\n                  </a>\n                </StyledTd>\n                <StyledTd>{item.EP && item.EP.toFixed(4)}</StyledTd>\n                <StyledTd>{item.EP3D && item.EP3D.toFixed(4)}</StyledTd>\n                <StyledTd>{item.EP7D && item.EP7D.toFixed(4)}</StyledTd>\n                <StyledTd>{item.allLike}</StyledTd>\n                <StyledTd>{item.allComment}</StyledTd>\n                <StyledTd>{item.allRepost}</StyledTd>\n                <StyledTd>\n                  {new Date(item.dateCreated).toLocaleString(\"en-GB\", {\n                    hour12: false,\n                  })}\n                </StyledTd>\n              </tr>\n            ))}\n          </tbody>\n        </StyledTable>\n      </Wap>\n      <a href=\"https://near.social/trendingpostbos.near/widget/Index\">\n        <StyledButton title=\"Go Back\">\n          <StyledSVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n            <path\n              strokeLinejoin=\"round\"\n              strokeLinecap=\"round\"\n              strokeWidth=\"1.5\"\n              d=\"M11 6L5 12M5 12L11 18M5 12H19\"\n            />\n          </StyledSVG>\n        </StyledButton>\n        Back to data tag\n      </a>\n    </>\n  );\n};\nreturn (\n  <>\n    <Table />\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/marketplacebos.near/widget/TrendingPost.TableValue", "fact_widget_deployments_id": "ba9894b40e92348e1a1540550f6f637b", "inserted_timestamp": "2023-11-29T19:29:56.947Z", "modified_timestamp": "2023-12-20T00:36:59.366Z", "__row_index": 21}