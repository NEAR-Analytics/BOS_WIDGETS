{"tx_hash": "2SD56SLKfRBC3KcXKGMmaDitPNdEEgyjdfw9QrFEVYEC", "action_id_social": "7eN2PZd1B6qMDyfSBDEN6eEGKKZSyQtM3q4AMT9WJ2VC-0-widget", "block_id": 121379800, "block_timestamp": "2024-06-17T18:02:48.592Z", "signer_id": "chatter.cheddar.near", "widget_name": "Cheddar.ArticleHistory.Handler", "source_code": "//Cheddar.ArticleHistory.Handler\nconst addressForArticles = 'wikiTest2Article'\n\nconst { articleId, isTest, baseActions, kanbanColumns, widgets, versions } =\n    props\n\nState.init({\n    selectedTab: 'code',\n    selectedBlockHeight: null,\n})\n\n//TODO Need the function getArticlesVersions in the lib.articles\n\nif (props.count) props.count(versions.length)\n\nif (!state.selectedBlockHeight && versions.length > 0)\n    state.selectedBlockHeight = versions[0].blockHeight\n\nconst renderBlockChangesLink = (version) => {\n    if (!version) return <>Loading...</>\n\n    const timeLastEdit = new Date(version.value.metadata.lastEditTimestamp)\n\n    return (\n        <div>\n            <button\n                className={`list-group-item list-group-item-action ${\n                    state.selectedBlockHeight != version.blockHeight\n                        ? ''\n                        : 'list-group-item-info'\n                }`}\n                onClick={() => {\n                    State.update({ selectedBlockHeight: version.blockHeight })\n                }}\n            >\n                #{version.blockHeight} *{' '}\n                {timeLastEdit.toDateString() +\n                    ' ' +\n                    timeLastEdit.toLocaleTimeString()}\n            </button>\n        </div>\n    )\n}\n\nfunction renderWidgetCode(blockHeight) {\n    const currentVersionDisplayed = versions.find(\n        (version) => version.blockHeight === blockHeight\n    )\n    const index = versions.findIndex((el) => el.blockHeight === blockHeight)\n    const prevBlockHeightObject = versions[index + 1]\n    return (\n        <Widget\n            style={{ minHeight: '200px' }}\n            key={blockHeight}\n            src={widgets.views.editableWidgets.articleHistoryFirstContainer}\n            props={{\n                widgets,\n                pathToCurrentArticle: `${currentVersionDisplayed.metadata.author}/${addressForArticles}/main`,\n                currentBlockHeight: blockHeight,\n                currentVersionData: currentVersionDisplayed,\n                allVersionsData: versions,\n                pathToPrevArticle: `${prevBlockHeightObject.metadata.author}/${addressForArticles}/main`,\n                prevBlockHeight: prevBlockHeightObject.blockHeight,\n            }}\n        />\n    )\n}\n\nfunction blockHeightToWidgetRender(blockHeight, allArticles) {\n    const index = versions.findIndex((el) => el.blockHeight === blockHeight)\n    return <Markdown text={allArticles[index].value.articleData.body} />\n}\n\nfunction articleHistoryHasndlerStateUpdate(obj) {\n    State.update(obj)\n}\n\n//styles forked from calebjacob.near/widget/Activity\nconst Tabs = styled.div`\n    display: flex;\n    padding: 0 12px;\n    height: 48px;\n    border-bottom: 1px solid #eceef0;\n`\n\nconst TabsButton = styled.button`\n    font-weight: 400;\n    font-size: 14px;\n    line-height: 17px;\n    padding: 0 12px;\n    position: relative;\n    color: ${(p) => (p.selected ? '#11181C' : '#687076')};\n    background: none;\n    border: none;\n    outline: none;\n\n    &:hover {\n        color: #11181c;\n    }\n\n    &::after {\n        content: '';\n        display: ${(p) => (p.selected ? 'block' : 'none')};\n        position: absolute;\n        bottom: 0;\n        left: 12px;\n        right: 12px;\n        height: 3px;\n        background: #0091ff;\n    }\n`\n\nreturn (\n    <>\n        <div className=\"mt-2\">\n            <h3 className=\"text-center\">Article History</h3>\n            {!versions ? (\n                <div>incorrent widget path</div>\n            ) : (\n                <div>\n                    <div div className=\"card mb-3\">\n                        <h3 className=\"card-header\">\n                            {versions.length} Commits\n                        </h3>\n                        <div className=\"list-group\">\n                            {versions\n                                .slice(0, 5)\n                                .map((height) =>\n                                    renderBlockChangesLink(height)\n                                )}\n                            <div className=\"collapse\" id=\"collapseExample\">\n                                {versions\n                                    .slice(5)\n                                    .map((height) =>\n                                        renderBlockChangesLink(height)\n                                    )}\n                            </div>\n                            {versions.length > 5 && (\n                                <button\n                                    className=\"list-group-item active\"\n                                    type=\"button\"\n                                    data-bs-toggle=\"collapse\"\n                                    data-bs-target=\"#collapseExample\"\n                                    aria-expanded=\"false\"\n                                    aria-controls=\"collapseExample\"\n                                >\n                                    Show all\n                                </button>\n                            )}\n                        </div>\n                    </div>\n\n                    <Tabs>\n                        <TabsButton\n                            type=\"button\"\n                            onClick={() =>\n                                State.update({\n                                    selectedTab: 'code',\n                                })\n                            }\n                            selected={state.selectedTab === 'code'}\n                        >\n                            Code\n                        </TabsButton>\n\n                        <TabsButton\n                            type=\"button\"\n                            onClick={() =>\n                                State.update({\n                                    selectedTab: 'render',\n                                })\n                            }\n                            selected={state.selectedTab === 'render'}\n                        >\n                            Render\n                        </TabsButton>\n                    </Tabs>\n\n                    {state.selectedTab === 'code' && (\n                        <div>{renderWidgetCode(state.selectedBlockHeight)}</div>\n                    )}\n\n                    {state.selectedTab === 'render' && (\n                        <div>\n                            {blockHeightToWidgetRender(\n                                state.selectedBlockHeight,\n                                versions\n                            )}\n                        </div>\n                    )}\n                </div>\n            )}\n        </div>\n    </>\n)\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/chatter.cheddar.near/widget/Cheddar.ArticleHistory.Handler", "fact_widget_deployments_id": "4505f7533762df53ebddef981993ef46", "inserted_timestamp": "2024-06-17T19:54:47.895Z", "modified_timestamp": "2024-06-17T19:54:47.895Z", "__row_index": 1}