{"tx_hash": "2i9KG6oDaXBoZxLowiqQP6QF2yntVx4KKmi6bPvcc4oh", "action_id_social": "2HeWP2qX3HCpsgbexzkWYw9Wfb5apQuEtnYZ9ovyEX6G-0-widget", "block_id": 120922294, "block_timestamp": "2024-06-11T10:21:10.019Z", "signer_id": "chatter.cheddar.near", "widget_name": "Cheddar.Forum.AllArticlesList", "source_code": "// Cheddar.Forum.AllArticlesList\nconst { arrayIncludesIgnoreCase } = VM.require(\n    'chatter.cheddar.near/widget/lib.strings'\n) || { arrayIncludesIgnoreCase: () => {} }\n\nconst { HumanityWrapperButton } = VM.require(\n    'chatter.cheddar.near/widget/lib.nadaBot'\n) || { HumanityWrapperButton: () => <></> }\n\n//===============================================INITIALIZATION=====================================================\n\nlet {\n    isTest,\n    stateUpdate,\n    articlesToRender,\n    tabs,\n    widgets,\n    addressForArticles,\n    handleFilterArticles,\n    handleOpenArticle,\n    authorForWidget,\n    initialCreateState,\n    editArticleData,\n    handleEditArticle,\n    showCreateArticle,\n    handleShareButton,\n    handleShareSearch,\n    loggedUserHaveSbt,\n    filterBy,\n    baseActions,\n    handleOnCommitArticle,\n    sharedSearchInputValue,\n    category,\n    sharedData,\n} = props\n\nif (!articlesToRender) return <></>\n\nconst [searchInputValue, setSearchInputValue] = useState(\n    sharedSearchInputValue ?? ''\n)\n\nfunction filterArticlesBySearch(articles, searchInputValue) {\n    if (!searchInputValue || searchInputValue === '') return articles\n    return articles.filter((article) => {\n        const { title, body } = article.value.articleData\n        const { author } = article.value.metadata\n        const arr = [title, body, author]\n        if (arr.some((item) => item === undefined)) return false\n\n        return arrayIncludesIgnoreCase(arr, searchInputValue)\n    })\n}\n\nconst articlesFilteredBySearch = filterArticlesBySearch(\n    articlesToRender,\n    searchInputValue\n)\n\nconst fiveDaysTimeLapse = 5 * 24 * 60 * 60 * 1000\nconst newestArticlesWithUpVotes = articlesFilteredBySearch.filter(\n    (article) =>\n        article.value.metadata.lastEditTimestamp >\n        Date.now() - fiveDaysTimeLapse\n)\n// .sort((a, b) => b.timeLastEdit - a.timeLastEdit);\n\nconst olderArticlesWithUpVotes = articlesFilteredBySearch.filter(\n    (article) =>\n        article.value.metadata.lastEditTimestamp <\n        Date.now() - fiveDaysTimeLapse\n)\n// .sort((a, b) => b.upVotes.length - a.upVotes.length);\n\nconst sortedArticlesToRender = [\n    ...newestArticlesWithUpVotes,\n    ...olderArticlesWithUpVotes,\n]\n\n//=============================================END INITIALIZATION===================================================\n\n//===================================================CONSTS=========================================================\n\nconst AcordionContainer = styled.div`\n    --bs-accordion-border-width: 0px !important;\n`\n\nconst NoMargin = styled.div`\n    margin: 0 0.75rem;\n`\n\nconst AccordionBody = styled.div`\n    padding: 0;\n`\n\nconst ArticlesListContainer = styled.div`\n    background-color: rgb(248, 248, 249);\n    margin: 0;\n`\n\nconst CallLibrary = styled.div`\n    display: none;\n`\n\nconst IconCursorPointer = styled.i`\n    cursor: pointer;\n`\n\nconst ShareSearchRow = styled.div`\n    display: flex;\n    justify-content: flex-start;\n    align-content: center;\n    margin-bottom: 1rem;\n    margin-top: 1rem;\n`\n\nconst ShareSearchText = styled.h6`\n    margin-bottom: 0;\n    margin-left: 1rem;\n    margin-right: 1rem;\n`\n\nconst SearchResult = styled.span`\n    margin-left: 0.5rem;\n    font-size: small;\n`\n\n//=================================================END CONSTS=======================================================\n\n//==================================================FUNCTIONS=======================================================\n\nfunction getDateLastEdit(timestamp) {\n    const date = new Date(Number(timestamp))\n    const dateString = {\n        date: date.toLocaleDateString(),\n        time: date.toLocaleTimeString(),\n    }\n    return dateString\n}\n\nfunction handleSearch(e) {\n    setSearchInputValue(e.target.value)\n}\n\n//================================================END FUNCTIONS=====================================================\nreturn (\n    <>\n        {loggedUserHaveSbt ? (\n            <>\n                <AcordionContainer className=\"accordion\" id=\"accordionExample\">\n                    <NoMargin className=\"accordion-item\">\n                        <h2 className=\"accordion-header\" id=\"headingOne\">\n                            <HumanityWrapperButton\n                                accountId={context.accountId}\n                                className=\"accordion-button collapsed border border-2\"\n                                type=\"button\"\n                                data-bs-toggle=\"collapse\"\n                                data-bs-target=\"#collapseOne\"\n                                aria-expanded=\"true\"\n                                aria-controls=\"collapseOne\"\n                            >\n                                <h6 className=\"m-0\">+ Create post</h6>\n                            </HumanityWrapperButton>\n                        </h2>\n                        <div\n                            id=\"collapseOne\"\n                            className=\"accordion-collapse collapse\"\n                            aria-labelledby=\"headingOne\"\n                            data-bs-parent=\"#accordionExample\"\n                        >\n                            <AccordionBody className=\"accordion-body\">\n                                <Widget\n                                    src={widgets.views.editableWidgets.create}\n                                    props={{\n                                        isTest,\n                                        addressForArticles,\n                                        authorForWidget,\n                                        stateUpdate,\n                                        widgets,\n                                        initialCreateState,\n                                        editArticleData,\n                                        handleFilterArticles,\n                                        handleEditArticle,\n                                        initialBody: '',\n                                        canLoggedUserCreateArticles:\n                                            loggedUserHaveSbt,\n                                        baseActions,\n                                        handleOnCommitArticle,\n                                        category,\n                                    }}\n                                />\n                            </AccordionBody>\n                        </div>\n                    </NoMargin>\n                </AcordionContainer>\n            </>\n        ) : (\n            <h6>You can't post since you don't own any SBT</h6>\n        )}\n        <Widget\n            src={widgets.views.standardWidgets.styledComponents}\n            props={{\n                Input: {\n                    label: 'Search',\n                    value: searchInputValue,\n                    type: 'text',\n                    placeholder: 'You can search by title, content or author',\n                    handleChange: handleSearch,\n                },\n            }}\n        />\n        {searchInputValue &&\n            searchInputValue !== '' &&\n            sortedArticlesToRender.length > 0 && (\n                <SearchResult className=\"text-secondary\">\n                    {`Found ${sortedArticlesToRender.length} articles searching for \"${searchInputValue}\"`}\n                </SearchResult>\n            )}\n        <ShareSearchRow>\n            <ShareSearchText>Share search</ShareSearchText>\n            <Widget\n                src={\n                    widgets.views.standardWidgets.newStyledComponents.Input\n                        .Button\n                }\n                props={{\n                    size: 'sm',\n                    className: 'primary outline icon',\n                    children: <i className=\"bi bi-share\"></i>,\n                    onClick: () => handleShareSearch(true, searchInputValue),\n                }}\n            />\n        </ShareSearchRow>\n        <NoMargin>\n            {filterBy.parameterName === 'tag' && (\n                <div className=\"mt-3\">\n                    <h6>Filter by tag:</h6>\n                    <div className=\"d-flex align-items-center \">\n                        <Widget\n                            src={\n                                widgets.views.standardWidgets\n                                    .newStyledComponents.Element.Badge\n                            }\n                            props={{\n                                children: filterBy.parameterValue,\n                                variant: 'round primary',\n                                size: 'lg',\n                            }}\n                        />\n                        <IconCursorPointer\n                            className=\"bi bi-x\"\n                            onClick={() =>\n                                handleFilterArticles({\n                                    filterBy: '',\n                                    value: '',\n                                })\n                            }\n                        ></IconCursorPointer>\n                    </div>\n                </div>\n            )}\n            <ArticlesListContainer className=\"row card-group py-3\">\n                {sortedArticlesToRender.length > 0 ? (\n                    sortedArticlesToRender.map((article, i) => {\n                        const authorProfileCall = Social.getr(\n                            `${article.value.metadata.author}/profile`\n                        )\n\n                        if (authorProfileCall) {\n                            article.authorProfile = authorProfileCall\n                        }\n\n                        // If some widget posts data different than an array it will be ignored\n                        if (!Array.isArray(article.value.articleData.tags))\n                            article.value.articleData.tags = []\n                        return (\n                            <div key={article.value.metadata.id}>\n                                <Widget\n                                    src={\n                                        widgets.views.editableWidgets\n                                            .generalCard\n                                    }\n                                    props={{\n                                        widgets,\n                                        isTest,\n                                        data: article,\n                                        displayOverlay: true,\n                                        renderReactions: true,\n                                        addressForArticles,\n                                        handleOpenArticle,\n                                        handleFilterArticles,\n                                        authorForWidget,\n                                        handleShareButton,\n                                        handleEditArticle,\n                                        baseActions,\n                                        loggedUserHaveSbt,\n                                    }}\n                                />\n                            </div>\n                        )\n                    })\n                ) : (\n                    <h5>{`No articles ${\n                        searchInputValue !== ''\n                            ? `have been found searching for ${searchInputValue}`\n                            : 'uploaded yet'\n                    }`}</h5>\n                )}\n            </ArticlesListContainer>\n        </NoMargin>\n    </>\n)\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/chatter.cheddar.near/widget/Cheddar.Forum.AllArticlesList", "fact_widget_deployments_id": "d7364b576e2c5defe1c37c8c77ad8cc4", "inserted_timestamp": "2024-06-11T11:04:37.842Z", "modified_timestamp": "2024-06-11T12:05:37.054Z", "__row_index": 3}