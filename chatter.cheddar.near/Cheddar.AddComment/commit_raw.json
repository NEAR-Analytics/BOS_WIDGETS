{"tx_hash": "3zsyUFQXwnAgo6LbTAcwwybnNpfeh23vgzTFyzYE4A63", "action_id_social": "49CKLHfU219QNzYA3yWwYs9Pv7DQmY4p7Rqj9Vg8PgVt-0-widget", "block_id": 120870903, "block_timestamp": "2024-06-10T17:56:13.870Z", "signer_id": "chatter.cheddar.near", "widget_name": "Cheddar.AddComment", "source_code": "// Cheddar.AddComment\nconst { createComment, editComment } = VM.require(\n    'chatter.cheddar.near/widget/lib.comment'\n) || { createComment: () => {}, editComment: () => {} }\nconst { getConfig } = VM.require(\n    'chatter.cheddar.near/widget/config.CommunityVoice'\n) || { getConfig: () => {} }\n\nconst {\n    widgets,\n    isTest,\n    article,\n    onCloseModal,\n    originalComment,\n    isReplying,\n    username,\n    placement,\n    rootCommentId,\n    replyingTo,\n    baseActions,\n    editionData,\n    loadComments,\n    setLoadingComments,\n} = props\n\nconst rootId = rootCommentId ?? article.value.metadata.id //To render in the proper location\n\nconst commentId = editionData ? editionData.value.metadata.id : undefined //(OPTIONAL) to edit comment\n\nconst isEdition = commentId !== undefined\n\nconst ModalCard = styled.div`\n    position: fixed;\n    z-index: 1;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background: rgba(0, 0, 0, 0.7);\n`\nconst CommentCard = styled.div`\n    display: flex;\n    width: 400px;\n    padding: 20px;\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 16px;\n    border-radius: 10px;\n    background: #fff;\n    border: 1px solid transparent;\n    margin-left: auto;\n    margin-right: auto;\n    margin-buttom: 50%;\n    @media only screen and (max-width: 480px) {\n        width: 90%;\n    }\n`\nconst H1 = styled.h1`\n    color: black;\n    font-size: 14px;\n    font-weight: 500;\n`\nconst Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: flex-end;\n    gap: 20px;\n    align-self: stretch;\n`\nconst CommentBody = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 16px;\n    align-self: stretch;\n`\nconst BComment = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 8px;\n    align-self: stretch;\n`\nconst BCommentmessage = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 8px;\n    align-self: stretch;\n`\nconst BCMHeader = styled.div`\n    display: flex;\n    width: 100%;\n    align-items: center;\n    gap: 8px;\n`\nconst BCMProfile = styled.div`\n    width: 28px;\n    height: 28px;\n    flex-shrink: 0;\n    flex-direction: row;\n    border-radius: 29px;\n    background: #d0d6d9;\n    text-align: center;\n`\nconst BCMProfileimg = styled.img`\n    width: 28px;\n    height: 28px;\n    flex-shrink: 0;\n    vertical-align: initial;\n`\nconst BCMProfileUsername = styled.label`\n    display: flex;\n    width: 100%;\n    flex-direction: column;\n    justify-content: center;\n    flex-shrink: 0;\n    color: #000;\n    font-size: 14px;\n\n    font-style: normal;\n    font-weight: 500;\n    line-height: 120%;\n`\nconst BCMMessage = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-self: stretch;\n    color: #686b6d;\n    font-size: 14px;\n\n    font-style: normal;\n    font-weight: 400;\n    line-height: 120%;\n`\nconst BFooter = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: flex-start;\n    gap: 4px;\n    align-self: stretch;\n`\nconst BFootercont = styled.div`\n    display: flex;\n    align-items: center;\n    align-self: stretch;\n`\nconst BFootercontTime = styled.div`\n    display: flex;\n    align-items: center;\n    gap: 4px;\n    flex: 1 0 0;\n`\nconst BFCTimetext = styled.div`\n    display: flex;\n    height: 19.394px;\n    flex-direction: column;\n    justify-content: center;\n    flex: 1 0 0;\n    color: #000;\n    font-size: 14px;\n\n    font-style: normal;\n    font-weight: 300;\n    line-height: normal;\n`\nconst BFCButton = styled.div`\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    gap: 4px;\n`\nconst BFCButtonitem = styled.button`\n    display: flex;\n    padding: 2px 12px;\n    align-items: center;\n    gap: 6px;\n    border-radius: 4px;\n    border-width: 1px;\n    border: solid 1px #9333ea;\n\n    background-image: linear-gradient(#fff, #fff),\n        radial-gradient(circle at top left, #f0e1ce, #f0e1ce);\n    background-origin: border-box;\n    background-clip: padding-box, border-box;\n`\nconst BFCBIText = styled.label`\n    font-size: 12px;\n\n    font-style: normal;\n    font-weight: 500;\n    line-height: 24px;\n    color: #9333ea;\n    cursor: pointer;\n`\nconst NewComment = styled.textarea`\n    width: 100%;\n    display: flex;\n    height: 100px;\n    padding: 9px 10px 0px 10px;\n    align-items: flex-start;\n\n    gap: 10px;\n    align-self: stretch;\n    border-radius: 8px;\n    border: 1px solid #d0d6d9;\n    background: #fff;\n\n    font-size: 12px;\n\n    font-style: normal;\n    font-weight: 400;\n    line-height: 120%;\n`\nconst CommentFooter = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: flex-end;\n    justify-content: end;\n    gap: 16px;\n    align-self: stretch;\n`\nconst CFCancel = styled.button`\n    display: flex;\n    width: 107px;\n    padding: 8px 12px;\n    justify-content: center;\n    align-items: center;\n    gap: 10px;\n    color: #9333ea;\n    border-radius: 10px;\n    border-width: 1px;\n    border: solid 1px #9333ea;\n\n    background-image: linear-gradient(#fff, #fff),\n        radial-gradient(circle at top left, #f0e1ce, #f0e1ce);\n    background-origin: border-box;\n    background-clip: padding-box, border-box;\n    @media only screen and (max-width: 480px) {\n        width: 100%;\n    }\n`\n\nconst CFSubmit = styled.button`\n    display: flex;\n    width: 107px;\n    padding: 8px 12px;\n    justify-content: center;\n    align-items: center;\n    gap: 10px;\n    color: #000;\n    display: flex;\n    width: 107px;\n    padding: 8px 12px;\n    justify-content: center;\n    align-items: center;\n    gap: 10px;\n    border-radius: 10px;\n    border-width: 1px;\n    border: solid 1px transparent;\n\n    background-image: linear-gradient(#ffd50d, #ffd50d),\n        radial-gradient(circle at top left, #f0e1ce, #f0e1ce);\n    background-origin: border-box;\n    background-clip: padding-box, border-box;\n    @media only screen and (max-width: 480px) {\n        width: 100%;\n    }\n`\n\nconst Spinner = styled.div`\n    height: 1rem;\n    width: 1rem;\n`\n\nconst CallLibrary = styled.div`\n    display: none;\n`\n\nState.init({\n    theme,\n    reply: '',\n    cancel: false,\n    e_message: '',\n})\n\nfunction getShouldDisplayOriginalComment() {\n    return (\n        (!editionData && replyingTo) ||\n        (editionData &&\n            replyingTo &&\n            editionData.value.metadata.id !== editionData.value.metadata.rootId)\n    )\n}\n\nfunction getInitialText() {\n    if (editionData) {\n        if (\n            !state.reply ||\n            editionData.value.commentData.text === state.reply\n        ) {\n            return editionData.value.commentData.text\n        }\n    } else if (replyingTo) {\n        return `@${replyingTo} `\n    } else if (\n        state.reply &&\n        state.reply !== editionData.value.commentData.text\n    ) {\n        return state.reply\n    } else {\n        return 'Reply here'\n    }\n}\n\nconst SetText = (txt) => {\n    State.update({ shareText: txt })\n}\n\nconst renderSpinner = () => {\n    return <Spinner className=\"spinner-border\" role=\"status\"></Spinner>\n}\n\nfunction onCommit() {\n    setLoadingComments && setLoadingComments(true)\n    setTimeout(() => {\n        loadComments && loadComments()\n        State.update({ reply: 'Reply here', showSpinner: false })\n        onCloseModal()\n    }, 3000)\n}\n\nfunction onCancel() {\n    setLoadingComments(false)\n    State.update({ showSpinner: false })\n}\n\nfunction handleSubmitButton() {\n    if (state.showSpinner) {\n        return () => {}\n    } else {\n        if (isEdition) {\n            return editCommentListener\n        } else {\n            return addCommentListener\n        }\n    }\n}\n\nfunction addCommentListener() {\n    State.update({ showSpinner: true })\n\n    createComment({\n        config: getConfig(isTest),\n        author: context.accountId,\n        commentText: state.reply,\n        replyingTo: rootId,\n        articleId: article.value.metadata.id,\n        onCommit,\n        onCancel,\n    })\n}\n\nfunction editCommentListener() {\n    State.update({ showSpinner: true })\n    const comment = originalComment\n    comment.value.commentData.text = state.reply\n\n    editComment({\n        config: getConfig(isTest),\n        comment,\n        onCommit,\n        onCancel,\n    })\n}\n\nreturn (\n    <ModalCard>\n        <CommentCard>\n            <H1>\n                {isReplying\n                    ? 'Reply to comment'\n                    : isEdition\n                      ? 'Edit comment'\n                      : 'Add a Comment'}\n            </H1>\n            <Container>\n                {getShouldDisplayOriginalComment() && (\n                    <>\n                        <CommentBody>\n                            <BComment>\n                                <BCommentmessage>\n                                    <BCMHeader>\n                                        <BCMProfile>\n                                            <Widget\n                                                src={\n                                                    widgets.views\n                                                        .standardWidgets\n                                                        .profileImage\n                                                }\n                                                props={{\n                                                    accountId: replyingTo,\n                                                    imageClassName:\n                                                        'rounded-circle w-100 h-100',\n                                                    style: {\n                                                        width: '25px',\n                                                        height: '25px',\n                                                    },\n                                                }}\n                                            />\n                                        </BCMProfile>\n                                        <BCMProfileUsername>\n                                            {replyingTo\n                                                ? '@' + replyingTo\n                                                : '@user.near'}\n                                        </BCMProfileUsername>\n                                    </BCMHeader>\n                                    <BCMMessage>\n                                        {originalComment &&\n                                            originalComment.value.commentData\n                                                .text}\n                                    </BCMMessage>\n                                </BCommentmessage>\n                            </BComment>\n                            <BFooter>\n                                <label>{state.e_message}</label>\n                                <BFootercont>\n                                    <BFootercontTime>\n                                        <img\n                                            alt=\"schedule\"\n                                            src={\n                                                'https://emerald-related-swordtail-341.mypinata.cloud/ipfs/QmP3uRUgZtqV3HAgcZoYaDA6JSPpFcpqULvgenWUs3ctSP'\n                                            }\n                                            style={{\n                                                width: '14px',\n                                                height: '14px',\n                                            }}\n                                        />\n                                    </BFootercontTime>\n                                </BFootercont>\n                            </BFooter>\n                        </CommentBody>\n                        <hr\n                            styled={{\n                                width: '100%',\n                                height: '0px',\n                                border: '1px solid rgba(130, 134, 136, 0.20)',\n                                flex: 'none',\n                                background: 'rgba(130, 134, 136, 0.20)',\n                                margin: '0px',\n                                flexGrow: '0',\n                            }}\n                        />\n                    </>\n                )}\n                <div className=\"w-100 col\">\n                    <Widget\n                        src={widgets.views.standardWidgets.markownEditorIframe}\n                        props={{\n                            initialText: getInitialText(),\n                            onChange: (e) =>\n                                State.update({\n                                    reply: e,\n                                }),\n                        }}\n                    />\n                </div>\n                <CommentFooter>\n                    <Widget\n                        src={widgets.views.standardWidgets.styledComponents}\n                        props={{\n                            Button: {\n                                text: 'Cancel',\n                                className: 'secondary dark',\n                                onClick: onCloseModal,\n                            },\n                        }}\n                    />\n                    <Widget\n                        src={widgets.views.standardWidgets.styledComponents}\n                        props={{\n                            Button: {\n                                text: state.showSpinner ? '' : 'Submit',\n                                onClick: handleSubmitButton(),\n                                icon: state.showSpinner ? (\n                                    renderSpinner()\n                                ) : (\n                                    <></>\n                                ),\n                            },\n                        }}\n                    />\n                </CommentFooter>\n            </Container>\n        </CommentCard>\n    </ModalCard>\n)\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/chatter.cheddar.near/widget/Cheddar.AddComment", "fact_widget_deployments_id": "b6864174576126f96c3bbd51973b5a5c", "inserted_timestamp": "2024-06-10T19:04:29.372Z", "modified_timestamp": "2024-06-10T19:04:29.372Z", "__row_index": 5}