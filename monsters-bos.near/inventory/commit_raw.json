{"tx_hash": "E2QPYDCNLATq7nQZyitqR2u1K3KjCNXszeovX9aHzE6x", "action_id_social": "HDJiZQb7bHP8cSQEmUfryP8uQRt6ajqo1gJN6sLRfNri-0-widget", "block_id": 103481638, "block_timestamp": "2023-10-16T03:39:53.382Z", "signer_id": "monsters-bos.near", "widget_name": "inventory", "source_code": "//include common\nconst widgetSrc = (component) => {\n  if (context.networkId === \"mainnet\")\n    return `monsters-bos.near/widget/${component}`;\n  else\n    return `monstersdev.testnet/widget/${component}`;\n}\nconst ftContract = (context.networkId === \"mainnet\") ? \"monsters-alpha.near\" : \"dev-1693882284306-75813657022630\";\nconst nftContract = (context.networkId === \"mainnet\") ? \"monsters-nfts.near\" : \"dev-1697387315613-37447934459971\";\n\nconst App = styled.div`\n\tbutton {\n\t\t\tbackground-color: #563D7C;\n\t\t\tborder: none;\n\t\t\tcolor: #EDEDED;\n\t\t\tpadding: 10px 20px;\n\t\t\ttext-align: center;\n\t\t\ttext-decoration: none;\n\t\t\tdisplay: inline-block;\n\t\t\tfont-size: 16px;\n\t\t\tborder-radius: 5px;\n\t\t\tbox-shadow: 2px 2px 4px #000;\n\t\t\ttransition: background-color 0.3s ease;\n\t}\n\n\tbutton:hover {\n\t\t\tbackground-color: #8C6BB1;\n\t}\n`;\n\n\nconst fullSetList = Near.view(nftContract, \"full_set_listing\", {});\nconst nftsOwned = Near.view(nftContract, \"nft_tokens_for_owner\", {account_id: context.accountId, limit:50000});\nconst ownedCount = nftsOwned.reduce((acc, nft) => {\n  const tokenId = nft.token_id.split(':')[0];\n  acc[tokenId] = (acc[tokenId] || 0) + 1;\n  return acc;\n}, {});\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n\nconst FilterPane = styled.div`\n  width: 20%;\n  padding: 20px;\n  border-right: 1px solid #ccc;\n`;\n\nconst CardGrid = styled.div`\n  width: 80%;\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: 16px;\n  padding: 20px;\n`;\n\nconst Card = styled.div`\n  border: 1px solid #ccc;\n  padding: 16px;\n  text-align: center;\n`;\n\nconst CardName = styled.label`\n  display: block;\n  margin-bottom: 8px;\n`;\n\nconst CardImage = styled.img`\n  width: 278px;\n  height: auto;\n`;\n\nState.init({error: null, owned: \"all\", rarity: \"all\", sort_by: \"id\"});\nfunction setOwnedFilter(value) {\n  State.update({ ...state, owned: value });\n}\nfunction setRarityFilter(value) {\n  State.update({ ...state, rarity: value });\n}\nfunction setSortBy(value) {\n  State.update({ ...state, sort_by: value });\n}\nfunction sortByCriteria(cardA, cardB) {\n  if(state.sort_by === \"id\") {\n    return cardA.id.localeCompare(cardB.id);\n  } else if(state.sort_by === \"name\") {\n    return cardA.name.localeCompare(cardB.name);\n  } else if(state.sort_by === \"issued_at\") {\n    //TODO lookup in owned\n    return false;\n  }\n\n}\nreturn (\n  <App>\n    <Widget src={widgetSrc(\"header\")}/>\n    <Container>\n      <FilterPane>\n        <div>\n          <label>Owned:</label>\n          <select onChange={(e) => setOwnedFilter(e.target.value)} value={state.ownedFilter}>\n            <option value=\"all\">All</option>\n            <option value=\"owned\">Owned Only</option>\n            <option value=\"missing\">Missing Only</option>\n          </select>\n        </div>\n        \n        <div>\n          <label>Rarity:</label>\n          <select onChange={(e) => setRarityFilter(e.target.value)} value={rarityFilter}>\n            <option value=\"all\">All</option>\n            <option value=\"Common\">Common</option>\n            <option value=\"Uncommon\">Uncommon</option>\n            <option value=\"Rare\">Rare</option>\n            <option value=\"Land\">Land</option>\n          </select>\n        </div>\n        <div>\n          <label>Sort by:</label>\n          <select onChange={(e) => setSortBy(e.target.value)} value={sortBy}>\n            <option value=\"id\">Card ID</option>\n            <option value=\"name\">Name</option>\n          </select>\n        </div>\n\n      </FilterPane>\n      <CardGrid>\n        {fullSetList.sort(sortByCriteria).map((item, index) => (\n          (((state.owned == \"owned\" && (ownedCount[item.id] || 0) > 0) || (state.owned == \"missing\" && !ownedCount[item.id]) ||state.owned == \"all\") &&\n           ((state.rarity == item.rarity) || state.rarity == \"all\")\n          ) &&\n            <Card key={index}>\n              <CardName>{item.name} - {item.rarity}</CardName>\n              <CardImage src={item.url} />\n              <div>Copies Owned: {ownedCount[item.id] || 0}</div>\n            </Card>\n        ))}\n      </CardGrid>\n    </Container>\n    <div>\n      <span class=\"text-decoration-underline\">{nftsOwned.length}</span> NEAR Monster NFTs collected\n    </div>\n  </App>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/monsters-bos.near/widget/inventory", "fact_widget_deployments_id": "341cf4506ae9670723e99441e6b70209", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}