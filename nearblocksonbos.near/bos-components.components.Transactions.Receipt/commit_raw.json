{"tx_hash": "29TJymGSQnJfedpmzwKkYsiG2u2f6SfRb53EZJR4ETKd", "action_id_social": "6Yf79NuKxZNzgZcugj2imHxiWWY8PAZ9iVcaPDDySV9D-0-widget", "block_id": 116536511, "block_timestamp": "2024-04-10T11:22:44.624Z", "signer_id": "nearblocksonbos.near", "widget_name": "bos-components.components.Transactions.Receipt", "source_code": "/**\n * Component: TransactionsReceipt\n * Author: Nearblocks Pte Ltd\n * License: Business Source License 1.1\n * Description: Details of Transaction Receipt on Near Protocol.\n * @interface Props\n * @param {string} [network] - The network data to show, either mainnet or testnet\n * @param {Function} [t] - A function for internationalization (i18n) provided by the next-translate package.\n * @param {TransactionInfo} [txn] - Information related to a transaction.\n * @param {RPCTransactionInfo} [rpcTxn] - RPC data of the transaction.\n * @param {string} ownerId - The identifier of the owner of the component.\n */\n\n\n\n\n\n\n\n\n\n\n\nfunction MainComponent(props) {\n  const { network, rpcTxn, txn, t, ownerId } = props;\n\n  const { mapRpcActionToAction } = VM.require(\n    `${ownerId}/widget/includes.Utils.near`,\n  );\n  const [receipt, setReceipt] = useState(null);\n\n  function transactionReceipts(txn) {\n    const actions =\n      txn?.transaction?.actions &&\n      txn?.transaction?.actions?.map((txn) => mapRpcActionToAction(txn));\n    const receipts = txn?.receipts;\n    const receiptsOutcome = txn?.receipts_outcome;\n\n    if (\n      receipts?.length === 0 ||\n      receipts[0]?.receipt_id !== receiptsOutcome[0]?.id\n    ) {\n      receipts?.unshift({\n        predecessor_id: txn?.transaction?.signer_id,\n        receipt: actions,\n        receipt_id: receiptsOutcome[0]?.id,\n        receiver_id: txn?.transaction?.receiver_id,\n      });\n    }\n\n    const receiptOutcomesByIdMap = new Map();\n    const receiptsByIdMap = new Map();\n\n    receiptsOutcome &&\n      receiptsOutcome?.forEach((receipt) => {\n        receiptOutcomesByIdMap?.set(receipt?.id, receipt);\n      });\n\n    receipts &&\n      receipts?.forEach((receiptItem) => {\n        receiptsByIdMap?.set(receiptItem?.receipt_id, {\n          ...receiptItem,\n          actions:\n            receiptItem?.receipt_id === receiptsOutcome[0]?.id\n              ? actions\n              : receiptItem?.receipt?.Action?.actions &&\n                receiptItem?.receipt?.Action?.actions.map((receipt) =>\n                  mapRpcActionToAction(receipt),\n                ),\n        });\n      });\n\n    const collectReceipts = (receiptHash) => {\n      const receipt = receiptsByIdMap?.get(receiptHash);\n      const receiptOutcome = receiptOutcomesByIdMap?.get(receiptHash);\n\n      return {\n        ...receipt,\n        ...receiptOutcome,\n        outcome: {\n          ...receiptOutcome?.outcome,\n          outgoing_receipts:\n            receiptOutcome?.outcome?.receipt_ids &&\n            receiptOutcome?.outcome?.receipt_ids?.map(collectReceipts),\n        },\n      };\n    };\n\n    return collectReceipts(receiptsOutcome[0]?.id);\n  }\n\n  useEffect(() => {\n    if (rpcTxn) {\n      const receipt = transactionReceipts(rpcTxn);\n      setReceipt(receipt);\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [rpcTxn]);\n\n  return (\n    <div className=\"bg-white text-sm text-nearblue-600 divide-solid divide-gray-200 divide-y\">\n      {\n        <Widget\n          src={`${ownerId}/widget/bos-components.components.Transactions.ReceiptRow`}\n          props={{\n            txn: txn,\n            receipt: receipt,\n            network: network,\n            t: t,\n            ownerId,\n          }}\n        />\n      }\n    </div>\n  );\n}\n\nreturn MainComponent(props, context);", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/nearblocksonbos.near/widget/bos-components.components.Transactions.Receipt", "fact_widget_deployments_id": "4ad941a45ddf4d96c45ac323e2a06ff6", "inserted_timestamp": "2024-04-10T12:34:58.847Z", "modified_timestamp": "2024-04-10T13:40:59.984Z", "__row_index": 3}