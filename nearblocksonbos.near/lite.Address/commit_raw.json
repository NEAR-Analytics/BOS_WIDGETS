{"tx_hash": "FvdRP1PiPmnptX7mFcnPuhYGERZRiajbKdrNWBasgZJb", "action_id_social": "56iEW1bdwo8f8XNCtUHwY4sJdoetA6bLcHayHpWeubQn-0-widget", "block_id": 121020858, "block_timestamp": "2024-06-12T18:24:59.507Z", "signer_id": "nearblocksonbos.near", "widget_name": "lite.Address", "source_code": "let ErrorSkeleton = window?.ErrorSkeleton || (() => <></>);\nlet AddressSkeleton = window?.AddressSkeleton || (() => <></>);\nlet AddressKeysSkeleton = window?.AddressKeysSkeleton || (() => <></>);\nlet Skeleton = window?.Skeleton || (({ children }) => <>{children}</>);\nconst Address = ({ id, rpcUrl }) => {\n  let { apiFetch, rpcFetch } = VM.require(\n    `nearblocksonbos.near/widget/lite.libs.fetcher`\n  );\n  let { yoctoToNear } = VM.require(\n    `nearblocksonbos.near/widget/lite.libs.convertor`\n  );\n  let { formatNumber, formatSize } = VM.require(\n    `nearblocksonbos.near/widget/lite.libs.formatter`\n  );\n  if (!apiFetch || !rpcFetch || !yoctoToNear || !formatNumber || !formatSize)\n    return <AddressSkeleton />;\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState({\n    address: true,\n    stats: true,\n  });\n  const [stats, setStats] = useState(null);\n  const [address, setAddress] = useState(null);\n  const ACCOUNT_CODE_HASH = \"11111111111111111111111111111111\";\n  const value = formatNumber(\n    Big(yoctoToNear(address?.amount ?? \"0\"))\n      .mul(stats?.near_price ?? \"0\")\n      .toString(),\n    2\n  );\n  useEffect(() => {\n    if (rpcFetch && rpcUrl && id) {\n      rpcFetch(rpcUrl, \"query\", {\n        account_id: id,\n        finality: \"final\",\n        request_type: \"view_account\",\n      })\n        .then((response) => setAddress(response))\n        .catch(setError)\n        .finally(() => setLoading((state) => ({ ...state, address: false })));\n    }\n    if (apiFetch) {\n      apiFetch(`https://api.nearblocks.io/v1/stats`)\n        .then((response) => setStats(response?.stats?.[0]))\n        .catch(console.log)\n        .finally(() => setLoading((state) => ({ ...state, stats: false })));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [id, rpcUrl]);\n  if (error) {\n    return (\n      <Widget\n        key=\"error\"\n        loading={<ErrorSkeleton />}\n        props={{ title: \"Error Fetching Address\" }}\n        src={`nearblocksonbos.near/widget/lite.Atoms.Error`}\n      />\n    );\n  }\n  return (\n    <div className=\"relative container mx-auto\">\n      <div className=\"pt-7 pb-[26px] px-5\">\n        <Skeleton\n          className=\"block h-[48px] lg:h-[54px] w-full\"\n          loading={loading.address}\n        >\n          <h1 className=\"flex items-center font-heading font-medium text-[32px] lg:text-[36px] tracking-[0.1px] mr-4\">\n            <span className=\"truncate\">{id}</span>\n            <Widget\n              key=\"copy\"\n              props={{\n                buttonClassName: \"ml-3\",\n                className: \"text-primary w-6\",\n                text: id,\n              }}\n              src={`nearblocksonbos.near/widget/lite.Atoms.Copy`}\n            />\n          </h1>\n        </Skeleton>\n      </div>\n      <div className=\"flex flex-wrap\">\n        <div className=\"w-full sm:w-1/2 lg:w-1/3 pl-5 mb-6 h-[60px]\">\n          <h2 className=\"font-medium text-sm mb-0.5\">Balance</h2>\n          <Skeleton className=\"block h-[39px] w-32\" loading={loading.address}>\n            <p className=\"font-heading font-medium text-[26px]\">\n              {formatNumber(yoctoToNear(address?.amount ?? \"0\"), 2)} \u24c3\n            </p>\n          </Skeleton>\n        </div>\n        {context.networkId === \"mainnet\" && (\n          <div className=\"w-full sm:w-1/2 lg:w-1/3 pl-5 mb-6 h-[60px]\">\n            <h2 className=\"font-medium text-sm mb-0.5\">Value</h2>\n            <Skeleton\n              className=\"block h-[39px] w-32\"\n              loading={loading.address || loading.stats}\n            >\n              <p className=\"font-heading font-medium text-[26px]\">${value}</p>\n            </Skeleton>\n          </div>\n        )}\n        <div className=\"w-full sm:w-1/2 lg:w-1/3 pl-5 mb-6 h-[60px]\">\n          <h2 className=\"font-medium text-sm mb-0.5\">Validator Stake</h2>\n          <Skeleton className=\"block h-[39px] w-32\" loading={loading.address}>\n            <p className=\"font-heading font-medium text-[26px]\">\n              {formatNumber(yoctoToNear(address?.locked ?? \"0\"), 2)} \u24c3\n            </p>\n          </Skeleton>\n        </div>\n        <div className=\"w-full sm:w-1/2 lg:w-1/3 pl-5 mb-6 h-[60px]\">\n          <h2 className=\"font-medium text-sm mb-0.5\">Storage Used</h2>\n          <Skeleton className=\"block h-[39px] w-32\" loading={loading.address}>\n            <p className=\"font-heading font-medium text-[26px]\">\n              {formatSize(String(address?.storage_usage ?? 0), 2)}\n            </p>\n          </Skeleton>\n        </div>\n        {context.networkId === \"mainnet\" && (\n          <div className=\"w-full sm:w-1/2 lg:w-1/3 pl-5 mb-6 h-[60px]\">\n            <h2 className=\"font-medium text-sm mb-0.5\">Type</h2>\n            <Skeleton className=\"block h-[39px] w-28\" loading={loading.address}>\n              <p className=\"font-heading font-medium text-[24px]\">\n                {address?.code_hash === ACCOUNT_CODE_HASH\n                  ? \"Account\"\n                  : \"Contract\"}\n              </p>\n            </Skeleton>\n          </div>\n        )}\n      </div>\n      <div className=\"bg-bg-box lg:rounded-xl shadow mt-8\">\n        <div className=\"pt-4 pb-6 mx-6\">\n          <button className=\"font-medium border-b-[3px] border-text-body py-1 mr-4\">\n            Access Keys\n          </button>\n        </div>\n        <Widget\n          key=\"keys\"\n          loading={<AddressKeysSkeleton />}\n          props={{ id, rpcUrl }}\n          src={`nearblocksonbos.near/widget/lite.Address.Keys`}\n        />\n      </div>\n    </div>\n  );\n};\nreturn Address(props);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/nearblocksonbos.near/widget/lite.Address", "fact_widget_deployments_id": "fd867dc351f2f789e3b379ca1ae9c332", "inserted_timestamp": "2024-06-12T20:05:24.439Z", "modified_timestamp": "2024-06-12T20:05:24.439Z", "__row_index": 0}