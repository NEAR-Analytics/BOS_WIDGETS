{"tx_hash": "DNfAz7NhdXrLjWwrkPzxFvaQDhHRS2QTGFScpKNh9HZM", "action_id_social": "h8Vi9GwAzTjGFc5p5AMxrJZHM8gHMKcuSzU2Wcg8YTa-0-widget", "block_id": 116998937, "block_timestamp": "2024-04-16T23:35:11.977Z", "signer_id": "nearblocksonbos.near", "widget_name": "bos-components.components.Transactions.Latest", "source_code": "/**\n * Component: TransactionsLatest\n * Author: Nearblocks Pte Ltd\n * License: Business Source License 1.1\n * Description: Latest Transactions on Near Protocol.\n * @interface Props\n * @param {string} [network] - The network data to show, either mainnet or testnet\n * @param {Function} [t] - A function for internationalization (i18n) provided by the next-translate package.\n * @param {string} ownerId - The identifier of the owner of the component.\n */\n\n\n\n\n\n\n\n/* INCLUDE COMPONENT: \"includes/Common/Skeleton.jsx\" */\n/**\n * @interface Props\n * @param {string} [className] - The CSS class name(s) for styling purposes.\n */\n\n\n\n\n\nconst Skeleton = (props) => {\n  return (\n    <div\n      className={`bg-gray-200 dark:bg-black-200 rounded shadow-sm animate-pulse ${props.className}`}\n    ></div>\n  );\n};/* END_INCLUDE COMPONENT: \"includes/Common/Skeleton.jsx\" */\n\n\nfunction MainComponent({ t, network, ownerId }) {\n  const { getTimeAgoString, shortenHex } = VM.require(\n    `${ownerId}/widget/includes.Utils.formats`,\n  );\n\n  const {\n    getConfig,\n    handleRateLimit,\n    nanoToMilli,\n    shortenAddress,\n    yoctoToNear,\n  } = VM.require(`${ownerId}/widget/includes.Utils.libs`);\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const [txns, setTxns] = useState([]);\n\n  const config = getConfig && getConfig(network);\n\n  useEffect(() => {\n    let delay = 5000;\n\n    function fetchLatestTxns() {\n      asyncFetch(`${config.backendUrl}txns/latest`)\n        .then(\n          (data\n\n\n\n\n) => {\n            const resp = data?.body?.txns;\n            if (data.status === 200) {\n              setTxns(resp);\n              setError(false);\n              if (isLoading) setIsLoading(false);\n            } else {\n              handleRateLimit(data, fetchLatestTxns, () => {\n                if (isLoading) setIsLoading(false);\n              });\n            }\n          },\n        )\n        .catch(() => {\n          setError(true);\n        });\n    }\n    if (config?.backendUrl) {\n      fetchLatestTxns();\n    }\n\n    const interval = setInterval(fetchLatestTxns, delay);\n\n    return () => clearInterval(interval);\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [config.backendUrl, isLoading]);\n\n  return (\n    <>\n      <div className=\"relative\">\n        <ScrollArea.Root>\n          <ScrollArea.Viewport>\n            {!txns && error && (\n              <div className=\"flex items-center h-16 mx-3 py-2 text-nearblue-700 text-xs\">\n                {t ? t('home:error') : ' Error!'}\n              </div>\n            )}\n            {!error && !isLoading && txns?.length === 0 && (\n              <div className=\"flex items-center h-16 mx-3 py-2 text-nearblue-700 text-xs\">\n                {t ? t('home:noTxns') : ' No transactions found!'}\n              </div>\n            )}\n            {isLoading && txns?.length === 0 && (\n              <div className=\"px-3 dark:divide-black-200 divide-y h-80\">\n                {[...Array(5)].map((_, i) => (\n                  <div\n                    className=\"grid grid-cols-2 md:grid-cols-3 gap-3 py-3\"\n                    key={i}\n                  >\n                    <div className=\"flex items-center \">\n                      <div className=\"flex-shrink-0 rounded-full h-10 w-10 bg-blue-900/10 flex items-center justify-center text-sm\">\n                        TX\n                      </div>\n                      <div className=\"px-2\">\n                        <div className=\"text-green-500 dark:text-green-250 text-sm\">\n                          <div className=\"h-5 w-14\">\n                            <Skeleton className=\"h-4\" />\n                          </div>\n                        </div>\n                        <div className=\"text-nearblue-700 text-xs\">\n                          <div className=\"h-4 w-24\">\n                            <Skeleton className=\"h-3\" />\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"col-span-2 md:col-span-1 px-2 order-2 md:order-1 text-sm\">\n                      <div className=\"h-5 w-36\">\n                        <Skeleton className=\"h-4\" />\n                      </div>\n                      <div className=\"text-nearblue-700 text-sm\">\n                        <div className=\"h-5 w-14\">\n                          <Skeleton className=\"h-4\" />\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"text-right order-1 md:order-2\">\n                      <div className=\"ml-auto w-32\">\n                        <Skeleton className=\"h-4\" />\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n            {txns?.length > 0 && (\n              <div className=\"px-3 divide-y dark:divide-black-200 h-80\">\n                {txns?.map((txn) => {\n                  return (\n                    <div\n                      className=\"grid grid-cols-2 md:grid-cols-3 gap-2 lg:gap-3 py-3\"\n                      key={txn?.transaction_hash}\n                    >\n                      <div className=\" flex items-center\">\n                        <div className=\"flex-shrink-0 rounded-full h-10 w-10 bg-blue-900/10 flex items-center justify-center text-sm dark:text-white\">\n                          TX\n                        </div>\n                        <div className=\"overflow-hidden pl-2\">\n                          <div className=\"text-green-500 dark:text-green-250 text-sm  \">\n                            <Link\n                              href={`/txns/${txn?.transaction_hash}`}\n                              className=\"hover:no-underline\"\n                            >\n                              <a className=\"text-green-500 dark:text-green-250 font-medium hover:no-underline\">\n                                {shortenHex(txn?.transaction_hash ?? '')}\n                              </a>\n                            </Link>\n                          </div>\n                          <div className=\"text-gray-400 text-xs truncate\">\n                            {txn?.block_timestamp\n                              ? getTimeAgoString(\n                                  nanoToMilli(txn?.block_timestamp),\n                                )\n                              : ''}\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"col-span-2 md:col-span-1 px-2 order-2 md:order-1 text-sm\">\n                        <div className=\"whitespace-nowrap truncate dark:text-white\">\n                          {t ? t('home:txnFrom') : 'From'}{' '}\n                          <Link\n                            href={`/address/${txn?.signer_account_id}`}\n                            className=\"hover:no-underline\"\n                          >\n                            <a className=\"text-green-500 dark:text-green-250 font-medium hover:no-underline\">\n                              {shortenAddress(txn?.signer_account_id ?? '')}\n                            </a>\n                          </Link>\n                        </div>\n                        <div className=\"whitespace-nowrap truncate dark:text-white\">\n                          {t ? t('home:txnTo') : 'To'}{' '}\n                          <Link\n                            href={`/address/${txn?.receiver_account_id}`}\n                            className=\"hover:no-underline\"\n                          >\n                            <a className=\"text-green-500 dark:text-green-250 font-medium hover:no-underline\">\n                              {shortenAddress(txn?.receiver_account_id ?? '')}\n                            </a>\n                          </Link>\n                        </div>\n                      </div>\n                      <div className=\"text-right order-1 md:order-2 overflow-hidden\">\n                        <Tooltip.Provider>\n                          <Tooltip.Root>\n                            <Tooltip.Trigger asChild>\n                              <span className=\"u-label--badge-in  text-nearblue-700 truncate\">\n                                {txn?.actions_agg?.deposit\n                                  ? yoctoToNear(txn?.actions_agg?.deposit, true)\n                                  : txn?.actions_agg?.deposit ?? ''}{' '}\n                                \u24c3\n                              </span>\n                            </Tooltip.Trigger>\n                            <Tooltip.Content\n                              className=\"h-auto max-w-xs bg-black bg-opacity-90 z-10 text-xs text-white px-3 py-2 break-words\"\n                              sideOffset={5}\n                            >\n                              Deposit value\n                            </Tooltip.Content>\n                          </Tooltip.Root>\n                        </Tooltip.Provider>\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n            )}\n          </ScrollArea.Viewport>\n          <ScrollArea.Scrollbar\n            className=\"flex select-none touch-none p-0.5 bg-neargray-25 dark:bg-black-600 transition-colors duration-[160ms] ease-out hover:bg-neargray-25 dark:hover:bg-black-200 data-[orientation=vertical]:w-2.5 data-[orientation=horizontal]:flex-col data-[orientation=horizontal]:h-2.5\"\n            orientation=\"vertical\"\n          >\n            <ScrollArea.Thumb className=\"flex-1 bg-neargray-50 dark:bg-black-200 rounded-[10px] relative before:content-[''] before:absolute before:top-1/2 before:left-1/2 before:-translate-x-1/2 before:-translate-y-1/2 before:w-full before:h-full before:min-w-[44px] before:min-h-[44px]\" />\n          </ScrollArea.Scrollbar>\n          <ScrollArea.Scrollbar\n            className=\"flex select-none touch-none p-0.5 bg-neargray-25 dark:bg-black-600 transition-colors duration-[160ms] ease-out hover:bg-neargray-25 dark:hover:bg-black-200 data-[orientation=vertical]:w-2.5 data-[orientation=horizontal]:flex-col data-[orientation=horizontal]:h-2.5\"\n            orientation=\"horizontal\"\n          >\n            <ScrollArea.Thumb className=\"flex-1 bg-neargray-50 dark:bg-black-200 rounded-[10px] relative before:content-[''] before:absolute before:top-1/2 before:left-1/2 before:-translate-x-1/2 before:-translate-y-1/2 before:w-full before:h-full before:min-w-[44px] before:min-h-[44px]\" />\n          </ScrollArea.Scrollbar>\n          <ScrollArea.Corner className=\"bg-neargray-50\" />\n        </ScrollArea.Root>\n      </div>\n      {isLoading && txns.length === 0 && (\n        <div className=\"border-t dark:border-black-200 px-2 py-3 text-nearblue-600\">\n          <Skeleton className=\"h-10\" />\n        </div>\n      )}\n      {txns && txns?.length > 0 && (\n        <div className=\"border-t dark:border-black-200 px-2 py-3 text-nearblue-600\">\n          <Link href=\"/txns\">\n            <a className=\"block text-center dark:text-black  border border-green-900/10 font-thin bg-green-500 dark:bg-green-250 hover:bg-green-400 text-white text-xs py-3 rounded w-full focus:outline-none hover:no-underline\">\n              View all transactions\n            </a>\n          </Link>\n        </div>\n      )}\n    </>\n  );\n}\n\nreturn MainComponent(props, context);", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/nearblocksonbos.near/widget/bos-components.components.Transactions.Latest", "fact_widget_deployments_id": "f005622a09fb13347ac2cee4fee77d80", "inserted_timestamp": "2024-04-17T01:58:31.238Z", "modified_timestamp": "2024-04-17T01:58:31.238Z", "__row_index": 16}