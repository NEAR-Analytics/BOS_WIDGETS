{"tx_hash": "DBsho1DS5mp1sPWmgYF6BFeVDWGfj77tS9nkdLZ6iVSQ", "action_id_social": "9ewozHrFfmTDR1ykey9xyRERL7MUHxFLUNTzHcCrGh9f-0-widget", "block_id": 119039126, "block_timestamp": "2024-05-16T10:30:41.323Z", "signer_id": "nearblocksonbos.near", "widget_name": "bos-components.components.Transactions.ReceiptSummary", "source_code": "/**\n * Component: TransactionsReceiptSummary\n * Author: Nearblocks Pte Ltd\n * License: Business Source License 1.1\n * Description: List of Transaction Receipt Summary on Near Protocol.\n * @interface Props\n * @param {string} [network] - The network data to show, either mainnet or testnet\n * @param {Function} [t] - A function for internationalization (i18n) provided by the next-translate package.\n * @param {TransactionInfo} [txn] - Information related to a transaction.\n * @param {RPCTransactionInfo} [rpcTxn] - RPC data of the transaction.\n * @param {string} ownerId - The identifier of the owner of the component.\n */\n\n\n\n\n\n\n\n\n\n/* INCLUDE COMPONENT: \"includes/Common/ErrorMessage.jsx\" */\nconst ErrorMessage = ({ icons, message, mutedText }) => {\n  return (\n    <div className=\"text-center py-24\">\n      <div className=\"mb-4 flex justify-center\">\n        <span className=\"inline-block border border-yellow-600 border-opacity-25 bg-opacity-10 bg-yellow-300 text-yellow-500 rounded-full p-4\">\n          {icons}\n        </span>\n      </div>\n\n      <h3 className=\"font-bold text-lg text-black dark:text-neargray-10\">\n        {message}\n      </h3>\n\n      <p className=\"mb-0 py-1 font-bold break-words px-2\">{mutedText}</p>\n    </div>\n  );\n};/* END_INCLUDE COMPONENT: \"includes/Common/ErrorMessage.jsx\" */\n/* INCLUDE COMPONENT: \"includes/Common/Skeleton.jsx\" */\n/**\n * @interface Props\n * @param {string} [className] - The CSS class name(s) for styling purposes.\n */\n\n\n\n\n\nconst Skeleton = (props) => {\n  return (\n    <div\n      className={`bg-gray-200 dark:bg-black-200 rounded shadow-sm animate-pulse ${props.className}`}\n    ></div>\n  );\n};/* END_INCLUDE COMPONENT: \"includes/Common/Skeleton.jsx\" */\n/* INCLUDE COMPONENT: \"includes/icons/FaHourglassStart.jsx\" */\nconst FaHourglassStart = (props) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      height=\"1em\"\n      viewBox=\"0 0 384 512\"\n      {...props}\n    >\n      <path\n        d=\"M32 0C14.3 0 0 14.3 0 32S14.3 64 32 64V75c0 42.4 16.9 83.1 46.9 113.1L146.7 256 78.9 323.9C48.9 353.9 32 394.6 32 437v11c-17.7 0-32 14.3-32 32s14.3 32 32 32H64 320h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V437c0-42.4-16.9-83.1-46.9-113.1L237.3 256l67.9-67.9c30-30 46.9-70.7 46.9-113.1V64c17.7 0 32-14.3 32-32s-14.3-32-32-32H320 64 32zM288 437v11H96V437c0-25.5 10.1-49.9 28.1-67.9L192 301.3l67.9 67.9c18 18 28.1 42.4 28.1 67.9z\"\n        fill=\"#FFEB3B\"\n      />\n    </svg>\n  );\n};/* END_INCLUDE COMPONENT: \"includes/icons/FaHourglassStart.jsx\" */\n/* INCLUDE COMPONENT: \"includes/icons/FaInbox.jsx\" */\nconst FaInbox = () => {\n  return (\n    <svg\n      stroke=\"currentColor\"\n      fill=\"currentColor\"\n      stroke-width=\"0\"\n      viewBox=\"0 0 576 512\"\n      height=\"24\"\n      width=\"24\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path d=\"M567.938 243.908L462.25 85.374A48.003 48.003 0 0 0 422.311 64H153.689a48 48 0 0 0-39.938 21.374L8.062 243.908A47.994 47.994 0 0 0 0 270.533V400c0 26.51 21.49 48 48 48h480c26.51 0 48-21.49 48-48V270.533a47.994 47.994 0 0 0-8.062-26.625zM162.252 128h251.497l85.333 128H376l-32 64H232l-32-64H76.918l85.334-128z\"></path>\n    </svg>\n  );\n};/* END_INCLUDE COMPONENT: \"includes/icons/FaInbox.jsx\" */\n\nfunction MainComponent(props) {\n  const { network, rpcTxn, txn, t, ownerId } = props;\n\n  const { mapRpcActionToAction } = VM.require(\n    `${ownerId}/widget/includes.Utils.near`,\n  );\n  const [receipt, setReceipt] = useState(null);\n  function transactionReceipts(txn) {\n    const actions =\n      txn?.transaction?.actions &&\n      txn?.transaction?.actions?.map((txn) => mapRpcActionToAction(txn));\n    const receipts = txn?.receipts;\n    const receiptsOutcome = txn?.receipts_outcome;\n\n    if (\n      receipts?.length === 0 ||\n      receipts[0]?.receipt_id !== receiptsOutcome[0]?.id\n    ) {\n      receipts?.unshift({\n        predecessor_id: txn?.transaction?.signer_id,\n        receipt: actions,\n        receipt_id: receiptsOutcome[0]?.id,\n        receiver_id: txn?.transaction?.receiver_id,\n      });\n    }\n\n    const receiptOutcomesByIdMap = new Map();\n    const receiptsByIdMap = new Map();\n\n    receiptsOutcome &&\n      receiptsOutcome?.forEach((receipt) => {\n        receiptOutcomesByIdMap?.set(receipt?.id, receipt);\n      });\n\n    receipts &&\n      receipts?.forEach((receiptItem) => {\n        receiptsByIdMap?.set(receiptItem?.receipt_id, {\n          ...receiptItem,\n          actions:\n            receiptItem?.receipt_id === receiptsOutcome[0]?.id\n              ? actions\n              : receiptItem?.receipt?.Action?.actions &&\n                receiptItem?.receipt?.Action?.actions.map((receipt) =>\n                  mapRpcActionToAction(receipt),\n                ),\n        });\n      });\n\n    const collectReceipts = (receiptHash) => {\n      const receipt = receiptsByIdMap?.get(receiptHash);\n      const receiptOutcome = receiptOutcomesByIdMap?.get(receiptHash);\n\n      return {\n        ...receipt,\n        ...receiptOutcome,\n        outcome: {\n          ...receiptOutcome?.outcome,\n          outgoing_receipts:\n            receiptOutcome?.outcome?.receipt_ids &&\n            receiptOutcome?.outcome?.receipt_ids?.map(collectReceipts),\n        },\n      };\n    };\n\n    return collectReceipts(receiptsOutcome[0]?.id);\n  }\n\n  useEffect(() => {\n    if (rpcTxn) {\n      const receipt = transactionReceipts(rpcTxn);\n      setReceipt(receipt);\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [rpcTxn]);\n\n  const txnsPending = txn?.outcomes?.status === null;\n  return (\n    <div className=\" text-sm text-nearblue-600 dark:text-neargray-10 dark:divide-black-200 divide-solid divide-gray-200 divide-y\">\n      {txnsPending ? (\n        <div className=\"flex justify-center text-base p-24\">\n          <div className=\"text-center\">\n            <div className=\"inline-flex items-center text-base rounded bg-yellow-50 dark:bg-black-200 text-yellow-500 animate-spin my-3\">\n              <FaHourglassStart className=\"w-5 !h-5\" />\n            </div>\n\n            <h1 className=\"text-lg text-nearblue-600 dark:text-neargray-10\">\n              This transaction is pending confirmation.\n            </h1>\n          </div>\n        </div>\n      ) : (\n        <>\n          <div className=\"relative overflow-x-auto rounded-xl\">\n            <table className=\"min-w-full divide-y rounded-xl dark:divide-black-200 dark:border-black-200\">\n              <thead className=\"bg-gray-100 dark:bg-black-300\">\n                <tr>\n                  <th\n                    scope=\"col\"\n                    className=\"px-6 py-4 text-left text-xs font-semibold text-nearblue-600  dark:text-neargray-10 uppercase whitespace-nowrap tracking-wider\"\n                  >\n                    Action\n                  </th>\n                  <th\n                    scope=\"col\"\n                    className=\"px-4 py-4 text-left text-xs font-semibold text-nearblue-600 dark:text-neargray-10 uppercase whitespace-nowrap tracking-wider\"\n                  >\n                    Method\n                  </th>\n                  <th\n                    scope=\"col\"\n                    className=\"px-4 py-4 text-left text-xs font-semibold text-nearblue-600  dark:text-neargray-10 uppercase whitespace-nowrap tracking-wider\"\n                  >\n                    {t ? t('txns:txn.receipts.from.text.0') : 'From'}\n                  </th>\n                  <th\n                    scope=\"col\"\n                    className=\"px-4 py-4 text-left text-xs font-semibold text-nearblue-600 dark:text-neargray-10 uppercase whitespace-nowrap tracking-wider\"\n                  ></th>\n                  <th\n                    scope=\"col\"\n                    className=\"px-4 py-4 text-left text-xs font-semibold text-nearblue-600 dark:text-neargray-10 uppercase whitespace-nowrap tracking-wider\"\n                  >\n                    {t ? t('txns:txn.receipts.to.text.0') : 'To'}\n                  </th>\n                  <th\n                    scope=\"col\"\n                    className=\"px-4 py-4 text-left text-xs font-semibold text-nearblue-600 dark:text-neargray-10 uppercase whitespace-nowrap tracking-wider\"\n                  >\n                    Value\n                  </th>\n                  <th\n                    scope=\"col\"\n                    className=\"px-4 py-4 text-left text-xs font-semibold text-nearblue-600 dark:text-neargray-10 uppercase whitespace-nowrap tracking-wider\"\n                  >\n                    Gass Limit\n                  </th>\n                </tr>\n              </thead>\n              <tbody className=\"bg-white dark:bg-black-600 dark:divide-black-200 divide-y divide-gray-200\">\n                {!receipt?.id &&\n                  [...Array(10)].map((_, i) => (\n                    <tr key={i} className=\"hover:bg-blue-900/5 h-[57px]\">\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-nearblue-600 dark:text-neargray-10\">\n                        <Skeleton className=\"w-full h-4\" />\n                      </td>\n                      <td className=\"px-4 py-4 whitespace-nowrap text-sm text-nearblue-600 dark:text-neargray-10\">\n                        <Skeleton className=\"w-full h-4\" />\n                      </td>\n                      <td className=\"px-4 py-4 whitespace-nowrap text-tiny \">\n                        <Skeleton className=\"w-full h-4\" />\n                      </td>\n                      <td className=\"px-4 py-4 whitespace-nowrap text-sm text-nearblue-600 dark:text-neargray-10\">\n                        <Skeleton className=\"w-full h-4\" />\n                      </td>\n                      <td className=\"px-4 py-4 whitespace-nowrap text-sm text-nearblue-600 dark:text-neargray-10\">\n                        <Skeleton className=\"w-full h-4\" />\n                      </td>\n                      <td className=\"px-4 py-4 whitespace-nowrap text-sm text-nearblue-600 dark:text-neargray-10\">\n                        <Skeleton className=\"w-full h-4\" />\n                      </td>\n                      <td className=\"px-4 py-4 whitespace-nowrap text-sm text-nearblue-600 dark:text-neargray-10\">\n                        <Skeleton className=\"w-full h-4\" />\n                      </td>\n                    </tr>\n                  ))}\n                {receipt?.actions?.length === 0 && (\n                  <tr className=\"h-[57px]\">\n                    <td\n                      colSpan={100}\n                      className=\"px-6 py-4 text-nearblue-700 dark:text-gray-400 text-xs\"\n                    >\n                      <ErrorMessage\n                        icons={<FaInbox />}\n                        message=\"No access keys\"\n                        mutedText=\"Please try again later\"\n                      />\n                    </td>\n                  </tr>\n                )}\n                {receipt?.id && (\n                  <Widget\n                    src={`${ownerId}/widget/bos-components.components.Transactions.ReceiptSummaryRow`}\n                    props={{\n                      txn: txn,\n                      receipt: receipt,\n                      network: network,\n                      t: t,\n                      ownerId,\n                    }}\n                  />\n                )}{' '}\n              </tbody>\n            </table>\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n\nreturn MainComponent(props, context);", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/nearblocksonbos.near/widget/bos-components.components.Transactions.ReceiptSummary", "fact_widget_deployments_id": "bdd6aceccbbe34f3682fbfd6d281a72e", "inserted_timestamp": "2024-05-16T11:49:40.926Z", "modified_timestamp": "2024-05-16T12:57:51.740Z", "__row_index": 3}