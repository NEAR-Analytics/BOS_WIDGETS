{"tx_hash": "dvp8Y1jJ65qRZRqJpv1VWNPAYvviwiMhmFXxnoVV9Je", "action_id_social": "RSvouSo6DvJEmVXv8RPg8J61FdyJrktrXeR7oFcanbb-0-widget", "block_id": 118631334, "block_timestamp": "2024-05-10T09:09:21.971Z", "signer_id": "nearblocksonbos.near", "widget_name": "includes.Common.Receipts.TransactionActions", "source_code": "import AddKey from '@/includes/Common/Receipts/Action/AddKey';\nimport CreateAccount from '@/includes/Common/Receipts/Action/CreateAccount';\n\n\n\n\n\n\nimport DeleteAccount from '@/includes/Common/Receipts/Action/DeleteAccount';\nimport DeleteKey from '@/includes/Common/Receipts/Action/DeleteKey';\nimport DeployContract from '@/includes/Common/Receipts/Action/DeployContract';\nimport FunctionCall from '@/includes/Common/Receipts/Action/FunctionCall';\nimport Stake from '@/includes/Common/Receipts/Action/Stake';\nimport Transfer from '@/includes/Common/Receipts/Action/Transfer';\n\nconst TransactionActions = (props) => {\n  const { action, receiver, t, ownerId } = props;\n  const { mapRpcActionToAction } = VM.require(\n    `${ownerId}/widget/includes.Utils.near`,\n  );\n\n  switch (action.action_kind) {\n    case 'ADD_KEY':\n    case 'AddKey':\n      return (\n        <AddKey\n          args={action.args}\n          receiver={receiver}\n          t={t}\n          ownerId={ownerId}\n        />\n      );\n    case 'CREATE_ACCOUNT':\n    case 'CreateAccount':\n      return (\n        <CreateAccount\n          args={action.args}\n          receiver={receiver}\n          t={t}\n          ownerId={ownerId}\n        />\n      );\n    case 'DELETE_ACCOUNT':\n    case 'DeleteAccount':\n      return (\n        <DeleteAccount\n          args={action.args}\n          receiver={receiver}\n          t={t}\n          ownerId={ownerId}\n        />\n      );\n    case 'DELETE_KEY':\n    case 'DeleteKey':\n      return (\n        <DeleteKey\n          args={action.args}\n          receiver={receiver}\n          t={t}\n          ownerId={ownerId}\n        />\n      );\n    case 'DEPLOY_CONTRACT':\n    case 'DeployContract':\n      return (\n        <DeployContract\n          args={action.args}\n          receiver={receiver}\n          t={t}\n          ownerId={ownerId}\n        />\n      );\n    case 'FUNCTION_CALL':\n    case 'FunctionCall':\n      return (\n        <FunctionCall\n          args={action.args}\n          receiver={receiver}\n          t={t}\n          ownerId={ownerId}\n        />\n      );\n    case 'STAKE':\n    case 'Stake':\n      return (\n        <Stake args={action.args} receiver={receiver} t={t} ownerId={ownerId} />\n      );\n    case 'TRANSFER':\n    case 'Transfer':\n      return (\n        <Transfer\n          args={action.args}\n          receiver={receiver}\n          t={t}\n          ownerId={ownerId}\n        />\n      );\n    case 'Delegate':\n    case 'DELEGATE':\n      const delegateAction =\n        action?.args?.delegate_action?.actions &&\n        action?.args?.delegate_action?.actions?.map((txn) =>\n          mapRpcActionToAction(txn),\n        );\n      return (\n        delegateAction &&\n        delegateAction.map((subAction, i) => (\n          <div className=\"flex flex-col\" key={i}>\n            <p className=\"text-sm font-semibold\">\n              Actions delegated for {receiver}\n            </p>\n            <TransactionActions\n              key={i}\n              action={subAction}\n              receiver={action?.args?.delegate_action?.receiver_id}\n              t={t}\n              ownerId={ownerId}\n            />\n          </div>\n        ))\n      );\n\n    default:\n      return <div>{action.action_kind}</div>;\n  }\n};\n\nexport default TransactionActions;\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/nearblocksonbos.near/widget/includes.Common.Receipts.TransactionActions", "fact_widget_deployments_id": "8a230e897d48ec0780c2a140cf40d1b4", "inserted_timestamp": "2024-05-10T10:40:21.417Z", "modified_timestamp": "2024-05-10T10:40:21.417Z", "__row_index": 0}