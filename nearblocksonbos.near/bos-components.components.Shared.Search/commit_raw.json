{"tx_hash": "CGBtQfZRxwoyet2zAZpHkBLnHPRbbYd8dHcBLuyLK7F7", "action_id_social": "GndMguhecssQUYmnpemUjwDfKCXBBuxqWFiLvrCcDTqq-0-widget", "block_id": 117382539, "block_timestamp": "2024-04-22T12:53:30.188Z", "signer_id": "nearblocksonbos.near", "widget_name": "bos-components.components.Shared.Search", "source_code": "/**\n * @interface Props\n * @param {string}  [network] - The network data to show, either mainnet or testnet.\n * @param {Function} [t] - A function for internationalization (i18n) provided by the next-translate package.\n * @param {boolean} [isHeader] - If the component is part of a header, apply alternate styles.\n * @param {{ push: (path: string) => void }} router - An object with a `push` function for routing purposes.\n * @param {string} ownerId - The identifier of the owner of the component.\n */\n\n\n\n\n\n\n\n\n\n\n/* INCLUDE COMPONENT: \"includes/icons/SearchIcon.jsx\" */\n/**\n * @interface Props\n * @param {string} [className] - The CSS class name(s) for styling purposes.\n */\n\n\n\n\nconst SearchIcon = (props) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n      width={16}\n      height={16}\n      {...props}\n    >\n      <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n      <path d=\"M11 2c4.968 0 9 4.032 9 9s-4.032 9-9 9-9-4.032-9-9 4.032-9 9-9zm0 16c3.867 0 7-3.133 7-7 0-3.868-3.133-7-7-7-3.868 0-7 3.132-7 7 0 3.867 3.132 7 7 7zm8.485.071l2.829 2.828-1.415 1.415-2.828-2.829 1.414-1.414z\" />\n    </svg>\n  );\n};/* END_INCLUDE COMPONENT: \"includes/icons/SearchIcon.jsx\" */\n/* INCLUDE COMPONENT: \"includes/icons/ArrowDown.jsx\" */\n/**\n * @interface Props\n * @param {string} [className] - The CSS class name(s) for styling purposes.\n */\n\n\n\n\nconst ArrowDown = (props) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n      width={24}\n      height={24}\n      {...props}\n    >\n      <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n      <path\n        fill=\"currentColor\"\n        d=\"M12 13.172l4.95-4.95 1.414 1.414L12 16 5.636 9.636 7.05 8.222z\"\n      />\n    </svg>\n  );\n};/* END_INCLUDE COMPONENT: \"includes/icons/ArrowDown.jsx\" */\n/* INCLUDE: \"includes/search.jsx\" */\nfunction search(\n  keyword,\n  filter,\n  returnPath,\n  url,\n) {\n  try {\n    const route = getRoute(filter);\n\n    return asyncFetch(`${url}search/${route}?keyword=${keyword}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n      .then((data) => {\n        const resp = data.body;\n        if (!resp) {\n          return returnPath\n            ? null\n            : { blocks: [], txns: [], accounts: [], receipts: [] };\n        }\n\n        if (resp.blocks?.length) {\n          return returnPath\n            ? { type: 'block', path: resp.blocks[0].block_hash }\n            : { blocks: resp.blocks, txns: [], accounts: [], receipts: [] };\n        }\n\n        if (resp.txns?.length) {\n          return returnPath\n            ? { type: 'txn', path: resp.txns[0].transaction_hash }\n            : { blocks: [], txns: resp.txns, accounts: [], receipts: [] };\n        }\n\n        if (resp.receipts?.length) {\n          return returnPath\n            ? {\n                type: 'txn',\n                path: resp.receipts[0].originated_from_transaction_hash,\n              }\n            : { blocks: [], txns: [], accounts: [], receipts: resp.receipts };\n        }\n\n        if (resp.accounts?.length) {\n          return returnPath\n            ? { type: 'address', path: resp.accounts[0].account_id }\n            : { blocks: [], txns: [], accounts: resp.accounts, receipts: [] };\n        }\n\n        return returnPath\n          ? null\n          : { blocks: [], txns: [], accounts: [], receipts: [] };\n      })\n      .catch((err) => {\n        console.error({ err });\n        return null;\n      });\n  } catch (err) {\n    console.error({ err });\n    return Promise.resolve(null);\n  }\n}\n\nfunction getRoute(filter) {\n  switch (filter) {\n    case 'txns':\n      return 'txns';\n    case 'blocks':\n      return 'blocks';\n    case 'accounts':\n      return 'accounts';\n    default:\n      return '';\n  }\n}\n/* END_INCLUDE: \"includes/search.jsx\" */\n\n/* INCLUDE COMPONENT: \"includes/icons/ErrorIcon.jsx\" */\n/**\n * @interface Props\n * @param {string} [className] - The CSS class name(s) for styling purposes.\n */\n\n\n\n\n\nconst ErrorIcon = (props) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 -960 960 960\"\n      width={16}\n      height={16}\n      {...props}\n    >\n      <path\n        fill=\"#ef4444\"\n        d=\"M479.579-257Q505-257 519.5-270.579t14.5-39Q534-335 519.921-350t-39.5-15Q455-365 440.5-350.193T426-309.965q0 25.421 14.079 39.193Q454.158-257 479.579-257ZM437-432h91v-269h-91v269Zm42.945 373q-87.053 0-164.146-32.604-77.094-32.603-134.343-89.852-57.249-57.249-89.852-134.41Q59-393.028 59-480.362q0-87.228 32.662-163.934 32.663-76.706 90.203-134.253 57.54-57.547 134.252-90.499Q392.829-902 479.836-902q87.369 0 164.544 32.858 77.175 32.858 134.401 90.257 57.225 57.399 90.222 134.514Q902-567.257 902-479.724q0 87.468-32.952 163.882t-90.499 133.781q-57.547 57.367-134.421 90.214Q567.255-59 479.945-59Z\"\n      />\n    </svg>\n  );\n};/* END_INCLUDE COMPONENT: \"includes/icons/ErrorIcon.jsx\" */\n/* INCLUDE COMPONENT: \"includes/Common/ToastMessage.jsx\" */\nconst ToastMessage = (props) => {\n  const [open, setOpen] = useState(true);\n  return (\n    <Toast.Provider swipeDirection=\"right\">\n      <Toast.Root\n        className=\"flex gap-4 p-4 max-w-sm w-full items-center justify-between bg-white dark:bg-black-200 rounded-lg shadow drop-shadow-md z-50 outline-none\"\n        open={open}\n        onOpenChange={setOpen}\n      >\n        {props.content}\n        <Toast.Action className=\"\" asChild altText=\"Goto schedule to undo\">\n          <button className=\"inline-flex h-fit w-fit items-center justify-center rounded-md font-medium text-red-500 focus:ring-red-500 focus:ring-offset-red-200 focus:ring-2 focus:outline-none focus:ring-offset-2 transition ease-in-out duration-150 text-xs lg:text-sm\">\n            x\n          </button>\n        </Toast.Action>\n      </Toast.Root>\n\n      <Toast.Viewport className=\"fixed top-0 right-0 gap-4 p-4 max-w-sm w-full rounded-lg z-50\" />\n    </Toast.Provider>\n  );\n};/* END_INCLUDE COMPONENT: \"includes/Common/ToastMessage.jsx\" */\n\nfunction MainComponent({\n  isHeader,\n  t,\n  network,\n  router,\n  ownerId,\n  networkUrl,\n}) {\n  const { localFormat, shortenHex } = VM.require(\n    `${ownerId}/widget/includes.Utils.formats`,\n  );\n\n  const { getConfig, shortenAddress } = VM.require(\n    `${ownerId}/widget/includes.Utils.libs`,\n  );\n  const [keyword, setKeyword] = useState('');\n  const [result, setResult] = useState({} );\n  const [filter, setFilter] = useState('all');\n  const [isResultsVisible, setIsResultsVisible] = useState(false);\n  const [showToast, setShowToast] = useState(false);\n  const config = getConfig && getConfig(network);\n\n  // Determine whether to show search results\n  const showResults =\n    (result?.blocks && result.blocks.length > 0) ||\n    (result?.txns && result.txns.length > 0) ||\n    (result?.accounts && result.accounts.length > 0) ||\n    (result?.receipts && result.receipts.length > 0);\n  const showSearchResults = () => {\n    setIsResultsVisible(true);\n  };\n\n  const hideSearchResults = () => {\n    setIsResultsVisible(false);\n  };\n\n  const SearchToast = () => {\n    return (\n      <div className=\"flex items-center\">\n        <div className=\"text-red-500 \">\n          <ErrorIcon className=\" mr-2 h-5 w-5\" />\n        </div>\n        <Toast.Title className=\"text-nearblue-700\">\n          No results. Try on\n        </Toast.Title>\n        <Toast.Description asChild>\n          <a\n            href={networkUrl}\n            className=\"text-green-500 dark:text-green-250 ml-2\"\n          >\n            {network === 'mainnet' ? 'Testnet' : 'Mainnet'}\n          </a>\n        </Toast.Description>\n      </div>\n    );\n  };\n  useEffect(() => {\n    const time = setTimeout(() => {\n      if (showToast) {\n        setShowToast(false);\n      }\n    }, 3000);\n    return () => clearTimeout(time);\n  }, [showToast]);\n  const redirect = (route) => {\n    switch (route?.type) {\n      case 'block':\n        return `/blocks/${route?.path}`;\n      case 'txn':\n        return `/txns/${route?.path}`;\n      case 'receipt':\n        return `/txns/${route?.path}`;\n      case 'address':\n        return `/address/${route?.path}`;\n      default:\n        return null;\n    }\n  };\n  // Handle input change\n  const handleChange = (event) => {\n    const newNextValue = event.target.value.replace(/[\\s,]/g, '') ;\n    setKeyword(newNextValue);\n    showSearchResults();\n  };\n\n  const onSubmit = () => {\n    if (filter && keyword && config.backendUrl) {\n      search(keyword, filter, true, config.backendUrl).then((data) => {\n        hideSearchResults();\n        const redirectPath = redirect(data);\n        if (redirectPath) {\n          router.push(redirectPath);\n        } else {\n          setShowToast(true);\n        }\n      });\n    }\n  };\n  const onSelect = () => {\n    hideSearchResults();\n  };\n  useEffect(() => {\n    const fetchData = (keyword, filter) => {\n      if (filter && keyword) {\n        search(keyword, filter, false, config.backendUrl).then((data) => {\n          setResult(data || {});\n        });\n      }\n    };\n    if (config.backendUrl) {\n      fetchData(keyword, filter);\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [keyword, filter, config.backendUrl]);\n  // Handle filter change\n  const onFilter = (event) =>\n    setFilter(event.target.value);\n  return (\n    <>\n      {showToast && <ToastMessage content={<SearchToast />} />}\n      <div className=\"flex flex-grow\">\n        <div className={`flex w-full ${isHeader ? 'h-11' : 'h-12'}`}>\n          <label className=\"relative hidden md:flex\">\n            <select\n              className={`h-full block text-sm text-nearblue-600 ${\n                isHeader\n                  ? 'bg-blue-900/[0.05] dark:bg-black dark:text-neargray-10'\n                  : 'bg-gray-100 dark:bg-black-500 dark:text-neargray-10'\n              }  pl-4 pr-9  cursor-pointer focus:outline-none appearance-none rounded-none rounded-l-lg border  dark:border-black-200 dark:text-neargray-10\t`}\n              value={filter}\n              onChange={onFilter}\n            >\n              <option value=\"all\">\n                {t ? t('common:search.filters.all') : 'All filters'}\n              </option>\n              <option value=\"txns\">\n                {t ? t('common:search.filters.txns') : 'Txns'}\n              </option>\n              <option value=\"blocks\">\n                {t ? t('common:search.filters.blocks') : 'Blocks'}\n              </option>\n              <option value=\"accounts\">\n                {t ? t('common:search.filters.addresses') : 'Addresses'}\n              </option>\n            </select>\n            <ArrowDown className=\"absolute right-3 top-3.5 w-4 h-4 fill-current text-nearblue-600 dark:text-neargray-10 pointer-events-none\" />\n          </label>\n          <div className=\"flex-grow\">\n            <input\n              placeholder={\n                t\n                  ? t('common:search.placeholder')\n                  : 'Search by Account ID / Txn Hash / Block'\n              }\n              className=\"search bg-white dark:bg-black-600 dark:text-neargray-10 w-full h-full text-sm px-4 py-3 outline-none dark:border-black-200 border-l border-t border-b md:border-l-0 rounded-l-lg rounded-r-none md:rounded-l-none\"\n              onChange={handleChange}\n              onKeyDown={(e) => {\n                if (e.key === 'Enter') {\n                  onSubmit();\n                }\n              }}\n            />\n            {isResultsVisible && showResults && (\n              <div className=\"z-50 relative dark:bg-black-600\">\n                <div className=\"text-xs rounded-b-lg  bg-gray-50 py-2 shadow border dark:border-black-200 dark:bg-black-600\">\n                  {result?.accounts && result.accounts.length > 0 && (\n                    <>\n                      <h3 className=\" mx-2 my-2 px-2 py-2 text-sm bg-gray-100 dark:text-neargray-10 dark:bg-black-200 rounded\">\n                        {t ? t('common:search.list.address') : 'Account'}\n                      </h3>\n                      {result.accounts.map((address) => (\n                        <Link\n                          href={`/address/${address.account_id}`}\n                          className=\"hover:no-underline\"\n                          key={address.account_id}\n                        >\n                          <div\n                            className=\"mx-2 px-2 py-2 hover:bg-gray-100 dark:hover:bg-black-200 dark:text-neargray-10 cursor-pointer rounded hover:border-gray-500 truncate\"\n                            onClick={onSelect}\n                          >\n                            {shortenAddress(address.account_id)}\n                          </div>\n                        </Link>\n                      ))}\n                    </>\n                  )}\n                  {result?.txns && result.txns.length > 0 && (\n                    <>\n                      <h3 className=\" mx-2 my-2 px-2 py-2 text-sm bg-gray-100 dark:text-neargray-10 dark:bg-black-200 rounded\">\n                        {t ? t('common:search.list.txns') : 'Txns'}\n                      </h3>\n                      {result.txns.map((txn) => (\n                        <Link\n                          className=\"hover:no-underline\"\n                          href={`/txns/${txn.transaction_hash}`}\n                          key={txn.transaction_hash}\n                        >\n                          <div\n                            className=\"mx-2 px-2 py-2 hover:bg-gray-100 dark:hover:bg-black-200 dark:text-neargray-10 rounded cursor-pointer hover:border-gray-500 truncate\"\n                            onClick={onSelect}\n                          >\n                            {shortenHex(txn.transaction_hash)}\n                          </div>\n                        </Link>\n                      ))}\n                    </>\n                  )}\n                  {result?.receipts && result.receipts.length > 0 && (\n                    <>\n                      <h3 className=\" mx-2 my-2 px-2 py-2 text-sm bg-gray-100 dark:text-neargray-10 dark:bg-black-200 rounded\">\n                        Receipts\n                      </h3>\n                      {result.receipts.map((receipt) => (\n                        <Link\n                          href={`/txns/${receipt.originated_from_transaction_hash}`}\n                          className=\"hover:no-underline\"\n                          key={receipt.receipt_id}\n                        >\n                          <div\n                            className=\"mx-2 px-2 py-2 hover:bg-gray-100 dark:hover:bg-black-200 dark:text-neargray-10 rounded cursor-pointer hover:border-gray-500 truncate\"\n                            onClick={onSelect}\n                          >\n                            {shortenHex(receipt.receipt_id)}\n                          </div>\n                        </Link>\n                      ))}\n                    </>\n                  )}\n                  {result?.blocks && result.blocks.length > 0 && (\n                    <>\n                      <h3 className=\" mx-2 my-2 px-2 py-2 text-sm bg-gray-100 dark:text-neargray-10 dark:bg-black-200 rounded\">\n                        {t ? t('common:search.list.blocks') : 'Blocks'}\n                      </h3>\n                      {result.blocks.map((block) => (\n                        <Link\n                          href={`/blocks/${block.block_hash}`}\n                          className=\"hover:no-underline\"\n                          key={block.block_hash}\n                        >\n                          <div\n                            className=\"mx-2 px-2 py-2 hover:bg-gray-100 dark:hover:bg-black-200 dark:text-neargray-10 rounded cursor-pointer hover:border-gray-500 truncate\"\n                            onClick={onSelect}\n                          >\n                            #\n                            {block.block_height\n                              ? localFormat(block.block_height)\n                              : ''}{' '}\n                            (0x\n                            {shortenHex(block.block_hash)})\n                          </div>\n                        </Link>\n                      ))}\n                    </>\n                  )}\n                </div>\n              </div>\n            )}\n          </div>\n          <button\n            type=\"button\"\n            onClick={() => onSubmit()}\n            className={`${\n              isHeader\n                ? 'bg-blue-900/[0.05] dark:bg-black-600'\n                : 'bg-gray-100 dark:bg-black-500'\n            } rounded-r-lg px-5 outline-none focus:outline-none border dark:border-black-200`}\n          >\n            <SearchIcon className=\"text-gray-700 dark:text-gray-100 fill-current \" />\n          </button>\n        </div>\n      </div>\n    </>\n  );\n}\n\nreturn MainComponent(props, context);", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/nearblocksonbos.near/widget/bos-components.components.Shared.Search", "fact_widget_deployments_id": "8280b950277bd124e98d70b5f7f1107f", "inserted_timestamp": "2024-04-22T14:36:25.679Z", "modified_timestamp": "2024-04-22T14:36:25.679Z", "__row_index": 20}