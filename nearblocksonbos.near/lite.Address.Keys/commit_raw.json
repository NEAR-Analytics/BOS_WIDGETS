{"tx_hash": "6QZKTQHJbre9RsdmjAPKxGwwcR2bYwQDLnUGpuRG34cF", "action_id_social": "9CYpW14k6hNHfEBSLQSDxhZmU9mbaJCyTqEAsgxqMx72-0-widget", "block_id": 120910813, "block_timestamp": "2024-06-11T06:41:50.245Z", "signer_id": "nearblocksonbos.near", "widget_name": "lite.Address.Keys", "source_code": "const LIMIT = 25;\nlet Skeleton = window?.Skeleton || (({ children }) => <>{children}</>);\nconst Keys = ({ id, rpcUrl }) => {\n  let { rpcFetch } = VM.require(\n    `nearblocksonbos.near/widget/lite.libs.fetcher`\n  );\n  let { yoctoToNear } = VM.require(\n    `nearblocksonbos.near/widget/lite.libs.convertor`\n  );\n  let { formatNumber } = VM.require(\n    `nearblocksonbos.near/widget/lite.libs.formatter`\n  );\n  let { shortenString } = VM.require(\n    `nearblocksonbos.near/widget/lite.libs.utils`\n  );\n  yoctoToNear = yoctoToNear || (() => <></>);\n  formatNumber = formatNumber || (() => <></>);\n  shortenString = shortenString || (() => <></>);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [keys, setKeys] = useState([]);\n  const [page, setPage] = useState(1);\n  const pages = Math.ceil(keys.length / LIMIT);\n  const start = (page - 1) * LIMIT;\n  const end = start + LIMIT;\n  const items = keys?.slice(start, end);\n  useEffect(() => {\n    if (rpcFetch && rpcUrl && id) {\n      setLoading(true);\n      rpcFetch(rpcUrl, \"query\", {\n        account_id: id,\n        finality: \"final\",\n        request_type: \"view_access_key_list\",\n      })\n        .then((response) => {\n          const keys = response.keys.map((key) => {\n            const publicKey = key.public_key;\n            let access = \"FULL\";\n            let contract = \"\";\n            let methods = \"\";\n            let allowance = \"\";\n            if (key.access_key.permission !== \"FullAccess\") {\n              const keyView = key.access_key.permission.FunctionCall;\n              access = \"LIMITED\";\n              contract = keyView.receiver_id;\n              methods = keyView.method_names?.length\n                ? keyView.method_names.join(\", \")\n                : \"Any\";\n              allowance = keyView.allowance;\n            }\n            return {\n              access,\n              allowance,\n              contract,\n              methods,\n              publicKey,\n            };\n          });\n          if (keys.length) {\n            setKeys(keys);\n          }\n        })\n        .catch(setError)\n        .finally(() => setLoading(false));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [id]);\n  const onPrev = () => {\n    setPage((prevPage) => Math.max(prevPage - 1, 1));\n  };\n  const onNext = () => {\n    setPage((prevPage) => Math.min(prevPage + 1, pages));\n  };\n  return (\n    <div className=\"relative rounded-lg overflow-auto bg-bg-box border border-border-body my-6\">\n      <table className=\"table-auto border-collapse w-full\">\n        <thead>\n          <tr>\n            <th className=\"w-[300px] font-normal text-xs text-text-label uppercase text-left pl-6 pr-4 py-4\">\n              Public Key\n            </th>\n            <th className=\"w-[84px] font-normal text-xs text-text-label uppercase text-left px-4 py-4\">\n              Access\n            </th>\n            <th className=\"w-[160px] font-normal text-xs text-text-label uppercase text-left px-4 py-4\">\n              Contract\n            </th>\n            <th className=\"w-[240px] font-normal text-xs text-text-label uppercase text-left px-4 py-4\">\n              Methods\n            </th>\n            <th className=\"w-[112px] font-normal text-xs text-text-label uppercase text-left pl-4 pr-6 py-4\">\n              Allowance\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td className=\"px-6\" colSpan={5}>\n              <span className=\"block w-full border-b border-b-border-body\" />\n            </td>\n          </tr>\n          {loading ? (\n            [...Array(LIMIT).keys()].map((key) => (\n              <tr key={key}>\n                <td className=\"h-[46px] pl-6 pr-4 py-4\">\n                  <span className=\"flex\">\n                    <Skeleton className=\"h-5 w-[190px]\" loading>\n                      &nbsp;\n                    </Skeleton>\n                  </span>\n                </td>\n                <td className=\"h-[46px] px-4 py-4\">\n                  <span className=\"flex\">\n                    <Skeleton className=\"h-5 w-[64px]\" loading>\n                      &nbsp;\n                    </Skeleton>\n                  </span>\n                </td>\n                <td className=\"h-[46px] px-4 py-4\">\n                  <span className=\"flex\">\n                    <Skeleton className=\"h-5 w-[100px]\" loading>\n                      &nbsp;\n                    </Skeleton>\n                  </span>\n                </td>\n                <td className=\"h-[46px] px-4 py-4\">\n                  <span className=\"flex\">\n                    <Skeleton className=\"h-5 w-[160px]\" loading>\n                      &nbsp;\n                    </Skeleton>\n                  </span>\n                </td>\n                <td className=\"h-[46px] pl-4 pr-6 py-4\">\n                  <span className=\"flex\">\n                    <Skeleton className=\"h-5 w-[64px]\" loading>\n                      &nbsp;\n                    </Skeleton>\n                  </span>\n                </td>\n              </tr>\n            ))\n          ) : items?.length ? (\n            items?.map((key) => (\n              <tr className=\"hover:bg-bg-body\" key={key.publicKey}>\n                <td className=\"text-sm pl-6 pr-4 py-4\">\n                  <Widget\n                    key=\"tooltip\"\n                    loading={shortenString(key.publicKey, 15)}\n                    props={{\n                      children: shortenString(key.publicKey, 15),\n                      tooltip: (\n                        <span>\n                          <span className=\"mr-1\">{key.publicKey}</span>\n                          <Widget\n                            key=\"copy\"\n                            loading={\n                              <span className=\"block w-4 h-4 truncate\" />\n                            }\n                            props={{\n                              buttonClassName: \"h-4 align-text-bottom\",\n                              className: \"w-4\",\n                              text: key.publicKey,\n                            }}\n                            src={`nearblocksonbos.near/widget/lite.Atoms.Copy`}\n                          />\n                        </span>\n                      ),\n                    }}\n                    src={`nearblocksonbos.near/widget/lite.Atoms.Tooltip`}\n                  />\n                </td>\n                <td className=\"text-xs px-4 py-4\">\n                  <span className=\"bg-bg-function text-black px-2 py-1 rounded\">\n                    {key.access}\n                  </span>\n                </td>\n                <td className=\"font-medium text-sm px-4 py-4\">\n                  {key.contract && (\n                    <Widget\n                      key=\"tooltip\"\n                      loading={shortenString(key.contract)}\n                      props={{\n                        children: (\n                          <Link href={`/address/${key.contract}`}>\n                            {shortenString(key.contract)}\n                          </Link>\n                        ),\n                        tooltip: key.contract,\n                      }}\n                      src={`nearblocksonbos.near/widget/lite.Atoms.Tooltip`}\n                    />\n                  )}\n                </td>\n                <td className=\"text-sm px-4 py-4\">\n                  <Widget\n                    key=\"tooltip\"\n                    loading={\n                      <span className=\"block w-[200px] truncate\">\n                        {key.methods}\n                      </span>\n                    }\n                    props={{\n                      children: (\n                        <span className=\"block w-[200px] truncate\">\n                          {key.methods}\n                        </span>\n                      ),\n                      tooltip: key.methods,\n                    }}\n                    src={`nearblocksonbos.near/widget/lite.Atoms.Tooltip`}\n                  />\n                </td>\n                <td className=\"text-sm pl-4 pr-6 py-4\">\n                  {key.allowance\n                    ? `${formatNumber(yoctoToNear(key.allowance), 4)} \u24c3`\n                    : \"\"}\n                </td>\n              </tr>\n            ))\n          ) : error ? (\n            <tr>\n              <td\n                className=\"font-medium text-sm text-text-label px-6 py-4\"\n                colSpan={5}\n              >\n                Error fetching access keys\n              </td>\n            </tr>\n          ) : (\n            <tr>\n              <td\n                className=\"font-medium text-sm text-text-label px-6 py-4\"\n                colSpan={5}\n              >\n                No access keys\n              </td>\n            </tr>\n          )}\n        </tbody>\n      </table>\n      <div className=\"px-6\">\n        <div className=\"flex items-center justify-between border-t border-t-border-body\">\n          <button\n            className=\"font-normal text-xs text-text-label uppercase px-2 py-1 rounded mr-4 my-4 border border-border-body hover:text-primary hover:border-primary disabled:opacity-50 disabled:cursor-not-allowed disabled:text-text-label disabled:border-border-body\"\n            disabled={page <= 1}\n            onClick={onPrev}\n          >\n            Prev\n          </button>\n          <div className=\"font-normal text-xs text-text-label uppercase px-2 py-1 mx-4 my-4\">\n            Page {page}\n          </div>\n          <button\n            className=\"font-normal text-xs text-text-label uppercase px-2 py-1 rounded ml-4 my-4 border border-border-body hover:text-primary hover:border-primary disabled:opacity-50 disabled:cursor-not-allowed disabled:text-text-label disabled:border-border-body\"\n            disabled={page >= pages}\n            onClick={onNext}\n          >\n            Next\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\nreturn Keys(props);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/nearblocksonbos.near/widget/lite.Address.Keys", "fact_widget_deployments_id": "3579d9eec336892a72b2bb23f3573ce0", "inserted_timestamp": "2024-06-11T08:04:49.294Z", "modified_timestamp": "2024-06-11T08:04:49.294Z", "__row_index": 1}