{"tx_hash": "FVqgG7X4TjgnGKQ97tDkshCRehNqzNqzC2Y8D8sPEwuT", "action_id_social": "FUS64FVdXeDzsFjwDZGp1KXxxnrN3SntWQNEb9gzQiRM-0-widget", "block_id": 119039057, "block_timestamp": "2024-05-16T10:29:22.139Z", "signer_id": "nearblocksonbos.near", "widget_name": "bos-components.components.Blocks.List", "source_code": "/**\n * Component: BlocksList\n * Author: Nearblocks Pte Ltd\n * License: Business Source License 1.1\n * Description: Table of blocks on Near Protocol.\n * @interface Props\n * @param {string}  [network] - The network data to show, either mainnet or testnet.\n * @param {Function} [t] - A function for internationalization (i18n) provided by the next-translate package.\n * @param {number} [currentPage] - The current page number being displayed. (Optional)\n *                                 Example: If provided, currentPage=3 will display the third page of blocks.\n * @param {function} [setPage] - A function used to set the current page. (Optional)\n *                               Example: setPage={handlePageChange} where handlePageChange is a function to update the page.\n * @param {string} ownerId - The identifier of the owner of the component.\n */\n\n/* INCLUDE COMPONENT: \"includes/Common/ErrorMessage.jsx\" */\nconst ErrorMessage = ({ icons, message, mutedText }) => {\n  return (\n    <div className=\"text-center py-24\">\n      <div className=\"mb-4 flex justify-center\">\n        <span className=\"inline-block border border-yellow-600 border-opacity-25 bg-opacity-10 bg-yellow-300 text-yellow-500 rounded-full p-4\">\n          {icons}\n        </span>\n      </div>\n\n      <h3 className=\"font-bold text-lg text-black dark:text-neargray-10\">\n        {message}\n      </h3>\n\n      <p className=\"mb-0 py-1 font-bold break-words px-2\">{mutedText}</p>\n    </div>\n  );\n};/* END_INCLUDE COMPONENT: \"includes/Common/ErrorMessage.jsx\" */\n/* INCLUDE COMPONENT: \"includes/Common/Skeleton.jsx\" */\n/**\n * @interface Props\n * @param {string} [className] - The CSS class name(s) for styling purposes.\n */\n\n\n\n\n\nconst Skeleton = (props) => {\n  return (\n    <div\n      className={`bg-gray-200 dark:bg-black-200 rounded shadow-sm animate-pulse ${props.className}`}\n    ></div>\n  );\n};/* END_INCLUDE COMPONENT: \"includes/Common/Skeleton.jsx\" */\n/* INCLUDE COMPONENT: \"includes/icons/Clock.jsx\" */\n/**\n * @interface Props\n * @param {string} [className] - The CSS class name(s) for styling purposes.\n */\n\n\n\n\n\nconst Clock = (props) => (\n  <svg\n    viewBox=\"64 64 896 896\"\n    focusable=\"false\"\n    data-icon=\"clock-circle\"\n    width=\"1em\"\n    height=\"1em\"\n    fill=\"currentColor\"\n    aria-hidden=\"true\"\n    {...props}\n  >\n    <path d=\"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z\"></path>\n    <path d=\"M686.7 638.6L544.1 535.5V288c0-4.4-3.6-8-8-8H488c-4.4 0-8 3.6-8 8v275.4c0 2.6 1.2 5 3.3 6.5l165.4 120.6c3.6 2.6 8.6 1.8 11.2-1.7l28.6-39c2.6-3.7 1.8-8.7-1.8-11.2z\"></path>\n  </svg>\n);/* END_INCLUDE COMPONENT: \"includes/icons/Clock.jsx\" */\n/* INCLUDE COMPONENT: \"includes/icons/FaInbox.jsx\" */\nconst FaInbox = () => {\n  return (\n    <svg\n      stroke=\"currentColor\"\n      fill=\"currentColor\"\n      stroke-width=\"0\"\n      viewBox=\"0 0 576 512\"\n      height=\"24\"\n      width=\"24\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path d=\"M567.938 243.908L462.25 85.374A48.003 48.003 0 0 0 422.311 64H153.689a48 48 0 0 0-39.938 21.374L8.062 243.908A47.994 47.994 0 0 0 0 270.533V400c0 26.51 21.49 48 48 48h480c26.51 0 48-21.49 48-48V270.533a47.994 47.994 0 0 0-8.062-26.625zM162.252 128h251.497l85.333 128H376l-32 64H232l-32-64H76.918l85.334-128z\"></path>\n    </svg>\n  );\n};/* END_INCLUDE COMPONENT: \"includes/icons/FaInbox.jsx\" */\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction MainComponent({ currentPage, setPage, t, network, ownerId }) {\n  const {\n    convertToMetricPrefix,\n    formatTimestampToString,\n    gasFee,\n    getTimeAgoString,\n    localFormat,\n  } = VM.require(`${ownerId}/widget/includes.Utils.formats`);\n\n  const { getConfig, handleRateLimit, nanoToMilli, shortenAddress } =\n    VM.require(`${ownerId}/widget/includes.Utils.libs`);\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [countLoading, setCountLoading] = useState(false);\n  const [totalCount, setTotalCount] = useState(0);\n  const [showAge, setShowAge] = useState(true);\n  const [blocks, setBlocks] = useState({});\n  const errorMessage = t ? t('blocks:noBlocks') : 'No blocks!';\n  const [address, setAddress] = useState('');\n\n  const config = getConfig && getConfig(network);\n\n  useEffect(() => {\n    function fetchTotalBlocks() {\n      setCountLoading(true);\n      asyncFetch(`${config?.backendUrl}blocks/count`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      })\n        .then(\n          (data\n\n\n\n\n) => {\n            const resp = data?.body?.blocks?.[0];\n            if (data.status === 200) {\n              setTotalCount(resp?.count ?? 0);\n              setCountLoading(false);\n            } else {\n              handleRateLimit(data, fetchTotalBlocks, () =>\n                setCountLoading(false),\n              );\n            }\n          },\n        )\n        .catch(() => {})\n        .finally(() => {});\n    }\n\n    function fetchBlocks(page) {\n      setIsLoading(true);\n      asyncFetch(`${config?.backendUrl}blocks?page=${page}&per_page=25`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      })\n        .then(\n          (data\n\n\n\n\n) => {\n            const resp = data?.body?.blocks;\n            if (data.status === 200) {\n              setBlocks((prevData) => ({ ...prevData, [page]: resp || [] }));\n              setIsLoading(false);\n            } else {\n              handleRateLimit(\n                data,\n                () => fetchBlocks(page),\n                () => setIsLoading(false),\n              );\n            }\n          },\n        )\n        .catch(() => {});\n    }\n    if (config?.backendUrl) {\n      fetchTotalBlocks();\n      fetchBlocks(currentPage);\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [config?.backendUrl, currentPage]);\n\n  const onHandleMouseOver = (e, id) => {\n    e.preventDefault();\n\n    setAddress(id);\n  };\n  const handleMouseLeave = () => {\n    setAddress('');\n  };\n\n  const start = blocks[currentPage]?.[0];\n  const end = blocks[currentPage]?.[blocks[currentPage]?.length - 1];\n  const toggleShowAge = () => setShowAge((s) => !s);\n\n  const columns = [\n    {\n      header: <span>{t ? t('blocks:blocks') : 'BLOCK'}</span>,\n      key: 'block_hash',\n      cell: (row) => (\n        <span>\n          <Link\n            href={`/blocks/${row?.block_hash}`}\n            className=\"hover:no-underline\"\n          >\n            <a className=\"text-green-500 dark:text-green-250 hover:no-underline\">\n              {row?.block_height\n                ? localFormat(row?.block_height)\n                : row?.block_height ?? ''}\n            </a>\n          </Link>\n        </span>\n      ),\n      tdClassName:\n        'px-6 py-4 whitespace-nowrap text-sm text-nearblue-600  dark:text-neargray-10 font-medium',\n      thClassName:\n        'px-6 py-2 text-left text-xs font-semibold text-nearblue-600 dark:text-neargray-10 uppercase tracking-wider whitespace-nowrap',\n    },\n    {\n      header: (\n        <div>\n          <OverlayTrigger\n            placement=\"top\"\n            delay={{ show: 500, hide: 0 }}\n            overlay={\n              <Tooltip className=\"fixed h-auto max-w-xs bg-black bg-opacity-90 z-10 text-xs text-white px-3 py-2 break-words\">\n                {showAge\n                  ? 'Click to show Datetime Format'\n                  : 'Click to show Age Format'}\n              </Tooltip>\n            }\n          >\n            <button\n              type=\"button\"\n              onClick={toggleShowAge}\n              className=\"w-full flex items-center px-6 py-2 text-left text-xs font-semibold uppercase tracking-wider text-green-500 dark:text-green-250 focus:outline-none flex-row\"\n            >\n              {showAge ? (\n                <>\n                  {t ? t('blocks:age') : 'AGE'}\n                  <Clock className=\"text-green-500 dark:text-green-250 ml-2\" />\n                </>\n              ) : (\n                'DATE TIME (UTC)'\n              )}\n            </button>\n          </OverlayTrigger>\n        </div>\n      ),\n      key: 'block_timestamp',\n      cell: (row) => (\n        <span>\n          <OverlayTrigger\n            placement=\"bottom\"\n            delay={{ show: 500, hide: 0 }}\n            overlay={\n              <Tooltip className=\"fixed h-auto max-w-xs bg-black bg-opacity-90 z-10 text-xs text-white px-3 py-2 break-words\">\n                {showAge\n                  ? row?.block_timestamp\n                    ? formatTimestampToString(nanoToMilli(row?.block_timestamp))\n                    : ''\n                  : row?.block_timestamp\n                  ? getTimeAgoString(nanoToMilli(row?.block_timestamp))\n                  : ''}\n              </Tooltip>\n            }\n          >\n            <span>\n              {!showAge\n                ? row?.block_timestamp\n                  ? formatTimestampToString(nanoToMilli(row?.block_timestamp))\n                  : ''\n                : row?.block_timestamp\n                ? getTimeAgoString(nanoToMilli(row?.block_timestamp))\n                : ''}\n            </span>\n          </OverlayTrigger>\n        </span>\n      ),\n      tdClassName:\n        'px-6 py-4 whitespace-nowrap text-sm text-nearblue-600 dark:text-neargray-10',\n    },\n    {\n      header: <span>{t ? t('blocks:txn') : 'TXN'}</span>,\n      key: 'count',\n      cell: (row) => (\n        <span>\n          <Link\n            href={`/txns?block=${row?.block_hash}`}\n            className=\"hover:no-underline\"\n          >\n            <a className=\"text-green-500 dark:text-green-250  hover:no-underline font-medium\">\n              {row?.transactions_agg?.count\n                ? localFormat(row?.transactions_agg?.count)\n                : row?.transactions_agg?.count ?? ''}\n            </a>\n          </Link>\n        </span>\n      ),\n      tdClassName:\n        'px-6 py-4 whitespace-nowrap text-sm text-nearblue-600 dark:text-neargray-10',\n      thClassName:\n        'px-6 py-2 text-left text-xs font-semibold text-nearblue-600 dark:text-neargray-10 uppercase tracking-wider whitespace-nowrap',\n    },\n    {\n      header: <span>{t ? t('blocks:block.receipt') : 'RECEIPT'}</span>,\n      key: 'count',\n      cell: (row) => (\n        <span>\n          {row?.receipts_agg?.count\n            ? localFormat(row?.receipts_agg?.count)\n            : row?.receipts_agg?.count ?? ''}\n        </span>\n      ),\n      tdClassName:\n        'px-6 py-4 whitespace-nowrap text-sm text-nearblue-600 dark:text-neargray-10',\n      thClassName:\n        'px-6 py-2 text-left text-xs font-semibold text-nearblue-600 dark:text-neargray-10 uppercase tracking-wider whitespace-nowrap',\n    },\n    {\n      header: <span>{t ? t('blocks:miner') : 'AUTHOR'}</span>,\n      key: 'author_account_id',\n      cell: (row) => (\n        <span>\n          <Link\n            href={`/address/${row?.author_account_id}`}\n            className={`hover:no-underline`}\n          >\n            <a\n              className={`text-green-500 dark:text-green-250 hover:no-underline p-1 border rounded-md ${\n                row?.author_account_id === address\n                  ? 'bg-[#FFC10740] border-[#FFC10740] dark:bg-black-200 dark:border-neargray-50 border-dashed cursor-pointer text-[#033F40]'\n                  : 'text-green-500 dark:text-green-250 border-transparent'\n              }`}\n              onMouseOver={(e) => onHandleMouseOver(e, row?.author_account_id)}\n              onMouseLeave={handleMouseLeave}\n            >\n              {shortenAddress(row?.author_account_id ?? '')}\n            </a>\n          </Link>\n        </span>\n      ),\n      tdClassName:\n        'px-6 py-4 whitespace-nowrap text-sm text-nearblue-600 dark:text-neargray-10 font-medium',\n      thClassName:\n        'px-6 py-2 text-left text-xs font-semibold text-nearblue-600 dark:text-neargray-10 uppercase tracking-wider whitespace-nowrap',\n    },\n    {\n      header: <span>{t ? t('blocks:block.gasUsed') : 'GAS USED'}</span>,\n      key: 'gas_used',\n      cell: (row) => (\n        <span>\n          {row?.chunks_agg?.gas_used !== null\n            ? convertToMetricPrefix(row?.chunks_agg?.gas_used) + 'gas'\n            : ''}\n        </span>\n      ),\n      tdClassName:\n        'px-6 py-4 whitespace-nowrap text-sm text-nearblue-600 dark:text-neargray-10',\n      thClassName:\n        'px-6 py-2 text-left text-xs font-semibold text-nearblue-600 dark:text-neargray-10 uppercase tracking-wider whitespace-nowrap',\n    },\n    {\n      header: <span>{t ? t('blocks:block.gasLimit') : 'GAS LIMIT'}</span>,\n      key: 'gas_limit',\n      cell: (row) => (\n        <span>{convertToMetricPrefix(row?.chunks_agg?.gas_limit ?? 0)}gas</span>\n      ),\n      tdClassName:\n        'px-6 py-4 whitespace-nowrap text-sm text-nearblue-600 dark:text-neargray-10',\n      thClassName:\n        'px-6 py-2 text-left text-xs font-semibold text-nearblue-600 dark:text-neargray-10 uppercase tracking-wider whitespace-nowrap',\n    },\n    {\n      header: <span>{t ? t('blocks:block.gasFee') : 'GAS FEE'}</span>,\n      key: 'gas_price',\n      cell: (row) => (\n        <span>\n          {row?.chunks_agg?.gas_used\n            ? gasFee(row?.chunks_agg?.gas_used, row?.gas_price)\n            : row?.chunks_agg?.gas_used ?? ''}\n          \u24c3\n        </span>\n      ),\n      tdClassName:\n        'px-6 py-4 whitespace-nowrap text-sm text-nearblue-600 dark:text-neargray-10',\n      thClassName:\n        'px-6 py-2 text-left text-xs font-semibold text-nearblue-600 dark:text-neargray-10 uppercase tracking-wider whitespace-nowrap',\n    },\n  ];\n\n  return (\n    <div className=\"bg-white dark:bg-black-600 drak:border-black-200 border soft-shadow rounded-xl pb-1 \">\n      {countLoading ? (\n        <div className=\"pl-6 max-w-lg w-full py-5 \">\n          <Skeleton className=\"h-4\" />\n        </div>\n      ) : (\n        <div className=\"leading-7 pl-6 text-sm py-4 text-nearblue-600 dark:text-neargray-10\">\n          {Object.keys(blocks).length > 0 && (\n            <p className=\"sm:w-full w-65\">\n              {t\n                ? t('blocks:listing', {\n                    from: start?.block_height\n                      ? localFormat && localFormat(start?.block_height)\n                      : start?.block_height ?? '',\n                    to: end?.block_height\n                      ? localFormat && localFormat(end?.block_height)\n                      : end?.block_height ?? '',\n                    count: localFormat && localFormat(totalCount.toString()),\n                  })\n                : `Block #${\n                    start?.block_height\n                      ? localFormat && localFormat(start?.block_height)\n                      : start?.block_height ?? ''\n                  } to ${\n                    '#' + end?.block_height\n                      ? localFormat && localFormat(end?.block_height)\n                      : end?.block_height ?? ''\n                  } (Total of ${\n                    localFormat && localFormat(totalCount.toString())\n                  } blocks)`}{' '}\n            </p>\n          )}\n        </div>\n      )}\n      {\n        <Widget\n          src={`${ownerId}/widget/bos-components.components.Shared.Table`}\n          props={{\n            columns: columns,\n            data: blocks[currentPage],\n            isLoading: isLoading,\n            isPagination: true,\n            count: totalCount,\n            page: currentPage,\n            limit: 25,\n            pageLimit: 200,\n            setPage: setPage,\n            Error: (\n              <ErrorMessage\n                icons={<FaInbox />}\n                message={errorMessage || ''}\n                mutedText=\"Please try again later\"\n              />\n            ),\n          }}\n        />\n      }\n    </div>\n  );\n}\n\nreturn MainComponent(props, context);", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/nearblocksonbos.near/widget/bos-components.components.Blocks.List", "fact_widget_deployments_id": "7895fead9b031ab78ed2b9bb409fe3e8", "inserted_timestamp": "2024-05-16T11:49:40.926Z", "modified_timestamp": "2024-05-16T12:57:51.740Z", "__row_index": 3}