{"tx_hash": "29TJymGSQnJfedpmzwKkYsiG2u2f6SfRb53EZJR4ETKd", "action_id_social": "6Yf79NuKxZNzgZcugj2imHxiWWY8PAZ9iVcaPDDySV9D-0-widget", "block_id": 116536511, "block_timestamp": "2024-04-10T11:22:44.624Z", "signer_id": "nearblocksonbos.near", "widget_name": "bos-components.components.Transactions.Execution", "source_code": "/**\n * Component: TransactionsExecution\n * Author: Nearblocks Pte Ltd\n * License: Business Source License 1.1\n * Description: Alternative Style of Transaction Execution on Near Protocol.\n * @interface Props\n * @param {string} [network] - The network data to show, either mainnet or testnet\n * @param {Function} [t] - A function for internationalization (i18n) provided by the next-translate package.\n * @param {TransactionInfo} [txn] - Information related to a transaction.\n * @param {RPCTransactionInfo} [rpcTxn] - RPC data of the transaction.\n * @param {string} ownerId - The identifier of the owner of the component.\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction MainComponent(props) {\n  const { network, rpcTxn, t, ownerId } = props;\n\n  const { collectNestedReceiptWithOutcomeOld, parseOutcomeOld, parseReceipt } =\n    VM.require(`${ownerId}/widget/includes.Utils.near`);\n\n  const { getConfig } = VM.require(`${ownerId}/widget/includes.Utils.libs`);\n\n  const [receipt, setReceipt] = useState\n\n(null);\n\n  const config = getConfig ? getConfig(network) : '';\n\n  const [expandAll, setExpandAll] = useState(false);\n  const expandAllReceipts = useCallback(\n    () => setExpandAll((x) => !x),\n    [setExpandAll],\n  );\n\n  function transactionReceipts(txn) {\n    const receiptsMap =\n      txn?.receipts_outcome &&\n      txn?.receipts_outcome.reduce((mapping, receiptOutcome) => {\n        const receipt = parseReceipt\n          ? parseReceipt(\n              txn.receipts.find(\n                (rpcReceipt) => rpcReceipt.receipt_id === receiptOutcome.id,\n              ),\n              receiptOutcome,\n              txn.transaction,\n            )\n          : '';\n        return mapping.set(receiptOutcome.id, {\n          ...receipt,\n          outcome: parseOutcomeOld ? parseOutcomeOld(receiptOutcome) : '',\n        });\n      }, new Map());\n\n    const receipts = collectNestedReceiptWithOutcomeOld\n      ? collectNestedReceiptWithOutcomeOld(\n          txn.transaction_outcome.outcome.receipt_ids[0],\n          receiptsMap,\n        )\n      : '';\n\n    return receipts;\n  }\n\n  useEffect(() => {\n    if (rpcTxn) {\n      const receipt = transactionReceipts(rpcTxn);\n      setReceipt(receipt);\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [rpcTxn, receipt?.block_hash, config.backendUrl]);\n\n  const Loader = (props) => {\n    return (\n      <div\n        className={`bg-gray-200 h-5 rounded shadow-sm animate-pulse ${props.className}`}\n      ></div>\n    );\n  };\n\n  return (\n    <div className=\"text-sm text-nearblue-600 divide-solid divide-gray-200 divide-y\">\n      <div className=\"flex flex-col w-full mx-auto divide-y\">\n        <div className=\"flex justify-end w-full p-4 items-center\">\n          <div\n            className=\"cursor-pointer mx-1 flex items-center text-nearblue-600 font-medium py-1 border border-neargray-700 px-2 rounded-md bg-whit select-none\"\n            onClick={expandAllReceipts}\n          >\n            Expand All <span>+</span>\n          </div>\n        </div>\n        <div className=\"p-8 overflow-auto\">\n          {!receipt?.id ? (\n            <div className=\"w-full md:w-3/4\">\n              <Loader className=\"flex w-full mt-2\" />\n              <Loader className=\"flex w-full mt-2\" />\n              <Loader className=\"flex w-full mt-2\" />\n              <Loader className=\"flex w-full mt-2\" />\n            </div>\n          ) : (\n            <Widget\n              src={`${ownerId}/widget/bos-components.components.Transactions.TransactionReceipt`}\n              props={{\n                network: network,\n                t: t,\n                receipt: receipt,\n                expandAll: expandAll,\n                fellowOutgoingReceipts: [],\n                convertionReceipt: true,\n                className: '',\n                ownerId,\n              }}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nreturn MainComponent(props, context);", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/nearblocksonbos.near/widget/bos-components.components.Transactions.Execution", "fact_widget_deployments_id": "85171c58f061f9269d647caffd80ad95", "inserted_timestamp": "2024-04-10T12:34:58.847Z", "modified_timestamp": "2024-04-10T13:40:59.984Z", "__row_index": 7}