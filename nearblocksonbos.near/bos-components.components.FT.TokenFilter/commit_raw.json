{"tx_hash": "4m9qU8MwLM96RQML2Havu72vuwk1ck2CuUpt5jYRKBH9", "action_id_social": "5xihPAqLkJgnKie9rLhWcr2hBzLsMQHN1uBy54dCYJ1P-0-widget", "block_id": 116998910, "block_timestamp": "2024-04-16T23:34:39.331Z", "signer_id": "nearblocksonbos.near", "widget_name": "bos-components.components.FT.TokenFilter", "source_code": "/**\n * Component: FTTokenFilter\n * Author: Nearblocks Pte Ltd\n * License: Business Source License 1.1\n * Description: Fungible Token Filter on Near Protocol.\n * @interface Props\n * @param {string} [network] - The network data to show, either mainnet or testnet\n * @param {string} [id] - The token identifier passed as a string\n * @param {string} [tokenFilter] - The token filter identifier passed as a string\n * @param {string} ownerId - The identifier of the owner of the component.\n */\n\n/* INCLUDE COMPONENT: \"includes/Common/Skeleton.jsx\" */\n/**\n * @interface Props\n * @param {string} [className] - The CSS class name(s) for styling purposes.\n */\n\n\n\n\n\nconst Skeleton = (props) => {\n  return (\n    <div\n      className={`bg-gray-200 dark:bg-black-200 rounded shadow-sm animate-pulse ${props.className}`}\n    ></div>\n  );\n};/* END_INCLUDE COMPONENT: \"includes/Common/Skeleton.jsx\" */\n/* INCLUDE COMPONENT: \"includes/icons/FaAddressBook.jsx\" */\nconst FaAddressBook = () => {\n  return (\n    <svg\n      stroke=\"currentColor\"\n      fill=\"currentColor\"\n      stroke-width=\"0\"\n      viewBox=\"0 0 448 512\"\n      color=\"#db9a04\"\n      height=\"10\"\n      width=\"10\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M436 160c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12h-20V48c0-26.5-21.5-48-48-48H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h320c26.5 0 48-21.5 48-48v-48h20c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12h-20v-64h20c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12h-20v-64h20zm-228-32c35.3 0 64 28.7 64 64s-28.7 64-64 64-64-28.7-64-64 28.7-64 64-64zm112 236.8c0 10.6-10 19.2-22.4 19.2H118.4C106 384 96 375.4 96 364.8v-19.2c0-31.8 30.1-57.6 67.2-57.6h5c12.3 5.1 25.7 8 39.8 8s27.6-2.9 39.8-8h5c37.1 0 67.2 25.8 67.2 57.6v19.2z\"\n        fill=\"#db9a04\"\n      ></path>\n    </svg>\n  );\n};/* END_INCLUDE COMPONENT: \"includes/icons/FaAddressBook.jsx\" */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction MainComponent({ network, id, tokenFilter, ownerId }) {\n  const { dollarFormat, localFormat } = VM.require(\n    `${ownerId}/widget/includes.Utils.format`,\n  );\n\n  const { getConfig, handleRateLimit } = VM.require(\n    `${ownerId}/widget/includes.Utils.libs`,\n  );\n\n  const { decodeArgs, encodeArgs } = VM.require(\n    `${ownerId}/widget/includes.Utils.near`,\n  );\n\n  const [ft, setFT] = useState({} );\n  const [inventoryLoading, setInventoryLoading] = useState(false);\n  const [inventoryData, setInventoryData] = useState(\n    {} ,\n  );\n\n  const config = getConfig && getConfig(network);\n\n  useEffect(() => {\n    function fetchInventoryData() {\n      setInventoryLoading(true);\n      asyncFetch(`${config?.backendUrl}account/${tokenFilter}/inventory`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      })\n        .then(\n          (data\n\n\n\n\n) => {\n            const response = data?.body?.inventory;\n            if (data.status === 200) {\n              setInventoryData(response);\n              setInventoryLoading(false);\n            } else {\n              handleRateLimit(data, fetchInventoryData, () =>\n                setInventoryLoading(false),\n              );\n            }\n          },\n        )\n        .catch(() => {});\n    }\n    if (config?.backendUrl) {\n      fetchInventoryData();\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [config.backendUrl, tokenFilter]);\n\n  useEffect(() => {\n    function ftBalanceOf(contracts, account_id) {\n      return asyncFetch(`${config?.rpcUrl}`, {\n        method: 'POST',\n        body: JSON.stringify({\n          jsonrpc: '2.0',\n          id: 'dontcare',\n          method: 'query',\n          params: {\n            request_type: 'call_function',\n            finality: 'final',\n            account_id: contracts,\n            method_name: 'ft_balance_of',\n            args_base64: encodeArgs ? encodeArgs({ account_id }) : '',\n          },\n        }),\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      })\n        .then(\n          (res\n\n\n\n) => {\n            return res;\n          },\n        )\n        .then(\n          (data\n\n\n\n) => {\n            const resp = data?.body?.result;\n            return decodeArgs ? decodeArgs(resp.result) : '';\n          },\n        )\n        .catch(() => {});\n    }\n\n    function loadBalances() {\n      setInventoryLoading(true);\n      const fts =\n        inventoryData?.fts &&\n        inventoryData?.fts.filter((f) => id == f.contract);\n\n      if (!fts?.length) {\n        if (fts?.length === 0) setInventoryLoading(false);\n        return;\n      }\n\n      let total = Big(0);\n\n      const tokens = [];\n\n      const pricedTokens = [];\n\n      Promise.all(\n        fts.map((ft) => {\n          return ftBalanceOf(ft.contract, tokenFilter).then((rslt) => {\n            return { ...ft, amount: rslt };\n          });\n        }),\n      ).then((results) => {\n        results.forEach((rslt) => {\n          const ftrslt = rslt;\n          const amount = rslt?.amount;\n\n          let sum = Big(0);\n\n          let rpcAmount = Big(0);\n\n          if (amount) {\n            rpcAmount = ftrslt.ft_meta?.decimals\n              ? Big(amount).div(Big(10).pow(ftrslt.ft_meta?.decimals))\n              : 0;\n          }\n\n          if (ftrslt.ft_meta?.price) {\n            sum = rpcAmount.mul(Big(ftrslt.ft_meta?.price));\n            total = total.add(sum);\n\n            return pricedTokens.push({\n              ...ftrslt,\n              amountUsd: sum.toString(),\n              rpcAmount: rpcAmount.toString(),\n            });\n          }\n\n          return tokens.push({\n            ...ftrslt,\n            amountUsd: sum.toString(),\n            rpcAmount: rpcAmount.toString(),\n          });\n        });\n\n        setFT({\n          amount: total.toString(),\n          tokens: [...pricedTokens, ...tokens],\n        });\n\n        setInventoryLoading(false);\n      });\n    }\n\n    loadBalances();\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [inventoryData?.fts, id, tokenFilter, config?.rpcUrl]);\n\n  const filterToken = ft?.tokens?.length\n    ? ft?.tokens[0]\n    : ({} );\n\n  const ftAmount = ft?.amount ?? 0;\n\n  return (\n    <>\n      {tokenFilter && (\n        <div className=\"py-2 mb-4\">\n          <div className=\"bg-white dark:bg-black-600 soft-shadow rounded-xl  px-2 py-3\">\n            <div className=\"grid md:grid-cols-3 grid-cols-1 divide-y md:divide-y-0 dark:divide-black-200 md:divide-x\">\n              <div className=\"px-4 md:py-0 py-2\">\n                <div className=\"flex items-center\">\n                  <FaAddressBook />\n                  <h5 className=\"text-xs my-1 font-bold ml-1 dark:text-neargray-10\">\n                    FILTERED BY TOKEN HOLDER\n                  </h5>\n                </div>\n                <h5 className=\"text-sm my-1 font-bold text-green-500 dark:text-green-250 truncate md:max-w-[200px] lg:max-w-[310px] xl:max-w-full max-w-full inline-block\">\n                  <Link\n                    href={`/address/${tokenFilter}`}\n                    className=\"hover:no-underline\"\n                  >\n                    <a className=\"hover:no-underline\">{tokenFilter}</a>\n                  </Link>\n                </h5>\n              </div>\n              <div className=\"px-4 md:py-0 py-2\">\n                <p className=\"text-xs my-1 text-nearblue-600 dark:text-neargray-10\">\n                  BALANCE\n                </p>\n\n                {inventoryLoading ? (\n                  <Skeleton className=\"w-40\" />\n                ) : (\n                  <p className=\"text-sm my-1\">\n                    {Number(filterToken?.rpcAmount) && localFormat\n                      ? localFormat(filterToken?.rpcAmount)\n                      : ''}\n                  </p>\n                )}\n              </div>\n              <div className=\"px-4 md:py-0 py-2\">\n                <p className=\"text-xs my-1 text-nearblue-600 dark:text-neargray-10\">\n                  VALUE\n                </p>\n\n                {inventoryLoading ? (\n                  <Skeleton className=\"w-40\" />\n                ) : (\n                  <p className=\"text-sm my-1 flex\">\n                    {ftAmount && dollarFormat\n                      ? '$' + dollarFormat(ftAmount)\n                      : ''}\n                    <span>\n                      {filterToken?.ft_meta?.price && (\n                        <div className=\"text-gray-400 ml-2\">\n                          @{filterToken?.ft_meta?.price}\n                        </div>\n                      )}\n                    </span>\n                  </p>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </>\n  );\n}\n\nreturn MainComponent(props, context);", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/nearblocksonbos.near/widget/bos-components.components.FT.TokenFilter", "fact_widget_deployments_id": "6015abe75fe50e757fa59d185a5b29e7", "inserted_timestamp": "2024-04-17T01:58:31.238Z", "modified_timestamp": "2024-04-17T01:58:31.238Z", "__row_index": 5}