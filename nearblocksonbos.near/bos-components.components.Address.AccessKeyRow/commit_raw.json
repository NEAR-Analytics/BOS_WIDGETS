{"tx_hash": "EbYiSBejVa2xoWviprrceoKChwA4rDEgq4XXUbE84Tb3", "action_id_social": "5ksxvxXSWRPwTZ179Qfa7CUC9E8YcKGVf4aVY5t1A2X7-0-widget", "block_id": 116955768, "block_timestamp": "2024-04-16T08:24:22.912Z", "signer_id": "nearblocksonbos.near", "widget_name": "bos-components.components.Address.AccessKeyRow", "source_code": "/**\n * Component: AddressAccessKeyRow\n * Author: Nearblocks Pte Ltd\n * License: Business Source License 1.1\n * Description: Address Access key Row on Near Protocol.\n * @interface\n * @param {string}  [network] - The network data to show, either mainnet or testnet.\n * @param {Function} [t] - A function for internationalization (i18n) provided by the next-translate package.\n * @param {AccountContractInfo} [accessKey] - Key-value pairs for Accesskey info\n * @param {boolean} [showWhen] - Controls whether to show the date and time in UTC format or as a time ago string.\n * @param {string} ownerId - The identifier of the owner of the component.\n */\n\n\n\n\n\n\n\n\n\n\n\nfunction MainComponent({ network, t, accessKey, showWhen, ownerId }) {\n  const { formatTimestampToString, getTimeAgoString, capitalizeWords } =\n    VM.require(`${ownerId}/widget/includes.Utils.formats`);\n\n  const { getConfig, handleRateLimit, nanoToMilli, yoctoToNear } = VM.require(\n    `${ownerId}/widget/includes.Utils.libs`,\n  );\n\n  const [keyInfo, setKeyInfo] = useState({} );\n\n  const config = getConfig && getConfig(network);\n\n  const createdTime = accessKey.created?.block_timestamp\n    ? nanoToMilli(accessKey.created?.block_timestamp)\n    : '';\n  const deletedTime = accessKey.deleted?.block_timestamp\n    ? nanoToMilli(accessKey.deleted?.block_timestamp)\n    : '';\n\n  const txn = createdTime > deletedTime ? accessKey.created : accessKey.deleted;\n\n  const action =\n    accessKey.deleted?.transaction_hash && createdTime <= deletedTime\n      ? 'Deleted'\n      : 'Created';\n\n  function showMethod(method) {\n    switch (method) {\n      case 'CREATE_ACCOUNT':\n      case 'CreateAccount':\n        return (\n          <div className=\"px-1 py-1 flex justify-center items-center text-xs\">\n            {t('createAccount')}\n          </div>\n        );\n      case 'DEPLOY_CONTRACT':\n      case 'DeployContract':\n        return (\n          <div className=\"px-1 py-1 flex justify-center items-center text-xs\">\n            {t('deployContract')}\n          </div>\n        );\n      case 'TRANSFER':\n      case 'Transfer':\n        return (\n          <div className=\"bg-emerald-50 px-1 py-1 flex justify-center items-center text-xs\">\n            {t('transfer')}\n          </div>\n        );\n      case 'STAKE':\n      case 'Stake':\n        return (\n          <div className=\"px-1 py-1 flex justify-center items-center text-xs\">\n            {t('stake')}\n          </div>\n        );\n      case 'ADD_KEY':\n      case 'AddKey':\n        return (\n          <div className=\"px-1 py-1 flex justify-center items-center text-xs\">\n            Acces Key Created\n          </div>\n        );\n      case 'DELETE_KEY':\n      case 'DeleteKey':\n        return (\n          <div className=\"bg-red-50 px-1 py-1 flex justify-center items-center text-xs\">\n            Acces Key Deleted\n          </div>\n        );\n      case 'DELETE_ACCOUNT':\n      case 'DeleteAccount':\n        return (\n          <div className=\"bg-red-50 px-1 py-1 flex justify-center items-center text-xs\">\n            {t('deleteAccount')}\n          </div>\n        );\n\n      default:\n        return (\n          <div className=\"px-1 py-1 flex justify-center items-center text-xs\">\n            {capitalizeWords(method)}\n          </div>\n        );\n    }\n  }\n\n  useEffect(() => {\n    function tokenInfo(view_access_key, account_id) {\n      return asyncFetch(`${config?.rpcUrl}`, {\n        method: 'POST',\n        body: JSON.stringify({\n          jsonrpc: '2.0',\n          id: 'dontcare',\n          method: 'query',\n          params: {\n            request_type: 'view_access_key',\n            finality: 'final',\n            account_id: view_access_key,\n            public_key: account_id,\n          },\n        }),\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      })\n        .then((data) => {\n          const resp = data?.body?.result;\n          if (data.status === 200) {\n            setKeyInfo(resp);\n          } else {\n            handleRateLimit(data, () => tokenInfo(view_access_key, account_id));\n          }\n        })\n        .catch(() => {});\n    }\n\n    if (accessKey.public_key && accessKey.permission_kind === 'FUNCTION_CALL') {\n      tokenInfo(accessKey.account_id, accessKey.public_key);\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [config?.rpcUrl, accessKey]);\n\n  return (\n    <>\n      <tr key={accessKey.public_key} className=\"hover:bg-blue-900/5\">\n        <td className=\"px-6 py-4 text-sm text-nearblue-600 dark:text-neargray-10\">\n          {txn?.transaction_hash ? (\n            <Tooltip.Provider>\n              <Tooltip.Root>\n                <Tooltip.Trigger asChild>\n                  <span className=\"truncate max-w-[120px] inline-block align-bottom text-green-500 dark:text-green-250 font-medium whitespace-nowrap\">\n                    <Link href={`/txns/${txn?.transaction_hash}`}>\n                      <a className=\"text-green-500 dark:text-green-250\">\n                        {txn?.transaction_hash && txn?.transaction_hash}\n                      </a>\n                    </Link>\n                  </span>\n                </Tooltip.Trigger>\n                <Tooltip.Content\n                  className=\"h-auto max-w-xs bg-black bg-opacity-90 z-10 text-white text-xs p-2 break-words\"\n                  sideOffset={5}\n                >\n                  {txn?.transaction_hash}\n                </Tooltip.Content>\n              </Tooltip.Root>\n            </Tooltip.Provider>\n          ) : (\n            'Genesis'\n          )}\n        </td>\n        <td className=\"pl-6 pr-2 py-4 text-sm text-nearblue-600  dark:text-neargray-10\">\n          <Tooltip.Provider>\n            <Tooltip.Root>\n              <Tooltip.Trigger asChild>\n                <span className=\"truncate max-w-[120px] inline-block align-bottom \">\n                  {accessKey.public_key}\n                </span>\n              </Tooltip.Trigger>\n              <Tooltip.Content\n                className=\"h-auto max-w-xs bg-black bg-opacity-90 z-10 text-white text-xs p-2 break-words\"\n                sideOffset={5}\n              >\n                {accessKey.public_key}\n              </Tooltip.Content>\n            </Tooltip.Root>\n          </Tooltip.Provider>\n        </td>\n        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-nearblue-600 dark:text-neargray-10  flex justify-start\">\n          {accessKey.permission_kind === 'FUNCTION_CALL' ? (\n            <div className=\"bg-blue-900/10 rounded px-4 h-6 flex items-center justify-center text-center text-xs\">\n              Limited\n            </div>\n          ) : (\n            <div className=\"bg-blue-900/10 rounded px-4 h-6 flex items-center justify-center text-center text-xs\">\n              Full\n            </div>\n          )}\n        </td>\n        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-nearblue-600 dark:text-neargray-10\">\n          {keyInfo &&\n            Object.keys(keyInfo).length !== 0 &&\n            keyInfo?.permission?.FunctionCall?.receiver_id}\n        </td>\n        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-nearblue-600 dark:text-neargray-10  flex justify-start \">\n          {keyInfo && keyInfo?.permission && (\n            <div className=\"flex flex-col \">\n              {keyInfo?.permission?.FunctionCall?.method_names.length > 0\n                ? keyInfo?.permission?.FunctionCall?.method_names.map(\n                    (method) => {\n                      return <div key={method}>{showMethod(method)} </div>;\n                    },\n                  )\n                : accessKey.permission_kind === 'FUNCTION_CALL'\n                ? 'Any'\n                : 'Full Access'}\n            </div>\n          )}\n        </td>\n        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-nearblue-600 dark:text-neargray-10\">\n          {keyInfo &&\n            Object.keys(keyInfo).length !== 0 &&\n            keyInfo?.permission?.FunctionCall?.allowance &&\n            '\u24c3 ' +\n              yoctoToNear(\n                keyInfo?.permission?.FunctionCall?.allowance || '',\n                true,\n              )}\n        </td>\n        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-nearblue-600 dark:text-neargray-10\">\n          {action}\n        </td>\n        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-nearblue-600 dark:text-neargray-10\">\n          {txn?.block_timestamp ? (\n            <Tooltip.Provider>\n              <Tooltip.Root>\n                <Tooltip.Trigger asChild>\n                  <span>\n                    {showWhen\n                      ? txn?.block_timestamp\n                        ? getTimeAgoString(nanoToMilli(txn?.block_timestamp))\n                        : ''\n                      : txn?.block_timestamp\n                      ? formatTimestampToString(\n                          nanoToMilli(txn?.block_timestamp),\n                        )\n                      : ''}\n                  </span>\n                </Tooltip.Trigger>\n                <Tooltip.Content\n                  className=\"h-auto max-w-xs bg-black bg-opacity-90 z-10 text-white text-xs p-2\"\n                  sideOffset={5}\n                >\n                  {!showWhen\n                    ? txn?.block_timestamp\n                      ? getTimeAgoString(nanoToMilli(txn?.block_timestamp))\n                      : ''\n                    : txn?.block_timestamp\n                    ? formatTimestampToString(nanoToMilli(txn?.block_timestamp))\n                    : ''}\n                </Tooltip.Content>\n              </Tooltip.Root>\n            </Tooltip.Provider>\n          ) : (\n            'Genesis'\n          )}\n        </td>\n      </tr>\n    </>\n  );\n}\n\nreturn MainComponent(props, context);", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/nearblocksonbos.near/widget/bos-components.components.Address.AccessKeyRow", "fact_widget_deployments_id": "2252f260dd5329ef7b0f85bebf2f807d", "inserted_timestamp": "2024-04-16T09:49:24.281Z", "modified_timestamp": "2024-04-16T09:49:24.281Z", "__row_index": 3}