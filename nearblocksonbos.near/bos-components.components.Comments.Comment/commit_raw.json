{"tx_hash": "AMDWQ7LZq7JSAL92KkjGNe4mhS9B1VbPrNNVnEFmV2Kg", "action_id_social": "5ECsaKpAxso1bf3kEhVH7hDtYio6eN1Zv9WRC648Qjun-0-widget", "block_id": 116536526, "block_timestamp": "2024-04-10T11:23:01.959Z", "signer_id": "nearblocksonbos.near", "widget_name": "bos-components.components.Comments.Comment", "source_code": "/**\n * Component: CommentsComment\n * Author: Nearblocks Pte Ltd\n * License: Business Source License 1.1\n * Description: The component displays a single post/comment.\n * @interface Props\n * @param {string} accountId - The identifier of the account associated with the post.\n * @param {string} blockHeight - The block height at which the post was made.\n * @param {Object} post - The content of the post including image and text.\n * @param {string} post.text - The text content of the post.\n * @param {Object} post.image - The image object associated with the post.\n * @param {string} post.image.ipfs_cid - The IPFS CID of the image.\n * @param {string} post.image.url - The URL of the image.\n * @param {string} ownerId - The identifier of the owner of the component.\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction MainComponent({ accountId, blockHeight, post, ownerId }) {\n  const { timeAgo } = VM.require(`${ownerId}/widget/includes.Utils.libs`);\n\n  const BlockHeight = blockHeight === 'now' ? 'now' : parseInt(blockHeight);\n\n  const profile = Social.getr(`${accountId}/profile`);\n  const name = profile.name || 'No-name profile';\n  const title = `@${accountId}`;\n  const [time, setTime] = useState('');\n  const [imageUrl, setImageUrl] = useState('');\n  const [fallbackUrl, _setFallbackUrl] = useState(\n    'https://ipfs.near.social/ipfs/bafkreibmiy4ozblcgv3fm3gc6q62s55em33vconbavfd2ekkuliznaq3zm',\n  );\n\n  useEffect(() => {\n    async function fetchTime() {\n      setTime('Loading');\n      try {\n        asyncFetch(\n          `https://api.near.social/time?blockHeight=${BlockHeight}`,\n        ).then((res) => {\n          if (!res) {\n            return 'Loading';\n          }\n\n          if (!res.ok || res.body === 'null') {\n            return 'unknown';\n          }\n          const timeMs = parseFloat(res.body);\n          return setTime(timeAgo(timeMs / 1000));\n        });\n      } catch (error) {\n        console.error('Error fetching time:', error);\n        setTime('Loading');\n      }\n    }\n    fetchTime();\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [BlockHeight]);\n\n  useEffect(() => {\n    if (JSON.stringify(post.image) !== JSON.stringify(imageUrl)) {\n      setImageUrl(post.image);\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [post.image, imageUrl]);\n\n  function toUrl(image) {\n    return (\n      (image.ipfs_cid\n        ? `https://ipfs.near.social/ipfs/${image.ipfs_cid}`\n        : image.url) || fallbackUrl\n    );\n  }\n\n  const renderPath = (properties) => {\n    return (\n      <Widget\n        key={properties}\n        src={properties.path}\n        props={properties.params}\n      />\n    );\n  };\n  return (\n    <>\n      <div className=\"py-4 border-b px-8\">\n        <div className=\"flex justify-start text-center\">\n          <img\n            className=\"rounded-full w-12 h-12\"\n            src={`https://i.near.social/magic/${'large'}/https://near.social/magic/img/account/${accountId}`}\n            alt=\"\"\n          />\n          <div className=\"flex justify-start ml-2 bottom-0 top-0\">\n            <p className=\"font-semibold\">{name} </p>\n            <p className=\"text-gray-600 font-thin ml-0.5\"> {title}</p>\n          </div>\n          <p className=\"text-gray-600 flex align-middle\">\n            {blockHeight === 'now' ? (\n              'now'\n            ) : (\n              <p className=\"text-muted\">. {time}</p>\n            )}\n          </p>\n        </div>\n        <div className=\"mb-2\">\n          <div className=\"container\">\n            <div className=\"ml-12 top-0\">\n              <Markdown text={post.text} onPath={renderPath} />\n            </div>\n            {post.image && (\n              <div className=\"w-full flex justify-center text-center\">\n                <img\n                  className=\"rounded-lg md:max-w-lg\"\n                  src={toUrl(imageUrl)}\n                  loading=\"lazy\"\n                  alt=\"attached image\"\n                  onError={() => {\n                    if (imageUrl !== fallbackUrl) {\n                      State.update({\n                        imageUrl: fallbackUrl,\n                      });\n                    }\n                  }}\n                />\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nreturn MainComponent(props, context);", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/nearblocksonbos.near/widget/bos-components.components.Comments.Comment", "fact_widget_deployments_id": "d983b66227baa8984d3459d5a4b02905", "inserted_timestamp": "2024-04-10T12:34:58.847Z", "modified_timestamp": "2024-04-10T13:40:59.984Z", "__row_index": 1}