{"tx_hash": "E849tPUM9LHfgG1BSxM7b2jNtCMHuSqLxmVDVDLg35ks", "action_id_social": "2itY1T9aLg9ZUAXEw4wbUzUHuTsmNvNeHRe6wupbeQxm-0-widget", "block_id": 118607365, "block_timestamp": "2024-05-10T00:38:14.983Z", "signer_id": "nearblocksonbos.near", "widget_name": "bos-components.components.Transactions.ReceiptSummaryRow", "source_code": "/**\n * Component: TransactionsReceiptSummaryRow\n * Author: Nearblocks Pte Ltd\n * License: Business Source License 1.1\n * Description: Details of Transaction Receipt Summary Row on Near Protocol.\n * @interface Props\n * @param {string} [network] - The network data to show, either mainnet or testnet\n * @param {Function} [t] - A function for internationalization (i18n) provided by the next-translate package.\n * @param {RPCTransactionInfo} [rpcTxn] - RPC data of the transaction.\n * @param {TransactionInfo} [txn] - Information related to a transaction.\n * @param {ReceiptsPropsInfo} [receipt] -  receipt of the transaction.\n * @param {string} ownerId - The identifier of the owner of the component.\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/* INCLUDE COMPONENT: \"includes/icons/FaLongArrowAltRight.jsx\" */\nconst FaLongArrowAltRight = () => {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"1em\" viewBox=\"0 0 448 512\">\n      <path\n        d=\"M313.941 216H12c-6.627 0-12 5.373-12 12v56c0 6.627 5.373 12 12 12h301.941v46.059c0 21.382 25.851 32.09 40.971 16.971l86.059-86.059c9.373-9.373 9.373-24.569 0-33.941l-86.059-86.059c-15.119-15.119-40.971-4.411-40.971 16.971V216\"\n        fill=\"#ffffff\"\n      />\n    </svg>\n  );\n};/* END_INCLUDE COMPONENT: \"includes/icons/FaLongArrowAltRight.jsx\" */\n\nfunction MainComponent(props) {\n  const { network, receipt, ownerId, txn } = props;\n\n  const { getConfig, handleRateLimit, yoctoToNear, fiatValue } = VM.require(\n    `${ownerId}/widget/includes.Utils.libs`,\n  );\n\n  const { convertToMetricPrefix } = VM.require(\n    `${ownerId}/widget/includes.Utils.formats`,\n  );\n\n  const [_block, setBlock] = useState({} );\n  const [loading, setLoading] = useState(false);\n  const [statsData, setStatsData] = useState({} );\n  const config = getConfig && getConfig(network);\n  useEffect(() => {\n    function fetchStatsDatas() {\n      if (txn) {\n        asyncFetch(`${config.backendUrl}stats`)\n          .then(\n            (res\n\n\n\n\n) => {\n              const resp = res?.body?.stats?.[0];\n              if (res.status === 200) {\n                setStatsData(resp);\n              } else {\n                handleRateLimit(res, fetchStatsDatas);\n              }\n            },\n          )\n          .catch(() => {});\n      }\n    }\n\n    if (config.backendUrl) {\n      fetchStatsDatas();\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [txn, config.backendUrl]);\n  useEffect(() => {\n    function fetchBlocks() {\n      setLoading(true);\n      if (receipt?.block_hash) {\n        asyncFetch(`${config.backendUrl}blocks/${receipt?.block_hash}`)\n          .then(\n            (res\n\n\n\n\n) => {\n              const resp = res?.body?.blocks?.[0];\n              if (res.status === 200) {\n                setBlock({\n                  author_account_id: resp.author_account_id,\n                  block_hash: resp.author_account_id,\n                  block_height: resp.block_height,\n                  block_timestamp: resp.block_timestamp,\n                  chunks_agg: resp.chunks_agg,\n                  gas_price: resp.gas_price,\n                  prev_block_hash: resp.author_account_id,\n                  receipts_agg: resp.receipts_agg,\n                  transactions_agg: resp.transactions_agg,\n                });\n                setLoading(false);\n              } else {\n                handleRateLimit(res, fetchBlocks, () => setLoading(false));\n              }\n            },\n          )\n          .catch(() => {});\n      }\n    }\n    if (config?.backendUrl) {\n      fetchBlocks();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [receipt?.block_hash, config.backendUrl]);\n  const currentPrice = statsData?.near_price || 0;\n  function formatActionKind(actionKind) {\n    return actionKind.replace(/([a-z])([A-Z])/g, '$1 $2');\n  }\n  const getGasAttached = (actions) => {\n    const gasAttached = actions\n      .map((action) => action.args)\n      .filter(\n        (args) => 'gas' in args,\n      );\n\n    if (gasAttached.length === 0) {\n      return '0';\n    }\n\n    return gasAttached.reduce(\n      (acc, args) =>\n        Big(acc || '0')\n          .plus(args.gas)\n          .toString(),\n      '0',\n    );\n  };\n\n  return (\n    <>\n      {!loading &&\n        receipt &&\n        receipt?.actions?.map((action, i) => (\n          <tr key={action.args?.method_name + i}>\n            <td className=\"px-6 py-4 text-sm text-nearblue-600 dark:text-neargray-10 font-medium whitespace-nowrap\">\n              {formatActionKind(action.action_kind)}\n            </td>\n            <td className=\"px-4 py-4 text-sm text-nearblue-600 dark:text-neargray-10 font-medium whitespace-nowrap\">\n              {action.args?.method_name}\n            </td>\n            <td className=\"px-4 py-4 text-sm text-nearblue-600 dark:text-neargray-10 font-medium\">\n              {receipt?.predecessor_id ? (\n                <div className=\"word-break\">\n                  <Link\n                    href={`/address/${receipt?.predecessor_id}`}\n                    className=\"hover:no-underline\"\n                  >\n                    <a className=\"text-green-500 dark:text-green-250 hover:no-underline inline-block truncate max-w-[120px]\">\n                      {receipt?.predecessor_id}\n                    </a>\n                  </Link>\n                </div>\n              ) : (\n                ''\n              )}\n            </td>\n            <td>\n              {' '}\n              <div className=\"w-5 h-5 p-1 bg-green-100 rounded-full text-center flex justify-center items-center mx-auto text-white\">\n                <FaLongArrowAltRight />\n              </div>\n            </td>\n            <td className=\"px-4 py-4 text-sm text-nearblue-600 dark:text-neargray-10 font-medium\">\n              {receipt?.receiver_id ? (\n                <div className=\"word-break\">\n                  <Link\n                    href={`/address/${receipt?.receiver_id}`}\n                    className=\"hover:no-underline\"\n                  >\n                    <a className=\"text-green-500 dark:text-green-250 hover:no-underline inline-block truncate max-w-[120px]\">\n                      {receipt?.receiver_id}\n                    </a>\n                  </Link>\n                </div>\n              ) : (\n                ''\n              )}\n            </td>\n\n            <td className=\"px-4 py-4 text-sm text-nearblue-600 dark:text-neargray-10 font-medium whitespace-nowrap\">\n              <span>\n                {action.args?.deposit\n                  ? yoctoToNear(action.args?.deposit, true)\n                  : action.args?.deposit ?? ''}{' '}\n                \u24c3\n                {currentPrice && network === 'mainnet'\n                  ? ` ($${fiatValue(\n                      yoctoToNear(action.args?.deposit ?? 0, false),\n                      currentPrice,\n                    )})`\n                  : ''}\n              </span>\n            </td>\n            <td className=\"px-4 py-4 text-sm text-nearblue-600 dark:text-neargray-10 font-medium whitespace-nowrap\">{`${\n              !loading &&\n              convertToMetricPrefix(getGasAttached(receipt?.actions))\n            }gas`}</td>\n          </tr>\n        ))}\n\n      {receipt?.outcome?.outgoing_receipts?.length > 0 && (\n        <>\n          {receipt?.outcome?.outgoing_receipts?.map((rcpt) => (\n            <Fragment key={rcpt?.receipt_id}>\n              {\n                <Widget\n                  src={`${ownerId}/widget/bos-components.components.Transactions.ReceiptSummaryRow`}\n                  props={{\n                    receipt: rcpt,\n                    borderFlag: true,\n                    txn: txn,\n                    network: network,\n                    Link,\n                    ownerId,\n                  }}\n                />\n              }\n            </Fragment>\n          ))}\n        </>\n      )}\n    </>\n  );\n}\n\nreturn MainComponent(props, context);", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/nearblocksonbos.near/widget/bos-components.components.Transactions.ReceiptSummaryRow", "fact_widget_deployments_id": "6c566a971629858586fefcd677ce5818", "inserted_timestamp": "2024-05-10T01:55:49.017Z", "modified_timestamp": "2024-05-10T02:45:23.242Z", "__row_index": 0}