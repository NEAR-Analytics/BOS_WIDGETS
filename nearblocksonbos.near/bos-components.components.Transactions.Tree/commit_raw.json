{"tx_hash": "HAKNxFGcLDZUEPoxNWCMYMfEz2pEkvbg5By3wgmEUJRp", "action_id_social": "GEDzbJ9492uxTPLaGc7Ep5d2zVE1GUFtM4Hh77RuZnB9-0-widget", "block_id": 119546057, "block_timestamp": "2024-05-23T06:48:32.069Z", "signer_id": "nearblocksonbos.near", "widget_name": "bos-components.components.Transactions.Tree", "source_code": "/**\n * Component: TransactionsTree\n * Author: Nearblocks Pte Ltd\n * License: Business Source License 1.1\n * Description: Alternative Style of Transaction Execution on Near Protocol.\n * @interface Props\n * @param {string} [network] - The network data to show, either mainnet or testnet\n * @param {Function} [t] - A function for internationalization (i18n) provided by the next-translate package.\n * @param {TransactionInfo} [txn] - Information related to a transaction.\n * @param {RPCTransactionInfo} [rpcTxn] - RPC data of the transaction.\n * @param {string} ownerId - The identifier of the owner of the component.\n */\n\n\n\n\n\n\n\n\n\n/* INCLUDE COMPONENT: \"includes/icons/FaHourglassStart.jsx\" */\nconst FaHourglassStart = (props) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      height=\"1em\"\n      viewBox=\"0 0 384 512\"\n      {...props}\n    >\n      <path\n        d=\"M32 0C14.3 0 0 14.3 0 32S14.3 64 32 64V75c0 42.4 16.9 83.1 46.9 113.1L146.7 256 78.9 323.9C48.9 353.9 32 394.6 32 437v11c-17.7 0-32 14.3-32 32s14.3 32 32 32H64 320h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V437c0-42.4-16.9-83.1-46.9-113.1L237.3 256l67.9-67.9c30-30 46.9-70.7 46.9-113.1V64c17.7 0 32-14.3 32-32s-14.3-32-32-32H320 64 32zM288 437v11H96V437c0-25.5 10.1-49.9 28.1-67.9L192 301.3l67.9 67.9c18 18 28.1 42.4 28.1 67.9z\"\n        fill=\"#FFEB3B\"\n      />\n    </svg>\n  );\n};/* END_INCLUDE COMPONENT: \"includes/icons/FaHourglassStart.jsx\" */\n\nfunction MainComponent(props) {\n  const { network, rpcTxn, txn, t, ownerId } = props;\n\n  const { mapRpcActionToAction } = VM.require(\n    `${ownerId}/widget/includes.Utils.near`,\n  );\n  const [receipt, setReceipt] = useState(null);\n  const [show, setShow] = useState(null);\n  function transactionReceipts(txn) {\n    const actions =\n      txn?.transaction?.actions &&\n      txn?.transaction?.actions?.map((txn) => mapRpcActionToAction(txn));\n    const receipts = txn?.receipts;\n    const receiptsOutcome = txn?.receipts_outcome;\n\n    if (\n      receipts?.length === 0 ||\n      receipts[0]?.receipt_id !== receiptsOutcome[0]?.id\n    ) {\n      receipts?.unshift({\n        predecessor_id: txn?.transaction?.signer_id,\n        receipt: actions,\n        receipt_id: receiptsOutcome[0]?.id,\n        receiver_id: txn?.transaction?.receiver_id,\n      });\n    }\n\n    const receiptOutcomesByIdMap = new Map();\n    const receiptsByIdMap = new Map();\n\n    receiptsOutcome &&\n      receiptsOutcome?.forEach((receipt) => {\n        receiptOutcomesByIdMap?.set(receipt?.id, receipt);\n      });\n\n    receipts &&\n      receipts?.forEach((receiptItem) => {\n        receiptsByIdMap?.set(receiptItem?.receipt_id, {\n          ...receiptItem,\n          actions:\n            receiptItem?.receipt_id === receiptsOutcome[0]?.id\n              ? actions\n              : receiptItem?.receipt?.Action?.actions &&\n                receiptItem?.receipt?.Action?.actions.map((receipt) =>\n                  mapRpcActionToAction(receipt),\n                ),\n        });\n      });\n\n    const collectReceipts = (receiptHash) => {\n      const receipt = receiptsByIdMap?.get(receiptHash);\n      const receiptOutcome = receiptOutcomesByIdMap?.get(receiptHash);\n\n      return {\n        ...receipt,\n        ...receiptOutcome,\n        outcome: {\n          ...receiptOutcome?.outcome,\n          outgoing_receipts:\n            receiptOutcome?.outcome?.receipt_ids &&\n            receiptOutcome?.outcome?.receipt_ids?.map(collectReceipts),\n        },\n      };\n    };\n\n    return collectReceipts(receiptsOutcome[0]?.id);\n  }\n\n  useEffect(() => {\n    if (rpcTxn) {\n      const receipt = transactionReceipts(rpcTxn);\n      setReceipt(receipt);\n      setShow(receipt?.receipt_id || null);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [rpcTxn]);\n  const Loader = (props) => {\n    return (\n      <div\n        className={`bg-gray-200 dark:bg-black-200 h-5 rounded shadow-sm animate-pulse ${props.className}`}\n      ></div>\n    );\n  };\n  const txnsPending = txn?.outcomes?.status === null;\n  return (\n    <div className=\"text-sm text-nearblue-600 dark:text-neargray-10 dark:divide-black-200  divide-solid divide-gray-200 divide-y\">\n      {txnsPending ? (\n        <div className=\"flex justify-center text-base p-24\">\n          <div className=\"text-center\">\n            <div className=\"inline-flex items-center text-base rounded bg-yellow-50 dark:bg-black-200 text-yellow-500 animate-spin my-3\">\n              <FaHourglassStart className=\"w-5 !h-5\" />\n            </div>\n\n            <h1 className=\"text-lg text-nearblue-600 dark:text-neargray-10\">\n              This transaction is pending confirmation.\n            </h1>\n          </div>\n        </div>\n      ) : (\n        <div className=\"w-full mx-auto \">\n          <div className=\"p-4 md:px-8\">\n            {!receipt?.id ? (\n              <div className=\"w-full md:w-3/4\">\n                <Loader className=\"flex w-full mt-2\" />\n                <Loader className=\"flex w-full mt-2\" />\n                <Loader className=\"flex w-full mt-2\" />\n                <Loader className=\"flex w-full mt-2\" />\n              </div>\n            ) : (\n              <div className=\"md:flex justify-center\">\n                <div className=\"w-full md:w-7/12 lg:w-2/3 xl:w-3/4 overflow-auto\">\n                  <ul className=\"hierarchy-tree\">\n                    <li>\n                      <Widget\n                        src={`${ownerId}/widget/bos-components.components.Transactions.TreeReceipt`}\n                        props={{\n                          txn: txn,\n                          receipt: receipt,\n                          network: network,\n                          t: t,\n                          ownerId,\n                          setShow,\n                          show,\n                        }}\n                      />\n                    </li>\n                  </ul>\n                </div>\n                <div className=\"w-full md:w-5/12 lg:w-1/3 xl:w-1/4\">\n                  <Widget\n                    src={`${ownerId}/widget/bos-components.components.Transactions.TreeReceiptDetails`}\n                    props={{\n                      txn: txn,\n                      receipt: receipt,\n                      network: network,\n                      t: t,\n                      ownerId,\n                      show,\n                    }}\n                  />\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nreturn MainComponent(props, context);", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/nearblocksonbos.near/widget/bos-components.components.Transactions.Tree", "fact_widget_deployments_id": "0843b2b9e51c797e35195ce6be6fef54", "inserted_timestamp": "2024-05-23T08:51:25.517Z", "modified_timestamp": "2024-05-23T08:51:25.517Z", "__row_index": 2}