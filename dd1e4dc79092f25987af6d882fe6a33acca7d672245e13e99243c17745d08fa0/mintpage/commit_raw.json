{"tx_hash": "7K2q9tfoBRqMZ857m6N113en3sqN9YusHjUexe63WRWT", "action_id_social": "4nKg3EseqMZq8wieuhCmNEGHhj4dzC3dB3xj3sP2XF5W-0-widget", "block_id": 104988731, "block_timestamp": "2023-11-05T10:47:35.924Z", "signer_id": "dd1e4dc79092f25987af6d882fe6a33acca7d672245e13e99243c17745d08fa0", "widget_name": "mintpage", "source_code": "const Page = styled.div`\nbackground-color: #070814;\nheight: 100%;\nwidth: 100%;\n`;\n\nconst Container = styled.div`\n  margin: auto;\n  display: flex;\n  flex-direction: column;\n\n  justify-content: center;\n  max-width: 700px;\n  padding-top: 10%;\n  gap: 0.45em;\n  width: 80%;\n  background: linear-gradient(#070814 0 0) padding-box,linear-gradient(45.37deg, #C309F3 9.61%, #4194FF 53.33%, #11E6A4 92.25%) border-box;\n\n  .LidoStakeFormSubmitContainer {\n  font-weight: bold;\n  color: #F539F8;\n  background-color: #070814;\n  margin-bottom: 20px;\n  border: 2px solid #F539F8;\n}\n`;\n\nconst Label = styled.label`\n  font-style: normal;\n  font-weight: 600;\n  font-size: 0.95em;\n  line-height: 1.25em;\n  color: #344054;\n`;\n\nconst Error = styled.span`\n  display: inline-block;\n  font-style: normal;\n  font-weight: 400;\n  font-size: 0.75em;\n  line-height: 1.25em;\n  color: #ff4d4f;\n  height: 0;\n  overflow: hidden;\n  transition: height 0.3s ease-in-out;\n\n  &.show {\n    height: 1.25em;\n  }\n`;\n\nconst Button = styled.button`\n    background:linear-gradient(134.38deg, #F539F8 0%, #C342F9 43.55%, #5356FB 104.51%);\n    border-width: 1px;\n    border-style: solid;\n    border-color: transparent;\n    border-radius: 100px;\n    width: 150px;\n    color: #fff;\n    font-size: 16px;\n    line-height: 21px;\n    font-weight: 700;\n    padding: 12px 28px;\n    margin: 8px;\n    margin-left: 39%\n`;\n\nconst InputLayout = styled.input`\n\n    border-radius: 100px;\n    padding: 12px;\n    border: 2px solid #F539F8;\n    max-width: 100%;\n    width: 100%;\n    color: #F539F8;\n    margin-bottom: 10px;\n`;\n\nfunction initializeContract() {\n  const contractAddress = \"0xE5fAc1078b8cBef59eded52D89ec5f2050D095e0\";\n\n  const contractAbi = [\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"to\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"tokenId\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"approve\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"string\",\n          name: \"name\",\n          type: \"string\",\n        },\n        {\n          internalType: \"string\",\n          name: \"symbol\",\n          type: \"string\",\n        },\n        {\n          internalType: \"string\",\n          name: \"baseTokenURI\",\n          type: \"string\",\n        },\n      ],\n      stateMutability: \"nonpayable\",\n      type: \"constructor\",\n    },\n    {\n      inputs: [],\n      name: \"ERC721EnumerableForbiddenBatchMint\",\n      type: \"error\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"sender\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"tokenId\",\n          type: \"uint256\",\n        },\n        {\n          internalType: \"address\",\n          name: \"owner\",\n          type: \"address\",\n        },\n      ],\n      name: \"ERC721IncorrectOwner\",\n      type: \"error\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"operator\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"tokenId\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"ERC721InsufficientApproval\",\n      type: \"error\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"approver\",\n          type: \"address\",\n        },\n      ],\n      name: \"ERC721InvalidApprover\",\n      type: \"error\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"operator\",\n          type: \"address\",\n        },\n      ],\n      name: \"ERC721InvalidOperator\",\n      type: \"error\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"owner\",\n          type: \"address\",\n        },\n      ],\n      name: \"ERC721InvalidOwner\",\n      type: \"error\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"receiver\",\n          type: \"address\",\n        },\n      ],\n      name: \"ERC721InvalidReceiver\",\n      type: \"error\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"sender\",\n          type: \"address\",\n        },\n      ],\n      name: \"ERC721InvalidSender\",\n      type: \"error\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"uint256\",\n          name: \"tokenId\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"ERC721NonexistentToken\",\n      type: \"error\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"owner\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"index\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"ERC721OutOfBoundsIndex\",\n      type: \"error\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"to\",\n          type: \"address\",\n        },\n        {\n          internalType: \"string\",\n          name: \"_description\",\n          type: \"string\",\n        },\n        {\n          internalType: \"string\",\n          name: \"_text\",\n          type: \"string\",\n        },\n        {\n          internalType: \"string\",\n          name: \"_image\",\n          type: \"string\",\n        },\n      ],\n      name: \"mint\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"owner\",\n          type: \"address\",\n        },\n      ],\n      name: \"OwnableInvalidOwner\",\n      type: \"error\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"account\",\n          type: \"address\",\n        },\n      ],\n      name: \"OwnableUnauthorizedAccount\",\n      type: \"error\",\n    },\n    {\n      anonymous: false,\n      inputs: [\n        {\n          indexed: true,\n          internalType: \"address\",\n          name: \"owner\",\n          type: \"address\",\n        },\n        {\n          indexed: true,\n          internalType: \"address\",\n          name: \"approved\",\n          type: \"address\",\n        },\n        {\n          indexed: true,\n          internalType: \"uint256\",\n          name: \"tokenId\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"Approval\",\n      type: \"event\",\n    },\n    {\n      anonymous: false,\n      inputs: [\n        {\n          indexed: true,\n          internalType: \"address\",\n          name: \"owner\",\n          type: \"address\",\n        },\n        {\n          indexed: true,\n          internalType: \"address\",\n          name: \"operator\",\n          type: \"address\",\n        },\n        {\n          indexed: false,\n          internalType: \"bool\",\n          name: \"approved\",\n          type: \"bool\",\n        },\n      ],\n      name: \"ApprovalForAll\",\n      type: \"event\",\n    },\n    {\n      anonymous: false,\n      inputs: [\n        {\n          indexed: true,\n          internalType: \"address\",\n          name: \"previousOwner\",\n          type: \"address\",\n        },\n        {\n          indexed: true,\n          internalType: \"address\",\n          name: \"newOwner\",\n          type: \"address\",\n        },\n      ],\n      name: \"OwnershipTransferred\",\n      type: \"event\",\n    },\n    {\n      inputs: [],\n      name: \"renounceOwnership\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"from\",\n          type: \"address\",\n        },\n        {\n          internalType: \"address\",\n          name: \"to\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"tokenId\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"safeTransferFrom\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"from\",\n          type: \"address\",\n        },\n        {\n          internalType: \"address\",\n          name: \"to\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"tokenId\",\n          type: \"uint256\",\n        },\n        {\n          internalType: \"bytes\",\n          name: \"data\",\n          type: \"bytes\",\n        },\n      ],\n      name: \"safeTransferFrom\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"operator\",\n          type: \"address\",\n        },\n        {\n          internalType: \"bool\",\n          name: \"approved\",\n          type: \"bool\",\n        },\n      ],\n      name: \"setApprovalForAll\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      anonymous: false,\n      inputs: [\n        {\n          indexed: true,\n          internalType: \"address\",\n          name: \"from\",\n          type: \"address\",\n        },\n        {\n          indexed: true,\n          internalType: \"address\",\n          name: \"to\",\n          type: \"address\",\n        },\n        {\n          indexed: true,\n          internalType: \"uint256\",\n          name: \"tokenId\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"Transfer\",\n      type: \"event\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"from\",\n          type: \"address\",\n        },\n        {\n          internalType: \"address\",\n          name: \"to\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"tokenId\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"transferFrom\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"newOwner\",\n          type: \"address\",\n        },\n      ],\n      name: \"transferOwnership\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"owner\",\n          type: \"address\",\n        },\n      ],\n      name: \"balanceOf\",\n      outputs: [\n        {\n          internalType: \"uint256\",\n          name: \"\",\n          type: \"uint256\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"uint256\",\n          name: \"tokenId\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"getApproved\",\n      outputs: [\n        {\n          internalType: \"address\",\n          name: \"\",\n          type: \"address\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"owner\",\n          type: \"address\",\n        },\n        {\n          internalType: \"address\",\n          name: \"operator\",\n          type: \"address\",\n        },\n      ],\n      name: \"isApprovedForAll\",\n      outputs: [\n        {\n          internalType: \"bool\",\n          name: \"\",\n          type: \"bool\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [],\n      name: \"name\",\n      outputs: [\n        {\n          internalType: \"string\",\n          name: \"\",\n          type: \"string\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"uint256\",\n          name: \"\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"nftattribues\",\n      outputs: [\n        {\n          internalType: \"address\",\n          name: \"owner\",\n          type: \"address\",\n        },\n        {\n          internalType: \"string\",\n          name: \"description\",\n          type: \"string\",\n        },\n        {\n          internalType: \"string\",\n          name: \"text\",\n          type: \"string\",\n        },\n        {\n          internalType: \"string\",\n          name: \"image\",\n          type: \"string\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [],\n      name: \"owner\",\n      outputs: [\n        {\n          internalType: \"address\",\n          name: \"\",\n          type: \"address\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"uint256\",\n          name: \"tokenId\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"ownerOf\",\n      outputs: [\n        {\n          internalType: \"address\",\n          name: \"\",\n          type: \"address\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"bytes4\",\n          name: \"interfaceId\",\n          type: \"bytes4\",\n        },\n      ],\n      name: \"supportsInterface\",\n      outputs: [\n        {\n          internalType: \"bool\",\n          name: \"\",\n          type: \"bool\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [],\n      name: \"symbol\",\n      outputs: [\n        {\n          internalType: \"string\",\n          name: \"\",\n          type: \"string\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"uint256\",\n          name: \"index\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"tokenByIndex\",\n      outputs: [\n        {\n          internalType: \"uint256\",\n          name: \"\",\n          type: \"uint256\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"uint256\",\n          name: \"tokenId\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"tokenData\",\n      outputs: [\n        {\n          internalType: \"address\",\n          name: \"\",\n          type: \"address\",\n        },\n        {\n          internalType: \"string\",\n          name: \"\",\n          type: \"string\",\n        },\n        {\n          internalType: \"string\",\n          name: \"\",\n          type: \"string\",\n        },\n        {\n          internalType: \"string\",\n          name: \"\",\n          type: \"string\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"owner\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"index\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"tokenOfOwnerByIndex\",\n      outputs: [\n        {\n          internalType: \"uint256\",\n          name: \"\",\n          type: \"uint256\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"uint256\",\n          name: \"tokenId\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"tokenURI\",\n      outputs: [\n        {\n          internalType: \"string\",\n          name: \"\",\n          type: \"string\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [],\n      name: \"totalsupply\",\n      outputs: [\n        {\n          internalType: \"uint256\",\n          name: \"\",\n          type: \"uint256\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [],\n      name: \"totalSupply\",\n      outputs: [\n        {\n          internalType: \"uint256\",\n          name: \"\",\n          type: \"uint256\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n  ];\n\n  const contract = new ethers.Contract(\n    contractAddress,\n    contractAbi,\n    Ethers.provider().getSigner()\n  );\n\n  return contract;\n}\n\nState.init({\n  address: \"\",\n  name: \"\",\n  desc: \"\",\n  image: \"\",\n});\n\nfunction mint() {\n  // Ethers.provider()\n  //   .getSigner()\n  //   .getBalance()\n  //   .then((balance) => {\n  //     console.log(\"Your ETH balance: \", ethers.utils.formatEther(balance));\n  //   });\n\n  const contract = initializeContract();\n\n  contract\n    .mint(state.address, state.name, state.desc, state.image)\n    .then((res) => {\n      console.log(\"res : \", res);\n    });\n\n  console.log(\"NFT minted successfully\");\n}\n\nconst handleSubmit = () => {\n  console.log(\"Address\", state.address);\n  console.log(\"Name:\", state.name);\n  console.log(\"Desc\", state.desc);\n  console.log(\"Image\", state.image);\n  mint();\n  console.log(\"apr\u00e8s\");\n};\nconst handleInputChangeAddress = (event) => {\n  State.update({ address: event.target.value });\n};\nconst handleInputChangeName = (event) => {\n  State.update({ name: event.target.value });\n};\nconst handleInputChangeDesc = (event) => {\n  State.update({ desc: event.target.value });\n};\nconst handleInputChangeImage = (event) => {\n  State.update({ image: event.target.value });\n};\n\nreturn (\n  <Page>\n    <Container>\n      <Widget src=\"dd1e4dc79092f25987af6d882fe6a33acca7d672245e13e99243c17745d08fa0/widget/navbar\" />\n      <Web3Connect\n        className=\"LidoStakeFormSubmitContainer\"\n        connectLabel=\"Connect your wallet\"\n      />\n      <InputLayout\n        type=\"text\"\n        placeholder=\"Address\"\n        value={inputValue}\n        onChange={handleInputChangeAddress}\n      />\n      <InputLayout\n        type=\"text\"\n        placeholder=\"Name\"\n        value={inputValue}\n        onChange={handleInputChangeName}\n      />\n      <InputLayout\n        type=\"text\"\n        placeholder=\"Desc\"\n        value={inputValue}\n        onChange={handleInputChangeDesc}\n      />\n      <InputLayout\n        type=\"text\"\n        placeholder=\"Image\"\n        value={inputValue}\n        onChange={handleInputChangeImage}\n      />\n      <Button onClick={handleSubmit}>Submit</Button>\n    </Container>\n  </Page>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/dd1e4dc79092f25987af6d882fe6a33acca7d672245e13e99243c17745d08fa0/widget/mintpage", "fact_widget_deployments_id": "3a0af1d99a60ecf0e619d7da9cba758e", "inserted_timestamp": "2023-11-05T12:43:17.433Z", "modified_timestamp": "2023-11-05T12:43:17.433Z", "__row_index": 0}