{"tx_hash": "VmQboJsqLqK3eCaCLPceXxZAYhu5A2iUiP3Sd9boq8N", "action_id_social": "9pY9a92U5k9qGD89aXMRgPQeuJuNBtBzy2JdHNTZhD3Q-0-widget", "block_id": 98801693, "block_timestamp": "2023-08-14T18:05:48.152Z", "signer_id": "y3k.near", "widget_name": "near_atlas.components.react_charts.MonthlyActiveAcounts", "source_code": "let raw_data = fetch(\n  \"https://api.flipsidecrypto.com/api/v2/queries/c493c7b1-cfcc-4aee-ad79-869b4ed8ca90/data/latest\",\n  {\n    subscribe: true,\n    method: \"GET\",\n    headers: {\n      Accept: \"*/*\",\n    },\n  }\n);\n\nconst r_data = raw_data.body || [];\n\nconst sortedData = r_data.sort((a, b) => {\n  return new Date(a[\"DAY\"]) - new Date(b[\"DAY\"]);\n});\n\nconst series1 = {\n  label: \"RETURNING_MAAS\",\n  data: sortedData.map((item) => {\n    return {\n      primary: item.DAY,\n      secondary: item.RETURNING_MAAS,\n    };\n  }),\n};\n\nconst series2 = {\n  label: \"NEW_MAAS\",\n  data: sortedData.map((item) => {\n    return {\n      primary: item.DAY,\n      secondary: item.NEW_MAAS,\n    };\n  }),\n};\n\n// const series1 = {\n//   label: \"RETURNING_MAAS\",\n//   data: sortedData.map((item) => {\n//     const date = new Date(item.DAY);\n//     const month = date.toLocaleString(\"default\", { month: \"long\" });\n//     const year = date.getFullYear();\n//     return {\n//       primary: `${month} ${year}`,\n//       secondary: item.RETURNING_MAAS,\n//     };\n//   }),\n// };\n\n// const series2 = {\n//   label: \"NEW_MAAS\",\n//   data: sortedData.map((item) => {\n//     const date = new Date(item.DAY);\n//     const month = date.toLocaleString(\"default\", { month: \"long\" });\n//     const year = date.getFullYear();\n//     return {\n//       primary: `${month} ${year}`,\n//       secondary: item.NEW_MAAS,\n//     };\n//   }),\n// };\n\n// const primaryAxis = {\n//   type: \"ordinal\",\n//   tickFormat: function (d) {\n//     const date = new Date(d);\n//     return date.toLocaleString(\"default\", { month: \"short\" });\n//   },\n// };\n\n// const secondaryAxes = [\n//   {\n//     type: \"linear\",\n//     position: \"left\",\n//     format: (d) => `${d}`, // You can customize the format if needed\n//   },\n// ];\n\n// const primaryAxis = {\n//   getValue: (datum) => datum.primary,\n// };\nconst primaryAxis = {\n  //   position: \"left\",\n  type: \"linear\",\n  show: false,\n  getValue: (datum) => datum.primary,\n};\n\nconst secondaryAxes = [\n  {\n    // position: \"top\",\n    // show: false,\n    getValue: (datum) => datum.secondary,\n    type: \"linear\",\n    // If you have a specific value for stackOffsetWiggle, you can replace it here\n    // stackOffset: stackOffsetWiggle,\n    // stacked: true,\n  },\n];\n\nconst output = [series2, series1];\n\nreturn (\n  <div>\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        padding: \"12px\",\n        border: \"2px solid black\",\n        height: \"400px\",\n      }}\n    >\n      <div\n        style={{\n          flex: \"0 0 auto\",\n          padding: \"10px\",\n          border: \"1px solid red\",\n        }}\n      >\n        Header\n      </div>\n      <div\n        style={{\n          flex: 2,\n          border: \"5px solid blue\",\n          maxHeight: \"400px\",\n          margin: \"10px\",\n          overflow: \"hidden\",\n        }}\n      >\n        <ReactChart\n          chart_name=\"BarCustom\"\n          data={output}\n          options={{ primaryAxis, secondaryAxes }}\n        />\n      </div>\n    </div>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/y3k.near/widget/near_atlas.components.react_charts.MonthlyActiveAcounts", "fact_widget_deployments_id": "1d732db1a089d9aadde95fa1808c8cc7", "inserted_timestamp": "2023-08-14T19:28:56.544Z", "modified_timestamp": "2023-08-14T19:28:56.544Z", "__row_index": 8}