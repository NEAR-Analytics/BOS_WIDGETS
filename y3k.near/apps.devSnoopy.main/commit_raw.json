{"tx_hash": "9sEjpn3VpQrmNxd3XHBxXAXV1tWSQxsA9KxqRaCuBrgP", "action_id_social": "FqXQUTxgLQJc3RqZmb7zsS7JTXzNq12TvMsXnru3eqTY-0-widget", "block_id": 107409090, "block_timestamp": "2023-12-08T04:08:22.080Z", "signer_id": "y3k.near", "widget_name": "apps.devSnoopy.main", "source_code": "let rawData = fetch(\n  \"https://raw.githubusercontent.com/NEAR-Analytics/NEAR-Social/main/data/output_snoopy_pipeline_benchmark.json\",\n  {\n    subscribe: true,\n    method: \"GET\",\n    headers: {\n      Accept: \"*/*\",\n    },\n  }\n);\n\n// State.init({\n//   setSortConfig: { key: null, direction: \"asc\" },\n//   currentPage: 1,\n//   rowsPerPage: 10, // You can change this as needed.\n// });\n\nfunction createRegistry(data) {\n  const registry = {};\n\n  data.forEach((item) => {\n    // Destructure necessary fields from each item\n    const {\n      nft_receiver_id,\n      token_ids,\n      series_title,\n      mint_timestamp_utc,\n      originated_from_transaction_hash,\n    } = item;\n\n    // If this is the first NFT for this receiver, initialize an array\n    if (!registry[nft_receiver_id]) {\n      registry[nft_receiver_id] = [];\n    }\n\n    // Add this NFT's info to the receiver's array\n    registry[nft_receiver_id].push({\n      token_ids,\n      series_title,\n      mint_timestamp_utc,\n      originated_from_transaction_hash,\n    });\n  });\n\n  return registry;\n}\n\nfunction transformDataToDesiredFormat(registry) {\n  let transformedData = [];\n\n  Object.entries(registry).forEach(([key, items]) => {\n    items.forEach((item) => {\n      // Create a new object for each item\n      let transformedEntry = {};\n\n      // Copy all key-value pairs from the original item to the new object\n      Object.keys(item).forEach((itemKey) => {\n        transformedEntry[itemKey] = item[itemKey];\n      });\n\n      // Optionally, add or transform any additional keys as needed\n      transformedEntry[\"address\"] = key; // Example of adding a new key\n\n      transformedData.push(transformedEntry);\n    });\n  });\n\n  return transformedData;\n}\n\nconst dataRegistry = createRegistry(JSON.parse(rawData.body).data);\n\n// console.log(JSON.parse(rawData.body));\n// console.log(dataRegistry);\nconst tData = transformDataToDesiredFormat(dataRegistry);\n\nreturn (\n  <div>\n    <Widget src=\"y3k.near/widget/apps.devSnoopy.menu\" props={{}} />\n\n    <Widget\n      src=\"y3k.near/widget/apps.devSnoopy.components.table\"\n      props={{ dataRegistry: tData }}\n    />\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/y3k.near/widget/apps.devSnoopy.main", "fact_widget_deployments_id": "9e5b88bbe39479f32acb8a25cbf11eef", "inserted_timestamp": "2023-12-08T05:47:52.587Z", "modified_timestamp": "2023-12-20T03:22:11.422Z", "__row_index": 0}