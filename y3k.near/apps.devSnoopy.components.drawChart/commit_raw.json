{"tx_hash": "2VrHUK6ReEzoHCFY74EZXrdwWKNC2zm363YLSSyeTt3j", "action_id_social": "DvUzN6QJreyA8vDu6VTo3czRREFEv61bkaEFNi9Q2LHu-0-widget", "block_id": 107416547, "block_timestamp": "2023-12-08T06:20:37.822Z", "signer_id": "y3k.near", "widget_name": "apps.devSnoopy.components.drawChart", "source_code": "var series = [\n  {\n    data: [80],\n    type: \"bar\",\n    stack: \"a\",\n    name: \"a\",\n\n    label: {\n      show: true,\n    },\n  },\n  {\n    data: [120],\n    type: \"bar\",\n    stack: \"a\",\n    name: \"b\",\n\n    label: {\n      show: true,\n    },\n  },\n];\nconst stackInfo = {};\nfor (let i = 0; i < series[0].data.length; ++i) {\n  for (let j = 0; j < series.length; ++j) {\n    const stackName = series[j].stack;\n    if (!stackName) {\n      continue;\n    }\n    if (!stackInfo[stackName]) {\n      stackInfo[stackName] = {\n        stackStart: [],\n        stackEnd: [],\n      };\n    }\n    const info = stackInfo[stackName];\n    const data = series[j].data[i];\n    if (data && data !== \"-\") {\n      if (info.stackStart[i] == null) {\n        info.stackStart[i] = j;\n      }\n      info.stackEnd[i] = j;\n    }\n  }\n}\nfor (let i = 0; i < series.length; ++i) {\n  const data = series[i].data;\n  const info = stackInfo[series[i].stack];\n  for (let j = 0; j < series[i].data.length; ++j) {\n    // const isStart = info.stackStart[j] === i;\n    const isEnd = info.stackEnd[j] === i;\n    const topBorder = isEnd ? 20 : 0;\n    const bottomBorder = 0;\n    data[j] = {\n      value: data[j],\n      itemStyle: {\n        borderRadius: [topBorder, topBorder, bottomBorder, bottomBorder],\n      },\n    };\n  }\n}\n\nconst fetchResult = fetch(\n  \"https://storage.googleapis.com/databricks-near-query-runner/output/total_fast_auth_by_date.json\"\n);\n\nif (!fetchResult) {\n  return \"Loading data...\";\n}\nif (!fetchResult.ok) {\n  return \"Failed to fetch data\";\n}\n\nconst parsed = JSON.parse(fetchResult.body);\nconst dataset = parsed.data\n  .sort((a, b) => a.start_of_the_week - b.start_of_the_week)\n  .map((row) => ({\n    \"Total Fast Auth Accounts\": row.total_fast_auth_acounts,\n    Date: new Date(row.start_of_the_week).toISOString().substring(0, 10),\n  }));\n\nconst colsToShow = [\"Total Fast Auth Accounts\"];\n\nconst definition = {\n  legend: {},\n\n  grid: {\n    left: \"3%\",\n    right: \"4%\",\n    bottom: \"3%\",\n    containLabel: true,\n  },\n  tooltip: {\n    trigger: \"axis\",\n    axisPointer: {\n      // Use axis to trigger tooltip\n      type: \"shadow\", // 'shadow' as default; can also be 'line' or 'shadow'\n    },\n  },\n  xAxis: {\n    type: \"category\",\n    data: [\"Thu\"],\n  },\n  yAxis: {\n    type: \"value\",\n  },\n  series: series,\n};\n\nreturn (\n  <div>\n    <Widget src={`nearpavel.near/widget/EChart`} props={{ definition }} />\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/y3k.near/widget/apps.devSnoopy.components.drawChart", "fact_widget_deployments_id": "4a33b0b001f1527ad47ab9bab8c188a2", "inserted_timestamp": "2023-12-08T08:23:46.887Z", "modified_timestamp": "2023-12-20T03:22:11.422Z", "__row_index": 0}