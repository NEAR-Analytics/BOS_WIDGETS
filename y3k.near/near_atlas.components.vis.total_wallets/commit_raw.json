{"tx_hash": "J63EZT6fRnATCkNyeNhz4ReDHWLh1bKTX6fruJuURGm", "action_id_social": "FdzdyptukykjSCtc7JE2qnKJGMsLyHsSM4MGzFtE35rj-0-widget", "block_id": 108350336, "block_timestamp": "2023-12-19T19:36:09.978Z", "signer_id": "y3k.near", "widget_name": "near_atlas.components.vis.total_wallets", "source_code": "let raw_data = fetch(\n  \"https://api.flipsidecrypto.com/api/v2/queries/91b91aba-f307-48c9-9731-c3d475838f1f/data/latest\",\n  {\n    subscribe: true,\n    method: \"GET\",\n    headers: {\n      Accept: \"*/*\",\n    },\n  }\n);\n\nconst initialState = {\n  selectedDateRange: \"1Y\",\n  rawData: [],\n};\n\nstate = State.init(initialState);\n\nconst handleDateRangeChange = (range) => {\n  State.update({\n    selectedDateRange: range,\n  });\n};\n\nconst data = JSON.parse(raw_data.body) || [];\n\nState.update({ rawData: data });\n\nlet Style = styled.div`\n                `;\n\n// logic start\n\nconst processData = (rawData, dateRange) => {\n  const endDate = new Date();\n  let startDate = new Date();\n\n  switch (dateRange) {\n    case \"1M\":\n      startDate.setMonth(endDate.getMonth() - 1);\n      break;\n    case \"3M\":\n      startDate.setMonth(endDate.getMonth() - 3);\n      break;\n    case \"YTD\":\n      startDate = new Date(endDate.getFullYear(), 0, 1); // start of the year\n      break;\n    case \"1Y\":\n      startDate.setFullYear(endDate.getFullYear() - 1);\n      break;\n    case \"3Y\":\n      startDate.setFullYear(endDate.getFullYear() - 3);\n      break;\n  }\n\n  const processedData = rawData.filter((entry) => {\n    const entryDate = new Date(entry[\"DAY\"]);\n    return entryDate >= startDate && entryDate <= endDate;\n  });\n\n  // Sort the processed data by date\n  return processedData.sort((a, b) => new Date(a[\"DAY\"]) - new Date(b[\"DAY\"]));\n};\n\nconst dataToDisplay = processData(state.rawData, state.selectedDateRange);\n\nconst dates = dataToDisplay.map((entry) => entry[\"DAY\"]);\n\nconst WALLETS_CREATED = {};\nconst TOTAL_WALLETS = {};\n\ndataToDisplay.forEach((entry) => {\n  WALLETS_CREATED[entry[\"DAY\"]] = entry[\"WALLETS_CREATED\"];\n  TOTAL_WALLETS[entry[\"DAY\"]] = entry[\"TOTAL_WALLETS\"];\n});\n\nconst stacked_options = {\n  maintainAspectRatio: true,\n  interaction: {\n    mode: \"index\",\n    intersect: false,\n  },\n  stacked: false,\n  plugins: {\n    legend: {\n      display: true,\n      position: \"bottom\",\n    },\n  },\n  scales: {\n    y: {\n      type: \"linear\",\n      display: true,\n      position: \"left\",\n      grid: {\n        color: \"rgb(41,51,64)\", // This will change the gridline color\n      },\n      ticks: {\n        color: \"rgb(240,255,240)\", // This will change the axis text label color\n      },\n    },\n    y1: {\n      type: \"linear\",\n      display: true,\n      position: \"right\",\n\n      ticks: {\n        color: \"rgb(240,255,240)\", // This will change the axis text label color\n      },\n      grid: {\n        drawOnChartArea: false,\n        color: \"rgb(41,51,64)\", // This will change the gridline color\n      },\n    },\n    x: {\n      grid: {\n        color: \"rgb(41,51,64)\", // This will change the gridline color\n      },\n      ticks: {\n        color: \"rgb(240,255,240)\", // This will change the axis text label color\n      },\n    },\n  },\n};\n\nconst stacked_bar_data = {\n  dates,\n  datasets: [\n    {\n      label: \"Wallets Created\",\n      type: \"line\",\n      data: WALLETS_CREATED,\n      backgroundColor: \"rgb(250,164,58)\",\n      yAxisID: \"y1\",\n    },\n    {\n      label: \"Total Wallets\",\n      type: \"bar\",\n      data: TOTAL_WALLETS,\n      backgroundColor: \"rgb(13,131,171)\",\n      yAxisID: \"y\",\n    },\n  ],\n};\n\nreturn (\n  <Style>\n    <div className=\"relative text-bg-dark rounded-4 p-3 mb-4\">\n      <div className=\"absolute top-0 right-0 flex space-x-2 p-3\">\n        {[\"1M\", \"3M\", \"YTD\", \"1Y\", \"3Y\"].map((range) => (\n          <button\n            key={range}\n            onClick={() => handleDateRangeChange(range)}\n            className={`px-3 py-1 rounded transition-colors duration-200 ease-in ${\n              state.selectedDateRange === range\n                ? \"bg-blue-500 text-white\"\n                : \"bg-gray-800 text-gray-400 hover:bg-gray-700\"\n            }`}\n          >\n            {range}\n          </button>\n        ))}\n\n        <button className=\"px-3 py-1 rounded transition-colors duration-200 ease-in bg-gray-800 text-gray-400 hover:bg-gray-700\">\n          <a\n            href=\"https://api.flipsidecrypto.com/api/v2/queries/91b91aba-f307-48c9-9731-c3d475838f1f/data/latest\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"text-red-50 whitespace-normal break-words block max-w-xs\"\n          >\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              strokeWidth={1.5}\n              stroke=\"currentColor\"\n              className=\"w-6 h-6\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                d=\"M3 16.5v2.25A2.25 2.25 0 005.25 21h13.5A2.25 2.25 0 0021 18.75V16.5M16.5 12L12 16.5m0 0L7.5 12m4.5 4.5V3\"\n              />\n            </svg>\n          </a>\n        </button>\n      </div>\n      <div className=\"rounded-4 p-3 mb-4 pt-16\">\n        {\" \"}\n        {data !== null ? (\n          <div>\n            <BarEl options={stacked_options} data={stacked_bar_data} />\n          </div>\n        ) : (\n          <div>Loading ...</div>\n        )}\n      </div>\n    </div>\n  </Style>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/y3k.near/widget/near_atlas.components.vis.total_wallets", "fact_widget_deployments_id": "7492d7d93a90ea0f9e30aff6cfaa59bd", "inserted_timestamp": "2023-12-19T21:53:52.600Z", "modified_timestamp": "2023-12-21T16:46:06.815Z", "__row_index": 2}