{"tx_hash": "7Qbs1i7WrB4M6EHaMvzorCgB9UcBL6LM4LF9t6bEdpTd", "action_id_social": "5bz5LKt1Wxgb5miJn2WnVni1UNNyxMSrWEX28CwE8wCq-0-widget", "block_id": 107410356, "block_timestamp": "2023-12-08T04:30:40.077Z", "signer_id": "y3k.near", "widget_name": "apps.devSnoopy.components.table", "source_code": "// const tData = props.dataRegistry || [];\n\nfunction aggregateData(data, aggregateKey) {\n  const aggregatedData = {};\n\n  data.forEach((item) => {\n    // Use the specified key for aggregation\n    const key = item[aggregateKey];\n    if (!aggregatedData[key]) {\n      // Initialize with the first item of this series and set count to 1\n      aggregatedData[key] = { ...item, count: 1 };\n    } else {\n      // Increment count for each occurrence\n      aggregatedData[key].count += 1;\n    }\n  });\n\n  return Object.values(aggregatedData);\n}\n\n// const tData = aggregateData(props.dataRegistry || []);\nconst tData = aggregateData(props.dataRegistry, \"series_title\");\n\nfunction generateDynamicTableHeaders(tableData, thStyle) {\n  // Check if tableData is an array and not empty\n  if (!Array.isArray(tableData) || tableData.length === 0) {\n    return null;\n  }\n\n  // Ensure the first element is an object\n  const firstItem = tableData[0];\n  if (typeof firstItem !== \"object\" || firstItem === null) {\n    return null;\n  }\n\n  // Extract keys from the first object in the data array as column names\n  const columnNames = Object.keys(firstItem);\n  console.log(columnNames);\n\n  return columnNames.map((columnName, index) => (\n    <th key={index} style={thStyle}>\n      {columnName.replace(/_/g, \" \")}\n    </th>\n  ));\n}\n\nconst tableStyle = {\n  borderCollapse: \"collapse\",\n  width: \"100%\",\n  borderRadius: \"0.25rem\",\n  overflow: \"hidden\",\n};\n\nconst thStyle = {\n  backgroundColor: \"#000000\", // Black background\n  color: \"#FFFFFF\", // White text\n  padding: \"8px\",\n  textAlign: \"left\",\n  borderBottom: \"1px solid #e5e7eb\",\n};\n\nconst tdStyle = {\n  padding: \"8px\",\n  textAlign: \"left\",\n  borderBottom: \"1px solid #e5e7eb\",\n};\n\n// Function to alternate row colors\nconst getRowStyle = (index) => ({\n  backgroundColor: index % 2 === 0 ? \"#f2f2f2\" : \"#e5e7eb\", // Alternating colors\n});\n\nreturn (\n  <table style={tableStyle}>\n    <thead>\n      <tr>\n        <th style={thStyle}>Address</th>\n        <th style={thStyle}>Series Title</th>\n        <th style={thStyle}>Mint Timestamp UTC</th>\n        <th style={thStyle}>Originated From Transaction Hash</th>\n        <th style={thStyle}>Token IDs</th>\n        <th style={thStyle}>Count</th>\n      </tr>\n    </thead>\n    <tbody>\n      {tData.map((item, index) => (\n        <tr key={item.address} style={getRowStyle(index)}>\n          <td style={tdStyle}>{item.address}</td>\n          <td style={tdStyle}>{item.series_title}</td>\n          <td style={tdStyle}>{item.mint_timestamp_utc}</td>\n          <td style={tdStyle}>{item.originated_from_transaction_hash}</td>\n          <td style={tdStyle}>{item.token_ids}</td>\n          <td style={tdStyle}>{item.count}</td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/y3k.near/widget/apps.devSnoopy.components.table", "fact_widget_deployments_id": "697f5cacf11eed27f32fa8ccf43c3581", "inserted_timestamp": "2023-12-08T06:28:36.900Z", "modified_timestamp": "2023-12-20T03:22:11.422Z", "__row_index": 11}