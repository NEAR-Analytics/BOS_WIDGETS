{"tx_hash": "8G28fiJWb5ijt7p4Fffv8KxUpVjhic6QtGrMCefZhFcA", "action_id_social": "65Pqj6NjokndXyiFxfGqUFgvUA5AxdqvSF74TXkESNk5-0-widget", "block_id": 99444863, "block_timestamp": "2023-08-23T03:50:22.178Z", "signer_id": "guessme.near", "widget_name": "ZKEVM.Template", "source_code": "const Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 30px 36px;\n  color: #fff;\n`;\n\nconst Search = styled.div`\ndisplay: flex;\nposition: fixed;\ntop: 112px;\nright: 32px;\n  input{\n     color: #ffffff;\n     background: transparent;\n     border: none;\n     border-bottom: 1px #373A53 solid;\n     padding-right: 24px;\n   }\n   input:focus {\n     outline: none;\n     color: #ffffff;\n     background: transparent;\n     border: none;\n     box-shadow: none;\n     border-bottom: 1px #373A53 solid;\n   }\n   svg {\n    margin-left: -24px;\n    margin-top:10px;\n  }\n`;\n\nconst SearchIcon = (\n  <svg width=\"21\" height=\"15\" viewBox=\"0 0 21 15\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <circle cx=\"7.01829\" cy=\"7.01829\" r=\"6.01829\" stroke=\"#EBF479\" strokeWidth=\"2\" />\n    <rect x=\"14.9141\" y=\"9.64941\" width=\"6.141\" height=\"2.63186\" rx=\"1.31593\" transform=\"rotate(30 14.9141 9.64941)\" fill=\"#EBF479\" />\n  </svg>\n\n);\n\nconst templates = [\n  {\n    src: \"bluebiu.near/widget/ZKEVM-all-in-one\",\n    bannerImg:\n      \"https://ipfs.near.social/ipfs/bafkreicwk2fqkrtkwhyioz7l6tkgmduxsw4ey7t6pd7isahu3bex7etbgu\",\n  },\n  {\n    src: \"guessme.near/widget/ZKEVMSwap.zkevm-bridge\",\n    bannerImg:\n      \"https://ipfs.near.social/ipfs/bafkreievrd4imhglvabvg2vgcqxmpk4vog6p3dw5cy3rsay4ocsyu3y7w4\",\n  },\n  {\n    src: \"guessme.near/widget/ZKEVMSwap.zkevm-swap\",\n    bannerImg:\n      \"https://ipfs.near.social/ipfs/bafkreihwkwijwsazh5dp3rxc2lwgi4algusd3b447o3xcfcnndbgaura3q\",\n  },\n  {\n    src: \"guessme.near/widget/ZKEVM.GAMMA\",\n    bannerImg:\n      \"https://ipfs.near.social/ipfs/bafkreih77ecmgng2fpy6mblk2aipt3agwm3anjldcyktx2j6kssggpelue\",\n  },\n  {\n    src: \"guessme.near/widget/ZKEVM.AAVE\",\n    bannerImg:\n      \"https://ipfs.near.social/ipfs/bafkreibmqzfwki7zye6ruqi3hifgexs6g5nv4qvzcmrm73lnra5mbkdrxe\",\n  },\n];\n\nState.init({\n  searchValue: \"\",\n})   // \u521d\u59cb\u5316\u72b6\u6001\n\nconst handleSearchChange = (e) => {\n  const value = e.target.value;\n  State.update({\n    searchValue: value,\n  }) // \u66f4\u65b0\u72b6\u6001\u503c\n};\n\nconst metadataPromises = templates.map(({ src }) =>\n  Social.get(`${src}/metadata/**`, 'final')\n);\n\nconst updatedTemplates = templates.map((template, index) => ({\n  ...template,\n  name: metadataPromises[index]?.name || '',\n}));\n\nconst filteredTemplates = updatedTemplates.filter(({ name }) =>\n  name.toLowerCase().includes(state.searchValue.toLowerCase())\n);\n\n\nreturn (\n  <Container>\n    <Search>\n      <input\n        type=\"text\"\n        value={searchValue}\n        onChange={handleSearchChange}\n      />\n      {SearchIcon}\n    </Search>\n    {filteredTemplates.map(({ src, bannerImg }, index) => (\n      <Widget\n        src=\"guessme.near/widget/ZKEVM.Template-card\"\n        key={index}\n        props={{\n          src,\n          bannerImg,\n        }}\n      />\n    ))}\n    <Widget src=\"guessme.near/widget/ZKEVMWarmUp.generage-uuid\" />\n  </Container>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/guessme.near/widget/ZKEVM.Template", "fact_widget_deployments_id": "d4df568ec5d0df92cce4f5f403b3007d", "inserted_timestamp": "2023-08-23T05:32:51.456Z", "modified_timestamp": "2023-08-23T05:32:51.456Z", "__row_index": 5}