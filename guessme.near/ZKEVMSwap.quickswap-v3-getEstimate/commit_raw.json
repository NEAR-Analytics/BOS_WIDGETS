{"tx_hash": "GZ2bcoNzv1rnG9TovPHgDC2iyYcK2DUBYHwK224umqA4", "action_id_social": "4GQgHj28WeRDgdPP2XpKTRus4pWUsFYBiSPrVDRbejCo-0-widget", "block_id": 101467166, "block_timestamp": "2023-09-19T10:06:21.872Z", "signer_id": "guessme.near", "widget_name": "ZKEVMSwap.quickswap-v3-getEstimate", "source_code": "const {\n  tokenIn: tokenInProp,\n  tokenOut: tokenOutProp,\n  amountIn,\n  tokenOutDecimals,\n  loadRes,\n  dex,\n} = props;\n\nconst ethAddress = \"0x0000000000000000000000000000000000000000\";\n\nconst tokenIn =\n  tokenInProp === ethAddress\n    ? \"0x4f9a0e7fd2bf6067db6994cf12e4495df938e6e9\"\n    : tokenInProp;\n\nconst tokenOut =\n  tokenOutProp === ethAddress\n    ? \"0x4f9a0e7fd2bf6067db6994cf12e4495df938e6e9\"\n    : tokenOutProp;\n\nState.init({ res: { tokenIn, tokenOut, amountIn, dex } });\n\nif (tokenIn === tokenOut) {\n  loadRes({\n    estimate: Big(amountIn).div(Big(10).pow(18)).toFixed(),\n  });\n\n  return \"\";\n}\n\nconst middlePool =\n  props.middlePool ?? \"0x4f9a0e7fd2bf6067db6994cf12e4495df938e6e9\";\n\n// const useMiddlePool = tokenIn !== middlePool && tokenOut !== middlePool;\nconst useMiddlePool = false;\n\nconst optionDirectSwap = {\n  name: `directSwap`,\n  path: [tokenIn, tokenOut],\n};\n\nconst optionMiddlePoolSwap = {\n  name: `middlePoolSwap`,\n  path: [tokenIn, middlePool, tokenOut],\n};\n\nlet swapOptions = useMiddlePool\n  ? [optionDirectSwap, optionMiddlePoolSwap]\n  : [optionDirectSwap];\n\nif (state.res.amountIn !== amountIn || state.res.dex !== dex) {\n  if (state.res.dex !== dex) {\n    loadRes(null);\n  }\n\n  const resetObject = { amountIn, dex };\n  swapOptions = swapOptions.map(\n    (option) => (resetObject[option.name] = undefined)\n  );\n\n  console.log(\"resetObject\", resetObject);\n  State.update({\n    res: Object.assign(state.res ?? {}, resetObject),\n  });\n}\n\nconst quoterContractId =\n  props.quoterContractId ?? \"0x55BeE1bD3Eb9986f6d2d963278de09eE92a3eF1D\";\nconst sqrtPriceLimitX96 = props.sqrtPriceLimitX96 ?? 0;\n\nconst quoterABI =\n  props.quoterABI ??\n  \"https://gist.githubusercontent.com/zavodil/6a6e93e079deb3f8992e3d28d1ff0d78/raw/c6693b2ea41605ec215c912bfa82d67bad90258b/zkevm-quoter-abi.json\";\n\nconst quoterContractJson = fetch(quoterABI);\nif (!quoterContractJson.ok) {\n  return <div />;\n}\n\nconst getEstimate = (path, name) => {\n  const abi = JSON.parse(quoterContractJson.body);\n  const iface = new ethers.utils.Interface(abi);\n\n  const pathBytes = \"0x\" + path.map((address) => address.substr(2)).join(\"\");\n\n  const inputs = [pathBytes, amountIn];\n\n  const encodedData = iface.encodeFunctionData(\"quoteExactInput\", inputs);\n\n  Ethers.provider()\n    .call({\n      to: quoterContractId,\n      data: encodedData,\n    })\n    .then((data) => {\n      const decodedData = iface.decodeFunctionResult(\"quoteExactInput\", data);\n      // decodedData = [amountOut, fee]\n      const amountOut = decodedData[0];\n      const fee = decodedData[1];\n\n      const estimate = Big(amountOut.toString())\n        .div(Big(10).pow(tokenOutDecimals))\n        .toFixed(18);\n\n      State.update({\n        res: Object.assign(state.res ?? {}, {\n          [name]: { estimate, path, fee },\n        }),\n      });\n    });\n};\n\nconst qs = `${amountIn}-${tokenIn}-${tokenOut}-${dex}`;\nif (qs === state.qs && !!state.res?.[option.name]) {\n  return \"\";\n} else {\n  State.update({\n    qs,\n  });\n\n  if (swapOptions.some((option) => !option.path)) {\n    return;\n  }\n\n  swapOptions.map((option) => {\n    getEstimate(option.path, option.name);\n  });\n}\n\nconst allDataReceived = swapOptions.reduce(\n  (accumulator, option) => accumulator && state.res[option.name] !== undefined,\n  true\n);\n\nif (state.res !== undefined && allDataReceived) {\n  if (typeof loadRes === \"function\") {\n    let res = state.res;\n\n    res.estimate = 0;\n    res.path = \"\";\n\n    swapOptions.map((option) => {\n      let estimate = parseFloat(state.res[option.name].estimate);\n      if (res.estimate < estimate) {\n        res.estimate = estimate;\n        res.path = state.res[option.name].path;\n        res.fee = state.res[option.name].fee;\n      }\n    });\n\n    loadRes(res);\n  }\n}\n\nreturn \"\";\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/guessme.near/widget/ZKEVMSwap.quickswap-v3-getEstimate", "fact_widget_deployments_id": "32f122787bfb9dff31897e64b9894a5f", "inserted_timestamp": "2023-09-19T11:54:00.834Z", "modified_timestamp": "2023-09-19T11:54:00.834Z", "__row_index": 0}