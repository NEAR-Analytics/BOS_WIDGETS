{"tx_hash": "8QiP7dTQSSMa5JEZ8GGHcYQ3FXbVQLyRHm7pLnADzvAT", "action_id_social": "JBz5RQTu4W4xBUjbZBtPbXbiGNQ6E3pRoC1Vdkf8Ywxf-0-widget", "block_id": 113154560, "block_timestamp": "2024-02-19T12:56:46.042Z", "signer_id": "maierr.near", "widget_name": "MentorHub_MyCopy", "source_code": "const accountId = context.accountId;\r\nif (!accountId) {\r\n  return \"No account ID\";\r\n}\r\nconst profile = Social.getr(`${accountId}/profile`);\r\nconst name = profile.name;\r\nconst discription = profile.discription;\r\n\r\nconst student = Social.getr(`${accountId}/mystudents`);\r\nlet numb = \"\";\r\nlet studentArray = [];\r\nlet arreyWhitKeysForStufent = [];\r\nlet heash = {};\r\nif (student) {\r\n  studentArray = Object.values(student);\r\n  arreyWhitKeysForStufent = Object.keys(student);\r\n  for (const i = 0; i < arreyWhitKeysForStufent.length; i++) {\r\n    heash[studentArray[i]] = [arreyWhitKeysForStufent[i]];\r\n  }\r\n}\r\nif (arreyWhitKeysForStufent) {\r\n  numb =\r\n    parseInt(arreyWhitKeysForStufent[arreyWhitKeysForStufent.length - 1]) + 1;\r\n} else {\r\n  numb = 0;\r\n}\r\n\r\nfunction descriptionForStudent(account_id) {\r\n  const discriprionalIN = Social.getr(`${account_id}/profile`);\r\n  return discriprionalIN.discription;\r\n}\r\nlet index = 0;\r\nfunction deleteNumb(student) {\r\n  index = heash[student];\r\n}\r\n\r\nState.init({\r\n  mentorPhoto: \"\",\r\n  mentorName: \"Mentor Name\",\r\n  mentorPoints: 0,\r\n  studentsCounter: 0,\r\n  students: [],\r\n  studentRequests: [],\r\n  currentAppThemeMode: \"lightMode\",\r\n  currentRoute: \"studentsPage\",\r\n  profileName: name || \"\",\r\n  profileDiscription: discription || \"\",\r\n  addNewStudent: \"\",\r\n  editDescription: \"\",\r\n});\r\n\r\n//UI Kit Theme\r\nconst appTheme = {\r\n  colors: () => {\r\n    const currentThemeMode = state.currentAppThemeMode;\r\n    const colors =\r\n      currentThemeMode === \"lightMode\"\r\n        ? {\r\n            standartText: \"#000000\",\r\n            backgroundColor: \"#FFFFFF\",\r\n            primary: \"#5F8AFA\",\r\n            secondary: \"#FFFFFF\",\r\n            textBlack: \"#000000\",\r\n            textWhite: \"#FFFFFF\",\r\n          }\r\n        : {\r\n            standartText: \"#FFFFFF\",\r\n            backgroundColor: \"#333333\",\r\n            primary: \"#5F8AFA\",\r\n            secondary: \"#FFFFFF\",\r\n            textBlack: \"#000000\",\r\n            textWhite: \"#FFFFFF\",\r\n          };\r\n\r\n    return colors;\r\n  },\r\n  fontSizes: {\r\n    h1: \"2.5em\",\r\n    h2: \"2em\",\r\n    h3: \"1.75em\",\r\n    h4: \"1.5em\",\r\n    h5: \"1.25em\",\r\n    h6: \"1em\",\r\n    body: \"1em\",\r\n    b1: \"1em\",\r\n    b2: \"0.9em\",\r\n    b3: \"0.8em\",\r\n  },\r\n  margins: {\r\n    small: \"0.25em\",\r\n    medium: \"0.5em\",\r\n    large: \"1em\",\r\n    xlarge: \"2em\",\r\n  },\r\n  paddings: {\r\n    small: \"0.25em\",\r\n    medium: \"0.5em\",\r\n    large: \"1em\",\r\n    xlarge: \"2em\",\r\n  },\r\n  borderRadius: {\r\n    small: \"4px\",\r\n    medium: \"8px\",\r\n    large: \"16px\",\r\n    circle: \"50%\",\r\n  },\r\n};\r\nconst appThemeService = {\r\n  switchToLightTheme: () =>\r\n    State.update({\r\n      currentAppThemeMode: \"lightMode\",\r\n    }),\r\n  switchToDarkTheme: () =>\r\n    State.update({\r\n      currentAppThemeMode: \"darkMode\",\r\n    }),\r\n  getTheme: () => appTheme,\r\n};\r\n\r\nconst Button = styled.button`\r\n  background: ${appTheme.colors().primary};\r\n  color: ${appTheme.colors().textWhite};\r\n  font-size: ${appTheme.fontSizes.b2};\r\n  margin: ${appTheme.margins.small};\r\n  padding: ${appTheme.paddings.medium};\r\n  width: 100px;\r\n  border: none;\r\n  border-radius: ${appTheme.borderRadius.medium};\r\n  align-self: center;\r\n`;\r\nconst Body = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 800px;\r\n  background-color: ${appTheme.colors().backgroundColor};\r\n`;\r\nconst NavigationBar = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center; \r\n  padding : ${appTheme.paddings.large};\r\n  background-color: ${appTheme.colors().backgroundColor};\r\n  justify-content: center;\r\n`;\r\n\r\nconst ProfileTab = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: ${appTheme.colors().backgroundColor};\r\n  justify-content: center;\r\n  align-items: center; \r\n`;\r\n\r\nconst uiKitComponents = {\r\n  button: Button,\r\n  body: Body,\r\n  navigationBar: NavigationBar,\r\n  profileTab: ProfileTab,\r\n};\r\n\r\nconst routes = {\r\n  moduleA: \"vlmoon.near/widget/BOSModuleA\",\r\n  moduleB: \"vlmoon.near/widget/BOSModuleB\",\r\n  moduleC: \"vlmoon.near/widget/BOSModuleC\",\r\n  moduleD: \"vlmoon.near/widget/BOSModuleD\",\r\n};\r\n\r\nfunction navigateToModule(moduleRoute) {\r\n  State.update({\r\n    currentRoute: moduleRoute,\r\n  });\r\n}\r\n\r\nconst routesNavigator = {\r\n  studentsPage: () => navigateToModule(\"studentsPage\"),\r\n  myTeachersPage: () => navigateToModule(\"myTeachersPage\"),\r\n  myEventsPage: () => navigateToModule(\"myEventsPage\"),\r\n  myTasksPage: () => navigateToModule(\"myTasksPage\"),\r\n};\r\n\r\nfunction getModuleDependencies(moduleRoute) {\r\n  if (moduleRoute === \"studentsPage\") {\r\n    return [\"studentsPage\"];\r\n  } else if (moduleRoute === \"myTeachersPage\") {\r\n    return [\"myTeachersPage\"];\r\n  } else if (moduleRoute === \"myEventsPage\") {\r\n    return [\"myEventsPage\"];\r\n  } else if (moduleRoute === \"myTasksPage\") {\r\n    return [\"myTasksPage\"];\r\n  }\r\n}\r\nconst dependencies = getModuleDependencies(state.currentRoute);\r\n\r\n//Pages\r\nconst pages = {\r\n  studentsPage: (\r\n    <>\r\n      <h1>My Students</h1>\r\n      <h3>For add, input account_ID student(for exemple: exemple.near):</h3>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          marginRight: \"30em\",\r\n          height: \"3em\",\r\n          width: \"29em\",\r\n        }}\r\n      >\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          style={{\r\n            backgroundColor: \"black\",\r\n            color: \"white\",\r\n          }}\r\n          placeholder=\"Input for edit description\"\r\n          onBlur={(e) => State.update({ description: e.target.value })}\r\n        />\r\n        <CommitButton\r\n          data={{\r\n            mystudents: {\r\n              [numb]: state.addNewStudent,\r\n            },\r\n          }}\r\n        >\r\n          Add\r\n        </CommitButton>\r\n      </div>\r\n      <div\r\n        style={{\r\n          margin: \"15px\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            margin: \"15px\",\r\n            justifyContent: \"space-around\",\r\n          }}\r\n        >\r\n          <div>\r\n            <h4>Column profile</h4>\r\n          </div>\r\n          <div>\r\n            <h4>Column description</h4>\r\n          </div>\r\n          <div>\r\n            <h4>Column for delete & edit</h4>\r\n          </div>\r\n        </div>\r\n        {studentArray.map((student) => (\r\n          <div\r\n            key={student}\r\n            style={{\r\n              display: \"flex\",\r\n              margin: \"15px\",\r\n              justifyContent: \"space-around\",\r\n            }}\r\n          >\r\n            <div>\r\n              <Widget\r\n                src=\"near/widget/AccountProfile\"\r\n                props={{ accountId: student }}\r\n              />\r\n            </div>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              style={{\r\n                backgroundColor: \"white\",\r\n                color: \"black\",\r\n                height: \"3em\",\r\n                width: \"11em\",\r\n              }}\r\n              placeholder=\"Input for edit description\"\r\n              onBlur={(e) => State.update({ editDescription: e.target.value })}\r\n            />\r\n            <div>\r\n              <h4>{descriptionForStudent(student)}</h4>\r\n            </div>\r\n            <div>\r\n              <CommitButton\r\n                onClick={deleteNumb(student)}\r\n                data={{\r\n                  mystudents: {\r\n                    [index]: null,\r\n                  },\r\n                }}\r\n                style={{\r\n                  backgroundColor: \"red\",\r\n                }}\r\n              >\r\n                Delete\r\n              </CommitButton>\r\n              <CommitButton\r\n                data={{\r\n                  profile: {\r\n                    discription: state.editDescription,\r\n                  },\r\n                }}\r\n                style={{\r\n                  backgroundColor: \"blue\",\r\n                }}\r\n              >\r\n                Edit\r\n              </CommitButton>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </>\r\n  ),\r\n  myTeachersPage: (\r\n    <>\r\n      <h1>My Teachers</h1>\r\n    </>\r\n  ),\r\n  myEventsPage: (\r\n    <>\r\n      <h1>My Events</h1>\r\n    </>\r\n  ),\r\n  myTasksPage: (\r\n    <>\r\n      <h1>My Tasks</h1>\r\n    </>\r\n  ),\r\n};\r\n//\r\n\r\nif (!profile) {\r\n  return (\r\n    <>\r\n      <uiKitComponents.body>\r\n        <h1>Mentor HUB</h1>\r\n        <h2>\r\n          You don't have a profile, if you want to continue, you have to create\r\n          a profile\r\n        </h2>\r\n        <h3>Input your name:</h3>\r\n        <div\r\n          style={{\r\n            marginRight: \"30em\",\r\n          }}\r\n        >\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            style={{\r\n              backgroundColor: \"black\",\r\n              color: \"white\",\r\n            }}\r\n            onBlur={(e) => State.update({ profileName: e.target.value })}\r\n          />\r\n        </div>\r\n        <h2>Hello, {state.profileName}</h2>\r\n        <h3>Input your discription</h3>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          style={{\r\n            backgroundColor: \"black\",\r\n            color: \"white\",\r\n            marginRight: \"100em\",\r\n            paddingsRight: \"100px\",\r\n          }}\r\n          onBlur={(e) => State.update({ profileDiscription: e.target.value })}\r\n        />\r\n        <h2>Your discriprional: {state.profileDiscription}</h2>\r\n        <div\r\n          style={{\r\n            display: flex,\r\n            margin: \"0px 10px\",\r\n            alignItems: center,\r\n          }}\r\n        >\r\n          <CommitButton\r\n            data={{\r\n              profile: {\r\n                name: state.profileName,\r\n                discription: state.profileDiscription,\r\n              },\r\n            }}\r\n          >\r\n            Save change\r\n          </CommitButton>\r\n        </div>\r\n      </uiKitComponents.body>\r\n    </>\r\n  );\r\n}\r\n\r\nif (!name) {\r\n  <>\r\n    <uiKitComponents.body>\r\n      <h1>Mentor HUB</h1>\r\n      <h2>\r\n        You don't have a name of profile, if you want to continue, you have to\r\n        create a name.\r\n      </h2>\r\n      <h3>Input your name:</h3>\r\n      <div\r\n        style={{\r\n          marginRight: \"30em\",\r\n        }}\r\n      >\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          style={{\r\n            backgroundColor: \"black\",\r\n            color: \"white\",\r\n          }}\r\n          onBlur={(e) => State.update({ profileName: e.target.value })}\r\n        />\r\n      </div>\r\n      <h2>Hello, {state.profileName}</h2>\r\n      <div\r\n        style={{\r\n          display: flex,\r\n          margin: \"0px 10px\",\r\n          alignItems: center,\r\n        }}\r\n      >\r\n        <CommitButton\r\n          data={{\r\n            profile: {\r\n              name: state.profileName,\r\n            },\r\n          }}\r\n        >\r\n          Save change\r\n        </CommitButton>\r\n      </div>\r\n    </uiKitComponents.body>\r\n  </>;\r\n}\r\n\r\nif (!discription) {\r\n  return (\r\n    <>\r\n      <uiKitComponents.body>\r\n        <h1>Mentor HUB</h1>\r\n        <h2>\r\n          You don't have a description, if you want to continue, you have to\r\n          create a description\r\n        </h2>\r\n        <h3>Input your discription</h3>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          style={{\r\n            backgroundColor: \"black\",\r\n            color: \"white\",\r\n            marginRight: \"100em\",\r\n            paddingsRight: \"100px\",\r\n          }}\r\n          onBlur={(e) => State.update({ profileDiscription: e.target.value })}\r\n        />\r\n        <h2>Your discriprional: {state.profileDiscription}</h2>\r\n        <div\r\n          style={{\r\n            display: flex,\r\n            margin: \"0px 10px\",\r\n            alignItems: center,\r\n          }}\r\n        >\r\n          <CommitButton\r\n            data={{\r\n              profile: {\r\n                discription: state.profileDiscription,\r\n              },\r\n            }}\r\n          >\r\n            Save change\r\n          </CommitButton>\r\n        </div>\r\n      </uiKitComponents.body>\r\n    </>\r\n  );\r\n}\r\n\r\nreturn (\r\n  <>\r\n    <uiKitComponents.profileTab>\r\n      <h3>Mentor HUB</h3>\r\n      <h4>Hey, {name}</h4>\r\n      <h4>Make the world around you the better place</h4>\r\n      <Widget\r\n        src=\"mob.near/widget/ProfileImage\"\r\n        props={{\r\n          accountId,\r\n          style: { width: \"7rem\", height: \"7rem\" },\r\n          className: \"mb-2\",\r\n          imageClassName: \"rounded-circle w-100 h-100 img-thumbnail d-block\",\r\n          thumbnail: false,\r\n        }}\r\n      />\r\n    </uiKitComponents.profileTab>\r\n    <uiKitComponents.button onClick={() => alert(\"Test\")}>\r\n      Test\r\n    </uiKitComponents.button>\r\n\r\n    <uiKitComponents.body>\r\n      <uiKitComponents.navigationBar>\r\n        <uiKitComponents.button onClick={routesNavigator.studentsPage}>\r\n          My Students\r\n        </uiKitComponents.button>\r\n        <uiKitComponents.button onClick={routesNavigator.myTeachersPage}>\r\n          My Teachers\r\n        </uiKitComponents.button>\r\n        <uiKitComponents.button onClick={routesNavigator.myEventsPage}>\r\n          My Events\r\n        </uiKitComponents.button>\r\n        <uiKitComponents.button onClick={routesNavigator.myTasksPage}>\r\n          My Tasks\r\n        </uiKitComponents.button>\r\n      </uiKitComponents.navigationBar>\r\n      {pages[state.currentRoute]}\r\n    </uiKitComponents.body>\r\n  </>\r\n);\r\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/maierr.near/widget/MentorHub_MyCopy", "fact_widget_deployments_id": "077ece939ddf678e1c09ae3b1f37a262", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 3}