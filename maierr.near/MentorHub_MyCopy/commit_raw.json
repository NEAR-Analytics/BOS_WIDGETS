{"tx_hash": "8iwuGhvoEy2KXNkNTdvY7GnADnFuzbtjK2jUN4RHKgtH", "action_id_social": "FjVmAEv2WkESTfZXDnyooytqg9uf5YkqHAoNHjmFtkGR-0-widget", "block_id": 113551544, "block_timestamp": "2024-02-25T12:01:56.543Z", "signer_id": "maierr.near", "widget_name": "MentorHub_MyCopy", "source_code": "State.init({\r\n  accountId: \"\",\r\n  mentorPhoto: \"\",\r\n  mentorName: \"Mentor Name\",\r\n  mentorPoints: 0,\r\n  studentsCounter: 0,\r\n  students: [],\r\n  studentRequests: [],\r\n  currentAppThemeMode: \"lightMode\",\r\n  currentRoute: \"studentsPage\",\r\n  profileName: \"\",\r\n  profileDiscription: \"\",\r\n  creatProfileName: \"\",\r\n  creatProfileDiscription: \"\",\r\n  addNewStudent: \"\",\r\n  editDescription: \"\",\r\n  ifAddStudent: true,\r\n  studentArray: [],\r\n  arreyWhitIndexForStudent: [],\r\n  heashForDeletnumb: {},\r\n  paginatedStudentsArray: [],\r\n  flagForFindStdudentByID: false,\r\n  idFindStudent: \"\",\r\n});\r\n\r\nconst TecherPossibilities = {\r\n  init: () => {\r\n    const accountId = context.accountId;\r\n    if (!accountId) {\r\n      return \"No account ID\";\r\n    }\r\n    const profile = Social.getr(`${state.accountId}/profile`);\r\n    State.update({\r\n      accountId: accountId,\r\n      profileName: profile.name,\r\n      profileDiscription: profile.discription,\r\n    });\r\n  },\r\n  initProfile: () => {\r\n    Social.set({\r\n      profile: {\r\n        name: state.creatProfileName,\r\n        discription: state.creatProfileDiscription,\r\n      },\r\n    });\r\n  },\r\n  initNameProfile: () => {\r\n    Social.set({\r\n      profile: {\r\n        name: state.creatProfileName,\r\n      },\r\n    });\r\n  },\r\n  initDiscriptionProfile: () => {\r\n    Social.set({\r\n      profile: {\r\n        discription: state.creatProfileDiscription,\r\n      },\r\n    });\r\n  },\r\n  getStudent: (pageNumber, pageSize) => {\r\n    const student = Social.getr(`${state.accountId}/mystudents`);\r\n    let studentArray = [];\r\n    let arreyWhitIndexForStudent = [];\r\n    let heashForDeletnumb = {};\r\n\r\n    if (student) {\r\n      studentArray = Object.values(student);\r\n      arreyWhitIndexForStudent = Object.keys(student);\r\n      // \u0420\u0430\u0441\u0441\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u043c \u043d\u0430\u0447\u0430\u043b\u044c\u043d\u044b\u0439 \u0438 \u043a\u043e\u043d\u0435\u0447\u043d\u044b\u0439 \u0438\u043d\u0434\u0435\u043a\u0441\u044b \u0434\u043b\u044f \u043f\u0430\u0433\u0438\u043d\u0430\u0446\u0438\u0438\r\n      const startIndex = (pageNumber - 1) * pageSize;\r\n      const endIndex = Math.min(startIndex + pageSize, studentArray.length);\r\n      // \u0424\u0438\u043b\u044c\u0442\u0440\u0443\u0435\u043c \u043c\u0430\u0441\u0441\u0438\u0432 \u0441\u0442\u0443\u0434\u0435\u043d\u0442\u043e\u0432 \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0438 \u0441 \u043f\u0430\u0433\u0438\u043d\u0430\u0446\u0438\u0435\u0439\r\n      const paginatedStudents = studentArray.slice(startIndex, endIndex);\r\n      // \u0424\u043e\u0440\u043c\u0438\u0440\u0443\u0435\u043c \u043d\u043e\u0432\u044b\u0439 \u043c\u0430\u0441\u0441\u0438\u0432 \u0434\u043b\u044f \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u043f\u0430\u0433\u0438\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0445 \u0441\u0442\u0443\u0434\u0435\u043d\u0442\u043e\u0432\r\n      const paginatedStudentsKeys = arreyWhitIndexForStudent.slice(\r\n        startIndex,\r\n        endIndex\r\n      );\r\n\r\n      for (let i = 0; i < paginatedStudentsKeys.length; i++) {\r\n        heashForDeletnumb[paginatedStudents[i]] = [paginatedStudentsKeys[i]];\r\n      }\r\n      State.update({\r\n        studentArray: studentArray,\r\n        paginatedStudentsArray: paginatedStudents,\r\n        arreyWhitIndexForStudent: paginatedStudentsKeys,\r\n        heashForDeletnumb: heashForDeletnumb,\r\n      });\r\n    }\r\n  },\r\n  updateDiscription: (student) => {\r\n    Near.call([\r\n      {\r\n        contractName: \"social.near\",\r\n        methodName: \"set\",\r\n        args: {\r\n          data: {\r\n            [student]: {\r\n              profile: {\r\n                discription: state.editDescription,\r\n              },\r\n            },\r\n          },\r\n        },\r\n        deposit: 1,\r\n        gas: Big(10).pow(12).mul(50),\r\n      },\r\n    ]);\r\n  },\r\n  deleteStudent: (student) => {\r\n    const indexForDeleteNumb = state.heashForDeletnumb[student];\r\n    Social.set({\r\n      mystudents: {\r\n        [indexForDeleteNumb]: null,\r\n      },\r\n    });\r\n  },\r\n  addStudent: () => {\r\n    let indexForAddStudent = \"\";\r\n    if (state.arreyWhitIndexForStudent) {\r\n      indexForAddStudent =\r\n        parseInt(\r\n          state.arreyWhitIndexForStudent[\r\n            state.arreyWhitIndexForStudent.length - 1\r\n          ]\r\n        ) + 1;\r\n    } else {\r\n      indexForAddStudent = 0;\r\n    }\r\n    const newStudent = state.addNewStudent;\r\n    const sliceForVerification = newStudent.slice(\r\n      newStudent.length - 5,\r\n      newStudent.length\r\n    );\r\n    if (sliceForVerification == \".near\") {\r\n      Social.set({\r\n        mystudents: {\r\n          [indexForAddStudent]: state.addNewStudent,\r\n        },\r\n      });\r\n      State.update({\r\n        ifAddStudent: true,\r\n      });\r\n    } else {\r\n      State.update({\r\n        ifAddStudent: false,\r\n      });\r\n    }\r\n  },\r\n  findStudentByID: () => {\r\n    if (state.studentArray.includes(state.idFindStudent)) {\r\n      State.update({\r\n        flagForFindStdudentByID: true,\r\n      });\r\n      console.log(state.flagForFindStdudentByID);\r\n    } else {\r\n      State.update({\r\n        flagForFindStdudentByID: false,\r\n      });\r\n    }\r\n  },\r\n};\r\n\r\nTecherPossibilities.init();\r\nTecherPossibilities.getStudent(1, 2);\r\n\r\nfunction descriptionForStudent(account_id) {\r\n  const discriprionalIN = Social.getr(`${account_id}/profile`);\r\n  return discriprionalIN.discription;\r\n}\r\n\r\n//UI Kit Theme\r\nconst appTheme = {\r\n  colors: () => {\r\n    const currentThemeMode = state.currentAppThemeMode;\r\n    const colors =\r\n      currentThemeMode === \"lightMode\"\r\n        ? {\r\n            standartText: \"#000000\",\r\n            backgroundColor: \"#FFFFFF\",\r\n            primary: \"#5F8AFA\",\r\n            secondary: \"#FFFFFF\",\r\n            textBlack: \"#000000\",\r\n            textWhite: \"#FFFFFF\",\r\n          }\r\n        : {\r\n            standartText: \"#FFFFFF\",\r\n            backgroundColor: \"#333333\",\r\n            primary: \"#5F8AFA\",\r\n            secondary: \"#FFFFFF\",\r\n            textBlack: \"#000000\",\r\n            textWhite: \"#FFFFFF\",\r\n          };\r\n\r\n    return colors;\r\n  },\r\n  fontSizes: {\r\n    h1: \"2.5em\",\r\n    h2: \"2em\",\r\n    h3: \"1.75em\",\r\n    h4: \"1.5em\",\r\n    h5: \"1.25em\",\r\n    h6: \"1em\",\r\n    body: \"1em\",\r\n    b1: \"1em\",\r\n    b2: \"0.9em\",\r\n    b3: \"0.8em\",\r\n  },\r\n  margins: {\r\n    small: \"0.25em\",\r\n    medium: \"0.5em\",\r\n    large: \"1em\",\r\n    xlarge: \"2em\",\r\n  },\r\n  paddings: {\r\n    small: \"0.25em\",\r\n    medium: \"0.5em\",\r\n    large: \"1em\",\r\n    xlarge: \"2em\",\r\n  },\r\n  borderRadius: {\r\n    small: \"4px\",\r\n    medium: \"8px\",\r\n    large: \"16px\",\r\n    circle: \"50%\",\r\n  },\r\n};\r\nconst appThemeService = {\r\n  switchToLightTheme: () =>\r\n    State.update({\r\n      currentAppThemeMode: \"lightMode\",\r\n    }),\r\n  switchToDarkTheme: () =>\r\n    State.update({\r\n      currentAppThemeMode: \"darkMode\",\r\n    }),\r\n  getTheme: () => appTheme,\r\n};\r\n\r\nconst Button = styled.button`\r\n  background: ${appTheme.colors().primary};\r\n  color: ${appTheme.colors().textWhite};\r\n  font-size: ${appTheme.fontSizes.b2};\r\n  margin: ${appTheme.margins.small};\r\n  padding: ${appTheme.paddings.medium};\r\n  width: 100px;\r\n  border: none;\r\n  border-radius: ${appTheme.borderRadius.medium};\r\n  align-self: center;\r\n`;\r\nconst Body = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 800px;\r\n  background-color: ${appTheme.colors().backgroundColor};\r\n`;\r\nconst NavigationBar = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center; \r\n  padding : ${appTheme.paddings.large};\r\n  background-color: ${appTheme.colors().backgroundColor};\r\n  justify-content: center;\r\n`;\r\n\r\nconst ProfileTab = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: ${appTheme.colors().backgroundColor};\r\n  justify-content: center;\r\n  align-items: center; \r\n`;\r\n\r\nconst uiKitComponents = {\r\n  button: Button,\r\n  body: Body,\r\n  navigationBar: NavigationBar,\r\n  profileTab: ProfileTab,\r\n};\r\n\r\nconst routes = {\r\n  moduleA: \"vlmoon.near/widget/BOSModuleA\",\r\n  moduleB: \"vlmoon.near/widget/BOSModuleB\",\r\n  moduleC: \"vlmoon.near/widget/BOSModuleC\",\r\n  moduleD: \"vlmoon.near/widget/BOSModuleD\",\r\n};\r\n\r\nfunction navigateToModule(moduleRoute) {\r\n  State.update({\r\n    currentRoute: moduleRoute,\r\n  });\r\n}\r\n\r\nconst routesNavigator = {\r\n  studentsPage: () => navigateToModule(\"studentsPage\"),\r\n  myTeachersPage: () => navigateToModule(\"myTeachersPage\"),\r\n  myEventsPage: () => navigateToModule(\"myEventsPage\"),\r\n  myTasksPage: () => navigateToModule(\"myTasksPage\"),\r\n};\r\n\r\nfunction getModuleDependencies(moduleRoute) {\r\n  if (moduleRoute === \"studentsPage\") {\r\n    return [\"studentsPage\"];\r\n  } else if (moduleRoute === \"myTeachersPage\") {\r\n    return [\"myTeachersPage\"];\r\n  } else if (moduleRoute === \"myEventsPage\") {\r\n    return [\"myEventsPage\"];\r\n  } else if (moduleRoute === \"myTasksPage\") {\r\n    return [\"myTasksPage\"];\r\n  }\r\n}\r\nconst dependencies = getModuleDependencies(state.currentRoute);\r\n\r\n//Pages\r\nconst pages = {\r\n  studentsPage: (\r\n    <>\r\n      <h1>My Students</h1>\r\n      <h3>For add, input account_ID student(for exemple: exemple.near):</h3>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          marginRight: \"30em\",\r\n          height: \"3em\",\r\n          width: \"29em\",\r\n        }}\r\n      >\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          style={{\r\n            backgroundColor: \"black\",\r\n            color: \"white\",\r\n          }}\r\n          onBlur={(e) => State.update({ addNewStudent: e.target.value })}\r\n        />\r\n        <Button\r\n          onClick={TecherPossibilities.addStudent}\r\n          style={{ backgroundColor: \"green\" }}\r\n        >\r\n          Add\r\n        </Button>\r\n      </div>\r\n      {!state.ifAddStudent && <h3>Some gone wrong. Not add</h3>}\r\n      <h3>Find student by account_ID:</h3>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          marginRight: \"30em\",\r\n          height: \"3em\",\r\n          width: \"29em\",\r\n        }}\r\n      >\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          style={{\r\n            backgroundColor: \"black\",\r\n            color: \"white\",\r\n          }}\r\n          onBlur={(e) => State.update({ idFindStudent: e.target.value })}\r\n        />\r\n        <Button\r\n          style={{ backgroundColor: \"blue\" }}\r\n          onClick={TecherPossibilities.findStudentByID}\r\n        >\r\n          Find\r\n        </Button>\r\n      </div>\r\n      {state.flagForFindStdudentByID && (\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            margin: \"15px\",\r\n            justifyContent: \"space-around\",\r\n          }}\r\n        >\r\n          <div>\r\n            <Widget\r\n              src=\"near/widget/AccountProfile\"\r\n              props={{ accountId: state.idFindStudent }}\r\n            />\r\n          </div>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            style={{\r\n              backgroundColor: \"white\",\r\n              color: \"black\",\r\n              height: \"3em\",\r\n              width: \"11em\",\r\n            }}\r\n            placeholder=\"Input for edit description\"\r\n            onBlur={(e) => State.update({ editDescription: e.target.value })}\r\n          />\r\n          <div>\r\n            <h4>{descriptionForStudent(idFindStudent)}</h4>\r\n          </div>\r\n          <div>\r\n            <Button\r\n              onClick={() => {\r\n                TecherPossibilities.deleteStudent(state.idFindStudent);\r\n              }}\r\n              style={{\r\n                backgroundColor: \"red\",\r\n              }}\r\n            >\r\n              Delete\r\n            </Button>\r\n            <Button\r\n              style={{\r\n                backgroundColor: \"blue\",\r\n              }}\r\n              onClick={() => {\r\n                TecherPossibilities.updateDiscription(state.idFindStudent);\r\n              }}\r\n            >\r\n              Edit\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      )}\r\n      <div\r\n        style={{\r\n          margin: \"15px\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            margin: \"15px\",\r\n            justifyContent: \"space-around\",\r\n          }}\r\n        >\r\n          <div>\r\n            <h4>Column profile</h4>\r\n          </div>\r\n          <div>\r\n            <h4>Column description</h4>\r\n          </div>\r\n          <div>\r\n            <h4>Column for delete & edit</h4>\r\n          </div>\r\n        </div>\r\n        {state.paginatedStudentsArray.map((student) => (\r\n          <div\r\n            key={student}\r\n            style={{\r\n              display: \"flex\",\r\n              margin: \"15px\",\r\n              justifyContent: \"space-around\",\r\n            }}\r\n          >\r\n            <div>\r\n              <Widget\r\n                src=\"near/widget/AccountProfile\"\r\n                props={{ accountId: student }}\r\n              />\r\n            </div>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              style={{\r\n                backgroundColor: \"white\",\r\n                color: \"black\",\r\n                height: \"3em\",\r\n                width: \"11em\",\r\n              }}\r\n              placeholder=\"Input for edit description\"\r\n              onBlur={(e) => State.update({ editDescription: e.target.value })}\r\n            />\r\n            <div>\r\n              <h4>{descriptionForStudent(student)}</h4>\r\n            </div>\r\n            <div>\r\n              <Button\r\n                onClick={() => {\r\n                  TecherPossibilities.deleteStudent(student);\r\n                }}\r\n                style={{\r\n                  backgroundColor: \"red\",\r\n                }}\r\n              >\r\n                Delete\r\n              </Button>\r\n              <Button\r\n                style={{\r\n                  backgroundColor: \"blue\",\r\n                }}\r\n                onClick={() => {\r\n                  TecherPossibilities.updateDiscription(student);\r\n                }}\r\n              >\r\n                Edit\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </>\r\n  ),\r\n  myTeachersPage: (\r\n    <>\r\n      <h1>My Teachers</h1>\r\n    </>\r\n  ),\r\n  myEventsPage: (\r\n    <>\r\n      <h1>My Events</h1>\r\n    </>\r\n  ),\r\n  myTasksPage: (\r\n    <>\r\n      <h1>My Tasks</h1>\r\n    </>\r\n  ),\r\n};\r\n//\r\n\r\nif (!state.profileName && !state.profileDiscription) {\r\n  return (\r\n    <>\r\n      <uiKitComponents.body>\r\n        <h1>Mentor HUB</h1>\r\n        <h2>\r\n          You don't have a profile, if you want to continue, you have to create\r\n          a profile\r\n        </h2>\r\n        <h3>Input your name:</h3>\r\n        <div\r\n          style={{\r\n            marginRight: \"30em\",\r\n          }}\r\n        >\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            style={{\r\n              backgroundColor: \"black\",\r\n              color: \"white\",\r\n            }}\r\n            onBlur={(e) => State.update({ creatProfileName: e.target.value })}\r\n          />\r\n        </div>\r\n        <h2>Hello, {state.creatProfileName}</h2>\r\n        <h3>Input your discription</h3>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          style={{\r\n            backgroundColor: \"black\",\r\n            color: \"white\",\r\n            marginRight: \"100em\",\r\n            paddingsRight: \"100px\",\r\n          }}\r\n          onBlur={(e) =>\r\n            State.update({ creatProfileDiscription: e.target.value })\r\n          }\r\n        />\r\n        <h2>Your discriprional: {state.creatProfileDiscription}</h2>\r\n        <div\r\n          style={{\r\n            display: flex,\r\n            margin: \"0px 10px\",\r\n            alignItems: center,\r\n          }}\r\n        >\r\n          <Button\r\n            style={{\r\n              backgroundColor: \"green\",\r\n            }}\r\n            onClick={TecherPossibilities.initProfile}\r\n          >\r\n            Save change\r\n          </Button>\r\n        </div>\r\n      </uiKitComponents.body>\r\n    </>\r\n  );\r\n}\r\n\r\nif (!state.profileName) {\r\n  return (\r\n    <>\r\n      <uiKitComponents.body>\r\n        <h1>Mentor HUB</h1>\r\n        <h2>\r\n          You don't have a name of profile, if you want to continue, you have to\r\n          create a name.\r\n        </h2>\r\n        <h3>Input your name:</h3>\r\n        <div\r\n          style={{\r\n            marginRight: \"30em\",\r\n          }}\r\n        >\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            style={{\r\n              backgroundColor: \"black\",\r\n              color: \"white\",\r\n            }}\r\n            onBlur={(e) => State.update({ creatProfileName: e.target.value })}\r\n          />\r\n        </div>\r\n        <h2>Hello, {state.creatProfileName}</h2>\r\n        <div\r\n          style={{\r\n            display: flex,\r\n            margin: \"0px 10px\",\r\n            alignItems: center,\r\n          }}\r\n        >\r\n          <Button\r\n            style={{\r\n              backgroundColor: \"green\",\r\n            }}\r\n            onClick={TecherPossibilities.initNameProfile}\r\n          >\r\n            Save change\r\n          </Button>\r\n        </div>\r\n      </uiKitComponents.body>\r\n    </>\r\n  );\r\n}\r\n\r\nif (!state.profileDiscription) {\r\n  return (\r\n    <>\r\n      <uiKitComponents.body>\r\n        <h1>Mentor HUB</h1>\r\n        <h2>\r\n          You don't have a description, if you want to continue, you have to\r\n          create a description\r\n        </h2>\r\n        <h3>Input your discription</h3>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          style={{\r\n            backgroundColor: \"black\",\r\n            color: \"white\",\r\n            marginRight: \"100em\",\r\n            paddingsRight: \"100px\",\r\n          }}\r\n          onBlur={(e) =>\r\n            State.update({ creatProfileDiscription: e.target.value })\r\n          }\r\n        />\r\n        <h2>Your discriprional: {state.creatProfileDiscription}</h2>\r\n        <div\r\n          style={{\r\n            display: flex,\r\n            margin: \"0px 10px\",\r\n            alignItems: center,\r\n          }}\r\n        >\r\n          <Button\r\n            style={{\r\n              backgroundColor: \"green\",\r\n            }}\r\n            onClick={TecherPossibilities.initDiscriptionProfile}\r\n          >\r\n            Save change\r\n          </Button>\r\n        </div>\r\n      </uiKitComponents.body>\r\n    </>\r\n  );\r\n}\r\n\r\nreturn (\r\n  <>\r\n    <uiKitComponents.profileTab>\r\n      <h3>Mentor HUB</h3>\r\n      <h4>Hey, {state.profileName}</h4>\r\n      <h4>Make the world around you the better place</h4>\r\n      <Widget\r\n        src=\"mob.near/widget/ProfileImage\"\r\n        props={{\r\n          accountId,\r\n          style: { width: \"7rem\", height: \"7rem\" },\r\n          className: \"mb-2\",\r\n          imageClassName: \"rounded-circle w-100 h-100 img-thumbnail d-block\",\r\n          thumbnail: false,\r\n        }}\r\n      />\r\n    </uiKitComponents.profileTab>\r\n    <uiKitComponents.button onClick={() => alert(\"Test\")}>\r\n      Test\r\n    </uiKitComponents.button>\r\n\r\n    <uiKitComponents.body>\r\n      <uiKitComponents.navigationBar>\r\n        <uiKitComponents.button onClick={routesNavigator.studentsPage}>\r\n          My Students\r\n        </uiKitComponents.button>\r\n        <uiKitComponents.button onClick={routesNavigator.myTeachersPage}>\r\n          My Teachers\r\n        </uiKitComponents.button>\r\n        <uiKitComponents.button onClick={routesNavigator.myEventsPage}>\r\n          My Events\r\n        </uiKitComponents.button>\r\n        <uiKitComponents.button onClick={routesNavigator.myTasksPage}>\r\n          My Tasks\r\n        </uiKitComponents.button>\r\n      </uiKitComponents.navigationBar>\r\n      {pages[state.currentRoute]}\r\n    </uiKitComponents.body>\r\n  </>\r\n);\r\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/maierr.near/widget/MentorHub_MyCopy", "fact_widget_deployments_id": "5e6cd39279b1cb3cb804f2519bfa20db", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 1}