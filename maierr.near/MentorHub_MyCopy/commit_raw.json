{"tx_hash": "kJFMZ2MnxTjRSDcGeUQG6rV3wEsTNyxLKZBJo6KBMpv", "action_id_social": "FrUZw3HJdzbegEBhxc7xV1zgyuDEhdTLbFndsKjJVimb-0-widget", "block_id": 113620790, "block_timestamp": "2024-02-26T13:21:06.674Z", "signer_id": "maierr.near", "widget_name": "MentorHub_MyCopy", "source_code": "State.init({\n  accountId: \"\",\n  mentorPhoto: \"\",\n  mentorName: \"Mentor Name\",\n  mentorPoints: 0,\n  studentsCounter: 0,\n  students: [],\n  studentRequests: [],\n  currentAppThemeMode: \"lightMode\",\n  currentRoute: \"studentsPage\",\n  profileName: \"\",\n  profileDiscription: \"\",\n  creatProfileName: \"\",\n  creatProfileDiscription: \"\",\n  addNewStudent: \"\",\n  editDescription: \"\",\n  ifAddStudent: true,\n  studentArray: [],\n  arreyWhitIndexForAddStudent: [],\n  heashForDeletnumb: {},\n  flagForFindStdudentByID: false,\n  idFindStudent: \"\",\n  vrifyOurStudent: \"\",\n});\n\nconst TecherPossibilities = {\n  init: () => {\n    const accountId = context.accountId;\n    if (!accountId) {\n      return \"No account ID\";\n    }\n    const profile = Social.getr(`${state.accountId}/profile`);\n    State.update({\n      accountId: accountId,\n      profileName: profile.name,\n      profileDiscription: profile.discription,\n    });\n  },\n  initProfile: () => {\n    Social.set({\n      profile: {\n        name: state.creatProfileName,\n        discription: state.creatProfileDiscription,\n      },\n    });\n  },\n  initNameProfile: () => {\n    Social.set({\n      profile: {\n        name: state.creatProfileName,\n      },\n    });\n  },\n  initDiscriptionProfile: () => {\n    Social.set({\n      profile: {\n        discription: state.creatProfileDiscription,\n      },\n    });\n  },\n  getStudent: (pageNumber, pageSize) => {\n    // \u0420\u0430\u0441\u0441\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u043c \u043d\u0430\u0447\u0430\u043b\u044c\u043d\u044b\u0439 \u0438 \u043a\u043e\u043d\u0435\u0447\u043d\u044b\u0439 \u0438\u043d\u0434\u0435\u043a\u0441\u044b \u0434\u043b\u044f \u043f\u0430\u0433\u0438\u043d\u0430\u0446\u0438\u0438\n    const startIndex = (pageNumber - 1) * pageSize;\n    const endIndex = startIndex + pageSize;\n    let studentArray = [];\n    let arreyWhitIndexForAddStudent = [];\n    let heashForDeletnumb = {};\n\n    for (let i = startIndex; i < endIndex; i++) {\n      const student = Social.get(`maierr.near/mystudents/${i}`);\n      if (student) {\n        studentArray.push(student);\n        heashForDeletnumb[student] = i;\n      } else {\n        arreyWhitIndexForAddStudent.push(i);\n      }\n    }\n\n    State.update({\n      studentArray: studentArray,\n      arreyWhitIndexForAddStudent: arreyWhitIndexForAddStudent,\n      heashForDeletnumb: heashForDeletnumb,\n    });\n  },\n  updateDiscription: (student) => {\n    Near.call([\n      {\n        contractName: \"social.near\",\n        methodName: \"set\",\n        args: {\n          data: {\n            [student]: {\n              profile: {\n                discription: state.editDescription,\n              },\n            },\n          },\n        },\n        deposit: 1,\n        gas: Big(10).pow(12).mul(50),\n      },\n    ]);\n  },\n  deleteStudent: (student) => {\n    const indexForDeleteNumb = state.heashForDeletnumb[student];\n    Social.set({\n      mystudents: {\n        [indexForDeleteNumb]: null,\n      },\n      myStudentsForFind: {\n        [student]: false,\n      },\n    });\n  },\n  addStudent: () => {\n    const newStudent = state.addNewStudent;\n    const ifAlreadyHaveStudent = Social.get(\n      `maierr.near/myStudentsForFind/${newStudent}`\n    );\n    const sliceForVerification = newStudent.slice(\n      newStudent.length - 5,\n      newStudent.length\n    );\n    if (sliceForVerification == \".near\" && ifAlreadyHaveStudent != `true`) {\n      let indexForAddStudent = 0;\n      if (state.arreyWhitIndexForAddStudent.length > 0) {\n        indexForAddStudent = state.arreyWhitIndexForAddStudent[0];\n      } else if (\n        state.studentArray &&\n        state.arreyWhitIndexForAddStudent.length == 0\n      ) {\n        while (state.arreyWhitIndexForAddStudent.length == 0) {\n          const student = Social.get(\n            `maierr.near/mystudents/${indexForAddStudent}`\n          );\n          if (student) {\n            State.update({\n              arreyWhitIndexForAddStudent: student,\n            });\n          }\n          indexForAddStudent++;\n        }\n      } else if (\n        state.studentArray.length == 0 &&\n        !state.arreyWhitIndexForAddStudent.length == 0\n      ) {\n        indexForAddStudent = 0;\n      }\n      Social.set({\n        mystudents: {\n          [indexForAddStudent]: state.addNewStudent,\n        },\n        myStudentsForFind: {\n          [newStudent]: true,\n        },\n      });\n      State.update({\n        ifAddStudent: true,\n      });\n    } else {\n      State.update({\n        ifAddStudent: false,\n      });\n    }\n  },\n  findStudentByID: (idaccound) => {\n    const isOurStudent = Social.get(\n      `maierr.near/myStudentsForFind/${idaccound}`\n    );\n    if (isOurStudent == `true`) {\n      State.update({\n        vrifyOurStudent: idaccound,\n      });\n    } else {\n      State.update({\n        vrifyOurStudent: \"\",\n      });\n    }\n  },\n};\n\nTecherPossibilities.init();\nTecherPossibilities.getStudent(1, 10);\n\nfunction descriptionForStudent(account_id) {\n  const discriprionalIN = Social.getr(`${account_id}/profile`);\n  return discriprionalIN.discription;\n}\n\n//UI Kit Theme\nconst appTheme = {\n  colors: () => {\n    const currentThemeMode = state.currentAppThemeMode;\n    const colors =\n      currentThemeMode === \"lightMode\"\n        ? {\n            standartText: \"#000000\",\n            backgroundColor: \"#FFFFFF\",\n            primary: \"#5F8AFA\",\n            secondary: \"#FFFFFF\",\n            textBlack: \"#000000\",\n            textWhite: \"#FFFFFF\",\n          }\n        : {\n            standartText: \"#FFFFFF\",\n            backgroundColor: \"#333333\",\n            primary: \"#5F8AFA\",\n            secondary: \"#FFFFFF\",\n            textBlack: \"#000000\",\n            textWhite: \"#FFFFFF\",\n          };\n\n    return colors;\n  },\n  fontSizes: {\n    h1: \"2.5em\",\n    h2: \"2em\",\n    h3: \"1.75em\",\n    h4: \"1.5em\",\n    h5: \"1.25em\",\n    h6: \"1em\",\n    body: \"1em\",\n    b1: \"1em\",\n    b2: \"0.9em\",\n    b3: \"0.8em\",\n  },\n  margins: {\n    small: \"0.25em\",\n    medium: \"0.5em\",\n    large: \"1em\",\n    xlarge: \"2em\",\n  },\n  paddings: {\n    small: \"0.25em\",\n    medium: \"0.5em\",\n    large: \"1em\",\n    xlarge: \"2em\",\n  },\n  borderRadius: {\n    small: \"4px\",\n    medium: \"8px\",\n    large: \"16px\",\n    circle: \"50%\",\n  },\n};\nconst appThemeService = {\n  switchToLightTheme: () =>\n    State.update({\n      currentAppThemeMode: \"lightMode\",\n    }),\n  switchToDarkTheme: () =>\n    State.update({\n      currentAppThemeMode: \"darkMode\",\n    }),\n  getTheme: () => appTheme,\n};\n\nconst Button = styled.button`\n  background: ${appTheme.colors().primary};\n  color: ${appTheme.colors().textWhite};\n  font-size: ${appTheme.fontSizes.b2};\n  margin: ${appTheme.margins.small};\n  padding: ${appTheme.paddings.medium};\n  width: 100px;\n  border: none;\n  border-radius: ${appTheme.borderRadius.medium};\n  align-self: center;\n`;\nconst Body = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 800px;\n  background-color: ${appTheme.colors().backgroundColor};\n`;\nconst NavigationBar = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center; \n  padding : ${appTheme.paddings.large};\n  background-color: ${appTheme.colors().backgroundColor};\n  justify-content: center;\n`;\n\nconst ProfileTab = styled.div`\n  display: flex;\n  flex-direction: column;\n  background-color: ${appTheme.colors().backgroundColor};\n  justify-content: center;\n  align-items: center; \n`;\n\nconst uiKitComponents = {\n  button: Button,\n  body: Body,\n  navigationBar: NavigationBar,\n  profileTab: ProfileTab,\n};\n\nconst routes = {\n  moduleA: \"vlmoon.near/widget/BOSModuleA\",\n  moduleB: \"vlmoon.near/widget/BOSModuleB\",\n  moduleC: \"vlmoon.near/widget/BOSModuleC\",\n  moduleD: \"vlmoon.near/widget/BOSModuleD\",\n};\n\nfunction navigateToModule(moduleRoute) {\n  State.update({\n    currentRoute: moduleRoute,\n  });\n}\n\nconst routesNavigator = {\n  studentsPage: () => navigateToModule(\"studentsPage\"),\n  myTeachersPage: () => navigateToModule(\"myTeachersPage\"),\n  myEventsPage: () => navigateToModule(\"myEventsPage\"),\n  myTasksPage: () => navigateToModule(\"myTasksPage\"),\n};\n\nfunction getModuleDependencies(moduleRoute) {\n  if (moduleRoute === \"studentsPage\") {\n    return [\"studentsPage\"];\n  } else if (moduleRoute === \"myTeachersPage\") {\n    return [\"myTeachersPage\"];\n  } else if (moduleRoute === \"myEventsPage\") {\n    return [\"myEventsPage\"];\n  } else if (moduleRoute === \"myTasksPage\") {\n    return [\"myTasksPage\"];\n  }\n}\nconst dependencies = getModuleDependencies(state.currentRoute);\n\n//Pages\nconst pages = {\n  studentsPage: (\n    <>\n      <h1>My Students</h1>\n      <h3>For add, input account_ID student(for exemple: exemple.near):</h3>\n      <div\n        style={{\n          display: \"flex\",\n          marginRight: \"30em\",\n          height: \"3em\",\n          width: \"29em\",\n        }}\n      >\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          style={{\n            backgroundColor: \"black\",\n            color: \"white\",\n          }}\n          onBlur={(e) => State.update({ addNewStudent: e.target.value })}\n        />\n        <Button\n          onClick={TecherPossibilities.addStudent}\n          style={{ backgroundColor: \"green\" }}\n        >\n          Add\n        </Button>\n      </div>\n      {!state.ifAddStudent && <h3>Some gone wrong. Not add</h3>}\n      <h3>Find student by account_ID:</h3>\n      <div\n        style={{\n          display: \"flex\",\n          marginRight: \"30em\",\n          height: \"3em\",\n          width: \"29em\",\n        }}\n      >\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          style={{\n            backgroundColor: \"black\",\n            color: \"white\",\n          }}\n          onBlur={(e) => State.update({ idFindStudent: e.target.value })}\n        />\n        <Button\n          style={{ backgroundColor: \"blue\" }}\n          onClick={() => {\n            TecherPossibilities.findStudentByID(state.idFindStudent);\n          }}\n        >\n          Find\n        </Button>\n      </div>\n      {state.vrifyOurStudent && (\n        <div\n          style={{\n            display: \"flex\",\n            margin: \"15px\",\n            justifyContent: \"space-around\",\n          }}\n        >\n          <div>\n            <Widget\n              src=\"near/widget/AccountProfile\"\n              props={{ accountId: state.vrifyOurStudent }}\n            />\n          </div>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            style={{\n              backgroundColor: \"white\",\n              color: \"black\",\n              height: \"3em\",\n              width: \"11em\",\n            }}\n            placeholder=\"Input for edit description\"\n            onBlur={(e) => State.update({ editDescription: e.target.value })}\n          />\n          <div>\n            <h4>{descriptionForStudent(state.vrifyOurStudent)}</h4>\n          </div>\n          <div>\n            <Button\n              onClick={() => {\n                TecherPossibilities.deleteStudent(state.vrifyOurStudent);\n              }}\n              style={{\n                backgroundColor: \"red\",\n              }}\n            >\n              Delete\n            </Button>\n            <Button\n              style={{\n                backgroundColor: \"blue\",\n              }}\n              onClick={() => {\n                TecherPossibilities.updateDiscription(state.vrifyOurStudent);\n              }}\n            >\n              Edit\n            </Button>\n          </div>\n        </div>\n      )}\n      <div\n        style={{\n          margin: \"15px\",\n        }}\n      >\n        <div\n          style={{\n            display: \"flex\",\n            margin: \"15px\",\n            justifyContent: \"space-around\",\n          }}\n        >\n          <div>\n            <h4>Column profile</h4>\n          </div>\n          <div>\n            <h4>Column description</h4>\n          </div>\n          <div>\n            <h4>Column for delete & edit</h4>\n          </div>\n        </div>\n        {state.studentArray.map((student) => (\n          <div\n            key={student}\n            style={{\n              display: \"flex\",\n              margin: \"15px\",\n              justifyContent: \"space-around\",\n            }}\n          >\n            <div>\n              <Widget\n                src=\"near/widget/AccountProfile\"\n                props={{ accountId: student }}\n              />\n            </div>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              style={{\n                backgroundColor: \"white\",\n                color: \"black\",\n                height: \"3em\",\n                width: \"11em\",\n              }}\n              placeholder=\"Input for edit description\"\n              onBlur={(e) => State.update({ editDescription: e.target.value })}\n            />\n            <div>\n              <h4>{descriptionForStudent(student)}</h4>\n            </div>\n            <div>\n              <Button\n                onClick={() => {\n                  TecherPossibilities.deleteStudent(student);\n                }}\n                style={{\n                  backgroundColor: \"red\",\n                }}\n              >\n                Delete\n              </Button>\n              <Button\n                style={{\n                  backgroundColor: \"blue\",\n                }}\n                onClick={() => {\n                  TecherPossibilities.updateDiscription(student);\n                }}\n              >\n                Edit\n              </Button>\n            </div>\n          </div>\n        ))}\n      </div>\n    </>\n  ),\n  myTeachersPage: (\n    <>\n      <h1>My Teachers</h1>\n    </>\n  ),\n  myEventsPage: (\n    <>\n      <h1>My Events</h1>\n    </>\n  ),\n  myTasksPage: (\n    <>\n      <h1>My Tasks</h1>\n    </>\n  ),\n};\n//\n\nif (!state.profileName && !state.profileDiscription) {\n  return (\n    <>\n      <uiKitComponents.body>\n        <h1>Mentor HUB</h1>\n        <h2>\n          You don't have a profile, if you want to continue, you have to create\n          a profile\n        </h2>\n        <h3>Input your name:</h3>\n        <div\n          style={{\n            marginRight: \"30em\",\n          }}\n        >\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            style={{\n              backgroundColor: \"black\",\n              color: \"white\",\n            }}\n            onBlur={(e) => State.update({ creatProfileName: e.target.value })}\n          />\n        </div>\n        <h2>Hello, {state.creatProfileName}</h2>\n        <h3>Input your discription</h3>\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          style={{\n            backgroundColor: \"black\",\n            color: \"white\",\n            marginRight: \"100em\",\n            paddingsRight: \"100px\",\n          }}\n          onBlur={(e) =>\n            State.update({ creatProfileDiscription: e.target.value })\n          }\n        />\n        <h2>Your discriprional: {state.creatProfileDiscription}</h2>\n        <div\n          style={{\n            display: flex,\n            margin: \"0px 10px\",\n            alignItems: center,\n          }}\n        >\n          <Button\n            style={{\n              backgroundColor: \"green\",\n            }}\n            onClick={TecherPossibilities.initProfile}\n          >\n            Save change\n          </Button>\n        </div>\n      </uiKitComponents.body>\n    </>\n  );\n}\n\nif (!state.profileName) {\n  return (\n    <>\n      <uiKitComponents.body>\n        <h1>Mentor HUB</h1>\n        <h2>\n          You don't have a name of profile, if you want to continue, you have to\n          create a name.\n        </h2>\n        <h3>Input your name:</h3>\n        <div\n          style={{\n            marginRight: \"30em\",\n          }}\n        >\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            style={{\n              backgroundColor: \"black\",\n              color: \"white\",\n            }}\n            onBlur={(e) => State.update({ creatProfileName: e.target.value })}\n          />\n        </div>\n        <h2>Hello, {state.creatProfileName}</h2>\n        <div\n          style={{\n            display: flex,\n            margin: \"0px 10px\",\n            alignItems: center,\n          }}\n        >\n          <Button\n            style={{\n              backgroundColor: \"green\",\n            }}\n            onClick={TecherPossibilities.initNameProfile}\n          >\n            Save change\n          </Button>\n        </div>\n      </uiKitComponents.body>\n    </>\n  );\n}\n\nif (!state.profileDiscription) {\n  return (\n    <>\n      <uiKitComponents.body>\n        <h1>Mentor HUB</h1>\n        <h2>\n          You don't have a description, if you want to continue, you have to\n          create a description\n        </h2>\n        <h3>Input your discription</h3>\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          style={{\n            backgroundColor: \"black\",\n            color: \"white\",\n            marginRight: \"100em\",\n            paddingsRight: \"100px\",\n          }}\n          onBlur={(e) =>\n            State.update({ creatProfileDiscription: e.target.value })\n          }\n        />\n        <h2>Your discriprional: {state.creatProfileDiscription}</h2>\n        <div\n          style={{\n            display: flex,\n            margin: \"0px 10px\",\n            alignItems: center,\n          }}\n        >\n          <Button\n            style={{\n              backgroundColor: \"green\",\n            }}\n            onClick={TecherPossibilities.initDiscriptionProfile}\n          >\n            Save change\n          </Button>\n        </div>\n      </uiKitComponents.body>\n    </>\n  );\n}\n\nreturn (\n  <>\n    <uiKitComponents.profileTab>\n      <h3>Mentor HUB</h3>\n      <h4>Hey, {state.profileName}</h4>\n      <h4>Make the world around you the better place</h4>\n      <Widget\n        src=\"mob.near/widget/ProfileImage\"\n        props={{\n          accountId,\n          style: { width: \"7rem\", height: \"7rem\" },\n          className: \"mb-2\",\n          imageClassName: \"rounded-circle w-100 h-100 img-thumbnail d-block\",\n          thumbnail: false,\n        }}\n      />\n    </uiKitComponents.profileTab>\n    <uiKitComponents.button onClick={() => alert(\"Test\")}>\n      Test\n    </uiKitComponents.button>\n\n    <uiKitComponents.body>\n      <uiKitComponents.navigationBar>\n        <uiKitComponents.button onClick={routesNavigator.studentsPage}>\n          My Students\n        </uiKitComponents.button>\n        <uiKitComponents.button onClick={routesNavigator.myTeachersPage}>\n          My Teachers\n        </uiKitComponents.button>\n        <uiKitComponents.button onClick={routesNavigator.myEventsPage}>\n          My Events\n        </uiKitComponents.button>\n        <uiKitComponents.button onClick={routesNavigator.myTasksPage}>\n          My Tasks\n        </uiKitComponents.button>\n      </uiKitComponents.navigationBar>\n      {pages[state.currentRoute]}\n    </uiKitComponents.body>\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/maierr.near/widget/MentorHub_MyCopy", "fact_widget_deployments_id": "1fc4aa8ddec0d3400154db5fc1724d6e", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 2}