{"tx_hash": "ErsdKQkXnK5QijzCDfNwBRHyRvDpvkNMdE5mEgn2Jgyz", "action_id_social": "4MuAB4xaidaMAMNBDKkw1L2KChoMTgCTyvrqQxzzLNhb-0-widget", "block_id": 114579320, "block_timestamp": "2024-03-12T17:43:27.052Z", "signer_id": "dawnkelly.near", "widget_name": "build.planTemplate", "source_code": "const accountId = context.accountId;\n\nconst [plan, setPlan] = useState(() => {\n  const initialData = Social.getr(`${accountId}/build/plan`) ?? {\n    metadata: {\n      planName: \"\",\n      goals: \"\",\n      timeline: {\n        startDate: \"\",\n        endDate: \"\",\n      },\n      teamMembers: {\n        builderName: \"\",\n        builderRole: \"\",\n      },\n      tasks: {\n        id: \"\",\n        assignedTo: \"\",\n        estimatedEffort: \"\",\n        taskStatus: \"\",\n      },\n      dependencies: {\n        depName: \"\",\n        depSource: \"\",\n        depNotes: \"\",\n      },\n      milestones: {\n        targetDate: \"\",\n        targetOutcome: \"\",\n        isMet: \"\",\n      },\n      collaborations: {\n        meetingDetails: \"\",\n        meetingLocation: \"\",\n        howToJoin: \"\",\n      },\n      reviewMeeting: {\n        datePlanned: \"\",\n        dateHeld: \"\",\n        meetingNotes: \"\",\n      },\n      retroMeeting: {\n        datePlanned: \"\",\n        dateHeld: \"\",\n        meetingNotes: \"\",\n      },\n    },\n  };\n  return initialData;\n});\n\nconst handlePlanNameChange = (e) => {\n  const newPlanName = e.target.value;\n  setPlan((prevPlan) => ({\n    ...prevPlan,\n    metadata: { ...prevPlan.metadata, planName: newPlanName },\n  }));\n};\n\nconst handleGoalsChange = (e) => {\n  const newGoals = e.target.value;\n  setPlan((prevPlan) => ({\n    ...prevPlan,\n    metadata: { ...prevPlan.metadata, goals: newGoals },\n  }));\n};\n\nconst handleStartDateChange = (e) => {\n  const newStartDate = e.target.value;\n  setPlan((prevPlan) => ({\n    ...prevPlan,\n    metadata: { ...prevPlan.metadata, startDate: newStartDate },\n  }));\n};\n\nconst handleEndDateChange = (e) => {\n  const newEndDate = e.target.value;\n  setPlan((prevPlan) => ({\n    ...prevPlan,\n    metadata: { ...prevPlan.metadata, endDate: newEndDate },\n  }));\n};\n\nconst handleSave = () => {\n  Social.set({\n    build: { plan },\n  });\n};\n\nreturn (\n  <div>\n    <div className=\"m-2\">\n      <h2>Create/Update A Plan</h2>\n      <div className=\"mb-3 p-1\">\n        <label for=\"planName\">Name:</label>\n        <input\n          id=\"planName\"\n          type=\"text\"\n          placeholder=\"What is the plan or project's name?\"\n          value={plan.metadata.planName}\n          onChange={handlePlanNameChange}\n        />\n        <div className=\"mb-3 p-1\">\n          <label for=\"goals\">Goals:</label>\n          <textarea\n            id=\"goals\"\n            name=\"goals\"\n            resize=\"none\"\n            rows=\"4\"\n            cols=\"80\"\n            placeholder=\"Define project goals here. Remember to include outcomes, timelines, and criteria for measuring success.\"\n            value={plan.metadata.goals}\n            onChange={handleGoalsChange}\n          />\n        </div>\n        <div className=\"mb-3 p-1\">\n          <h3>Timeline:</h3>\n          <label>Start date:</label>\n          <input\n            id=\"startDate\"\n            name=\"startDate\"\n            type=\"date\"\n            min=\"2024-03-12\"\n            value={plan.metadata.timeline.startDate}\n            onChange={handleStartDateChange}\n          />\n          <label>End date:</label>\n          <input\n            id=\"endDate\"\n            name=\"endDate\"\n            type=\"date\"\n            min=\"2024-03-12\"\n            value={plan.metadata.timeline.endDate}\n            onChange={handleEndDateChange}\n          />\n        </div>\n        <div>\n          Team Members and Roles Two fields with \"add another\" + type button\n        </div>\n        <div>\n          <h3>Project Tasks</h3>\n          <p>task id</p>\n          <p>assigned</p>\n          <p>estimated effort</p>\n          <p>status</p>\n        </div>\n        <div>\n          <h3>Dependencies</h3>\n        </div>\n        <div>\n          <h3>Milestones</h3>\n        </div>\n        <div>\n          <h3>Open collaborations</h3>\n        </div>\n        <div>\n          <h4>Review Meeting</h4>\n          <p>date scheduled</p>\n          <p>date held</p>\n          <p>notes</p>\n          //Objectives: evaluate what was completed, what wasn't, and why.\n        </div>\n        <div>\n          <h4>Retrospective Meeting</h4>\n          <p>date scheduled</p>\n          <p>date held</p>\n          <p>notes</p>\n          //Objectives: reflect on the sprint process, what went well, what\n          didn\u2019t, and how processes could be improved.\n        </div>\n        <div className=\"m-3\">\n          <button\n            className=\"btn btn-outline-success\"\n            disabled={!context.accountId}\n            onClick={handleSave}\n          >\n            Save\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/dawnkelly.near/widget/build.planTemplate", "fact_widget_deployments_id": "06013d758d8ff3f842e1eaf1d98c089d", "inserted_timestamp": "2024-03-12T19:25:46.950Z", "modified_timestamp": "2024-03-12T19:25:46.950Z", "__row_index": 4}