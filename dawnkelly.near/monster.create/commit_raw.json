{"tx_hash": "GNUFtTou98ysw6J7zcApHcqgXr8KbvtwMNm6Fobpj9tZ", "action_id_social": "FTjb25MXLz7SJsQYfZyuDLhYtXa34yDRLgsBMGqq2fyU-0-widget", "block_id": 114347150, "block_timestamp": "2024-03-08T19:31:19.607Z", "signer_id": "dawnkelly.near", "widget_name": "monster.create", "source_code": "const accountId = context.accountId;\n\nconst [monster, setMonster] = useState(() => {\n  const initialData = Social.getr(`${accountId}/game/monster`) ?? {\n    metadata: {\n      name: \"\",\n      alignment: \"\",\n      type: \"\",\n      image: {},\n    },\n  };\n  return initialData;\n});\n\nconst handleNameChange = (e) => {\n  const newName = e.target.value;\n  setMonster((prevMonster) => ({\n    ...prevMonster,\n    metadata: { ...prevMonster.metadata, name: newName },\n  }));\n};\n\nconst maxPoints = 50;\nconst attack = parseInt(monster.metadata.attack) || 0;\nconst defense = parseInt(monster.metadata.defense) || 0;\nconst strength = parseInt(monster.metadata.strength) || 0;\nconst courage = parseInt(monster.metadata.courage) || 0;\nconst magic = parseInt(monster.metadata.magic) || 0;\n\nconst totalPoints = attack + defense + strength + courage + magic;\n\nconst handleImageChange = (newImage) => {\n  setMonster((prevMonster) => ({\n    ...prevMonster,\n    metadata: { ...prevMonster.metadata, image: newImage },\n  }));\n};\n\nconst handleDescriptionChange = (e) => {\n  const newDescription = e.target.value;\n  setMonster((prevMonster) => ({\n    ...prevMonster,\n    metadata: { ...prevMonster.metadata, description: newDescription },\n  }));\n};\n\nconst handleAlignmentChange = (e) => {\n  const newAlignment = e.target.value;\n  setMonster((prevMonster) => ({\n    ...prevMonster,\n    metadata: { ...prevMonster.metadata, alignment: newAlignment },\n  }));\n};\n\nconst handleTypeChange = (e) => {\n  const newType = e.target.value;\n  setMonster((prevMonster) => ({\n    ...prevMonster,\n    metadata: { ...prevMonster.metadata, type: newType },\n  }));\n};\n\nconst handleSizeChange = (e) => {\n  const newSize = e.target.value;\n  setMonster((prevMonster) => ({\n    ...prevMonster,\n    metadata: { ...prevMonster.metadata, size: newSize },\n  }));\n};\n\nconst handleChallengeChange = (e) => {\n  const newChallenge = e.target.value;\n  setMonster((prevMonster) => ({\n    ...prevMonster,\n    metadata: { ...prevMonster.metadata, challenge: newChallenge },\n  }));\n};\n\nconst handleWeaknessChange = (e) => {\n  const newWeakness = e.target.value;\n  setMonster((prevMonster) => ({\n    ...prevMonster,\n    metadata: { ...prevMonster.metadata, weakness: newWeakness },\n  }));\n};\n\nconst handleDefaultWeaponChange = (e) => {\n  const newDefaultWeapon = e.target.value;\n  setMonster((prevMonster) => ({\n    ...prevMonster,\n    metadata: { ...prevMonster.metadata, defaultWeapon: newDefaultWeapon },\n  }));\n};\n\nconst handleAttackChange = (e) => {\n  const newAttack = e.target.value;\n  setMonster((prevMonster) => ({\n    ...prevMonster,\n    metadata: { ...prevMonster.metadata, attack: newAttack },\n  }));\n};\n\nconst handleDefenseChange = (e) => {\n  const newDefense = e.target.value;\n  setMonster((prevMonster) => ({\n    ...prevMonster,\n    metadata: { ...prevMonster.metadata, defense: newDefense },\n  }));\n};\n\nconst handleStrengthChange = (e) => {\n  const newStrength = e.target.value;\n  setMonster((prevMonster) => ({\n    ...prevMonster,\n    metadata: { ...prevMonster.metadata, strength: newStrength },\n  }));\n};\n\nconst handleCourageChange = (e) => {\n  const newCourage = e.target.value;\n  setMonster((prevMonster) => ({\n    ...prevMonster,\n    metadata: { ...prevMonster.metadata, courage: newCourage },\n  }));\n};\n\nconst handleMagicChange = (e) => {\n  const newMagic = e.target.value;\n  setMonster((prevMonster) => ({\n    ...prevMonster,\n    metadata: { ...prevMonster.metadata, magic: newMagic },\n  }));\n};\n\nconst isValidPoints = totalPoints <= maxPoints;\n\nconst handleSave = () => {\n  Social.set({\n    game: { monster },\n  });\n};\n\nreturn (\n  <div>\n    <div className=\"m-2\">\n      <h4>Create A Monster</h4>\n      <div className=\"mb-3 p-1\">\n        <label for=\"name\">Name:</label>\n        <input\n          id=\"name\"\n          type=\"text\"\n          placeholder=\"What is the monster's name?\"\n          value={monster.metadata.name}\n          onChange={handleNameChange}\n        />\n      </div>\n      <h5 className=\"mb-2\">Monster Image</h5>\n      <div className=\"p-1\">\n        <Widget\n          src=\"mob.near/widget/ImageEditorTabs\"\n          props={{\n            image: monster.metadata.image,\n            onChange: handleImageChange,\n          }}\n        />\n      </div>\n      <div className=\"mb-3 p-1\">\n        <label for=\"description\">Description:</label>\n        <input\n          id=\"description\"\n          type=\"textarea\"\n          rows=\"4\"\n          cols=\"80\"\n          max-length=\"1200\"\n          placeholder=\"What is the monster's description?\"\n          value={monster.metadata.description}\n          onChange={handleDescriptionChange}\n        />\n      </div>\n      <div className=\"mb-3 p-1\">\n        <span>Hold Control or Command to select more than one:</span>\n        <br></br>\n        <label for=\"alignment\">Alignment:</label>\n        <select\n          name=\"alignment\"\n          id=\"alignment\"\n          multiple\n          value={monster.metadata.alignment}\n          onChange={handleAlignmentChange}\n        >\n          <option value=\"good\">Good</option>\n          <option value=\"neutral\">Nuetral</option>\n          <option value=\"evil\">Evil</option>\n          <option value=\"lawful\">Lawful</option>\n          <option value=\"chaotic\">Chaotic</option>\n          <option value=\"any\">Any</option>\n          <option value=\"unaligned\">Unaligned</option>\n        </select>\n      </div>\n      <div className=\"mb-3 p-1\">\n        <span>Hold Control or Command to select more than one:</span>\n        <br></br>\n        <label for=\"type\">Type:</label>\n        <select\n          name=\"type\"\n          id=\"type\"\n          multiple\n          value={monster.metadata.type}\n          onChange={handleTypeChange}\n        >\n          <option value=\"abberation\">Abberation</option>\n\n          <option value=\"beast\">Beast</option>\n          <option value=\"celestial\">Celestial</option>\n          <option value=\"dragon\">Dragon</option>\n          <option vlaue=\"elemental\">Elemental</option>\n          <option value=\"fey\">Fey</option>\n          <option value=\"fiend\">Fiend</option>\n          <option value=\"giant\">Giant</option>\n          <option value=\"humanoid\">Humanoid</option>\n          <option value=\"monstrosity\">Monstrosity</option>\n          <option value=\"ooze\">Ooze</option>\n          <option value=\"plant\">Plant</option>\n          <option value=\"undead\">Undead</option>\n        </select>\n      </div>\n      <div className=\"mb-3 p-1\">\n        <label for=\"size\">Size:</label>\n        <select\n          name=\"size\"\n          id=\"size\"\n          value={monster.metadata.size}\n          onChange={handleSizeChange}\n        >\n          <option value=\"tiny\">Tiny</option>\n          <option value=\"small\">Small</option>\n          <option value=\"medium\">Medium</option>\n          <option value=\"large\">Large</option>\n          <option value=\"huge\">Huge</option>\n          <option value=\"gargantuan\">Gargantuan</option>\n        </select>\n      </div>\n      <div className=\"mb-3 p-1\">\n        <label for=\"challenge\">Challenge:</label>\n        <input\n          id=\"challenge\"\n          type=\"number\"\n          min=\"0\"\n          max=\"30\"\n          placeholder=\"What is the monster's challenge level?\"\n          value={monster.metadata.challenge}\n          onChange={handleChallengeChange}\n        />\n      </div>\n      <div className=\"mb-3 p-1\">\n        <label for=\"weakness\">Weakness:</label>\n        <input\n          id=\"weakness\"\n          type=\"text\"\n          placeholder=\"What is your character's weakness?\"\n          value={monster.metadata.weakness}\n          onChange={handleWeaknessChange}\n        />\n      </div>\n    </div>\n    <div className=\"mb-3 p-1\">\n      <label for=\"defaultweapon\">Default Weapon:</label>\n      <select\n        name=\"defaultweapon\"\n        id=\"defaultweapon\"\n        value={monster.metadata.defaultweapon}\n        onChange={handleDefaultWeaponChange}\n      >\n        <option value=\"bladeRadiance\">Blade of Radiance</option>\n        <option value=\"moonShadowBow\">Moon Shadow Bow</option>\n        <option value=\"thunderForgeHammer\">Thunderforge War Hammer</option>\n        <option value=\"celestialStaff\">Celestial Staff</option>\n        <option value=\"shadowScepter\">Shadow Scepter</option>\n        <option value=\"obsidianCleaver\">Obsidian Cleaver</option>\n        <option vlaue=\"graspingGauntlets\">Grasping Gauntlents</option>\n        <option value=\"voidDagger\">Void Dagger</option>\n      </select>\n    </div>\n    <div className=\"m-2\">\n      <h4>Create Character Stats</h4>\n      <h6>\n        You have up to 50 points to assign to your character stats. For optimal\n        playing experience, we suggest no more than 20 points be assigned to a\n        single category.\n      </h6>\n      <div className=\"mb-3 p-1\">\n        <label for=\"attack\">Attack:</label>\n        <input\n          id=\"attack\"\n          type=\"number\"\n          name=\"attack\"\n          min=\"0\"\n          max=\"20\"\n          placeholder=\"What is your character's attack level? (0-20)\"\n          value={monster.metadata.attack}\n          onChange={handleAttackChange}\n        />\n        <div className=\"mb-3 p-1\">\n          <label for=\"defense\">Defense:</label>\n          <input\n            id=\"defense\"\n            type=\"number\"\n            name=\"defense\"\n            min=\"0\"\n            max=\"20\"\n            placeholder=\"What is your character's defense level? (0-20)\"\n            value={monster.metadata.defense}\n            onChange={handleDefenseChange}\n          />\n        </div>\n        <div className=\"mb-3 p-1\">\n          <label for=\"strength\">Strength:</label>\n          <input\n            id=\"strength\"\n            type=\"number\"\n            name=\"strength\"\n            min=\"0\"\n            max=\"20\"\n            placeholder=\"What is your character's strength level? (0-20)\"\n            value={monster.metadata.strength}\n            onChange={handleStrengthChange}\n          />\n        </div>\n        <div className=\"mb-3 p-1\">\n          <label for=\"courage\">Courage:</label>\n          <input\n            id=\"courage\"\n            type=\"number\"\n            name=\"courage\"\n            min=\"0\"\n            max=\"20\"\n            placeholder=\"What is your character's courage level? (0-20)\"\n            value={monster.metadata.courage}\n            onChange={handleCourageChange}\n          />\n        </div>\n        <div className=\"mb-3 p-1\">\n          <label for=\"magic\">Magic:</label>\n          <input\n            id=\"magic\"\n            type=\"number\"\n            name=\"magic\"\n            min=\"0\"\n            max=\"20\"\n            placeholder=\"What is your character's magic level? (0-20)\"\n            value={monster.metadata.magic}\n            onChange={handleMagicChange}\n          />\n        </div>\n      </div>\n      <div className=\"m-3\">\n        <button\n          className=\"btn btn-outline-success\"\n          disabled={!context.accountId || !isValidPoints}\n          onClick={handleSave}\n        >\n          Save\n        </button>\n      </div>\n      <hr />\n      <div className=\"m-3\">\n        <h5 className=\"mb-2\">Preview</h5>\n        <Widget\n          src=\"dawnkelly.near/widget/monster.inline\"\n          props={{\n            accountId,\n            monster,\n          }}\n        />\n      </div>\n    </div>\n  </div>\n);\n", "metadata": {"fork_of": "dawnkelly.near/widget/player.create@113845585"}, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/dawnkelly.near/widget/monster.create", "fact_widget_deployments_id": "9d11f1275c02246b64e5923221472fde", "inserted_timestamp": "2024-03-08T20:26:28.250Z", "modified_timestamp": "2024-03-08T21:25:40.890Z", "__row_index": 4}