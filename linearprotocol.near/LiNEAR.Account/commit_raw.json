{"tx_hash": "AvG1nEE3XdaExTx1Rba2g88CzkjhAktdKr86wUKecPHB", "action_id_social": "14cqxVQ4yBVpXELoY1KyHYLteizBX5NVtBg2rLACTSNu-0-widget", "block_id": 91444012, "block_timestamp": "2023-05-09T08:58:14.844Z", "signer_id": "linearprotocol.near", "widget_name": "LiNEAR.Account", "source_code": "// MIT License: https://github.com/linear-protocol/linear-bos-components/blob/main/LICENSE\n\nconst accountId = props.accountId || context.accountId;\nconst ONE_MICRO_NEAR = \"1000000000000000000\";\nconst YOCTO_NEAR = \"1000000000000000000000000\";\nconst NEAR_DECIMALS = 24;\nconst BIG_ROUND_DOWN = 0;\n\nconst MyAccountTitle = styled.h1`\n  font-size: 40px;\n  font-weight: bold;\n  margin-bottom: 40px;\n`;\n\nconst MyAccountContent = styled.div`\n  width: 100%;\n  max-width: 540px;\n`;\n\nconst MyAccountCardWrapper = styled.div`\n  border-radius: 15px;\n  background: #12123f;\n\n  padding: 24px 20px;\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst MyAccountCardGroupWrapper = styled.div`\n  border-radius: 15px;\n  background: #12123f;\n\n  padding: 24px 20px;\n  width: 100%;\n`;\n\nconst TokenValue = styled.div`\n  font-size: 22px;\n  font-weight: bold;\n  display: flex;\n  align-items: center;\n  img {\n    margin-left: 8px;\n  }\n`;\n\nconst Main = styled.div`\n  position: relative;\n  color: white;\n  width: 100%;\n  height: 100vh;\n  background: #09071f;\n  padding: 20px;\n\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n`;\n\nconst GrayContent = styled.div`\n  color: #939395;\n  font-size: 14px;\n`;\n\nconst RewardsFinishedTime = styled.div`\n  font-size: 12px;\n  div {\n    margin-top: 10px;\n  }\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: flex-end;\n`;\n\nconst NearIcon = () => (\n  <img\n    src=\"https://ipfs.near.social/ipfs/bafkreid5xjykpqdvinmj432ldrkbjisrp3m4n25n4xefd32eml674ypqly\"\n    width={20}\n    height={20}\n    alt=\"NEAR Icon\"\n  />\n);\n\nconst LiNEARIcon = () => (\n  <img\n    src=\"https://ipfs.near.social/ipfs/bafkreie2nqrjdjka3ckf4doocsrip5hwqrxh37jzwul2nyzeg3badfl2pm\"\n    width={20}\n    height={20}\n    alt=\"LiNEAR Icon\"\n  />\n);\n\nconst HorizontalLine = () => (\n  <hr\n    style={{\n      width: \"100%\",\n      background: \"black\",\n      border: \"0\",\n      height: \"1px\",\n      borderRadius: \"9999px\",\n    }}\n  />\n);\n\nconst {\n  config,\n  nearBalance,\n  linearBalance,\n  unstakeInfo,\n  updatePage,\n  updateTabName,\n  updateAccountInfo,\n} = props;\nif (!config) {\n  return \"Component cannot be loaded. Missing `config` props\";\n}\n\nState.init({\n  data: {},\n});\n\nfunction onLoad(data) {\n  State.update({ data });\n}\n\nfunction isValid(a) {\n  if (!a) return false;\n  if (isNaN(Number(a))) return false;\n  if (a === \"\") return false;\n  return true;\n}\n\nfunction formatAmount(a) {\n  return isValid(a)\n    ? Number(a).toLocaleString(undefined, {\n        minimumFractionDigits: 5,\n        maximumFractionDigits: 5,\n      })\n    : a;\n}\n\nfunction formatDate(timestamp) {\n  const d = new Date(timestamp);\n  return [\n    d.getFullYear(),\n    (\"0\" + (d.getMonth() + 1)).slice(-2),\n    (\"0\" + d.getDate()).slice(-2),\n  ].join(\"/\");\n}\n\nfunction formatDateTime(timestamp) {\n  const d = new Date(timestamp);\n  const time = [\n    (\"0\" + d.getHours()).slice(-2),\n    (\"0\" + d.getMinutes()).slice(-2),\n    (\"0\" + d.getSeconds()).slice(-2),\n  ].join(\":\");\n  return formatDate(timestamp) + \" \" + time;\n}\n\nconst data = (accountId && state.data) || {};\nconst stakingRewards = data.stakingRewards\n  ? formatAmount(\n      Math.max(\n        Big(data.stakingRewards, 0).div(Big(10).pow(NEAR_DECIMALS)).toFixed(5),\n        0\n      )\n    )\n  : \"-\";\nconst firstStakingTime = data.firstStakingTime\n  ? formatDate(data.firstStakingTime)\n  : undefined;\n\nconst formattedLinearBalance =\n  !linearBalance || linearBalance === \"-\"\n    ? \"-\"\n    : Big(linearBalance).toFixed(5, BIG_ROUND_DOWN);\n\nconst endTime = unstakeInfo.endTime || {};\n\nconst onClickWithdraw = () => {\n  Near.call(config.contractId, \"withdraw_all\", {});\n\n  // update account balances\n  if (updateAccountInfo) {\n    updateAccountInfo();\n  }\n};\n\nreturn (\n  <Main>\n    <Widget\n      src={`${config.ownerId}/widget/LiNEAR.Data.Stake`}\n      props={{ config, onLoad }}\n    />\n    <MyAccountTitle>My Account</MyAccountTitle>\n    <MyAccountContent>\n      <MyAccountCardWrapper>\n        <div>\n          <TokenValue>\n            <div>{nearBalance}</div>\n            <NearIcon />\n          </TokenValue>\n          <GrayContent>Available NEAR in Wallet</GrayContent>\n        </div>\n        <div style={{ width: \"130px\" }}>\n          <Widget\n            src={`${config.ownerId}/widget/LiNEAR.Element.Button`}\n            props={{\n              onClick: () => {\n                updatePage(\"stake\");\n                updateTabName(\"stake\");\n              },\n              text: \"Stake\",\n              size: \"base\",\n              full: \"full\",\n            }}\n          />\n        </div>\n      </MyAccountCardWrapper>\n\n      <MyAccountCardWrapper style={{ marginTop: \"10px\" }}>\n        <div>\n          <TokenValue>\n            <div>{formattedLinearBalance}</div>\n            <LiNEARIcon />\n          </TokenValue>\n          <GrayContent>Your LiNEAR Tokens</GrayContent>\n        </div>\n        <div style={{ width: \"130px\" }}>\n          <Widget\n            src={`${config.ownerId}/widget/LiNEAR.Element.Button`}\n            props={{\n              onClick: () => {\n                updatePage(\"stake\");\n                updateTabName(\"unstake\");\n              },\n              text: \"Unstake\",\n              size: \"base\",\n              full: \"full\",\n            }}\n          />\n        </div>\n      </MyAccountCardWrapper>\n\n      {firstStakingTime && (\n        <MyAccountCardWrapper style={{ marginTop: \"10px\" }}>\n          <div>\n            <GrayContent>Staking Rewards</GrayContent>\n            <TokenValue>\n              <div>{stakingRewards}</div>\n              <NearIcon />\n            </TokenValue>\n          </div>\n          <RewardsFinishedTime>\n            <Widget\n              src={`${config.ownerId}/widget/LiNEAR.Element.Tooltip`}\n              props={{\n                message:\n                  \"Staking rewards are included in the LiNEAR price. LiNEAR price increases every epoch (12~15 hours).\",\n              }}\n            />\n            <div>Staking rewards since {firstStakingTime}</div>\n          </RewardsFinishedTime>\n        </MyAccountCardWrapper>\n      )}\n\n      {unstakeInfo &&\n        unstakeInfo.amount &&\n        Big(unstakeInfo.amount).gte(ONE_MICRO_NEAR) && (\n          <MyAccountCardGroupWrapper style={{ marginTop: \"10px\" }}>\n            <div>\n              <TokenValue>\n                <div>\n                  {unstakeInfo.amount\n                    ? Big(unstakeInfo.amount).div(YOCTO_NEAR).toFixed(5)\n                    : \"-\"}\n                </div>\n                <NearIcon />\n              </TokenValue>\n              <GrayContent>Pending Unstake</GrayContent>\n            </div>\n            <HorizontalLine />\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n              <div>\n                <TokenValue>\n                  {endTime.ready && <div>Unstake is Ready</div>}\n                  {!endTime.ready && endTime.remainingHours && (\n                    <div>~{endTime.remainingHours} hours</div>\n                  )}\n                </TokenValue>\n                <GrayContent>Remaining</GrayContent>\n              </div>\n              <div style={{ width: \"130px\" }}>\n                <Widget\n                  src={`${config.ownerId}/widget/LiNEAR.Element.Button`}\n                  props={{\n                    onClick: onClickWithdraw,\n                    disabled: !endTime.ready,\n                    text: \"Withdraw\",\n                    size: \"base\",\n                    full: \"full\",\n                  }}\n                />\n              </div>\n            </div>\n            {endTime.timestamp && (\n              <>\n                <HorizontalLine />\n                <div>\n                  <div>\n                    <TokenValue>\n                      <div>{formatDateTime(endTime.timestamp)}</div>\n                    </TokenValue>\n                    <GrayContent>Withdrawal will be available</GrayContent>\n                  </div>\n                </div>\n              </>\n            )}\n          </MyAccountCardGroupWrapper>\n        )}\n    </MyAccountContent>\n  </Main>\n);\n", "metadata": {"description": "Account", "image": {"ipfs_cid": "bafkreihszlp5bu7xe3pwn4x3xmhazcxjxo4d5gsnhr2a4kthnzn6fzhn5i"}, "name": "Account Component | LiNEAR", "tags": {"component": "", "data": "", "defi": "", "linear": "", "widget": ""}}, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/linearprotocol.near/widget/LiNEAR.Account", "fact_widget_deployments_id": "d881eaf3d6ffaa2eb6a5144161b2ebd4", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}