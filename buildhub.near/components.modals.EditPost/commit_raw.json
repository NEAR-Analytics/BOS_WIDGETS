{"tx_hash": "8RePnxRDYd61huVFtnWGmSduTgipfH2HkMLRP7Prc82D", "action_id_social": "AseUa9te1bYjwBjPhzmfC2tfzxzMXAkJkF5j1fU1DiiV-0-widget", "block_id": 114339390, "block_timestamp": "2024-03-08T16:29:40.125Z", "signer_id": "buildhub.near", "widget_name": "components.modals.EditPost", "source_code": "const { Button } = VM.require(\"buildhub.near/widget/components\") || {\n  Button: () => <></>,\n};\n\nconst item = props.item;\nconst content = props.content;\nconst closeModal = props.closeModal;\n\nconst TextareaWrapper = styled.div`\n  display: grid;\n  vertical-align: top;\n  align-items: center;\n  position: relative;\n  align-items: stretch;\n\n  textarea {\n    display: flex;\n    align-items: center;\n    transition: all 0.3s ease;\n  }\n\n  textarea::placeholder {\n    padding-top: 4px;\n    font-size: 20px;\n  }\n\n  textarea:focus::placeholder {\n    font-size: inherit;\n    padding-top: 0px;\n  }\n\n  &::after,\n  textarea,\n  iframe {\n    width: 100%;\n    padding: 8px 0;\n    min-width: 1em;\n    height: unset;\n    min-height: 3em;\n    font: inherit;\n    margin: 0;\n    resize: none;\n    background: none;\n    appearance: none;\n    border: 0px solid #eee;\n    grid-area: 1 / 1;\n    overflow: hidden;\n    outline: none;\n  }\n\n  iframe {\n    padding: 0;\n  }\n\n  textarea:focus,\n  textarea:not(:empty) {\n    border-bottom: 1px solid #eee;\n    min-height: 5em;\n  }\n\n  &::after {\n    content: attr(data-value) \" \";\n    visibility: hidden;\n    white-space: pre-wrap;\n  }\n  &.markdown-editor::after {\n    padding-top: 66px;\n    font-family: monospace;\n    font-size: 14px;\n  }\n`;\n\nconst Wrapper = styled.div`\n  line-height: normal;\n  display: flex;\n  flex-direction: column;\n  gap: 1.5rem;\n  padding: 1.5rem;\n\n  .right {\n    flex-grow: 1;\n    min-width: 0;\n  }\n\n  .up-buttons {\n    margin-top: 12px;\n\n    @media screen and (max-width: 768px) {\n      display: flex;\n      align-items: center;\n      gap: 1rem;\n    }\n  }\n`;\n\nconst embedCss = `\n.rc-md-editor {\n  border: 0;\n}\n.rc-md-editor .editor-container>.section {\n  border: 0;\n}\n.rc-md-editor .editor-container .sec-md .input {\n  overflow-y: auto;\n  padding: 8px 0 !important;\n  line-height: normal;\n}\n\nhtml {\n  background: #23242b;\n}\n\n* {\n  border: none !important;\n}\n\n.rc-md-editor {\n  background: #4f5055;\n  border-top: 1px solid #4f5055 !important;\n  border-radius: 8px;\n}\n\n.editor-container {\n  background: #4f5055;\n}\n\n.drop-wrap {\n  \n  border-radius: 0.5rem !important;\n}\n\n.header-list {\n  display: flex;\n  align-items: center;\n}\n\ntextarea {\n  background: #23242b !important;\n  color: #fff !important;\n\n  font-family: sans-serif !important;\n  font-size: 1rem;\n\n  border: 1px solid #4f5055 !important;\n  border-top: 0 !important;\n  border-radius: 0 0 8px 8px;\n}\n\n.rc-md-navigation {\n  background: #23242b !important;\n  border: 1px solid #4f5055 !important;\n  border-top: 0 !important;\n  border-bottom: 0 !important;\n  border-radius: 8px 8px 0 0;\n\n  i {\n    color: #cdd0d5;\n  }\n}\n\n.editor-container {\n  border-radius: 0 0 8px 8px;\n}\n\n.rc-md-editor .editor-container .sec-md .input {\n  overflow-y: auto;\n  padding: 8px !important;\n  line-height: normal;\n  border-radius: 0 0 8px 8px;\n}\n`;\n\nState.init({\n  text: content.text || \"\",\n});\n\nconst onChange = (text) => {\n  State.update({ text });\n};\n\nconst handleEdit = () => {\n  Social.set({\n    index: {\n      modify: JSON.stringify({\n        key: item,\n        value: {\n          type: \"edit\",\n          value: {\n            text: state.text,\n          },\n        },\n      }),\n    },\n  });\n};\n\nreturn (\n  <>\n    <div className=\"mb-3\">\n      <label>Content</label>\n      <TextareaWrapper\n        className={markdownEditor ? \"markdown-editor\" : \"\"}\n        data-value={state.text || \"\"}\n      >\n        <Widget\n          key={`markdown-editor-${markdownEditor}-${memoizedEditorKey}`}\n          src=\"mob.near/widget/MarkdownEditorIframe\"\n          props={{\n            initialText: state.text,\n            onChange,\n            embedCss,\n          }}\n        />\n        {autocompleteEnabled && state.showAccountAutocomplete && (\n          <div className=\"pt-1 w-100 overflow-hidden\">\n            <Widget\n              src=\"devs.near/widget/Common.AccountAutocomplete\"\n              props={{\n                term: state.text.split(\"@\").pop(),\n                onSelect: autoCompleteAccountId,\n                onClose: () => State.update({ showAccountAutocomplete: false }),\n              }}\n            />\n          </div>\n        )}\n      </TextareaWrapper>\n    </div>\n    <div className=\"d-flex align-items-center justify-content-end gap-3\">\n      <Button variant=\"outline\" onClick={closeModal}>\n        Cancel\n      </Button>\n      <Button variant=\"primary\" onClick={handleEdit}>\n        Edit Post\n      </Button>\n    </div>\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/buildhub.near/widget/components.modals.EditPost", "fact_widget_deployments_id": "e0f241afc67baa45988d863529bb831f", "inserted_timestamp": "2024-03-08T17:27:59.287Z", "modified_timestamp": "2024-03-08T18:27:11.788Z", "__row_index": 0}