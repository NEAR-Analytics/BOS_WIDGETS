{"tx_hash": "CV8Cs7DdaXkJWPnjPMVt2nqmQUZXXQhHchrhRk52GCwj", "action_id_social": "CVemaBbpRuNAeYvqtXmzV7zVjATVeFeeK3dbU5uTZ18E-0-widget", "block_id": 117392570, "block_timestamp": "2024-04-22T16:24:25.287Z", "signer_id": "buildhub.near", "widget_name": "components.AccountAutocomplete", "source_code": "if (!context.accountId || !props.term) return <></>;\nlet results = [];\nconst filterAccounts = props.filterAccounts ?? []; //  hide certain accounts from the list\nconst profilesData = Social.get(\"*/profile/name\", \"final\") || {};\nconst followingData = Social.get(\n  `${context.accountId}/graph/follow/**`,\n  \"final\"\n);\nif (!profilesData) return <></>;\nconst profiles = Object.entries(profilesData);\nconst term = (props.term || \"\").replace(/\\W/g, \"\").toLowerCase();\nconst limit = 5;\nfor (let i = 0; i < profiles.length; i++) {\n  let score = 0;\n  const accountId = profiles[i][0];\n  const accountIdSearch = profiles[i][0].replace(/\\W/g, \"\").toLowerCase();\n  const nameSearch = (profiles[i][1]?.profile?.name || \"\")\n    .replace(/\\W/g, \"\")\n    .toLowerCase();\n  const accountIdSearchIndex = accountIdSearch.indexOf(term);\n  const nameSearchIndex = nameSearch.indexOf(term);\n  if (accountIdSearchIndex > -1 || nameSearchIndex > -1) {\n    score += 10;\n    if (accountIdSearchIndex === 0) {\n      score += 10;\n    }\n    if (nameSearchIndex === 0) {\n      score += 10;\n    }\n    if (followingData[accountId] === \"\") {\n      score += 30;\n    }\n    results.push({\n      accountId,\n      score,\n    });\n  }\n}\nresults.sort((a, b) => b.score - a.score);\nresults = results.slice(0, limit);\nif (filterAccounts?.length > 0) {\n  results = results.filter((item) => !filterAccounts?.includes(item.accountId));\n}\nfunction onResultClick(id) {\n  props.onSelect && props.onSelect(id);\n}\nconst Wrapper = styled.div`\n  position: relative;\n  &::before {\n    content: \"\";\n    display: block;\n    position: absolute;\n    right: 0;\n    width: 6px;\n    height: 100%;\n    z-index: 10;\n  }\n`;\nconst Scroller = styled.div`\n  position: relative;\n  display: flex;\n  padding: 6px;\n  gap: 6px;\n  overflow: auto;\n  scroll-behavior: smooth;\n  align-items: center;\n  scrollbar-width: none;\n  -ms-overflow-style: none;\n  &::-webkit-scrollbar {\n    display: none;\n  }\n  > * {\n    max-width: 175px;\n    flex-grow: 0;\n    flex-shrink: 0;\n    button {\n      border: 1px solid #eceef0;\n      background: #fff !important;\n      border-radius: 6px;\n      padding: 3px 6px;\n      transition: all 200ms;\n      &:focus,\n      &:hover {\n        border-color: #687076;\n      }\n    }\n  }\n`;\nconst CloseButton = styled.button`\n  background: none;\n  border: none;\n  display: block;\n  padding: 12px;\n  color: white;\n  transition: all 200ms;\n  &:hover {\n    transform: scale(1.2);\n  }\n`;\nconst ProfileCardWrapper = styled.div`\n  opacity: 0.8;\n`;\nif (results.length === 0) return <></>;\nreturn (\n  <Wrapper>\n    <Scroller>\n      <CloseButton tabIndex={-1} type=\"button\" onClick={props.onClose}>\n        <i className=\"bi bi-x-circle\" />\n      </CloseButton>\n      {results.map((result) => {\n        return (\n          <ProfileCardWrapper>\n            <Widget\n              key={result.accountId}\n              src=\"near/widget/AccountProfile\"\n              props={{\n                avatarSize: \"34px\",\n                accountId: result.accountId,\n                onClick: onResultClick,\n                overlayPlacement: \"bottom\",\n              }}\n            />\n          </ProfileCardWrapper>\n        );\n      })}\n    </Scroller>\n  </Wrapper>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/buildhub.near/widget/components.AccountAutocomplete", "fact_widget_deployments_id": "5e0a78cd4ec541700bcc838328e29f9f", "inserted_timestamp": "2024-04-22T18:38:50.728Z", "modified_timestamp": "2024-04-22T18:38:50.728Z", "__row_index": 0}