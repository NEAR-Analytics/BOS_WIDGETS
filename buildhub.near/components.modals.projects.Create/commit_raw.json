{"tx_hash": "5GuTDsFxX9VxRojhMq3z4EthZhR8EfUxNS5qDU7km88E", "action_id_social": "434mBwHbzNQMESg3EBeSBRmUEsyzPZVRGK6tBp1EcrqW-0-widget", "block_id": 118887844, "block_timestamp": "2024-05-14T07:23:45.124Z", "signer_id": "buildhub.near", "widget_name": "components.modals.projects.Create", "source_code": "const accountId = context.accountId;\nconst { Modal, Button, InputField, TextEditor } = VM.require(\n  \"buildhub.near/widget/components\"\n) || {\n  Modal: () => <></>,\n  Button: () => <></>,\n  InputField: () => <></>,\n  TextEditor: () => <></>,\n};\nconst { normalize } = VM.require(\"devs.near/widget/lib.stringUtils\") || {\n  normalize: () => {},\n};\nconst isNearAddress = (address) => {\n  if (typeof address !== \"string\") {\n    return false;\n  }\n  // Check for unnamed wallet address format\n  if (address.length === 64 && /^[0-9A-F]+$/i.test(address)) {\n    return true;\n  }\n  // Existing logic for account name validation (assuming .near or .testnet suffix)\n  if (!address.endsWith(\".near\") && !address.endsWith(\".testnet\")) {\n    return false;\n  }\n  const parts = address.split(\".\");\n  if (parts[0].length < 2 || parts[0].length > 32) {\n    return false;\n  }\n  if (!/^[a-z0-9_-]+$/i.test(parts[0])) {\n    return false;\n  }\n  return true;\n};\nconst showModal = props.showModal;\nconst toggleModal = props.toggleModal;\nconst togglePotlockImportModal = props.togglePotlockImportModal ?? (() => {});\nconst toggle = props.toggle;\nconst tabs = [\n  { id: \"overview\", label: \"Overview\", disabled: true, checked: true },\n  { id: \"activity\", label: \"Activity\", checked: true },\n  { id: \"tasks\", label: \"Tasks\", checked: true },\n  // Uncomment after the support is added\n  // { id: \"discussion\", label: \"Discussion\", checked: false },\n  // { id: \"code\", label: \"Code\", checked: false },\n  // { id: \"roadmap\", label: \"Roadmap\", checked: false },\n];\nconst app = props.app ?? \"buildhub.near\";\nconst poltlockProjectId = props.poltlockProjectId;\nconst potlockProjectProfile = null;\nconst potlockProjectTags = null;\nif (poltlockProjectId) {\n  potlockProjectProfile = Social.getr(`${poltlockProjectId}/profile`);\n}\nconst [tags, setTags] = useState(props.filters.tags ?? []);\nconst [projectAccount, setProjectAccount] = useState(accountId);\nconst [title, setTitle] = useState(\"\");\nconst [description, setDescription] = useState(\"\");\nconst [location, setLocation] = useState(\"\");\nconst [contributors, setContributors] = useState(\"\");\nconst [twitter, setTwitter] = useState(\"\");\nconst [gitHub, setGitHub] = useState(\"\");\nconst [telegram, setTelegram] = useState(\"\");\nconst [website, setWebsite] = useState(\"\");\nconst [selectedTabs, setSelectedTabs] = useState(\n  new Set(tabs.filter((tab) => tab.checked).map((tab) => tab.id.toLowerCase()))\n);\nconst [avatar, setAvatar] = useState(\"\");\nconst [coverImage, setCoverImage] = useState(\"\");\nconst [teamSize, setTeamSize] = useState(teamSize ?? \"\");\nconst [invalidContributorFound, setInvalidContributorFound] = useState(false);\nconst [invalidProjectAccount, setInvalidProjectAccount] = useState(false);\nfunction removeWhiteSpace(str) {\n  return str.replace(/\\s/g, \"\");\n}\nuseEffect(() => {\n  if (potlockProjectProfile && !title) {\n    const {\n      name,\n      description,\n      image,\n      backgroundImage,\n      linktree,\n      plTeam,\n      plCategories,\n      tags,\n    } = potlockProjectProfile;\n    const { twitter, github, telegram, website } = linktree;\n    setTitle(name);\n    setDescription(description);\n    setContributors(JSON.parse(plTeam ?? \"[]\"));\n    setTwitter(linktree.twitter ? `https://twitter.com/${twitter}` : null);\n    setGitHub(linktree.github ? `https://github.com/${github}` : null);\n    setTelegram(linktree.telegram ? `https://t.me/${telegram}` : null);\n    setWebsite(\n      website\n        ? website.includes(\"https://\")\n          ? website\n          : `https://${website}`\n        : null\n    );\n    setAvatar(image);\n    setCoverImage(backgroundImage);\n    setProjectAccount(poltlockProjectId);\n    setTags(\n      (plCategories\n        ? JSON.parse(plCategories ?? \"[]\")\n        : Object.keys(tags ?? {})\n      ).map((i) => removeWhiteSpace(i))\n    );\n  }\n}, [potlockProjectProfile]);\nconst handleCheckboxChange = (event) => {\n  const { id } = event.target;\n  const newSelectedTabs = new Set(selectedTabs); // Create a copy to avoid mutation\n  if (event.target.checked) {\n    newSelectedTabs.add(id.toLowerCase());\n  } else {\n    newSelectedTabs.delete(id.toLowerCase());\n  }\n  setSelectedTabs(newSelectedTabs);\n};\nconst following = Social.get(`${context.accountId}/graph/follow/*`);\nconst followingAccountSuggestion = following && Object.keys(following);\nconst handleTags = (tags) => {\n  let filtered = tags.map((tag) =>\n    removeWhiteSpace(tag.customOption ? tag.label : tag)\n  );\n  setTags(filtered);\n};\nconst handleContributors = (contributors) => {\n  let filtered = contributors.map((contributor) => {\n    if (contributor.customOption) {\n      return contributor.label;\n    } else {\n      return contributor;\n    }\n  });\n  const invalidAddress = filtered.find((address) => !isNearAddress(address));\n  invalidAddress\n    ? setInvalidContributorFound(true)\n    : setInvalidContributorFound(false);\n  setContributors(filtered);\n};\nfunction isValidUrl(url) {\n  const regex = /^(?:(http|https):\\/\\/)?([^\\s]+\\.[^\\s]+)?(?:\\/[\\w\\-\\.]+)*\\/?$/;\n  return regex.test(url);\n}\nconst websiteUrlHandler = (e) => {\n  const url = e.target.value;\n  setWebsite(url);\n};\nconst projectAccountIdHandler = (e) => {\n  const accountId = e.target.value;\n  const isValid = isNearAddress(accountId);\n  !isValid ? setInvalidProjectAccount(true) : setInvalidProjectAccount(false);\n  setProjectAccount(accountId);\n};\nconst Main = styled.div`\n  display: flex;\n  gap: 1.5rem;\n  padding: 1rem;\n  .form-control {\n    background: transparent;\n  }\n  .lhs {\n    width: 400px;\n    > div {\n      width: 100%;\n    }\n  }\n  .rhs {\n    width: 400px;\n  }\n  @media only screen and (max-width: 768px) {\n    flex-direction: column;\n    .lhs,\n    .rhs {\n      width: auto;\n    }\n  }\n  .form-group {\n    width: 100%;\n    & > div > div.p-2 {\n      background: transparent !important;\n      border: 1px solid var(--border-color, #ccc);\n      border-width: 0px 1px 1px;\n      border-top-style: initial;\n      border-right-style: solid;\n      border-bottom-style: solid;\n      border-left-style: solid;\n      border-top-color: initial;\n      border-right-color: rgb(222, 226, 230);\n      border-bottom-color: rgb(222, 226, 230);\n      border-left-color: rgb(222, 226, 230);\n      border-image: initial;\n      border-bottom-left-radius: 0.375rem;\n      border-bottom-right-radius: 0.375rem;\n      min-height: 9em;\n      * {\n        color: var(--text-color, #fff);\n      }\n    }\n    .nav-link {\n      color: var(--text-color, #fff);\n    }\n  }\n  .form-select {\n    background-color: #000 !important;\n    height: 100%;\n  }\n  .form-check {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    padding-left: 0px;\n  }\n  .form-check-input {\n    background-color: transparent;\n    border: 1px solid var(--border-color, #ccc);\n    &:checked {\n      background-color: var(--primary-color, #38c793);\n      border-color: var(--primary-color, #38c793);\n      &:focus {\n        box-shadow: none;\n      }\n    }\n    &:focus {\n      box-shadow: none;\n    }\n    &:not(:checked):not(:focus) {\n      background-image: url(\"data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%27-4 -4 8 8%27%3e%3ccircle r=%273%27 fill=%27%23fff%27/%3e%3c/svg%3e\");\n    }\n  }\n  .location-team {\n    display: flex;\n    gap: 10px;\n    flex-direction: row;\n    @media only screen and (max-width: 768px) {\n      column-gap: 20px;\n      flex-direction: column;\n    }\n  }\n  .err,\n  .err-p_id {\n    color: #ff8888;\n    font-size: 12px;\n    padding: 0;\n    margin: 0;\n  }\n  .err-p_id {\n    margin-top: -20px;\n  }\n`;\nfunction onCreateProject() {\n  const projectID = normalize(title, \"-\");\n  const project = {\n    title,\n    description,\n    location,\n    tags,\n    contributors,\n    twitter,\n    github: gitHub,\n    telegram,\n    website,\n    tabs: Array.from(selectedTabs),\n    profileImage: avatar,\n    backgroundImage: coverImage,\n    projectAccountId: projectAccount,\n    teamSize,\n  };\n  const data = {\n    project: {\n      [projectID]: {\n        \"\": JSON.stringify(project),\n        metadata: {\n          name: title,\n          description: description,\n          image: avatar,\n          backgroundImage: coverImage,\n          tags:\n            tags && tags.reduce((obj, item) => ({ ...obj, [item]: \"\" }), {}), // need to transform,\n          linktree: {\n            twitter: twitter,\n            github: gitHub,\n            telegram: telegram,\n            website: website,\n          },\n        },\n      },\n    },\n    [app]: {\n      project: {\n        [`${context.accountId}_project_${projectID}`]: \"\",\n      },\n    },\n  };\n  if (projectAccount.includes(\".sputnik-dao.near\")) {\n    const policy = Near.view(projectAccount, \"get_policy\");\n    const base64 = Buffer.from(\n      JSON.stringify({\n        data: {\n          [projectAccount]: data,\n        },\n        options: { refund_unused_deposit: true },\n      }),\n      \"utf-8\"\n    ).toString(\"base64\");\n    Near.call({\n      contractName: projectAccount,\n      methodName: \"add_proposal\",\n      args: {\n        proposal: {\n          description: `Project creation using BuildDAO created by ${context.accountId}`,\n          kind: {\n            FunctionCall: {\n              receiver_id: \"social.near\",\n              actions: [\n                {\n                  method_name: \"set\",\n                  args: base64,\n                  deposit: \"100000000000000000000000\",\n                  gas: \"200000000000000\",\n                },\n              ],\n            },\n          },\n        },\n      },\n      deposit: policy?.proposal_bond || 100000000000000000000000,\n      gas: 200000000000000,\n    });\n  } else {\n    Social.set(data, {\n      onCommit: () => {\n        toggleModal();\n        togglePotlockImportModal();\n      },\n    });\n  }\n}\nreturn (\n  <Modal\n    open={showModal}\n    title={\"Create Project\"}\n    onOpenChange={toggleModal}\n    toggle={toggle}\n    disableOutsideClick={true}\n  >\n    <Main>\n      <div className=\"lhs d-flex flex-column gap-4\">\n        <InputField\n          key={\"Project-AccountId\"}\n          label={\"Project AccountId\"}\n          placeholder={\"Enter Project AccountId\"}\n          value={projectAccount}\n          error={invalidProjectAccount}\n          onChange={projectAccountIdHandler}\n        />\n        {invalidProjectAccount && (\n          <p className=\"err-p_id text-center\">\n            Invalid Near Address, please enter a valid near address\n          </p>\n        )}\n        <InputField\n          key={\"Project-Title\"}\n          label={\"Project Title\"}\n          placeholder={\"Enter Project Title\"}\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n        />\n        <div className=\"form-group\">\n          <label className=\"mb-1\">Description</label>\n          <TextEditor value={description} onChange={(e) => setDescription(e)} />\n        </div>\n        <div className=\"location-team form-group\">\n          <InputField\n            key={\"Location\"}\n            label={\"Location\"}\n            placeholder={\"Enter location\"}\n            value={location}\n            onChange={(e) => setLocation(e.target.value)}\n          />\n          <div className=\"d-flex flex-column gap-2 h-100\" key={\"team-sizes\"}>\n            <label>Team Size</label>\n            <select\n              value={teamSize}\n              onChange={(e) => setTeamSize(e.target.value)}\n              className=\"form-select\"\n            >\n              <option selected disabled value=\"\">\n                Select Team Size\n              </option>\n              <option value=\"1-10\">1-10</option>\n              <option value=\"10-50\">10-50</option>\n              <option value=\"50-100\">50-100</option>\n              <option value=\"100+\">100+</option>\n            </select>\n          </div>\n        </div>\n        <div className=\"d-flex flex-column gap-1\">\n          <div className=\"form-group\">\n            <label className=\"mb-1\">Project Contributors</label>\n            <Typeahead\n              multiple\n              options={\n                followingAccountSuggestion ?? [\n                  \"frank.near\",\n                  \"ellie.near\",\n                  \"jane.near\",\n                ]\n              }\n              allowNew\n              placeholder=\"frank.near, ellie.near\"\n              selected={contributors}\n              onChange={(e) => handleContributors(e)}\n            />\n          </div>\n          {invalidContributorFound && (\n            <p className=\"err text-center\">\n              The address you just entered are invalid, please enter valid near\n              addresses\n            </p>\n          )}\n        </div>\n        <InputField\n          key={\"twitter\"}\n          label={\"Twitter\"}\n          error={twitter && !isValidUrl(twitter)}\n          placeholder={\"https://twitter.com/handle\"}\n          value={twitter}\n          onChange={(e) => setTwitter(e.target.value)}\n        />\n        <InputField\n          key={\"github\"}\n          label={\"GitHub\"}\n          error={gitHub && !isValidUrl(gitHub)}\n          placeholder={\"https://github.com/handle\"}\n          value={gitHub}\n          onChange={(e) => setGitHub(e.target.value)}\n        />\n        <InputField\n          key={\"telegram\"}\n          label={\"Telegram\"}\n          error={telegram && !isValidUrl(telegram)}\n          placeholder={\"https://t.me/handle\"}\n          value={telegram}\n          onChange={(e) => setTelegram(e.target.value)}\n        />\n        <InputField\n          key={\"website\"}\n          label={\"Website\"}\n          error={website && !isValidUrl(website)}\n          placeholder={\"https://www.nearbuilders.org/\"}\n          value={website}\n          onChange={websiteUrlHandler}\n        />\n        <div className=\"form-group\">\n          <label className=\"mb-3\">Tabs</label>\n          <div className=\"d-flex flex-column gap-1\">\n            {tabs.map((tab) => (\n              <div className=\"form-check form-switch\" key={tab.id}>\n                <label className=\"form-check-label\" htmlFor={tab.id}>\n                  {tab.label}\n                </label>\n                <input\n                  className=\"form-check-input\"\n                  type=\"checkbox\"\n                  role=\"switch\"\n                  id={tab.id}\n                  checked={selectedTabs.has(tab.id.toLowerCase())}\n                  onChange={handleCheckboxChange}\n                  disabled={tab.disabled}\n                />\n              </div>\n            ))}\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <label className=\"mb-1\">Tags</label>\n          <Typeahead\n            multiple\n            options={\n              props.tagFilters ?? [\n                \"Community\",\n                \"Open Source\",\n                \"Social Impact\",\n                \"DAO\",\n                \"Climate\",\n                \"Public Good\",\n                \"Education\",\n                \"Community\",\n              ]\n            }\n            allowNew\n            placeholder=\"Start Typing\"\n            selected={tags}\n            onChange={(e) => handleTags(e)}\n          />\n        </div>\n      </div>\n      <div className=\"rhs\">\n        <div className=\"form-group mb-3\">\n          <label className=\"pb-2\">Avatar</label>\n          <Widget\n            src=\"buildhub.near/widget/components.ImageUploader\"\n            props={{\n              image: avatar,\n              onChange: (image) => setAvatar({ image }),\n            }}\n          />\n        </div>\n        <div className=\"form-group mb-3\">\n          <label className=\"pb-2\">Cover Image</label>\n          <Widget\n            src=\"buildhub.near/widget/components.ImageUploader\"\n            props={{\n              image: coverImage,\n              onChange: (image) => setCoverImage({ image }),\n            }}\n          />\n        </div>\n      </div>\n    </Main>\n    <div className=\"d-flex align-items-center justify-content-end gap-2\">\n      <Button\n        variant=\"primary\"\n        onClick={onCreateProject}\n        disabled={\n          invalidContributorFound ||\n          invalidProjectAccount ||\n          !title ||\n          !description ||\n          !projectAccount\n        }\n      >\n        Create\n      </Button>\n    </div>\n  </Modal>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/buildhub.near/widget/components.modals.projects.Create", "fact_widget_deployments_id": "f72afb0924c4598a3463a3063d420067", "inserted_timestamp": "2024-05-14T08:51:00.786Z", "modified_timestamp": "2024-05-14T08:51:00.786Z", "__row_index": 0}