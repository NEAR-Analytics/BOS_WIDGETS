{"tx_hash": "2D7DA7RvtMhdHsqMGj21pqt6J6gE8pon5ctj7CV1NhXB", "action_id_social": "2dednauqPtTaZ33Qu3oJ5j9agk7MFdgBmwrGRbXXNeBa-0-widget", "block_id": 111942190, "block_timestamp": "2024-02-02T15:47:46.313Z", "signer_id": "buildhub.near", "widget_name": "page.feed", "source_code": "const { currentPath, page, ...passProps } = props;\n\nconst { routes } = VM.require(\"buildhub.near/widget/config.feed\") ?? {\n  routes: {},\n};\n\nconst { theme } = VM.require(\"buildhub.near/widget/config.theme\") ?? {\n  theme: {},\n};\n\nconst { SidebarLayout } = VM.require(\n  \"buildhub.near/widget/template.SidebarLayout\"\n) || {\n  SidebarLayout: () => <></>,\n};\n\nif (!page) page = Object.keys(routes)[0] || \"home\";\n\nconst Root = styled.div`\n  ${theme}// can come from config\n`;\n\nconst [activeRoute, setActiveRoute] = useState(page);\n\nuseEffect(() => {\n  setActiveRoute(page);\n}, [page]);\n\nfunction Router({ active, routes }) {\n  // this may be converted to a module at devs.near/widget/Router\n  const routeParts = active.split(\".\");\n\n  let currentRoute = routes;\n  let src = \"\";\n  let defaultProps = {};\n\n  for (let part of routeParts) {\n    if (currentRoute[part]) {\n      currentRoute = currentRoute[part];\n      src = currentRoute.path;\n\n      if (currentRoute.init) {\n        defaultProps = { ...defaultProps, ...currentRoute.init };\n      }\n    } else {\n      // Handle 404 or default case for unknown routes\n      return <p>404 Not Found</p>;\n    }\n  }\n\n  return (\n    <div key={active}>\n      <Widget src={src} props={{ ...passProps, ...defaultProps }} />\n    </div>\n  );\n}\n\nconst Container = styled.div`\n  // display: flex;\n  height: 100%;\n`;\n\nconst Content = styled.div`\n  width: 100%;\n  height: 100%;\n`;\n\nreturn (\n  <Root>\n    <Container>\n      <SidebarLayout\n        currentPath={currentPath}\n        page={activeRoute}\n        routes={routes}\n      >\n        <Content>\n          <Router active={activeRoute} routes={routes} />\n        </Content>\n      </SidebarLayout>\n    </Container>\n  </Root>\n);\n\n// const { feeds } = VM.require(\"buildhub.near/widget/config.feed\") || {}; // this is the thing, which works better as a module if it needs to be provided with context\n\n// console.log(feeds);\n\n// if (!feeds) {\n//   return \"...\";\n// }\n\n// const defaultProps = {\n//   feeds: feeds,\n//   daoName: \"Build DAO\", // I think we could take this out, not specific to feeds\n//   feedLink: \"https://nearbuilders.org/feed\", // this is good idea, could be used for the \"share post\" button\n//   daoTag: \"build\", // maybe we can make this an array of \"required hashtags\"\n//   pagePath: \"/?page=feed\", // great idea, @mattb.near RoutesManager\n//   //hashtag: \"something\"\n// };\n\n// return (\n//   <div className=\"container-xl my-3\">\n//     <Widget\n//       src=\"buildhub.near/widget/Feed\"\n//       loading=\"Feed loading...\"\n//       props={{ ...props, ...defaultProps }}\n//     />\n//   </div>\n// );\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/buildhub.near/widget/page.feed", "fact_widget_deployments_id": "de91fc1dbc00851f8729f1e66807a4fd", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 7}