{"tx_hash": "AktZ5CWLCjufJ5tgz72jEFc7ziz3fjNXvx1qz2rojsQg", "action_id_social": "3pJyzBiKw5rkEvTNu1KbGwvpU6LuUg57P6osaY5ps8s7-0-widget", "block_id": 113433594, "block_timestamp": "2024-02-23T17:46:39.491Z", "signer_id": "buildhub.near", "widget_name": "components.Button", "source_code": "const StyledButton = styled.button`\n  all: unset;\n  display: inline-flex;\n  padding: 10px 20px;\n  justify-content: center;\n  align-items: center;\n  gap: 4px;\n  border-radius: 8px;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: normal;\n\n  transition: all 300ms;\n\n  ${(props) =>\n    props.type === \"icon\" &&\n    `\n    display: flex;\n    width: 40px;\n    height: 40px;\n    padding: 0px;\n    flex-shrink: 0;\n    font-size: 16px;\n    border-radius: 50%;\n  `}\n\n  /* Colors based on variant prop */\n  background: ${(props) => {\n    switch (props.variant) {\n      case \"primary\":\n        return \"var(--button-primary-bg, #FFAF51)\";\n      case \"outline\":\n        return \"var(--button-outline-bg, transparent)\";\n      case \"secondary\":\n        return \"var(--button-secondary-bg, #23242B)\";\n      default:\n        return \"var(--button-default-bg, #23242B)\";\n    }\n  }};\n\n  color: ${(props) => {\n    switch (props.variant) {\n      case \"primary\":\n        return \"var(--button-primary-color, #000)\";\n      case \"outline\":\n        return \"var(--button-outline-color, #fff)\";\n      case \"secondary\":\n        return \"var(--button-secondary-color, #CDD0D5)\";\n      default:\n        return \"var(--button-default-color, #CDD0D5)\";\n    }\n  }};\n\n  border: ${(props) =>\n    props.variant === \"outline\"\n      ? \"1px solid var(--stroke-color, rgba(255, 255, 255, 0.20))\"\n      : \"\"};\n\n  /* Hover states */\n  &:hover:not(:disabled) {\n    background: ${(props) => {\n      switch (props.variant) {\n        case \"primary\":\n          return \"var(--button-primary-hover-bg, #e49b48)\";\n        case \"outline\":\n          return \"var(--button-outline-hover-bg, rgba(255, 255, 255, 0.20))\";\n        default:\n          return \"var(--button-default-hover-bg, #17181c)\";\n      }\n    }};\n  }\n\n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed !important;\n  }\n`;\n\nfunction Button({\n  id,\n  disabled,\n  loading,\n  children,\n  variant,\n  type,\n  onClick,\n  className,\n  target,\n  linkClassName,\n  href,\n  noLink,\n  style,\n}) {\n  className = className + (disabled ? \" disabled\" : \"\");\n  if (href && noLink) {\n    return (\n      <a\n        href={href}\n        className={linkClassName}\n        style={{ textDecoration: \"none\" }}\n        target={target}\n      >\n        <StyledButton\n          id={id}\n          key={`ButtonLink-${type ?? \"Normal\"}-${variant ?? \"Default\"}-${id}`}\n          className={className}\n          variant={variant}\n          disabled={disabled}\n          type={type}\n          style={style}\n          href={href}\n        >\n          {children}\n        </StyledButton>\n      </a>\n    );\n  }\n\n  if (href) {\n    return (\n      <Link\n        to={href}\n        className={linkClassName}\n        style={{ textDecoration: \"none\" }}\n        target={target}\n      >\n        <StyledButton\n          id={id}\n          key={`ButtonLink-${type ?? \"Normal\"}-${variant ?? \"Default\"}-${id}`}\n          className={className}\n          disabled={disabled}\n          variant={variant}\n          type={type}\n          style={style}\n          href={href}\n        >\n          {children}\n        </StyledButton>\n      </Link>\n    );\n  }\n\n  return (\n    <StyledButton\n      id={id}\n      disabled={disabled}\n      key={`Button-${type ?? \"Normal\"}-${variant ?? \"Default\"}-${id}`}\n      className={className}\n      variant={variant}\n      type={type}\n      style={style}\n      onClick={onClick}\n    >\n      {children}\n      {loading ? (\n        <span\n          className=\"spinner-border spinner-border-sm mr-2\"\n          role=\"status\"\n          aria-hidden=\"true\"\n        ></span>\n      ) : null}\n    </StyledButton>\n  );\n}\n\nreturn { Button };\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/buildhub.near/widget/components.Button", "fact_widget_deployments_id": "89fbb79a4fade4d2219d7f5f18130bc2", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 12}