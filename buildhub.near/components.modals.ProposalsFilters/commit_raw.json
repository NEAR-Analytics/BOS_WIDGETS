{"tx_hash": "9aHxPEkGMTokJvYADHfCi9iLwdN6Gp3SpevedyP49BZR", "action_id_social": "HEuNnXCNHync5vDZF3X4HSJ1xT6D1NVjMxDMdHkwQtUC-0-widget", "block_id": 113012972, "block_timestamp": "2024-02-17T10:57:57.514Z", "signer_id": "buildhub.near", "widget_name": "components.modals.ProposalsFilters", "source_code": "const { daos } = VM.require(\"buildhub.near/widget/fetch.daos\") || { daos: [] };\n\nif (!daos) {\n  return \"\";\n}\nconst options = daos.map((dao) => dao.contract_id);\n\nconst { Modal, Button } = VM.require(\"buildhub.near/widget/components\") || {\n  Modal: () => <></>,\n  Button: () => <></>,\n};\n\nconst showModal = props.showModal;\nconst toggleModal = props.toggleModal;\nconst toggle = props.toggle;\nconst bootstrapTheme = props.bootstrapTheme || \"dark\";\nconst parentSelectedTypes = props.parentSelectedTypes ?? [];\nconst parentSelectedStatus = props.parentSelectedStatus ?? [];\nconst applyFilters = props.applyFilters ?? (() => {});\n\nif (!showModal) {\n  return \"\";\n}\n\nconst [selectedTypes, setSelectedTypes] = useState(parentSelectedTypes);\nconst [selectedStatus, setSelectedStatus] = useState(parentSelectedStatus);\n\nconst ThemeContainer =\n  props.ThemeContainer ||\n  styled.div`\n    --primary-color: rgb(255, 175, 81);\n  `;\n\nconst Wrapper = styled.div`\n  .checked > span:first-child {\n    background: var(--primary-color) !important;\n    border-color: var(--primary-color) !important;\n  }\n\n  .cbx:hover span:first-child {\n    border-color: var(--primary-color) !important;\n  }\n\n  button[type=\"checkbox\"]:hover {\n    background: none !important;\n  }\n`;\n\nconst proposalTypeOptions = {\n  Operations: [\n    {\n      title: \"Transfer funds\",\n      value: \"Transfer\",\n    },\n    {\n      title: \"Voting proposal\",\n      value: \"Vote\",\n    },\n    {\n      title: \"Custom function\",\n      value: \"FunctionCall\",\n    },\n    {\n      title: \"Issue a new bounty\",\n      value: \"AddBounty\",\n    },\n    {\n      title: \"Request pay for bounty\",\n      value: \"BountyDone\",\n    },\n    {\n      title: \"Set staking contract\",\n      value: \"SetStakingContract\",\n    },\n    {\n      title: \"Text\",\n      value: \"Text\",\n    },\n  ],\n  Policy: [\n    {\n      title: \"Change Policy\",\n      value: \"ChangePolicy\",\n    },\n    {\n      title: \"Add or Update Role\",\n      value: \"ChangePolicyAddOrUpdateRole\",\n    },\n    {\n      title: \"Remove Role\",\n      value: \"ChangePolicyRemoveRole\",\n    },\n    {\n      title: \"ChangePolicyUpdateParameters\",\n      value: \"ChangePolicyUpdateParameters\",\n    },\n    {\n      title: \"ChangePolicyUpdateDefaultVotePolicy\",\n      value: \"ChangePolicyUpdateDefaultVotePolicy\",\n    },\n  ],\n  \"Membership & Config\": [\n    {\n      title: \"Add member to role\",\n      value: \"AddMemberToRole\",\n    },\n    {\n      title: \"Remove member from role\",\n      value: \"RemoveMemberFromRole\",\n    },\n    {\n      title: \"Change Config\",\n      value: \"ChangeConfig\",\n    },\n    {\n      title: \"Factory Info Update\",\n      value: \"FactoryInfoUpdate\",\n    },\n    {\n      title: \"Upgrade Remote\",\n      value: \"UpgradeRemote\",\n    },\n    {\n      title: \"Upgrade Self\",\n      value: \"UpgradeSelf\",\n    },\n  ],\n};\n\nconst proposalStatusOptions = [\n  {\n    title: \"Approved\",\n    value: \"Approved\",\n  },\n  {\n    title: \"Rejected\",\n    value: \"Rejected\",\n  },\n  {\n    title: \"In Progress\",\n    value: \"InProgress\",\n  },\n  {\n    title: \"Expired\",\n    value: \"Expired\",\n  },\n  {\n    title: \"Failed\",\n    value: \"Failed\",\n  },\n  {\n    title: \"Executed\",\n    value: \"Executed\",\n  },\n];\n\nreturn (\n  <ThemeContainer>\n    <Modal\n      open={showModal}\n      title={\"Filters\"}\n      onOpenChange={toggleModal}\n      toggle={toggle}\n    >\n      <Wrapper>\n        <h5 className=\"filter-title\">Type</h5>\n        <div className=\"d-flex flex-wrap\">\n          {Object.keys(proposalTypeOptions).map((key) => {\n            return (\n              <div className=\"d-flex flex-column gap-1\">\n                <b className=\"text-md mb-1\">{key}</b>\n                {proposalTypeOptions[key].map((item) => {\n                  return (\n                    <Widget\n                      src=\"nearui.near/widget/Input.Checkbox\"\n                      props={{\n                        checked: selectedTypes.includes(item.value) || false,\n                        onChange: (checked) => {\n                          setSelectedTypes(\n                            checked\n                              ? [...selectedTypes, item.value]\n                              : selectedTypes.filter((x) => x !== item.value),\n                          );\n                        },\n                        label: item.title,\n                        id: item.value,\n                      }}\n                    />\n                  );\n                })}\n              </div>\n            );\n          })}\n        </div>\n        <h5 className=\"filter-title mt-4\">Status</h5>\n        <div className=\"d-flex flex-wrap\">\n          {proposalStatusOptions.map((item) => {\n            return (\n              <Widget\n                src=\"nearui.near/widget/Input.Checkbox\"\n                props={{\n                  checked: selectedStatus.includes(item.value) || false,\n                  onChange: (checked) => {\n                    setSelectedStatus(\n                      checked\n                        ? [...selectedStatus, item.value]\n                        : selectedStatus.filter((x) => x !== item.value),\n                    );\n                  },\n                  label: item.title,\n                }}\n              />\n            );\n          })}\n        </div>\n        <div className=\"d-flex justify-content-end mt-5 gap-3\">\n          <Button\n            variant=\"outline\"\n            onClick={() => {\n              setSelectedStatus([]);\n              setSelectedTypes([]);\n              applyFilters({ selectedStatus: [], selectedTypes: [] });\n              toggleModal();\n            }}\n          >\n            Clear\n          </Button>\n          <Button\n            variant=\"primary\"\n            onClick={() => {\n              applyFilters({ selectedStatus, selectedTypes });\n              toggleModal();\n            }}\n          >\n            Apply\n          </Button>\n        </div>\n      </Wrapper>\n    </Modal>\n  </ThemeContainer>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/buildhub.near/widget/components.modals.ProposalsFilters", "fact_widget_deployments_id": "18e9e83d23ebbeb41141e734459ee40e", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 3}