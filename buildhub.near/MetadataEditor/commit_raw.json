{"tx_hash": "CV8Cs7DdaXkJWPnjPMVt2nqmQUZXXQhHchrhRk52GCwj", "action_id_social": "CVemaBbpRuNAeYvqtXmzV7zVjATVeFeeK3dbU5uTZ18E-0-widget", "block_id": 117392570, "block_timestamp": "2024-04-22T16:24:25.287Z", "signer_id": "buildhub.near", "widget_name": "MetadataEditor", "source_code": "const initialMetadata = props.initialMetadata ?? {};\nconst onChange = props.onChange;\nconst options = props.options;\nState.init({\n  initialMetadata,\n  metadata: initialMetadata,\n  reportedMetadata: initialMetadata,\n  linktree: initialMetadata.linktree ?? {},\n  image: initialMetadata.image,\n  backgroundImage: initialMetadata.backgroundImage,\n  screenshots: initialMetadata.screenshots ?? {},\n});\nconst metadata = {\n  name: options.name ? state.metadata.name : undefined,\n  description: options.name ? state.metadata.description : undefined,\n  linktree:\n    options.linktree && Object.keys(state.linktree).length > 0\n      ? state.linktree\n      : undefined,\n  image:\n    options.image && state.image && Object.keys(state.image).length > 0\n      ? state.image\n      : undefined,\n  backgroundImage:\n    options.backgroundImage &&\n    state.backgroundImage &&\n    Object.keys(state.backgroundImage).length > 0\n      ? state.backgroundImage\n      : undefined,\n  tags: options.tags ? state.metadata.tags : undefined,\n  screenshots: options.screenshots ? state.metadata.screenshots : undefined,\n};\nif (\n  onChange &&\n  JSON.stringify(state.reportedMetadata) !== JSON.stringify(metadata)\n) {\n  State.update({\n    reportedMetadata: metadata,\n  });\n  onChange(metadata);\n}\nconst Container = styled.div`\n  color: #fff;\n`;\nconst CustomTagEditor = styled.div`\n  .form-control {\n    background: #23242b;\n    border: 1px solid rgba(255, 255, 255, 0.2);\n  }\n`;\nconst CustomImageUpload = styled.div`\n  .nav-link {\n    background: transparent;\n    color: #fff;\n    border: none;\n  }\n  .nav.nav-tabs {\n    border: none;\n  }\n  .nav-link.active {\n    color: #fff;\n    background: transparent;\n    border: 1px solid rgba(255, 255, 255, 0.2);\n    border-bottom: none;\n  }\n  .p-2 {\n    border: none;\n    border: 1px solid rgba(255, 255, 255, 0.2) !important;\n    /* border-top: 0; */\n    background: #23242b !important;\n    color: #fff !important;\n  }\n  .form-control {\n    background: #23242b;\n    border: 1px solid rgba(255, 255, 255, 0.2);\n  }\n`;\nreturn (\n  <Container>\n    {options.name && (\n      <div className=\"mb-3\">\n        <label className=\"mb-2\">{options.name.label ?? \"Name\"}</label>\n        <input\n          type=\"text\"\n          value={state.metadata.name}\n          style={{\n            background: \"#23242b\",\n            color: \"#fff\",\n            border: \"1px solid rgba(255, 255, 255, 0.20)\",\n          }}\n        />\n      </div>\n    )}\n    {options.image && (\n      <div className=\"mb-3\" style={{ color: \"#000\" }}>\n        <label className=\"mb-2 text-white\">\n          {options.image.label ?? \"Image\"}\n        </label>\n        <CustomImageUpload>\n          <Widget\n            src=\"mob.near/widget/ImageEditorTabs\"\n            props={{\n              image: state.image,\n              onChange: (image) => State.update({ image }),\n            }}\n          />\n        </CustomImageUpload>\n      </div>\n    )}\n    {options.backgroundImage && (\n      <div className=\"mb-3\">\n        <label className=\"mb-2\">\n          {options.backgroundImage.label ?? \"Background image\"}\n        </label>\n        <Widget\n          src=\"mob.near/widget/ImageEditorTabs\"\n          props={{\n            image: state.backgroundImage,\n            onChange: (backgroundImage) => State.update({ backgroundImage }),\n          }}\n        />\n      </div>\n    )}\n    {options.description && (\n      <div className=\"mb-3\">\n        <label className=\"mb-2\">\n          {options.description.label ?? \"Description\"}\n        </label>\n        <span className=\"text-secondary\"> (supports markdown)</span>\n        <textarea\n          className=\"form-control\"\n          rows={5}\n          value={state.metadata.description}\n          onChange={(e) => {\n            state.metadata.description = e.target.value;\n            State.update();\n          }}\n          style={{\n            background: \"#23242b\",\n            color: \"#fff\",\n            border: \"1px solid rgba(255, 255, 255, 0.20)\",\n          }}\n        />\n      </div>\n    )}\n    {options.tags && (\n      <CustomTagEditor className=\"mb-3\">\n        <label className=\"mb-2\">{options.tags.label ?? \"Tags\"}</label>\n        <Widget\n          src=\"mob.near/widget/TagsEditor\"\n          props={{\n            initialTagsObject: metadata.tags,\n            tagsPattern: options.tags.pattern,\n            placeholder:\n              options.tags.placeholder ??\n              \"rust, engineer, artist, humanguild, nft, learner, founder\",\n            setTagsObject: (tags) => {\n              state.metadata.tags = tags;\n              State.update();\n            },\n          }}\n        />\n      </CustomTagEditor>\n    )}\n    {options.linktree &&\n      (options.linktree.links ?? []).map((link) => (\n        <div className=\"mb-3\">\n          <label class=\"mb-2\">{link.label}</label>\n          <div className=\"input-group\">\n            <span\n              className=\"input-group-text\"\n              style={{\n                background: \"#23242b\",\n                color: \"#fff\",\n                border: \"1px solid rgba(255, 255, 255, 0.20)\",\n              }}\n            >\n              {link.prefix}\n            </span>\n            <input\n              type=\"text\"\n              value={state.linktree[link.name]}\n              style={{\n                background: \"#23242b\",\n                color: \"#fff\",\n                border: \"1px solid rgba(255, 255, 255, 0.20)\",\n              }}\n            />\n          </div>\n        </div>\n      ))}\n  </Container>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/buildhub.near/widget/MetadataEditor", "fact_widget_deployments_id": "8e5e6e8617b572c60b0366e3033043de", "inserted_timestamp": "2024-04-22T18:38:50.728Z", "modified_timestamp": "2024-04-22T18:38:50.728Z", "__row_index": 20}