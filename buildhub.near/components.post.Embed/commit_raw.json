{"tx_hash": "3apsm9Ubr1YYx8mAUE7bEZducMC9zi7Y4BSLPCxPsuUm", "action_id_social": "BtZQPFkvdTZNVZpMDiKLJtNRY8dfakwawd8mfNtDcr1c-0-widget", "block_id": 111911959, "block_timestamp": "2024-02-02T06:03:46.908Z", "signer_id": "buildhub.near", "widget_name": "components.post.Embed", "source_code": "// This widget is used for embedding whitelisted set of widgets into a post body.\n\nconst EmbedMap = new Map([\n  [\n    \"mob.near/widget/MainPage.N.Post.Page\",\n    \"mob.near/widget/MainPage.N.Post.Embed\",\n  ],\n  [\n    \"mob.near/widget/MainPage.N.Post.Embed\",\n    \"mob.near/widget/MainPage.N.Post.Embed\",\n  ],\n]);\n\nconst href = props.href;\n\nconst parseUrl = (url) => {\n  if (typeof url !== \"string\") {\n    return null;\n  }\n  if (url.startsWith(\"/\")) {\n    url = `https://near.social${url}`;\n  }\n  try {\n    return new URL(url);\n  } catch {\n    return null;\n  }\n};\n\nconst parsed = useMemo(() => {\n  const url = parseUrl(href);\n  if (!url) {\n    return null;\n  }\n  return {\n    widgetSrc: url.pathname.substring(1),\n    props: Object.fromEntries([...url.searchParams.entries()]),\n  };\n}, [href]);\n\nif (!parsed || !EmbedMap.has(parsed.widgetSrc)) {\n  return <Link href={href}>{props.children}</Link>;\n}\n\nconst widgetSrc = EmbedMap.get(parsed.widgetSrc);\n\nconst Wrapper = styled.div`\n  border-radius: 1rem;\n  width: 100%;\n  overflow: hidden;\n  border: 1px solid rgba(255, 255, 255, 0.2);\n  white-space: normal;\n  margin-top: 12px;\n`;\n\nreturn (\n  <Wrapper>\n    <Widget loading=\"\" src={widgetSrc} props={parsed.props} />\n  </Wrapper>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/buildhub.near/widget/components.post.Embed", "fact_widget_deployments_id": "c3fb669cd1b198f71aa37be549b432ed", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 2}