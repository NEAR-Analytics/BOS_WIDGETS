{"tx_hash": "D8aLW2MhCtSPkR73AUXbP7pEaQXBckcp9riebgtkqtHy", "action_id_social": "9DsuFaaFeRUiV3mL4QTch2XmNEC3zuUEsSEicWptZpWC-0-widget", "block_id": 110007780, "block_timestamp": "2024-01-09T20:19:49.959Z", "signer_id": "buildhub.near", "widget_name": "components.Library", "source_code": "const {\n  Button,\n  Pagination,\n  ProgressState,\n  Step,\n  Post,\n  InputField,\n  UploadField,\n  TextBox,\n  TextEditor,\n  User,\n  Avatar,\n  Checkbox,\n} = VM.require(\"buildhub.near/widget/components\");\n\nButton = Button || (() => <></>);\nPagination = Pagination || (() => <></>);\nProgressState = ProgressState || (() => <></>);\nStep = Step || (() => <></>);\nPost = Post || (() => <></>);\nInputField = InputField || (() => <></>);\nUploadField = UploadField || (() => <></>);\nTextBox = TextBox || (() => <></>);\nTextEditor = TextEditor || (() => <></>);\nUser = User || (() => <></>);\nAvatar = Avatar || (() => <></>);\nCheckbox = Checkbox || (() => <></>);\n\n// states\nconst [checked, setChecked] = useState(false);\n\nconst ButtonPreview = (\n  <div>\n    <div className=\"d-flex align-items-center gap-3 mb-3\">\n      <Button>Normal</Button>\n      <Button variant=\"primary\">Primary</Button>\n      <Button variant=\"outline\">Outline</Button>\n    </div>\n    <div className=\"d-flex align-items-center gap-3 mb-3\">\n      <Button>\n        Normal <i className=\"bi bi-arrow-right\"></i>\n      </Button>\n      <Button variant=\"primary\">\n        Primary <i className=\"bi bi-arrow-right\"></i>\n      </Button>\n      <Button variant=\"outline\">\n        Outline <i className=\"bi bi-arrow-right\"></i>\n      </Button>\n    </div>\n    <div className=\"d-flex align-items-center gap-3 mb-3\">\n      <Button type=\"icon\">\n        <i className=\"bi bi-arrow-right\"></i>\n      </Button>\n      <Button variant=\"primary\" type=\"icon\">\n        <i className=\"bi bi-arrow-right\"></i>\n      </Button>\n      <Button variant=\"outline\" type=\"icon\">\n        <i className=\"bi bi-arrow-right\"></i>\n      </Button>\n    </div>\n  </div>\n);\n\nconst components = [\n  {\n    name: \"Button\",\n    category: \"Buttons/Navigation\",\n    widgetSrc: \"buildhub.near/widget/components\",\n    description:\n      \"Button component with three different variants, and icon support.\",\n    requiredProps: {\n      children: \"Button Text\",\n      onClick: \"Callback function to handle button click\",\n    },\n    optionalProps: {\n      id: \"ID of the button\",\n      variant: \"Variant of the button (default, primary, outline)\",\n      type: \"Type of the button (normal, icon)\",\n      className: \"Additional classnames for button\",\n      style: \"Additional styles for button\",\n    },\n    preview: ButtonPreview,\n    embedCode: `\n  const { Button } = VM.require(\"buildhub.near/widget/components\");\n\n  return (\n    <div>\n      <div className=\"d-flex align-items-center gap-3 mb-3\">\n        <Button>Normal</Button>\n        <Button variant=\"primary\">Primary</Button>\n        <Button variant=\"outline\">Outline</Button>\n      </div>\n      <div className=\"d-flex align-items-center gap-3 mb-3\">\n        <Button>\n          Normal <i className=\"bi bi-arrow-right\"></i>\n        </Button>\n        <Button variant=\"primary\">\n          Primary <i className=\"bi bi-arrow-right\"></i>\n        </Button>\n        <Button variant=\"outline\">\n          Outline <i className=\"bi bi-arrow-right\"></i>\n        </Button>\n      </div>\n      <div className=\"d-flex align-items-center gap-3 mb-3\">\n        <Button type=\"icon\">\n         <i className=\"bi bi-arrow-right\"></i>\n        </Button>\n        <Button variant=\"primary\" type=\"icon\">\n         <i className=\"bi bi-arrow-right\"></i>\n        </Button>\n        <Button variant=\"outline\" type=\"icon\">\n         <i className=\"bi bi-arrow-right\"></i>\n        </Button>\n      </div>\n    </div>\n  );`,\n  },\n  {\n    name: \"Pagination\",\n    category: \"Buttons/Navigation\",\n    widgetSrc: \"buildhub.near/widget/components\",\n    description: \"Pagination component for page switching.\",\n    requiredProps: {\n      totalPages: \"Total pages\",\n      selectedPage: \"Selected page number\",\n      onPageClick: \"Callback function to handle button click\",\n    },\n    optionalProps: {\n      maxVisiblePages: \"Max visible pages at once (default: 4)\",\n    },\n    preview: <Pagination totalPages={4} selectedPage={1} />,\n    embedCode: `\n  const { Pagination } = VM.require(\"buildhub.near/widget/components.\n\n  return (\n    <Pagination totalPages={4} selectedPage={1} />\n  );`,\n  },\n  {\n    name: \"Progress State\",\n    category: \"Buttons/Navigation\",\n    widgetSrc: \"buildhub.near/widget/components\",\n    description: \"Progress state for step component.\",\n    requiredProps: {\n      children: \"Children to render\",\n      status: \"Status of the step (default, active, completed, error)\",\n    },\n    preview: (\n      <>\n        {/* <div className=\"d-flex align-items-center gap-3 mb-3\">\n          <ProgressState status=\"default\">1</ProgressState>\n          <ProgressState status=\"focused\">1</ProgressState>\n          <ProgressState status=\"error\">1</ProgressState>\n          <ProgressState status=\"completed\">1</ProgressState>\n        </div> */}\n      </>\n    ),\n    embedCode: `\n  const { ProgressState } = VM.require(\"buildhub.near/widget/components\");\n\n  return (\n    <div className=\"d-flex align-items-center gap-3 mb-3\">\n      <ProgressState status=\"default\">1</ProgressState>\n      <ProgressState status=\"focused\">1</ProgressState>\n      <ProgressState status=\"error\">1</ProgressState>\n      <ProgressState status=\"completed\">1</ProgressState>\n    </div>\n  );`,\n  },\n  {\n    name: \"Step\",\n    category: \"Buttons/Navigation\",\n    widgetSrc: \"buildhub.near/widget/components\",\n    description: \"Step component to show progress between steps.\",\n    requiredProps: {\n      totalSteps: \"Total number of steps\",\n      currentStep: \"Current step number\",\n    },\n    optionalProps: {\n      currentStatus:\n        \"Status of the current step (default, active, completed, error)\",\n    },\n    preview: (\n      <>\n        <div className=\"d-flex flex-column gap-3 mb-3\">\n          <Step totalSteps={5} currentStep={1} />\n          <Step totalSteps={4} currentStep={2} />\n          <Step totalSteps={3} currentStep={3} currentStatus={\"error\"} />\n        </div>\n      </>\n    ),\n    embedCode: `\n  const { Step } = VM.require(\"buildhub.near/widget/components\");\n\n  return (\n    <div className=\"d-flex flex-column gap-3 mb-3\">\n      <Step totalSteps={5} currentStep={1} />\n      <Step totalSteps={4} currentStep={2} />\n      <Step totalSteps={3} currentStep={3} currentStatus={\"error\"} />\n    </div>\n  );`,\n  },\n  {\n    name: \"Input Field\",\n    category: \"Fields\",\n    widgetSrc: \"buildhub.near/widget/components\",\n    description: \"Input field for text input\",\n    requiredProps: {\n      value: \"Current Value of input\",\n      onChange: \"Callback function to handle input change\",\n    },\n    optionalProps: {\n      label: \"Label for input\",\n      type: \"Type of input field\",\n      key: \"Key for input field\",\n      placeholder: \"Placeholder text\",\n      maxWidth: \"Max width for input field\",\n    },\n    preview: (\n      <>\n        <div className=\"d-flex flex-column gap-3 mb-3\">\n          <InputField\n            key={\"Input-Label\"}\n            label={\"Label\"}\n            placeholder={\"Placeholder\"}\n          />\n          <InputField\n            key={\"Input-Password\"}\n            label={\"Password\"}\n            placeholder={\"Password\"}\n            type={\"password\"}\n          />\n        </div>\n      </>\n    ),\n    embedCode: `\n  const { InputField } = VM.require(\"buildhub.near/widget/components\");\n\n  const [value, setValue] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  return (\n    <div className=\"d-flex flex-column gap-3 mb-3\">\n      <InputField\n      key={\"Input-Label\"}\n      label={\"Label\"}\n      placeholder={\"Placeholder\"}\n      value={value}\n      onChange={(e) => setValue(e. target.value)}\n      />\n      <InputField\n        key={\"Input-Password\"}\n        label={\"Password\"}\n        placeholder={\"Password\"}\n        type={\"password\"}\n        value={password}\n        onChange={(e) => setPassword(e.target.value)}\n      />\n    </div>\n  );`,\n  },\n  {\n    name: \"Checkbox\",\n    category: \"Fields\",\n    widgetSrc: \"buildhub.near/widget/components\",\n    description: \"Checkbox input for toggles\",\n    requiredProps: {\n      value: \"Current Value of checkbox\",\n      onChange: \"Callback function to handle input change\",\n    },\n    optionalProps: {\n      label: \"Label for checkbox\",\n    },\n    preview: (\n      <>\n        <div className=\"d-flex flex-column gap-3 mb-3\">\n          <Checkbox label=\"Checkbox\" />\n        </div>\n      </>\n    ),\n    embedCode: `\n  const { Checkbox } = VM.require(\"buildhub.near/widget/components\");\n\n  const [checked, setChecked] = useState(false);\n\n  return (\n    <div className=\"d-flex flex-column gap-3 mb-3\">\n      <Checkbox\n        label=\"Checkbox\"\n        value={checked}\n        onChange={(e) => setChecked(!checked)}\n      />\n    </div>\n  );`,\n  },\n  {\n    name: \"Textbox\",\n    category: \"Fields\",\n    widgetSrc: \"buildhub.near/widget/components\",\n    description: \"Textbox for text input\",\n    requiredProps: {\n      value: \"Current Value of text box\",\n      onChange: \"Callback function to handle input change\",\n    },\n    optionalProps: {\n      label: \"Label for text box\",\n    },\n    preview: (\n      <>\n        <TextBox label={\"Label\"} placeholder={\"Placeholder\"} />\n      </>\n    ),\n    embedCode: `\n  const { TextBox } = VM.require(\"buildhub.near/widget/components\");\n\n  const [value, setValue] = useState(\"\");\n\n  return (\n    <div>\n      <TextBox\n        label={\"Label\"}\n        value={value} \n        onChange={(e) => setValue(e.target.value)} \n        placeholder={\"Placeholder\"}\n      />\n    </div>\n  );`,\n  },\n  {\n    name: \"Text Editor\",\n    category: \"Fields\",\n    widgetSrc: \"buildhub.near/widget/components\",\n    description: \"Text editor for markdown input\",\n    requiredProps: {\n      value: \"Current Value of checkbox\",\n      onChange: \"Callback function to handle input change\",\n    },\n    optionalProps: {\n      maxWidth: \"Max width of text editor\",\n    },\n    preview: (\n      <>\n        <TextEditor />\n      </>\n    ),\n    embedCode: `\n  const { TextEditor } = VM.require(\"buildhub.near/widget/components\");\n\n  const [value, setValue] = useState(\"\");\n\n  return (\n    <div>\n      <TextEditor\n        value={value} \n        onChange={(e) => setValue(e.target.value)} \n      />\n    </div>\n  );`,\n  },\n  {\n    name: \"Upload Field\",\n    category: \"Fields\",\n    widgetSrc: \"buildhub.near/widget/components\",\n    description: \"Component for file uploads\",\n    optionalProps: {\n      background: \"Background color of upload filed (default true)\",\n    },\n    preview: (\n      <div className=\"d-flex flex-column gap-3 mb-3\">\n        <UploadField />\n        <UploadField background />\n      </div>\n    ),\n    embedCode: `\n  const { UploadField } = VM.require(\"buildhub.near/widget/components\");\n\n  return (\n    <div className=\"d-flex flex-column gap-3 mb-3\">\n      <UploadField />\n      <UploadField background />\n    </div>\n  );`,\n  },\n  {\n    name: \"Post\",\n    category: \"Modals\",\n    widgetSrc: \"buildhub.near/widget/components\",\n    description: \"Post preview component\",\n    requiredProps: {\n      accountId: \"AccountId of post creator\",\n      blockHeight: \"Block height of post\",\n    },\n    optionalProps: {\n      hideBorder: \"Hide bottom border\",\n      pinned: \"Toggle pinned post\",\n      hideMenu: \"Hide menu\",\n      hideButtons: \"Hide bottom buttons\",\n      content: \"Content to be shown\",\n      subscribe: \"\",\n      raw: \"Show raw MD\",\n      groupId: \"Group ID for post\",\n      indexKey: \"Index key for post\",\n      permissions: \"Permissions for post\",\n      fullPostLink: \"Link to full post\",\n    },\n    preview: (\n      <div className=\"d-flex flex-column gap-3 mb-3\">\n        <Post\n          accountId={\"itexpert120-contra.near\"}\n          blockHeight={109609914}\n          noBorder={true}\n        />\n      </div>\n    ),\n    embedCode: `\n  const { Post } = VM.require(\"buildhub.near/widget/components\");\n\n  return (\n    <div className=\"d-flex flex-column gap-3 mb-3\">\n      <Post\n        accountId={\"itexpert120-contra.near\"}\n        blockHeight={109609914}\n        noBorder={true}\n      />\n    </div>\n  );`,\n  },\n  {\n    name: \"User\",\n    category: \"Avatars/Users\",\n    widgetSrc: \"buildhub.near/widget/components\",\n    description: \"User component for user profile\",\n    requiredProps: {\n      accountId: \"AccountId of post creator\",\n      blockHeight: \"Block height of post\",\n    },\n    optionalProps: {\n      variant: \"Variant of user component (desktop, mobile)\",\n      pinned: \"Toggle pinned post\",\n      hideMenu: \"Hide menu\",\n      postType: \"Post type\",\n      link: \"Post link\",\n      isPremium: \"Show badge for premium users\",\n    },\n    preview: (\n      <div className=\"d-flex flex-column gap-3 mb-3\">\n        <User\n          accountId={\"itexpert120-contra.near\"}\n          variant={\"desktop\"}\n          isPremium={true}\n          blockHeight={1231231231}\n          hideMenu={true}\n        />\n        <User\n          accountId={\"build.sputnik-dao.near\"}\n          variant=\"mobile\"\n          blockHeight={\"now\"}\n          pinned={true}\n        />\n      </div>\n    ),\n    embedCode: `\n  const { User } = VM.require(\"buildhub.near/widget/components\");\n\n  return (\n    <div className=\"d-flex flex-column gap-3 mb-3\">\n      <User\n      accountId={\"itexpert120-contra.near\"}\n      variant={\"desktop\"}\n      isPremium={true}\n      blockHeight={1231231231}\n      hideMenu={true}\n      />\n      <User\n        accountId={\"build.sputnik-dao.near\"}\n        variant=\"mobile\"\n        blockHeight={\"now\"}\n        pinned={true}\n      />\n    </div>\n  );`,\n  },\n  {\n    name: \"Avatar\",\n    category: \"Avatars/Users\",\n    widgetSrc: \"buildhub.near/widget/components\",\n    description: \"Show user avatar\",\n    requiredProps: {\n      accountId: \"AccountId of post creator\",\n    },\n    optionalProps: {\n      variant: \"Variant of user component (desktop, mobile)\",\n    },\n    preview: (\n      <div className=\"d-flex flex-column gap-3 mb-3\">\n        <Avatar variant={\"desktop\"} />\n        <Avatar variant={\"mobile\"} accountId={\"build.sputnik-dao.near\"} />\n      </div>\n    ),\n    embedCode: `\n  const { Avatar } = VM.require(\"buildhub.near/widget/components\");\n\n  return (\n    <div className=\"d-flex flex-column gap-3 mb-3\">\n      <Avatar variant={\"desktop\"} />\n      <Avatar variant={\"mobile\"} accountId={\"build.sputnik-dao.near\"} />\n    </div>\n  );`,\n  },\n];\n\nconst renderProps = (props, optional) => {\n  return Object.entries(props || {}).map(([key, desc]) => {\n    return (\n      <tr key={key}>\n        <td>\n          <span className={`code prop-key${optional ? \" optional\" : \"\"}`}>\n            {key}\n          </span>\n        </td>\n        <td className=\"prop-desc\">\n          <Markdown text={desc} />\n        </td>\n      </tr>\n    );\n  });\n};\n\nconst renderComponent = (component, index) => {\n  const id = component.name.toLowerCase().replace(\" \", \"-\");\n  return (\n    <div className=\"component\">\n      <div className=\"anchor\" id={id}>\n        <a href={`#${id}`}>\n          <h2>{component.name}</h2>\n        </a>\n        <p>{component.description}</p>\n        <h3>Preview</h3>\n        {component.preview}\n        <h3>Component</h3>\n        <div className=\"d-flex flex-row flex-wrap justify-content-between mb-3\">\n          <div className=\"path font-monospace\">\n            <Widget\n              src=\"mob.near/widget/CopyButton\"\n              props={{\n                text: component.widgetSrc,\n                label: component.widgetSrc,\n              }}\n            />\n          </div>\n          <div className=\"source\">\n            <a\n              href={`/mob.near/widget/WidgetSource?src=${component.widgetSrc}`}\n              target=\"_blank\"\n              className=\"btn btn-outline-primary border-0\"\n            >\n              Source\n            </a>\n          </div>\n        </div>\n        <h3>Props</h3>\n        <table className=\"props table table-bordered mb-3\">\n          <thead>\n            <tr>\n              <th>Key</th>\n              <th>Description</th>\n            </tr>\n          </thead>\n          <tbody>\n            {renderProps(component.requiredProps)}\n            {renderProps(component.optionalProps, true)}\n          </tbody>\n        </table>\n        <h3>Example</h3>\n        <div className=\"embed-code\">\n          <Markdown text={`\\`\\`\\`jsx\\n${component.embedCode}\\n\\`\\`\\``} />\n          <div className=\"embed-copy\">\n            <Widget\n              src=\"mob.near/widget/CopyButton\"\n              props={{\n                text: component.embedCode,\n                className: \"btn btn-outline-light\",\n              }}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst Wrapper = styled.div`\n  h2,\n  h3,\n  label,\n  p {\n    color: white;\n  }\n\n  .component {\n    padding: 0.5em 12px;\n    padding-bottom: 0;\n    margin-bottom: 3em;\n\n    &:hover {\n      background: rgba(0, 0, 0, 0.03);\n    }\n\n    table,\n    th,\n    td {\n      background: #0b0c13;\n      color: #fff;\n    }\n\n    label {\n      font-size: 20px;\n    }\n\n    .code {\n      display: inline-flex;\n      line-height: normal;\n      border-radius: 0.3em;\n      padding: 0 4px;\n      border: 1px solid #ddd;\n      background: rgba(0, 0, 0, 0.03);\n      font-family: var(--bs-font-monospace);\n    }\n    .path {\n    }\n    .preview {\n      background-color: white;\n      padding: 12px;\n      border: 1px solid #eee;\n      border-radius: 12px;\n      pre {\n        margin-bottom: 0;\n      }\n    }\n    .props {\n      .prop-key {\n        background: #f7f7f7;\n        border: 1px solid #dddddd;\n        color: black;\n        border-radius: 8px;\n        padding: 2px 4px;\n        font-weight: 600;\n\n        &.optional {\n          font-weight: 400;\n        }\n      }\n      .prop-desc {\n        p {\n          margin-bottom: 0;\n          color: white;\n        }\n      }\n    }\n    .embed-code {\n      position: relative;\n\n      .embed-copy {\n        position: absolute;\n        top: 18px;\n        right: 10px;\n      }\n    }\n  }\n`;\n\nconst renderMenuItem = (c, i) => {\n  const prev = i ? components[i - 1] : null;\n  const res = [];\n  if (!prev || prev.category !== c.category) {\n    res.push(\n      <h5 className=\"category my-3 mb-2 text-white\" key={c.category}>\n        {c.category}\n      </h5>\n    );\n  }\n  const id = c.name.toLowerCase().replaceAll(\" \", \"-\");\n  res.push(\n    <div className=\"menu-item\" key={i}>\n      <a href={`#${id}`}>{c.name}</a>\n    </div>\n  );\n  return res;\n};\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(5, minmax(0, 1fr));\n\n  .main {\n    grid-column: span 4 / span 4;\n  }\n\n  .aside {\n    grid-column: span 1 / span 1;\n  }\n\n  @media screen and (max-width: 768px) {\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n  }\n`;\n\nreturn (\n  <Grid className=\"container-xl\">\n    <div className=\"aside\">\n      {components.map((component, index) => renderMenuItem(component, index))}\n    </div>\n    <Wrapper className=\"main\">\n      {components.map((component, index) => renderComponent(component, index))}\n    </Wrapper>\n  </Grid>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/buildhub.near/widget/components.Library", "fact_widget_deployments_id": "dd5d86d98dfeb91db64882513e118330", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 5}