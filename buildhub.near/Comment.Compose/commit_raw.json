{"tx_hash": "2xeFwor6PxtT6bpuChSgkTMQWTnrxvxwnJ4rtrmTXeiM", "action_id_social": "5LKVhQK75WMKwd5mRLZDX4ZQ8pi7SkKTVF4dn4JVsY7o-0-widget", "block_id": 113861837, "block_timestamp": "2024-03-01T04:56:17.352Z", "signer_id": "buildhub.near", "widget_name": "Comment.Compose", "source_code": "if (!context.accountId) {\n  return \"\";\n}\n\nconst item = props.item;\nconst rootItem = props.rootItem;\n\nif (!context.accountId) {\n  return \"\";\n}\n\nconst composeData = () => {\n  const data = {\n    post: {\n      comment: JSON.stringify(Object.assign({ item, rootItem }, state.content)),\n    },\n    index: {\n      comment: JSON.stringify({\n        key: item,\n        value: {\n          type: \"md\",\n        },\n      }),\n    },\n  };\n\n  const thisItem = {\n    type: \"social\",\n    path: `${context.accountId}/post/comment`,\n  };\n\n  const notifications = state.extractMentionNotifications(\n    state.content.text,\n    thisItem,\n  );\n\n  if (props.notifyAccountId && props.notifyAccountId !== context.accountId) {\n    notifications.push({\n      key: props.notifyAccountId,\n      value: {\n        type: \"comment\",\n        item,\n      },\n    });\n  }\n\n  if (notifications.length) {\n    data.index.notify = JSON.stringify(\n      notifications.length > 1 ? notifications : notifications[0],\n    );\n  }\n\n  const hashtags = state.extractHashtags(state.content.text);\n\n  if (hashtags.length) {\n    data.index.hashtag = JSON.stringify(\n      hashtags.map((hashtag) => ({\n        key: hashtag,\n        value: thisItem,\n      })),\n    );\n  }\n\n  return data;\n};\n\nState.init({\n  onChange: ({ content }) => {\n    State.update({ content });\n  },\n});\n\nreturn (\n  <>\n    <Widget\n      src=\"devs.near/widget/Common.Compose\"\n      props={{\n        placeholder: \"Reply\",\n        initialText: props.initialText,\n        onChange: state.onChange,\n        onHelper: ({ extractMentionNotifications, extractHashtags }) => {\n          State.update({ extractMentionNotifications, extractHashtags });\n        },\n        composeButton: (onCompose) => (\n          <CommitButton\n            disabled={!state.content || state.content.text === template}\n            force\n            className=\"btn rounded-3\"\n            style={{\n              backgroundColor: \"var(--yellow, #eca227)\",\n              color: \"var(--button-primary-color, #000)\",\n              fontSize: \"14px\",\n              fontWeight: \"500\",\n              padding: \"10px 16px\",\n            }}\n            data={composeData}\n            onCommit={() => {\n              onCompose();\n              props.onComment && props.onComment(state.content);\n            }}\n          >\n            Comment\n          </CommitButton>\n        ),\n        previewButton: () => (\n          <button\n            disabled={!state.content}\n            className=\"btn rounded-3 me-2\"\n            style={{\n              backgroundColor: \"var(--button-outline-bg, transparent)\",\n              color: \"var(--button-outline-color, #fff)\",\n              border: \"1px solid var(--stroke-color, rgba(255, 255, 255, 0.2)\",\n              fontSize: \"14px\",\n              fontWeight: \"500\",\n              padding: \"10px 16px\",\n            }}\n            onClick={() => State.update({ showPreview: !state.showPreview })}\n          >\n            Preview <i className=\"bi bi-eye\"></i>\n          </button>\n        ),\n      }}\n    />\n    {state.content && state.showPreview && (\n      <div className=\"px-3\">\n        <Widget\n          key=\"post-preview\"\n          src=\"buildhub.near/widget/Comment.Comment\"\n          props={{\n            item,\n            accountId: context.accountId,\n            content: state.content,\n            blockHeight: \"now\",\n          }}\n        />\n      </div>\n    )}\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/buildhub.near/widget/Comment.Compose", "fact_widget_deployments_id": "a5c45510671cc0bed453d3a34221c5c2", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}