{"tx_hash": "CV8Cs7DdaXkJWPnjPMVt2nqmQUZXXQhHchrhRk52GCwj", "action_id_social": "CVemaBbpRuNAeYvqtXmzV7zVjATVeFeeK3dbU5uTZ18E-0-widget", "block_id": 117392570, "block_timestamp": "2024-04-22T16:24:25.287Z", "signer_id": "buildhub.near", "widget_name": "Compose", "source_code": "const { Button } = VM.require(\"buildhub.near/widget/components\") || {\n  Button: () => <></>,\n};\nif (!context.accountId) {\n  return \"\";\n}\nconst indexKey = props.indexKey ?? \"main\";\nconst draftKey = props.draftKey ?? \"draft\";\nconst template = props.template || \"\";\nconst feed = props.feed;\nconst draft = Storage.privateGet(draftKey);\nconst groupId = props.groupId;\nif (draft === null) {\n  return \"\";\n}\nconst [initialText] = useState(draft || template);\nfunction checkAndAppendHashtag(input, target) {\n  if (input.toLowerCase().includes(`#${target.toLowerCase()}`)) {\n    return input;\n  } else {\n    return input + ` #${target}`;\n  }\n}\nconst composeData = () => {\n  const text = state.content.text;\n  const requiredHashtags = props.requiredHashtags || [\"build\"];\n  if (feed.hashtag) requiredHashtags.push(feed.hashtag.toLowerCase());\n  text = text + `\\n\\n`;\n  requiredHashtags.forEach((hashtag) => {\n    text = checkAndAppendHashtag(text, hashtag);\n  });\n  const data = {\n    post: {\n      main: JSON.stringify({ ...state.content, text }),\n    },\n    index: {\n      post: JSON.stringify({\n        key: indexKey,\n        value: {\n          type: \"md\",\n        },\n      }),\n    },\n  };\n  const item = {\n    type: \"social\",\n    path: `${context.accountId}/post/main`,\n  };\n  const notifications = state.extractMentionNotifications(text, item);\n  if (notifications.length) {\n    data.index.notify = JSON.stringify(\n      notifications.length > 1 ? notifications : notifications[0]\n    );\n  }\n  const hashtags = state.extractHashtags(text);\n  if (hashtags.length) {\n    data.index.hashtag = JSON.stringify(\n      hashtags.map((hashtag) => ({\n        key: hashtag,\n        value: item,\n      }))\n    );\n  }\n  return data;\n};\nState.init({\n  showPreview: false,\n  posted: false,\n  onChange: ({ content }) => {\n    State.update({ content });\n    Storage.privateSet(draftKey, content.text || \"\");\n  },\n});\nconst [showToast, setShowToast] = useState(false);\nreturn (\n  <>\n    <div\n      data-bs-theme=\"dark\"\n      style={{\n        background: \"var(--bg-2, #2b2f31)\",\n        borderRadius: \"1rem\",\n        border: \"1px solid var(--stroke-color, rgba(255, 255, 255, 0.2)\",\n        marginBottom: \"1rem\",\n      }}\n    >\n      <div>\n        <Widget\n          src=\"devs.near/widget/Common.Compose\"\n          props={{\n            placeholder: \"What's happening?\",\n            onChange: state.onChange,\n            initialText,\n            onHelper: ({ extractMentionNotifications, extractHashtags }) => {\n              State.update({ extractMentionNotifications, extractHashtags });\n            },\n            composeButton: (onCompose) => (\n              <CommitButton\n                disabled={!state.content || state.content.text === template}\n                force\n                className=\"btn rounded-3\"\n                style={{\n                  backgroundColor: \"var(--yellow, #eca227)\",\n                  color: \"var(--button-primary-color, #000)\",\n                  fontSize: \"14px\",\n                  fontWeight: \"500\",\n                  padding: \"10px 16px\",\n                }}\n                data={composeData}\n                onCommit={() => {\n                  onCompose();\n                  setShowToast(true);\n                  State.update({ content: { text: \"\", image: {} } });\n                }}\n              >\n                Post\n              </CommitButton>\n            ),\n            previewButton: () => (\n              <button\n                disabled={!state.content || state.content.text === template}\n                className=\"btn rounded-3 me-2\"\n                style={{\n                  backgroundColor: \"var(--button-outline-bg, transparent)\",\n                  color: \"var(--button-outline-color, #fff)\",\n                  border:\n                    \"1px solid var(--stroke-color, rgba(255, 255, 255, 0.2)\",\n                  fontSize: \"14px\",\n                  fontWeight: \"500\",\n                  padding: \"10px 16px\",\n                }}\n                onClick={() =>\n                  State.update({ showPreview: !state.showPreview })\n                }\n              >\n                Preview <i className=\"bi bi-eye\"></i>\n              </button>\n            ),\n          }}\n        />\n      </div>\n      {state.content && state.showPreview && (\n        <div className=\"px-3\">\n          <Widget\n            key=\"post-preview\"\n            src=\"buildhub.near/widget/components.Post\"\n            props={{\n              accountId: context.accountId,\n              content: state.content || { type: \"md\", text: \"\" },\n              blockHeight: \"now\",\n              noBorder: true,\n            }}\n          />\n        </div>\n      )}\n    </div>\n    <Widget\n      src=\"near/widget/DIG.Toast\"\n      props={{\n        title: \"Post Submitted Successfully\",\n        type: \"success\",\n        open: showToast,\n        onOpenChange: (v) => setShowToast(v),\n        trigger: <></>,\n        action: (\n          <Button\n            variant=\"primary\"\n            style={{ fontSize: 14 }}\n            onClick={() => setShowToast(false)}\n          >\n            dismiss\n          </Button>\n        ),\n        providerProps: { duration: 1000 },\n      }}\n    />\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/buildhub.near/widget/Compose", "fact_widget_deployments_id": "cd58b63d2b55c8174ca7f3bfc7480bf7", "inserted_timestamp": "2024-04-22T18:38:50.728Z", "modified_timestamp": "2024-04-22T18:38:50.728Z", "__row_index": 23}