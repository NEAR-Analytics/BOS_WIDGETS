{"tx_hash": "CzEdfvhP7qKHZAwaBfhyZbDq7mziS4mvz7mDtBTJFR66", "action_id_social": "5vSzfqNwbvDKhqhXvehUKLDoiZqVzyZyN1UFLHtXczX1-0-widget", "block_id": 109502069, "block_timestamp": "2024-01-03T16:31:20.932Z", "signer_id": "buildhub.near", "widget_name": "Compose", "source_code": "const draftKey = props.feed.key || \"draft\";\nconst draft = Storage.privateGet(draftKey);\n\nif (draft === null) {\n  return \"\";\n}\n\nconst [view, setView] = useState(\"editor\");\nconst [postContent, setPostContent] = useState(\"\");\nconst [hideAdvanced, setHideAdvanced] = useState(true);\nconst [labels, setLabels] = useState([]);\n\nsetPostContent(draft || props.template);\n\nfunction generateUID() {\n  const maxHex = 0xffffffff;\n  const randomNumber = Math.floor(Math.random() * maxHex);\n  return randomNumber.toString(16).padStart(8, \"0\");\n}\n\nfunction tagsFromLabels(labels) {\n  return labels.reduce(\n    (newLabels, label) => ({\n      ...newLabels,\n      [label]: \"\",\n    }),\n    {}\n  );\n}\n\nfunction checkAndAppendHashtag(input, target) {\n  if (input.toLowerCase().includes(`#${target.toLowerCase()}`)) {\n    return input;\n  } else {\n    return input + ` #${target}`;\n  }\n}\n\nconst postToCustomFeed = ({ feed, text, labels }) => {\n  const postId = generateUID();\n  if (!labels) labels = [];\n\n  labels = labels.map((label) => label.toLowerCase());\n  labels.push(feed.name.toLowerCase());\n\n  const requiredHashtags = [\"build\"];\n  requiredHashtags.push((feed.hashtag).toLowerCase());\n  requiredHashtags.push((feed.name).toLowerCase());\n\n  text = text + `\\n\\n`;\n\n  requiredHashtags.forEach((hashtag) => {\n    text = checkAndAppendHashtag(text, hashtag);\n  });\n\n  return Social.set(\n    {\n      // [feed.name]: {\n      //   [postId]: {\n      //     \"\": JSON.stringify({\n      //       type: \"md\",\n      //       text,\n      //       labels,\n      //     }),\n      //     metadata: {\n      //       type: feed.name,\n      //       tags: tagsFromLabels(labels),\n      //     },\n      //   },\n      // },\n      post: {\n        main: JSON.stringify({\n          type: \"md\",\n          text,\n          // tags: tagsFromLabels(labels),\n          // postType: feed.name,\n        }),\n      },\n      index: {\n        post: JSON.stringify({ key: \"main\", value: { type: \"md\" } }),\n        // every: JSON.stringify({ key: feed.name, value: { type: \"md\" } }),\n        hashtag: JSON.stringify(\n          requiredHashtags.map((hashtag) => ({\n            key: hashtag,\n            value: { type: \"social\", path: `${context.accountId}/post/main` },\n          }))\n        ),\n      },\n    },\n    {\n      force: true,\n      onCommit: () => {\n        console.log(`Commited ${feed}: #${postId}`);\n      },\n      onCancel: () => {\n        console.log(`Cancelled ${feed}: #${postId}`);\n      },\n    }\n  );\n};\n\nconst PostCreator = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 1.5rem;\n\n  padding: 1rem;\n  background: #23242b;\n  border-radius: 12px;\n\n  margin-bottom: 1rem;\n`;\n\nconst TextareaWrapper = styled.div`\n  display: grid;\n  vertical-align: top;\n  align-items: center;\n  position: relative;\n  align-items: stretch;\n\n  textarea {\n    display: flex;\n    align-items: center;\n    transition: all 0.3s ease;\n  }\n\n  textarea::placeholder {\n    padding-top: 4px;\n    font-size: 20px;\n  }\n\n  textarea:focus::placeholder {\n    font-size: inherit;\n    padding-top: 0px;\n  }\n\n  &::after,\n  textarea,\n  iframe {\n    width: 100%;\n    min-width: 1em;\n    height: unset;\n    min-height: 3em;\n    font: inherit;\n    margin: 0;\n    resize: none;\n    background: none;\n    appearance: none;\n    border: 0px solid #eee;\n    grid-area: 1 / 1;\n    overflow: hidden;\n    outline: none;\n  }\n\n  iframe {\n    padding: 0;\n  }\n\n  textarea:focus,\n  textarea:not(:empty) {\n    border-bottom: 1px solid #eee;\n    min-height: 5em;\n  }\n\n  &::after {\n    content: attr(data-value) \" \";\n    visibility: hidden;\n    white-space: pre-wrap;\n  }\n  &.markdown-editor::after {\n    padding-top: 66px;\n    font-family: monospace;\n    font-size: 14px;\n  }\n`;\n\nconst MarkdownEditor = `\n  * {\n    border: none !important;\n  }\n\n  .rc-md-editor {\n    background: #4f5055;\n    border-top: 1px solid #4f5055 !important; \n  }\n\n  .editor-container {\n    background: #4f5055;\n  }\n  \n  .drop-wrap {\n    top: -110px !important;\n    border-radius: 0.5rem !important;\n  }\n\n  .header-list {\n    display: flex;\n    align-items: center;\n  }\n\n  textarea {\n    background: #23242b !important;\n    color: #fff !important;\n\n    font-family: sans-serif !important;\n    font-size: 1rem;\n\n    border: 1px solid #4f5055 !important;\n    border-top: 0 !important;\n  }\n\n  .rc-md-navigation {\n    background: #23242b !important;\n    border: 1px solid #4f5055 !important;\n    border-top: 0 !important;\n    border-bottom: 0 !important;\n  \n    i {\n      color: #cdd0d5;\n    }\n  }\n\n  .rc-md-editor .editor-container .sec-md .input {\n    overflow-y: auto;\n    padding: 8px !important;\n    line-height: normal;\n  }\n`;\n\nconst Button = styled.button`\n  all: unset;\n  display: flex;\n  padding: 10px 20px;\n  justify-content: center;\n  align-items: center;\n  gap: 4px;\n\n  border-radius: 8px;\n  background: var(--Yellow, #ffaf51);\n\n  color: var(--black-100, #000);\n\n  /* Other/Button_text */\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n`;\n\nconst SecondaryButton = styled.button`\n  all: unset;\n  display: flex;\n  padding: 10px 20px;\n  justify-content: center;\n  align-items: center;\n  gap: 4px;\n\n  border-radius: 8px;\n  border: 1px solid var(--white-100, #fff);\n  background: transparent;\n  color: var(--white-100, #fff);\n\n  /* Other/Button_text */\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n\n  transition: all 300ms;\n\n  &:hover {\n    background: #fff;\n    color: #000;\n  }\n`;\n\nconst MarkdownPreview = styled.div`\n  * {\n    color: #b6b6b8 !important;\n  }\n`;\n\nconst LabelSelect = styled.div`\n  label {\n    color: #fff;\n  }\n\n  .rbt-input-multi {\n    background: #23242b !important;\n    color: #fff !important;\n  }\n\n  .rbt-token {\n    background: #202020 !important;\n    color: #fff !important;\n  }\n\n  .rbt-menu {\n    background: #23242b !important;\n    color: #fff !important;\n\n    .dropdown-item {\n      color: #fff !important;\n      transition: all 300ms;\n\n      &:hover {\n        background: #202020;\n      }\n    }\n  }\n`;\n\nreturn (\n  <PostCreator>\n    <div className=\"d-flex gap-3\">\n      <Widget\n        src=\"mob.near/widget/ProfileImage\"\n        props={{\n          accountId: context.accountId,\n          tooltip: false,\n          link: true,\n          style: imgWrapperStyle,\n          imageClassName: \"rounded-circle w-100 h-100\",\n        }}\n      />\n      <div\n        className=\"d-flex flex-column\"\n        style={{ color: \"white\", fontSize: 16 }}\n      >\n        <p className=\"fw-bold m-0\">{name}</p>\n        <p className=\"m-0\">@{context.accountId}</p>\n      </div>\n    </div>\n\n    <div style={{ border: \"none\" }}>\n      {view === \"editor\" ? (\n        <TextareaWrapper\n          className=\"markdown-editor\"\n          data-value={postContent || \"\"}\n          key={props.feed.key}\n        >\n          <Widget\n            src=\"mob.near/widget/MarkdownEditorIframe\"\n            props={{\n              initialText: postContent,\n              embedCss: MarkdownEditor,\n              onChange: (v) => {\n                setPostContent(v);\n                Storage.privateSet(draftKey, v || \"\");\n              },\n            }}\n          />\n        </TextareaWrapper>\n      ) : (\n        <MarkdownPreview>\n          <Widget\n            src=\"devhub.near/widget/devhub.components.molecule.MarkdownViewer\"\n            props={{ text: postContent }}\n          />\n        </MarkdownPreview>\n      )}\n    </div>\n\n    {/* {view === \"editor\" && (\n      <div style={{ color: \"white\" }}>\n        <div\n          className=\"d-flex justify-content-between align-items-center\"\n          onClick={() => setHideAdvanced(!hideAdvanced)}\n          style={{ cursor: \"pointer\" }}\n        >\n          <h6 className=\"fw-bold\">Advanced</h6>\n          <i className={`bi bi-chevron-${hideAdvanced ? \"up\" : \"down\"}`}></i>\n        </div>\n\n        <LabelSelect\n          className={`d-${hideAdvanced ? \"none\" : \"flex\"} flex-column mt-3`}\n        >\n          <Widget\n            src=\"discover.near/widget/Inputs.MultiSelect\"\n            props={{\n              label: \"Labels\",\n              placeholder: \"Near.social, Widget, NEP, Standard, Protocol, Tool\",\n              options: [\n                \"Near.social\",\n                \"Widget\",\n                \"NEP\",\n                \"Standard\",\n                \"Protocol\",\n                \"Tool\",\n              ],\n              labelKey: \"labels\",\n              value: labels,\n              onChange: setLabels,\n            }}\n          />\n        </LabelSelect>\n      </div>\n    )} */}\n\n    <div className=\"d-flex gap-3 align-self-end\">\n      <SecondaryButton\n        onClick={() => setView(view === \"editor\" ? \"preview\" : \"editor\")}\n      >\n        {view === \"editor\" ? (\n          <>\n            Preview <i className=\"bi bi-eye\"></i>\n          </>\n        ) : (\n          <>\n            Edit <i className=\"bi bi-pencil-square\"></i>\n          </>\n        )}\n      </SecondaryButton>\n      <Button\n        onClick={() =>\n          postToCustomFeed({ feed: props.feed, text: postContent, labels })\n        }\n      >\n        Post {props.feed.name}\n      </Button>\n    </div>\n  </PostCreator>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/buildhub.near/widget/Compose", "fact_widget_deployments_id": "99c1bd2ce74e19a3e95a809a0ce8d7a7", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 22}