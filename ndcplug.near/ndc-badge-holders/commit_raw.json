{"tx_hash": "8BybRyr7YknUYDjjHKByJCXSQtmQoMA6bpxwuJi9wnKE", "action_id_social": "J8y78P1qgLCdFXQdt8cqveH8TpnADBMS9nh7vv2jr2hd-0-widget", "block_id": 96463227, "block_timestamp": "2023-07-14T15:43:58.925Z", "signer_id": "ndcplug.near", "widget_name": "ndc-badge-holders", "source_code": "State.init({\n  read_index: 0,\n  tokens: [],\n  issuer: \"community.i-am-human.near\",\n  collectionName: \"OG\",\n  sbtList: [],\n});\n\n// issuer.regens.near, community.i-am-human.near, fractal.i-am-human.near, issuer.proofofvibes.near\n// add conditional dropdown\n// future add classes\n// add drop down\n// add custom\n\n// Load badge helper functions\nfunction loadSBTs() {\n  const res = fetch(\n    \"https://raw.githubusercontent.com/codingshot/ndc-landing/main/data/sbtList.json\"\n  );\n  return res.body && JSON.parse(res.body);\n}\nconst sbtList = loadSBTs();\nState.update({ sbtList: sbtList });\nif (!state.sbtList) {\n  return \"\u29d7 Loading  SBT List...\";\n}\n\n// if (state.read_index != -1) {\n//   const tokens = Near.view(\"registry.i-am-human.near\", \"sbt_tokens\", {\n//     issuer: state.issuer,\n//     from_token: 1 + state.read_index * 100,\n//     limit: 100,\n//   });\n\n//   if (tokens) {\n//     if (!tokens.length) {\n//       State.update({ read_index: -1 });\n//     } else {\n//       State.update({\n//         read_index: state.read_index + 1,\n//         tokens: [...state.tokens, ...tokens],\n//       });\n//     }\n//   }\n// }\n// Load hodlers helper functions\nfunction renderHolders() {}\nfunction loadHolders() {\n  if (state.read_index != -1) {\n    const tokens = Near.view(\"registry.i-am-human.near\", \"sbt_tokens\", {\n      issuer: state.issuer,\n      from_token: 1 + state.read_index * 100,\n      limit: 100,\n    });\n\n    if (tokens) {\n      if (!tokens.length) {\n        State.update({ read_index: -1 });\n      } else {\n        State.update({\n          read_index: state.read_index + 1,\n          tokens: [...state.tokens, ...tokens],\n        });\n      }\n    }\n  }\n  renderHolders();\n}\nloadHolders();\nconst handleIssuerChange = (e) => {\n  State.update({ issuer: e.target.value });\n  console.log(\"Issuer Address: \" + state.issuer);\n  loadHolders();\n};\n\nconst handleSbtChange = (e) => {\n  State.update({\n    issuer: sbtList\n      .filter((sbt) => sbt.title === e.target.value)\n      .map((el) => el.address)[0],\n  });\n  console.log(\"New Issuer based on SBT change \" + state.issuer);\n  loadHolders();\n}; // need to change this around\n\nconsole.log(tokens.length); // put in progress meter\n\nreturn (\n  <div>\n    <Widget\n      src=\"ndcplug.near/widget/NDC.Common.SimpleHeader\"\n      props={{ title: \"NDC OG SBT Holders\" }}\n    />\n    <label>Choose A NDC Community SBT Badge</label>\n    <div className=\"sbt\">\n      <select\n        className=\"form-select\"\n        aria-label=\"select asset\"\n        onChange={handleSbtChange}\n      >\n        <option selected disabled>\n          {\" \"}\n          Select a badge\n        </option>\n        {sbtList &&\n          sbtList.map((sbt) => (\n            <option value={sbt.title} selected={sbt.selected}>\n              {sbt.title}\n            </option>\n          ))}\n        // add receiver logic here\n      </select>\n    </div>\n    <div className=\"balance input-group\">\n      <input\n        style={{ maxWidth: \"100%\" }}\n        type=\"string\"\n        defaultValue={state.issuer} // feel like this wrong\n        value={state.issuer}\n        placeholder={state.issuer}\n        onChange={handleIssuerChange}\n      />\n    </div>\n    <ol>\n      {state.tokens.map((token) => (\n        <li class=\"mb-2\">\n          <Widget\n            src=\"chaotictempest.near/widget/AccountProfileCard\"\n            props={{ accountId: token.owner }}\n          />\n        </li>\n      ))}\n    </ol>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/ndcplug.near/widget/ndc-badge-holders", "fact_widget_deployments_id": "7523d0bcb7ba9f646db143810fcd694c", "inserted_timestamp": "2000-01-01T00:00:00.000Z", "modified_timestamp": "2000-01-01T00:00:00.000Z", "__row_index": 2}