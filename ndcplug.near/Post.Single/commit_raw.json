{"tx_hash": "EFwQBwrGoyysDEJn7BsRKdqZnq4H47EofjmF9qohvWHL", "action_id_social": "Bx665x4ty2DVFbGAU3Jm2xv8VUCqJqVd6VR93R8bBguu-0-widget", "block_id": 97839778, "block_timestamp": "2023-08-01T12:38:22.068Z", "signer_id": "ndcplug.near", "widget_name": "Post.Single", "source_code": "// const accountId = props.accountId;\n// maybe add testing variable\n// const blockHeight =\n//   props.blockHeight === \"now\" ? \"now\" : parseInt(props.blockHeight);\nconst blockHeight = 97835986;\nconst accountId = \"readylayerone.near\";\nconst content =\n  props.content ??\n  JSON.parse(Social.get(`${accountId}/post/main`, blockHeight) ?? \"null\");\nconst subscribe = !!props.subscribe;\nconst raw = !!props.raw;\n\nconst notifyAccountId = accountId;\nconst item = {\n  type: \"social\",\n  path: `${accountId}/post/main`,\n  blockHeight,\n};\nconst formatDate = (timestamp) => {\n  const date = new Date(timestamp);\n  const month = date.getMonth() + 1; // Months are zero-based, so we add 1\n  const day = date.getDate();\n  const year = date.getFullYear();\n  return `${month}/${day}/${year}`;\n};\nconst formattedDate = formatDate(Date.now());\n\nconst nftTitle = accountId + \" \" + formatDate;\nconst nftDescription =\n  props.nftDescription ?? \"BOS minting powered by GenaDrop\";\nState.init({\n  receiver: accountId,\n  toastMessage: \"\",\n  showAlert: false,\n  description: nftDescription,\n  title: nftTitle,\n  image,\n  content,\n});\n\nconst link = `#/mob.near/widget/MainPage.Post.Page?accountId=${accountId}&blockHeight=${blockHeight}`;\n\nconst nftMint = () => {\n  //   if (!state.image.cid) {\n  //     return;\n  //   }\n  if (!accountId) {\n    console.log(\"Please login\"); // add share dogvwallet\n    State.update({\n      showAlert: true,\n      toastMessage: \"Please log in before continuing\",\n    });\n    setTimeout(() => {\n      State.update({\n        showAlert: false,\n      });\n    }, 3000);\n  } else if (!state.title) {\n    console.log(\"Please Enter title\");\n    State.update({\n      showAlert: true,\n      toastMessage: \"Please enter a title for the NFT\",\n    });\n\n    setTimeout(() => {\n      State.update({\n        showAlert: false,\n      });\n    }, 3000);\n  } else if (!state.description) {\n    State.update({\n      showAlert: true,\n      toastMessage: \"Please enter a description for the NFT\",\n    });\n    setTimeout(() => {\n      State.update({\n        showAlert: false,\n      });\n    }, 3000);\n  } else {\n    const metadata = {\n      name: state.title,\n      description: state.description,\n      properties: [],\n      image: `${state.image.url}`,\n\n      //   image: `ipfs://${state.image.ipfs_cid}`,\n      //   image: `ipfs://${state.image.cid}`,\n      //   image: `ipfs://${state.imageCid}`,\n    };\n    console.log(\"come\", metadata);\n    asyncFetch(\"https://ipfs.near.social/add\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n      },\n      body: metadata,\n    }).then((res) => {\n      console.log(\"GO ON SOUN\", res);\n      const cid = res.body.cid;\n      const gas = 200000000000000;\n      const deposit = 10000000000000000000000;\n      Near.call([\n        {\n          contractName: \"nft.genadrop.near\",\n          methodName: \"nft_mint\",\n          args: {\n            token_id: `${Date.now()}`,\n            metadata: {\n              title: state.title,\n              description: state.description,\n              //   media: `https://ipfs.io/ipfs/${state.imageCid}`,\n              // media: `https://ipfs.io/ipfs/${state.image.cid}`,\n              media: `${state.content.image}`,\n\n              //   media: `https://ipfs.io/ipfs/${state.image.ipfs_cid}`,\n              reference: `ipfs://${cid}`,\n              //   reference: `ipfs://${state.cid}`,\n            },\n            receiver_id: accountId,\n          },\n          gas: gas,\n          deposit: deposit,\n        },\n      ]);\n    });\n  }\n};\n\nreturn (\n  <div className=\"border-bottom pt-3 pb-1\">\n    <div className=\"d-flex flex-row align-items-center\">\n      <div className=\"flex-grow-1 text-truncate\">\n        <a\n          className=\"text-dark text-decoration-none text-truncate\"\n          href={`#/mob.near/widget/ProfilePage?accountId=${accountId}`}\n        >\n          <Widget\n            src=\"mob.near/widget/Profile.ShortInlineBlock\"\n            props={{ accountId, tooltip: true }}\n          />\n        </a>\n      </div>\n      <span className=\"text-nowrap text-muted\">\n        <small>\n          {blockHeight === \"now\" ? (\n            \"now\"\n          ) : (\n            <a className=\"text-muted\" href={link}>\n              <Widget src=\"mob.near/widget/TimeAgo\" props={{ blockHeight }} />\n            </a>\n          )}\n        </small>\n        {blockHeight !== \"now\" && (\n          <span>\n            <a\n              href=\"javascript:void\"\n              className=\"link-secondary ms-2\"\n              data-bs-toggle=\"dropdown\"\n              aria-expanded=\"false\"\n            >\n              <i className=\"fs-6 bi bi-three-dots\" />\n            </a>\n            <ul className=\"dropdown-menu\">\n              <li className=\"dropdown-item\">\n                <a\n                  className=\"link-dark text-decoration-none\"\n                  href={`${link}&raw=true`}\n                >\n                  <i className=\"bi bi-filetype-raw\" /> View raw markdown source\n                </a>\n              </li>\n              <li className=\"dropdown-item\">\n                <a className=\"link-dark text-decoration-none\" onClick={nftMint}>\n                  <i className=\"bi bi-gift\" /> Send This Post to Author as NFT\n                </a>\n              </li>\n              <li>\n                <Widget\n                  src=\"mob.near/widget/MainPage.Common.HideAccount\"\n                  props={{ accountId }}\n                />\n              </li>\n              {props.flagItem && (\n                <li>\n                  <Widget\n                    src=\"mob.near/widget/MainPage.Common.FlagContent\"\n                    props={{\n                      item: props.flagItem,\n                      label: `Flag ${postType} for moderation`,\n                    }}\n                  />\n                </li>\n              )}\n            </ul>\n          </span>\n        )}\n      </span>\n    </div>\n    <div className=\"mt-3 text-break\">\n      <Widget\n        src=\"mob.near/widget/MainPage.Post.Content\"\n        props={{ content, raw }}\n      />\n    </div>\n    {blockHeight !== \"now\" && (\n      <div className=\"mt-1 d-flex justify-content-between\">\n        <div className=\"me-4\">\n          <Widget\n            src=\"mob.near/widget/CommentButton\"\n            props={{\n              onClick: () =>\n                !state.showReply && State.update({ showReply: true }),\n            }}\n          />\n        </div>\n        <div className=\"me-4\">\n          <Widget\n            src=\"mob.near/widget/RepostButton\"\n            props={{\n              notifyAccountId,\n              item,\n            }}\n          />\n        </div>\n        <div className=\"me-4\">\n          <Widget\n            src=\"mob.near/widget/LikeButton\"\n            props={{\n              notifyAccountId,\n              item,\n            }}\n          />\n        </div>\n        <div>\n          <Widget\n            src=\"mob.near/widget/MainPage.Post.ShareButton\"\n            props={{ accountId, blockHeight, postType: \"post\" }}\n          />\n        </div>\n      </div>\n    )}\n    <div className=\"mt-3 ps-5\">\n      {state.showReply && (\n        <div className=\"mb-2\">\n          <Widget\n            src=\"mob.near/widget/MainPage.Comment.Compose\"\n            props={{\n              notifyAccountId,\n              item,\n              onComment: () => State.update({ showReply: false }),\n            }}\n          />\n        </div>\n      )}\n      <Widget\n        src=\"mob.near/widget/MainPage.Comment.Feed\"\n        props={{\n          item,\n          highlightComment: props.highlightComment,\n          limit: props.commentsLimit,\n          subscribe,\n          raw,\n        }}\n      />\n    </div>\n  </div>\n);\n", "metadata": {"name": "Post w NFT Minter", "platform": "jutsu.ai"}, "branch": {"draft": null}, "widget_modules_used": null, "widget_url": "https://near.social/#/ndcplug.near/widget/Post.Single", "fact_widget_deployments_id": "a46a8361d613e3aaa0c16eb5b7c474be", "inserted_timestamp": "2023-08-01T14:35:40.563Z", "modified_timestamp": "2023-08-01T14:35:40.563Z", "__row_index": 1}