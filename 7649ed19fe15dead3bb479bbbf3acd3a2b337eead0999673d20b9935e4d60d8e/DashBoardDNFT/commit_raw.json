{"tx_hash": "BZdg82SZ3o8tWa9cGK3xv3YuMV7YrrojeYEF8GnCc5Gw", "action_id_social": "HVG5K5Ff8yqABZfxAtzkEZR3X9jsPv8oXWc17zQfR3N5-0-widget", "block_id": 101750974, "block_timestamp": "2023-09-23T04:56:30.710Z", "signer_id": "7649ed19fe15dead3bb479bbbf3acd3a2b337eead0999673d20b9935e4d60d8e", "widget_name": "DashBoardDNFT", "source_code": "let accountId = context.accountId;\nconst profile = socialGetr(`${accountId}/profile`);\n\n// check My dNFT\n\nconst contractId = \"nft.genadrop.near\";\n\nif (!contractId) {\n  return `Missing prop \"contractId\"`;\n}\n\nif (!accountId) {\n  return `Missing prop \"accountId\"`;\n}\n\nconst nfts = Near.view(contractId, \"nft_tokens_for_owner\", {\n  account_id: accountId,\n  from_index: \"0\",\n  limit: 200,\n});\n\nif (!nfts) {\n  return \"\";\n}\n\nconst size = \"3em\";\n\n// get My near Posts\nState.init({\n  isInit: false,\n  posts: [],\n});\n\nconst getMyPosts = () => {\n  asyncFetch(\n    \"https://queryapi-hasura-graphql-24ktefolwq-ew.a.run.app/v1/graphql\",\n    {\n      method: \"POST\",\n      headers: { \"x-hasura-role\": \"nearpavel_near\" },\n      body: JSON.stringify({\n        query: `query MyPosts {\n          nearpavel_near_social_posts_posts(where: {account_id: {_eq: \"${accountId}\"}}, order_by: {block_timestamp: desc}) {\n          account_id\n          block_height\n          block_timestamp\n          content\n          receipt_id\n        }\n      }`,\n      }),\n    }\n  ).then((postRes) => {\n    if (postRes.body.errors === undefined) {\n      State.update({\n        isInit: true,\n        posts: postRes.body.data.nearpavel_near_social_posts_posts,\n      });\n    }\n  });\n};\n\nif (state.isInit === false) {\n  getMyPosts();\n}\n\n// get my near posts likes\n\nlet heartCount = 0;\nconst likesByUsers = {};\n\nconst Post = state.posts.map((post) => {\n  const block_height = post.block_height;\n\n  const item = {\n    type: \"social\",\n    path: `${accountId}/post/main`,\n    blockHeight: block_height,\n  };\n\n  const likes = Social.index(\"like\", item);\n\n  (likes || []).forEach((like) => {\n    if (like.value.type === \"like\") {\n      heartCount += 1;\n      likesByUsers[like.accountId] = like;\n    } else if (like.value.type === \"unlike\") {\n      heartCount -= 1;\n      delete likesByUsers[like.accountId];\n    }\n  });\n});\n\n// get My near Social\n\nconst data = Social.getr(`${accountId}/widget/*`, \"final\", {\n  subscribe: true,\n});\n\nconst widgetEntries =\n  data === undefined || data === null ? [] : Object.entries(data);\n\n// Coin Price\nconst resCoin = fetch(\n  \"https://api.coingecko.com/api/v3/simple/price?ids=bitcoin%2Clitecoin%2Cethereum%2Cdogecoin&vs_currencies=usd\"\n);\nconst coinPrice = resCoin.body;\n\nconst Container = styled.div`\n  padding: 30px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n`;\n\nconst SmallContainer = styled.div`\n    display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n`;\n\nconst CenteredDiv = styled.div`\ndisplay: flex;\n  flex-direction: column;\n  border: 1px solid #828282; \n \n  border-radius: 10px; \n  padding: 10px;\n  margin: 10px; \n  text-align: center;\n   & > *:not(:last-child) {\n    margin-bottom: 10px;\n  }\n  \n  transition: background-color 0.3s ease; \n   &:hover {\n    background-color: #6CE89F; /* Change background color to gray on hover */\n  }\n`;\n\nconst FlexContainer = styled.div`\n  display: grid;\n  grid-template-columns: 300px 3fr; \n  \n`;\n\nconst ImageUploadCard = styled.div`\ndisplay:flex;\nflex-flow: column nowrap;\nalign-items: center;\n  width:80%;\n  border: 2px dashed #0d99ff;\n  border-radius: 1rem;\n  box-shadow: 4px 4px 20px 6px rgba(0,0,0,.2);\n  margin:30px auto;\n  padding:1.5rem;\n  text-align: center;\n`;\nconst Main = styled.div`\nposition:relative;\n  font-family: \"SF Pro Display\",sans-serif;\n`;\n\nconst Heading = styled.p`\n  margin: 10px auto 10px auto;\n  font-size: 1em;\n  color:#0f1d40;\n  width:60%;\n  text-align: center;\n  font-family: \"SF Pro Display\",sans-serif;\n`;\n\nconst Text = styled.p`\nfont-size: .9rem;\ncolor: #525c76;\nline-height:1.rem;\nmargin: 3px;\n`;\n\nconst Card = styled.div`\n\npadding: 1em;\nborder: 1px solid #ccc;\ngap: 2em;\nmargin: 10px auto;\nborder-radius: .7em;\n`;\n\nconst ImageCard = styled.div`\n\n  box-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2);\n  height:fit-content;\n  max-height:500px;\n  width: 90%;\n  max-width: 500px;\n  border-radius: 1rem;\n  &>img{\n  object-fit: contain;\n  }\n`;\n\nconst Input = styled.input`\n  display: block;\n  padding:.5em;\n  width:100%;\n  border: 1px solid #e5e8eb;\n  border-radius: 10px;\n  outline: none;\n  background: #f4f5f6;\n  color: #525c76;\n  :focus{\n    border:1px solid #0d99ff;\n  }\n  ::placeholder {\n    color: palevioletred;\n  }\n`;\n\nconst TextArea = styled.textarea`\n  display: block;\n  padding:.5em;\n  width:100%;\n  border: 1px solid #e5e8eb;\n  border-radius: 10px;\n  outline: none;\n  background: #f4f5f6;\n  color: #525c76;\n  :focus{\n    border:1px solid #0d99ff;\n  }\n`;\n\nconst ParentDiv = styled.div`\n   border-radius: 10px; \n  justify-content: space-between;\n  align-items: center;\n  padding: 10px; \n  border: 1px solid #ccc; \n`;\n\nconst ChildDiv = styled.div`\n  margin-top: 20px;\n \n   border-top: 3px solid #ccc; \n`;\n\nconst SpanDiv = styled.div`\n  margin-top: 5px;\n   font-size: 1.25rem; \n`;\n\nconst DnftDiv = styled.div`\n  margin-top: 10px;\n  \n`;\n\nconst StyledImage = styled.img`\n  object-fit: cover;\n  max-width: 240px;\n  max-height: 240px;\n  overflow-wrap: break-word;\n  border-radius: 10px; /* Rounded corners, you can adjust the value */\n`;\n\nconst FlexColumnContainer = styled.div`\n  display: flex;\n   border-bottom: 1px solid #c5c5c5;\n  flex-direction: column;\n  align-items: center; \n  text-align: center;\n \n`;\n\nreturn (\n  <Container>\n    <div className=\"container\">\n      <div className=\"content\">\n        <FlexContainer>\n          <ParentDiv>\n            <Widget src=\"7649ed19fe15dead3bb479bbbf3acd3a2b337eead0999673d20b9935e4d60d8e/widget/Profile\" />\n            <div className=\"mt-2\">Near Social Posts: {state.posts.length}</div>\n            <div className=\"mt-2\">BOS Components: {widgetEntries.length}</div>\n\n            <ChildDiv>\n              <SpanDiv>My dNFT</SpanDiv>\n              <DnftDiv>\n                <div className=\"d-flex gap-1 flex-wrap\">\n                  {nfts\n                    .filter((nft) => {\n                      const metadata = nft.metadata;\n                      if (metadata && metadata.description) {\n                        // Split the description into words and check if the first word is 'dnft'\n                        const words = metadata.description.split(\" \");\n                        return words[0] === \"dnft:\";\n                      }\n                      return false; // Exclude NFTs without metadata or description\n                    })\n                    .map((nft) => (\n                      <a\n                        className=\"text-decoration-none\"\n                        href={`https://app.mynearwallet.com/nft-detail/nft.genadrop.near/${nft.token_id}`}\n                      >\n                        <Widget\n                          src=\"mob.near/widget/NftImage\"\n                          props={{\n                            nft: { tokenId: nft.token_id, contractId },\n                            style: {\n                              width: size,\n                              height: size,\n                              objectFit: \"cover\",\n                              minWidth: 90,\n                              minHeight: 90,\n                              maxWidth: size,\n                              maxHeight: size,\n                              overflowWrap: \"break-word\",\n                            },\n                            thumbnail: \"thumbnail\",\n                            className: \"rounded\",\n                            fallbackUrl:\n                              \"https://ipfs.near.social/ipfs/bafkreihdiy3ec4epkkx7wc4wevssruen6b7f3oep5ylicnpnyyqzayvcry\",\n                            alt: `NFT ${contractId} ${nft.token_id}`,\n                          }}\n                        />\n                      </a>\n                    ))}\n                </div>\n              </DnftDiv>\n            </ChildDiv>\n          </ParentDiv>\n          <div>\n            <Widget\n              src=\"7649ed19fe15dead3bb479bbbf3acd3a2b337eead0999673d20b9935e4d60d8e/widget/Headers\"\n              props={{ topText: \"My Dashboard as\", bottomText: \"dNFT\" }}\n            />\n\n            <Main className=\"container-fluid\">\n              <div>\n                {/* Weather DNFT Component */}\n                <Widget\n                  src=\"7649ed19fe15dead3bb479bbbf3acd3a2b337eead0999673d20b9935e4d60d8e/widget/WeatherDNFT\"\n                  props={{ nfts: nfts }}\n                />\n                {/* Coin DNFT Component */}\n                <Widget\n                  src=\"7649ed19fe15dead3bb479bbbf3acd3a2b337eead0999673d20b9935e4d60d8e/widget/CoinDNFT\"\n                  props={{ nfts: nfts }}\n                />\n                {/* Social DNFT Component */}\n                <Widget\n                  src=\"7649ed19fe15dead3bb479bbbf3acd3a2b337eead0999673d20b9935e4d60d8e/widget/NearSocialDNFT\"\n                  props={{ nfts: nfts }}\n                />\n                {/* Social Heart DNFT Component */}\n                <Widget\n                  src=\"7649ed19fe15dead3bb479bbbf3acd3a2b337eead0999673d20b9935e4d60d8e/widget/NearSocialHeartDNFT\"\n                  props={{ nfts: nfts }}\n                />\n                {/* BOS Component DNFT Component */}\n                <Widget\n                  src=\"7649ed19fe15dead3bb479bbbf3acd3a2b337eead0999673d20b9935e4d60d8e/widget/NearComponentDNFT\"\n                  props={{ nfts: nfts }}\n                />\n              </div>\n            </Main>\n          </div>\n        </FlexContainer>\n      </div>\n    </div>\n  </Container>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/7649ed19fe15dead3bb479bbbf3acd3a2b337eead0999673d20b9935e4d60d8e/widget/DashBoardDNFT", "fact_widget_deployments_id": "3a544b8ec64481bdd4bed95b561f3615", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}