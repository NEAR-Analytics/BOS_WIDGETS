{"tx_hash": "AdufUm4M6AXN16hwLq9EgfCgXzzm5vEdVgDANpQRuAY6", "action_id_social": "En2wTFgBJnTMv7WfHdLfZCTyt3EK4JThgjmkCD4W1JZa-0-widget", "block_id": 101750876, "block_timestamp": "2023-09-23T04:54:38.144Z", "signer_id": "7649ed19fe15dead3bb479bbbf3acd3a2b337eead0999673d20b9935e4d60d8e", "widget_name": "CoinDNFT", "source_code": "let accountId = context.accountId;\nconst size = \"3em\";\n\nconst contractId = \"nft.genadrop.near\";\n\nif (!contractId) {\n  return `Missing prop \"contractId\"`;\n}\n\nif (!accountId) {\n  return `Missing prop \"accountId\"`;\n}\n\nconst nfts = Near.view(contractId, \"nft_tokens_for_owner\", {\n  account_id: accountId,\n  from_index: \"0\",\n  limit: 200,\n});\n\nif (!nfts) {\n  return \"\";\n}\n\nconst Card = styled.div`\n  padding: 1em;\n  border: 1px solid #ccc;\n  gap: 2em;\n  margin: 10px auto;\n  border-radius: 0.7em;\n`;\n\nconst SmallContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n\n`;\n\nconst CenteredDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  border: 1px solid #828282;\n\n  border-radius: 10px;\n  padding: 10px;\n  margin: 10px;\n  text-align: center;\n  & > *:not(:last-child) {\n    margin-bottom: 10px;\n  }\n\n  transition: background-color 0.3s ease;\n  &:hover {\n    background-color: #6ce89f; /* Change background color to gray on hover */\n  }\n`;\n\nconst StyledImage = styled.img`\n  object-fit: cover;\n  max-width: 240px;\n  max-height: 240px;\n  overflow-wrap: break-word;\n  border-radius: 10px; /* Rounded corners, you can adjust the value */\n`;\n\nconst FlexColumnContainer = styled.div`\n  display: flex;\n  border-bottom: 1px solid #c5c5c5;\n  flex-direction: column;\n  align-items: center;\n  text-align: center;\n`;\n// Coin Price\nconst resCoin = fetch(\n  \"https://api.coingecko.com/api/v3/simple/price?ids=bitcoin%2Clitecoin%2Cethereum%2Cdogecoin&vs_currencies=usd\"\n);\nconst coinPrice = resCoin.body;\nconst dogePrice = coinPrice.dogecoin.usd;\nconst bitcoinPrice = coinPrice.bitcoin.usd;\nconst ethereumPrice = coinPrice.ethereum.usd;\nconst litecoin = coinPrice.litecoin.usd;\n\nreturn (\n  <Card>\n    <h4>\ud83d\udcb0 Coin dNFT</h4>\n\n    <SmallContainer>\n      {nfts\n        .filter((nft) => {\n          const metadata = nft.metadata;\n          if (metadata && metadata.description) {\n            const words = metadata.description.split(\" \");\n            return (\n              words[0] === \"dnft:\" && words[1] === \"CoinPrice:\" && words[2]\n            );\n          }\n          return false;\n        })\n        .map((nft) => {\n          const metadata = nft.metadata;\n\n          const description = metadata.description;\n\n          const metadataStart = description.indexOf(\"{\");\n\n          const metadataString = description.slice(metadataStart);\n\n          const showMetadata = JSON.parse(metadataString);\n\n          const words = metadata.description.split(\" \");\n          const coinPriceIndex = words.indexOf(\"CoinPrice:\");\n          const title = metadata.title;\n\n          const coinName =\n            coinPriceIndex !== -1 ? words[coinPriceIndex + 1] : \"\";\n\n          const cid1 = showMetadata.img1.cid;\n          const cid2 = showMetadata.img2.cid;\n          const cid3 = showMetadata.img3.cid;\n\n          const text1 = showMetadata.text1;\n          const text2 = showMetadata.text2;\n          const text3 = showMetadata.text3;\n\n          const num1 = showMetadata.num1.replace(/,/g, \"\");\n          const num2 = showMetadata.num2.replace(/,/g, \"\");\n          const num3 = showMetadata.num3.replace(/,/g, \"\");\n          console.log(Number(coinPrice[coinName].usd));\n          console.log(Number(num3));\n\n          return (\n            <a\n              className=\"text-decoration-none text-black\"\n              href={`https://www.coingecko.com/en/coins/${coinName}`}\n            >\n              <CenteredDiv key={nft.token_id}>\n                {Number(coinPrice[coinName].usd) >= Number(num3) ? (\n                  <FlexColumnContainer>\n                    <StyledImage\n                      src={`https://ipfs.near.social/ipfs/${cid3}`}\n                      alt=\"uploaded\"\n                    />\n                    <span className=\"mt-2\">{coinName}</span>\n                    <h3>{text3}</h3>\n                  </FlexColumnContainer>\n                ) : Number(coinPrice[coinName].usd) >= Number(num2) ? (\n                  <FlexColumnContainer>\n                    <StyledImage\n                      src={`https://ipfs.near.social/ipfs/${cid2}`}\n                      alt=\"uploaded\"\n                    />\n                    <span className=\"mt-2\">{coinName}</span>\n                    <h3>{text2}</h3>\n                  </FlexColumnContainer>\n                ) : Number(coinPrice[coinName].usd) >= Number(num1) ? (\n                  <FlexColumnContainer>\n                    <StyledImage\n                      src={`https://ipfs.near.social/ipfs/${cid1}`}\n                      alt=\"uploaded\"\n                    />\n                    <span className=\"mt-2\">{coinName}</span>\n                    <h3>{text1}</h3>\n                  </FlexColumnContainer>\n                ) : (\n                  <FlexColumnContainer>\n                    <Widget\n                      src=\"mob.near/widget/NftImage\"\n                      props={{\n                        nft: {\n                          tokenId: nft.token_id,\n                          contractId,\n                        },\n                        style: {\n                          width: size,\n                          height: size,\n                          objectFit: \"cover\",\n                          minWidth: 270,\n                          minHeight: 250,\n                          maxWidth: size,\n                          maxHeight: size,\n                          overflowWrap: \"break-word\",\n                        },\n                        thumbnail: \"thumbnail\",\n                        className: \"rounded\",\n                        fallbackUrl:\n                          \"https://ipfs.near.social/ipfs/bafkreihdiy3ec4epkkx7wc4wevssruen6b7f3oep5ylicnpnyyqzayvcry\",\n                        alt: `NFT ${contractId} ${nft.token_id}`,\n                      }}\n                    />\n                    <span className=\"mt-2\">{coinName}</span>\n                    <h3>{title}</h3>\n                  </FlexColumnContainer>\n                )}\n\n                <span>{showMetadata.description}</span>\n                <span>{coinPrice[coinName].usd}$</span>\n              </CenteredDiv>\n            </a>\n          );\n        })}\n    </SmallContainer>\n  </Card>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/7649ed19fe15dead3bb479bbbf3acd3a2b337eead0999673d20b9935e4d60d8e/widget/CoinDNFT", "fact_widget_deployments_id": "562603ca0292da2246c8726e0a464c3d", "inserted_timestamp": "2023-09-23T06:35:38.319Z", "modified_timestamp": "2023-09-23T06:35:38.319Z", "__row_index": 10}