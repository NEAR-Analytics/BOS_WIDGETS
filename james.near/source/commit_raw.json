{"tx_hash": "EvigVPkjUKHauCmxi2owmbAU2ugCgZKktioNiF4vskSv", "action_id_social": "WkjpVCFKKmhozNapuf5P6GKvTtpqk5vujBikcHXuPSF-0-widget", "block_id": 105262472, "block_timestamp": "2023-11-09T01:39:11.013Z", "signer_id": "james.near", "widget_name": "source", "source_code": "const COMMIT_DISPLAY_LIMIT = 5;\n\nState.init({\n  showAllCommits: false,\n  selectedTab: \"data\",\n  blockHeight: props.blockHeight ? parseInt(props.blockHeight) : null,\n});\n\nconst current = Social.get(props.path, state.blockHeight);\n\nconst historyBlocksRequest = Social.keys(`${props.path}`, \"final\", {\n  return_type: \"History\",\n});\n\nif (historyBlocksRequest === null || current === null) return \"Loading...\";\n\nconst [accountId, type, name] = props.path.split(\"/\");\nlet blocksChanges = historyBlocksRequest[accountId]?.[type]?.[name];\nif (blocksChanges) blocksChanges = blocksChanges?.sort((a, b) => b - a);\nif (!state.blockHeight) State.update({ blockHeight: blocksChanges[0] });\nconst index = blocksChanges.findIndex((el) => el == state.blockHeight);\n\nfunction getTimestampFromBlockHeight(blockHeight) {\n  const block = Near.block(blockHeight);\n  const date = new Date(block.header.timestamp_nanosec / 1e6);\n  return date.toLocaleString();\n}\n\nconst Wrapper = styled.div`\n  display: grid;\n  grid-template-columns: 200px minmax(0, 1fr);\n  gap: 30px;\n\n  @media (max-width: 980px) {\n    grid-template-columns: minmax(0, 1fr);\n  }\n`;\n\nconst Header = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  gap: 20px;\n  min-height: 30px;\n  margin-bottom: 30px;\n`;\n\nconst Sidebar = styled.div``;\n\nconst Commits = styled.div`\n  background: var(--sand2);\n  border-radius: 6px;\n  overflow: hidden;\n  margin-bottom: 16px;\n\n  button {\n    all: unset;\n    box-sizing: border-box;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    border-bottom: 1px solid var(--sand5) !important;\n    cursor: pointer;\n    padding: 10px 16px;\n    background: none;\n\n    &:hover,\n    &:active,\n    &:focus {\n      box-shadow: none !important;\n      outline: none !important;\n      background: var(--sand3) !important;\n    }\n\n    &:focus {\n      span:first-child {\n        text-decoration: underline;\n      }\n    }\n\n    &[data-selected=\"true\"] {\n      background: var(--violet2) !important;\n      border-color: var(--violet5) !important;\n      span:first-child {\n        color: var(--violet10) !important;\n      }\n    }\n\n    &:last-child {\n      border-bottom: none !important;\n    }\n\n    @media (max-width: 980px) {\n      flex-direction: row;\n      justify-content: space-between;\n    }\n  }\n`;\n\nconst Main = styled.div`\n  pre > div {\n    margin-top: 0 !important;\n  }\n`;\n\nconst Text = styled.p`\n  font: var(--${(p) => p.size ?? \"text-base\"});\n  font-weight: ${(p) => p.weight};\n  color: var(--${(p) => p.color ?? \"sand10\"});\n  margin: 0;\n\n  ${(p) =>\n    p.flex &&\n    `\n    display: flex;\n    align-items: center;\n    gap: 16px;\n  `}\n`;\n\nconst PillSelect = styled.div`\n  display: inline-flex;\n  align-items: center;\n\n  @media (max-width: 600px) {\n    width: 100%;\n\n    button {\n      flex: 1;\n    }\n  }\n`;\n\nconst PillSelectButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 6px;\n  position: relative;\n  border: 1px solid #e6e8eb;\n  border-right: none;\n  padding: 3px 24px;\n  border-radius: 0;\n  font-size: 12px;\n  line-height: 18px;\n  color: ${(p) => (p.selected ? \"#fff\" : \"#687076\")};\n  background: ${(p) => (p.selected ? \"var(--violet10) !important\" : \"#FBFCFD\")};\n  font-weight: 600;\n  transition: all 200ms;\n\n  &:hover {\n    background: #ecedee;\n    text-decoration: none;\n  }\n\n  &:focus {\n    outline: none;\n    border-color: var(--violet10) !important;\n    box-shadow: 0 0 0 1px var(--violet10);\n    z-index: 5;\n  }\n\n  &:first-child {\n    border-radius: 6px 0 0 6px;\n  }\n  &:last-child {\n    border-radius: 0 6px 6px 0;\n    border-right: 1px solid #e6e8eb;\n  }\n`;\n\nconst Badges = styled.div`\n  display: flex;\n  gap: 6px;\n`;\n\nconst Badge = styled.span`\n  display: inline-block;\n  font: var(--text-xs);\n  font-weight: 500;\n  min-width: 2em;\n  text-align: center;\n  padding: 2px 4px;\n  background: var(--${(p) => p.backgroundColor ?? \"sand2\"});\n  color: var(--${(p) => p.textColor ?? \"sand12\"});\n  border-radius: 5px;\n  vertical-align: middle;\n`;\n\nif (!blocksChanges) {\n  return \"incorrect path\";\n}\n\nconst oldVersion = {\n  [name]: {\n    [type]: current,\n  },\n};\n\nconst handleRevert = () => {\n  Social.set(oldVersion);\n};\n\nreturn (\n  <Wrapper>\n    <Sidebar>\n      <Header>\n        <Text as=\"h3\" size=\"text-md\" color=\"sand12\" weight=\"400\">\n          COMMITS ({blocksChanges.length})\n        </Text>\n      </Header>\n\n      <Commits>\n        {blocksChanges\n          .slice(\n            0,\n            state.showAllCommits ? blocksChanges.length : COMMIT_DISPLAY_LIMIT\n          )\n          .map((blockHeight, key) => (\n            <button\n              type=\"button\"\n              data-selected={state.blockHeight == blockHeight}\n              onClick={() => {\n                State.update({ blockHeight });\n              }}\n            >\n              <Text as=\"span\" size=\"text-s\" weight=\"500\" color=\"sand12\">\n                {key === 0 ? `#${blockHeight} (head)` : `#${blockHeight}`}\n              </Text>\n              <Text as=\"span\" size=\"text-s\">\n                {getTimestampFromBlockHeight(blockHeight)}\n              </Text>\n            </button>\n          ))}\n      </Commits>\n\n      {!state.showAllCommits && blocksChanges.length > COMMIT_DISPLAY_LIMIT && (\n        <Widget\n          src=\"near/widget/DIG.Button\"\n          props={{\n            fill: \"outline\",\n            variant: \"secondary\",\n            label: \"Show All Commits\",\n            size: \"small\",\n            style: { width: \"100%\" },\n            onClick: () => {\n              State.update({ showAllCommits: true });\n            },\n          }}\n        />\n      )}\n    </Sidebar>\n\n    <Main>\n      <Header>\n        <Text>Changes:</Text>\n        <Badges>\n          <Badge backgroundColor=\"green4\" textColor=\"green11\">\n            +{state.lineCountInserted}\n          </Badge>\n          <Badge backgroundColor=\"red3\" textColor=\"red11\">\n            -{state.lineCountDeleted}\n          </Badge>\n        </Badges>\n\n        <Text size=\"text-s\" style={{ marginRight: \"auto\" }}>\n          {getTimestampFromBlockHeight(state.blockHeight)}\n        </Text>\n\n        <PillSelect>\n          <PillSelectButton\n            type=\"button\"\n            onClick={() => State.update({ selectedTab: \"data\" })}\n            selected={state.selectedTab === \"data\"}\n          >\n            <i className=\"ph-bold ph-data\"></i>\n            Data\n          </PillSelectButton>\n\n          <PillSelectButton\n            type=\"button\"\n            onClick={() => State.update({ selectedTab: \"render\" })}\n            selected={state.selectedTab === \"render\"}\n          >\n            <i className=\"ph-bold ph-eye\"></i>\n            View\n          </PillSelectButton>\n        </PillSelect>\n      </Header>\n\n      {blocksChanges[0] !== state.blockHeight && (\n        <div className=\"mb-3\">\n          <button onClick={handleRevert}>Revert</button>\n        </div>\n      )}\n\n      {state.selectedTab == \"data\" && (\n        <Widget\n          src={`james.near/widget/history`}\n          key={`data-${state.blockHeight}`}\n          props={{\n            path: props.path,\n            currentBlockHeight: state.blockHeight,\n            prevBlockHeight: blocksChanges[index + 1],\n            findUniqueResult: (\n              lineCountDeleted,\n              lineCountInserted,\n              lineCountCurrent,\n              lineCountPrevious,\n              allLineCount\n            ) => {\n              if (\n                state.lineCountDeleted === undefined ||\n                state.lineCountInserted === undefined\n              )\n                State.update({ lineCountDeleted, lineCountInserted });\n            },\n          }}\n        />\n      )}\n\n      {state.selectedTab == \"render\" && (\n        <div>\n          <Widget\n            data={current}\n            key={`preview-${state.blockHeight}`}\n            props={props}\n          />\n        </div>\n      )}\n    </Main>\n  </Wrapper>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/james.near/widget/source", "fact_widget_deployments_id": "b43d4ed965e1cfbad7f80d34f605827d", "inserted_timestamp": "2023-11-09T03:24:31.983Z", "modified_timestamp": "2023-11-09T03:24:31.983Z", "__row_index": 0}