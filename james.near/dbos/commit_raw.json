{"tx_hash": "2oppfbisZYH9EqH8LBskosBizdPbnxxiPzvAXd4dtYTG", "action_id_social": "8bsUz8Gt9466oZ3vS9EHoJEsyKsGEooU91akdmLLymKy-0-widget", "block_id": 105092925, "block_timestamp": "2023-11-06T19:11:16.064Z", "signer_id": "james.near", "widget_name": "dbos", "source_code": "const accountId = props.accountId ?? context.accountId;\n\nif (!accountId) {\n  return \"Please connect your NEAR account :)\";\n}\n\nconst curatorId = props.curatorId ?? \"hack.near\";\nconst curationId = props.curationId ?? \"dbos\";\nconst curationType = props.curationType ?? \"projects\";\n\nconst path = `${curatorId}/curation/${curationId}/${curationType}`;\nconst init = Social.get(path, \"optimistic\");\n\nif (!init) {\n  return <p>Loading...</p>;\n}\n\nState.init({\n  curatorId,\n  curationId,\n  curationType,\n  things: JSON.parse(init) ?? [],\n  newThing: \"\",\n});\n\nconst isCurator = state.curatorId === accountId;\n\nfunction addThing(newThing) {\n  state.things.push(newThing);\n\n  State.update({\n    things: state.things,\n  });\n}\n\nfunction removeThing(thingKey) {\n  const updatedThings = state.things.filter((thing) => thing !== thingKey);\n\n  State.update({\n    things: updatedThings,\n  });\n}\n\nconst handleSave = () => {\n  const data = {\n    curation: {\n      [state.curationId]: {\n        [state.curationType]: state.things,\n      },\n    },\n  };\n\n  Social.set(data, {\n    onCommit: () => {},\n    onCancel: () => {},\n  });\n};\n\nconst items = things ? JSON.parse(things) : [];\n\nreturn (\n  <div className=\"d-flex flex-column\">\n    <h2>Curation</h2>\n    <h3 className=\"m-2\">{state.curationId}</h3>\n    <input\n      placeholder=\"title of curation\"\n      onChange={(e) => State.update({ curationId: e.target.value })}\n    />\n    <p className=\"m-2\">\n      <b>Who:</b> {state.curatorId}\n    </p>\n    <input\n      placeholder=\"account ID of curator\"\n      onChange={(e) => State.update({ curatorId: e.target.value })}\n    />\n    <p className=\"m-2\">\n      <b>What:</b> {state.curationType}\n    </p>\n    <input\n      placeholder=\"type of things curated\"\n      onChange={(e) => State.update({ curatorType: e.target.value })}\n    />\n    <hr />\n    <div>\n      {isCurator ? (\n        <h4 className=\"mb-3\">Update Your List</h4>\n      ) : (\n        <h4 className=\"mb-3\">Propose Updates</h4>\n      )}\n      <input\n        placeholder={`new thing ID for ${state.curationId} ${state.curationType}`}\n        onChange={(e) => State.update({ newThing: e.target.value })}\n      />\n      <div className=\"d-flex align-items-center mt-2\">\n        <button\n          className=\"btn btn-primary m-2\"\n          onClick={() => addThing(state.newThing)}\n        >\n          Add\n        </button>\n        {isCurator ? (\n          <div>\n            {Object.keys(state.things).length > 0 && (\n              <div className=\"ml-3\">\n                {JSON.stringify(things) !== JSON.stringify(state.things) && (\n                  <button className=\"btn btn-success m-2\" onClick={handleSave}>\n                    Save\n                  </button>\n                )}\n              </div>\n            )}\n          </div>\n        ) : (\n          <div>\n            {Object.keys(state.things).length > 0 && (\n              <div className=\"ml-3\">\n                {JSON.stringify(things) !== JSON.stringify(state.things) && (\n                  <button\n                    className=\"btn btn-success m-2\"\n                    onClick={handleProposal}\n                  >\n                    Submit\n                  </button>\n                )}\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n    <div className=\"m-2\">\n      {state.things.length ? (\n        <div>\n          {state.things.map((thing, i) => {\n            const [creatorId, type, thingId] = thing.split(\"/\");\n            return (\n              <div className=\"d-flex m-2\">\n                <p className=\"mt-3 me-5\">{thing}</p>\n                <br />\n                <button\n                  className=\"btn btn-danger m-1\"\n                  onClick={() => removeThing(thing)}\n                >\n                  remove\n                </button>\n              </div>\n            );\n          })}\n        </div>\n      ) : (\n        <div>\n          <i>nothing found</i>\n        </div>\n      )}\n    </div>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/james.near/widget/dbos", "fact_widget_deployments_id": "a9fe47ee8f0fc465f30527c87599318d", "inserted_timestamp": "2023-11-06T21:17:50.051Z", "modified_timestamp": "2023-11-06T21:17:50.051Z", "__row_index": 1}