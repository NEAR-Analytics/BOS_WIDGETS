{"tx_hash": "CrbUEW3JMVe5Aoe2D3vGzuQjSB52941fF7yy1Nx8ktH3", "action_id_social": "FzcN3amYndpvqUmC8HGUkMmRMxEsXwrjx9SWSYDZBfcE-0-widget", "block_id": 100895161, "block_timestamp": "2023-09-11T16:15:15.764Z", "signer_id": "golas.near", "widget_name": "N-Notification-2", "source_code": "const Notification = styled.div`\n  display: flex;\n  padding: 16px 24px 16px 16px;\n  align-items: flex-start;\n  gap: 16px; \n  border-top: 1px solid var(--sand-light-6, #E3E3E0);\n\n  &:hover {\n    background: var(--sand-light-2, #F9F9F8);\n  }\n`;\n\nconst Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 16px;\n  flex: 1 0 0; \n`;\n\nconst Icon = styled.div`\n\n`;\n\nconst Username = styled.span`\n  font: var(--text-s);\n  font-weight: 600;\n`;\n\nconst Action = styled.span`\n  font: var(--text-s);\n  color: #706F6C;\n`;\n\nconst ComponentName = styled.span`\n  font: var(--text-s);\n  font-weight: 600;\n  color: #604CC8;\n`;\n\nconst Dot = styled.span`\n  padding: 0 8px;\n`\n\nconst Timestamp = styled.span`\n  font: var(--text-s);\n  color: #706F6C;\n`;\n\nconst Desc = styled.span`\n  font: var(--text-s);\n  color: #706F6C;\n  font-style: italic;\n  border-left: 2px solid #E3E3E0;\n  padding: 0 0 0 1rem;\n`;\n\n\n\n\n\nconst { value } = props;\nconst { type } = value;\nconst item = value?.item || {};\nconst path = item.path || \"\";\n\n// Build notification\nconst isComment = path.indexOf(\"/post/comment\") > 0 || type === \"comment\";\nconst isPost = !isComment && path.indexOf(\"/post/main\") > 0;\n\nconst accountId = type === \"like\" ? path.split(\"/\")[0] : props.accountId;\nconst blockHeight = type === \"like\" ? item.blockHeight : props.blockHeight;\nconst urlBlockHeight = isComment ? \"commentBlockHeight\" : \"blockHeight\";\n\nconst profile = props.profile || Social.get(`${accountId}/profile/**`, \"final\");\nconst profileUrl = `#/near/widget/ProfilePage?accountId=${accountId}`;\n\n\nlet postUrl = \"\";\n\nif (type !== \"custom\") {\n  postUrl = `#/near/widget/PostPage?accountId=${accountId}&${urlBlockHeight}=${blockHeight}`;\n} else {\n  postUrl = `#/${value.widget}?${Object.entries(value.params || {})\n    .map(([k, v]) => `${k}=${v}`)\n    .join(\"&\")}`;\n}\n\nconst actionable =\n  type === \"like\" ||\n  type === \"comment\" ||\n  type === \"mention\" ||\n  type === \"custom\";\n\nlet notificationMessage = {\n  like: isPost ? \"liked your post\" : isComment ? \"liked your comment\" : \"\",\n  // fork: '',\n  follow: \"followed you\",\n  unfollow: \"unfollowed you\",\n  comment: \"replied to your post\",\n  mention: \"mentioned you in their post\",\n  poke: \"poked you\",\n  custom: value.message ?? \"\",\n};\n\n// DevGov handles their own type\nif (type && type.startsWith(\"devgovgigs/\")) {\n  return (\n    <Widget src=\"mob.near/widget/Notification.Item.DevGov\" props={props} />\n  );\n}\n\n// Assert is a valid type\nif (!(type in notificationMessage) || !notificationMessage[type]) return <></>;\n\nreturn (\n  <>\n    <Notification>\n      <Icon>{icon}</Icon>\n      <Content>\n        <Widget\n          src=\"near/widget/DIG.Avatar\"\n          props={{\n            alt: accountId,\n            image: profile.image,\n            size: \"small\",\n          }}\n        />\n        <div>\n          <Username>{profile.name || accountId.split(\".near\")[0]}</Username>\n          <Action>{notificationMessage[type]}</Action>\n          {/*<ComponentName>{componentName}</ComponentName>*/}\n\n          <Timestamp>\n            <Dot>\u00b7</Dot>\n            <Widget\n              src=\"mob.near/widget/TimeAgo@97556750\"\n              props={{ blockHeight: props.blockHeight }}\n            />\n        </Timestamp>\n        </div>\n        <Desc>{desc}</Desc>\n      </Content>\n    </Notification>\n\n\n\n\n    {/*\n    <Wrapper>\n      <div>\n        <Widget\n          src=\"near/widget/AccountProfile\"\n          props={{ accountId: props.accountId }}\n        />\n      </div>\n\n      <Text bold>\n        <Text as={actionable ? \"a\" : \"p\"} href={actionable ? postUrl : \"\"}>\n          {notificationMessage[type]}\n        </Text>\n        <Widget\n          src=\"mob.near/widget/TimeAgo@97556750\"\n          props={{ blockHeight: props.blockHeight }}\n        />\n        ago\n      </Text>\n\n      <div>\n        {(type === \"follow\" || type === \"unfollow\") && (\n          <Widget\n            src=\"near/widget/FollowButton\"\n            props={{ accountId: props.accountId }}\n          />\n        )}\n\n        {type === \"poke\" && (\n          <Widget\n            src=\"near/widget/PokeButton\"\n            props={{ accountId: props.accountId, back: true, primary: true }}\n          />\n        )}\n\n        {actionable && <Button href={postUrl}>View</Button>}\n      </div>\n    </Wrapper>\n    */}\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/golas.near/widget/N-Notification-2", "fact_widget_deployments_id": "c6287e9fd6c1f7c707750cdc43a7456b", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}