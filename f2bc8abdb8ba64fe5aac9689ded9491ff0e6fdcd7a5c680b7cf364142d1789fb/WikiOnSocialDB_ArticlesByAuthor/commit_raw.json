{"tx_hash": "8QAqwd9y1yppQyZdRvURDfSrX9d9ZhzN4hvrmUhYGziC", "action_id_social": "Grv2uE4f3zK5yGwe6J7auhUugQ33VF8j1wYm1ktH3wv3-0-widget", "block_id": 90041848, "block_timestamp": "2023-04-20T20:17:39.838Z", "signer_id": "f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb", "widget_name": "WikiOnSocialDB_ArticlesByAuthor", "source_code": "const addressForArticles = \"wikiTest2Article\";\nconst authorForWidget =\n  \"f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb\";\nconst authorId = props.author;\nconst accountId = props.accountId ?? context.accountId;\nif (!accountId) {\n  return \"No account ID\";\n}\nconst profile = props.profile ?? Social.getr(`${authorId}/profile`);\nif (profile === null) {\n  return \"Loading\";\n}\n\nconst getDateLastEdit = (timestamp) => {\n  const date = new Date(Number(timestamp));\n  const dateString = {\n    date: date.toLocaleDateString(),\n    time: date.toLocaleTimeString(),\n  };\n  return dateString;\n};\n\n// ========== GET INDEX ARRAY FOR ARTICLES ==========\nconst postsIndex = Social.index(addressForArticles, \"main\", {\n  order: \"desc\",\n  accountId: undefined,\n});\n// ========== GET ALL ARTICLES ==========\nconst resultArticles =\n  postsIndex &&\n  postsIndex.reduce((acc, { accountId, blockHeight }) => {\n    const postData = Social.get(\n      `${accountId}/${addressForArticles}/main`,\n      blockHeight\n    );\n    const postDataWithBlockHeight = { ...JSON.parse(postData), blockHeight };\n    return [...acc, postDataWithBlockHeight];\n  }, []);\n// ========== FILTER DUBLICATES ==========\nconst filteredArticles =\n  resultArticles.length &&\n  resultArticles.reduce((acc, article) => {\n    if (!acc.some(({ articleId }) => articleId === article.articleId)) {\n      return [...acc, article];\n    } else {\n      return acc;\n    }\n  }, []);\n\nconst filteredArticlesByUser =\n  filteredArticles.length &&\n  filteredArticles.reduce((acc, article) => {\n    if (article.author === authorId) {\n      return [...acc, article];\n    } else {\n      return acc;\n    }\n  }, []);\n\nconsole.log(profile);\n\nreturn (\n  <div\n    className=\"container-fluid\"\n    style={{\n      backgroundColor: \"rgb(230, 230, 230)\",\n      borderRadius: \"20px\",\n      padding: \"0\",\n    }}\n  >\n    <Widget\n      src={`${authorForWidget}/widget/WikiOnSocialDB_MainNavigation`}\n      props={{ currentNavPill: \"authors\" }}\n    />\n    <div\n      className=\"card\"\n      style={{ margin: \"0 auto\", width: \"90%\", minWidth: \"360px\" }}\n    >\n      <div className=\"d-flex justify-content-between\">\n        {profile ? (\n          <Widget\n            key=\"image\"\n            src=\"mob.near/widget/ProfileImage\"\n            props={{\n              style: { width: \"5em\", height: \"5em\", marginRight: \"0.1em\" },\n              profile,\n              authorId,\n              className: \"inline\",\n              imageClassName: \"rounded w-100 h-100 align-top\",\n            }}\n          />\n        ) : (\n          <div style={{ width: \"5em\" }}></div>\n        )}\n        <div>\n          <h4 className=\"text-center my-1\">{profile.name}</h4>\n          <h4 className=\"text-center\">{authorId}</h4>\n        </div>\n        <div style={{ width: \"5em\" }}></div>\n      </div>\n    </div>\n    <div className=\"row card-group py-3\">\n      {filteredArticlesByUser &&\n        filteredArticlesByUser.map((article) => (\n          <div className=\"col-sm-12 col-lg-6 col-2xl-4 gy-3\">\n            <div className=\"card h-100\" key={article.articleId}>\n              <a\n                className=\"text-decoration-none text-dark\"\n                href={`#/${authorForWidget}/widget/WikiOnSocialDB_OneArticle?articleId=${article.articleId}&blockHeight=${article.blockHeight}&lastEditor=${article.lastEditor}\n            `}\n              >\n                <div className=\"card-body\">\n                  <div className=\"row d-flex justify-content-center\">\n                    <h5 className=\"card-title text-center pb-2 border-bottom\">\n                      {article.articleId}\n                    </h5>\n                    <div className=\"col\">\n                      <p className=\"card-subtitle text-muted text-start\">\n                        {getDateLastEdit(article.timeCreate).date}\n                      </p>{\" \"}\n                    </div>\n                    <div className=\"col\">\n                      <p className=\"card-subtitle text-muted text-end\">\n                        {getDateLastEdit(article.timeCreate).time}\n                      </p>\n                    </div>\n                  </div>\n                  <div\n                    className=\"mt-3 alert alert-secondary\"\n                    style={{ backgroundColor: \"white\" }}\n                  >\n                    <div>\n                      Last edit by{\" \"}\n                      <a\n                        href={`https://near.social/#/mob.near/widget/ProfilePage?accountId=${article.lastEditor}`}\n                        style={{ textDecoration: \"underline\" }}\n                      >\n                        {article.lastEditor}\n                      </a>\n                      <br />\n                      Edited on {getDateLastEdit(article.timeLastEdit).date}\n                      <br />\n                      Edit versions: {article.version}\n                    </div>\n                  </div>\n                </div>\n              </a>\n            </div>\n          </div>\n        ))}\n    </div>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb/widget/WikiOnSocialDB_ArticlesByAuthor", "fact_widget_deployments_id": "32ba53c93d59d5d2150fb1580fe55115", "inserted_timestamp": "2000-01-01T00:00:00.000Z", "modified_timestamp": "2000-01-01T00:00:00.000Z", "__row_index": 9}