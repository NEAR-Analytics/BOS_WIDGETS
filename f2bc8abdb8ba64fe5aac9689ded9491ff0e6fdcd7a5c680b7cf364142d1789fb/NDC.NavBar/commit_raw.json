{"tx_hash": "Cbv3cSFzoujvTjyHkRqMXX1R1yHL1L41GaM57SWLRch2", "action_id_social": "9nyJ462NhfbjoYKC539kM9Y1NzUKmimrLav12PjYSYXJ-0-widget", "block_id": 99602388, "block_timestamp": "2023-08-25T05:10:25.102Z", "signer_id": "f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb", "widget_name": "NDC.NavBar", "source_code": "const {\r\n  handleGoHomeButton,\r\n  handlePillNavigation,\r\n  brand,\r\n  pills,\r\n  navigationButtons,\r\n  isTest,\r\n  displayedTabId,\r\n  writersWhiteList,\r\n  handleFilterArticles,\r\n  filterParameter,\r\n  handleBackButton,\r\n  handleGoHomeButton,\r\n  tabs,\r\n} = props;\r\n\r\nfunction stateUpdate(obj) {\r\n  State.update(obj);\r\n}\r\nconst libSrcArray = [\r\n  \"f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb/widget/SayALot.lib.article\",\r\n];\r\n\r\nfunction callLibs(srcArray, stateUpdate, libCalls) {\r\n  return (\r\n    <>\r\n      {srcArray.map((src) => {\r\n        return (\r\n          <Widget\r\n            src={src}\r\n            props={{\r\n              isTest,\r\n              stateUpdate,\r\n              libCalls,\r\n            }}\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n}\r\n/*\r\n======================================================PILLS EXAMPLE====================================================\r\n    *Note: the first pill allways has to be the first one displayed*\r\n    pills: [{\r\n        id: string,\r\n        title: string,\r\n    }]    \r\n============(When modified to be web app we should delete action to replace it with a propper State.update)============\r\n\r\n======================================================BRAND EXAMPLE====================================================\r\n    brand: {\r\n        homePageId: string,\r\n        brandName: string,\r\n        logoHref: string,\r\n        logoRemWidth: number/string,\r\n        logoRemHeight: number/string,\r\n    }\r\n    \r\n============(When modified to be web app we should delete action to replace it with a propper State.update)============\r\n*/\r\n\r\nconst loggedUserAccountId = context.accountId;\r\n\r\nconst initLibCalls = [\r\n  {\r\n    functionName: \"canUserCreateArticle\",\r\n    key: \"canLoggedUserCreateArticle\",\r\n    props: {\r\n      accountId: loggedUserAccountId,\r\n      env: isTest ? \"test\" : \"prod\",\r\n    },\r\n  },\r\n];\r\n\r\nState.init({\r\n  selectedPillIndex: 0,\r\n  libCalls: initLibCalls,\r\n});\r\nconst canLoggedUserCreateArticle = state.canLoggedUserCreateArticle;\r\n\r\nconst logoRemWidth = brand.logoRemWidth\r\n  ? brand.logoRemWidth + \"rem\"\r\n  : undefined;\r\nconst logoRemHeight = brand.logoRemHeight\r\n  ? brand.logoRemHeight + \"rem\"\r\n  : undefined;\r\n\r\nif (\r\n  !stateUpdate ||\r\n  !(displayedTabId + \"\") ||\r\n  !pills ||\r\n  (brand && (!brand.logoHref || !(brand.homePageId + \"\")))\r\n) {\r\n  const crucialPropMissingMsg = \"The following crucial props are missing:\";\r\n  return (\r\n    <div>\r\n      <h3 className=\"text-danger\">{crucialPropMissingMsg}</h3>\r\n      <ul>\r\n        {!stateUpdate && <li className=\"text-danger\">stateUpdate</li>}\r\n\r\n        {!(displayedTabId + \"\") && (\r\n          <li className=\"text-danger\">displayedTabId</li>\r\n        )}\r\n\r\n        {!pills && <li className=\"text-danger\">pills</li>}\r\n\r\n        {brand && !brand.logoHref && (\r\n          <li className=\"text-danger\">brand.logoHref</li>\r\n        )}\r\n\r\n        {brand && !(brand.homePageId + \"\") && (\r\n          <li className=\"text-danger\">brand.homePageId</li>\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\n//============================================Styled components==================================================\r\nconst BrandLogoContainer = styled.div`\r\n    width: ${logoRemWidth ?? \"4rem\"};\r\n    height: ${logoRemHeight ?? \"4rem\"};\r\n    cursor: pointer;\r\n`;\r\n\r\nconst activeColor = \"#9333EA\";\r\n\r\nconst Pill = styled.div`\r\n    font-family: system-ui;\r\n    font-weight: 500;\r\n    font-size: 1.2rem;\r\n    line-height: 24px;\r\n    color: black;\r\n    cursor: pointer;\r\n    user-select: none;\r\n\r\n    &:hover {\r\n        color: ${activeColor};\r\n    }\r\n`;\r\n\r\nconst StylessATag = styled.a`\r\n    &:hover {\r\n        text-decoration: none;\r\n    }\r\n`;\r\n\r\nconst BackButton = styled.div`\r\n  cursor: pointer;\r\n`;\r\n\r\nconst CallLibrary = styled.div`\r\n  display: none;\r\n`;\r\n//============================================End styled components==============================================\r\n\r\n//=================================================Components====================================================\r\n\r\nconst renderButton = (button, i) => {\r\n  return (\r\n    <Widget\r\n      src=\"rubycop.near/widget/NDC.StyledComponents\"\r\n      props={{\r\n        Button: {\r\n          size: \"big\",\r\n          onClick: () => {\r\n            handlePillNavigation(button.id);\r\n            State.update({\r\n              selectedPillIndex: undefined,\r\n              selectedButtonIndex: i,\r\n            });\r\n          },\r\n          text: button.title,\r\n          className:\r\n            state.selectedButtonIndex == i ? \"primary light\" : \"primary dark\",\r\n        },\r\n      }}\r\n    />\r\n  );\r\n};\r\n//==============================================End components===================================================\r\n\r\n//==================================================FUNCTIONS====================================================\r\n\r\n//================================================END FUNCTIONS===================================================\r\nreturn (\r\n  <div className=\"navbar navbar-expand-md border-bottom mb-3\">\r\n    <div className=\"container-fluid\">\r\n      {brand && (\r\n        <BrandLogoContainer\r\n          className=\"navbar-brand text-decoration-none\"\r\n          onClick={handleGoHomeButton}\r\n        >\r\n          <Widget\r\n            src=\"mob.near/widget/Image\"\r\n            props={{\r\n              // image: metadata.image,\r\n              className: \"w-100 h-100\",\r\n              style: {\r\n                objectFit: \"cover\",\r\n              },\r\n              thumbnail: false,\r\n              fallbackUrl: brand.logoHref,\r\n              alt: brand.brandName ?? \"\",\r\n            }}\r\n          />\r\n        </BrandLogoContainer>\r\n      )}\r\n      <button\r\n        className=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-bs-toggle=\"collapse\"\r\n        data-bs-target=\"#navbarNav\"\r\n        aria-controls=\"navbarNav\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div\r\n        className=\"collapse navbar-collapse justify-content-center\"\r\n        id=\"navbarNav\"\r\n      >\r\n        <ul className=\"navbar-nav\">\r\n          {pills &&\r\n            pills.map((pill, i) => {\r\n              return !(pill.id + \"\") || !pill.title ? (\r\n                <p className=\"text-danger border\">Pill passed wrong</p>\r\n              ) : (\r\n                <li className=\"nav-item\">\r\n                  <Pill\r\n                    style={\r\n                      state.selectedPillIndex == i ? { color: activeColor } : {}\r\n                    }\r\n                    onClick={() => {\r\n                      //First one is set to be de \"Home\" one\r\n                      if (pill.id == 0) {\r\n                        const filter = { filterBy: \"\" };\r\n                        handleFilterArticles(filter);\r\n                      } else {\r\n                        handlePillNavigation(pill.id);\r\n                      }\r\n                      State.update({\r\n                        selectedPillIndex: i,\r\n                        selectedButtonIndex: undefined,\r\n                      });\r\n                    }}\r\n                    className={`nav-link ${\r\n                      pill.id === displayedTabId\r\n                        ? \"active text-decoration-underline\"\r\n                        : \"text-decoration-none\"\r\n                    } `}\r\n                  >\r\n                    {pill.title}\r\n                  </Pill>\r\n                </li>\r\n              );\r\n            })}\r\n          {/*navigationButtons &&\r\n            loggedUserAccountId &&\r\n            canLoggedUserCreateArticle &&\r\n            navigationButtons.map((button, i) => {\r\n              return !(button.id + \"\") || !button.title ? (\r\n                <p className=\"text-danger border\">Button passed wrong</p>\r\n              ) : (\r\n                <div className=\"d-block d-md-none\">\r\n                  {renderButton(button, i)}\r\n                </div>\r\n              );\r\n            })*/}\r\n        </ul>\r\n      </div>\r\n      {navigationButtons &&\r\n        loggedUserAccountId &&\r\n        canLoggedUserCreateArticle &&\r\n        navigationButtons.map((button, i) => {\r\n          return !(button.id + \"\") || !button.title ? (\r\n            <p className=\"text-danger border\">Button passed wrong</p>\r\n          ) : (\r\n            <div className=\"d-none d-md-block\">{renderButton(button, i)}</div>\r\n          );\r\n        })}\r\n    </div>\r\n\r\n    {(((filterParameter == \"tag\" || filterParameter == \"author\") &&\r\n      displayedTabId == tabs.SHOW_ARTICLES_LIST.id) ||\r\n      displayedTabId == tabs.SHOW_ARTICLE.id ||\r\n      displayedTabId == tabs.ARTICLE_WORKSHOP.id ||\r\n      displayedTabId == tabs.SHOW_ARTICLES_LIST_BY_AUTHORS.id) && (\r\n      <BackButton\r\n        style={{ cursor: \"pointer\" }}\r\n        onClick={\r\n          displayedTabId == tabs.SHOW_ARTICLE.id ||\r\n          (editArticleData && tabs.ARTICLE_WORKSHOP.id)\r\n            ? () => {\r\n                State.update({\r\n                  selectedPillIndex: 0,\r\n                  selectedButtonIndex: undefined,\r\n                });\r\n                handleBackButton();\r\n              }\r\n            : () => {\r\n                State.update({\r\n                  selectedPillIndex: 0,\r\n                  selectedButtonIndex: undefined,\r\n                });\r\n                handleGoHomeButton();\r\n              }\r\n        }\r\n        className=\"my-3\"\r\n      >\r\n        <i className=\"bi bi-chevron-left mr-2\"></i>\r\n        Back\r\n      </BackButton>\r\n    )}\r\n\r\n    <CallLibrary>\r\n      {callLibs(libSrcArray, stateUpdate, state.libCalls)}\r\n    </CallLibrary>\r\n  </div>\r\n);\r\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb/widget/NDC.NavBar", "fact_widget_deployments_id": "08183bc808999212793126567ecfe962", "inserted_timestamp": "2023-08-25T06:45:09.725Z", "modified_timestamp": "2023-08-25T06:45:09.725Z", "__row_index": 18}