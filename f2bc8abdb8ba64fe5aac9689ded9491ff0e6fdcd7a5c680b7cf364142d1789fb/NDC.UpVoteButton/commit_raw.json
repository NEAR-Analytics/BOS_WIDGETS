{"tx_hash": "6Ay97docQa7PCU9gC3YQSLdB9tPQoUPp5jXUsf64Bypx", "action_id_social": "GxXGVTs9EkBkYTCubiwUviL2moiTb4bmZUQBUKZoB6dz-0-widget", "block_id": 98963498, "block_timestamp": "2023-08-16T20:53:04.355Z", "signer_id": "f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb", "widget_name": "NDC.UpVoteButton", "source_code": "const { isTest, authorForWidget, reactedElementData, widgets } = props;\r\n\r\nconst data = reactedElementData;\r\n\r\nconst libSrcArray = [`${authorForWidget}/widget/SayALot.lib.upVotes`];\r\n\r\nconst libCalls = [\r\n  {\r\n    functionName: \"getUpVotes\",\r\n    key: \"upVotes\",\r\n    props: {\r\n      elementReactedId: data.realArticleId,\r\n      createdInteraction: state.createdInteraction,\r\n    },\r\n  },\r\n];\r\n\r\nState.init({\r\n  libCalls,\r\n});\r\n\r\nconsole.log(state.upVotes);\r\n\r\nif (state.upVotes) {\r\n  State.update({ numberOfVotes: state.upVotes.reactionsStatistics ?? 0 });\r\n}\r\n\r\nconst lastUserVote =\r\n  state.upVotes &&\r\n  state.upVotes.filter((vote) => vote.accountId === context.accountId);\r\nconsole.log(\"LUV: \", lastUserVote);\r\n\r\nlet isDelete;\r\nif (state.createdInteraction !== undefined) {\r\n  isDelete = !state.createdInteraction;\r\n} else if (lastUserVote) {\r\n  isDelete = !lastUserVote.value.deleteReaction;\r\n} else {\r\n  isDelete = false;\r\n}\r\n\r\nfunction getUpVoteButtonClass() {\r\n  if (isDelete) {\r\n    return \"primary\";\r\n  } else {\r\n    return \"secondary dark\";\r\n  }\r\n}\r\n\r\nfunction callLibs(srcArray, stateUpdate, libCalls) {\r\n  return (\r\n    <>\r\n      {srcArray.map((src) => {\r\n        return (\r\n          <Widget\r\n            src={src}\r\n            props={{\r\n              isTest,\r\n              stateUpdate,\r\n              libCalls,\r\n            }}\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n}\r\n\r\nfunction stateUpdate(obj) {\r\n  State.update(obj);\r\n}\r\n\r\nfunction upVoteListener() {\r\n  let newLibCalls = [...libCalls];\r\n\r\n  function onCommit() {\r\n    State.update({\r\n      numberOfVotes: isDelete ? numberOfVotes - 1 : numberOfVotes + 1,\r\n    });\r\n  }\r\n\r\n  newLibCalls.push({\r\n    functionName: \"addVote\",\r\n    key: \"addVote\",\r\n    props: {\r\n      isDelete,\r\n      elementReactedId: data.realArticleId,\r\n      onCommit,\r\n    },\r\n  });\r\n  State.update({ libCalls: newLibCalls });\r\n}\r\n\r\nconst CallLibrary = styled.div`\r\n  display: none;\r\n`;\r\n\r\nreturn (\r\n  <>\r\n    <Widget\r\n      src={widgets.styledComponents}\r\n      props={{\r\n        Button: {\r\n          text: `+${state.numberOfVotes ?? 0}`,\r\n          className: getUpVoteButtonClass(),\r\n          size: \"sm\",\r\n          onClick: upVoteListener,\r\n          icon: <i className=\"bi bi-hand-thumbs-up\"></i>,\r\n        },\r\n      }}\r\n    />\r\n\r\n    <CallLibrary>\r\n      {callLibs(libSrcArray, stateUpdate, state.libCalls)}\r\n    </CallLibrary>\r\n  </>\r\n);\r\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb/widget/NDC.UpVoteButton", "fact_widget_deployments_id": "458f5269be53580e637314c16178e36e", "inserted_timestamp": "2023-08-16T22:42:32.964Z", "modified_timestamp": "2023-08-16T22:42:32.964Z", "__row_index": 10}