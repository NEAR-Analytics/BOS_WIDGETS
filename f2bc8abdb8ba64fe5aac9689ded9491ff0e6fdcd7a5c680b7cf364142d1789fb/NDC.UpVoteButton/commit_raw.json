{"tx_hash": "BF8oTzJ6z8pov4LicjansdwfoqCSQsQztVBV9LvwtR8v", "action_id_social": "FAnqBomhnPgdMZZZprds6XJvGY4mwRWxZ3iKonx5iWbA-0-widget", "block_id": 99122736, "block_timestamp": "2023-08-18T23:11:05.619Z", "signer_id": "f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb", "widget_name": "NDC.UpVoteButton", "source_code": "const { isTest, authorForWidget, reactedElementData, widgets } = props;\r\n\r\nconst data = reactedElementData;\r\n\r\nconst libSrcArray = [`${authorForWidget}/widget/SayALot.lib.upVotes`];\r\n\r\nconst libCalls = [\r\n  {\r\n    functionName: \"getUpVotes\",\r\n    key: \"upVotes\",\r\n    props: {\r\n      elementReactedId: data.realArticleId,\r\n    },\r\n  },\r\n];\r\n\r\nState.init({\r\n  libCalls,\r\n  upVotes: [],\r\n});\r\nconsole.log(\"suv: \", state.upVotes);\r\n\r\nlet userVote = state.upVotes.find(\r\n  (vote) => vote.accountId === context.accountId\r\n);\r\n\r\nconsole.log(\"UV: \", userVote);\r\nlet hasUserVoted = userVote !== undefined;\r\n\r\nfunction getUpVoteButtonClass() {\r\n  if (hasUserVoted) {\r\n    return \"primary\";\r\n  } else {\r\n    return \"secondary dark\";\r\n  }\r\n}\r\n\r\nfunction callLibs(srcArray, stateUpdate, libCalls) {\r\n  return (\r\n    <>\r\n      {srcArray.map((src) => {\r\n        return (\r\n          <Widget\r\n            src={src}\r\n            props={{\r\n              isTest,\r\n              stateUpdate,\r\n              libCalls,\r\n            }}\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n}\r\n\r\nfunction stateUpdate(obj) {\r\n  State.update(obj);\r\n}\r\n\r\nfunction upVoteButtonListener() {\r\n  let newLibCalls = [...libCalls];\r\n  console.log(\"in upVoteListener\", userVote);\r\n\r\n  if (userVote) {\r\n    newLibCalls.push({\r\n      functionName: \"addVote\",\r\n      key: \"upVotes\",\r\n      props: {\r\n        realArticleId: data.realArticleId,\r\n      },\r\n    });\r\n  } else {\r\n    newLibCalls.push({\r\n      functionName: \"deleteVote\",\r\n      key: \"upVotes\",\r\n      props: {\r\n        realArticleId: data.realArticleId,\r\n        upVoteId: userVote.value.upVoteId,\r\n      },\r\n    });\r\n  }\r\n  State.update({ libCalls: newLibCalls });\r\n}\r\n\r\nconst CallLibrary = styled.div`\r\n  display: none;\r\n`;\r\n\r\nreturn (\r\n  <>\r\n    <Widget\r\n      src={widgets.styledComponents}\r\n      props={{\r\n        Button: {\r\n          text: `+${state.upVotes.length}`,\r\n          className: `${getUpVoteButtonClass()}`,\r\n          size: \"sm\",\r\n          onClick: upVoteButtonListener,\r\n          icon: <i className=\"bi bi-hand-thumbs-up\"></i>,\r\n        },\r\n      }}\r\n    />\r\n\r\n    <CallLibrary>\r\n      {callLibs(libSrcArray, stateUpdate, state.libCalls)}\r\n    </CallLibrary>\r\n  </>\r\n);\r\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb/widget/NDC.UpVoteButton", "fact_widget_deployments_id": "5ac3987d32360135396c450bbdcfdb31", "inserted_timestamp": "2023-08-19T00:52:13.648Z", "modified_timestamp": "2023-08-19T00:52:13.648Z", "__row_index": 31}