{"tx_hash": "3xLPNwRF6p1bcELBQKMxXDzjRpUyi9KakWNSePSnmBeg", "action_id_social": "9iySGsVF1NH6aNF9jcEZwo74wCuHz4VfJam8ftrSemhT-0-widget", "block_id": 98985713, "block_timestamp": "2023-08-17T03:46:12.978Z", "signer_id": "f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb", "widget_name": "NDC.UpVoteButton", "source_code": "const { isTest, authorForWidget, reactedElementData, widgets } = props;\n\nconst data = reactedElementData;\n\nconst libSrcArray = [`${authorForWidget}/widget/SayALot.lib.upVotes`];\n\nconst libCalls = [\n  {\n    functionName: \"getUpVotes\",\n    key: \"upVotes\",\n    props: {\n      elementReactedId: data.realArticleId,\n      createdInteraction: state.createdInteraction,\n    },\n  },\n];\n\nState.init({\n  libCalls,\n});\n\nif (state.upVotes.reactionsStatistics && !state.numberOfvotesModified) {\n  State.update({ numberOfVotes: state.upVotes.reactionsStatistics ?? 0 });\n}\n\nconst lastUserVote = state.upVotes.userInteraction;\nif (\n  data.realArticleId ===\n  \"f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb-1691530843649\"\n) {\n  console.log(\"lastUserVote: \", lastUserVote);\n  console.log(\"numberOfvotesModified: \", state.numberOfvotesModified);\n}\n\nlet isDelete;\nif (lastUserVote) {\n  if (state.numberOfvotesModified) {\n    isDelete = lastUserVote.value.deleteReaction;\n  } else {\n    isDelete = !lastUserVote.value.deleteReaction;\n  }\n} else {\n  isDelete = false;\n}\nif (\n  data.realArticleId ===\n  \"f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb-1691530843649\"\n) {\n  console.log(isDelete);\n}\n\nfunction getUpVoteButtonClass() {\n  if (isDelete) {\n    return \"primary\";\n  } else {\n    return \"secondary dark\";\n  }\n}\n\nfunction callLibs(srcArray, stateUpdate, libCalls) {\n  return (\n    <>\n      {srcArray.map((src) => {\n        return (\n          <Widget\n            src={src}\n            props={{\n              isTest,\n              stateUpdate,\n              libCalls,\n            }}\n          />\n        );\n      })}\n    </>\n  );\n}\n\nfunction stateUpdate(obj) {\n  State.update(obj);\n}\n\nfunction upVoteListener() {\n  let newLibCalls = [...libCalls];\n  let oldNumberOfvotesModified = state.numberOfvotesModified;\n\n  function onCommit() {\n    state.numberOfVotes &&\n      State.update({\n        numberOfvotesModified: !oldNumberOfvotesModified,\n        numberOfVotes: isDelete\n          ? state.numberOfVotes - 1\n          : state.numberOfVotes + 1,\n        createdInteraction: !isDelete,\n      });\n  }\n\n  newLibCalls.push({\n    functionName: \"addVote\",\n    key: \"addVote\",\n    props: {\n      isDelete,\n      elementReactedId: data.realArticleId,\n      onCommit,\n    },\n  });\n  State.update({ libCalls: newLibCalls });\n}\n\nconst CallLibrary = styled.div`\n  display: none;\n`;\nreturn (\n  <>\n    <Widget\n      src={widgets.styledComponents}\n      props={{\n        Button: {\n          text: `+${state.numberOfVotes ?? 0}`,\n          className: `${getUpVoteButtonClass()}`,\n          size: \"sm\",\n          onClick: upVoteListener,\n          icon: <i className=\"bi bi-hand-thumbs-up\"></i>,\n        },\n      }}\n    />\n\n    <CallLibrary>\n      {callLibs(libSrcArray, stateUpdate, state.libCalls)}\n    </CallLibrary>\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb/widget/NDC.UpVoteButton", "fact_widget_deployments_id": "e9024e951f348e3f895003878a9a9694", "inserted_timestamp": "2023-08-17T05:30:23.379Z", "modified_timestamp": "2023-08-17T05:30:23.379Z", "__row_index": 35}