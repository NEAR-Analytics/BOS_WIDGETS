{"tx_hash": "3YMoK2Ap8sFba2S9dQLJKhHEi8qHagXWxMrGAeK62Tvk", "action_id_social": "GjyYCVXAVcFmAm5qxFQw5oyNbgZu5pBv6UAz9DqXXNzt-0-widget", "block_id": 112722337, "block_timestamp": "2024-02-13T03:58:44.433Z", "signer_id": "f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb", "widget_name": "Element.Badge", "source_code": "// Element.Badge\r\n\r\nfunction getGeneralContainerBasicStyles(onClickFunction) {\r\n  return `\r\n    ${onClickFunction ? \"cursor: pointer;\" : \"\"}\r\n    \r\n    display: inline-flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    padding: 4px 12px;\r\n    font-size: 12px;\r\n    line-height: 16px;\r\n    white-space: nowrap;\r\n    text-align: center;\r\n    vertical-align: baseline;\r\n    font-weight: 600;\r\n    line-height: 1;\r\n    border: 1px solid transparent;\r\n  \r\n    &.openSans {\r\n      font-family: Open Sans;\r\n      font-weight: 400;\r\n    }\r\n  \r\n    &.circle {\r\n      padding: 0;\r\n      width: 1.7em;\r\n      height: 1.7em;\r\n    }\r\n  \r\n    &.sm {\r\n      padding: 3px 8px;\r\n      font-size: 10px;\r\n      border-radius: 6px;\r\n    }\r\n  \r\n    &.md {\r\n      padding: 4px 10px;\r\n      font-size: 12px;\r\n      border-radius: 8px;\r\n    }\r\n  \r\n    &.lg {\r\n      padding: 8px 12px;\r\n      font-size: 14px;\r\n      border-radius: 10px;\r\n    }\r\n    \r\n    &.round {\r\n      border-radius: 100px;\r\n    }`;\r\n}\r\n\r\nfunction getButtonColors(onClickFunction) {\r\n  return `\r\n    &.primary {\r\n      color: #11181c;\r\n      background: #ffd50d;\r\n      border-color: #ffd50d;\r\n  \r\n      ${\r\n        onClickFunction\r\n          ? \"&:hover {color: white !important; background: #dab70f !important;}\"\r\n          : \"\"\r\n      }\r\n  \r\n      &.outline {\r\n        background: #ffd50d10;\r\n        color: #dab70f;\r\n        border-color: #ffd50d;\r\n      }\r\n  \r\n      &.soft {\r\n        background: #ffd50d10;\r\n        color: #dab70f;\r\n        border-color: transparent !important;\r\n      }\r\n  \r\n      &.transparent {\r\n        background: transparent;\r\n        color: #dab70f;\r\n        border-color: transparent !important;\r\n      }\r\n    }\r\n  \r\n    &.secondary {\r\n      color: #fff;\r\n      background: linear-gradient(90deg, #9333ea 0%, #4f46e5 100%);\r\n      border-color: transparent;\r\n      \r\n      ${\r\n        onClickFunction\r\n          ? \"&:hover {color: white !important; background: #9333ea !important;}\"\r\n          : \"\"\r\n      }\r\n  \r\n      &.outline {\r\n        background: #9333ea10;\r\n        color: #9333ea;\r\n        border-color: #9333ea;\r\n      }\r\n  \r\n      &.soft {\r\n        background: #9333ea10;\r\n        color: #9333ea;\r\n        border-color: transparent !important;\r\n      }\r\n  \r\n      &.transparent {\r\n        background: transparent;\r\n        color: #9333ea;\r\n        border-color: transparent !important;\r\n      }\r\n    }\r\n  \r\n    &.danger {\r\n      border-color: #e5484d;\r\n      background: #e5484d;\r\n      color: #fff;\r\n  \r\n      ${\r\n        onClickFunction\r\n          ? \"&:hover {color: white !important; background: red !important;}\"\r\n          : \"\"\r\n      }\r\n  \r\n      &.outline {\r\n        background: #e5484d10;\r\n        color: #e5484d;\r\n        border-color: #e5484d;\r\n      }\r\n  \r\n      &.soft {\r\n        background: #e5484d10;\r\n        color: #e5484d;\r\n        border-color: transparent !important;\r\n      }\r\n  \r\n      &.transparent {\r\n        background: transparent;\r\n        color: #e5484d;\r\n        border-color: transparent !important;\r\n      }\r\n    }\r\n  \r\n    &.success {\r\n      background: #82e299;\r\n      color: #11181c;\r\n      border-color: #82e299;\r\n  \r\n      ${\r\n        onClickFunction\r\n          ? \"&:hover {color: white !important; background: #82e299 !important;}\"\r\n          : \"\"\r\n      }\r\n  \r\n      &.outline {\r\n        background: #82e29910;\r\n        color: #82e299;\r\n        border-color: #82e299;\r\n      }\r\n  \r\n      &.soft {\r\n        background: #82e29910;\r\n        color: #82e299;\r\n        border-color: transparent !important;\r\n      }\r\n  \r\n      &.transparent {\r\n        background: transparent;\r\n        color: #82e299;\r\n        border-color: transparent !important;\r\n      }\r\n    }\r\n  \r\n    &.info {\r\n      background: #4498e0;\r\n      color: #fff;\r\n      border-color: #4498e0;\r\n  \r\n      ${\r\n        onClickFunction\r\n          ? \"&:hover {color: white !important; background: #0d6efd !important;}\"\r\n          : \"\"\r\n      }\r\n  \r\n      &.outline {\r\n        background: #4498e010;\r\n        color: #4498e0;\r\n        border-color: #4498e0;\r\n      }\r\n  \r\n      &.soft {\r\n        background: #EDF5FC;\r\n        color: #4498E0;\r\n        border-color: transparent !important;\r\n      }\r\n  \r\n      &.transparent {\r\n        background: transparent;\r\n        color: #4498e0;\r\n        border-color: transparent !important;\r\n      }\r\n    }\r\n  \r\n    &.white {\r\n      background: #fff;\r\n      color: #11181c;\r\n      border-color: #fff;\r\n  \r\n      ${\r\n        onClickFunction\r\n          ? \"&:hover {color: black !important; background: #efefef !important;}\"\r\n          : \"\"\r\n      }\r\n  \r\n      &.outline {\r\n        background: transparent;\r\n        color: #11181c;\r\n        border-color: #eee;\r\n      }\r\n  \r\n      &.soft {\r\n        background: transparent;\r\n        color: #11181c;\r\n        border-color: transparent !important;\r\n      }\r\n  \r\n      &.transparent {\r\n        background: transparent;\r\n        color: #11181c;\r\n        border-color: transparent !important;\r\n      }\r\n    }\r\n  \r\n    &.black {\r\n      background: #11181c;\r\n      color: #fff;\r\n      border-color: #11181c;\r\n  \r\n      ${\r\n        onClickFunction\r\n          ? \"&:hover {color: black !important; background: #efefef !important;}\"\r\n          : \"\"\r\n      }\r\n  \r\n      &.outline {\r\n        background: transparent;\r\n        color: #11181c;\r\n        border-color: #11181c;\r\n      }\r\n  \r\n      &.soft {\r\n        background: transparent;\r\n        color: #11181c;\r\n        border-color: transparent !important;\r\n      }\r\n  \r\n      &.transparent {\r\n        background: transparent;\r\n        color: #11181c;\r\n        border-color: transparent !important;\r\n      }\r\n    }\r\n  \r\n    &.disabled {\r\n      background: #efefef;\r\n      color: #11181c;\r\n      border-color: #efefef;\r\n  \r\n      ${\r\n        onClickFunction\r\n          ? \"&:hover {color: #fff !important; background: #11181c !important;}\"\r\n          : \"\"\r\n      }\r\n  \r\n      &.outline {\r\n        background: transparent;\r\n        color: #11181c;\r\n        border-color: #efefef;\r\n      }\r\n  \r\n      &.soft {\r\n        background: transparent;\r\n        color: #11181c;\r\n        border-color: transparent !important;\r\n      }\r\n  \r\n      &.transparent {\r\n        background: transparent;\r\n        color: #11181c;\r\n        border-color: transparent !important;\r\n      }\r\n    }\r\n  `;\r\n}\r\n\r\nfunction RenderBadge(props) {\r\n  const children = props.children ?? \"Badge\";\r\n  const variant = props.variant ?? \"\"; // primary, secondary, danger, success, info, outline, white, circle, round, black, soft, transparent, openSans\r\n\r\n  const size = props.size ?? \"md\"; // sm, md, lg\r\n  const className = props.className ?? \"\";\r\n  const as = props.as ?? \"span\";\r\n  const onClickFunction = props.onClickFunction;\r\n  const icon = props.icon;\r\n  const otherProps = props.otherProps ?? {};\r\n\r\n  const Wrapper = styled[as]`\r\n    border-radius: 10px;\r\n    gap: 4px;\r\n\r\n    ${getGeneralContainerBasicStyles(onClickFunction)}\r\n  \r\n    ${getButtonColors(onClickFunction)}\r\n  `;\r\n\r\n  return (\r\n    <Wrapper\r\n      className={`${variant} ${size} ${className}`}\r\n      onClick={onClickFunction ?? (() => {})}\r\n      {...otherProps}\r\n    >\r\n      {icon && (icon.ubication === \"before\" || !icon.ubication) && (\r\n        <i className={`bi ${icon.name}`} />\r\n      )}\r\n      {children}\r\n      {icon && icon.ubication === \"after\" && (\r\n        <i className={`bi ${icon.name}`} />\r\n      )}\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nfunction RenderMultipleBadge(props) {\r\n  const colorsVariant = [\r\n    \"primary\",\r\n    \"secondary\",\r\n    \"danger\",\r\n    \"success\",\r\n    \"info\",\r\n    \"outline\",\r\n    \"white\",\r\n    \"black\",\r\n    \"soft\",\r\n    \"transparent\",\r\n  ];\r\n\r\n  const buttonsData = props.buttonsData;\r\n\r\n  const variant = props.variant ?? \"\"; // primary, secondary, danger, success, info, outline, white, circle, round, black, soft, transparent, openSans\r\n\r\n  const variantWithoutColors = variant\r\n    .split(` `)\r\n    .filter((v) => !colorsVariant.includes(v))\r\n    .toString()\r\n    .replace(\",\", ` `);\r\n\r\n  const colorVariants = variant\r\n    .split(` `)\r\n    .filter((v) => colorsVariant.includes(v))\r\n    .toString()\r\n    .replace(\",\", ` `);\r\n\r\n  const size = props.size ?? \"md\"; // sm, md, lg\r\n  const className = props.className ?? \"\";\r\n  const as = props.as ?? \"span\";\r\n  const otherProps = props.otherProps ?? {};\r\n\r\n  /*If any of the nested badges have an onClickFunction the first one have to have it (Even when it's empty)*/\r\n  const Wrapper = styled[as]`\r\n    border-radius: 10px;\r\n\r\n    ${getGeneralContainerBasicStyles(buttonsData[0].onClick)}  \r\n  `;\r\n\r\n  const PartContainer = styled[as]`\r\n  \r\n    &.sm {\r\n      padding: 3px 8px;\r\n      font-size: 10px;\r\n    }\r\n\r\n    &.sm.first {\r\n      border-radius: 6px 0px 0px 6px;\r\n    }\r\n\r\n    &.sm.last {\r\n      border-radius: 0px 6px 6px 0px;\r\n    }\r\n    \r\n    &.md {\r\n      padding: 4px 10px;\r\n      font-size: 12px;\r\n    }\r\n\r\n    &.md.first {\r\n      border-radius: px 0px 0px px;\r\n    }\r\n\r\n    &.md.last {\r\n      border-radius: 0px px px 0px;\r\n    }\r\n  \r\n    &.lg {\r\n      padding: 8px 12px;\r\n      font-size: 14px;\r\n    }\r\n    \r\n    &.lg.first {\r\n      border-radius: 10px 0px 0px 10px;\r\n    }\r\n\r\n    &.lg.last {\r\n      border-radius: 0px 10px 10px 0px;\r\n    }\r\n\r\n    ${getButtonColors(buttonsData[0].onClick)}\r\n  `;\r\n\r\n  return (\r\n    <Wrapper\r\n      className={`${variantWithoutColors} ${size} ${className}`}\r\n      {...otherProps}\r\n    >\r\n      {buttonsData.map((part, index) => {\r\n        return (\r\n          <PartContainer\r\n            className={`${colorVariants} ${size} ${\r\n              index === 0 ? \"first\" : \"\"\r\n            } ${buttonsData.length === index + 1 ? \"last\" : \"\"}`}\r\n            onClick={part.onClick}\r\n          >\r\n            {part.icon &&\r\n              (part.icon.ubication === \"before\" || !part.icon.ubication) && (\r\n                <i className={`bi ${part.icon.name}`} />\r\n              )}\r\n            {part.children}\r\n            {part.icon && part.icon.ubication === \"after\" && (\r\n              <i className={`bi ${part.icon.name}`} />\r\n            )}\r\n          </PartContainer>\r\n        );\r\n      })}\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nreturn { RenderBadge, RenderMultipleBadge };\r\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb/widget/Element.Badge", "fact_widget_deployments_id": "3311b619f713bc398a7ed6d4b0c4a671", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 5}