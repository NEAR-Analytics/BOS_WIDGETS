{"tx_hash": "HUEtLuvPcr2yGLezVsquaTdcL6dUsbjuBx3VLS9umC8Y", "action_id_social": "75aLvsv8AZtJjNQYZmo2FmEyhntCU49qRrm5bW9qWJj5-0-widget", "block_id": 105653848, "block_timestamp": "2023-11-14T01:51:46.114Z", "signer_id": "f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb", "widget_name": "NDC.CompactPost", "source_code": "// NDC.CompactPost\r\n\r\nconst {\r\n  widgets,\r\n  article,\r\n  kanbanColumns,\r\n  handleOpenArticle,\r\n  handleFilterArticles,\r\n  handleShareButton,\r\n  colLabel,\r\n  baseActions,\r\n  callLibs,\r\n} = props;\r\n\r\nconst libSrcArray = [widgets.libArticle];\r\n\r\nState.init({\r\n  showModal: false,\r\n  functionsToCallByLibrary: {\r\n    article: [],\r\n  },\r\n});\r\n\r\nfunction compactPostStateUpdate(obj) {\r\n  State.update(obj);\r\n}\r\n\r\nfunction onCommit() {\r\n  State.update({ showModal: false });\r\n}\r\n\r\nfunction onCancel() {\r\n  State.update({ showModal: false });\r\n}\r\n\r\nfunction moveArticleListener() {\r\n  if (!state.newLabel) {\r\n    return;\r\n  }\r\n  //To test without commiting use the next line and comment the rest\r\n  // onCommit();\r\n  // State.update({ saving: true });\r\n  const article = getArticleData();\r\n  const newLibsCalls = Object.assign({}, state.functionsToCallByLibrary);\r\n  newLibsCalls.article.push({\r\n    functionName: \"createArticle\",\r\n    key: \"createdArticle\",\r\n    props: {\r\n      article,\r\n      onCommit,\r\n      onCancel,\r\n    },\r\n  });\r\n\r\n  State.update({ functionsToCallByLibrary: newLibsCalls });\r\n}\r\n\r\nfunction getArticleData() {\r\n  let newTags = article.tags.filter((tag) => {\r\n    let lowerCaseTag = tag.toLowerCase().replace(` `, \"-\");\r\n\r\n    const lowercaseLabels = [];\r\n    kanbanColumns.forEach((col) =>\r\n      lowercaseLabels.push(col.toLowerCase().replace(` `, \"-\"))\r\n    );\r\n\r\n    return !lowercaseLabels.includes(lowerCaseTag);\r\n  });\r\n\r\n  newTags.push(state.newLabel.toLowerCase().replace(` `, \"-\"));\r\n\r\n  let newArticleData = article;\r\n  newArticleData.tags = newTags;\r\n\r\n  return newArticleData;\r\n}\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <SpinnerContainer className=\"spinner-border text-secondary\" role=\"status\">\r\n      <span className=\"sr-only\" title=\"Loading...\"></span>\r\n    </SpinnerContainer>\r\n  );\r\n};\r\n\r\nconst ModalContainer = styled.div`\r\n  position: fixed;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  top: 0;\r\n  left: 0;\r\n  height: 100%;\r\n  width: 100%;\r\n  backdrop-filter: blur(10px);\r\n  z-index: 1;\r\n`;\r\n\r\nconst ChangeLabelMainContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  background: white;\r\n  padding: 1rem;\r\n  border-radius: 12px;\r\n  border: 1px solid black;\r\n`;\r\n\r\nconst ClosePopUpContainer = styled.div`\r\n  display: flex;  \r\n  flex-direction: row-reverse;\r\n`;\r\n\r\nconst CloseIcon = styled.div`\r\n  cursor: pointer;\r\n`;\r\n\r\nfunction handleLabelSelection(selectedLabel) {\r\n  State.update({\r\n    newLabel: selectedLabel.replace(` `, \"-\"),\r\n  });\r\n}\r\n\r\nfunction closeModal() {\r\n  State.update({ showModal: false });\r\n}\r\n\r\nconst modal = (\r\n  <ModalContainer>\r\n    <ChangeLabelMainContainer>\r\n      <ClosePopUpContainer>\r\n        <CloseIcon className=\"bi bi-x\" onClick={closeModal}></CloseIcon>\r\n      </ClosePopUpContainer>\r\n      <Widget\r\n        src={widgets.newStyledComponents.Input.Select}\r\n        props={{\r\n          label: \"Select new label\",\r\n          placeholder: kanbanColumns[0],\r\n          value: state.newLabel ?? colLabel,\r\n          options: kanbanColumns.map((label) => {\r\n            return { title: label, value: col };\r\n          }),\r\n          onChange: handleLabelSelection,\r\n        }}\r\n      />\r\n      <Widget\r\n        src={widgets.newStyledComponents.Input.Button}\r\n        props={{\r\n          className: \"info my-3\",\r\n          onClick: moveArticleListener,\r\n          disabled: !state.newLabel,\r\n          children: (\r\n            <div className=\"d-flex justify-conten-center align-items-center\">\r\n              {state.saving ? (\r\n                <Spinner />\r\n              ) : (\r\n                <>\r\n                  <span>Move</span>\r\n                  <i className=\"bi bi-check2\"></i>\r\n                </>\r\n              )}\r\n            </div>\r\n          ),\r\n        }}\r\n      />\r\n    </ChangeLabelMainContainer>\r\n  </ModalContainer>\r\n);\r\n\r\nconst header = (\r\n  <div className=\"card-header\">\r\n    <small className=\"text-muted\">\r\n      <div className=\"row justify-content-between\">\r\n        <div className=\"w-75 text-truncate\">\r\n          <a\r\n            href={`#/mob.near/widget/ProfilePage?accountId=${article.author}`}\r\n            target=\"_blank\"\r\n            className=\"link-dark text-truncate w-100\"\r\n          >\r\n            <Widget\r\n              src={widgets.profileImage}\r\n              props={{\r\n                metadata,\r\n                accountId: article.author,\r\n                widgetName,\r\n                style: { height: \"1.5em\", width: \"1.5em\", minWidth: \"1.5em\" },\r\n              }}\r\n            />\r\n            <span className=\"text-muted\">@{article.author}</span>\r\n          </a>\r\n        </div>\r\n        <div className=\"w-25\">\r\n          <div className=\"d-flex justify-content-end\">\r\n            <Widget\r\n              src={widgets.newStyledComponents.Input.Button}\r\n              props={{\r\n                size: \"sm\",\r\n                className: \"info outline icon\",\r\n                children: <i className=\"bi bi-share\"></i>,\r\n                onClick: () =>\r\n                  handleShareButton(true, {\r\n                    type: \"sharedBlockHeight\",\r\n                    value: article.blockHeight,\r\n                  }),\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </small>\r\n  </div>\r\n);\r\n\r\nconst borders = {\r\n  Idea: \"border-secondary\",\r\n  Comment: \"border-secondary\",\r\n  Submission: \"border-secondary\",\r\n  Attestation: \"border-secondary\",\r\n  Sponsorship: \"border-secondary\",\r\n};\r\n\r\nconst CursorPointer = styled.p`\r\n  cursor: pointer;\r\n`;\r\n\r\nfunction toggleShowModal() {\r\n  State.update({ showModal: !state.showModal });\r\n}\r\n\r\nconst articleTags = article.tags ? (\r\n  <div className=\"card-title\">\r\n    {article.tags.map((tag) => {\r\n      const filter = { filterBy: \"tag\", value: tag };\r\n      return (\r\n        <CursorPointer onClick={() => handleFilterArticles(filter)}>\r\n          <Widget\r\n            src={widgets.newStyledComponents.Element.Badge}\r\n            props={{\r\n              children: tag,\r\n              variant: \"round info\",\r\n              size: \"sm\",\r\n            }}\r\n          />\r\n        </CursorPointer>\r\n      );\r\n    })}\r\n  </div>\r\n) : null;\r\n\r\nconst articleTitle = (\r\n  <div className=\"card-text\">\r\n    <div className=\"row justify-content-between\">\r\n      <h6 className=\"col-9\">{article.title}</h6>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nconst footerActionButtons = (\r\n  <div className=\"d-flex justify-content-start w-100\">\r\n    <Widget\r\n      src={widgets.newStyledComponents.Input.Button}\r\n      props={{\r\n        children: (\r\n          <div className=\"d-flex align-items-center justify-content-center\">\r\n            <span className=\"mx-1\">Move</span>\r\n            <i className=\"bi bi-arrows\"></i>\r\n          </div>\r\n        ),\r\n        disabled: context.accountId !== article.author,\r\n        size: \"sm\",\r\n        className: \"info outline w-25\",\r\n        onClick: toggleShowModal,\r\n      }}\r\n    />\r\n    <Widget\r\n      src={widgets.newStyledComponents.Input.Button}\r\n      props={{\r\n        children: (\r\n          <div className=\"d-flex align-items-center justify-content-center\">\r\n            <span className=\"mx-1\">View</span>\r\n            <i className=\"bi bi-eye fs-6\"></i>\r\n          </div>\r\n        ),\r\n        size: \"sm\",\r\n        className: \"info mx-1 w-25\",\r\n        onClick: () => {\r\n          handleOpenArticle(article);\r\n        },\r\n      }}\r\n    />\r\n  </div>\r\n);\r\n\r\nconst CallLibrary = styled.div`\r\n  display: block;\r\n`;\r\n\r\nconst Card = styled.div`\r\n  user-select: none;\r\n  &:hover {\r\n    box-shadow: rgba(3, 102, 214, 0.3) 0px 0px 0px 3px;\r\n  }\r\n\r\n`;\r\n\r\nconst LimitedMarkdown = styled.div`\r\n      max-height: 6em;\r\n`;\r\n\r\n// Should make sure the posts under the currently top viewed post are limited in size.\r\nconst descriptionArea = (\r\n  <LimitedMarkdown className=\"overflow-auto\">\r\n    <Markdown className=\"card-text\" text={article.body}></Markdown>\r\n  </LimitedMarkdown>\r\n);\r\n\r\nreturn (\r\n  <>\r\n    {state.showModal && modal}\r\n    <Card className={`card my-2 ${borders[\"Submission\"]}`}>\r\n      {header}\r\n      <div className=\"card-body\">\r\n        {articleTitle}\r\n        {descriptionArea}\r\n        {articleTags}\r\n        {footerActionButtons}\r\n      </div>\r\n    </Card>\r\n    <CallLibrary>\r\n      {libSrcArray.map((src) => {\r\n        return callLibs(\r\n          src,\r\n          compactPostStateUpdate,\r\n          state.functionsToCallByLibrary,\r\n          { baseAction: baseActions.articlesBaseAction },\r\n          \"CompactPost\"\r\n        );\r\n      })}\r\n    </CallLibrary>\r\n  </>\r\n);\r\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb/widget/NDC.CompactPost", "fact_widget_deployments_id": "021b08b781bc4fc5682d2d8a6d0bd71f", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}