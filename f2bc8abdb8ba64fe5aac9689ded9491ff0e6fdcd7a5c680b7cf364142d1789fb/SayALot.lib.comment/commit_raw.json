{"tx_hash": "k7KR7P19oQ2eqx7rR6qoFpkuzVidQiiFWV8Yo6jDCB4", "action_id_social": "EooBkYKt9TP9cg7yoCWJTmLrFwEYypQok6mc48kWjNCY-0-widget", "block_id": 98585222, "block_timestamp": "2023-08-11T18:57:52.085Z", "signer_id": "f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb", "widget_name": "SayALot.lib.comment", "source_code": "const { isTest, stateUpdate, libCalls } = props;\r\n\r\nconst prodAction = \"sayALotComment\";\r\nconst testAction = `test_${prodAction}`;\r\nconst action = isTest ? testAction : prodAction;\r\n\r\nfunction createComment(props) {\r\n  const { comment, key } = props;\r\n\r\n  commentHandler(comment, key);\r\n\r\n  resultLibCalls = resultLibCalls.filter((call) => {\r\n    return call.functionName !== \"createComment\";\r\n  });\r\n\r\n  return comment;\r\n}\r\n\r\n//addressForComments should be the realArticleId of the article\r\nconst composeCommentData = (props) => {\r\n  const { comment, realArticleId } = props;\r\n  const data = {\r\n    index: {\r\n      [action]: JSON.stringify({\r\n        key: realArticleId,\r\n        value: {\r\n          type: \"md\",\r\n          comment,\r\n          commentId:\r\n            comment.commentId ?? `c_${context.accountId}-${Date.now()}`,\r\n        },\r\n      }),\r\n    },\r\n  };\r\n\r\n  return data;\r\n};\r\n\r\nconst commentHandler = (comment, key) => {\r\n  if (comment.image || comment.text) {\r\n    const newData = composeCommentData(comment, key);\r\n\r\n    Social.set(newData, {\r\n      force: true,\r\n    });\r\n    // onCancel: () => {\r\n    //   State.update({ saving: false });\r\n    // },\r\n  }\r\n};\r\n\r\nfunction getComment(props) {\r\n  const { realArticleId } = props;\r\n  return Social.index(action, realArticleId, {\r\n    order: \"desc\",\r\n  });\r\n}\r\n\r\nfunction getCommentBlackListByBlockHeight() {\r\n  return [];\r\n}\r\n\r\nfunction filterInvalidArticlesIndexes(commentIndexes) {\r\n  return commentIndexes.filter(\r\n    (commentIndexes) =>\r\n      !getCommentBlackListByBlockHeight().includes(commentIndexes.blockHeight) // Comment is not in blacklist\r\n  );\r\n}\r\n\r\nfunction getValidComments(props) {\r\n  const commentIndexes = getComment(props);\r\n  const validCommentsIndexes = filterInvalidArticlesIndexes(commentIndexes);\r\n\r\n  return validCommentsIndexes;\r\n}\r\n\r\nfunction libCall(call) {\r\n  if (call.functionName === \"createComment\") {\r\n    return createComment(call.props);\r\n  } else if (call.functionName === \"getValidComments\") {\r\n    return getValidComments(call.props);\r\n  }\r\n}\r\n\r\nif (libCalls && libCalls.length > 0) {\r\n  const updateObj = {};\r\n  const resultLibCalls = [...libCalls];\r\n  libCalls.forEach((call) => {\r\n    updateObj[call.key] = libCall(call);\r\n  });\r\n\r\n  updateObj.libCalls = resultLibCalls;\r\n  stateUpdate(updateObj);\r\n}\r\n\r\nreturn <>{JSON.stringify()}</>;\r\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb/widget/SayALot.lib.comment", "fact_widget_deployments_id": "edc8ccced44904df1ee08060db07009d", "inserted_timestamp": "2023-08-11T20:40:23.927Z", "modified_timestamp": "2023-08-11T20:40:23.927Z", "__row_index": 22}