{"tx_hash": "BEKa3PgL7RP9BPNq7f3shDyCKibnhEQrr1ekuJfNsRAB", "action_id_social": "7P4TQJrbrXPXh4okeYC9yhA62ysGz3nSTpVtVHyxwNkd-0-widget", "block_id": 98814436, "block_timestamp": "2023-08-14T22:03:49.365Z", "signer_id": "f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb", "widget_name": "NDC.GeneralCard", "source_code": "//===============================================INITIALIZATION=====================================================\r\n\r\nconst {\r\n  widgets,\r\n  isTest,\r\n  data,\r\n  displayOverlay,\r\n  renderReactions,\r\n  handleOpenArticle,\r\n  handleFilterArticles,\r\n  addressForArticles,\r\n  authorForWidget,\r\n} = props;\r\n\r\nconst tags = data.tags;\r\nconst accountId = data.author;\r\nconst title = data.articleId;\r\nconst content = data.body;\r\nconst timeLastEdit = data.timeLastEdit;\r\n\r\n//TODO ask Dani how are we handling this \"verified\"\r\n\r\nState.init({\r\n  verified: true,\r\n  start: true,\r\n  voted: false,\r\n  shareText: \"Copy link to the clipboard\",\r\n  sliceContent: true,\r\n});\r\n//=============================================END INITIALIZATION===================================================\r\n\r\n//===================================================CONSTS=========================================================\r\n\r\n//=================================================END CONSTS=======================================================\r\n\r\n//==================================================FUNCTIONS=======================================================\r\n\r\nfunction getPublicationDate(creationTimestamp) {\r\n  if (creationTimestamp == 0) {\r\n    return \"Creation timestamp passed wrong\";\r\n  }\r\n  return new Date(creationTimestamp).toDateString();\r\n}\r\n\r\nfunction getUserName() {\r\n  const profile = data.authorProfile;\r\n\r\n  return profile.name ?? getShortUserName();\r\n}\r\n\r\nconst getShortUserName = () => {\r\n  const userId = accountId;\r\n\r\n  if (userId.length === 64) return `${userId.slice(0, 4)}..${userId.slice(-4)}`;\r\n  const name = userId.slice(0, -5); // truncate .near\r\n\r\n  return name.length > 20 ? `${name.slice(0, 20)}...` : name;\r\n};\r\n\r\n//================================================END FUNCTIONS=====================================================\r\n\r\n//=============================================== OLD FUNCTIONS=====================================================\r\n\r\n// const isHuman = Near.view(registry_contract, \"is_human\", {\r\n//   account: context.accountId,\r\n// });\r\n// State.update({ verified: isHuman[0][1].length > 0 });\r\n\r\n// const httpRequestOpt = {\r\n//   headers: { \"x-api-key\": api_key },\r\n// };\r\n\r\n// function getVerifiedHuman() {\r\n//   asyncFetch(\r\n//     `https://api.pikespeak.ai/nominations/is-upvoted-by?candidate=${data.indexerData.nominee}&upvoter=${context.accountId}`,\r\n//     httpRequestOpt\r\n//   ).then((res) => {\r\n//     State.update({ voted: res.body });\r\n//   });\r\n// }\r\n\r\n// if (state.start) {\r\n//   getVerifiedHuman();\r\n//   State.update({ start: false });\r\n// }\r\n\r\n// function handleUpVote() {\r\n//   Near.call(\r\n//     nomination_contract,\r\n//     state.voted ? \"remove_upvote\" : \"upvote\",\r\n//     {\r\n//       candidate: data.indexerData.nominee,\r\n//     },\r\n//     300000000000000,\r\n//     state.voted ? 0 : 1000000000000000000000\r\n//   );\r\n// }\r\n\r\n// function handleShare() {\r\n//   State.update({ shareText: \"Copied\" });\r\n//   clipboard.writeText(\r\n//     \"https://near.org/#/rubycop.near/widget/NDC.Nomination.Candidate.Page?house=\" +\r\n//       data.indexerData.house +\r\n//       \"&candidate=\" +\r\n//       data.indexerData.nominee\r\n//   );\r\n// }\r\n\r\n// function getComponentURL() {\r\n//   const url =\r\n//     \"https%3A%2F%2Fnear.org%2F%23%2Frubycop.near%2Fwidget%2FNDC.Nomination.Candidate.Page%3Fhouse%3D\" +\r\n//     data.indexerData.house +\r\n//     \"%26candidate%3D\" +\r\n//     data.indexerData.nominee;\r\n//   return url;\r\n// }\r\n\r\n// const canUpvote = () =>\r\n//   state.verified && context.accountId != data.indexerData?.nominee;\r\n\r\n// const trimText = (text, limit) => {\r\n//   if (!text) return \"\";\r\n\r\n//   const _limit = limit ?? 200;\r\n//   const ending = text.length > _limit ? \"...\" : \"\";\r\n//   const trimmed = text.slice(0, limit ?? 200);\r\n\r\n//   return `${trimmed}${ending}`;\r\n// };\r\n\r\n// const keyIssues = [\r\n//   {\r\n//     title:\r\n//       \"Involvement in the NEAR ecosystem, qualifications to be a candidate and reasons for being voted\",\r\n//     desc: data.nominationData.HAYInvolve,\r\n//   },\r\n//   {\r\n//     title: \"Strategy to develop the NEAR ecosystem\",\r\n//     desc: data.nominationData.WIYStrategy,\r\n//   },\r\n//   {\r\n//     title: \"Key Issue 1\",\r\n//     desc: data.nominationData.Key_Issue_1,\r\n//   },\r\n//   {\r\n//     title: \"Key Issue 2\",\r\n//     desc: data.nominationData.Key_Issue_2,\r\n//   },\r\n//   {\r\n//     title: \"Key Issue 3\",\r\n//     desc: data.nominationData.Key_Issue_3,\r\n//   },\r\n//   {\r\n//     title: \"Other Platform\",\r\n//     desc: data.nominationData.addition_platform,\r\n//   },\r\n// ];\r\n\r\n//==============================================END OLD FUNCTIONS===================================================\r\n\r\n//==============================================STYLED COMPONENTS===================================================\r\n\r\nconst Card = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  padding: 16px;\r\n  gap: 16px;\r\n  background: #f8f8f9;\r\n  border-radius: 10px;\r\n`;\r\nconst HeaderCard = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  padding: 0px;\r\n  gap: 12px;\r\n  width: 100%;\r\n`;\r\n\r\nconst profilePictureStyles = {\r\n  width: \"45px\",\r\n  height: \"45px\",\r\n  borderRadius: \"50%\",\r\n};\r\nconst ProfilePicture = styled.img`\r\n  width: ${profilePictureStyles.width};\r\n  height: ${profilePictureStyles.height};\r\n  border-radius: ${profilePictureStyles.borderRadius};\r\n`;\r\nconst HeaderContent = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  padding: 0px;\r\n  gap: 4px;\r\n  width: 70%;\r\n`;\r\nconst HeaderTag = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 4px 8px;\r\n  height: 18px;\r\n  background: linear-gradient(90deg, #9333ea 0%, #4f46e5 100%);\r\n  border-radius: 100px;\r\n`;\r\nconst HeaderTagP = styled.p`\r\n  height: 10px;\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  font-size: 11px;\r\n  display: flex;\r\n  align-items: center;\r\n  color: white;\r\n  margin: 0;\r\n`;\r\nconst HeaderContentText = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  padding: 0px;\r\n`;\r\nconst NominationName = styled.p`\r\n  font-weight: 500;\r\n  font-size: 14px;\r\n  margin: 0;\r\n  align-items: center;\r\n  color: #000000;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n`;\r\nconst NominationUser = styled.p`\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  font-size: 12px;\r\n  margin: 0px;\r\n  line-height: 120%;\r\n  display: flex;\r\n  align-items: center;\r\n  color: #828688;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n`;\r\nconst UpvoteButtonDisabled = styled.button`\r\n  display: flex;\r\n  padding: 2px 12px;\r\n  align-items: center;\r\n  gap: 6px;\r\n  border-radius: 4px;\r\n  background: var(--buttons-disable, #c3cace);\r\n  cursor: default !important;\r\n`;\r\n\r\nconst UpvoteButton = styled.button`\r\n  padding: 6px 12px;\r\n  border-radius: 8px;\r\n  background: #fff;\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n  line-height: 24px;\r\n  color: ${(props) => (props.disabled ? \"#C3CACE\" : \"#9333EA\")};\r\n  border: 1px solid #9333ea;\r\n  border-color: ${(props) => (props.disabled ? \"#C3CACE\" : \"\")};\r\n`;\r\n\r\nconst UpvoteCount = styled.p`\r\n  font-size: 12px;\r\n  font-weight: 500;\r\n  line-height: 24px;\r\n  margin: 0px;\r\n  background: linear-gradient(90deg, #9333ea 0%, #4f46e5 100%);\r\n  -webkit-background-clip: text;\r\n  -webkit-text-fill-color: transparent;\r\n  background-clip: text;\r\n  text-fill-color: transparent;\r\n`;\r\nconst Icon = styled.img`\r\n  width: 17px;\r\n  height: 17px;\r\n`;\r\nconst CollapseCandidate = styled.div`\r\n  padding: 12px;\r\n  background: #ffffff;\r\n  border-radius: 6px;\r\n`;\r\nconst CollapseCandidateContent = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n  padding: 0px;\r\n  gap: 5px;\r\n`;\r\nconst CollapseCandidateText = styled.p`\r\n  width: 274px;\r\n  font-style: normal;\r\n  font-weight: 700;\r\n  font-size: 12px;\r\n  line-height: 120%;\r\n  margin: 0px;\r\n  margin-bottom: 3px;\r\n  color: #000000;\r\n`;\r\nconst DownArrow = styled.img`\r\n  width: 16px;\r\n  height: 16px;\r\n`;\r\nconst CandidateTagContainer = styled.div`\r\n  gap: 4px;\r\n`;\r\n\r\nconst KeyIssues = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: flex-start;\r\n  padding: 12px;\r\n  gap: 12px;\r\n  background: #ffffff;\r\n  border-radius: 6px;\r\n  width: 100%;\r\n`;\r\nconst KeyIssuesContent = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  padding: 0px;\r\n  gap: 12px;\r\n  width: 100%;\r\n`;\r\nconst KeyIssuesHeader = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: flex-start;\r\n  padding: 0px;\r\n  gap: 12px;\r\n`;\r\nconst KeyIssuesTitle = styled.p`\r\n  font-style: normal;\r\n  font-weight: 700;\r\n  font-size: 14px;\r\n  line-height: 120%;\r\n  margin-bottom: 0;\r\n`;\r\nconst KeyIssuesContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  padding: 0px;\r\n  gap: 8px;\r\n  overflow-y: scroll;\r\n  height: 250px;\r\n  width: 100%;\r\n`;\r\n\r\nconst ArticleBodyContainer = styled.div`\r\n  margin-right: 0.5rem;\r\n`;\r\n\r\nconst KeyIssueTitle = styled.p`\r\n  font-weight: 500;\r\n  font-size: 11px;\r\n  margin-bottom: 0px;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n`;\r\nconst KeyIssueDescription = styled.p`\r\n  font-weight: 400;\r\n  font-size: 11px;\r\n  margin-bottom: 0;\r\n`;\r\nconst KeyIssueSeparator = styled.div`\r\n  height: 1px;\r\n  margin: 7px 0 2px 0;\r\n  background: rgba(208, 214, 217, 0.4);\r\n`;\r\nconst LowerSection = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n  gap: 8px;\r\n`;\r\nconst LowerSectionContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n  gap: 12px;\r\n  align-self: stretch;\r\n`;\r\nconst ButtonsLowerSection = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  padding: 0px;\r\n  width: 100%;\r\n`;\r\nconst TextLowerSectionContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  padding: 0px;\r\n  gap: 4px;\r\n  width: 239px;\r\n  height: 24px;\r\n\r\n  flex-grow: 1;\r\n`;\r\nconst TimestampText = styled.div`\r\n  font-style: italic;\r\n  font-weight: 300;\r\n  font-size: 11px;\r\n  line-height: 14px;\r\n  margin: 0px;\r\n  gap: 2px;\r\n  color: #000000;\r\n\r\n  b {\r\n    font-weight: 600;\r\n  }\r\n`;\r\nconst CommentsCounter = styled.p`\r\n  width: 96px;\r\n  height: 24px;\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  font-size: 12px;\r\n  line-height: 24px;\r\n  margin: 0px;\r\n  text-align: right;\r\n  background: linear-gradient(90deg, #9333ea 0%, #4f46e5 100%);\r\n  -webkit-background-clip: text;\r\n  -webkit-text-fill-color: transparent;\r\n  background-clip: text;\r\n  text-fill-color: transparent;\r\n`;\r\nconst ButtonsContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  padding: 0px;\r\n  gap: 4px;\r\n  width: 87px;\r\n  height: 28px;\r\n`;\r\nconst TagSection = styled.div`\r\n  display: flex;\r\n  align-items: flex-start;\r\n  gap: 4px;\r\n  flex-wrap: wrap;\r\n  overflow: hidden;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst CommentButtonDisabled = styled.button`\r\n  display: flex;\r\n  padding: 2px 12px;\r\n  align-items: center;\r\n  gap: 6px;\r\n  border-radius: 4px;\r\n  b\r\n  background: var(--buttons-disable, #c3cace);\r\n  cursor: default !important;\r\n`;\r\nconst CommentButtonDiv = styled.button`\r\n  display: flex;\r\n  padding: 2px 12px;\r\n  align-items: center;\r\n  gap: 6px;\r\n  b\r\n  border-radius: 80px;\r\n  background-image: linear-gradient(#f8f8f9, #f8f8f9),\r\n    radial-gradient(circle at top left, #9333ea 0%, #4f46e5 100%);\r\n  background-origin: border-box;\r\n  background-clip: padding-box, border-box;\r\n  border-radius: 4px;\r\n`;\r\nconst CommentButtonCounter = styled.p`\r\n  font-size: 12px;\r\n  font-weight: 500;\r\n  line-height: 24px;\r\n  margin: 0px;\r\n  background: linear-gradient(90deg, #9333ea 0%, #4f46e5 100%);\r\n  -webkit-background-clip: text;\r\n  -webkit-text-fill-color: transparent;\r\n  background-clip: text;\r\n  text-fill-color: transparent;\r\n`;\r\nconst CommentButtonIcon = styled.img`\r\n  width: 14px;\r\n  height: 14px;\r\n`;\r\n\r\nconst DropdownContainer = styled.div`\r\n  position: relative;\r\n  display: inline-block;\r\n`;\r\n\r\nconst Dropbtn = styled.button`\r\n  background-color: #4caf50;\r\n  color: white;\r\n  padding: 16px;\r\n  font-size: 16px;\r\n`;\r\n\r\nconst DropdownContent = styled.div`\r\n  display: none;\r\n  left: 0;\r\n  font-size: 12px;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  position: absolute;\r\n  border-radius: 8px;\r\n  background: #ffffff;\r\n  box-shadow: 0px 0px 30px 0px rgba(0, 0, 0, 0.2);\r\n  border-radius: 8px;\r\n  z-index: 1;\r\n  padding: 8px;\r\n`;\r\n\r\nconst Element = styled.div`\r\n  width: 150px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  cursor: pointer;\r\n  padding: 10px;\r\n\r\n  &:hover {\r\n    border-radius: 6px;\r\n    background: #f8f8f9;\r\n  }\r\n`;\r\n\r\nconst ShareLink = styled.a`\r\n  color: black;\r\n  margin-right: 8px 12px;\r\n  text-decoration: none;\r\n  display: block;\r\n  text-align: start;\r\n`;\r\n\r\nconst ShareIcon = styled.img`\r\n  width: 20px;\r\n`;\r\n\r\nconst DropdownContainerHover = styled.div`\r\n  width: fit-content;\r\n  float: right;\r\n\r\n  &:hover ${DropdownContent} {\r\n    display: flex;\r\n    margin-top: -165px;\r\n  }\r\n`;\r\n\r\nconst Separation = styled.div`\r\n    position: absolute;\r\n  }\r\n`;\r\n//============================================END STYLED COMPONENTS=================================================\r\n\r\n//=================================================MORE STYLES======================================================\r\n\r\nconst sayALotProfileImageStyles = {\r\n  width: profilePictureStyles.width,\r\n  height: profilePictureStyles.height,\r\n  borderRadius: profilePictureStyles.borderRadius,\r\n  overflow: \"hidden\",\r\n};\r\n\r\n//===============================================END MORE STYLES====================================================\r\n\r\n//=================================================COMPONENTS=======================================================\r\n\r\nconst inner = (\r\n  <div className=\"d-flex flex-row mx-1\">\r\n    <Widget\r\n      src=\"mob.near/widget/ProfileImage\"\r\n      props={{\r\n        metadata,\r\n        accountId,\r\n        widgetName,\r\n        style: sayALotProfileImageStyles,\r\n        className: \"me-2 rounded-pill\",\r\n      }}\r\n    />\r\n  </div>\r\n);\r\n\r\nconst renderTags = () => {\r\n  return (\r\n    <>\r\n      {tags.map((tag) => {\r\n        const filter = { filterBy: \"tag\", value: tag };\r\n\r\n        return (\r\n          <div onClick={() => handleFilterArticles(filter)}>\r\n            {tag && (\r\n              <Widget\r\n                src={widgets.styledComponents}\r\n                props={{\r\n                  Tag: { title: tag },\r\n                }}\r\n              />\r\n            )}\r\n          </div>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nconst renderArticleBody = () => {\r\n  let displayedContent = state.sliceContent ? content.slice(0, 1000) : content;\r\n  return (\r\n    <ArticleBodyContainer>\r\n      <Widget\r\n        src=\"mob.near/widget/SocialMarkdown\"\r\n        props={{\r\n          text: displayedContent,\r\n          onHashtag: (hashtag) => (\r\n            <span\r\n              key={hashtag}\r\n              className=\"d-inline-flex\"\r\n              style={{ fontWeight: 500 }}\r\n            >\r\n              <a\r\n                href={`https://near.social/${authorForWidget}/widget/${widgets.thisWidget}?tagShared=${hashtag}`}\r\n                target=\"_blank\"\r\n              >\r\n                #{hashtag}\r\n              </a>\r\n            </span>\r\n          ),\r\n        }}\r\n      />\r\n      {state.sliceContent && content.length > 1000 && (\r\n        <Widget\r\n          src={widgets.styledComponents}\r\n          props={{\r\n            Button: {\r\n              text: `Show more`,\r\n              size: \"sm\",\r\n              className: \"w-100 justify-content-center\",\r\n              onClick: () => {\r\n                State.update({ sliceContent: false });\r\n              },\r\n              icon: <i className=\"bi bi-chat-square-text-fill\"></i>,\r\n            },\r\n          }}\r\n        />\r\n      )}\r\n    </ArticleBodyContainer>\r\n  );\r\n};\r\n\r\n//===============================================END COMPONENTS====================================================\r\n\r\n//===================================================RENDER========================================================\r\nreturn (\r\n  <div className=\"p-2 col-lg-4 col-md-6 col-sm-12\">\r\n    <Card>\r\n      {state.showModal && (\r\n        <Widget\r\n          src={widgets.addComment}\r\n          props={{\r\n            widgets,\r\n            isReplying: false,\r\n            isTest,\r\n            username: data.author,\r\n            realArticleId: data.realArticleId,\r\n            onCloseModal: () => State.update({ showModal: false }),\r\n          }}\r\n        />\r\n      )}\r\n      <HeaderCard className=\"d-flex justify-content-between\">\r\n        <div className=\"d-flex align-items-center gap-2\">\r\n          <Widget\r\n            src=\"mob.near/widget/Profile.OverlayTrigger\"\r\n            props={{ accountId, children: inner }}\r\n          />\r\n          {\r\n            //   cardType == \"nomination\" && (\r\n            //   <ProfilePicture\r\n            //     src={\r\n            //       data.imgURL ??\r\n            //       \"https://apricot-straight-eagle-592.mypinata.cloud/ipfs/QmZBPPMKLdZG2zVpYaf9rcbtNfAp7c3BtsvzxzBb9pNihm?_gl=1*6avmrp*rs_ga*MzkyOTE0Mjc4LjE2ODY4NjgxODc.*rs_ga_5RMPXG14TE*MTY4NjkzMzM2NC4zLjEuMTY4NjkzMzM4Ni4zOC4wLjA.\"\r\n            //     }\r\n            //     alt=\"pic\"\r\n            //   ></ProfilePicture>\r\n            // )\r\n          }\r\n          <HeaderContent>\r\n            {\r\n              //   cardType == \"nomination\" && (\r\n              //   <Widget\r\n              //     src={widgets.styledComponents}\r\n              //     props={{\r\n              //       Tag: {\r\n              //         title:\r\n              //           data.indexerData.house == \"HouseOfMerit\"\r\n              //             ? \"House of Merit\"\r\n              //             : data.indexerData.house == \"CouncilOfAdvisors\"\r\n              //             ? \"Council of Advisors\"\r\n              //             : \"Transparency Commission\",\r\n              //         className: \"dark\",\r\n              //       },\r\n              //     }}\r\n              //   />\r\n              // )\r\n            }\r\n            <HeaderContentText>\r\n              <NominationName>{getUserName()}</NominationName>\r\n              <NominationUser>{getShortUserName()}</NominationUser>\r\n            </HeaderContentText>\r\n          </HeaderContent>\r\n        </div>\r\n        {\r\n          //TODO modify reactions to fit this area properly\r\n        }\r\n        {\r\n          // canUpvote() && cardType == \"nomination\"(\r\n          //     <Widget\r\n          //       src={widgets.styledComponents}\r\n          //       props={{\r\n          //         Button: {\r\n          //           text: `+${data.upVoteData?.upvotes ?? 0}`,\r\n          //           className: \"secondary dark\",\r\n          //           size: \"sm\",\r\n          //           onClick: handleUpVote,\r\n          //           icon: <i className=\"bi bi-hand-thumbs-up\"></i>,\r\n          //         },\r\n          //       }}\r\n          //     />\r\n          //   )\r\n        }\r\n      </HeaderCard>\r\n      {\r\n        //   cardType == \"nomination\" && (\r\n        //   <CollapseCandidate className=\"w-100\">\r\n        //     <CollapseCandidateContent>\r\n        //       <CollapseCandidateText>\r\n        //         Candidate Affiliations\r\n        //       </CollapseCandidateText>\r\n        //       <CandidateTagContainer className=\"w-100 d-flex flex-wrap\">\r\n        //         {JSON.parse(data.nominationData?.afiliation).map((data) => (\r\n        //           <>\r\n        //             {data.company_name && (\r\n        //               <Widget\r\n        //                 src={widgets.styledComponents}\r\n        //                 props={{\r\n        //                   Tag: { title: data.company_name },\r\n        //                 }}\r\n        //               />\r\n        //             )}\r\n        //           </>\r\n        //         ))}\r\n        //       </CandidateTagContainer>\r\n        //     </CollapseCandidateContent>\r\n        //   </CollapseCandidate>\r\n        // )\r\n      }\r\n      <KeyIssuesHeader>\r\n        <KeyIssuesTitle>{title}</KeyIssuesTitle>\r\n      </KeyIssuesHeader>\r\n      <KeyIssues>\r\n        <KeyIssuesContent>\r\n          <KeyIssuesContainer>\r\n            {\r\n              // cardType == \"nomination\" &&\r\n              // keyIssues.map((issue, i) => (\r\n              //   <div className=\"w-100\" key={i}>\r\n              //     <KeyIssueTitle>{issue.title}</KeyIssueTitle>\r\n              //     <KeyIssueDescription className=\"text-secondary\">\r\n              //       {trimText(issue.desc)}\r\n              //     </KeyIssueDescription>\r\n              //     <KeyIssueSeparator />\r\n              //   </div>\r\n              // ))\r\n            }\r\n            {renderArticleBody()}\r\n          </KeyIssuesContainer>\r\n        </KeyIssuesContent>\r\n      </KeyIssues>\r\n      <LowerSection>\r\n        <LowerSectionContainer>\r\n          {tags.length > 0 && (\r\n            <KeyIssues>\r\n              <KeyIssuesContent>\r\n                <KeyIssuesHeader>\r\n                  <KeyIssuesTitle>Tags</KeyIssuesTitle>\r\n                </KeyIssuesHeader>\r\n                <div className=\"d-flex w-100\">\r\n                  <TagSection>{renderTags()}</TagSection>\r\n                </div>\r\n              </KeyIssuesContent>\r\n            </KeyIssues>\r\n          )}\r\n          <ButtonsLowerSection>\r\n            <TextLowerSectionContainer className=\"align-items-center\">\r\n              <i className=\"bi bi-clock\"></i>\r\n              <TimestampText>\r\n                <span>{getPublicationDate(timeLastEdit)}</span>\r\n                <span>by</span>\r\n                <b>{author}</b>\r\n              </TimestampText>\r\n            </TextLowerSectionContainer>\r\n            <Widget\r\n              src={widgets.reactions}\r\n              props={{\r\n                widgets,\r\n                isTest,\r\n                authorForWidget,\r\n                elementReactedId: articleToRenderData.realArticleId,\r\n              }}\r\n            />\r\n          </ButtonsLowerSection>\r\n          {/*TODO review buttons functionality in sayALot*/}\r\n          <div className=\"d-flex w-100 align-items-center\">\r\n            <div className=\"d-flex w-100 gap-2 justify-content-between\">\r\n              <Widget\r\n                src={widgets.styledComponents}\r\n                //TODO review the button text\r\n                props={{\r\n                  Button: {\r\n                    text: `Add comment`,\r\n                    disabled: !state.verified,\r\n                    size: \"sm\",\r\n                    className: \"secondary dark w-100 justify-content-center\",\r\n                    onClick: () => {\r\n                      State.update({ showModal: true });\r\n                    },\r\n                    icon: (\r\n                      <>\r\n                        <i className=\"bi bi-chat-square-text-fill\"></i>\r\n                      </>\r\n                    ),\r\n                  },\r\n                }}\r\n              />\r\n              <Widget\r\n                src={widgets.styledComponents}\r\n                props={{\r\n                  Button: {\r\n                    text: \"View\",\r\n                    size: \"sm\",\r\n                    className: \"primary w-100 justify-content-center\",\r\n                    icon: <i className=\"bi bi-eye fs-6\"></i>,\r\n                    onClick: () => {\r\n                      handleOpenArticle(data);\r\n                    },\r\n                  },\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </LowerSectionContainer>\r\n      </LowerSection>\r\n    </Card>\r\n  </div>\r\n);\r\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb/widget/NDC.GeneralCard", "fact_widget_deployments_id": "8f7f93f52f035e263a05fee909ad035d", "inserted_timestamp": "2023-08-14T23:34:25.995Z", "modified_timestamp": "2023-08-14T23:34:25.995Z", "__row_index": 14}