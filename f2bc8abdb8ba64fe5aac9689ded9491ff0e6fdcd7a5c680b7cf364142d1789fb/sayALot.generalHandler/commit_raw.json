{"tx_hash": "CPZsowwxR77GXnAGekoYZ1Rs6CqBKKzCNKE5pQ3ETEUk", "action_id_social": "7F3RMzTTe9mt3Q95zCbeQrPsQmD28urYppYjGiXd9EyM-0-widget", "block_id": 99582243, "block_timestamp": "2023-08-24T22:57:31.442Z", "signer_id": "f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb", "widget_name": "sayALot.generalHandler", "source_code": "//===============================================INITIALIZATION=====================================================\r\nlet { sharedBlockHeight, tagShared, isTest, accountId } = props;\r\n\r\nconst initLibCalls = [\r\n  {\r\n    functionName: \"getLastEditArticles\",\r\n    key: \"articles\",\r\n    props: {\r\n      env: isTest ? \"test\" : \"prod\",\r\n    },\r\n  },\r\n];\r\n\r\nif (!accountId) accountId = context.accountId;\r\n\r\nconst tabs = {\r\n  SHOW_ARTICLES_LIST: { id: 0 },\r\n  SHOW_ARTICLE: { id: 1 },\r\n  ARTICLE_WORKSHOP: { id: 2 },\r\n  SHOW_ARTICLES_LIST_BY_AUTHORS: { id: 3 },\r\n};\r\n\r\nState.init({\r\n  displayedTabId: tabs.SHOW_ARTICLES_LIST.id,\r\n  articleToRenderData: {},\r\n  filterBy: tagShared\r\n    ? { parameterName: \"tag\", parameterValue: tagShared }\r\n    : { parameterName: \"\" },\r\n  authorsProfiles: [],\r\n  libCalls: initLibCalls,\r\n});\r\n\r\nif (state.filterBy.parameterName != \"\") {\r\n  let newLibCalls = state.libCalls;\r\n\r\n  newLibCalls.props[\"filterBy\"] = state.filterBy;\r\n\r\n  State.update({ libCalls: newLibCalls });\r\n}\r\n\r\n//=============================================END INITIALIZATION===================================================\r\n\r\n//==================================================CONSTS==========================================================\r\n\r\n//const authorForWidget = \"sayalot.near\";\r\nconst authorForWidget =\r\n  \"f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb\";\r\n// const authorForWidget = \"kenrou-it.near\";\r\nconst libSrcArray = [`${authorForWidget}/widget/SayALot.lib.article`];\r\nconst thisWidgetName = \"sayALot.generalHandler\";\r\n\r\n// let writersWhiteList = [\r\n//   \"neardigitalcollective.near\",\r\n//   \"blaze.near\",\r\n//   \"jlw.near\",\r\n//   \"kazanderdad.near\",\r\n//   \"joep.near\",\r\n//   \"sarahkornfeld.near\",\r\n//   \"yuensid.near\",\r\n//   \"shubham007.near\",\r\n//   \"fiftycent.near\",\r\n//   \"ozymandius.near\",\r\n//   \"chloe.near\",\r\n// ];\r\n\r\n// const sayALotWorkers = [\r\n//   \"silkking.near\",\r\n//   \"f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb\",\r\n//   \"blaze.near\",\r\n//   \"ayelen.near\",\r\n//   \"kenrou-it.near\",\r\n// ];\r\n\r\n// if (isTest) {\r\n//   writersWhiteList = sayALotWorkers;\r\n// }\r\n\r\nconst widgets = {\r\n  thisWidget: `${authorForWidget}/widget/${thisWidgetName}`,\r\n  create: `${authorForWidget}/widget/SayALot.Create`,\r\n  styledComponents: \"rubycop.near/widget/NDC.StyledComponents\",\r\n  header: `${authorForWidget}/widget/NDC.NavBar`,\r\n  showArticlesList: `${authorForWidget}/widget/SayALot.AllArticlesList`,\r\n  showArticlesListSortedByAuthors: `${authorForWidget}/widget/SayALot.AllArticlesSortByAuthors`,\r\n  articlesByAuthorCard: `${authorForWidget}/widget/SayALot.ArticlesByAuthorCard`,\r\n  generalCard: `${authorForWidget}/widget/NDC.GeneralCard`,\r\n  oneArticle: `${authorForWidget}/widget/NDC.General.ArticleView`,\r\n  reactions: `${authorForWidget}/widget/NDC.Reactions`,\r\n  addComment: `${authorForWidget}/widget/NDC.SayALot.AddComment`,\r\n  comment: `${authorForWidget}/widget/NDC.Nomination.Candidate.Comment`,\r\n  candidatePage: `#/rubycop.near/widget/NDC.Nomination.Candidate.Page`,\r\n  libComment: `${authorForWidget}/widget/SayALot.lib.comment`,\r\n  upVote: `${authorForWidget}/widget/NDC.UpVoteButton`,\r\n};\r\na;\r\n\r\nconst profile = props.profile ?? Social.getr(`${accountId}/profile`);\r\nif (profile === null) {\r\n  return \"Loading\";\r\n}\r\n\r\nlet authorProfile = {};\r\nif (state.filterBy.parameterName == \"author\") {\r\n  authorProfile = Social.getr(`${state.filterBy.parameterValue}/profile`);\r\n  // if (!authorProfile) return \"Loading...\";\r\n}\r\n\r\nconst brand = {\r\n  homePageId: tabs.SHOW_ARTICLES_LIST.id,\r\n  brandName: \"Say a lot\",\r\n  logoHref:\r\n    \"https://ipfs.near.social/ipfs/bafkreiaqxa4st4vp4rtq2iyobdgqe5tpfg55mmyvfg25upd2qplcxylyfi\",\r\n  logoRemWidth: 6,\r\n  logoRemHeight: 6,\r\n};\r\n\r\nconst navigationPills = [\r\n  { id: tabs.SHOW_ARTICLES_LIST.id, title: \"Articles\" },\r\n  { id: tabs.SHOW_ARTICLES_LIST_BY_AUTHORS.id, title: \"Authors\" },\r\n];\r\n\r\nconst navigationButtons = [\r\n  { id: tabs.ARTICLE_WORKSHOP.id, title: \"+Create article\" },\r\n];\r\n\r\nconst initialBodyAtCreation =\r\n  state.editArticleData.body ??\r\n  `# h1 Heading 8-) \r\n## h2 Heading \r\n### h3 Heading \r\n#### h4 Heading \r\n##### h5 Heading \r\n###### h6 Heading \r\n \r\n \r\n## Horizontal Rules \r\n \r\n___ \r\n \r\n--- \r\n \r\n*** \r\n \r\n \r\n## Typographic replacements \r\n \r\nEnable typographer option to see result. \r\n \r\n(c) (C) (r) (R) (tm) (TM) (p) (P) +- \r\n \r\ntest.. test... test..... test?..... test!.... \r\n \r\n!!!!!! ???? ,,  -- --- \r\n \r\n\"Smartypants, double quotes\" and 'single quotes' \r\n \r\n \r\n## Emphasis \r\n \r\nThis is bold text \r\n \r\nThis is bold text \r\n \r\n*This is italic text* \r\n \r\n_This is italic text_ \r\n \r\nStrikethrough \r\n \r\n \r\n## Blockquotes \r\n \r\n \r\n> Blockquotes can also be nested... \r\n>> ...by using additional greater-than signs right next to each other... \r\n> > > ...or with spaces between arrows. \r\n \r\n \r\n## Lists \r\n \r\nUnordered \r\n \r\n+ Create a list by starting a line with \\`+\\`, \\`-\\`, or \\`*\\` \r\n+ Sub-lists are made by indenting 2 spaces: \r\n  - Marker character change forces new list start: \r\n    * Ac tristique libero volutpat at \r\n    + Facilisis in pretium nisl aliquet \r\n    - Nulla volutpat aliquam velit \r\n+ Very easy! \r\n \r\nOrdered \r\n \r\n1. Lorem ipsum dolor sit amet \r\n2. Consectetur adipiscing elit \r\n3. Integer molestie lorem at massa \r\n \r\n \r\n1. You can use sequential numbers... \r\n1. ...or keep all the numbers as \\`1.\\` \r\n \r\nStart numbering with offset: \r\n \r\n57. foo \r\n1. bar \r\n \r\n \r\n## Code \r\n \r\nInline \\`code\\` \r\n \r\nIndented code \r\n \r\n    // Some comments \r\n    line 1 of code \r\n    line 2 of code \r\n    line 3 of code \r\n \r\n \r\nBlock code \"fences\" \r\n \r\n\\`\\`\\` \r\nSample text here... \r\n\\`\\`\\` \r\n \r\nSyntax highlighting \r\n \r\n\\`\\`\\` js \r\nvar foo = function (bar) { \r\n  return bar++; \r\n}; \r\n \r\nconsole.log(foo(5)); \r\n\\`\\`\\` \r\n \r\n## Tables \r\n \r\n| Option | Description | \r\n| ------ | ----------- | \r\n| data   | path to data files to supply the data that will be passed into templates. | \r\n| engine | engine to be used for processing templates. Handlebars is the default. | \r\n| ext    | extension to be used for dest files. | \r\n \r\nRight aligned columns \r\n \r\n| Option | Description | \r\n| ------:| -----------:| \r\n| data   | path to data files to supply the data that will be passed into templates. | \r\n| engine | engine to be used for processing templates. Handlebars is the default. | \r\n| ext    | extension to be used for dest files. | \r\n \r\n \r\n## Links \r\n \r\nlink text \r\n \r\nlink with title \r\n \r\nAutoconverted link https://github.com/nodeca/pica (enable linkify to see) \r\n \r\n \r\n## Images \r\n \r\n!Minion \r\n!Stormtroopocat \r\n \r\nLike links, Images also have a footnote style syntax \r\n \r\n![Alt text][id] \r\n \r\nWith a reference later in the document defining the URL location: \r\n \r\n[id]: https://octodex.github.com/images/dojocat.jpg  \"The Dojocat\" \r\n \r\n### Emojies \r\n \r\n> Classic markup: :wink: :crush: :cry: :tear: :laughing: :yum: \r\n> \r\n> Shortcuts (emoticons): :-) :-( 8-) ;) \r\n \r\nsee how to change output with twemoji. \r\n \r\n \r\n### Subscript / Superscript \r\n \r\n- 19^th^ \r\n- H~2~O \r\n \r\n \r\n### \\<ins> \r\n \r\n++Inserted text++ \r\n \r\n \r\n### \\<mark> \r\n \r\n==Marked text== \r\n \r\n \r\n### Footnotes \r\n \r\nFootnote 1 link[^first]. \r\n \r\nFootnote 2 link[^second]. \r\n \r\nInline footnote^[Text of inline footnote] definition. \r\n \r\nDuplicated footnote reference[^second]. \r\n \r\n[^first]: Footnote can have markup \r\n \r\n    and multiple paragraphs. \r\n \r\n[^second]: Footnote text. \r\n \r\n \r\n### [Definition lists](https://github.com/markdown-it/markdown-it-deflist) \r\n \r\nTerm 1 \r\n \r\n:   Definition 1 \r\nwith lazy continuation. \r\n \r\nTerm 2 with *inline markup* \r\n \r\n:   Definition 2 \r\n \r\n        { some code, part of Definition 2 } \r\n \r\n    Third paragraph of definition 2. \r\n \r\n_Compact style:_ \r\n \r\nTerm 1 \r\n  ~ Definition 1 \r\n \r\nTerm 2 \r\n  ~ Definition 2a \r\n  ~ Definition 2b \r\n`;\r\n\r\n//=================================================END CONSTS=======================================================\r\n\r\n//=================================================GET DATA=========================================================\r\nconst finalArticles = state.articles;\r\n//===============================================END GET DATA=======================================================\r\n\r\n//=================================================FUNCTIONS========================================================\r\nfunction getValidEditArticleDataTags() {\r\n  let tags = state.editArticleData.tags;\r\n  let newFormatTags = {};\r\n\r\n  tags &&\r\n    tags.map((tag) => {\r\n      newFormatTags[tag] = \"\";\r\n    });\r\n  return newFormatTags;\r\n}\r\n\r\nconst initialCreateState = {\r\n  articleId: state.editArticleData.articleId ?? \"\",\r\n  articleBody: state.editArticleData.body ?? initialBodyAtCreation,\r\n  tags: state.editArticleData.tags ? getValidEditArticleDataTags() : {},\r\n  libCalls: [],\r\n};\r\n\r\nfunction stateUpdate(obj) {\r\n  State.update(obj);\r\n}\r\n\r\nfunction handleOpenArticle(articleToRenderData) {\r\n  State.update({\r\n    displayedTabId: tabs.SHOW_ARTICLE.id,\r\n    articleToRenderData,\r\n    editArticleData: undefined,\r\n  });\r\n}\r\n\r\nfunction handleEditArticle(articleData) {\r\n  State.update({\r\n    displayedTabId: tabs.ARTICLE_WORKSHOP.id,\r\n    editArticleData: articleData,\r\n  });\r\n}\r\n\r\n// TODO fix\r\nfunction handleFilterArticles(filter) {\r\n  State.update({\r\n    displayedTabId: tabs.SHOW_ARTICLES_LIST.id,\r\n    filterBy: { parameterName: filter.filterBy, parameterValue: filter.value },\r\n    editArticleData: undefined,\r\n  });\r\n}\r\n\r\nfunction handleBackButton() {\r\n  props.editArticleData\r\n    ? State.update({\r\n        displayedTabId: tabs.SHOW_ARTICLE.id,\r\n        editArticleData: undefined,\r\n      })\r\n    : State.update({\r\n        displayedTabId: tabs.SHOW_ARTICLES_LIST.id,\r\n        articleToRenderData: {},\r\n        editArticleData: undefined,\r\n      });\r\n}\r\n\r\nfunction handleGoHomeButton() {\r\n  State.update({\r\n    displayedTabId: tabs.SHOW_ARTICLES_LIST.id,\r\n    articleToRenderData: {},\r\n    filterBy: { parameterName: \"\", parameterValue: {} },\r\n    editArticleData: undefined,\r\n  });\r\n}\r\n\r\nfunction handlePillNavigation(navegateTo) {\r\n  State.update({ displayedTabId: navegateTo, editArticleData: undefined });\r\n}\r\n\r\nfunction callLibs(srcArray, stateUpdate, libCalls) {\r\n  return (\r\n    <>\r\n      {srcArray.map((src) => {\r\n        return (\r\n          <Widget\r\n            src={src}\r\n            props={{\r\n              isTest,\r\n              stateUpdate,\r\n              libCalls,\r\n            }}\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n}\r\n\r\n//===============================================END FUNCTIONS======================================================\r\nreturn (\r\n  <>\r\n    <Widget\r\n      src={widgets.header}\r\n      props={{\r\n        isTest,\r\n        stateUpdate,\r\n        handleGoHomeButton,\r\n        handlePillNavigation,\r\n        brand,\r\n        pills: navigationPills,\r\n        navigationButtons,\r\n        displayedTabId: state.displayedTabId,\r\n        handleFilterArticles,\r\n      }}\r\n    />\r\n    {(((state.filterBy.parameterName == \"tag\" ||\r\n      state.filterBy.parameterName == \"author\") &&\r\n      state.displayedTabId == tabs.SHOW_ARTICLES_LIST.id) ||\r\n      state.displayedTabId == tabs.SHOW_ARTICLE.id ||\r\n      state.displayedTabId == tabs.ARTICLE_WORKSHOP.id ||\r\n      state.displayedTabId == tabs.SHOW_ARTICLES_LIST_BY_AUTHORS.id) && (\r\n      <div\r\n        style={{ cursor: \"pointer\" }}\r\n        onClick={\r\n          state.displayedTabId == tabs.SHOW_ARTICLE.id ||\r\n          (state.editArticleData && tabs.ARTICLE_WORKSHOP.id)\r\n            ? handleBackButton\r\n            : handleGoHomeButton\r\n        }\r\n        className=\"my-3\"\r\n      >\r\n        <i className=\"bi bi-chevron-left mr-2\"></i>\r\n        Back\r\n      </div>\r\n    )}\r\n    {state.displayedTabId == tabs.SHOW_ARTICLES_LIST.id && (\r\n      <Widget\r\n        src={widgets.showArticlesList}\r\n        props={{\r\n          isTest,\r\n          finalArticles,\r\n          tabs,\r\n          widgets,\r\n          addressForArticles,\r\n          handleOpenArticle,\r\n          handleFilterArticles,\r\n          authorForWidget,\r\n        }}\r\n      />\r\n    )}\r\n    {state.displayedTabId == tabs.SHOW_ARTICLE.id && (\r\n      <Widget\r\n        src={widgets.oneArticle}\r\n        props={{\r\n          isTest,\r\n          widgets,\r\n          handleFilterArticles,\r\n          articleToRenderData: state.articleToRenderData,\r\n          authorForWidget,\r\n          handleEditArticle,\r\n        }}\r\n      />\r\n    )}\r\n\r\n    {state.displayedTabId == tabs.SHOW_ARTICLES_LIST_BY_AUTHORS.id && (\r\n      <Widget\r\n        src={widgets.showArticlesListSortedByAuthors}\r\n        props={{\r\n          isTest,\r\n          finalArticles,\r\n          tabs,\r\n          widgets,\r\n          handleOpenArticle,\r\n          handleFilterArticles,\r\n          authorForWidget,\r\n        }}\r\n      />\r\n    )}\r\n\r\n    {state.displayedTabId == tabs.ARTICLE_WORKSHOP.id && (\r\n      <Widget\r\n        src={widgets.create}\r\n        props={{\r\n          isTest,\r\n          addressForArticles,\r\n          authorForWidget,\r\n          stateUpdate,\r\n          widgets,\r\n          initialBody: initialBodyAtCreation,\r\n          initialCreateState,\r\n          editArticleData: state.editArticleData,\r\n          callLibs,\r\n          widgets,\r\n          handleFilterArticles,\r\n          handleEditArticle,\r\n        }}\r\n      />\r\n    )}\r\n    <div style={{ display: \"none\" }}>\r\n      {callLibs(libSrcArray, stateUpdate, state.libCalls)}\r\n    </div>\r\n  </>\r\n);\r\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb/widget/sayALot.generalHandler", "fact_widget_deployments_id": "f5285fe7a72529306c723c3387db8ec5", "inserted_timestamp": "2023-08-25T00:47:34.729Z", "modified_timestamp": "2023-08-25T00:47:34.729Z", "__row_index": 35}