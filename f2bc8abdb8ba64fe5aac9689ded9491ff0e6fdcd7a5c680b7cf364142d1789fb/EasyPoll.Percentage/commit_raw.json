{"tx_hash": "3R91tYSGSoAa4cKLNwUJdvSaSv7HQNFih2MFWFviQRSC", "action_id_social": "EsH9bHR7q2qonxX1aCemX4hDAfAbAGStk2dy5LJjzZqW-0-widget", "block_id": 94321001, "block_timestamp": "2023-06-16T15:50:56.996Z", "signer_id": "f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb", "widget_name": "EasyPoll.Percentage", "source_code": "const ResponsiveText = styled.span`\r\n  @media screen and (max-width: 1024px)  {\r\n      font-size: 11px;\r\n  }\r\n`;\r\nconst ResponsiveTextOption = styled.p`\r\n  whitespace: pre-wrap;\r\n  margin-bottom: 2px !important;\r\n  @media screen and (max-width: 1024px)  {\r\n      font-size: 11px;\r\n  }\r\n`;\r\nconst TopMarginPercentage = styled.span`\r\n  margin: 0.5rem 0px 0.4rem 0.3rem;\r\n  @media screen and (max-width: 1024px)  {\r\n      margin: 0.6rem 0px 0.4rem 0.3rem;\r\n      font-size: 11px;\r\n  }\r\n`;\r\n\r\nconst VoteButton = styled.div`\r\n  border-radius: 20px;\r\n  border: none;\r\n  display: flex;\r\n  padding: 0;\r\n  position: relative;\r\n  background: #f3f3f2;\r\n  width: 100%;\r\n  margin-bottom: 14px;\r\n  cursor: pointer;\r\n\r\n  .button {\r\n    border-radius: 20px;\r\n    padding: 12px 20px;\r\n    text-align: left;\r\n    font-weight: 600;\r\n    font-size: 15px;\r\n    transition: all 0.4s ease-in-out;\r\n    text-align: center;\r\n    display: flex;\r\n    justify-content: center;\r\n    min-width: 90px;\r\n    width: 90px;\r\n\r\n    @media (max-width: 600px) {\r\n      justify-content: start;\r\n    }\r\n  }\r\n\r\n  .votes {\r\n    text-align: right;\r\n    padding: 12px 16px;\r\n    position: absolute;\r\n    right: 0;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    color: rgb(27, 27, 24);\r\n  }\r\n\r\n  .preview {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    height: 100%;\r\n    border-radius: 20px;\r\n    transition: all 0.4s ease-in-out;\r\n    z-index: 0;\r\n  }\r\n\r\n`;\r\n\r\nfunction calculatePercentageOfOption(votes, index) {\r\n  const validAnswers = votes.reduce((acc, curr) => acc + curr, 0);\r\n\r\n  if (validAnswers == 0 || votes.length == 0) return 0;\r\n\r\n  const votesToThisOption = votes[index];\r\n  return ((votesToThisOption / validAnswers) * 100).toFixed(2);\r\n}\r\n\r\nreturn (\r\n  <div>\r\n    <div className=\"align-content-center\">\r\n      {/* Set the width of the next div to make the bar grow. At the same, use the same value to fill the span tag */}\r\n      {!props.canVote && (\r\n        <ResponsiveTextOption\r\n          style={{\r\n            marginTop: 15,\r\n            fontWeight: \"500\",\r\n          }}\r\n        >\r\n          {props.option} \u2022\r\n          <TopMarginPercentage\r\n            className=\"text-secondary\"\r\n            style={{\r\n              fontWeight: \"400\",\r\n              marginTop: \"0.8rem\",\r\n            }}\r\n          >\r\n            (\r\n            {\r\n              props.countVotes(props.questionNumber, props.questionType)[\r\n                props.optionNumber\r\n              ]\r\n            }{\" \"}\r\n            votes)\r\n          </TopMarginPercentage>\r\n        </ResponsiveTextOption>\r\n      )}\r\n      {!props.canVote ? (\r\n        <>\r\n          <VoteButton>\r\n            <span\r\n              style={{\r\n                width: `${\r\n                  calculatePercentageOfOption(\r\n                    props.countVotes(props.questionNumber, props.questionType),\r\n                    props.optionNumber\r\n                  ) < 5\r\n                    ? 5\r\n                    : calculatePercentageOfOption(\r\n                        props.countVotes(\r\n                          props.questionNumber,\r\n                          props.questionType\r\n                        ),\r\n                        props.optionNumber\r\n                      )\r\n                }%`,\r\n                opacity: 1,\r\n                backgroundColor: `${props.getBgColor(\r\n                  props.optionNumber,\r\n                  true\r\n                )}`,\r\n              }}\r\n              className=\"button\"\r\n            >\r\n              <span className=\"vote\">\r\n                <span style={{ opacity: 0 }}>b</span>\r\n              </span>\r\n            </span>\r\n            <span className=\"votes\">\r\n              <span className=\"preview\" />\r\n              {calculatePercentageOfOption(\r\n                props.countVotes(props.questionNumber, props.questionType),\r\n                props.optionNumber\r\n              )}\r\n              %\r\n            </span>\r\n          </VoteButton>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <input\r\n            className=\"form-check-input\"\r\n            id={`${props.questionNumber}-${props.optionNumber}`}\r\n            name={`${props.questionNumber}-${props.questionType}`}\r\n            key={`${props.questionNumber}-${props.optionNumber}-${props.vote}`}\r\n            style={props.getInputStyles(\r\n              props.questionType,\r\n              props.questionNumber,\r\n              props.optionNumber\r\n            )}\r\n            type={props.questionType == \"2\" ? \"checkbox\" : \"radio\"}\r\n            value={props.optionNumber}\r\n            checked={\r\n              props.questionType == \"2\"\r\n                ? props.vote[props.questionNumber].includes(\r\n                    props.optionNumber + \"\"\r\n                  )\r\n                : props.vote[props.questionNumber] == props.optionNumber + \"\"\r\n            }\r\n            onClick={\r\n              props.questionType != \"2\" &&\r\n              props.clickRadioInputHandler(\r\n                props.questionNumber,\r\n                props.optionNumber\r\n              )\r\n            }\r\n            onChange={\r\n              props.questionType == \"2\" &&\r\n              props.clickCheckboxInputHandler(\r\n                props.questionNumber,\r\n                props.optionNumber\r\n              )\r\n            }\r\n          />\r\n          <label for={`${props.questionNumber}-${props.optionNumber}`}>\r\n            {props.option}\r\n          </label>\r\n        </>\r\n      )}\r\n    </div>\r\n  </div>\r\n);\r\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb/widget/EasyPoll.Percentage", "fact_widget_deployments_id": "1a34f954d7032020f84546ca0f3756ee", "inserted_timestamp": "2000-01-01T00:00:00.000Z", "modified_timestamp": "2000-01-01T00:00:00.000Z", "__row_index": 0}