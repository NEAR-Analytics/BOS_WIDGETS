{"tx_hash": "B97XuYSbBTs29f9r88pCG59ExAqfe4w2Gh8JRM5M4CBK", "action_id_social": "4cQwZ7tHdWLSHGAcPGa9DtkUBYC8tCfbb4EscFGtoPAY-0-widget", "block_id": 103094393, "block_timestamp": "2023-10-11T02:16:34.665Z", "signer_id": "f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb", "widget_name": "SayALot.UpVoteButton", "source_code": "const {\n  isTest,\n  authorForWidget,\n  reactedElementData,\n  widgets,\n  disabled,\n  articleSbts,\n  upVotes,\n} = props;\n\nconst data = reactedElementData;\n\nconst libSrcArray = [widgets.libUpVotes];\n\nconst initLibCalls = [\n  {\n    functionName: \"getUpVotes\",\n    key: \"upVotes\",\n    props: {\n      id: data.id ?? `${data.author}-${data.timeCreate}`,\n      articleSbts,\n    },\n  },\n];\n\nif (!upVotes) {\n  State.init({\n    libCalls: initLibCalls,\n    upVotes: [],\n  });\n}\n\nlet upVotesData = upVotes ?? state.upVotes;\n\nlet userVote = upVotesData.find((vote) => vote.accountId === context.accountId);\n\nlet hasUserVoted = userVote !== undefined;\n\nfunction getUpVoteButtonClass() {\n  if (hasUserVoted) {\n    return \"primary\";\n  } else {\n    return \"secondary dark\";\n  }\n}\n\nfunction callLibs(srcArray, stateUpdate, libCalls) {\n  return (\n    <>\n      {srcArray.map((src) => {\n        return (\n          <Widget\n            src={src}\n            props={{\n              isTest,\n              stateUpdate,\n              libCalls,\n            }}\n          />\n        );\n      })}\n    </>\n  );\n}\n\nfunction stateUpdate(obj) {\n  State.update(obj);\n}\n\nfunction upVoteButtonListener() {\n  console.log(\"Inside upVoteButtonListener\");\n  console.log(\"Inside upVoteButtonListener2: \", [...state.libCalls]);\n  let newLibCalls = [...state.libCalls] ?? [];\n  console.log(\"Inside upVoteButtonListener3: \");\n\n  if (!hasUserVoted) {\n    newLibCalls.push({\n      functionName: \"addVote\",\n      key: \"newVote\",\n      props: {\n        id: data.id ?? `${data.author}-${data.timeCreate}`,\n      },\n    });\n  } else {\n    newLibCalls.push({\n      functionName: \"deleteVote\",\n      key: \"deletedVote\",\n      props: {\n        id: data.id ?? `${data.author}-${data.timeCreate}`,\n        upVoteId: userVote.value.upVoteId,\n      },\n    });\n  }\n  State.update({ libCalls: newLibCalls });\n}\n\nconst IconContainer = styled.div`\n  transform: rotate(-90deg);\n`;\n\nconst Icon = styled.i`\n  margin: 0px !important;\n`;\n\nconst CallLibrary = styled.div`\n  display: none;\n`;\n\nreturn (\n  <>\n    <Widget\n      src={widgets.styledComponents}\n      props={{\n        Button: {\n          text: `+${upVotesData.length}`,\n          disabled,\n          className: `${getUpVoteButtonClass()}`,\n          size: \"sm\",\n          onClick: upVoteButtonListener,\n          icon: (\n            <IconContainer>\n              <Icon className=\"bi bi-fast-forward-fill\"></Icon>\n            </IconContainer>\n          ),\n          // icon: (\n          //   <IconContainer>\n          //     <Icon className=\"bi bi-fast-forward-button\"></Icon>\n          //   </IconContainer>\n          // ),\n          // icon: <i className=\"bi bi-hand-thumbs-up\"></i>,\n          // icon: \"\u23eb\",\n        },\n      }}\n    />\n\n    <CallLibrary>\n      {callLibs(libSrcArray, stateUpdate, state.libCalls)}\n    </CallLibrary>\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb/widget/SayALot.UpVoteButton", "fact_widget_deployments_id": "5c4cad5a2d07f8969b00cae007698a72", "inserted_timestamp": "2023-10-11T04:18:25.520Z", "modified_timestamp": "2023-10-11T04:18:25.520Z", "__row_index": 25}