{"tx_hash": "CrcVu1daWPWgyJtGpmGTHex88zwDgy4VHkoK8p3MtbPX", "action_id_social": "D8P9RQRWecpPHbkEzHNzJ9f68MwTZdf9JfWCQhpZPcmh-0-widget", "block_id": 105653864, "block_timestamp": "2023-11-14T01:52:03.147Z", "signer_id": "f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb", "widget_name": "NDC.KanbanBoard", "source_code": "// NDC.KanbanBoard\r\n\r\nconst {\r\n  isTest,\r\n  widgets,\r\n  kanbanColumns,\r\n  finalArticles,\r\n  handleOpenArticle,\r\n  handleShareButton,\r\n  handleFilterArticles,\r\n  authorForWidget,\r\n  kanbanRequiredTags,\r\n  kanbanExcludedTags,\r\n  sbts,\r\n  baseActions,\r\n  callLibs,\r\n} = props;\r\n\r\n//Commented so you can test if needed\r\n\r\n// function callLibs(\r\n//   src,\r\n//   stateUpdate,\r\n//   functionsToCallByLibrary,\r\n//   extraProps,\r\n//   callerWidget\r\n// ) {\r\n//   return (\r\n//     <Widget\r\n//       src={src}\r\n//       props={{\r\n//         isTest,\r\n//         stateUpdate,\r\n//         functionsToCallByLibrary,\r\n//         callLibs,\r\n//         widgets,\r\n//         callerWidget,\r\n//         ...extraProps,\r\n//       }}\r\n//     />\r\n//   );\r\n// }\r\n\r\n//This is here so the code dosn't brake if the functions are not passed\r\nif (!handleFilterArticles) {\r\n  handleFilterArticles = () => {\r\n    console.log(\"handleFilterArticles clicked\");\r\n  };\r\n}\r\nif (!handleOpenArticle) {\r\n  handleOpenArticle = () => {\r\n    console.log(\"handleOpenArticle clicked\");\r\n  };\r\n}\r\nif (!handleShareButton) {\r\n  handleShareButton = () => {\r\n    console.log(\"handleShareButton clicked\");\r\n  };\r\n}\r\n\r\nconst articles = finalArticles[sbts[0]];\r\n\r\nif (!articles) {\r\n  return (\r\n    <h4 className=\"text-danger\">\r\n      Prop \"articles\" passed wrongly to NDC.KanbanBoard\r\n    </h4>\r\n  );\r\n}\r\n\r\nif (!kanbanRequiredTags) {\r\n  kanbanRequiredTags = [];\r\n}\r\n\r\nif (!kanbanExcludedTags) {\r\n  kanbanExcludedTags = [];\r\n}\r\n\r\nif (!kanbanColumns) {\r\n  kanbanColumns = [\"widget\", \"integration\", \"feature-request\"];\r\n}\r\n\r\nconst CursorPointer = styled.p`\r\n  cursor: pointer;\r\n`;\r\n\r\nconst articlesPerLabel = kanbanColumns.map((cl) => {\r\n  let articlesOnThisColumn = articles.filter((article) => {\r\n    const lowerCaseCL = cl.toLocaleLowerCase().replace(` `, \"-\");\r\n\r\n    return article.tags.includes(lowerCaseCL);\r\n  });\r\n  return { label: cl, articles: articlesOnThisColumn };\r\n});\r\n\r\nfunction getColumnWidth() {\r\n  if (articlesPerLabel.length <= 3) {\r\n    return \"4\";\r\n  } else {\r\n    return \"3\";\r\n  }\r\n}\r\n\r\nreturn (\r\n  <div>\r\n    <div className=\"row mb-2\">\r\n      {kanbanRequiredTags.length > 0 ? (\r\n        <div className=\"col\">\r\n          <small className=\"text-muted\">\r\n            Required tags:\r\n            {kanbanRequiredTags.map((label) => {\r\n              return (\r\n                <CursorPointer\r\n                  onClick={() =>\r\n                    handleFilterArticles({\r\n                      filterBy: \"tag\",\r\n                      value: { label },\r\n                    })\r\n                  }\r\n                >\r\n                  <Widget\r\n                    src={widgets.newStyledComponents.Element.Badge}\r\n                    props={{\r\n                      children: label,\r\n                      variant: \"round info\",\r\n                      size: \"lg\",\r\n                    }}\r\n                  />\r\n                </CursorPointer>\r\n              );\r\n            })}\r\n          </small>\r\n        </div>\r\n      ) : null}\r\n      {kanbanExcludedTags.length > 0 ? (\r\n        <div className=\"col\">\r\n          <small className=\"text-muted\">\r\n            Excluded labels:\r\n            {kanbanExcludedTags.map((label) => {\r\n              return (\r\n                <CursorPointer\r\n                  onClick={() =>\r\n                    handleFilterArticles({\r\n                      filterBy: \"tag\",\r\n                      value: { label },\r\n                    })\r\n                  }\r\n                >\r\n                  <Widget\r\n                    src={widgets.newStyledComponents.Element.Badge}\r\n                    props={{\r\n                      children: label,\r\n                      variant: \"round info\",\r\n                      size: \"lg\",\r\n                    }}\r\n                  />\r\n                </CursorPointer>\r\n              );\r\n            })}\r\n          </small>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n\r\n    <div className=\"row\">\r\n      {articlesPerLabel.map((col) => {\r\n        return (\r\n          <div className={`col-${getColumnWidth()}`}>\r\n            <div className=\"card\">\r\n              <div className=\"card-body border-secondary\">\r\n                <h6 className=\"card-title\">\r\n                  {col.label.toUpperCase()}({col.articles.length})\r\n                </h6>\r\n                {col.articles.map((article) => {\r\n                  return (\r\n                    <Widget\r\n                      src={widgets.compactPost}\r\n                      props={{\r\n                        widgets,\r\n                        article,\r\n                        kanbanColumns,\r\n                        handleOpenArticle,\r\n                        handleFilterArticles,\r\n                        handleShareButton,\r\n                        colLabel: col.label,\r\n                        baseActions,\r\n                        callLibs,\r\n                      }}\r\n                    />\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  </div>\r\n);\r\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb/widget/NDC.KanbanBoard", "fact_widget_deployments_id": "3ea2a21495ef5aa118d44c9d32b66d3b", "inserted_timestamp": "2023-11-14T03:34:18.922Z", "modified_timestamp": "2023-11-14T03:34:18.922Z", "__row_index": 0}