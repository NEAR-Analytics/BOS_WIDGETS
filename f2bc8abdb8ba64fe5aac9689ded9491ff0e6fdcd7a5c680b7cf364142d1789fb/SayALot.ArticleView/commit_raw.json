{"tx_hash": "DngNaQ9d3LAZYCDDF1GYju83cJroMzG9eE3h1kv9xoSg", "action_id_social": "BVfJ4nmDPqskJzGmV1E2iKQhX3mdWHpku6XjeULfDeAP-0-widget", "block_id": 102155613, "block_timestamp": "2023-09-28T15:06:02.604Z", "signer_id": "f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb", "widget_name": "SayALot.ArticleView", "source_code": "//This code comes from NDC.Nomination.Candidate.Page > NDC.Nomination.Candidate.DesktopView\n\nconst {\n  widgets,\n  isTest,\n  handleFilterArticles,\n  articleToRenderData,\n  authorForWidget,\n  handleEditArticle,\n} = props;\n\nconst accountId = articleToRenderData.author;\nconst realArticleId =\n  articleToRenderData.realArticleId ??\n  `${articleToRenderData.author}-${articleToRenderData.timeCreate}`;\n\nconst libSrcArray = [widgets.libComment];\n\nfunction callLibs(srcArray, stateUpdate, libCalls) {\n  return (\n    <>\n      {srcArray.map((src) => {\n        return (\n          <Widget\n            src={src}\n            props={{\n              isTest,\n              stateUpdate,\n              libCalls,\n            }}\n          />\n        );\n      })}\n    </>\n  );\n}\n\nconst tabs = [\n  {\n    id: \"generalInfo\",\n    title: \"Post info\",\n    icon: \"bi bi-info-circle\",\n  },\n  { id: \"comments\", title: \"Comments\", icon: \"bi bi-chat-square-dots-fill\" },\n];\n\nconst prodAction = \"sayALotArticle\";\nconst testAction = `test_${prodAction}`;\nconst action = isTest ? testAction : prodAction;\n\nconst libCalls = [\n  {\n    functionName: \"getValidComments\",\n    key: \"comments\",\n    props: { realArticleId },\n  },\n];\n\nState.init({\n  tabSelected: tabs[1].id,\n  comments: [],\n  sliceContent: true,\n  libCalls,\n});\n\nconst timeLastEdit = new Date(articleToRenderData.timeLastEdit);\n\nconst CursorPointer = styled.div`\n  cursor: pointer;\n`;\n\nconst DetailContent = styled.div`\n  display: inline-flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 12px;\n`;\n\nconst TagContainer = styled.div`\n  display: flex;\n  align-items: flex-start;\n  gap: 4px;\n`;\n\nconst HouseTagDiv = styled.div`\n  display: flex;\n  padding: 4px 8px;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n  border-radius: 100px;\n  background: var(\n    --gradient-purple-gradient,\n    linear-gradient(90deg, #9333ea 0%, #4f46e5 100%)\n  );\n`;\n\nconst HouseTagText = styled.p`\n  color: #fff;\n  font-size: 7px;\n  font-weight: 500;\n  line-height: 120%;\n  margin: 0px;\n`;\n\nconst TagDiv = styled.div`\n  display: flex;\n  justify-content: center;\n  padding: 4px 8px;\n  align-items: center;\n  gap: 10px;\n  border-radius: 100px;\n  border: solid 1px transparent;\n  border-radius: 80px;\n  background-image: linear-gradient(#eae5f7, #eae5f7),\n    radial-gradient(circle at top left, #9333ea 0%, #4f46e5 100%);\n  background-origin: border-box;\n  background-clip: padding-box, border-box;\n`;\n\nconst TagDivText = styled.p`\n  font-size: 8px;\n  margin: 0px;\n  font-weight: 500;\n  line-height: 120%;\n  background: linear-gradient(90deg, #9333ea 0%, #4f46e5 100%);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  background-clip: text;\n  text-fill-color: transparent;\n`;\n\nconst NominationTitleContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n`;\n\nconst NominationTitle = styled.p`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  margin: 7px 0 0 0;\n  color: #000;\n  font-size: 18px;\n  font-weight: 500;\n  line-height: 120%;\n`;\nconst UserLink = styled.a`\n  cursor: pointer;\n  &:hover {\n    text-decoration: none;\n  }\n`;\nconst NominationUser = styled.p`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  color: #828688;\n  margin: 0 0 7px 0;\n  font-size: 14px;\n  line-height: 120%;\n`;\n\nconst UpvoteButtonDisabled = styled.button`\n  display: flex;\n  padding: 2px 12px;\n  align-items: center;\n  gap: 6px;\n  border-radius: 4px;\n  border: solid 1px transparent;\n  background: var(--buttons-disable, #c3cace);\n  cursor: default !important;\n`;\n\nconst UpvoteButton = styled.button`\n  display: flex;\n  padding: 2px 12px;\n  align-items: center;\n  gap: 6px;\n  border-radius: 4px;\n  border: solid 1px transparent;\n  background-image: linear-gradient(#f8f8f9, #f8f8f9),\n    radial-gradient(\n      circle at left top,\n      rgb(147, 51, 234) 0%,\n      rgb(79, 70, 229) 100%\n    );\n  background-origin: border-box;\n  background-clip: padding-box, border-box;\n`;\n\nconst UpvoteCount = styled.p`\n  font-size: 12px;\n  font-weight: 500;\n  line-height: 24px;\n  margin: 0px;\n  background: linear-gradient(90deg, #9333ea 0%, #4f46e5 100%);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  background-clip: text;\n  text-fill-color: transparent;\n`;\n\nconst Icon = styled.img`\n  width: 17px;\n  height: 17px;\n`;\nconst BodyContainer = styled.div`\n  border-radius: 8px;\n  margin: 10px 0;\n  background: #F8F8F9;\n  padding: 20px;\n`;\n\nconst PlatformCard = styled.div`\n  display: flex;\n  border-radius: 6px;\n  background: background: \"rgb(255 255 255 / 0%);\n`;\n\nconst PlatformContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 12px;\n  width: 100%;\n`;\n\nconst PlatformInfoDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 8px;\n`;\n\nconst PlatformInfoHeader = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 2px;\n`;\n\nconst PlatInforHeadText = styled.p`\n  margin: 0px;\n  color: var(--000000, #000);\n  font-size: 10px;\n  font-weight: 500;\n  line-height: 120%;\n`;\n\nconst PlatInfoHeadSeparator = styled.hr`\n  height: 0px;\n  margin: 8px 0 0 0;\n\n  border: 1px solid rgba(208, 214, 217, 1);\n`;\n\nconst KeyIssuesContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 2px;\n`;\n\nconst KeyIssueTitle = styled.p`\n  font-size: 12px;\n  line-height: 120%;\n  margin: 0px;\n  font-weight: 500;\n  line-height: 18px;\n  text-align: left;\n  padding: 10px;\n`;\n\nconst KeyIssueDescription = styled.p`\n  color: #212427;\n  font-size: 12px;\n  line-height: 130%;\n  margin: 0px;\n  padding: 10px;\n  line-height: 18px;\n  text-align: justify;\n`;\n\nconst CandidateCard = styled.div`\n  display: flex;\n  padding: 20px;\n  align-items: center;\n  align-self: stretch;\n  border-radius: 6px;\n  background: #fff;\n`;\n\nconst CandidateContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: flex-start;\n  gap: 12px;\n`;\n\nconst ContentHeader = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  align-self: stretch;\n`;\n\nconst ContentHeaderText = styled.p`\n  font-size: 18px;\n  font-weight: 500;\n  margin: 0px;\n`;\n\nconst CandidateInfoDiv = styled.div`\n  width: 100%;\n  padding: 16px;\n  background: white;\n  gap: 16px;\n  border-radius: 8px;\n`;\n\nconst CandidateInfoHeader = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  align-self: stretch;\n`;\n\nconst CandidateImage = styled.img`\n  width: 32px;\n  height: 32px;\n`;\n\nconst CandidateInfoData = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 4px;\n  flex: 1 0 0;\n`;\n\nconst CandidateTagDiv = styled.div`\n  display: flex;\n  height: 20px;\n  padding: 4px 8px;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n  border-radius: 100px;\n  border: 1px solid var(--secondary-warning, #f19d38);\n  background: #f0e1ce;\n`;\n\nconst CandidateTagText = styled.p`\n  color: var(--secondary-warning, #f19d38);\n  font-size: 10px;\n  font-weight: 500;\n  line-height: 120%;\n  margin: 0px;\n`;\n\nconst CandidateTime = styled.h6`\n  margin: 3px 0 0 0;\n  font-size: 10px;\n  font-weight: 500;\n  line-height: 120%;\n  color: #828688;\n`;\n\nconst CandidateTextInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 4px;\n  align-self: stretch;\n`;\n\nconst SectionTitle = styled.h5`\n  font-size: 12px;\n  font-weight: 500;\n  line-height: 120%;\n  margin: 16px 0 0 0;\n`;\n\nconst SectionDescription = styled.p`\n  font-size: 12px;\n  line-height: 18px;\n  margin: 0px;\n  text-align: justify;\n  color: #828688;\n`;\n\nconst DescriptionSubtitle = styled.h5`\n  display: inline-block;\n  font-size: 12px;\n  line-height: 120%;\n  margin-right: 0.3rem;\n`;\n\nconst DescriptionInfoSpan = styled.span`\n  font-size: 12px;\n  line-height: 18px;\n  margin: 0px;\n  text-align: justify;\n  color: #828688;\n`;\n\nconst DeclarationCard = styled.div`\n  padding: 0px;\n`;\n\nconst CommentSection = styled.div`\n  display: flex;\n  padding: 0;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 12px;\n  border-radius: 10px;\n  background: #f8f8f9;\n`;\n\nconst Container = styled.div`\n  display: flex;\n  margin-right: 5px;\n  justify-content: center;\n`;\n\nconst SecondContainer = styled.div`\n  background: #F8F8F9;\n  border-radius: 8px;\n  padding: 20px;\n`;\n\nconst H6 = styled.h6`\n  font-size: 14px;\n  margin-bottom: 0;\n`;\n\nconst Tab = styled.div`\n  font-weight: ${(props) => (props.active ? \"600\" : \"500\")};\n  border-bottom: 2px solid;\n  border-color: ${(props) => (props.active ? \"#4F46E5\" : \"#dee2e6\")};\n  color: ${(props) => (props.active ? \"#4F46E5\" : \"#ababab\")};\n  cursor: pointer;\n  padding-bottom: 8px;\n  font-size: 14px;\n\n  i {\n    &::before {\n      color: ${(props) => (props.active ? \"#4F46E5\" : \"#ababab\")};\n    }\n    margin-right: 5px;\n  }\n`;\n\nconst TH = styled.th`\n  border: 1px solid rgba(208, 214, 217, 0.4) !important;\n  text-align: left !important;\n  padding: 15px 20px !important;\n`;\n\nconst CallLibrary = styled.div`\n  display: none;\n`;\n\n// console.log(\"All comments: \", state.comments);\n\n//Get basic original comments info\nlet originalComments = state.comments.filter(\n  (comment) => comment.value.comment.originalCommentId === realArticleId\n);\n\n// console.log(\"Original comments: \", originalComments);\n\n//Append answers to original comments\noriginalComments = originalComments.map((originalComment) => {\n  let answers = state.comments.filter((comment) => {\n    return (\n      comment.value.comment.originalCommentId ===\n      originalComment.value.comment.commentId\n    );\n  });\n\n  return {\n    originalComment,\n    answers,\n  };\n});\n\n// console.log(\"answers to comments: \", originalComments);\n\nfunction stateUpdate(obj) {\n  State.update(obj);\n}\n\nfunction getUserName() {\n  const profile = data.authorProfile;\n\n  return profile.name ?? getShortUserName();\n}\n\nconst getShortUserName = () => {\n  const userId = accountId;\n\n  if (userId.length === 64) return `${userId.slice(0, 4)}..${userId.slice(-4)}`;\n  const name = userId.slice(0, -5); // truncate .near\n\n  return name.length > 20 ? `${name.slice(0, 20)}...` : name;\n};\n\nlet displayedContent = state.sliceContent\n  ? articleToRenderData.body.slice(0, 1000)\n  : articleToRenderData.body;\n\nconsole.log(\"sliceContent: \", state.sliceContent);\nconsole.log(\"displayedContent.length > 1000: \", displayedContent.length > 1000);\n\nreturn (\n  <>\n    <Container className=\"row\">\n      <div className=\"col-lg-9 col-sm-12\">\n        <div className=\"row\" style={{ \"margin-inline\": \"5px\" }}>\n          <div\n            className=\"col-12 p-0 w-100\"\n            style={{\n              background: \"#F8F8F9\",\n              \"border-radius\": \"8px\",\n            }}\n          >\n            <div className=\"w-100 p-3 d-flex flex-wrap justify-content-between align-items-start\">\n              <div className=\"d-flex\">\n                <Widget\n                  src=\"mob.near/widget/ProfileImage\"\n                  props={{\n                    accountId,\n                    imageClassName: \"rounded-circle w-100 h-100\",\n                    style: {\n                      width: \"100px\",\n                      height: \"100px\",\n                      marginRight: \"15px\",\n                    },\n                  }}\n                />\n                <div className=\"d-flex flex-column\">\n                  <NominationTitleContainer>\n                    <UserLink\n                      target=\"_blank\"\n                      href={`https://www.near.org/near/widget/ProfilePage?accountId=${accountId}`}\n                    >\n                      <NominationTitle>\n                        {articleToRenderData.authorProfile.name ??\n                          getShortUserName()}\n                      </NominationTitle>\n                      <NominationUser>{getShortUserName()}</NominationUser>\n                    </UserLink>\n                    <TagContainer>\n                      {articleToRenderData.tags.length > 0 &&\n                        articleToRenderData.tags.map((tag) => {\n                          const filter = { filterBy: \"tag\", value: tag };\n\n                          return (\n                            <CursorPointer\n                              onClick={() => handleFilterArticles(filter)}\n                            >\n                              <Widget\n                                src={widgets.styledComponents}\n                                props={{\n                                  Tag: { title: tag },\n                                }}\n                              />\n                            </CursorPointer>\n                          );\n                        })}\n                    </TagContainer>\n                  </NominationTitleContainer>\n                </div>\n              </div>\n              <div className=\"d-flex gap-3\">\n                <div className=\"d-flex flex-column\">\n                  <Widget\n                    src={widgets.upVoteButton}\n                    props={{\n                      isTest,\n                      authorForWidget,\n                      reactedElementData: articleToRenderData,\n                      widgets,\n                    }}\n                  />\n                  <Widget\n                    src={widgets.reactions}\n                    props={{\n                      widgets,\n                      isTest,\n                      authorForWidget,\n                      elementReactedId: realArticleId,\n                    }}\n                  />\n                  {context.accountId == accountId && (\n                    <Widget\n                      src={widgets.styledComponents}\n                      props={{\n                        Button: {\n                          text: `Edit`,\n                          className: `primary dark`,\n                          onClick: () => handleEditArticle(articleToRenderData),\n                          icon: <i className=\"bi bi-pencil\"></i>,\n                        },\n                      }}\n                    />\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n          <BodyContainer className=\"col-12\">\n            <PlatformCard>\n              <PlatformContent>\n                <ContentHeader>\n                  <ContentHeaderText>\n                    {articleToRenderData.articleId}\n                  </ContentHeaderText>\n                </ContentHeader>\n\n                <Widget\n                  src=\"mob.near/widget/SocialMarkdown\"\n                  props={{\n                    text: displayedContent,\n                    onHashtag: (hashtag) => (\n                      <span\n                        key={hashtag}\n                        className=\"d-inline-flex\"\n                        style={{ fontWeight: 500 }}\n                      >\n                        <a\n                          href={`https://near.social/${authorForWidget}/widget/${widgets.sayALot}?tagShared=${hashtag}`}\n                          target=\"_blank\"\n                        >\n                          #{hashtag}\n                        </a>\n                      </span>\n                    ),\n                  }}\n                />\n                {state.sliceContent && displayedContent.length > 1000 && (\n                  <Widget\n                    src={widgets.styledComponents}\n                    props={{\n                      Button: {\n                        text: `Show more`,\n                        size: \"sm\",\n                        className: \"w-100 justify-content-center\",\n                        onClick: () => {\n                          State.update({ sliceContent: false });\n                        },\n                        icon: <i className=\"bi bi-chat-square-text-fill\"></i>,\n                      },\n                    }}\n                  />\n                )}\n              </PlatformContent>\n            </PlatformCard>\n          </BodyContainer>\n        </div>\n      </div>\n      <SecondContainer className=\"col-lg-3 col-sm-12\">\n        <>\n          <ul className=\"nav nav-pills nav-fill\">\n            {tabs.map(({ id, title, icon }, i) => (\n              <li className=\"nav-item\" role=\"presentation\" key={i}>\n                <Tab\n                  active={state.tabSelected === id}\n                  onClick={() => State.update({ tabSelected: id })}\n                >\n                  <i className={`${icon}`} />\n                  {title}\n                </Tab>\n              </li>\n            ))}\n          </ul>\n          <div>\n            {state.tabSelected == \"generalInfo\" ? (\n              <DeclarationCard>\n                <SectionTitle className=\"mt-4 mb-3\"></SectionTitle>\n                <div>\n                  <DescriptionSubtitle>Created by:</DescriptionSubtitle>\n                  <DescriptionInfoSpan>\n                    {articleToRenderData.authorProfile.name ??\n                      getShortUserName()}\n                  </DescriptionInfoSpan>\n                </div>\n                <div>\n                  <DescriptionSubtitle>Edited on:</DescriptionSubtitle>\n                  <DescriptionInfoSpan>{timeLastEdit + \"\"}</DescriptionInfoSpan>\n                </div>\n                <div>\n                  <DescriptionSubtitle>Edit versions:</DescriptionSubtitle>\n                  <DescriptionInfoSpan>\n                    {articleToRenderData.version}\n                  </DescriptionInfoSpan>\n                </div>\n              </DeclarationCard>\n            ) : (\n              <CommentSection>\n                {state.showModal && (\n                  <Widget\n                    src={widgets.addComment}\n                    props={{\n                      article: articleToRenderData,\n                      originalComment,\n                      widgets,\n                      isTest,\n                      isReplying: false,\n                      username: accountId,\n                      onCloseModal: () => State.update({ showModal: false }),\n                      // nomination_contract,\n                    }}\n                  />\n                )}\n                <Widget\n                  src={widgets.styledComponents}\n                  props={{\n                    Button: {\n                      text: \"Add a Comment\",\n                      disabled:\n                        !context.accountId || context.accountId === accountId,\n                      className:\n                        \"primary w-100 mt-4 mb-2 justify-content-center\",\n                      onClick: () => State.update({ showModal: true }),\n                      icon: <i className=\"bi bi-plus-lg\"></i>,\n                    },\n                  }}\n                />\n                {originalComments.map((data) => (\n                  <Widget\n                    props={{\n                      widgets,\n                      data,\n                      isTest,\n                      authorForWidget,\n                      isReply: false,\n                    }}\n                    src={widgets.commentView}\n                  />\n                ))}\n              </CommentSection>\n            )}\n          </div>\n        </>\n      </SecondContainer>\n    </Container>\n    <CallLibrary>\n      {callLibs(libSrcArray, stateUpdate, state.libCalls)}\n    </CallLibrary>\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb/widget/SayALot.ArticleView", "fact_widget_deployments_id": "9588303ab93de29c9692560d8dcbcdb5", "inserted_timestamp": "2023-09-28T16:54:50.074Z", "modified_timestamp": "2023-09-28T16:54:50.074Z", "__row_index": 7}