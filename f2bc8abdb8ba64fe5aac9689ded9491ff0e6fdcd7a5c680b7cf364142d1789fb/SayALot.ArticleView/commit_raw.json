{"tx_hash": "AnnV99HA6eQ3FMEAu43QW4gyvrBmtD1nXsJX6fqwevP3", "action_id_social": "HQpkm85Y5MDFTKG1MuVpgDJfLSRVPugjzxagdHSacN52-0-widget", "block_id": 102158638, "block_timestamp": "2023-09-28T16:03:26.450Z", "signer_id": "f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb", "widget_name": "SayALot.ArticleView", "source_code": "//This code comes from NDC.Nomination.Candidate.Page > NDC.Nomination.Candidate.DesktopView\r\n\r\nconst {\r\n  widgets,\r\n  isTest,\r\n  handleFilterArticles,\r\n  articleToRenderData,\r\n  authorForWidget,\r\n  handleEditArticle,\r\n} = props;\r\n\r\nconst accountId = articleToRenderData.author;\r\nconst realArticleId =\r\n  articleToRenderData.realArticleId ??\r\n  `${articleToRenderData.author}-${articleToRenderData.timeCreate}`;\r\n\r\nconst libSrcArray = [widgets.libComment];\r\n\r\nfunction callLibs(srcArray, stateUpdate, libCalls) {\r\n  return (\r\n    <>\r\n      {srcArray.map((src) => {\r\n        return (\r\n          <Widget\r\n            src={src}\r\n            props={{\r\n              isTest,\r\n              stateUpdate,\r\n              libCalls,\r\n            }}\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n}\r\n\r\nconst tabs = [\r\n  {\r\n    id: \"generalInfo\",\r\n    title: \"Post info\",\r\n    icon: \"bi bi-info-circle\",\r\n  },\r\n  { id: \"comments\", title: \"Comments\", icon: \"bi bi-chat-square-dots-fill\" },\r\n];\r\n\r\nconst prodAction = \"sayALotArticle\";\r\nconst testAction = `test_${prodAction}`;\r\nconst action = isTest ? testAction : prodAction;\r\n\r\nconst libCalls = [\r\n  {\r\n    functionName: \"getValidComments\",\r\n    key: \"comments\",\r\n    props: { realArticleId },\r\n  },\r\n];\r\n\r\nState.init({\r\n  tabSelected: tabs[1].id,\r\n  comments: [],\r\n  sliceContent: true,\r\n  libCalls,\r\n});\r\n\r\nconst timeLastEdit = new Date(articleToRenderData.timeLastEdit);\r\n\r\nconst CursorPointer = styled.div`\r\n  cursor: pointer;\r\n`;\r\n\r\nconst DetailContent = styled.div`\r\n  display: inline-flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  gap: 12px;\r\n`;\r\n\r\nconst TagContainer = styled.div`\r\n  display: flex;\r\n  align-items: flex-start;\r\n  gap: 4px;\r\n`;\r\n\r\nconst HouseTagDiv = styled.div`\r\n  display: flex;\r\n  padding: 4px 8px;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 10px;\r\n  border-radius: 100px;\r\n  background: var(\r\n    --gradient-purple-gradient,\r\n    linear-gradient(90deg, #9333ea 0%, #4f46e5 100%)\r\n  );\r\n`;\r\n\r\nconst HouseTagText = styled.p`\r\n  color: #fff;\r\n  font-size: 7px;\r\n  font-weight: 500;\r\n  line-height: 120%;\r\n  margin: 0px;\r\n`;\r\n\r\nconst TagDiv = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  padding: 4px 8px;\r\n  align-items: center;\r\n  gap: 10px;\r\n  border-radius: 100px;\r\n  border: solid 1px transparent;\r\n  border-radius: 80px;\r\n  background-image: linear-gradient(#eae5f7, #eae5f7),\r\n    radial-gradient(circle at top left, #9333ea 0%, #4f46e5 100%);\r\n  background-origin: border-box;\r\n  background-clip: padding-box, border-box;\r\n`;\r\n\r\nconst TagDivText = styled.p`\r\n  font-size: 8px;\r\n  margin: 0px;\r\n  font-weight: 500;\r\n  line-height: 120%;\r\n  background: linear-gradient(90deg, #9333ea 0%, #4f46e5 100%);\r\n  -webkit-background-clip: text;\r\n  -webkit-text-fill-color: transparent;\r\n  background-clip: text;\r\n  text-fill-color: transparent;\r\n`;\r\n\r\nconst NominationTitleContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n`;\r\n\r\nconst NominationTitle = styled.p`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  margin: 7px 0 0 0;\r\n  color: #000;\r\n  font-size: 18px;\r\n  font-weight: 500;\r\n  line-height: 120%;\r\n`;\r\nconst UserLink = styled.a`\r\n  cursor: pointer;\r\n  &:hover {\r\n    text-decoration: none;\r\n  }\r\n`;\r\nconst NominationUser = styled.p`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  color: #828688;\r\n  margin: 0 0 7px 0;\r\n  font-size: 14px;\r\n  line-height: 120%;\r\n`;\r\n\r\nconst UpvoteButtonDisabled = styled.button`\r\n  display: flex;\r\n  padding: 2px 12px;\r\n  align-items: center;\r\n  gap: 6px;\r\n  border-radius: 4px;\r\n  border: solid 1px transparent;\r\n  background: var(--buttons-disable, #c3cace);\r\n  cursor: default !important;\r\n`;\r\n\r\nconst UpvoteButton = styled.button`\r\n  display: flex;\r\n  padding: 2px 12px;\r\n  align-items: center;\r\n  gap: 6px;\r\n  border-radius: 4px;\r\n  border: solid 1px transparent;\r\n  background-image: linear-gradient(#f8f8f9, #f8f8f9),\r\n    radial-gradient(\r\n      circle at left top,\r\n      rgb(147, 51, 234) 0%,\r\n      rgb(79, 70, 229) 100%\r\n    );\r\n  background-origin: border-box;\r\n  background-clip: padding-box, border-box;\r\n`;\r\n\r\nconst UpvoteCount = styled.p`\r\n  font-size: 12px;\r\n  font-weight: 500;\r\n  line-height: 24px;\r\n  margin: 0px;\r\n  background: linear-gradient(90deg, #9333ea 0%, #4f46e5 100%);\r\n  -webkit-background-clip: text;\r\n  -webkit-text-fill-color: transparent;\r\n  background-clip: text;\r\n  text-fill-color: transparent;\r\n`;\r\n\r\nconst Icon = styled.img`\r\n  width: 17px;\r\n  height: 17px;\r\n`;\r\nconst BodyContainer = styled.div`\r\n  border-radius: 8px;\r\n  margin: 10px 0;\r\n  background: #F8F8F9;\r\n  padding: 20px;\r\n`;\r\n\r\nconst PlatformCard = styled.div`\r\n  display: flex;\r\n  border-radius: 6px;\r\n  background: background: \"rgb(255 255 255 / 0%);\r\n`;\r\n\r\nconst PlatformContent = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  gap: 12px;\r\n  width: 100%;\r\n`;\r\n\r\nconst PlatformInfoDiv = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  gap: 8px;\r\n`;\r\n\r\nconst PlatformInfoHeader = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  gap: 2px;\r\n`;\r\n\r\nconst PlatInforHeadText = styled.p`\r\n  margin: 0px;\r\n  color: var(--000000, #000);\r\n  font-size: 10px;\r\n  font-weight: 500;\r\n  line-height: 120%;\r\n`;\r\n\r\nconst PlatInfoHeadSeparator = styled.hr`\r\n  height: 0px;\r\n  margin: 8px 0 0 0;\r\n\r\n  border: 1px solid rgba(208, 214, 217, 1);\r\n`;\r\n\r\nconst KeyIssuesContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  gap: 2px;\r\n`;\r\n\r\nconst KeyIssueTitle = styled.p`\r\n  font-size: 12px;\r\n  line-height: 120%;\r\n  margin: 0px;\r\n  font-weight: 500;\r\n  line-height: 18px;\r\n  text-align: left;\r\n  padding: 10px;\r\n`;\r\n\r\nconst KeyIssueDescription = styled.p`\r\n  color: #212427;\r\n  font-size: 12px;\r\n  line-height: 130%;\r\n  margin: 0px;\r\n  padding: 10px;\r\n  line-height: 18px;\r\n  text-align: justify;\r\n`;\r\n\r\nconst CandidateCard = styled.div`\r\n  display: flex;\r\n  padding: 20px;\r\n  align-items: center;\r\n  align-self: stretch;\r\n  border-radius: 6px;\r\n  background: #fff;\r\n`;\r\n\r\nconst CandidateContent = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n  gap: 12px;\r\n`;\r\n\r\nconst ContentHeader = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 12px;\r\n  align-self: stretch;\r\n`;\r\n\r\nconst ContentHeaderText = styled.p`\r\n  font-size: 18px;\r\n  font-weight: 500;\r\n  margin: 0px;\r\n`;\r\n\r\nconst CandidateInfoDiv = styled.div`\r\n  width: 100%;\r\n  padding: 16px;\r\n  background: white;\r\n  gap: 16px;\r\n  border-radius: 8px;\r\n`;\r\n\r\nconst CandidateInfoHeader = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n  align-self: stretch;\r\n`;\r\n\r\nconst CandidateImage = styled.img`\r\n  width: 32px;\r\n  height: 32px;\r\n`;\r\n\r\nconst CandidateInfoData = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  gap: 4px;\r\n  flex: 1 0 0;\r\n`;\r\n\r\nconst CandidateTagDiv = styled.div`\r\n  display: flex;\r\n  height: 20px;\r\n  padding: 4px 8px;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 10px;\r\n  border-radius: 100px;\r\n  border: 1px solid var(--secondary-warning, #f19d38);\r\n  background: #f0e1ce;\r\n`;\r\n\r\nconst CandidateTagText = styled.p`\r\n  color: var(--secondary-warning, #f19d38);\r\n  font-size: 10px;\r\n  font-weight: 500;\r\n  line-height: 120%;\r\n  margin: 0px;\r\n`;\r\n\r\nconst CandidateTime = styled.h6`\r\n  margin: 3px 0 0 0;\r\n  font-size: 10px;\r\n  font-weight: 500;\r\n  line-height: 120%;\r\n  color: #828688;\r\n`;\r\n\r\nconst CandidateTextInfo = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  gap: 4px;\r\n  align-self: stretch;\r\n`;\r\n\r\nconst SectionTitle = styled.h5`\r\n  font-size: 12px;\r\n  font-weight: 500;\r\n  line-height: 120%;\r\n  margin: 16px 0 0 0;\r\n`;\r\n\r\nconst SectionDescription = styled.p`\r\n  font-size: 12px;\r\n  line-height: 18px;\r\n  margin: 0px;\r\n  text-align: justify;\r\n  color: #828688;\r\n`;\r\n\r\nconst DescriptionSubtitle = styled.h5`\r\n  display: inline-block;\r\n  font-size: 12px;\r\n  line-height: 120%;\r\n  margin-right: 0.3rem;\r\n`;\r\n\r\nconst DescriptionInfoSpan = styled.span`\r\n  font-size: 12px;\r\n  line-height: 18px;\r\n  margin: 0px;\r\n  text-align: justify;\r\n  color: #828688;\r\n`;\r\n\r\nconst DeclarationCard = styled.div`\r\n  padding: 0px;\r\n`;\r\n\r\nconst CommentSection = styled.div`\r\n  display: flex;\r\n  padding: 0;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  gap: 12px;\r\n  border-radius: 10px;\r\n  background: #f8f8f9;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  margin-right: 5px;\r\n  justify-content: center;\r\n`;\r\n\r\nconst SecondContainer = styled.div`\r\n  background: #F8F8F9;\r\n  border-radius: 8px;\r\n  padding: 20px;\r\n`;\r\n\r\nconst H6 = styled.h6`\r\n  font-size: 14px;\r\n  margin-bottom: 0;\r\n`;\r\n\r\nconst Tab = styled.div`\r\n  font-weight: ${(props) => (props.active ? \"600\" : \"500\")};\r\n  border-bottom: 2px solid;\r\n  border-color: ${(props) => (props.active ? \"#4F46E5\" : \"#dee2e6\")};\r\n  color: ${(props) => (props.active ? \"#4F46E5\" : \"#ababab\")};\r\n  cursor: pointer;\r\n  padding-bottom: 8px;\r\n  font-size: 14px;\r\n\r\n  i {\r\n    &::before {\r\n      color: ${(props) => (props.active ? \"#4F46E5\" : \"#ababab\")};\r\n    }\r\n    margin-right: 5px;\r\n  }\r\n`;\r\n\r\nconst TH = styled.th`\r\n  border: 1px solid rgba(208, 214, 217, 0.4) !important;\r\n  text-align: left !important;\r\n  padding: 15px 20px !important;\r\n`;\r\n\r\nconst CallLibrary = styled.div`\r\n  display: none;\r\n`;\r\n\r\n//Get basic original comments info\r\nlet originalComments = state.comments.filter(\r\n  (comment) => comment.value.comment.originalCommentId === realArticleId\r\n);\r\n\r\n//Append answers to original comments\r\noriginalComments = originalComments.map((originalComment) => {\r\n  let answers = state.comments.filter((comment) => {\r\n    return (\r\n      comment.value.comment.originalCommentId ===\r\n      originalComment.value.comment.commentId\r\n    );\r\n  });\r\n\r\n  return {\r\n    originalComment,\r\n    answers,\r\n  };\r\n});\r\n\r\nfunction stateUpdate(obj) {\r\n  State.update(obj);\r\n}\r\n\r\nfunction getUserName() {\r\n  const profile = data.authorProfile;\r\n\r\n  return profile.name ?? getShortUserName();\r\n}\r\n\r\nconst getShortUserName = () => {\r\n  const userId = accountId;\r\n\r\n  if (userId.length === 64) return `${userId.slice(0, 4)}..${userId.slice(-4)}`;\r\n  const name = userId.slice(0, -5); // truncate .near\r\n\r\n  return name.length > 20 ? `${name.slice(0, 20)}...` : name;\r\n};\r\n\r\nlet displayedContent = state.sliceContent\r\n  ? articleToRenderData.body.slice(0, 1000)\r\n  : articleToRenderData.body;\r\n\r\nconsole.log(\"sliceContent: \", state.sliceContent);\r\nconsole.log(\"displayedContent.length > 1000: \", displayedContent.length > 1000);\r\n\r\nreturn (\r\n  <>\r\n    <Container className=\"row\">\r\n      <div className=\"col-lg-9 col-sm-12\">\r\n        <div className=\"row\" style={{ \"margin-inline\": \"5px\" }}>\r\n          <div\r\n            className=\"col-12 p-0 w-100\"\r\n            style={{\r\n              background: \"#F8F8F9\",\r\n              \"border-radius\": \"8px\",\r\n            }}\r\n          >\r\n            <div className=\"w-100 p-3 d-flex flex-wrap justify-content-between align-items-start\">\r\n              <div className=\"d-flex\">\r\n                <Widget\r\n                  src=\"mob.near/widget/ProfileImage\"\r\n                  props={{\r\n                    accountId,\r\n                    imageClassName: \"rounded-circle w-100 h-100\",\r\n                    style: {\r\n                      width: \"100px\",\r\n                      height: \"100px\",\r\n                      marginRight: \"15px\",\r\n                    },\r\n                  }}\r\n                />\r\n                <div className=\"d-flex flex-column\">\r\n                  <NominationTitleContainer>\r\n                    <UserLink\r\n                      target=\"_blank\"\r\n                      href={`https://www.near.org/near/widget/ProfilePage?accountId=${accountId}`}\r\n                    >\r\n                      <NominationTitle>\r\n                        {articleToRenderData.authorProfile.name ??\r\n                          getShortUserName()}\r\n                      </NominationTitle>\r\n                      <NominationUser>{getShortUserName()}</NominationUser>\r\n                    </UserLink>\r\n                    <TagContainer>\r\n                      {articleToRenderData.tags.length > 0 &&\r\n                        articleToRenderData.tags.map((tag) => {\r\n                          const filter = { filterBy: \"tag\", value: tag };\r\n\r\n                          return (\r\n                            <CursorPointer\r\n                              onClick={() => handleFilterArticles(filter)}\r\n                            >\r\n                              <Widget\r\n                                src={widgets.styledComponents}\r\n                                props={{\r\n                                  Tag: { title: tag },\r\n                                }}\r\n                              />\r\n                            </CursorPointer>\r\n                          );\r\n                        })}\r\n                    </TagContainer>\r\n                  </NominationTitleContainer>\r\n                </div>\r\n              </div>\r\n              <div className=\"d-flex gap-3\">\r\n                <div className=\"d-flex flex-column\">\r\n                  <Widget\r\n                    src={widgets.upVoteButton}\r\n                    props={{\r\n                      isTest,\r\n                      authorForWidget,\r\n                      reactedElementData: articleToRenderData,\r\n                      widgets,\r\n                    }}\r\n                  />\r\n                  <Widget\r\n                    src={widgets.reactions}\r\n                    props={{\r\n                      widgets,\r\n                      isTest,\r\n                      authorForWidget,\r\n                      elementReactedId: realArticleId,\r\n                    }}\r\n                  />\r\n                  {context.accountId == accountId && (\r\n                    <Widget\r\n                      src={widgets.styledComponents}\r\n                      props={{\r\n                        Button: {\r\n                          text: `Edit`,\r\n                          className: `primary dark`,\r\n                          onClick: () => handleEditArticle(articleToRenderData),\r\n                          icon: <i className=\"bi bi-pencil\"></i>,\r\n                        },\r\n                      }}\r\n                    />\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <BodyContainer className=\"col-12\">\r\n            <PlatformCard>\r\n              <PlatformContent>\r\n                <ContentHeader>\r\n                  <ContentHeaderText>\r\n                    {articleToRenderData.articleId}\r\n                  </ContentHeaderText>\r\n                </ContentHeader>\r\n\r\n                <Widget\r\n                  src=\"mob.near/widget/SocialMarkdown\"\r\n                  props={{\r\n                    text: displayedContent,\r\n                    onHashtag: (hashtag) => (\r\n                      <span\r\n                        key={hashtag}\r\n                        className=\"d-inline-flex\"\r\n                        style={{ fontWeight: 500 }}\r\n                      >\r\n                        <a\r\n                          href={`https://near.social/${authorForWidget}/widget/${widgets.sayALot}?tagShared=${hashtag}`}\r\n                          target=\"_blank\"\r\n                        >\r\n                          #{hashtag}\r\n                        </a>\r\n                      </span>\r\n                    ),\r\n                  }}\r\n                />\r\n                {state.sliceContent && displayedContent.length > 1000 && (\r\n                  <Widget\r\n                    src={widgets.styledComponents}\r\n                    props={{\r\n                      Button: {\r\n                        text: `Show more`,\r\n                        size: \"sm\",\r\n                        className: \"w-100 justify-content-center\",\r\n                        onClick: () => {\r\n                          State.update({ sliceContent: false });\r\n                        },\r\n                        icon: <i className=\"bi bi-chat-square-text-fill\"></i>,\r\n                      },\r\n                    }}\r\n                  />\r\n                )}\r\n              </PlatformContent>\r\n            </PlatformCard>\r\n          </BodyContainer>\r\n        </div>\r\n      </div>\r\n      <SecondContainer className=\"col-lg-3 col-sm-12\">\r\n        <>\r\n          <ul className=\"nav nav-pills nav-fill\">\r\n            {tabs.map(({ id, title, icon }, i) => (\r\n              <li className=\"nav-item\" role=\"presentation\" key={i}>\r\n                <Tab\r\n                  active={state.tabSelected === id}\r\n                  onClick={() => State.update({ tabSelected: id })}\r\n                >\r\n                  <i className={`${icon}`} />\r\n                  {title}\r\n                </Tab>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          <div>\r\n            {state.tabSelected == \"generalInfo\" ? (\r\n              <DeclarationCard>\r\n                <SectionTitle className=\"mt-4 mb-3\"></SectionTitle>\r\n                <div>\r\n                  <DescriptionSubtitle>Created by:</DescriptionSubtitle>\r\n                  <DescriptionInfoSpan>\r\n                    {articleToRenderData.authorProfile.name ??\r\n                      getShortUserName()}\r\n                  </DescriptionInfoSpan>\r\n                </div>\r\n                <div>\r\n                  <DescriptionSubtitle>Edited on:</DescriptionSubtitle>\r\n                  <DescriptionInfoSpan>{timeLastEdit + \"\"}</DescriptionInfoSpan>\r\n                </div>\r\n                <div>\r\n                  <DescriptionSubtitle>Edit versions:</DescriptionSubtitle>\r\n                  <DescriptionInfoSpan>\r\n                    {articleToRenderData.version}\r\n                  </DescriptionInfoSpan>\r\n                </div>\r\n              </DeclarationCard>\r\n            ) : (\r\n              <CommentSection>\r\n                {state.showModal && (\r\n                  <Widget\r\n                    src={widgets.addComment}\r\n                    props={{\r\n                      article: articleToRenderData,\r\n                      originalComment,\r\n                      widgets,\r\n                      isTest,\r\n                      isReplying: false,\r\n                      username: accountId,\r\n                      onCloseModal: () => State.update({ showModal: false }),\r\n                      // nomination_contract,\r\n                    }}\r\n                  />\r\n                )}\r\n                <Widget\r\n                  src={widgets.styledComponents}\r\n                  props={{\r\n                    Button: {\r\n                      text: \"Add a Comment\",\r\n                      disabled:\r\n                        !context.accountId || context.accountId === accountId,\r\n                      className:\r\n                        \"primary w-100 mt-4 mb-2 justify-content-center\",\r\n                      onClick: () => State.update({ showModal: true }),\r\n                      icon: <i className=\"bi bi-plus-lg\"></i>,\r\n                    },\r\n                  }}\r\n                />\r\n                {originalComments.map((data) => (\r\n                  <Widget\r\n                    props={{\r\n                      widgets,\r\n                      data,\r\n                      isTest,\r\n                      authorForWidget,\r\n                      isReply: false,\r\n                    }}\r\n                    src={widgets.commentView}\r\n                  />\r\n                ))}\r\n              </CommentSection>\r\n            )}\r\n          </div>\r\n        </>\r\n      </SecondContainer>\r\n    </Container>\r\n    <CallLibrary>\r\n      {callLibs(libSrcArray, stateUpdate, state.libCalls)}\r\n    </CallLibrary>\r\n  </>\r\n);\r\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb/widget/SayALot.ArticleView", "fact_widget_deployments_id": "7f6a7b345d01a65be443afeb3b6e76a3", "inserted_timestamp": "2023-09-28T17:53:30.251Z", "modified_timestamp": "2023-09-28T17:53:30.251Z", "__row_index": 5}