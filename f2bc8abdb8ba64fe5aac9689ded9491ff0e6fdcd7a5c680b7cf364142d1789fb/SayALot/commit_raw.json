{"tx_hash": "AvrgfzfqtQYjx2Zn8sgo5uMpSYvQJq2YxQ1kqAYZvJyi", "action_id_social": "6e9Mt3J1xH62ggVCw23BUq1S6jqF4s8zVSptiqnHnTM4-0-widget", "block_id": 102178233, "block_timestamp": "2023-09-28T22:21:24.284Z", "signer_id": "f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb", "widget_name": "SayALot", "source_code": "//===============================================INITIALIZATION=====================================================\nlet { sharedBlockHeight, tagShared, isTest, accountId } = props;\n\nconst startingValidator = \"gooddollar-v1.i-am-human.near\";\n// const startingValidator = \"registry.i-am-human.near\";\n\nconst initLibCalls = [\n  {\n    functionName: \"getLastEditArticles\",\n    key: \"articles\",\n    props: {\n      env: isTest ? \"test\" : \"prod\",\n      filterBy: {\n        parameterName: \"\",\n        parameterValue: undefined,\n      },\n    },\n  },\n  {\n    functionName: \"canUserCreateArticle\",\n    key: \"canLoggedUserCreateArticle\",\n    props: {\n      currentValidator: state.currentValidator || startingValidator,\n    },\n  },\n];\n\nconsole.log(\"canLoggedUserCreateArticle: \", canLoggedUserCreateArticle);\n\nif (!accountId) accountId = context.accountId;\n\nconst tabs = {\n  SHOW_ARTICLES_LIST: { id: 0 },\n  SHOW_ARTICLE: { id: 1 },\n  ARTICLE_WORKSHOP: { id: 2 },\n  SHOW_ARTICLES_LIST_BY_AUTHORS: { id: 3 },\n};\n\nState.init({\n  displayedTabId: tabs.SHOW_ARTICLES_LIST.id,\n  articleToRenderData: {},\n  filterBy: tagShared\n    ? { parameterName: \"tag\", parameterValue: tagShared }\n    : { parameterName: \"\" },\n  authorsProfiles: [],\n  libCalls: initLibCalls,\n});\n\nlet newLibCalls = state.libCalls;\nnewLibCalls[0].props.filterBy = state.filterBy;\n\nState.update({ libCalls: newLibCalls });\n\n//=============================================END INITIALIZATION===================================================\n\n//==================================================CONSTS==========================================================\n\n//const authorForWidget = \"sayalot.near\";\nconst authorForWidget =\n  \"f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb\";\n// const authorForWidget = \"kenrou-it.near\";\nconst libSrcArray = [`${authorForWidget}/widget/SayALot.lib.article`];\nconst thisWidgetName = \"SayALot\";\n\n// let writersWhiteList = [\n//   \"neardigitalcollective.near\",\n//   \"blaze.near\",\n//   \"jlw.near\",\n//   \"kazanderdad.near\",\n//   \"joep.near\",\n//   \"sarahkornfeld.near\",\n//   \"yuensid.near\",\n//   \"shubham007.near\",\n//   \"fiftycent.near\",\n//   \"ozymandius.near\",\n//   \"chloe.near\",\n// ];\n\n// const sayALotWorkers = [\n//   \"silkking.near\",\n//   \"f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb\",\n//   \"blaze.near\",\n//   \"ayelen.near\",\n//   \"kenrou-it.near\",\n// ];\n\n// if (isTest) {\n//   writersWhiteList = sayALotWorkers;\n// }\n\nconst widgets = {\n  sayALot: `${authorForWidget}/widget/${thisWidgetName}`,\n  create: `${authorForWidget}/widget/SayALot.Create`,\n  styledComponents: \"rubycop.near/widget/NDC.StyledComponents\",\n  header: `${authorForWidget}/widget/SayALot.NavBar`,\n  showArticlesList: `${authorForWidget}/widget/SayALot.AllArticlesList`,\n  showArticlesListSortedByAuthors: `${authorForWidget}/widget/SayALot.AllArticlesSortByAuthors`,\n  articlesByAuthorCard: `${authorForWidget}/widget/SayALot.ArticlesByAuthorCard`,\n  generalCard: `${authorForWidget}/widget/SayALot.GeneralCard`,\n  articleView: `${authorForWidget}/widget/SayALot.ArticleView`,\n  reactions: `${authorForWidget}/widget/SayALot.Reactions`,\n  addComment: `${authorForWidget}/widget/SayALot.AddComment`,\n  commentView: `${authorForWidget}/widget/SayALot.CommentView`,\n  // candidatePage: `#/rubycop.near/widget/NDC.Nomination.Candidate.Page`,\n  libComment: `${authorForWidget}/widget/SayALot.lib.comment`,\n  libArticle: `${authorForWidget}/widget/SayALot.lib.article`,\n  libEmojis: `${authorForWidget}/widget/SayALot.lib.emojis`,\n  libUpVotes: `${authorForWidget}/widget/SayALot.lib.upVotes`,\n  upVoteButton: `${authorForWidget}/widget/SayALot.UpVoteButton`,\n};\n\nconst profile = props.profile ?? Social.getr(`${accountId}/profile`);\nif (profile === null) {\n  return \"Loading\";\n}\n\nlet authorProfile = {};\nif (state.filterBy.parameterName == \"author\") {\n  authorProfile = Social.getr(`${state.filterBy.parameterValue}/profile`);\n  // if (!authorProfile) return \"Loading...\";\n}\n\nconst brand = {\n  homePageId: tabs.SHOW_ARTICLES_LIST.id,\n  brandName: \"Say a lot\",\n  logoHref:\n    \"https://ipfs.near.social/ipfs/bafkreiaqxa4st4vp4rtq2iyobdgqe5tpfg55mmyvfg25upd2qplcxylyfi\",\n  logoRemWidth: 6,\n  logoRemHeight: 6,\n};\n\nconst navigationPills = [\n  { id: tabs.SHOW_ARTICLES_LIST.id, title: \"Articles\" },\n  { id: tabs.SHOW_ARTICLES_LIST_BY_AUTHORS.id, title: \"Authors\" },\n];\n\nconst navigationButtons = [\n  // { id: tabs.ARTICLE_WORKSHOP.id, title: \"+Create article\" },\n];\n\nconst initialBodyAtCreation = state.editArticleData.body;\n//    ??\n//   `# h1 Heading 8-)\n// ## h2 Heading\n// ### h3 Heading\n// #### h4 Heading\n// ##### h5 Heading\n// ###### h6 Heading\n\n// ## Horizontal Rules\n\n// ___\n\n// ---\n\n// ***\n\n// ## Typographic replacements\n\n// Enable typographer option to see result.\n\n// (c) (C) (r) (R) (tm) (TM) (p) (P) +-\n\n// test.. test... test..... test?..... test!....\n\n// !!!!!! ???? ,,  -- ---\n\n// \"Smartypants, double quotes\" and 'single quotes'\n\n// ## Emphasis\n\n// This is bold text\n\n// This is bold text\n\n// *This is italic text*\n\n// _This is italic text_\n\n// Strikethrough\n\n// ## Blockquotes\n\n// > Blockquotes can also be nested...\n// >> ...by using additional greater-than signs right next to each other...\n// > > > ...or with spaces between arrows.\n\n// ## Lists\n\n// Unordered\n\n// + Create a list by starting a line with \\`+\\`, \\`-\\`, or \\`*\\`\n// + Sub-lists are made by indenting 2 spaces:\n//   - Marker character change forces new list start:\n//     * Ac tristique libero volutpat at\n//     + Facilisis in pretium nisl aliquet\n//     - Nulla volutpat aliquam velit\n// + Very easy!\n\n// Ordered\n\n// 1. Lorem ipsum dolor sit amet\n// 2. Consectetur adipiscing elit\n// 3. Integer molestie lorem at massa\n\n// 1. You can use sequential numbers...\n// 1. ...or keep all the numbers as \\`1.\\`\n\n// Start numbering with offset:\n\n// 57. foo\n// 1. bar\n\n// ## Code\n\n// Inline \\`code\\`\n\n// Indented code\n\n//     // Some comments\n//     line 1 of code\n//     line 2 of code\n//     line 3 of code\n\n// Block code \"fences\"\n\n// \\`\\`\\`\n// Sample text here...\n// \\`\\`\\`\n\n// Syntax highlighting\n\n// \\`\\`\\` js\n// var foo = function (bar) {\n//   return bar++;\n// };\n\n// console.log(foo(5));\n// \\`\\`\\`\n\n// ## Tables\n\n// | Option | Description |\n// | ------ | ----------- |\n// | data   | path to data files to supply the data that will be passed into templates. |\n// | engine | engine to be used for processing templates. Handlebars is the default. |\n// | ext    | extension to be used for dest files. |\n\n// Right aligned columns\n\n// | Option | Description |\n// | ------:| -----------:|\n// | data   | path to data files to supply the data that will be passed into templates. |\n// | engine | engine to be used for processing templates. Handlebars is the default. |\n// | ext    | extension to be used for dest files. |\n\n// ## Links\n\n// link text\n\n// link with title\n\n// Autoconverted link https://github.com/nodeca/pica (enable linkify to see)\n\n// ## Images\n\n// !Minion\n// !Stormtroopocat\n\n// Like links, Images also have a footnote style syntax\n\n// ![Alt text][id]\n\n// With a reference later in the document defining the URL location:\n\n// [id]: https://octodex.github.com/images/dojocat.jpg  \"The Dojocat\"\n\n// ### Emojies\n\n// > Classic markup: :wink: :crush: :cry: :tear: :laughing: :yum:\n// >\n// > Shortcuts (emoticons): :-) :-( 8-) ;)\n\n// see how to change output with twemoji.\n\n// ### Subscript / Superscript\n\n// - 19^th^\n// - H~2~O\n\n// ### \\<ins>\n\n// ++Inserted text++\n\n// ### \\<mark>\n\n// ==Marked text==\n\n// ### Footnotes\n\n// Footnote 1 link[^first].\n\n// Footnote 2 link[^second].\n\n// Inline footnote^[Text of inline footnote] definition.\n\n// Duplicated footnote reference[^second].\n\n// [^first]: Footnote can have markup\n\n//     and multiple paragraphs.\n\n// [^second]: Footnote text.\n\n// ### [Definition lists](https://github.com/markdown-it/markdown-it-deflist)\n\n// Term 1\n\n// :   Definition 1\n// with lazy continuation.\n\n// Term 2 with *inline markup*\n\n// :   Definition 2\n\n//         { some code, part of Definition 2 }\n\n//     Third paragraph of definition 2.\n\n// _Compact style:_\n\n// Term 1\n//   ~ Definition 1\n\n// Term 2\n//   ~ Definition 2a\n//   ~ Definition 2b\n// `;\n\n//=================================================END CONSTS=======================================================\n\n//=================================================GET DATA=========================================================\nconst finalArticles = state.articles;\n//===============================================END GET DATA=======================================================\n\n//=============================================STYLED COMPONENTS====================================================\nconst CallLibrary = styled.div`\n  display: none;\n`;\n//===========================================END STYLED COMPONENTS==================================================\n\n//=================================================FUNCTIONS========================================================\nfunction getValidEditArticleDataTags() {\n  let tags = state.editArticleData.tags;\n  let newFormatTags = {};\n\n  tags &&\n    tags.map((tag) => {\n      newFormatTags[tag] = \"\";\n    });\n  return newFormatTags;\n}\n\nconst initialCreateState = {\n  articleId: state.editArticleData.articleId ?? \"\",\n  articleBody: state.editArticleData.body ?? initialBodyAtCreation,\n  tags: state.editArticleData.tags ? getValidEditArticleDataTags() : {},\n  libCalls: [],\n};\n\nfunction stateUpdate(obj) {\n  State.update(obj);\n}\n\nfunction handleOpenArticle(articleToRenderData) {\n  State.update({\n    displayedTabId: tabs.SHOW_ARTICLE.id,\n    articleToRenderData,\n    editArticleData: undefined,\n  });\n}\n\nfunction handleEditArticle(articleData) {\n  State.update({\n    displayedTabId: tabs.ARTICLE_WORKSHOP.id,\n    editArticleData: articleData,\n  });\n}\n\nfunction handleFilterArticles(filter) {\n  State.update({\n    displayedTabId: tabs.SHOW_ARTICLES_LIST.id,\n    filterBy: { parameterName: filter.filterBy, parameterValue: filter.value },\n    editArticleData: undefined,\n  });\n}\n\nfunction handleBackButton() {\n  props.editArticleData\n    ? State.update({\n        displayedTabId: tabs.SHOW_ARTICLE.id,\n        editArticleData: undefined,\n        filterBy: {\n          parameterName: \"\",\n          parameterValue: undefined,\n          handleBackClicked: true,\n        },\n      })\n    : State.update({\n        displayedTabId: tabs.SHOW_ARTICLES_LIST.id,\n        articleToRenderData: {},\n        editArticleData: undefined,\n        filterBy: {\n          parameterName: \"\",\n          parameterValue: undefined,\n          handleBackClicked: true,\n        },\n      });\n}\n\nfunction handleGoHomeButton() {\n  State.update({\n    displayedTabId: tabs.SHOW_ARTICLES_LIST.id,\n    articleToRenderData: {},\n    filterBy: { parameterName: \"\", parameterValue: {} },\n    editArticleData: undefined,\n  });\n}\n\nfunction handlePillNavigation(navegateTo) {\n  State.update({ displayedTabId: navegateTo, editArticleData: undefined });\n}\n\nfunction callLibs(srcArray, stateUpdate, libCalls) {\n  return (\n    <>\n      {srcArray.map((src) => {\n        return (\n          <Widget\n            src={src}\n            props={{\n              isTest,\n              stateUpdate,\n              libCalls,\n            }}\n          />\n        );\n      })}\n    </>\n  );\n}\n\n//===============================================END FUNCTIONS======================================================\nreturn (\n  <>\n    <Widget\n      src={widgets.header}\n      props={{\n        isTest,\n        stateUpdate,\n        handleGoHomeButton,\n        handlePillNavigation,\n        brand,\n        pills: navigationPills,\n        navigationButtons,\n        displayedTabId: state.displayedTabId,\n        handleFilterArticles,\n        filterParameter: state.filterBy.parameterName,\n        handleBackButton,\n        tabs,\n      }}\n    />\n    {state.displayedTabId == tabs.SHOW_ARTICLES_LIST.id && (\n      <Widget\n        src={widgets.showArticlesList}\n        props={{\n          isTest,\n          finalArticles,\n          tabs,\n          widgets,\n          addressForArticles,\n          handleOpenArticle,\n          handleFilterArticles,\n          authorForWidget,\n          initialCreateState,\n          editArticleData: state.editArticleData,\n          callLibs,\n          handleFilterArticles,\n          handleEditArticle,\n          showCreateArticle: state.canLoggedUserCreateArticle,\n        }}\n      />\n    )}\n    {state.displayedTabId == tabs.SHOW_ARTICLE.id && (\n      <Widget\n        src={widgets.articleView}\n        props={{\n          isTest,\n          widgets,\n          handleFilterArticles,\n          articleToRenderData: state.articleToRenderData,\n          authorForWidget,\n          handleEditArticle,\n        }}\n      />\n    )}\n\n    {state.displayedTabId == tabs.SHOW_ARTICLES_LIST_BY_AUTHORS.id && (\n      <Widget\n        src={widgets.showArticlesListSortedByAuthors}\n        props={{\n          isTest,\n          finalArticles,\n          tabs,\n          widgets,\n          handleOpenArticle,\n          handleFilterArticles,\n          authorForWidget,\n        }}\n      />\n    )}\n\n    {state.displayedTabId == tabs.ARTICLE_WORKSHOP.id && (\n      <Widget\n        src={widgets.create}\n        props={{\n          isTest,\n          addressForArticles,\n          authorForWidget,\n          stateUpdate,\n          widgets,\n          initialBody: initialBodyAtCreation,\n          initialCreateState,\n          editArticleData: state.editArticleData,\n          callLibs,\n          handleFilterArticles,\n          handleEditArticle,\n        }}\n      />\n    )}\n\n    <CallLibrary>\n      {callLibs(libSrcArray, stateUpdate, state.libCalls)}\n    </CallLibrary>\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb/widget/SayALot", "fact_widget_deployments_id": "15713e2a25e116d23037f54c11ef24a2", "inserted_timestamp": "2023-09-29T00:25:50.112Z", "modified_timestamp": "2023-09-29T00:25:50.112Z", "__row_index": 2}