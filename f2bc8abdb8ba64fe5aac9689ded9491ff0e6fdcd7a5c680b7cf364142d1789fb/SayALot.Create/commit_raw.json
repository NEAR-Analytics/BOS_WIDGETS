{"tx_hash": "39FfrJi5Qtsg7FknZkzrqbbPB6GQoqyBDyGdekxbgkjX", "action_id_social": "HJ1Dkw8Pa8qRge1yCZjZw61z262HkAG3P6qRYG2L8qcE-0-widget", "block_id": 103536125, "block_timestamp": "2023-10-16T21:27:40.391Z", "signer_id": "f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb", "widget_name": "SayALot.Create", "source_code": "const {\r\n  isTest,\r\n  addressForArticles,\r\n  authorForWidget,\r\n  stateUpdate,\r\n  initialBody,\r\n  initialCreateState,\r\n  editArticleData,\r\n  callLibs,\r\n  widgets,\r\n  handleFilterArticles,\r\n  handleEditArticle,\r\n  handlerStateUpdate,\r\n  sbtWhiteList,\r\n  sbts,\r\n  canLoggedUserCreateArticles,\r\n} = props;\r\n\r\nconst libSrcArray = [widgets.libArticle];\r\n\r\nconst errTextNoBody = \"ERROR: no article Body\",\r\n  errTextNoId = \"ERROR: no article Id\",\r\n  errTextDublicatedId = \"ERROR: there is article with such name\";\r\n\r\nState.init({ ...initialCreateState, initialBody: props.initialBody ?? \"\" });\r\n\r\nfunction createStateUpdate(obj) {\r\n  State.update(obj);\r\n}\r\n\r\nconst tagsArray =\r\n  editArticleData && !state.tagsModified ? editArticleData.tags : state.tags;\r\n\r\nconst accountId = context.accountId;\r\n\r\nfunction getRealArticleId() {\r\n  if (editArticleData) {\r\n    return (\r\n      editArticleData.id ??\r\n      `${editArticleData.author}-${editArticleData.timeCreate}`\r\n    );\r\n  } else {\r\n    return `${accountId}-${Date.now()}`;\r\n  }\r\n}\r\n\r\nconst getArticleData = () => {\r\n  const args = {\r\n    title: editArticleData.title ?? state.title,\r\n    author: editArticleData.author ?? accountId,\r\n    lastEditor: accountId,\r\n    timeLastEdit: Date.now(),\r\n    timeCreate: editArticleData.timeCreate ?? Date.now(),\r\n    body: state.articleBody,\r\n    version: editArticleData ? editArticleData.version + 1 : 0,\r\n    navigation_id: null,\r\n    tags: tagsArray,\r\n    id: getRealArticleId(),\r\n    sbts,\r\n  };\r\n  return args;\r\n};\r\n\r\nfunction onCommit() {\r\n  State.update({\r\n    title: \"\",\r\n    clearArticleId: true,\r\n    tags: [],\r\n    clearTags: true,\r\n    articleBody: \"\",\r\n    clearArticleBody: true,\r\n    initalBody: \"\",\r\n    showCreatedArticle: true,\r\n    showPreview: false,\r\n  });\r\n}\r\n\r\nfunction onCancel() {\r\n  State.update({ createdArticle: undefined });\r\n}\r\n\r\nfunction createArticleListener() {\r\n  //To test without commiting use the next line and comment the rest\r\n  // onCommit();\r\n  const article = getArticleData();\r\n  const newLibCalls = [...state.libCalls];\r\n  newLibCalls.push({\r\n    functionName: \"createArticle\",\r\n    key: \"createdArticle\",\r\n    props: {\r\n      article,\r\n      onCommit,\r\n      onCancel,\r\n    },\r\n  });\r\n  State.update({ libCalls: newLibCalls });\r\n}\r\n\r\nfunction switchShowPreview() {\r\n  State.update({\r\n    showPreview: !state.showPreview,\r\n    initialBody: state.articleBody,\r\n  });\r\n}\r\n\r\nconst GeneralContainer = styled.div`\r\n  background-color: rgb(248, 248, 249);\r\n`;\r\n\r\nconst Button = styled.button` \r\n  margin: 0px 1rem; \r\n  display: inline-block; \r\n  text-align: center; \r\n  vertical-align: middle; \r\n  cursor: pointer; \r\n  user-select: none; \r\n  transition: color 0.15s ease-in-out,background-color 0.15s ease-in-out,border-color 0.15s ease-in-out,box-shadow 0.15s ease-in-out; \r\n \r\n  border: 2px solid transparent; \r\n  font-weight: 500; \r\n  padding: 0.3rem 0.5rem; \r\n  background-color: #010A2D; \r\n  border-radius: 12px; \r\n  color: white; \r\n  text-decoration: none;   \r\n \r\n  &:hover { \r\n    color: #010A2D; \r\n    background-color: white; \r\n  } \r\n`;\r\n\r\nconst CreationContainer = styled.div`\r\n  background-color: rgb(230, 230, 230);\r\n  border-radius: 20px;\r\n  padding: 1rem 0;\r\n  position: relative;\r\n`;\r\n\r\nconst SecondContainer = styled.div`\r\n  min-width: 360px;\r\n  background-color: white;\r\n  padding: 1rem;\r\n`;\r\n\r\nconst initialTagsObject = {};\r\n\r\nArray.isArray(tagsArray) &&\r\n  tagsArray.forEach((tag) => {\r\n    initialTagsObject[tag] = true;\r\n  });\r\n\r\nreturn (\r\n  <GeneralContainer className=\"pt-2 row\">\r\n    <div className=\"col-lg-8 col-md-8 col-sm-12\">\r\n      {state.createdArticle && state.showCreatedArticle && editArticleData ? (\r\n        <Widget\r\n          src={widgets.articleView}\r\n          props={{\r\n            widgets,\r\n            isTest,\r\n            handleFilterArticles,\r\n            articleToRenderData: state.createdArticle,\r\n            authorForWidget,\r\n            handleEditArticle,\r\n          }}\r\n        />\r\n      ) : (\r\n        <div>\r\n          {\r\n            // <CreationContainer className=\"container-fluid\">\r\n          }\r\n          <SecondContainer className=\"rounded\">\r\n            <h5 className=\"mb-1\">\r\n              {editArticleData ? \"Edit Article\" : \"Create Article\"}\r\n            </h5>\r\n\r\n            {state.showPreview ? (\r\n              <Widget\r\n                src={widgets.generalCard}\r\n                props={{\r\n                  widgets,\r\n                  isTest,\r\n                  data: {\r\n                    title: state.title,\r\n                    author: accountId,\r\n                    lastEditor: accountId,\r\n                    timeLastEdit: Date.now(),\r\n                    timeCreate: Date.now(),\r\n                    body: state.articleBody,\r\n                    version: 0,\r\n                    navigation_id: null,\r\n                    tags: tagsArray,\r\n                    id: getRealArticleId(),\r\n                    sbts,\r\n                  },\r\n                  addressForArticles,\r\n                  handleOpenArticle: () => {},\r\n                  handleFilterArticles: () => {},\r\n                  authorForWidget,\r\n                  handleShareButton: () => {},\r\n                }}\r\n              />\r\n            ) : (\r\n              <div>\r\n                <div className=\"d-flex flex-column pt-3\">\r\n                  <label for=\"inputArticleId\">Title (case-sensitive):</label>\r\n                  <label for=\"inputArticleId\" className=\"small text-danger\">\r\n                    {state.errorId}\r\n                  </label>\r\n                  <Widget\r\n                    src={`f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb/widget/fasterTextInput`}\r\n                    props={{\r\n                      firstText: state.title,\r\n                      forceClear: state.clearArticleId,\r\n                      stateUpdate: (obj) => State.update(obj),\r\n                      filterText: (e) => e.target.value,\r\n                      editable: editArticleData,\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div className=\"d-flex flex-column pt-3\">\r\n                  <label for=\"textareaArticleBody\">\r\n                    Input article body (in makrdown format):\r\n                  </label>\r\n                  <label\r\n                    for=\"textareaArticleBody\"\r\n                    className=\"small text-danger\"\r\n                  >\r\n                    {state.errorBody}\r\n                  </label>\r\n                  <div className=\"d-flex gap-2\">\r\n                    <Widget\r\n                      src={`${authorForWidget}/widget/MarkdownEditorIframe`}\r\n                      props={{\r\n                        initialText: state.initialBody ?? \"\",\r\n                        onChange: (articleBody) =>\r\n                          State.update({\r\n                            articleBody,\r\n                            clearArticleBody: false,\r\n                          }),\r\n                        clearArticleBody: state.clearArticleBody,\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"d-flex flex-column pt-3\">\r\n                  <Widget\r\n                    src={`${authorForWidget}/widget/TagsEditor`}\r\n                    props={{\r\n                      forceClear: state.clearTags,\r\n                      stateUpdate: (obj) => State.update(obj),\r\n                      initialTagsObject,\r\n                      placeholder: \"Input tags\",\r\n                      setTagsObject: (tags) => {\r\n                        // state.tags = Object.keys(tags);\r\n                        State.update({\r\n                          tagsModified: true,\r\n                          tags: Object.keys(tags),\r\n                        });\r\n                      },\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n            )}\r\n            <div className=\"mt-2 d-flex justify-content-end\">\r\n              <Widget\r\n                src={widgets.newStyledComponents.Input.Button}\r\n                props={{\r\n                  className: \"info outline mx-2\",\r\n                  disabled:\r\n                    state.title.length === 0 || state.articleBody.length === 0,\r\n                  onClick: switchShowPreview,\r\n                  children: (\r\n                    <i\r\n                      className={`bi ${\r\n                        state.showPreview ? \"bi-pencil\" : \"bi-eye-fill\"\r\n                      }`}\r\n                    ></i>\r\n                  ),\r\n                }}\r\n              />\r\n              <Widget\r\n                src={widgets.newStyledComponents.Input.Button}\r\n                props={{\r\n                  className: \"info \",\r\n                  disabled:\r\n                    state.title.length === 0 || state.articleBody.length === 0,\r\n                  onClick: createArticleListener,\r\n                  children: (\r\n                    <div className=\"d-flex justify-conten-center align-items-center\">\r\n                      <span>{editArticleData ? \"Save edition\" : \"Post\"}</span>\r\n                      <i className=\"bi bi-check2\"></i>\r\n                    </div>\r\n                  ),\r\n                }}\r\n              />\r\n            </div>\r\n          </SecondContainer>\r\n          <div style={{ display: \"none\" }}>\r\n            {callLibs(libSrcArray, createStateUpdate, state.libCalls)}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  </GeneralContainer>\r\n);\r\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb/widget/SayALot.Create", "fact_widget_deployments_id": "fe6b9a2850625dd8fe88cbd7e2fc4872", "inserted_timestamp": "2023-10-16T23:28:09.038Z", "modified_timestamp": "2023-10-16T23:28:09.038Z", "__row_index": 46}