{"tx_hash": "6cuKUDx4kadCRGjtNVjCeuW19QPhnqRBfw3hC4o35XEX", "action_id_social": "4g3BRGuJFJpjK5wpPmGfbKaLmAZGPRgdmNnKed7Lvwib-0-widget", "block_id": 103064640, "block_timestamp": "2023-10-10T16:55:57.009Z", "signer_id": "f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb", "widget_name": "SayALot.Create", "source_code": "//===============================================INITIALIZATION=====================================================\nlet { sharedBlockHeight, tagShared, isTest, accountId } = props;\nsharedBlockHeight = Number(sharedBlockHeight);\n\nconst initSbtsNames = [\"fractal.i-am-human.near\"];\n\nconst sbtsNames = state.sbt;\n\nconst initLibCalls = [\n  {\n    functionName: \"getLastEditArticles\",\n    key: \"articles\",\n    props: {\n      env: isTest ? \"test\" : \"prod\",\n      sbtsNames: initSbtsNames,\n    },\n  },\n  {\n    functionName: \"canUserCreateArticle\",\n    key: \"canLoggedUserCreateArticle\",\n    props: {\n      accountId: context.accountId,\n      sbtsNames: initSbtsNames,\n    },\n  },\n  // {\n  //   functionName: \"getLoggedUserSbts\",\n  //   key: \"logedUserSbts\",\n  //   props: {\n  //     accountId: context.accountId,\n  //   },\n  // },\n];\n\n// if (!accountId) accountId = context.accountId;\naccountId = context.accountId;\n\nconst tabs = {\n  SHOW_ARTICLES_LIST: { id: 0 },\n  SHOW_ARTICLE: { id: 1 },\n  ARTICLE_WORKSHOP: { id: 2 },\n  SHOW_ARTICLES_LIST_BY_AUTHORS: { id: 3 },\n};\n\nfunction getInitialFilter() {\n  if (sharedBlockHeight) {\n    return {\n      parameterName: \"getPost\",\n      parameterValue: sharedBlockHeight,\n    };\n  } else if (tagShared) {\n    return {\n      parameterName: \"tag\",\n      parameterValue: tagShared,\n    };\n  } else if (authorShared) {\n    return {\n      parameterName: \"author\",\n      parameterValue: authorShared,\n    };\n  } else {\n    return {\n      parameterName: \"\",\n    };\n  }\n}\n\nfunction getInitialTabId() {\n  if (sharedBlockHeight) {\n    return tabs.SHOW_ARTICLE.id;\n  } else {\n    return tabs.SHOW_ARTICLES_LIST.id;\n  }\n}\n\nState.init({\n  displayedTabId: getInitialTabId(),\n  articleToRenderData: {},\n  filterBy: getInitialFilter(),\n  authorsProfiles: [],\n  libCalls: initLibCalls,\n  sbtsNames: initSbtsNames,\n  sbts: initSbtsNames,\n});\n\nlet newLibCalls = state.libCalls;\n\n// const functionsCalledList = newLibCalls.map((functionCalled, index) => {\n//   return { functionName: functionCalled.functionName, i: index };\n// });\n\n// const lastEditArticlesCall = functionsCalledList.filter(\n//   (functionCalled) => functionCalled.functionName === \"getLastEditArticles\"\n// );\n\n// if (lastEditArticlesCall) {\n//   newLibCalls[getLastEditArticles.index].props.filterBy = state.filterBy;\n// }\n\nState.update({ libCalls: newLibCalls });\n\n//=============================================END INITIALIZATION===================================================\n\n//==================================================CONSTS==========================================================\n\n//const authorForWidget = \"sayalot.near\";\nconst authorForWidget =\n  \"f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb\";\n// const authorForWidget = \"kenrou-it.near\";\nconst libSrcArray = [`${authorForWidget}/widget/SayALot.lib.article`];\nconst thisWidgetName = \"SayALot\";\n\nconst sbtWhiteList = [\n  \"fractal.i-am-human.near - class 1\",\n  \"fractal.i-am-human.near - class 1\",\n  \"fractal.i-am-human.near - class 2\",\n];\n\nconst widgets = {\n  sayALot: `${authorForWidget}/widget/${thisWidgetName}`,\n  create: `${authorForWidget}/widget/SayALot.Create`,\n  styledComponents: \"rubycop.near/widget/NDC.StyledComponents\",\n  header: `${authorForWidget}/widget/SayALot.NavBar`,\n  showArticlesList: `${authorForWidget}/widget/SayALot.AllArticlesList`,\n  showArticlesListSortedByAuthors: `${authorForWidget}/widget/SayALot.AllArticlesSortByAuthors`,\n  articlesByAuthorCard: `${authorForWidget}/widget/SayALot.ArticlesByAuthorCard`,\n  generalCard: `${authorForWidget}/widget/SayALot.GeneralCard`,\n  articleView: `${authorForWidget}/widget/SayALot.ArticleView`,\n  reactions: `${authorForWidget}/widget/SayALot.Reactions`,\n  addComment: `${authorForWidget}/widget/SayALot.AddComment`,\n  commentView: `${authorForWidget}/widget/SayALot.CommentView`,\n  libComment: `${authorForWidget}/widget/SayALot.lib.comment`,\n  libArticle: `${authorForWidget}/widget/SayALot.lib.article`,\n  libEmojis: `${authorForWidget}/widget/SayALot.lib.emojis`,\n  libUpVotes: `${authorForWidget}/widget/SayALot.lib.upVotes`,\n  upVoteButton: `${authorForWidget}/widget/SayALot.UpVoteButton`,\n};\n\nconst profile = props.profile ?? Social.getr(`${accountId}/profile`);\nif (profile === null) {\n  return \"Loading\";\n}\n\nlet authorProfile = {};\nif (state.filterBy.parameterName == \"author\") {\n  authorProfile = Social.getr(`${state.filterBy.parameterValue}/profile`);\n  // if (!authorProfile) return \"Loading...\";\n}\n\nconst brand = {\n  homePageId: tabs.SHOW_ARTICLES_LIST.id,\n  brandName: \"Say a lot\",\n  logoHref:\n    \"https://ipfs.near.social/ipfs/bafkreiaqxa4st4vp4rtq2iyobdgqe5tpfg55mmyvfg25upd2qplcxylyfi\",\n  logoRemWidth: 6,\n  logoRemHeight: 6,\n};\n\nconst navigationPills = [\n  { id: tabs.SHOW_ARTICLES_LIST.id, title: \"Articles\" },\n  { id: tabs.SHOW_ARTICLES_LIST_BY_AUTHORS.id, title: \"Authors\" },\n];\n\nconst navigationButtons = [\n  // { id: tabs.ARTICLE_WORKSHOP.id, title: \"+Create article\" },\n];\n\nconst sbts = state.sbts;\n\nconst initialBodyAtCreation = state.editArticleData.body;\n\n//=================================================END CONSTS=======================================================\n\n//=================================================GET DATA=========================================================\nconst finalArticles = state.articles;\n\nfunction filterArticlesByTag(tag, articles) {\n  return articles.filter((article) => {\n    return article.tags.includes(tag);\n  });\n}\n\nfunction filterArticlesByAuthor(author, articles) {\n  return articles.filter((article) => {\n    return article.author === author;\n  });\n}\n\nfunction filterOnePost(blockHeight, articles) {\n  if (articles) {\n    return articles.filter((article) => article.blockHeight === blockHeight);\n  } else {\n    return [];\n  }\n}\n\nif (state.filterBy.parameterName === \"tag\") {\n  finalArticles = filterArticlesByTag(\n    state.filterBy.parameterValue,\n    finalArticles\n  );\n} else if (state.filterBy.parameterName === \"author\") {\n  finalArticles = filterArticlesByAuthor(\n    state.filterBy.parameterValue,\n    finalArticles\n  );\n} else if (state.filterBy.parameterName === \"getPost\") {\n  finalArticles = filterOnePost(state.filterBy.parameterValue, finalArticles);\n  if (finalArticles.length > 0) {\n    State.update({ articleToRenderData: finalArticles[0] });\n  }\n}\n//===============================================END GET DATA=======================================================\n\n//=============================================STYLED COMPONENTS====================================================\nconst CallLibrary = styled.div`\n  display: none;\n`;\n\nconst ShareInteractionGeneralContainer = styled.div`\n    position: fixed;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    top: 0;\n    left: 0;\n    height: 100vh;\n    width: 100vw;\n    backdrop-filter: blur(10px);\n    z-index: 1;\n`;\n\nconst ShareInteractionMainContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  background: white;\n  padding: 1rem;\n  border-radious: 12px;\n`;\n\nconst ClosePopUpContainer = styled.div`\n  display: flex;  \n  flex-direction: row-reverse;\n`;\n\nconst CloseIcon = styled.div`\n  cursor: pointer;\n`;\n\nconst PopUpDescription = styled.p`\n  color: #474D55;\n`;\n\nconst ShowLinkShared = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background-color: #F2F6FA;\n  padding: 1rem 2rem;\n  border-radius: 17px;\n`;\n\nconst LinkShared = styled.span`\n  color: #0065FF;\n  word-wrap: anywhere;\n`;\n\nconst ClipboardContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-left: 0.5rem;\n  min-width: 2.5rem;\n`;\n\nconst ClipboardIcon = styled.i`\n  color: ${state.linkCopied ? \"#0065FF\" : \"black\"};\n  transition: color 0.3s linear;\n  cursor: pointer;\n`;\n\nconst CopiedFeedback = styled.span`\n  font-size: 0.7rem;\n  color: #6c757d;\n`;\n//===========================================END STYLED COMPONENTS==================================================\n\n//================================================COMPONENTS========================================================\nconst renderShareInteraction = () => {\n  return (\n    <ShareInteractionGeneralContainer>\n      <ShareInteractionMainContainer>\n        <ClosePopUpContainer>\n          <CloseIcon\n            className=\"bi bi-x\"\n            onClick={() =>\n              State.update({ showShareModal: false, linkCopied: false })\n            }\n          ></CloseIcon>\n        </ClosePopUpContainer>\n        <h3>Share</h3>\n        <PopUpDescription>Use this link to share the article</PopUpDescription>\n        <ShowLinkShared>\n          <LinkShared>{getLink()}</LinkShared>\n          <ClipboardContainer>\n            <ClipboardIcon\n              className=\"bi-clipboard\"\n              onClick={() => {\n                clipboard.writeText(getLink());\n                State.update({ linkCopied: true });\n              }}\n            ></ClipboardIcon>\n            {state.linkCopied && <CopiedFeedback>Copied!</CopiedFeedback>}\n          </ClipboardContainer>\n        </ShowLinkShared>\n      </ShareInteractionMainContainer>\n    </ShareInteractionGeneralContainer>\n  );\n};\n//==============================================END COMPONENTS======================================================\n\n//=================================================FUNCTIONS========================================================\n\nfunction getValidEditArticleDataTags() {\n  let tags = state.editArticleData.tags;\n  let newFormatTags = {};\n\n  tags &&\n    tags.map((tag) => {\n      newFormatTags[tag] = \"\";\n    });\n  return newFormatTags;\n}\n\nfunction createSbtOptions() {\n  return sbtWhiteList.map((option, i) => {\n    //The first options is always the default one\n    if (i == 0) {\n      return { title: option, default: true, value: option };\n    } else {\n      return { title: option, value: option };\n    }\n  });\n}\n\nconst initialCreateState = {\n  articleId: state.editArticleData.articleId ?? \"\",\n  articleBody: state.editArticleData.body ?? initialBodyAtCreation,\n  tags: state.editArticleData.tags ? getValidEditArticleDataTags() : {},\n  libCalls: [],\n  sbts: [sbtWhiteList[0]],\n};\n\nfunction stateUpdate(obj) {\n  State.update(obj);\n}\n\nfunction handleOpenArticle(articleToRenderData) {\n  State.update({\n    displayedTabId: tabs.SHOW_ARTICLE.id,\n    articleToRenderData,\n    editArticleData: undefined,\n  });\n}\n\nfunction handleEditArticle(articleData) {\n  State.update({\n    displayedTabId: tabs.ARTICLE_WORKSHOP.id,\n    editArticleData: articleData,\n  });\n}\n\nfunction handleFilterArticles(filter) {\n  State.update({\n    filterBy: {\n      parameterName: filter.filterBy,\n      parameterValue: filter.value,\n    },\n    displayedTabId: tabs.SHOW_ARTICLES_LIST.id,\n    editArticleData: undefined,\n  });\n}\n\nfunction handleBackButton() {\n  props.editArticleData\n    ? State.update({\n        displayedTabId: tabs.SHOW_ARTICLE.id,\n        editArticleData: undefined,\n        filterBy: {\n          parameterName: \"\",\n          parameterValue: undefined,\n          handleBackClicked: true,\n        },\n      })\n    : State.update({\n        displayedTabId: tabs.SHOW_ARTICLES_LIST.id,\n        articleToRenderData: {},\n        editArticleData: undefined,\n        filterBy: {\n          parameterName: \"\",\n          parameterValue: undefined,\n          handleBackClicked: true,\n        },\n      });\n}\n\nfunction handleGoHomeButton() {\n  State.update({\n    displayedTabId: tabs.SHOW_ARTICLES_LIST.id,\n    articleToRenderData: {},\n    filterBy: { parameterName: \"\", parameterValue: {} },\n    editArticleData: undefined,\n  });\n}\n\nfunction handlePillNavigation(navegateTo) {\n  State.update({ displayedTabId: navegateTo, editArticleData: undefined });\n}\n\n// console.log(0, \"libCalls: \", state.libCalls);\nfunction callLibs(srcArray, stateUpdate, libCalls) {\n  return (\n    <>\n      {srcArray.map((src) => {\n        return (\n          <Widget\n            src={src}\n            props={{\n              isTest,\n              stateUpdate,\n              libCalls,\n            }}\n          />\n        );\n      })}\n    </>\n  );\n}\n\nfunction handleSbtSelection(string) {\n  State.update({\n    sbts: [string],\n  });\n}\n\nfunction handleShareButton(showShareModal, sharedElement) {\n  //showShareModal is a boolean\n  //sharedElement is and object like the example: {\n  //   type: string,\n  //   value: number||string,\n  // }\n  State.update({ showShareModal, sharedElement });\n}\n\nfunction getLink() {\n  return `https://near.social/f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb/widget/SayALot?${state.sharedElement.type}=${state.sharedElement.value}`;\n}\n\n//===============================================END FUNCTIONS======================================================\nreturn (\n  <>\n    {state.showShareModal && renderShareInteraction()}\n    <Widget\n      src={widgets.header}\n      props={{\n        isTest,\n        stateUpdate,\n        handleGoHomeButton,\n        handlePillNavigation,\n        brand,\n        pills: navigationPills,\n        navigationButtons,\n        displayedTabId: state.displayedTabId,\n        handleFilterArticles,\n        filterParameter: state.filterBy.parameterName,\n        handleBackButton,\n        tabs,\n        sbtsNames,\n      }}\n    />\n    {finalArticles && state.displayedTabId == tabs.SHOW_ARTICLES_LIST.id && (\n      <Widget\n        src={widgets.showArticlesList}\n        props={{\n          isTest,\n          finalArticles,\n          tabs,\n          widgets,\n          addressForArticles,\n          handleOpenArticle,\n          handleFilterArticles,\n          authorForWidget,\n          initialCreateState,\n          editArticleData: state.editArticleData,\n          callLibs,\n          handleEditArticle,\n          showCreateArticle: state.canLoggedUserCreateArticle,\n          sbtWhiteList,\n          handleSbtSelection,\n          sbts,\n          createSbtOptions,\n          handleShareButton,\n          // logedUserSbts: state.logedUserSbts,\n        }}\n      />\n    )}\n    {state.articleToRenderData.articleId &&\n    state.displayedTabId == tabs.SHOW_ARTICLE.id ? (\n      <Widget\n        src={widgets.articleView}\n        props={{\n          isTest,\n          widgets,\n          handleFilterArticles,\n          articleToRenderData: state.articleToRenderData,\n          authorForWidget,\n          handleEditArticle,\n          handleShareButton,\n          // logedUserSbts: state.logedUserSbts,\n        }}\n      />\n    ) : (\n      <div className=\"spinner-grow\" role=\"status\">\n        <span className=\"visually-hidden\">Loading...</span>\n      </div>\n    )}\n\n    {state.displayedTabId == tabs.SHOW_ARTICLES_LIST_BY_AUTHORS.id && (\n      <Widget\n        src={widgets.showArticlesListSortedByAuthors}\n        props={{\n          isTest,\n          finalArticles,\n          tabs,\n          widgets,\n          handleOpenArticle,\n          handleFilterArticles,\n          authorForWidget,\n          // logedUserSbts: state.logedUserSbts,\n        }}\n      />\n    )}\n\n    {state.displayedTabId == tabs.ARTICLE_WORKSHOP.id && (\n      <Widget\n        src={widgets.create}\n        props={{\n          isTest,\n          addressForArticles,\n          authorForWidget,\n          stateUpdate,\n          widgets,\n          initialBody: initialBodyAtCreation,\n          initialCreateState,\n          editArticleData: state.editArticleData,\n          callLibs,\n          handleFilterArticles,\n          handleEditArticle,\n          sbtWhiteList,\n          createSbtOptions,\n        }}\n      />\n    )}\n\n    <CallLibrary>\n      {callLibs(libSrcArray, stateUpdate, state.libCalls)}\n    </CallLibrary>\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb/widget/SayALot.Create", "fact_widget_deployments_id": "7738636b1c8c7631f8c2f71e87eb0bc8", "inserted_timestamp": "2023-10-10T18:46:45.023Z", "modified_timestamp": "2023-10-10T18:46:45.023Z", "__row_index": 127}