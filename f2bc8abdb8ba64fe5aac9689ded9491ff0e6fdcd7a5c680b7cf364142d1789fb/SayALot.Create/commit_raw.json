{"tx_hash": "J73RAAATFwHWaNTWFwPkU1S3hS8wg9KenDZB164crStk", "action_id_social": "EeryGeLAq2RCDeNce7doQGQHMmeyjzZkZ3kKRMvdkKTh-0-widget", "block_id": 102087964, "block_timestamp": "2023-09-27T17:58:42.038Z", "signer_id": "f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb", "widget_name": "SayALot.Create", "source_code": "const {\r\n  isTest,\r\n  addressForArticles,\r\n  authorForWidget,\r\n  stateUpdate,\r\n  initialBody,\r\n  initialCreateState,\r\n  editArticleData,\r\n  callLibs,\r\n  widgets,\r\n  handleFilterArticles,\r\n  handleEditArticle,\r\n  handlerStateUpdate,\r\n} = props;\r\n\r\nconst libSrcArray = [widgets.libArticle];\r\n\r\nconst errTextNoBody = \"ERROR: no article Body\",\r\n  errTextNoId = \"ERROR: no article Id\",\r\n  errTextDublicatedId = \"ERROR: there is article with such name\";\r\n\r\nState.init(initialCreateState);\r\n\r\nfunction createStateUpdate(obj) {\r\n  State.update(obj);\r\n}\r\n\r\nconst tagsArray = state.tags;\r\n\r\nconst accountId = context.accountId;\r\n\r\nfunction getRealArticleId() {\r\n  if (editArticleData) {\r\n    return (\r\n      editArticleData.realArticleId ??\r\n      `${editArticleData.author}-${editArticleData.timeCreate}`\r\n    );\r\n  } else {\r\n    return `${accountId}-${Date.now()}`;\r\n  }\r\n}\r\n\r\nconst getArticleData = () => {\r\n  const args = {\r\n    articleId: editArticleData.articleId ?? state.articleId,\r\n    author: editArticleData.author ?? accountId,\r\n    lastEditor: accountId,\r\n    timeLastEdit: Date.now(),\r\n    timeCreate: editArticleData.timeCreate ?? Date.now(),\r\n    body: state.articleBody,\r\n    version: editArticleData ? editArticleData.version + 1 : 0,\r\n    navigation_id: null,\r\n    tags: tagsArray,\r\n    realArticleId: getRealArticleId(),\r\n  };\r\n  return args;\r\n};\r\n\r\nfunction onCommit() {\r\n  State.update({\r\n    showCreatedArticle: true,\r\n    articleId: \"\",\r\n    tags: [],\r\n    articleBody: \"Create post\",\r\n  });\r\n}\r\n\r\nfunction onCancel() {\r\n  State.update({ createdArticle: undefined });\r\n}\r\n\r\nfunction createArticleListener() {\r\n  const article = getArticleData();\r\n  const newLibCalls = [...state.libCalls];\r\n  newLibCalls.push({\r\n    functionName: \"createArticle\",\r\n    key: \"createdArticle\",\r\n    props: {\r\n      article,\r\n      onCommit,\r\n      onCancel,\r\n    },\r\n  });\r\n  State.update({ libCalls: newLibCalls });\r\n}\r\n\r\nconst Button = styled.button` \r\n  margin: 0px 1rem; \r\n  display: inline-block; \r\n  text-align: center; \r\n  vertical-align: middle; \r\n  cursor: pointer; \r\n  user-select: none; \r\n  transition: color 0.15s ease-in-out,background-color 0.15s ease-in-out,border-color 0.15s ease-in-out,box-shadow 0.15s ease-in-out; \r\n \r\n  border: 2px solid transparent; \r\n  font-weight: 500; \r\n  padding: 0.3rem 0.5rem; \r\n  background-color: #010A2D; \r\n  border-radius: 12px; \r\n  color: white; \r\n  text-decoration: none;   \r\n \r\n  &:hover { \r\n    color: #010A2D; \r\n    background-color: white; \r\n  } \r\n`;\r\n\r\nconst CreationContainer = styled.div`\r\n  background-color: rgb(230, 230, 230);\r\n  border-radius: 20px;\r\n  padding: 1rem 0;\r\n  position: relative;\r\n`;\r\n\r\nconst SecondContainer = styled.div`\r\n  margin: 0 auto;\r\n  width: 90%;\r\n  min-width: 360px;\r\n  background-color: white;\r\n  padding: 1rem;\r\n  border-radius: 20px;\r\n`;\r\n\r\nreturn (\r\n  <>\r\n    {state.createdArticle && state.showCreatedArticle ? (\r\n      <Widget\r\n        src={widgets.articleView}\r\n        props={{\r\n          widgets,\r\n          isTest,\r\n          handleFilterArticles,\r\n          articleToRenderData: state.createdArticle,\r\n          authorForWidget,\r\n          handleEditArticle,\r\n        }}\r\n      />\r\n    ) : (\r\n      <div className=\"border rounded mx-3\">\r\n        {\r\n          // <CreationContainer className=\"container-fluid\">\r\n        }\r\n        <SecondContainer>\r\n          <h5 className=\"mb-1\">\r\n            {editArticleData ? \"Edit Article\" : \"Create Article\"}\r\n          </h5>\r\n\r\n          <div>\r\n            {\r\n              // <div>\r\n              //   <Widget\r\n              //     src={\"rubycop.near/widget/NDC.StyledComponents\"}\r\n              //     props={{\r\n              //       Button: {\r\n              //         className: \"primary dark\",\r\n              //         disable: state.articleId > 0 || state.articleBody > 0,\r\n              //         text: editArticleData ? \"Save edition\" : \"Save article\",\r\n              //         onClick: createArticleListener,\r\n              //         icon: <i className=\"bi bi-check2\"></i>,\r\n              //       },\r\n              //     }}\r\n              //   />\r\n              // </div>\r\n            }\r\n            <div className=\"d-flex flex-column pt-3\">\r\n              <label for=\"inputArticleId\">\r\n                Input article id (case-sensitive, without spaces):\r\n              </label>\r\n              <label for=\"inputArticleId\" className=\"small text-danger\">\r\n                {state.errorId}\r\n              </label>\r\n              <Widget\r\n                src={`f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb/widget/fasterTextInput`}\r\n                props={{\r\n                  firstText: state.articleId,\r\n                  stateUpdate: (obj) => State.update(obj),\r\n                  filterText: (e) => e.target.value.replace(/\\s+/g, \"\"),\r\n                  editable: editArticleData,\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"d-flex flex-column pt-3\">\r\n              <Widget\r\n                src={`${authorForWidget}/widget/TagsEditor`}\r\n                props={{\r\n                  initialTagsObject: state.tags,\r\n                  placeholder: \"Input tags\",\r\n                  setTagsObject: (tags) => {\r\n                    state.tags = Object.keys(tags);\r\n                    State.update();\r\n                  },\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"d-flex flex-column pt-3\">\r\n              <label for=\"textareaArticleBody\">\r\n                Input article body (in makrdown format):\r\n              </label>\r\n              <label for=\"textareaArticleBody\" className=\"small text-danger\">\r\n                {state.errorBody}\r\n              </label>\r\n              <div className=\"d-flex gap-2\">\r\n                {\r\n                  //<div className=\"w-50\">\r\n                }\r\n                <Widget\r\n                  src=\"mob.near/widget/MarkdownEditorIframe\"\r\n                  props={{\r\n                    initialText: initialBody,\r\n                    onChange: (articleBody) => State.update({ articleBody }),\r\n                  }}\r\n                />\r\n                {\r\n                  //</div>\r\n                }\r\n                {\r\n                  //<div className=\"w-50\">\r\n                }\r\n                {\r\n                  //TODO make this visible when clicking a show preview button after creating it\r\n                  //\r\n                  // <Widget\r\n                  // src=\"mob.near/widget/SocialMarkdown\"\r\n                  // props={{ text: state.articleBody }}\r\n                  // />\r\n                }\r\n                {\r\n                  //</div>\r\n                }\r\n              </div>\r\n            </div>\r\n            <div className=\"mt-2 d-flex justify-content-end\">\r\n              <Widget\r\n                src={\"rubycop.near/widget/NDC.StyledComponents\"}\r\n                props={{\r\n                  Button: {\r\n                    className: \"primary dark\",\r\n                    disabled:\r\n                      state.articleId.length == 0 ||\r\n                      state.articleBody.length == 0,\r\n                    text: editArticleData ? \"Save edition\" : \"Post\",\r\n                    onClick: createArticleListener,\r\n                    icon: <i className=\"bi bi-check2\"></i>,\r\n                  },\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </SecondContainer>\r\n        <div style={{ display: \"none\" }}>\r\n          {callLibs(libSrcArray, createStateUpdate, state.libCalls)}\r\n        </div>\r\n        {\r\n          //</CreationContainer>\r\n        }\r\n      </div>\r\n    )}\r\n  </>\r\n);\r\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb/widget/SayALot.Create", "fact_widget_deployments_id": "245990b894d728b0f0df091dcff6120d", "inserted_timestamp": "2023-09-27T19:48:36.732Z", "modified_timestamp": "2023-09-27T19:48:36.732Z", "__row_index": 23}