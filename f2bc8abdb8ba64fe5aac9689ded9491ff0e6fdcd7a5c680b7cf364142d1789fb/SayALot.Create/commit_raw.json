{"tx_hash": "7HJC144svzkbpkF26LdVzzTHJ1sY87c8Sn7SfstigfDU", "action_id_social": "5tFocxt7TWbAUbBGZ6ia6ALaaBmKe9J3RKCiW5JR2Cy7-0-widget", "block_id": 102016144, "block_timestamp": "2023-09-26T19:00:02.088Z", "signer_id": "f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb", "widget_name": "SayALot.Create", "source_code": "const {\n  isTest,\n  addressForArticles,\n  authorForWidget,\n  stateUpdate,\n  initialBody,\n  initialCreateState,\n  editArticleData,\n  callLibs,\n  widgets,\n  handleFilterArticles,\n  handleEditArticle,\n  handlerStateUpdate,\n} = props;\n\nconst libSrcArray = [widgets.libArticle];\n\nconst errTextNoBody = \"ERROR: no article Body\",\n  errTextNoId = \"ERROR: no article Id\",\n  errTextDublicatedId = \"ERROR: there is article with such name\";\n\nState.init(initialCreateState);\n\nfunction createStateUpdate(obj) {\n  State.update(obj);\n}\n\nconst tagsArray = state.tags;\n\nconst accountId = context.accountId;\n\nfunction getRealArticleId() {\n  if (editArticleData) {\n    return (\n      editArticleData.realArticleId ??\n      `${editArticleData.author}-${editArticleData.timeCreate}`\n    );\n  } else {\n    return `${accountId}-${Date.now()}`;\n  }\n}\n\nconst getArticleData = () => {\n  const args = {\n    articleId: editArticleData.articleId ?? state.articleId,\n    author: editArticleData.author ?? accountId,\n    lastEditor: accountId,\n    timeLastEdit: Date.now(),\n    timeCreate: editArticleData.timeCreate ?? Date.now(),\n    body: state.articleBody,\n    version: editArticleData ? editArticleData.version + 1 : 0,\n    navigation_id: null,\n    tags: tagsArray,\n    realArticleId: getRealArticleId(),\n  };\n  return args;\n};\n\nfunction onCommit() {\n  State.update({ showCreatedArticle: true });\n}\n\nfunction onCancel() {\n  State.update({ createdArticle: undefined });\n}\n\nfunction createArticleListener() {\n  const article = getArticleData();\n  const newLibCalls = [...state.libCalls];\n  newLibCalls.push({\n    functionName: \"createArticle\",\n    key: \"createdArticle\",\n    props: {\n      article,\n      onCommit,\n      onCancel,\n    },\n  });\n  State.update({ libCalls: newLibCalls });\n}\n\nconst Button = styled.button` \n  margin: 0px 1rem; \n  display: inline-block; \n  text-align: center; \n  vertical-align: middle; \n  cursor: pointer; \n  user-select: none; \n  transition: color 0.15s ease-in-out,background-color 0.15s ease-in-out,border-color 0.15s ease-in-out,box-shadow 0.15s ease-in-out; \n \n  border: 2px solid transparent; \n  font-weight: 500; \n  padding: 0.3rem 0.5rem; \n  background-color: #010A2D; \n  border-radius: 12px; \n  color: white; \n  text-decoration: none;   \n \n  &:hover { \n    color: #010A2D; \n    background-color: white; \n  } \n`;\n\nconst CreationContainer = styled.div`\n  background-color: rgb(230, 230, 230);\n  border-radius: 20px;\n  padding: 1rem 0;\n  position: relative;\n`;\n\nconst SecondContainer = styled.div`\n  margin: 0 auto;\n  width: 90%;\n  min-width: 360px;\n  background-color: white;\n  padding: 1rem;\n  border-radius: 20px;\n`;\n\nconsole.log(\"state.articleId: \", state.articleId);\nconsole.log(\"state.articleBody: \", state.articleBody);\nconsole.log(\n  \"resultado: \",\n  !(state.articleId.length > 0 && state.articleBody.length > 0)\n);\n\nreturn (\n  <div className=\"border rounded mx-3\">\n    {\n      //   {state.createdArticle && state.showCreatedArticle ? (\n      //   <Widget\n      //     src={widgets.articleView}\n      //     props={{\n      //       widgets,\n      //       isTest,\n      //       handleFilterArticles,\n      //       articleToRenderData: state.createdArticle,\n      //       authorForWidget,\n      //       handleEditArticle,\n      //     }}\n      //   />\n      // ) : (\n    }\n    <>\n      {\n        // <CreationContainer className=\"container-fluid\">\n      }\n      <SecondContainer>\n        <h3 className=\"mb-1\">\n          {editArticleData ? \"Edit Article\" : \"Create Article\"}\n        </h3>\n\n        <div>\n          {\n            // <div>\n            //   <Widget\n            //     src={\"rubycop.near/widget/NDC.StyledComponents\"}\n            //     props={{\n            //       Button: {\n            //         className: \"primary dark\",\n            //         disable: state.articleId > 0 || state.articleBody > 0,\n            //         text: editArticleData ? \"Save edition\" : \"Save article\",\n            //         onClick: createArticleListener,\n            //         icon: <i className=\"bi bi-check2\"></i>,\n            //       },\n            //     }}\n            //   />\n            // </div>\n          }\n          <div className=\"d-flex flex-column pt-3\">\n            <label for=\"inputArticleId\">\n              Input article id (case-sensitive, without spaces):\n            </label>\n            <label for=\"inputArticleId\" className=\"small text-danger\">\n              {state.errorId}\n            </label>\n            <Widget\n              src={`f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb/widget/fasterTextInput`}\n              props={{\n                firstText: state.articleId,\n                stateUpdate: (obj) => State.update(obj),\n                filterText: (e) => e.target.value.replace(/\\s+/g, \"\"),\n                editable: editArticleData,\n              }}\n            />\n          </div>\n          <div className=\"d-flex flex-column pt-3\">\n            <Widget\n              src={`${authorForWidget}/widget/TagsEditor`}\n              props={{\n                initialTagsObject: state.tags,\n                placeholder: \"Input tags\",\n                setTagsObject: (tags) => {\n                  state.tags = Object.keys(tags);\n                  State.update();\n                },\n              }}\n            />\n          </div>\n          <div className=\"d-flex flex-column pt-3\">\n            <label for=\"textareaArticleBody\">\n              Input article body (in makrdown format):\n            </label>\n            <label for=\"textareaArticleBody\" className=\"small text-danger\">\n              {state.errorBody}\n            </label>\n            <div className=\"d-flex gap-2\">\n              {\n                //<div className=\"w-50\">\n              }\n              <Widget\n                src=\"mob.near/widget/MarkdownEditorIframe\"\n                props={{\n                  initialText: initialBody,\n                  onChange: (articleBody) => State.update({ articleBody }),\n                }}\n              />\n              {\n                //</div>\n              }\n              {\n                //<div className=\"w-50\">\n              }\n              {\n                //TODO make this visible when clicking a show preview button after creating it\n                //\n                // <Widget\n                // src=\"mob.near/widget/SocialMarkdown\"\n                // props={{ text: state.articleBody }}\n                // />\n              }\n              {\n                //</div>\n              }\n            </div>\n          </div>\n          <div className=\"mt-2 d-flex justify-content-end\">\n            <Widget\n              src={\"rubycop.near/widget/NDC.StyledComponents\"}\n              props={{\n                Button: {\n                  className: \"primary dark\",\n                  disabled: true,\n                  // state.articleId.length == 0 &&\n                  // state.articleBody.length == 0,\n                  text: editArticleData ? \"Save edition\" : \"Post\",\n                  onClick: createArticleListener,\n                  icon: <i className=\"bi bi-check2\"></i>,\n                },\n              }}\n            />\n          </div>\n        </div>\n      </SecondContainer>\n      <div style={{ display: \"none\" }}>\n        {callLibs(libSrcArray, createStateUpdate, state.libCalls)}\n      </div>\n      {\n        //</CreationContainer>\n      }\n    </>\n    {\n      // )\n    }\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb/widget/SayALot.Create", "fact_widget_deployments_id": "7cd2392f33cb1fdc5cee5eeba923681c", "inserted_timestamp": "2023-09-26T20:48:09.605Z", "modified_timestamp": "2023-09-26T20:48:09.605Z", "__row_index": 59}