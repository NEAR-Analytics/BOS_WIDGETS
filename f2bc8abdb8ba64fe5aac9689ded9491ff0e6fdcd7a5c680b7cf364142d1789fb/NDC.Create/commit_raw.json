{"tx_hash": "4w9FvNjhX4LuomaM8vs4RaJ8h1httZ8bdR8Pfs6YCx5e", "action_id_social": "GuhhQi83JcQfjfgASMtFfQrHb2QioWBirSxgXcweMMZm-0-widget", "block_id": 98149777, "block_timestamp": "2023-08-05T19:57:01.129Z", "signer_id": "f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb", "widget_name": "NDC.Create", "source_code": "const {\r\n  isTest,\r\n  addressForArticles,\r\n  authorForWidget,\r\n  stateUpdate,\r\n  initialBody,\r\n  initialCreateState,\r\n} = props;\r\n\r\nconst errTextNoBody = \"ERROR: no article Body\",\r\n  errTextNoId = \"ERROR: no article Id\",\r\n  errTextDublicatedId = \"ERROR: there is article with such name\";\r\n\r\nState.init(initialCreateState);\r\nconst tagsArray = state.tags ? Object.keys(state.tags) : [];\r\nconsole.log(tagsArray);\r\n\r\nconst getArticleData = () => {\r\n  const args = {\r\n    articleId: state.articleId,\r\n    author: accountId,\r\n    lastEditor: accountId,\r\n    timeLastEdit: Date.now(),\r\n    timeCreate: Date.now(),\r\n    body: state.articleBody,\r\n    version: 0,\r\n    navigation_id: null,\r\n    tags: tagsArray,\r\n  };\r\n  return args;\r\n};\r\n\r\nconst composeData = () => {\r\n  let data;\r\n  if (isTest) {\r\n    data = {\r\n      test_sayALotArticle: {\r\n        main: JSON.stringify(getArticleData()),\r\n      },\r\n      index: {\r\n        test_sayALotArticle: JSON.stringify({\r\n          key: \"main\",\r\n          value: {\r\n            type: \"md\",\r\n            id: `${context.accountId}-${Date.now()}`,\r\n          },\r\n        }),\r\n      },\r\n    };\r\n  } else {\r\n    data = {\r\n      sayALotArticle: {\r\n        main: JSON.stringify(getArticleData()),\r\n      },\r\n      index: {\r\n        sayALotArticle: JSON.stringify({\r\n          key: \"main\",\r\n          value: {\r\n            type: \"md\",\r\n            id: `${context.accountId}-${Date.now()}`,\r\n          },\r\n        }),\r\n      },\r\n    };\r\n  }\r\n\r\n  if (tagsArray.length) {\r\n    data.index.tag = JSON.stringify(\r\n      tagsArray.map((tag) => ({\r\n        key: tag,\r\n        value: item,\r\n      }))\r\n    );\r\n  }\r\n\r\n  return data;\r\n};\r\n\r\n// === SAVE HANDLER ===\r\nconst saveHandler = (e) => {\r\n  State.update({\r\n    errorId: \"\",\r\n    errorBody: \"\",\r\n  });\r\n  if (state.articleId && state.articleBody) {\r\n    // TODO check it automaticle\r\n    const isArticleIdDublicated = false;\r\n\r\n    if (!isArticleIdDublicated) {\r\n      const newData = composeData();\r\n\r\n      State.update({ saving: true });\r\n\r\n      Social.set(newData, {\r\n        force: true,\r\n        onCommit: () => {\r\n          stateUpdate({\r\n            displayedTabId: tabs.SHOW_ARTICLE.id,\r\n            renderLastOfThisAccountId: accountId,\r\n          });\r\n          State.update({ saveComplete: true, saving: false });\r\n        },\r\n        onCancel: () => {\r\n          State.update({ saving: false });\r\n        },\r\n      });\r\n    } else {\r\n      State.update({\r\n        errorId: errTextDublicatedId,\r\n      });\r\n    }\r\n  } else {\r\n    if (!state.articleId) {\r\n      State.update({\r\n        errorId: errTextNoId,\r\n      });\r\n    }\r\n    if (!state.articleBody) {\r\n      State.update({ errorBody: errTextNoBody });\r\n    }\r\n  }\r\n};\r\n\r\nconst Button = styled.button` \r\n  margin: 0px 1rem; \r\n  display: inline-block; \r\n  text-align: center; \r\n  vertical-align: middle; \r\n  cursor: pointer; \r\n  user-select: none; \r\n  transition: color 0.15s ease-in-out,background-color 0.15s ease-in-out,border-color 0.15s ease-in-out,box-shadow 0.15s ease-in-out; \r\n \r\n  border: 2px solid transparent; \r\n  font-weight: 500; \r\n  padding: 0.3rem 0.5rem; \r\n  background-color: #010A2D; \r\n  border-radius: 12px; \r\n  color: white; \r\n  text-decoration: none;   \r\n \r\n  &:hover { \r\n    color: #010A2D; \r\n    background-color: white; \r\n  } \r\n`;\r\n\r\nreturn (\r\n  <div\r\n    className=\"container-fluid\"\r\n    style={\r\n      state.saveComplete\r\n        ? {\r\n            backgroundColor: \"rgb(230, 230, 230)\",\r\n            borderRadius: \"20px\",\r\n            padding: \"0 0 1rem 0 \",\r\n            position: \"relative\",\r\n            overflow: \"hidden\",\r\n            height: \"80vh\",\r\n          }\r\n        : {\r\n            backgroundColor: \"rgb(230, 230, 230)\",\r\n            borderRadius: \"20px\",\r\n            padding: \"0 0 1rem 0 \",\r\n            position: \"relative\",\r\n          }\r\n    }\r\n  >\r\n    {\r\n      //   state.saveComplete && (\r\n      //   <a\r\n      //     style={{\r\n      //       position: \"absolute\",\r\n      //       top: \"0\",\r\n      //       height: \"100%\",\r\n      //       width: \"100%\",\r\n      //       backdropFilter: \"blur(5px)\",\r\n      //     }}\r\n      //     href={\r\n      //       isTest\r\n      //         ? `https://near.social/#/${authorForWidget}/widget/SayALot_OneArticle?articleId=${state.articleId}&lastEditor=${accountId}&isTest=${isTest}&blockHeight=now`\r\n      //         : `https://near.social/#/${authorForWidget}/widget/SayALot_OneArticle?articleId=${state.articleId}&lastEditor=${accountId}&blockHeight=now`\r\n      //     }\r\n      //   >\r\n      //     <div\r\n      //       style={{\r\n      //         width: \"50%\",\r\n      //         margin: \"0 auto\",\r\n      //         position: \"relative\",\r\n      //         top: \"40vh\",\r\n      //       }}\r\n      //     >\r\n      //       <h3\r\n      //         style={{\r\n      //           textAlign: \"center\",\r\n      //           color: \"black\",\r\n      //           backgroundColor: \"rgb(230, 230, 230)\",\r\n      //           zIndex: \"2\",\r\n      //         }}\r\n      //         className=\"rounded-pill p-3\"\r\n      //       >\r\n      //         Click to continue\r\n      //       </h3>\r\n      //     </div>\r\n      //   </a>\r\n      // )\r\n    }\r\n    <div\r\n      style={{\r\n        margin: \"0 auto\",\r\n        width: \"90%\",\r\n        minWidth: \"360px\",\r\n        backgroundColor: \"white\",\r\n        padding: \"1rem\",\r\n        borderRadius: \"20px\",\r\n      }}\r\n    >\r\n      <h1 className=\"mb-3\"> Create Article</h1>\r\n      <div>\r\n        <div>\r\n          <Widget\r\n            src={\"rubycop.near/widget/NDC.StyledComponents\"}\r\n            props={{\r\n              Button: {\r\n                className: \"primary dark\",\r\n                disable: state.articleId > 0 || state.articleBody > 0,\r\n                text: \"Save article\",\r\n                onClick: saveHandler,\r\n                icon: <i className=\"bi bi-check2\"></i>,\r\n              },\r\n            }}\r\n          />\r\n\r\n          {\r\n            //   <Button\r\n            //   type=\"submit\"\r\n            //   disable={state.articleId > 0 || state.articleBody > 0}\r\n            //   onClick={saveHandler}\r\n            // >\r\n            //   {state.saving && (\r\n            //     <div\r\n            //       className=\"spinner-border text-secondary\"\r\n            //       style={{ height: \"1rem\", width: \"1rem\" }}\r\n            //       role=\"status\"\r\n            //     >\r\n            //       <span className=\"sr-only\" title=\"Loading...\"></span>\r\n            //     </div>\r\n            //   )}\r\n            //   Save Article\r\n            // </Button>\r\n          }\r\n        </div>\r\n        <div className=\"d-flex flex-column pt-3\">\r\n          <label for=\"inputArticleId\">\r\n            Input article id (case-sensitive, without spaces):\r\n          </label>\r\n          <label for=\"inputArticleId\" className=\"small text-danger\">\r\n            {state.errorId}\r\n          </label>\r\n          <Widget\r\n            src={`f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb/widget/fasterTextInput`}\r\n            props={{\r\n              firstText: state.articleId,\r\n              stateUpdate: (obj) => State.update(obj),\r\n              filterText: (e) => e.target.value.replace(/\\s+/g, \"\"),\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"d-flex flex-column pt-3\">\r\n          {!state.saveComplete && (\r\n            <Widget\r\n              src={`${authorForWidget}/widget/TagsEditor`}\r\n              props={{\r\n                initialTagsObject: state.tags,\r\n                placeholder: \"Input tags\",\r\n                setTagsObject: (tags) => {\r\n                  state.tags = tags;\r\n                  State.update();\r\n                },\r\n              }}\r\n            />\r\n          )}\r\n        </div>\r\n        <div className=\"d-flex flex-column pt-3\">\r\n          <label for=\"textareaArticleBody\">\r\n            Input article body (in makrdown format):\r\n          </label>\r\n          <label for=\"textareaArticleBody\" className=\"small text-danger\">\r\n            {state.errorBody}\r\n          </label>\r\n          <div className=\"d-flex gap-2\" style={{ minHeight: \"300px\" }}>\r\n            <div className=\"w-50\">\r\n              <Widget\r\n                src=\"mob.near/widget/MarkdownEditorIframe\"\r\n                props={{\r\n                  initialText: initialBody,\r\n                  onChange: (articleBody) => State.update({ articleBody }),\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"w-50\">\r\n              <Widget\r\n                src=\"mob.near/widget/SocialMarkdown\"\r\n                props={{ text: state.articleBody }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb/widget/NDC.Create", "fact_widget_deployments_id": "346457b2ba2d11337567534815577008", "inserted_timestamp": "2023-08-05T21:17:45.901Z", "modified_timestamp": "2023-08-05T21:17:45.901Z", "__row_index": 20}