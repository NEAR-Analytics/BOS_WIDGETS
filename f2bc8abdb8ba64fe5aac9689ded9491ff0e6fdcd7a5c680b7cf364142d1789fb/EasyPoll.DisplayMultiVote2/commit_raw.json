{"tx_hash": "6t74QCYVuckEkiqpH9qinn36pYsA1woCAaRmzxWVNRS3", "action_id_social": "27zX3dS36NnFY7dnkYeAWeNDMR8u9SS45JrqmwNkYpBo-0-widget", "block_id": 94261506, "block_timestamp": "2023-06-15T20:11:10.416Z", "signer_id": "f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb", "widget_name": "EasyPoll.DisplayMultiVote2", "source_code": "State.init({ currentQuestion: 0 });\n\nconst getFirstSBTToken = () => {\n  const view = Near.view(\"registry.i-am-human.near\", \"sbt_tokens_by_owner\", {\n    account: `${context.accountId}`,\n    issuer: \"fractal.i-am-human.near\",\n  });\n  return view?.[0]?.[1]?.[0];\n};\n\nconst hasSBTTokens = true || getFirstSBTToken() !== undefined;\n\nreturn (\n  <>\n    {props.poll.value.questions.map((question, questionNumber) => {\n      if (state.currentQuestion == questionNumber) {\n        return (\n          <div\n            style={{\n              border: \"1.5px solid rgb(206, 212, 218)\",\n              borderRadius: \"24px\",\n              position: \"relative\",\n            }}\n            className=\"p-3 my-3\"\n          >\n            <div className=\"d-flex\">\n              <p\n                style={{\n                  backgroundColor: \"#353A40\",\n                  padding: \"0.15rem 0.65rem\",\n                  borderRadius: \"9px\",\n                  color: \"white\",\n                }}\n              >\n                {questionNumber + 1}\n              </p>\n              <h4 style={{ fontWeight: \"700\", marginLeft: \"0.8rem\" }}>\n                {question.question}\n              </h4>\n            </div>\n\n            {!props.hasVoted &&\n            (question.questionType == \"0\" || question.questionType == \"1\") ? (\n              <p className=\"mb-1\">Select one option:</p>\n            ) : !props.hasVoted && question.questionType == \"2\" ? (\n              <p className=\"mb-1\">You can check multiple options:</p>\n            ) : (\n              !props.hasVoted && <p className=\"mb-1\">Write your answer:</p>\n            )}\n            {question.questionType != \"3\"\n              ? question.choicesOptions.map((option, optionNumber) => {\n                  return props.renderMultipleChoiceInput({\n                    questionNumber: questionNumber,\n                    questionType: question.questionType,\n                    option,\n                    optionNumber,\n                  });\n                })\n              : props.renderTextInput(questionNumber)}\n          </div>\n        );\n      } else {\n        return <></>;\n      }\n    })}\n\n    {props.poll.value.questions.length > 1 && (\n      <div className=\"d-flex justify-content-between\">\n        {state.currentQuestion > 0 ? (\n          <div\n            className=\"d-flex\"\n            style={{ cursor: \"pointer\" }}\n            onClick={() => {\n              State.update({ currentQuestion: state.currentQuestion - 1 });\n            }}\n          >\n            <i className=\"bi bi-arrow-left\" />\n            <p className=\"m-2\">Previous question</p>\n          </div>\n        ) : (\n          <div style={{ minWidth: \"1px\" }}></div>\n        )}\n        {state.currentQuestion < props.poll.value.questions.length ? (\n          <div\n            className=\"d-flex\"\n            style={{ cursor: \"pointer\" }}\n            onClick={() => {\n              State.update({ currentQuestion: state.currentQuestion + 1 });\n            }}\n          >\n            <p className=\"m-2\">Next question</p>\n            <i className=\"bi bi-arrow-right\" />\n          </div>\n        ) : (\n          <div style={{ minWidth: \"1px\" }}></div>\n        )}\n      </div>\n    )}\n\n    {props.isQuestionOpen ? (\n      props.hasVoted ? (\n        \"\"\n      ) : props.isVoteValid() && hasSBTTokens ? (\n        <CommitButton\n          className=\"w-100\"\n          style={\n            props.state.hoveringElement != \"voteButton\"\n              ? {\n                  marginTop: \"0.5rem\",\n                  padding: \"0.5rem\",\n                  backgroundColor: \"#000000\",\n                  color: \"#FFFFFF\",\n                  fontSize: \"1rem\",\n                  borderRadius: \"9px\",\n                  border: \"1.5px solid transparent\",\n                }\n              : {\n                  marginTop: \"0.5rem\",\n                  padding: \"0.5rem\",\n                  backgroundColor: \"#FFFFFF\",\n                  color: \"#000000\",\n                  fontSize: \"1rem\",\n                  borderRadius: \"9px\",\n                  border: \"1.5px solid #000000\",\n                }\n          }\n          onMouseEnter={() =>\n            props.stateUpdate({ hoveringElement: \"voteButton\" })\n          }\n          onMouseLeave={() => props.stateUpdate({ hoveringElement: \"\" })}\n          data={props.getPublicationParams()}\n        >\n          Vote\n        </CommitButton>\n      ) : (\n        <>\n          {hasSBTTokens ? (\n            <button\n              className=\"w-100\"\n              style={\n                props.state.hoveringElement != \"voteButton\"\n                  ? {\n                      marginTop: \"0.5rem\",\n                      padding: \"0.5rem\",\n                      backgroundColor: \"#000000\",\n                      color: \"#FFFFFF\",\n                      fontSize: \"1rem\",\n                      borderRadius: \"9px\",\n                      border: \"1.5px solid transparent\",\n                    }\n                  : {\n                      marginTop: \"0.5rem\",\n                      padding: \"0.5rem\",\n                      backgroundColor: \"#FFFFFF\",\n                      color: \"#000000\",\n                      fontSize: \"1rem\",\n                      borderRadius: \"9px\",\n                      border: \"1.5px solid #000000\",\n                    }\n              }\n              onMouseEnter={() =>\n                props.stateUpdate({ hoveringElement: \"voteButton\" })\n              }\n              onMouseLeave={() => props.stateUpdate({ hoveringElement: \"\" })}\n              onClick={() => props.stateUpdate({ showErrorsInForm: true })}\n            >\n              Vote\n            </button>\n          ) : (\n            <>\n              <p className=\"p-2\">\n                In order to vote get verified on{\" \"}\n                <a href=\"https://i-am-human.app\">i-am-human.app</a> and get a FV\n                SBT\n              </p>\n            </>\n          )}\n          {props.state.showErrorsInForm && (\n            <span className=\"text-danger\">Please answer all the questions</span>\n          )}\n        </>\n      )\n    ) : (\n      \"\"\n    )}\n    <p\n      style={{\n        fontWeight: \"500\",\n        fontSize: \"1.1rem\",\n        color: \"#767B8E\",\n        letterSpacing: \"-0.02em\",\n        marginTop: \"0.8rem\",\n      }}\n    >\n      {props.validAnswersToThisPoll.length} votes\n    </p>\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb/widget/EasyPoll.DisplayMultiVote2", "fact_widget_deployments_id": "f905144f39a6822d3d2ff839475346c8", "inserted_timestamp": "2000-01-01T00:00:00.000Z", "modified_timestamp": "2000-01-01T00:00:00.000Z", "__row_index": 49}