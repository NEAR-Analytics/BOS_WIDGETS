{"tx_hash": "GH8qKBytQ5uPKFKBs8H3M8fQAB9t1ebVya7dprC6nkHY", "action_id_social": "EfsyRMp1S6V85nYzcEJwfjhUsMpLaYXLZxDWqAVLCvYw-0-widget", "block_id": 104782722, "block_timestamp": "2023-11-02T18:43:44.290Z", "signer_id": "f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb", "widget_name": "CommunityVoice.Create", "source_code": "//CommunityVoice.Create\n\nconst {\n  isTest,\n  addressForArticles,\n  authorForWidget,\n  stateUpdate,\n  initialBody,\n  initialCreateState,\n  editArticleData,\n  callLibs,\n  widgets,\n  handleFilterArticles,\n  handleEditArticle,\n  handlerStateUpdate,\n  sbtWhiteList,\n  sbts,\n  canLoggedUserCreateArticles,\n} = props;\n\nconst libSrcArray = [widgets.libArticle];\n\nconst errTextNoBody = \"ERROR: no article Body\",\n  errTextNoId = \"ERROR: no article Id\",\n  errTextDublicatedId = \"ERROR: there is article with such name\";\n\nState.init({\n  ...initialCreateState,\n  initialBody: props.initialBody ?? \"\",\n  functionsToCallByLibrary: {\n    article: [],\n  },\n});\n\nfunction createStateUpdate(obj) {\n  State.update(obj);\n}\n\nconst tagsArray =\n  editArticleData && !state.tagsModified ? editArticleData.tags : state.tags;\n\nconst accountId = context.accountId;\n\nfunction getRealArticleId() {\n  if (editArticleData) {\n    return (\n      editArticleData.id ??\n      `${editArticleData.author}-${editArticleData.timeCreate}`\n    );\n  } else {\n    return `${accountId}-${Date.now()}`;\n  }\n}\n\nconst getArticleData = () => {\n  const args = {\n    title: editArticleData.title ?? state.title,\n    author: editArticleData.author ?? accountId,\n    lastEditor: accountId,\n    timeLastEdit: Date.now(),\n    timeCreate: editArticleData.timeCreate ?? Date.now(),\n    body: state.articleBody,\n    version: editArticleData ? editArticleData.version + 1 : 0,\n    navigation_id: null,\n    tags: tagsArray,\n    id: getRealArticleId(),\n    sbts,\n  };\n  return args;\n};\n\nfunction onCommit() {\n  State.update({\n    title: \"\",\n    clearArticleId: true,\n    tags: [],\n    clearTags: true,\n    articleBody: \"\",\n    clearArticleBody: true,\n    initalBody: \"\",\n    showCreatedArticle: true,\n    showPreview: false,\n  });\n}\n\nfunction onCancel() {\n  State.update({ createdArticle: undefined });\n}\n\nfunction getInitialMarkdownBody() {\n  if (\n    editArticleData &&\n    (!state.articleBody || state.articleBody === editArticleData.body)\n  ) {\n    return editArticleData.body;\n  } else if (state.articleBody && state.articleBody !== editArticleData.body) {\n    return state.articleBody;\n  } else {\n    return state.initialBody == \"\" || !state.initialBody\n      ? \"Post content (markdown supported)\"\n      : state.initalBody;\n  }\n}\n\nfunction createArticleListener() {\n  //To test without commiting use the next line and comment the rest\n  // onCommit();\n  const article = getArticleData();\n  const newLibsCalls = Object.assign({}, state.functionsToCallByLibrary);\n  newLibsCalls.article.push({\n    functionName: \"createArticle\",\n    key: \"createdArticle\",\n    props: {\n      article,\n      onCommit,\n      onCancel,\n    },\n  });\n\n  State.update({ functionsToCallByLibrary: newLibsCalls });\n}\n\nfunction switchShowPreview() {\n  State.update({\n    showPreview: !state.showPreview,\n    initialBody: state.articleBody,\n  });\n}\n\nconst GeneralContainer = styled.div`\n  background-color: rgb(248, 248, 249);\n`;\n\nconst Button = styled.button` \n  margin: 0px 1rem; \n  display: inline-block; \n  text-align: center; \n  vertical-align: middle; \n  cursor: pointer; \n  user-select: none; \n  transition: color 0.15s ease-in-out,background-color 0.15s ease-in-out,border-color 0.15s ease-in-out,box-shadow 0.15s ease-in-out; \n \n  border: 2px solid transparent; \n  font-weight: 500; \n  padding: 0.3rem 0.5rem; \n  background-color: #010A2D; \n  border-radius: 12px; \n  color: white; \n  text-decoration: none;   \n \n  &:hover { \n    color: #010A2D; \n    background-color: white; \n  } \n`;\n\nconst CreationContainer = styled.div`\n  background-color: rgb(230, 230, 230);\n  border-radius: 20px;\n  padding: 1rem 0;\n  position: relative;\n`;\n\nconst SecondContainer = styled.div`\n  min-width: 360px;\n  background-color: white;\n  padding: 1rem;\n`;\n\nconst BoxShadow = styled.div`\n  box-shadow: rgba(140, 149, 159, 0.1) 0px 4px 28px 0px;\n`;\n\nconst initialTagsObject = {};\n\nArray.isArray(tagsArray) &&\n  tagsArray.forEach((tag) => {\n    initialTagsObject[tag] = true;\n  });\n\nreturn (\n  <div>\n    <GeneralContainer className=\"pt-2 row card-group\">\n      <BoxShadow className=\"rounded-3 p-3 m-3 bg-white col-lg-8 col-md-8 col-sm-12\">\n        {state.createdArticle && state.showCreatedArticle && editArticleData ? (\n          <Widget\n            src={widgets.articleView}\n            props={{\n              widgets,\n              isTest,\n              handleFilterArticles,\n              articleToRenderData: state.createdArticle,\n              authorForWidget,\n              handleEditArticle,\n              callLibs,\n            }}\n          />\n        ) : (\n          <div>\n            <SecondContainer className=\"rounded\">\n              {state.showPreview ? (\n                <Widget\n                  src={widgets.generalCard}\n                  props={{\n                    widgets,\n                    isTest,\n                    data: {\n                      title: state.title,\n                      author: accountId,\n                      lastEditor: accountId,\n                      timeLastEdit: Date.now(),\n                      timeCreate: Date.now(),\n                      body: state.articleBody,\n                      version: 0,\n                      navigation_id: null,\n                      tags: tagsArray,\n                      id: getRealArticleId(),\n                      sbts,\n                    },\n                    addressForArticles,\n                    handleOpenArticle: () => {},\n                    handleFilterArticles: () => {},\n                    authorForWidget,\n                    handleShareButton: () => {},\n                    callLibs,\n                  }}\n                />\n              ) : (\n                <div>\n                  <div className=\"d-flex flex-column pt-3\">\n                    <label for=\"inputArticleId\" className=\"small text-danger\">\n                      {state.errorId}\n                    </label>\n                    <Widget\n                      src={`f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb/widget/fasterTextInput`}\n                      props={{\n                        firstText: state.title,\n                        forceClear: state.clearArticleId,\n                        stateUpdate: (obj) => State.update(obj),\n                        filterText: (e) => e.target.value,\n                        placeholder: \"Post title (case-sensitive)\",\n                        editable: editArticleData,\n                      }}\n                    />\n                  </div>\n                  <div className=\"d-flex flex-column pt-3\">\n                    <label\n                      for=\"textareaArticleBody\"\n                      className=\"small text-danger\"\n                    >\n                      {state.errorBody}\n                    </label>\n                    <div className=\"d-flex gap-2\">\n                      <Widget\n                        src={`f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb/widget/MarkdownEditorIframe`}\n                        props={{\n                          initialText: getInitialMarkdownBody(),\n                          onChange: (articleBody) =>\n                            State.update({\n                              articleBody,\n                              clearArticleBody: false,\n                            }),\n                          clearArticleBody: state.clearArticleBody,\n                        }}\n                      />\n                    </div>\n                  </div>\n                  <div className=\"d-flex flex-column pt-3\">\n                    <Widget\n                      src={`f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb/widget/TagsEditor`}\n                      props={{\n                        forceClear: state.clearTags,\n                        stateUpdate: (obj) => State.update(obj),\n                        initialTagsObject,\n                        placeholder: \"Input tags\",\n                        setTagsObject: (tags) => {\n                          // state.tags = Object.keys(tags);\n                          State.update({\n                            tagsModified: true,\n                            tags: Object.keys(tags),\n                          });\n                        },\n                      }}\n                    />\n                  </div>\n                </div>\n              )}\n              <div className=\"mt-2 d-flex justify-content-end\">\n                <Widget\n                  src={widgets.newStyledComponents.Input.Button}\n                  props={{\n                    className: \"info outline mx-2\",\n                    disabled:\n                      state.title.length === 0 ||\n                      state.articleBody.length === 0,\n                    onClick: switchShowPreview,\n                    children: (\n                      <i\n                        className={`bi ${\n                          state.showPreview ? \"bi-pencil\" : \"bi-eye-fill\"\n                        }`}\n                      ></i>\n                    ),\n                  }}\n                />\n                <Widget\n                  src={widgets.newStyledComponents.Input.Button}\n                  props={{\n                    className: \"info \",\n                    disabled:\n                      state.title.length === 0 ||\n                      state.articleBody.length === 0,\n                    onClick: createArticleListener,\n                    children: (\n                      <div className=\"d-flex justify-conten-center align-items-center\">\n                        <span>{editArticleData ? \"Save edition\" : \"Post\"}</span>\n                        <i className=\"bi bi-check2\"></i>\n                      </div>\n                    ),\n                  }}\n                />\n              </div>\n            </SecondContainer>\n            <div style={{ display: \"none\" }}>\n              {libSrcArray.map((src) => {\n                return callLibs(\n                  src,\n                  createStateUpdate,\n                  state.functionsToCallByLibrary,\n                  { baseAction: \"communityVoiceArticle\" },\n                  \"Create\"\n                );\n              })}\n            </div>\n          </div>\n        )}\n      </BoxShadow>\n    </GeneralContainer>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb/widget/CommunityVoice.Create", "fact_widget_deployments_id": "bfef6bc56aca5de2895d8d3a359f4377", "inserted_timestamp": "2023-11-02T20:39:28.831Z", "modified_timestamp": "2023-11-02T20:39:28.831Z", "__row_index": 1}