{"tx_hash": "AUywQKhuXJ6Q4kPt8wsX8SAmSnKRTqtavZr3W5HVcr1X", "action_id_social": "5PSCeAKq7hpJA8F2tJPL32yJy3wzkzfgqVZ4qE8ET72s-0-widget", "block_id": 90042414, "block_timestamp": "2023-04-20T20:28:25.450Z", "signer_id": "f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb", "widget_name": "WikiOnSocialDB_CreateArticle", "source_code": "const addressForArticles = \"wikiTest\";\nconst authorForWidget =\n  \"f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb\";\nconst accountId = props.accountId ?? context.accountId;\nif (!accountId) {\n  return \"No account ID\";\n}\nconst profile = props.profile ?? Social.getr(`${accountId}/profile`);\nif (profile === null) {\n  return \"Loading\";\n}\nconst initialBody = `# h1 Heading 8-)\n## h2 Heading\n### h3 Heading\n#### h4 Heading\n##### h5 Heading\n###### h6 Heading\n\n\n## Horizontal Rules\n\n___\n\n---\n\n***\n\n\n## Typographic replacements\n\nEnable typographer option to see result.\n\n(c) (C) (r) (R) (tm) (TM) (p) (P) +-\n\ntest.. test... test..... test?..... test!....\n\n!!!!!! ???? ,,  -- ---\n\n\"Smartypants, double quotes\" and 'single quotes'\n\n\n## Emphasis\n\n**This is bold text**\n\n__This is bold text__\n\n*This is italic text*\n\n_This is italic text_\n\n~~Strikethrough~~\n\n\n## Blockquotes\n\n\n> Blockquotes can also be nested...\n>> ...by using additional greater-than signs right next to each other...\n> > > ...or with spaces between arrows.\n\n\n## Lists\n\nUnordered\n\n+ Create a list by starting a line with \\`+\\`, \\`-\\`, or \\`*\\`\n+ Sub-lists are made by indenting 2 spaces:\n  - Marker character change forces new list start:\n    * Ac tristique libero volutpat at\n    + Facilisis in pretium nisl aliquet\n    - Nulla volutpat aliquam velit\n+ Very easy!\n\nOrdered\n\n1. Lorem ipsum dolor sit amet\n2. Consectetur adipiscing elit\n3. Integer molestie lorem at massa\n\n\n1. You can use sequential numbers...\n1. ...or keep all the numbers as \\`1.\\`\n\nStart numbering with offset:\n\n57. foo\n1. bar\n\n\n## Code\n\nInline \\`code\\`\n\nIndented code\n\n    // Some comments\n    line 1 of code\n    line 2 of code\n    line 3 of code\n\n\nBlock code \"fences\"\n\n\\`\\`\\`\nSample text here...\n\\`\\`\\`\n\nSyntax highlighting\n\n\\`\\`\\` js\nvar foo = function (bar) {\n  return bar++;\n};\n\nconsole.log(foo(5));\n\\`\\`\\`\n\n## Tables\n\n| Option | Description |\n| ------ | ----------- |\n| data   | path to data files to supply the data that will be passed into templates. |\n| engine | engine to be used for processing templates. Handlebars is the default. |\n| ext    | extension to be used for dest files. |\n\nRight aligned columns\n\n| Option | Description |\n| ------:| -----------:|\n| data   | path to data files to supply the data that will be passed into templates. |\n| engine | engine to be used for processing templates. Handlebars is the default. |\n| ext    | extension to be used for dest files. |\n\n\n## Links\n\n[link text](http://dev.nodeca.com)\n\n[link with title](http://nodeca.github.io/pica/demo/ \"title text!\")\n\nAutoconverted link https://github.com/nodeca/pica (enable linkify to see)\n\n\n## Images\n\n![Minion](https://octodex.github.com/images/minion.png)\n![Stormtroopocat](https://octodex.github.com/images/stormtroopocat.jpg \"The Stormtroopocat\")\n\nLike links, Images also have a footnote style syntax\n\n![Alt text][id]\n\nWith a reference later in the document defining the URL location:\n\n[id]: https://octodex.github.com/images/dojocat.jpg  \"The Dojocat\"\n\n### [Emojies](https://github.com/markdown-it/markdown-it-emoji)\n\n> Classic markup: :wink: :crush: :cry: :tear: :laughing: :yum:\n>\n> Shortcuts (emoticons): :-) :-( 8-) ;)\n\nsee [how to change output](https://github.com/markdown-it/markdown-it-emoji#change-output) with twemoji.\n\n\n### [Subscript](https://github.com/markdown-it/markdown-it-sub) / [Superscript](https://github.com/markdown-it/markdown-it-sup)\n\n- 19^th^\n- H~2~O\n\n\n### [\\<ins>](https://github.com/markdown-it/markdown-it-ins)\n\n++Inserted text++\n\n\n### [\\<mark>](https://github.com/markdown-it/markdown-it-mark)\n\n==Marked text==\n\n\n### [Footnotes](https://github.com/markdown-it/markdown-it-footnote)\n\nFootnote 1 link[^first].\n\nFootnote 2 link[^second].\n\nInline footnote^[Text of inline footnote] definition.\n\nDuplicated footnote reference[^second].\n\n[^first]: Footnote **can have markup**\n\n    and multiple paragraphs.\n\n[^second]: Footnote text.\n\n\n### [Definition lists](https://github.com/markdown-it/markdown-it-deflist)\n\nTerm 1\n\n:   Definition 1\nwith lazy continuation.\n\nTerm 2 with *inline markup*\n\n:   Definition 2\n\n        { some code, part of Definition 2 }\n\n    Third paragraph of definition 2.\n\n_Compact style:_\n\nTerm 1\n  ~ Definition 1\n\nTerm 2\n  ~ Definition 2a\n  ~ Definition 2b\n`;\n\nconst errTextNoBody = \"ERROR: no article Body\",\n  errTextNoId = \"ERROR: no article Id\",\n  errTextDublicatedId = \"ERROR: there is article with such name\";\n\nconst initialCreateArticleState = {\n  articleId: \"\",\n  articleBody: initialBody,\n  errorId: \"\",\n  errorBody: \"\",\n};\n\nState.init(initialCreateArticleState);\n\nconst getArticleData = () => {\n  const args = {\n    articleId: state.articleId,\n    author: accountId,\n    lastEditor: accountId,\n    timeLastEdit: Date.now(),\n    timeCreate: Date.now(),\n    body: state.articleBody,\n    version: 0,\n    navigation_id: null,\n  };\n  return args;\n};\n\nconst composeData = () => {\n  const data = {\n    wikiTest2Article: {\n      main: JSON.stringify(getArticleData()),\n    },\n    index: {\n      wikiTest2Article: JSON.stringify({\n        key: \"main\",\n        value: {\n          type: \"md\",\n        },\n      }),\n    },\n  };\n  return data;\n};\n\n// === SAVE HANDLER ===\nconst saveHandler = (e) => {\n  State.update({\n    ...state,\n    errorId: \"\",\n    errorBody: \"\",\n  });\n  if (state.articleId && state.articleBody) {\n    // TODO check it automaticle\n    const isArticleIdDublicated = false;\n\n    if (!isArticleIdDublicated) {\n      const newData = composeData();\n      Social.set(newData, { force: true });\n    } else {\n      State.update({\n        ...state,\n        errorId: errTextDublicatedId,\n      });\n    }\n  } else {\n    if (!state.articleId) {\n      State.update({\n        ...state,\n        errorId: errTextNoId,\n      });\n    }\n    if (!state.articleBody) {\n      State.update({ ...state, errorBody: errTextNoBody });\n    }\n  }\n};\n\nconst Button = styled.button`\n  margin: 0px 1rem;\n  display: inline-block;\n  text-align: center;\n  vertical-align: middle;\n  cursor: pointer;\n  user-select: none;\n  transition: color 0.15s ease-in-out,background-color 0.15s ease-in-out,border-color 0.15s ease-in-out,box-shadow 0.15s ease-in-out;\n\n  border: 2px solid transparent;\n  font-weight: 500;\n  padding: 0.3rem 0.5rem;\n  background-color: #010A2D;\n  border-radius: 12px;\n  color: white;\n  text-decoration: none;  \n\n  &:hover {\n    color: #010A2D;\n    background-color: white;\n  }\n`;\n\nreturn (\n  <div\n    className=\"container-fluid\"\n    style={{\n      backgroundColor: \"rgb(230, 230, 230)\",\n      borderRadius: \"20px\",\n      padding: \"0 0 1rem 0 \",\n    }}\n  >\n    <Widget\n      src={`${authorForWidget}/widget/WikiOnSocialDB_MainNavigation`}\n      props={{ currentNavPill: \"create\" }}\n    />\n    <div\n      style={{\n        margin: \"0 auto\",\n        width: \"90%\",\n        minWidth: \"360px\",\n        backgroundColor: \"white\",\n        padding: \"1rem\",\n        borderRadius: \"20px\",\n      }}\n    >\n      <h1 className=\"mb-3\"> Create Article</h1>\n      <div>\n        <div>\n          <Button type=\"submit\" onClick={saveHandler}>\n            Save Article\n          </Button>\n        </div>\n        <div class=\"d-flex flex-column pt-3\">\n          <label for=\"inputArticleId\">\n            Input article id (case-sensitive, without spaces):\n          </label>\n          <label for=\"inputArticleId\" class=\"small text-danger\">\n            {state.errorId}\n          </label>\n          <input\n            className=\"form-control mt-2\"\n            id=\"inputArticleId\"\n            value={state.articleId}\n            onChange={(e) => {\n              State.update({\n                ...state,\n                articleId: e.target.value.replace(/\\s+/g, \"\"),\n              });\n            }}\n          />\n        </div>\n        <div class=\"d-flex flex-column pt-3\">\n          <label for=\"textareaArticleBody\">\n            Input article body (in makrdown format):\n          </label>\n          <label for=\"textareaArticleBody\" class=\"small text-danger\">\n            {state.errorBody}\n          </label>\n          <div className=\"d-flex gap-2\" style={{ minHeight: \"300px\" }}>\n            <div className=\"w-50\">\n              <Widget\n                src=\"mob.near/widget/MarkdownEditorIframe\"\n                props={{\n                  initialText: initialBody,\n                  onChange: (articleBody) => State.update({ articleBody }),\n                }}\n              />\n            </div>\n            <div className=\"w-50\">\n              <Widget\n                src=\"mob.near/widget/SocialMarkdown\"\n                props={{ text: state.articleBody }}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb/widget/WikiOnSocialDB_CreateArticle", "fact_widget_deployments_id": "86dbcd26d3e542acdf21f84fa9306c7a", "inserted_timestamp": "2000-01-01T00:00:00.000Z", "modified_timestamp": "2000-01-01T00:00:00.000Z", "__row_index": 9}