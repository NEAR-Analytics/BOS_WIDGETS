{"tx_hash": "3Na2Ybui1Ge61budvNB6cHznh3JLRCw6TUHfXrgvZBoA", "action_id_social": "AGNCgi4BXqT8o3ssdYteAmNuAwET1V2R8a8DxzLt18sa-0-widget", "block_id": 102089726, "block_timestamp": "2023-09-27T18:31:23.151Z", "signer_id": "f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb", "widget_name": "TagsEditor", "source_code": "const tagsPattern = \"*/profile/tags/*\";\r\nconst placeholder = props.placeholder ?? \"Tags\";\r\nconst initialTagsObject = props.initialTagsObject || {};\r\n\r\nconst tagsOptions = {};\r\n\r\nconst normalizeTag = (tag) =>\r\n  tag\r\n    .replaceAll(/[- \\.]/g, \"_\")\r\n    .replaceAll(/[^\\w]+/g, \"\")\r\n    .replaceAll(/_+/g, \"-\")\r\n    .replace(/^-+/, \"\")\r\n    .replace(/-+$/, \"\")\r\n    .toLowerCase()\r\n    .trim(\"-\");\r\n\r\nconst tagsCount = {};\r\n\r\nconst processTagsObject = (obj) => {\r\n  Object.entries(obj).forEach((kv) => {\r\n    if (typeof kv[1] === \"object\") {\r\n      processTagsObject(kv[1]);\r\n    } else {\r\n      const tag = normalizeTag(kv[0]);\r\n      tagsCount[tag] = (tagsCount[tag] || 0) + 1;\r\n    }\r\n  });\r\n};\r\n\r\nconst getTags = () => {\r\n  processTagsObject(tagsOptions);\r\n  const tags = Object.entries(tagsCount);\r\n  tags.sort((a, b) => b[1] - a[1]);\r\n  return tags.map((t) => ({\r\n    name: t[0],\r\n    count: t[1],\r\n  }));\r\n};\r\n\r\nif (!state.allTags) {\r\n  initState({\r\n    allTags: getTags(),\r\n    tags: Object.keys(initialTagsObject).map((tag) => ({\r\n      name: normalizeTag(tag),\r\n    })),\r\n    originalTags: Object.fromEntries(\r\n      Object.keys(initialTagsObject).map((tag) => [tag, null])\r\n    ),\r\n    id: `tags-selector-${Date.now()}`,\r\n  });\r\n}\r\n\r\nconst setTags = (tags) => {\r\n  props.forceClear && props.stateUpdate({ clearArticleId: false });\r\n  tags = tags.map((o) => {\r\n    o.name = normalizeTag(o.name);\r\n    return o;\r\n  });\r\n  State.update({ tags });\r\n  if (props.setTagsObject) {\r\n    props.setTagsObject(\r\n      Object.assign({}, Object.fromEntries(tags.map((tag) => [tag.name, \"\"])))\r\n    );\r\n  }\r\n};\r\n\r\nreturn (\r\n  <>\r\n    <Typeahead\r\n      id={state.id}\r\n      multiple\r\n      labelKey=\"name\"\r\n      onChange={setTags}\r\n      options={state.allTags}\r\n      placeholder={placeholder}\r\n      selected={state.tags}\r\n      positionFixed\r\n      allowNew\r\n    />\r\n    {props.debug && (\r\n      <div>\r\n        Debugging tags:\r\n        <pre>{JSON.stringify(props.forceClear ? \"\" : state.tags)}</pre>\r\n      </div>\r\n    )}\r\n  </>\r\n);\r\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb/widget/TagsEditor", "fact_widget_deployments_id": "dd7a17b69d9eea52860eab820f605b0d", "inserted_timestamp": "2023-09-27T20:30:11.861Z", "modified_timestamp": "2023-09-27T20:30:11.861Z", "__row_index": 1}