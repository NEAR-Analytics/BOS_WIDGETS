{"tx_hash": "6JDbuJtJrVkk1jVgnj8MYV5NGsf79S2QoCYHQ3HTypWW", "action_id_social": "EPcxUoyP7wQ8Yg73qKJCB2pEdrtLnVcBnCTysRyjrKrp-0-widget", "block_id": 96493768, "block_timestamp": "2023-07-15T01:12:00.494Z", "signer_id": "f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb", "widget_name": "TagsEditor", "source_code": "const tagsPattern = props.tagsPattern ?? \"*/profile/tags/*\";\nconst placeholder = props.placeholder ?? \"Tags\";\nconst initialTagsObject = props.initialTagsObject || {};\n\nconst normalizeTag = (tag) =>\n  tag\n    .replaceAll(/[- \\.]/g, \"_\")\n    .replaceAll(/[^\\w]+/g, \"\")\n    .replaceAll(/_+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\")\n    .toLowerCase()\n    .trim(\"-\");\n\nconst hasModifications =\n  JSON.stringify(Object.keys(initialTagsObject).map(normalizeTag)) !==\n  JSON.stringify(state.tags);\nconsole.log(1, hasModifications);\nconsole.log(2, Object.keys(initialTagsObject).map(normalizeTag));\nconsole.log(3, state.tags);\n\nif (hasModifications) {\n  const tagsObject = Social.keys(tagsPattern, \"final\");\n\n  if (tagsObject === null) {\n    return \"Loading\";\n  }\n\n  const tagsCount = {};\n\n  const processTagsObject = (obj) => {\n    Object.entries(obj).forEach((kv) => {\n      if (typeof kv[1] === \"object\") {\n        processTagsObject(kv[1]);\n      } else {\n        const tag = normalizeTag(kv[0]);\n        tagsCount[tag] = (tagsCount[tag] || 0) + 1;\n      }\n    });\n  };\n\n  const getTags = () => {\n    processTagsObject(tagsObject);\n    const tags = Object.entries(tagsCount);\n    tags.sort((a, b) => b[1] - a[1]);\n    return tags.map((t) => ({\n      name: t[0],\n      count: t[1],\n    }));\n  };\n\n  if (!state.allTags) {\n    initState({\n      allTags: getTags(),\n      tags: Object.keys(initialTagsObject).map((tag) => ({\n        name: normalizeTag(tag),\n      })),\n      originalTags: Object.fromEntries(\n        Object.keys(initialTagsObject).map((tag) => [tag, null])\n      ),\n      id: `tags-selector-${Date.now()}`,\n    });\n  }\n\n  const setTags = (tags) => {\n    tags = tags.map((o) => {\n      o.name = normalizeTag(o.name);\n      return o;\n    });\n    State.update({ tags });\n    if (props.setTagsObject) {\n      props.setTagsObject(\n        Object.assign(\n          {},\n          state.originalTags,\n          Object.fromEntries(tags.map((tag) => [tag.name, \"\"]))\n        )\n      );\n    }\n  };\n}\nreturn (\n  <>\n    <Typeahead\n      id={state.id}\n      multiple\n      labelKey=\"name\"\n      onChange={setTags}\n      options={state.allTags}\n      placeholder={placeholder}\n      selected={state.tags}\n      positionFixed\n      allowNew\n    />\n    {props.debug && (\n      <div>\n        Debugging tags:\n        <pre>{JSON.stringify(state.tags)}</pre>\n      </div>\n    )}\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb/widget/TagsEditor", "fact_widget_deployments_id": "7a0733495085e5f1fbaf120b00f917dc", "inserted_timestamp": "2000-01-01T00:00:00.000Z", "modified_timestamp": "2000-01-01T00:00:00.000Z", "__row_index": 28}