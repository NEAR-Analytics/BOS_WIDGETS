{"tx_hash": "DcX6c4emveu3dLvSkGkxeeChewEZ7ZcDsFrqjKoB3LVC", "action_id_social": "DuLtptBvYKzsbsANpYBrzvW9inT5b56MbqNNHGxwD4YU-0-widget", "block_id": 103079774, "block_timestamp": "2023-10-10T21:40:47.857Z", "signer_id": "f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb", "widget_name": "SayALot.lib.SBT", "source_code": "const { isTest, stateUpdate, libCalls } = props;\r\n\r\nlet resultLibCalls = [];\r\n\r\nfunction isValidUser(props) {\r\n  const { accountId, sbtsNames } = props;\r\n\r\n  const userSBTs = Near.view(\r\n    \"registry.i-am-human.near\",\r\n    \"sbt_tokens_by_owner\",\r\n    {\r\n      account: accountId,\r\n    }\r\n  );\r\n\r\n  const sbtsData = sbtsNames.map((sbt) => {\r\n    const data = sbt.split(\" - class \");\r\n    return { name: data[0], classNumber: data[1] };\r\n  });\r\n\r\n  const sbtsFiltered = userSBTs.filter((sbt) => {\r\n    return sbt[0] === sbtsData[0].name;\r\n  });\r\n\r\n  const result =\r\n    sbtsFiltered[0][1].find((sbt) => {\r\n      return Number(sbt.metadata[\"class\"]) === Number(sbtsData[0].classNumber);\r\n    }) !== undefined;\r\n\r\n  // const result =\r\n  //   userSBTs\r\n  //     .filter((sbt) => {\r\n  //       return sbt[0] === sbtsData[0].name;\r\n  //     })\r\n  //     .find((sbt) => {\r\n  //       return (\r\n  //         Number(sbt[1].metadata[\"class\"]) === Number(sbtsData[0].classNumber)\r\n  //       );\r\n  //     }) !== undefined;\r\n  resultLibCalls = resultLibCalls.filter((call) => {\r\n    return call.functionName !== \"isValidUser\";\r\n  });\r\n\r\n  // return true;\r\n\r\n  return result;\r\n}\r\n\r\nfunction getLoggedUserSbts(props) {\r\n  const { accountId } = props;\r\n  const userSBTs = Near.view(\r\n    \"registry.i-am-human.near\",\r\n    \"sbt_tokens_by_owner\",\r\n    {\r\n      account: accountId,\r\n    }\r\n  );\r\n\r\n  if (userSBTs) {\r\n    resultLibCalls = resultLibCalls.filter((call) => {\r\n      return call.functionName !== \"getLoggedUserSbts\";\r\n    });\r\n  }\r\n\r\n  return userSBTs;\r\n}\r\n\r\nfunction libCall(call) {\r\n  if (call.functionName === \"isValidUser\") {\r\n    return isValidUser(call.props);\r\n  } else if (call.functionName === \"getLoggedUserSbts\") {\r\n    return getLoggedUserSbts(call.props);\r\n  }\r\n}\r\n\r\nif (libCalls && libCalls.length > 0) {\r\n  const updateObj = {};\r\n  resultLibCalls = [...libCalls];\r\n  libCalls.forEach((call) => {\r\n    updateObj[call.key] = libCall(call);\r\n  });\r\n\r\n  updateObj.libCalls = resultLibCalls;\r\n  stateUpdate(updateObj);\r\n}\r\n\r\nreturn <></>;\r\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb/widget/SayALot.lib.SBT", "fact_widget_deployments_id": "668a1fd50628fe59ba2498598a8d7134", "inserted_timestamp": "2023-10-10T23:35:59.980Z", "modified_timestamp": "2023-10-10T23:35:59.980Z", "__row_index": 15}