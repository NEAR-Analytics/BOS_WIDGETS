{"tx_hash": "AVFaJW1pczjgeBbT4ST36sCsmi1N5A5WYzF5bP9RQQJ3", "action_id_social": "3PVqEnz2yaQLzFG5PSrrkFBLfSWn6nSYxgPh7E7iSpu6-0-widget", "block_id": 102179803, "block_timestamp": "2023-09-28T22:50:24.296Z", "signer_id": "f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb", "widget_name": "SayALot.lib.article", "source_code": "const { isTest, stateUpdate, libCalls } = props;\n\n//TODO check if env is still needed since we are not using the whitelist anymore because of the human verification system\n\nconst prodAction = \"sayALotArticle\";\nconst testAction = `test_${prodAction}`;\nconst action = isTest ? testAction : prodAction;\n\nconst userHumanValidations = Near.view(\n  \"registry.i-am-human.near\",\n  \"sbt_tokens_by_owner\",\n  { account: context.accountId }\n);\n\n// const initLibCalls = [\n//   {\n//     functionName: \"get1\",\n//     key: \"test\",\n//     props: {},\n//   },\n//   {\n//     functionName: \"getWritersWhitelist\",\n//     key: \"writersWhitelist\",\n//     props: { env: \"test\" },\n//   },\n// ];\n\n// function getWritersWhitelist(env) {\n//   if (env === \"test\") {\n//     return [\n//       \"silkking.near\",\n//       \"f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb\",\n//       \"blaze.near\",\n//       \"ayelen.near\",\n//       \"kenrou-it.near\",\n//     ];\n//   } else {\n//     return [\n//       \"neardigitalcollective.near\",\n//       \"blaze.near\",\n//       \"jlw.near\",\n//       \"kazanderdad.near\",\n//       \"joep.near\",\n//       \"sarahkornfeld.near\",\n//       \"yuensid.near\",\n//       \"shubham007.near\",\n//       \"fiftycent.near\",\n//       \"ozymandius.near\",\n//       \"chloe.near\",\n//     ];\n//   }\n// }\n\nfunction canUserCreateArticle(props) {\n  const { env, accountId, currentValidator } = props;\n  let isValidUser = false;\n  // console.log(\"userHumanValidations1: \", userHumanValidations);\n\n  for (let i = 0; i < userHumanValidations.length; i++) {\n    if (!isValidUser) {\n      isValidUser = userHumanValidations[i][0] === currentValidator;\n    }\n  }\n\n  return isValidUser;\n  // return getWritersWhitelist(env).includes(accountId);\n}\n\nfunction canUserEditArticle(props) {\n  const { article } = props;\n\n  return article.author === context.accountId;\n}\n\nfunction createArticle(props) {\n  const { article, onCommit, onCancel } = props;\n\n  saveHandler(article, onCommit, onCancel);\n\n  resultLibCalls = resultLibCalls.filter((call) => {\n    return call.functionName !== \"createArticle\";\n  });\n\n  return article;\n}\n\nfunction composeData(article) {\n  let data;\n  data = {\n    [action]: {\n      main: JSON.stringify(article),\n    },\n    index: {\n      [action]: JSON.stringify({\n        key: \"main\",\n        value: {\n          type: \"md\",\n          id: article.realArticleId ?? `${context.accountId}-${Date.now()}`,\n        },\n      }),\n    },\n  };\n\n  // if (tagsArray.length) {\n  //   data.index.tag = JSON.stringify(\n  //     tagsArray.map((tag) => ({\n  //       key: tag,\n  //       value: item,\n  //     }))\n  //   );\n  // }\n\n  return data;\n}\n\nconst saveHandler = (article, onCommit, onCancel) => {\n  if (article.articleId && article.body) {\n    const newData = composeData(article);\n\n    Social.set(newData, {\n      force: true,\n      onCommit,\n      onCancel,\n    });\n    // onCancel: () => {\n    //   State.update({ saving: false });\n    // },\n  }\n};\n\nfunction getArticlesIndexes() {\n  return Social.index(action, \"main\", {\n    order: \"desc\",\n    subscribe: true,\n  });\n}\n\nfunction getArticleBlackListByBlockHeight() {\n  return [\n    91092435, 91092174, 91051228, 91092223, 91051203, 98372095, 96414482,\n    96412953,\n  ];\n}\n\nfunction getArticleBlackListByRealArticleId() {\n  return [\n    \"blaze.near-1690410074090\",\n    \"blaze.near-1690409577184\",\n    \"blaze.near-1690803928696\",\n    \"blaze.near-1690803872147\",\n    \"blaze.near-1690574978421\",\n    \"f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb-1691703303485\",\n    \"f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb-1691702619510\",\n    \"f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb-1691702487944\",\n    \"f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb-1691707918243\",\n    \"f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb-1691707889297\",\n  ];\n}\n\nfunction filterInvalidArticlesIndexes(env, articlesIndexes) {\n  return (\n    articlesIndexes\n      .filter((articleIndex) => articleIndex.value.id) // Has realArticleId\n      .filter(\n        (articleIndex) =>\n          articleIndex.value.id.split(\"-\")[0] === articleIndex.accountId\n      ) // realArticleId begins with same accountId as index object\n      // .filter((articleIndex) =>\n      //   getWritersWhitelist(env).includes(articleIndex.accountId)\n      // ) // Account is in whitelist\n      .filter(\n        (articleIndex) =>\n          !getArticleBlackListByBlockHeight().includes(articleIndex.blockHeight) // Article is not in blacklist\n      )\n      .filter(\n        (articleIndex) =>\n          !getArticleBlackListByRealArticleId().includes(articleIndex.value.id) // Article is not in blacklist\n      )\n  );\n}\n\nfunction getLatestEdits(newFormatArticlesIndexes) {\n  return newFormatArticlesIndexes.filter((articleIndex) => {\n    const latestEditForThisArticle = newFormatArticlesIndexes.find(\n      (newArticleData) => newArticleData.value.id === articleIndex.value.id\n    );\n    return (\n      JSON.stringify(articleIndex) === JSON.stringify(latestEditForThisArticle)\n    );\n  });\n}\n\nfunction getArticle(articleIndex) {\n  const article = Social.get(\n    `${articleIndex.accountId}/${action}/main`,\n    articleIndex.blockHeight\n  );\n  const iAmHumanData = Near.view(\n    \"registry.i-am-human.near\",\n    \"sbt_tokens_by_owner\",\n    {\n      account: articleIndex.accountId,\n    }\n  );\n\n  // console.log(\"iAmHumanData: \", iAmHumanData, article, iAmHumanData.length > 0);\n\n  let articleParsed = undefined;\n  if (article && iAmHumanData.length > 0) {\n    articleParsed = JSON.parse(article);\n    articleParsed.blockHeight = articleIndex.blockHeight;\n    articleParsed.realArticleId = articleIndex.value.id;\n    articleParsed.iAmHumanData = iAmHumanData;\n  }\n\n  if (articleParsed) {\n    return articleParsed;\n  }\n}\n\nfunction getOldArticleBasicDataArray(env) {\n  if (env === \"test\") {\n    return [\n      {\n        accountId:\n          \"f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb\",\n        blockHeight: 97325392,\n      },\n      {\n        accountId:\n          \"f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb\",\n        blockHeight: 97317287,\n      },\n      { accountId: \"ayelen.near\", blockHeight: 96927579 },\n      { accountId: \"kenrou-it.near\", blockHeight: 96924422 },\n      {\n        accountId:\n          \"f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb\",\n        blockHeight: 96879470,\n      },\n      {\n        accountId:\n          \"f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb\",\n        blockHeight: 96878182,\n      },\n      {\n        accountId:\n          \"f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb\",\n        blockHeight: 96643643,\n      },\n      { accountId: \"silkking.near\", blockHeight: 96491128 },\n    ];\n  } else {\n    return [\n      { accountId: \"ozymandius.near\", blockHeight: 97329049 },\n      { accountId: \"fiftycent.near\", blockHeight: 97322138 },\n      { accountId: \"blaze.near\", blockHeight: 97255023 },\n      { accountId: \"jlw.near\", blockHeight: 97250015 },\n      { accountId: \"kazanderdad.near\", blockHeight: 96692435 },\n      // { accountId: \"blaze.near\", blockHeight: 96414482 },\n      // { accountId: \"blaze.near\", blockHeight: 96412953 },\n      { accountId: \"sarahkornfeld.near\", blockHeight: 96402919 },\n      { accountId: \"sarahkornfeld.near\", blockHeight: 96402476 },\n      { accountId: \"sarahkornfeld.near\", blockHeight: 96402330 },\n      { accountId: \"sarahkornfeld.near\", blockHeight: 96401880 },\n      { accountId: \"ozymandius.near\", blockHeight: 95810612 },\n      { accountId: \"blaze.near\", blockHeight: 95766756 },\n      { accountId: \"blaze.near\", blockHeight: 95766700 },\n      { accountId: \"jlw.near\", blockHeight: 95705034 },\n      { accountId: \"blaze.near\", blockHeight: 95413943 },\n      { accountId: \"blaze.near\", blockHeight: 94936576 },\n      { accountId: \"yuensid.near\", blockHeight: 94866690 },\n      { accountId: \"sarahkornfeld.near\", blockHeight: 94863580 },\n      { accountId: \"blaze.near\", blockHeight: 94801223 },\n      { accountId: \"sarahkornfeld.near\", blockHeight: 94344236 },\n      { accountId: \"sarahkornfeld.near\", blockHeight: 94188387 },\n      { accountId: \"jlw.near\", blockHeight: 93986868 },\n      { accountId: \"blaze.near\", blockHeight: 92999498 },\n    ];\n  }\n}\n\nfunction getNewFormatValidArticles(env, filterBy) {\n  const articlesIndexes = getArticlesIndexes(filterBy);\n\n  const validArticlesIndexes = filterInvalidArticlesIndexes(\n    env,\n    articlesIndexes\n  );\n\n  const validLatestEdits = getLatestEdits(validArticlesIndexes);\n\n  return validLatestEdits.map(getArticle);\n}\n\nfunction getOldFormatArticles(env) {\n  const oldBasicDataArray = getOldArticleBasicDataArray(env);\n  return oldBasicDataArray.map(getArticle);\n}\n\nfunction getLastEditArticles(props) {\n  const { env, filterBy } = props;\n  const oldFormatArticles = getOldFormatArticles(env);\n  const newFormatArticles = getNewFormatValidArticles(env, filterBy);\n\n  console.log(\"newFormatArticles: \", newFormatArticles);\n\n  const finalOldFormatArticles = oldFormatArticles.filter(\n    (oldFormatArticle) => {\n      return !newFormatArticles.find(\n        (newFormatArticle) =>\n          newFormatArticle.articleId === oldFormatArticle.articleId\n      );\n    }\n  );\n\n  console.log(\"finalOldFormatArticles: \", finalOldFormatArticles);\n\n  const lastEditionArticles = newFormatArticles.concat(finalOldFormatArticles);\n\n  console.log(\"lastEditionArticles: \", lastEditionArticles);\n\n  const validFormatLastEditionArticles =\n    convertArticlesTagsToValidFormat(lastEditionArticles);\n\n  const validFormatFilteredArticles = filterArticles(\n    filterBy,\n    validFormatLastEditionArticles\n  );\n\n  console.log(\"validFormatFilteredArticles: \", validFormatFilteredArticles);\n\n  return validFormatFilteredArticles;\n}\n\nfunction convertArticlesTagsToValidFormat(articlesArray) {\n  let validFormatArticlesArray = [];\n  articlesArray.map((article) => {\n    if (article) {\n      let tags = article.tags;\n\n      if (tags && !tags.length && tags + \"\" != \"0\") {\n        tags = Object.keys(tags);\n      }\n      article.tags = tags;\n\n      validFormatArticlesArray.push(article);\n    }\n  });\n  return validFormatArticlesArray;\n}\n\nfunction filterArticlesByTag(tag, articles) {\n  return articles.filter((article) => {\n    return article.tags.includes(tag);\n  });\n}\n\nfunction filterArticlesByAuthor(author, articles) {\n  return articles.filter((article) => {\n    return article.author === author;\n  });\n}\n\nfunction filterArticles(filterBy, articles) {\n  let filteredArticles;\n\n  if (filterBy.parameterName == \"tag\") {\n    filteredArticles = filterArticlesByTag(filterBy.parameterValue, articles);\n  } else if (filterBy.parameterName == \"author\") {\n    filteredArticles = filterArticlesByAuthor(\n      filterBy.parameterValue,\n      articles\n    );\n  } else {\n    filteredArticles = articles;\n  }\n\n  return filteredArticles;\n}\n\nfunction libCall(call) {\n  if (call.functionName === \"canUserCreateArticle\") {\n    return canUserCreateArticle(call.props);\n  } else if (call.functionName === \"createArticle\") {\n    return createArticle(call.props);\n  } else if (call.functionName === \"canUserEditArticle\") {\n    return canUserEditArticle(call.props);\n  } else if (call.functionName === \"getLastEditArticles\") {\n    return getLastEditArticles(call.props);\n  }\n}\n\nfunction getComments(args) {\n  const { realArticleId } = args;\n  const key = realArticleId;\n  return Social.index(action, key);\n}\n\nfunction setComment(args) {\n  const { realArticleId, text, previousCommentId } = args;\n  const data = {\n    index: {\n      [action]: JSON.stringify({\n        key: realArticleId,\n        value: {\n          text,\n          id: `${realArticleId}-${Date.now()}`,\n          previousCommentId,\n        },\n      }),\n    },\n  };\n  Social.set(data);\n\n  resultLibCalls = resultLibCalls.filter((call) => {\n    return call.functionName !== \"setComment\";\n  });\n\n  return text;\n}\n\nlet resultLibCalls = [];\n\nif (libCalls && libCalls.length > 0) {\n  const updateObj = {};\n  resultLibCalls = [...libCalls];\n  libCalls.forEach((call) => {\n    updateObj[call.key] = libCall(call);\n  });\n\n  updateObj.libCalls = resultLibCalls;\n  stateUpdate(updateObj);\n}\n\n// console.log(\"userHumanValidations0: \", userHumanValidations);\n\nreturn <></>;\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb/widget/SayALot.lib.article", "fact_widget_deployments_id": "c3b4c999fa62253c0af4963243acd813", "inserted_timestamp": "2023-09-29T00:44:04.972Z", "modified_timestamp": "2023-09-29T00:44:04.972Z", "__row_index": 26}