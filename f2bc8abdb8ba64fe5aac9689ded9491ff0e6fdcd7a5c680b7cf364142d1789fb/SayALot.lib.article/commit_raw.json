{"tx_hash": "FeP6VqbwxEYYT8cwWzGmufSerPYDTChMXjruRGa9BtQR", "action_id_social": "6zFQgkNLkKyHNFKpkZXbRFEzU1Cbb8Wf5WLfPwaRdbY7-0-widget", "block_id": 98521378, "block_timestamp": "2023-08-10T22:34:28.310Z", "signer_id": "f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb", "widget_name": "SayALot.lib.article", "source_code": "const { isTest, stateUpdate, libCalls } = props;\n\nconst prodAction = \"sayALotArticle\";\nconst testAction = `test_${prodAction}`;\nconst action = isTest ? testAction : prodAction;\n\n// const initLibCalls = [\n//   {\n//     functionName: \"get1\",\n//     key: \"test\",\n//     props: {},\n//   },\n//   {\n//     functionName: \"getWritersWhitelist\",\n//     key: \"writersWhitelist\",\n//     props: { env: \"test\" },\n//   },\n// ];\n\nfunction getWritersWhitelist(env) {\n  if (env === \"test\") {\n    return [\n      \"silkking.near\",\n      \"f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb\",\n      \"blaze.near\",\n      \"ayelen.near\",\n      \"kenrou-it.near\",\n    ];\n  } else {\n    return [\n      \"neardigitalcollective.near\",\n      \"blaze.near\",\n      \"jlw.near\",\n      \"kazanderdad.near\",\n      \"joep.near\",\n      \"sarahkornfeld.near\",\n      \"yuensid.near\",\n      \"shubham007.near\",\n      \"fiftycent.near\",\n      \"ozymandius.near\",\n      \"chloe.near\",\n    ];\n  }\n}\n\nfunction canUserCreateArticle(props) {\n  const { env, accountId } = props;\n  return getWritersWhitelist(env).includes(accountId);\n}\n\nfunction canUserEditArticle(props) {\n  const { article, accountId } = props;\n  return false;\n}\n\nfunction createArticle(props) {\n  const { article } = props;\n  console.log(\"in CreateArticle\");\n\n  saveHandler(article);\n\n  resultLibCalls = resultLibCalls.filter((call) => {\n    return call.functionName !== \"createArticle\";\n  });\n\n  return article;\n}\n\nfunction composeData(article) {\n  let data;\n  data = {\n    [action]: {\n      main: JSON.stringify(article),\n    },\n    index: {\n      [action]: JSON.stringify({\n        key: \"main\",\n        value: {\n          type: \"md\",\n          id: `${context.accountId}-${Date.now()}`,\n        },\n      }),\n    },\n  };\n\n  // if (tagsArray.length) {\n  //   data.index.tag = JSON.stringify(\n  //     tagsArray.map((tag) => ({\n  //       key: tag,\n  //       value: item,\n  //     }))\n  //   );\n  // }\n\n  return data;\n}\n\nconst saveHandler = (article) => {\n  if (article.articleId && article.articleBody) {\n    const newData = composeData(article);\n    console.log(\"set\");\n\n    Social.set(newData, {\n      force: true,\n      // onCancel: () => {\n      //   State.update({ saving: false });\n      // },\n    });\n  }\n};\n\nfunction getArticlesIndexes(props) {\n  const { accountId } = props;\n  return Social.index(action, \"main\", {\n    order: \"desc\",\n    accountId,\n  });\n}\n\nfunction getArticleBlackListByBlockHeight() {\n  return [\n    91092435, 91092174, 91051228, 91092223, 91051203, 98372095, 96414482,\n    96412953,\n  ];\n}\n\nfunction getArticleBlackListByRealArticleId() {\n  return [\n    \"blaze.near-1690410074090\",\n    \"blaze.near-1690409577184\",\n    \"blaze.near-1690803928696\",\n    \"blaze.near-1690803872147\",\n    \"blaze.near-1690574978421\",\n    \"f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb-1691703303485\",\n    \"f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb-1691702619510\",\n    \"f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb-1691702487944\",\n  ];\n}\n\nfunction filterInvalidArticlesIndexes(props, articlesIndexes) {\n  const { env } = props;\n\n  return articlesIndexes\n    .filter((articleIndex) => articleIndex.value.id) // Has realArticleId\n    .filter(\n      (articleIndex) =>\n        articleIndex.value.id.split(\"-\")[0] === articleIndex.accountId\n    ) // realArticleId begins with same accountId as index object\n    .filter((articleIndex) =>\n      getWritersWhitelist(env).includes(articleIndex.accountId)\n    ) // Account is in whitelist\n    .filter(\n      (articleIndex) =>\n        !getArticleBlackListByBlockHeight().includes(articleIndex.blockHeight) // Article is not in blacklist\n    )\n    .filter(\n      (articleIndex) =>\n        !getArticleBlackListByRealArticleId().includes(articleIndex.value.id) // Article is not in blacklist\n    );\n}\n\nfunction getLatestEdits(newFormatArticlesIndexes) {\n  return newFormatArticlesIndexes.filter((articleIndex) => {\n    const latestEditForThisArticle = newFormatArticlesIndexes.find(\n      (newArticleData) => newArticleData.value.id === articleIndex.value.id\n    );\n    return (\n      JSON.stringify(articleIndex) === JSON.stringify(latestEditForThisArticle)\n    );\n  });\n}\n\nfunction getArticle(articleIndex) {\n  const article = Social.get(\n    `${articleIndex.accountId}/${action}/main`,\n    articleIndex.blockHeight\n  );\n\n  let articleParsed = undefined;\n  if (article) {\n    articleParsed = JSON.parse(article);\n    articleParsed.blockHeight = articleIndex.blockHeight;\n    articleParsed.realArticleId = articleIndex.value.id;\n  }\n\n  return articleParsed;\n}\n\nfunction getOldArticleBasicDataArray(props) {\n  const { env } = props;\n  if (env === \"test\") {\n    return [\n      {\n        accountId:\n          \"f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb\",\n        blockHeight: 97325392,\n      },\n      {\n        accountId:\n          \"f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb\",\n        blockHeight: 97317287,\n      },\n      { accountId: \"ayelen.near\", blockHeight: 96927579 },\n      { accountId: \"kenrou-it.near\", blockHeight: 96924422 },\n      {\n        accountId:\n          \"f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb\",\n        blockHeight: 96879470,\n      },\n      {\n        accountId:\n          \"f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb\",\n        blockHeight: 96878182,\n      },\n      {\n        accountId:\n          \"f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb\",\n        blockHeight: 96643643,\n      },\n      { accountId: \"silkking.near\", blockHeight: 96491128 },\n    ];\n  } else {\n    return [\n      { accountId: \"ozymandius.near\", blockHeight: 97329049 },\n      { accountId: \"fiftycent.near\", blockHeight: 97322138 },\n      { accountId: \"blaze.near\", blockHeight: 97255023 },\n      { accountId: \"jlw.near\", blockHeight: 97250015 },\n      { accountId: \"kazanderdad.near\", blockHeight: 96692435 },\n      // { accountId: \"blaze.near\", blockHeight: 96414482 },\n      // { accountId: \"blaze.near\", blockHeight: 96412953 },\n      { accountId: \"sarahkornfeld.near\", blockHeight: 96402919 },\n      { accountId: \"sarahkornfeld.near\", blockHeight: 96402476 },\n      { accountId: \"sarahkornfeld.near\", blockHeight: 96402330 },\n      { accountId: \"sarahkornfeld.near\", blockHeight: 96401880 },\n      { accountId: \"ozymandius.near\", blockHeight: 95810612 },\n      { accountId: \"blaze.near\", blockHeight: 95766756 },\n      { accountId: \"blaze.near\", blockHeight: 95766700 },\n      { accountId: \"jlw.near\", blockHeight: 95705034 },\n      { accountId: \"blaze.near\", blockHeight: 95413943 },\n      { accountId: \"blaze.near\", blockHeight: 94936576 },\n      { accountId: \"yuensid.near\", blockHeight: 94866690 },\n      { accountId: \"sarahkornfeld.near\", blockHeight: 94863580 },\n      { accountId: \"blaze.near\", blockHeight: 94801223 },\n      { accountId: \"sarahkornfeld.near\", blockHeight: 94344236 },\n      { accountId: \"sarahkornfeld.near\", blockHeight: 94188387 },\n      { accountId: \"jlw.near\", blockHeight: 93986868 },\n      { accountId: \"blaze.near\", blockHeight: 92999498 },\n    ];\n  }\n}\n\nfunction getNewFormatValidArticles(props) {\n  const articlesIndexes = getArticlesIndexes(props);\n  const validArticlesIndexes = filterInvalidArticlesIndexes(\n    props,\n    articlesIndexes\n  );\n  const validLatestEdits = getLatestEdits(validArticlesIndexes);\n  return validLatestEdits.map(getArticle);\n}\n\nfunction getOldFormatArticles(props) {\n  const oldBasicDataArray = getOldArticleBasicDataArray(props);\n  return oldBasicDataArray.map(getArticle);\n}\n\nfunction getLastEditArticles(props) {\n  const oldFormatArticles = getOldFormatArticles(props);\n  const newFormatArticles = getNewFormatValidArticles(props);\n\n  const finalOldFormatArticles = oldFormatArticles.filter(\n    (oldFormatArticle) => {\n      return !newFormatArticles.find(\n        (newFormatArticle) =>\n          newFormatArticle.articleId === oldFormatArticle.articleId\n      );\n    }\n  );\n\n  const lastEditionArticles = newFormatArticles.concat(finalOldFormatArticles);\n  const filteredArticles = filterArticles(props, lastEditionArticles);\n\n  return filteredArticles;\n}\n\nfunction filterArticlesByTag(props, articles) {\n  const { tag } = props;\n  if (!tag) return articles;\n\n  return articles.filter((article) => {\n    return article.tags.includes(tag);\n  });\n}\n\nfunction filterArticles(props, articles) {\n  const byTag = filterArticlesByTag(props, articles);\n\n  return byTag;\n}\n\nfunction libCall(call) {\n  if (call.functionName === \"canUserCreateArticle\") {\n    return canUserCreateArticle(call.props);\n  } else if (call.functionName === \"createArticle\") {\n    console.log(\"call CreateArticle\");\n    return createArticle(call.props);\n  } else if (call.functionName === \"canUserEditArticle\") {\n    return canUserEditArticle(call.props);\n  } else if (call.functionName === \"getLastEditArticles\") {\n    return getLastEditArticles(call.props);\n  }\n}\n\nfunction getComments(args) {\n  const { realArticleId } = args;\n  const key = realArticleId;\n  return Social.index(action, key);\n}\n\nfunction setComment(args) {\n  const { realArticleId, text, previousCommentId } = args;\n  const data = {\n    index: {\n      [action]: JSON.stringify({\n        key: realArticleId,\n        value: {\n          text,\n          id: `${realArticleId}-${Date.now()}`,\n          previousCommentId,\n        },\n      }),\n    },\n  };\n  Social.set(data);\n\n  resultLibCalls = resultLibCalls.filter((call) => {\n    return call.functionName !== \"setComment\";\n  });\n\n  return text;\n}\n\nif (libCalls && libCalls.length > 0) {\n  const updateObj = {};\n  const resultLibCalls = [...libCalls];\n  libCalls.forEach((call) => {\n    updateObj[call.key] = libCall(call);\n  });\n\n  updateObj.libCalls = resultLibCalls;\n  stateUpdate(updateObj);\n}\n\nreturn <></>;\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb/widget/SayALot.lib.article", "fact_widget_deployments_id": "5fea676a609ba67617115338a8abcd68", "inserted_timestamp": "2023-08-10T23:44:09.239Z", "modified_timestamp": "2023-08-10T23:44:09.239Z", "__row_index": 27}