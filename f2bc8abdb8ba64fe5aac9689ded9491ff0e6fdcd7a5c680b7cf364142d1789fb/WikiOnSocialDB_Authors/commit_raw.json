{"tx_hash": "6NavuHagVHH1mZyRThR5s3o2T5Suo3wNY6usimgvhVPo", "action_id_social": "H9pNvC9u7XabBdEzAxMoEkjVCch3gDo1zJCwETayBKAY-0-widget", "block_id": 90041658, "block_timestamp": "2023-04-20T20:13:46.044Z", "signer_id": "f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb", "widget_name": "WikiOnSocialDB_Authors", "source_code": "const addressForArticles = \"wikiTest2Article\";\nconst authorForWidget =\n  \"f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb\";\nconst writersWhiteList = [\"testwiki.near\", \"eugenewolf507.near\"];\n\n// ========== GET INDEX ARRAY FOR ARTICLES ==========\nconst postsIndex = Social.index(addressForArticles, \"main\", {\n  order: \"desc\",\n  accountId: undefined,\n});\n// ========== GET ALL ARTICLES ==========\nconst resultArticles =\n  postsIndex &&\n  postsIndex.reduce((acc, { accountId, blockHeight }) => {\n    const postData = Social.get(\n      `${accountId}/${addressForArticles}/main`,\n      blockHeight\n    );\n    return [...acc, JSON.parse(postData)];\n  }, []);\n// .filter((article) =>\n//   writersWhiteList.some((addr) => addr === article.author)\n// );\n// ========== FILTER DUBLICATES ==========\nconst filteredArticles =\n  resultArticles.length &&\n  resultArticles.reduce((acc, article) => {\n    if (!acc.some(({ articleId }) => articleId === article.articleId)) {\n      return [...acc, article];\n    } else {\n      return acc;\n    }\n  }, []);\n\nconst authors =\n  filteredArticles.length &&\n  Array.from(filteredArticles, ({ author }) => author);\n// const uniqAuthors = Array.from(new Set(authors));\n\nconst getAuthorsStats = (acc, author) => {\n  if (!acc.hasOwnProperty(author)) {\n    acc[author] = 0;\n  }\n  acc[author] += 1;\n  return acc;\n};\n\nconst countAuthors = (arr) => arr.reduce(getAuthorsStats, {});\n\nconst authorsCountObject = filteredArticles.length && countAuthors(authors);\n\nconst authorsCountArray =\n  filteredArticles.length && Object.entries(authorsCountObject);\n\nreturn (\n  <div\n    className=\"container-fluid\"\n    style={{\n      backgroundColor: \"rgb(230, 230, 230)\",\n      borderRadius: \"20px\",\n      padding: \"0\",\n    }}\n  >\n    <Widget\n      src={`${authorForWidget}/widget/WikiOnSocialDB_MainNavigation`}\n      props={{ currentNavPill: \"authors\" }}\n    />\n    <div style={{ margin: \"0 auto\", width: \"90%\", minWidth: \"360px\" }}>\n      <h6>Total authors: {authorsCountArray.length}</h6>\n\n      <div className=\"row card-group py-3\">\n        {authorsCountArray &&\n          authorsCountArray.map(([author, quantity]) => (\n            <div className=\"col-sm-12 col-lg-6 col-xl-4 gy-3\">\n              <div className=\"card h-100 p-3\" key={article.articleId}>\n                <Widget\n                  src=\"mob.near/widget/Profile.ShortInlineBlock\"\n                  props={{ accountId: author, tooltip: true }}\n                />\n                <a\n                  className=\"text-start mt-3\"\n                  href={`#/${authorForWidget}/widget/WikiOnSocialDB_ArticlesByAuthor?author=${author}`}\n                >\n                  {quantity} articles\n                </a>\n              </div>\n            </div>\n          ))}\n      </div>\n    </div>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb/widget/WikiOnSocialDB_Authors", "fact_widget_deployments_id": "dd437f08f0e1f0fd9d90f4b15b404ff3", "inserted_timestamp": "2000-01-01T00:00:00.000Z", "modified_timestamp": "2000-01-01T00:00:00.000Z", "__row_index": 23}