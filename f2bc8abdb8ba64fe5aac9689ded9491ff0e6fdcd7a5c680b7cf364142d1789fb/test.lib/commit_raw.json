{"tx_hash": "CbRpKA85qKbyvjb2CvdJMeJxj7m2ZJ4y9SfzF2rbRLA9", "action_id_social": "6W9PF1xNqq9SBJ5319bcgymy8xhe7av5gf5JNfrhRJNE-0-widget", "block_id": 99120617, "block_timestamp": "2023-08-18T22:30:59.869Z", "signer_id": "f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb", "widget_name": "test.lib", "source_code": "const { stateUpdate, libCalls } = props;\r\n\r\nconst testAction = `test_librery`;\r\n\r\nfunction testSubscribe() {\r\n  // const { realArticleId, createdInteraction } = props;\r\n\r\n  const allVotes = Social.index(testAction, \"test\", {\r\n    order: \"desc\",\r\n    subscribe: true,\r\n  });\r\n\r\n  return allVotes;\r\n}\r\n\r\nfunction addTest() {\r\n  Social.set({\r\n    index: {\r\n      [testAction]: JSON.stringify({\r\n        key: \"test\",\r\n        value: {\r\n          date: Date.now(),\r\n        },\r\n      }),\r\n    },\r\n  });\r\n}\r\n\r\nfunction libCall(call) {\r\n  if (call.functionName === \"testSubscribe\") {\r\n    return testSubscribe(call.props);\r\n  } else if (call.functionName === \"addTest\") {\r\n    return addTest(call.props);\r\n  }\r\n}\r\n\r\nlet resultLibCalls = [];\r\nif (libCalls && libCalls.length > 0) {\r\n  // console.log(\r\n  //   \"Calling functions\",\r\n  //   libCalls.map((lc) => lc.functionName)\r\n  // );\r\n  const updateObj = {};\r\n  resultLibCalls = [...libCalls];\r\n  libCalls.forEach((call) => {\r\n    updateObj[call.key] = libCall(call);\r\n  });\r\n\r\n  updateObj.libCalls = resultLibCalls;\r\n  stateUpdate(updateObj);\r\n}\r\n\r\nreturn <></>;\r\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb/widget/test.lib", "fact_widget_deployments_id": "e3ae7fe9efa56fc3ef3ae6ef76f95a15", "inserted_timestamp": "2023-08-19T00:27:48.478Z", "modified_timestamp": "2023-08-19T00:27:48.478Z", "__row_index": 0}