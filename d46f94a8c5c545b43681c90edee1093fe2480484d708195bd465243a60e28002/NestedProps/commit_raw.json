{"tx_hash": "7YnUzThJMPhDkBBGdjGFyYpqr8xYQSdQgNkLUpWE2WYe", "action_id_social": "2KxFHhUcEEMg6Hu5eX48xpbnD1J2NqexhyUgK1pLHXtc-0-widget", "block_id": 106038378, "block_timestamp": "2023-11-19T07:24:46.172Z", "signer_id": "d46f94a8c5c545b43681c90edee1093fe2480484d708195bd465243a60e28002", "widget_name": "NestedProps", "source_code": "const Page = styled.div`\n    position: relative;\n    height:100vh;\n    width: 100vw;\n`;\n\nconst Button = styled.button`\n    position: absolute;\n    top:82%;\n    left:46%;\n    transform: translate(-50%,-50%);\n    background-color: #9370DB;\n    color : black;\n    font-size: 10px;\n    margin: 1em;\n\n    border:none ;\n    border-radius: 10px;\n    height:6vh;\n    width:30vw;\n    text-align: center;\n    font-weight:bold;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 15px;\n    font-weight: 750;\n    div{\n        margin-left:0.2rem;\n    }\n\n`;\nconst Encadre = styled.div`\nposition: absolute;\n    top:50%;\n    left:50%;\n    transform: translate(-50%,-50%);\n    height:45vh;\n    width:40vw;\n    border: none;\n    border-radius: 10px;\n    box-shadow: 5px 10px 180px #9370DB, 5px 10px 180px #DDA0DD;\n`;\nconst Transfer = styled.div`\nposition: absolute;\n    left:9%;\n    top:6%;\n    font-size:15px;\n    font-weight:bold;\n\n`;\nconst Es = styled.div`\nposition: absolute;\n    left:9%;\n    top:15%;\n    font-size:9px;\n`;\nconst Cadrehaut = styled.div`\nposition: absolute;\n    top:0%;\n    left:0%;\n    height:8vh;\n    width:100vw;\n    border: none;\n    border-radius: 10px;\n    box-shadow: 5px 10px 180px #9370DB, 5px 10px 180px #DDA0DD;\n    position: relative;\n    & .transfert{\n      position: absolute;\n      top:30%;\n      left:25%;\n      font-size:13px;\n    }\n    & .Withdraw{\n      position: absolute;\n      top:30%;\n      left:43%;\n      font-size:13px;\n    }\n    & .Litepaper{\n      position: absolute;\n      top:30%;\n      left:65%;\n      font-size:13px;\n    }\n`;\nconst From = styled.input`\n    position: absolute;\n    top:35%;\n    left:50%;\n    transform: translate(-50%,-50%);\n    height:7vh;\n    width:33vw;\n    border: none;\n    border-radius: 10px;\n    background-color: #e7e7e7;\n    font-size: 15px;\n    padding-left: 20px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-weight: 500; \n`;\nconst To = styled.input`\n    position: absolute;\n    top:62%;\n    left:50%;\n    transform: translate(-50%,-50%);\n    height:7vh;\n    width:33vw;\n    border: none;\n    border-radius: 10px;\n    background-color: #e7e7e7;\n    font-size: 15px;\n    padding-left: 20px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n \n`;\n\nconst TxHash = styled.div`\n    position: absolute;\n    top:72%;\n    left:50%;\n    transform: translate(-50%,-50%);\n    font-size:12px;\n    color:gray;\n`;\nconst Tx = styled.div`\n    position: absolute;\n    top:76%;\n    left:50%;\n    transform: translate(-50%,-50%);\n    font-size:10px;\n    color:gray;\n`;\nconst Quote = styled.div`\n    position: absolute;\n    top:62%;\n    left:20%;\n    transform: translate(-50%,-50%);\n    font-size:15px;\n    font-weight: 500; \n`;\nconst Matic = styled.div`\n    position: absolute;\n    top:35%;\n    left:80%;\n    transform: translate(-50%,-50%);\n    font-size:15px;\n`;\nconst Eth = styled.div`\n    position: absolute;\n    top:60%;\n    left:50%;\n    transform: translate(-50%,-50%);\n    font-size:15px;\n`;\nconst ZkAdd = styled.div`\n    position: absolute;\n    top:70%;\n    left:50%;\n    transform: translate(-50%,-50%);\n    font-size:8px;\n    color:gray;\n`;\nconst Arrow = styled.div`\n    position: absolute;\n    top:50%;\n    left:50%;\n    transform: translate(-50%,-50%);\n    font-size:15px;\n`;\n\nconst DropdownContainer = styled.div`\n  position: relative;\n  display: inline-block;\n  position: absolute;\n    top:35%;\n    left:77%;\n    transform: translate(-50%,-50%);\n`;\n\nconst DropdownButton = styled.button`\n  background-color: #9370DB;\n  color: white;\n  padding: 10px;\n  border: none;\n  cursor: pointer; \n  color : black;\n    font-size: 10px;\n    border:none ;\n    border-radius: 10px;\n    height:5vh;\n    width:10vw;\n    font-weight:bold;\n\n`;\n\nconst DropdownContent = styled.div`\n  display: ${(props) => (props.isOpen ? \"block\" : \"none\")};\n  position: absolute;\n  background-color: #f9f9f9;\n  min-width: 160px;\n  box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\n  z-index: 1;\n`;\n\nconst DropdownItem = styled.a`\n  color: black;\n  padding: 12px 16px;\n  text-decoration: none;\n  display: block;\n\n  &:hover {\n    background-color: #f1f1f1;\n  }\n`;\n\nconst Connect = styled.button`\n  position: absolute;\n    top:50%;\n    left:85%;\n    transform: translate(-50%,-50%);\n    background: transparent;\n  border: none;\n  cursor: pointer; \n  color : black;\n    font-size: 10px;\n    border:none ;\n    border-radius: 10px;\n    font-weight:bold;\n\n`;\nconst Web3Cointainer = styled.div`\n position: absolute;\n    top:50%;\n    left:85%;\n`;\n\nasync function swap() {\n  setSuccess(false);\n  setLoading(true);\n  asyncFetch(\"http://localhost:3001/swap\").then((res) => {\n    setData(res);\n    setLoading(false);\n    setSuccess(true);\n  });\n}\nasync function quote() {\n  asyncFetch(\"http://localhost:3001/quote\").then((res) => {\n    setInputValue(res);\n  });\n}\n\nasync function exchange() {\n  setText(\"Bridging...\");\n  setTimeout(() => {\n    setText(\"Bridge Complete\");\n    setTimeout(() => {\n      setText(\"Swapping...\");\n      setTimeout(() => {\n        setText(\"Swapping Complete\");\n        setTimeout(() => {\n          setText(\"Depositing on Zk Address...\");\n          setTimeout(() => {\n            setText(\"Deposit Complete\");\n            setZk(\n              \"LuN2sKumiqAr1ZpCW9LrtRbw9T7SdRFHqkjXFPZGHMXXHsd6KW8nS69csrkWkLn\"\n            );\n          }, 4000);\n        }, 2000);\n      }, 4000);\n    }, 2000);\n  }, 4000);\n}\n\nconst [loading, setLoading] = useState(false);\nconst [data, setData] = useState(null);\nconst [success, setSuccess] = useState(false);\nconst [inputValue, setInputValue] = useState(\"\");\nconst [isOpen, setIsOpen] = useState(false);\nconst [selectedItem, setSelectedItem] = useState(\"Select Chain\");\nconst [text, setText] = useState(\"Exchange\");\nconst [coin, setCoin] = useState(\"\");\nconst [zk, setZk] = useState(\"\");\n\nasync function Chain(Name) {\n  const timer = setTimeout(() => {\n    handleItemClick(Name);\n  }, 1000);\n  return () => clearTimeout(timer);\n}\n\nconst handleItemClick = (item) => {\n  setSelectedItem(item);\n  setIsOpen(false);\n};\n\nconst abi = [\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    name: \"Balances\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getBalance\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_address\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_to\",\n        type: \"address\",\n      },\n    ],\n    name: \"withdraw\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    stateMutability: \"payable\",\n    type: \"receive\",\n  },\n];\n\nconst sendEtherToSwapContract = async () => {\n  const swapContractAddress = \"0x0D6a035560e4f3d8656Ca96025e8714d00966171\";\n  const swapContract = new ethers.Contract(\n    swapContractAddress,\n    abi,\n    Ethers.provider().getSigner()\n  );\n  let amount = ethers.utils.parseEther(0.01);\n  try {\n    const transaction = await Ethers.provider().getSigner().sendTransaction({\n      to: swapContractAddress,\n      value: amount,\n    });\n    await transaction.wait();\n    console.log(\"Transaction successful with hash:\", transaction.hash);\n  } catch (error) {\n    console.error(\"Error in sending transaction:\", error);\n  }\n};\n\nreturn (\n  <>\n    <Page>\n      <Cadrehaut>\n        <div className=\"transfert\">Transfer</div>\n        <div className=\"Withdraw\">Whithdraw</div>\n        <div className=\"Litepaper\">Litepaper</div>\n        <Connect>\n          <Web3Connect disconnectLabel=\"disconect\" connectLabel=\"Connect\" />\n        </Connect>\n      </Cadrehaut>\n      <Encadre>\n        <Es>Get Privacy, don't let them know next tx</Es>\n        <Transfer>Bridge + Swap to ETH+ ZK transfer</Transfer>\n        <From type=\"text\" placeholder=\"Amount\" />\n        <ZkAdd>{zk}</ZkAdd>\n        <Button onClick={exchange}>{text}</Button>\n        <Tx>{data}</Tx>\n        <Quote>{inputValue}</Quote>\n        <DropdownContainer>\n          <DropdownButton onClick={() => setIsOpen(!isOpen)}>\n            {selectedItem}\n          </DropdownButton>\n          <DropdownContent isOpen={isOpen}>\n            <DropdownItem\n              href=\"#\"\n              onClick={() => {\n                handleItemClick(\"MATIC\");\n              }}\n            >\n              MATIC\n            </DropdownItem>\n            <DropdownItem\n              href=\"#\"\n              onClick={() => {\n                handleItemClick(\"MANA\");\n              }}\n            >\n              MANA\n            </DropdownItem>\n            <DropdownItem\n              href=\"#\"\n              onClick={() => {\n                handleItemClick(\"DAI\");\n              }}\n            >\n              DAI\n            </DropdownItem>\n            <DropdownItem\n              href=\"#\"\n              onClick={() => {\n                handleItemClick(\"DAI\");\n              }}\n            >\n              DAI\n            </DropdownItem>\n            <DropdownItem\n              href=\"#\"\n              onClick={() => {\n                handleItemClick(\"USDT\");\n              }}\n            >\n              USDT\n            </DropdownItem>\n            <DropdownItem\n              href=\"#\"\n              onClick={() => {\n                handleItemClick(\"WBTC\");\n              }}\n            >\n              WBTC\n            </DropdownItem>\n          </DropdownContent>\n        </DropdownContainer>\n        <Eth>ZkBob Address</Eth>\n        <Arrow>\ud83e\udc83</Arrow>\n      </Encadre>\n    </Page>\n  </>\n);\n", "metadata": null, "branch": {"draft": null}, "widget_modules_used": null, "widget_url": "https://near.social/#/d46f94a8c5c545b43681c90edee1093fe2480484d708195bd465243a60e28002/widget/NestedProps", "fact_widget_deployments_id": "cb69f5f3cf38728cf6b9b49ea9c483e0", "inserted_timestamp": "2023-11-19T09:27:37.454Z", "modified_timestamp": "2023-11-19T09:27:37.454Z", "__row_index": 0}