{"tx_hash": "rhvcb2pvS22rnQfKk6uGp7n5BexjbEtyrbw4g8xYuJP", "action_id_social": "2MYEcZJ1rrXQcaSV4gcnZUqcVkn54Z8Q7L7Xog88vDkn-0-widget", "block_id": 106851601, "block_timestamp": "2023-11-30T06:19:27.808Z", "signer_id": "kingsley-sama.near", "widget_name": "landingpage", "source_code": "const ownerId = \"kingsley-sama.near\";\nconst contractAddress = \"0x34a314473C8901E7D502123ba2ff4Bc0f4D20eE5\";\n//Db Intergration\nconst PollABI = [\n  {\n    inputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"pollId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"string\",\n        name: \"question\",\n        type: \"string\",\n      },\n    ],\n    name: \"PollCreated\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"nftId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Voted\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"string\",\n        name: \"_nftName\",\n        type: \"string\",\n      },\n    ],\n    name: \"addNFTS\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_newOwner\",\n        type: \"address\",\n      },\n    ],\n    name: \"changeOwnership\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"pollId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"closePoll\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"string\",\n        name: \"_name\",\n        type: \"string\",\n      },\n    ],\n    name: \"createPoll\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"nftId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getNFTVotes\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"haveYouVoted\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"nfts\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"string\",\n        name: \"name\",\n        type: \"string\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"voteCount\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"numberOfNFTs\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"numberOfPolls\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"owner\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"polls\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"string\",\n        name: \"name\",\n        type: \"string\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"voteCount\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"isOpen\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"totalVoters\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"uint256\", name: \"nftId\", type: \"uint256\" }],\n    name: \"vote\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    name: \"voters\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\nconst [count, setCount] = useState(0);\nconst handleButtonClick = (id) => {\n  vote(id);\n  setCount(count + 1);\n};\nconst pollDartABI = [\n  \"function createPoll(string memory _name) public onlyOwner {}\",\n  \"function addNFTS(string memory _nftName) public onlyOwner {}\",\n  \"function vote(uint256 nftId) external {}\",\n  \"function closePoll(uint256 pollId) external onlyOwner {}\",\n  \"function changeOwnership(address _newOwner) public onlyOwner {}\",\n  \"function getNFTVotes(uint256 nftId) public view returns(uint256) {}\",\n  \"function haveYouVoted() public view returns (bool) {}\",\n];\n\n// Load current sender address if it was not loaded yet\nif (state.sender == undefined && Ethers.provider()) {\n  Ethers.provider()\n    .send(\"eth_requestAccounts\", [])\n    .then((accounts) => {\n      if (accounts.length) {\n        // save sender address to the state\n        State.update({ sender: accounts[0] });\n      }\n    });\n}\n// setOverallCount(overallCount + 1);\n\n// // Update the count for the clicked button\n// const updatedArray = arrayOfObjects.map((obj) =>\n//   obj.id === id ? { ...obj, count: obj.count + 1 } : obj\n// );\n\n// Create contract interface\nconst iPollDart = new ethers.utils.Interface(PollABI);\n\nconst vote = (nftId) => {\n  console.log(\"okayVote\");\n  const pollDartContract = new ethers.Contract(\n    contractAddress,\n    PollABI,\n    Ethers.provider().getSigner()\n  );\n\n  pollDartContract.vote(nftId);\n  //   setCount(count + 1);\n\n  // Update the count for the clicked button\n  const updatedArray = arrayOfObjects.map((obj) =>\n    obj.id === id ? { ...obj, count: obj.count + 1 } : obj\n  );\n\n  console.log(\"Voting is Successful\");\n};\n\nconst Container = styled.div`\n  display: flex;\n  min-height: fit-content;\n  align-items: center;\n  justify-content: center;\n  background-color: #f0f4f8;\n  margin:10px;\n   width: fit-content;\n   border-radius: 10px;\n`;\n\nconst FlexContainer = styled.div`\n  display: flex;\n  font-family: sans-serif;\n`;\n\nconst ImageContainer = styled.div`\n  flex: none;\n  display:flex; \n  width: fit-content;\n`;\n\nconst StyledImage = styled.img`\n  width: 200px;\n  height: 200px;\n  object-cover;\n`;\n\nconst FormContainer = styled.div`\n  flex: auto;\n  padding: 0 30px;\n\n`;\n\nconst Title = styled.h1`\n  flex: auto;\n  text-xl;\n  font-semibold;\n  color: #1a202c; /* Use your desired text color */\n`;\n\nconst Price = styled.div`\n  text-lg;\n  font-semibold;\n  color: #1a202c; /* Use your desired text color */\n`;\n\nconst Stock = styled.div`\n  width: 100%;\n  flex: none;\n  text-sm;\n  font-medium;\n  color: #2d3748; /* Use your desired text color */\n  margin-top: 0.5rem;\n`;\n\nconst Button = styled.button`\n  height: 2rem;\n  padding: 0 1rem;\n  font-bold;\n  rounded-md;\n  background:black;\n  border-radius: 5px;\n  width:100px;\n  border: none; /* Use your desired border color */\n  color: white; /* Use your desired text color */\n   &:hover {\n    background-color: grey;\n    color: \"black\";\n  }\n`;\nconst HeartIcon = styled.svg`\n  width: 20px;\n  height: 20px;\n  fill: currentColor;\n`;\n\nconst ShippingText = styled.p`\n  text-sm;\n  color: #4a5568; /* Use your desired text color */\n`;\nconst profile = {\n  avatar:\n    \"https://ipfs.near.social/ipfs/bafkreic6f6cwyn2loqcln6itukuipl72grqzqqhkmwy6ea3zwqoolgbzxu\",\n  title: \"Ape Fest Poll\",\n  subtitle: \"The Current Poll Ends\",\n  links: [\n    {\n      id: 1,\n      nftName: \"ALMUSTAPHA HAMZA\",\n      nftURL:\n        \"https://ipfs.near.social/ipfs/bafkreiaqvbnejqvoaqulvgcyyqfqedo5jep4ppx7vppxiscnrca6ytyufa\",\n      artistName: \"ALMUSTAPHA HAMZA\",\n      numberOfVotes: 0,\n      isOpen: false,\n      voteCount: \"assets/images/Actionalliance.jpeg\",\n    },\n\n    {\n      id: 2,\n      nftName: \"Cleopatra Toy Face\",\n      nftURL:\n        \"https://ipfs.near.social/ipfs/bafkreibdrpr7jsjzspemhab6ew6tucjarqdlriq6reobmwo55x4q5tdmqa\",\n      artistName: \"Cleopatra\",\n      numberOfVotes: 0,\n      isOpen: false,\n      voteCount: \"assets/images/adclogo.jpeg\",\n    },\n    {\n      id: 3,\n      nftName: \"Toy Face\",\n      nftURL:\n        \"https://ipfs.near.social/ipfs/bafkreihlizxfb7hywefw22nkiwaoubo6mwyabgr5dozfbmdhmuo2es3xnu\",\n      artistName: \"Marilyn Monroe\",\n      numberOfVotes: 0,\n      isOpen: false,\n      voteCount: \"assets/images/APC.jpeg\",\n    },\n\n    {\n      id: 4,\n      nftName: \"RetroRadio 17\",\n      nftURL:\n        \"https://ipfs.near.social/ipfs/bafkreig77zdurphnig3l47o2pwkqlcu3rcajgt7b6jiig5rnukp7hvpska\",\n      artistName: \"RetroRadio\",\n      numberOfVotes: 0,\n      status: true,\n      voteCount: 0,\n    },\n    {\n      id: 5,\n      nftName: \"RetroRadio 23\",\n      nftURL:\n        \" https://ipfs.near.social/ipfs/bafkreidac2uf7v7hj3xi4hzx22bzmtcaq76w7n4xfvngn6w4366pwglm34\",\n      artistName: \"RetroRadio\",\n      numberOfVotes: 0,\n      status: true,\n      voteCount: 0,\n    },\n    {\n      id: 6,\n      nftName: \"RetroRadio 40\",\n      nftURL:\n        \"https://ipfs.near.social/ipfs/bafkreidac2uf7v7hj3xi4hzx22bzmtcaq76w7n4xfvngn6w4366pwglm34\",\n      artistName: \"RetroRadio\",\n      numberOfVotes: 0,\n      status: true,\n      voteCount: 0,\n    },\n\n    {\n      id: 7,\n      nftName: \"Tale Nft\",\n      nftURL:\n        \"https://ipfs.near.social/ipfs/bafkreiaqvbnejqvoaqulvgcyyqfqedo5jep4ppx7vppxiscnrca6ytyufa\",\n      artistName: \"Mode Nova\",\n      numberOfVotes: 0,\n      status: true,\n      voteCount: 0,\n    },\n    {\n      id: 8,\n      nftName: \"Cranial\",\n      nftURL:\n        \"https://ipfs.near.social/ipfs/bafkreiaqvbnejqvoaqulvgcyyqfqedo5jep4ppx7vppxiscnrca6ytyufa\",\n      artistName: \"Nwanyanwu Daniel\",\n      numberOfVotes: 0,\n      status: true,\n      voteCount: 0,\n    },\n    {\n      id: 9,\n      nftName: \"Panoramic Potraits\",\n      nftURL:\n        \"https://ipfs.near.social/ipfs/bafkreiecv5kvztl3afdpzv2gwfluae5rcm6yjmqaex3ebqbil6m423m3li\",\n      artistName: \"BlueGM.eth\",\n      numberOfVotes: 0,\n      status: true,\n      voteCount: 0,\n    },\n    {\n      id: 10,\n      nftName: \"Cranial Earth Maps\",\n      nftURL:\n        \"https://ipfs.near.social/ipfs/bafkreiaqvbnejqvoaqulvgcyyqfqedo5jep4ppx7vppxiscnrca6ytyufa\",\n      artistName: \"Map Finder\",\n      numberOfVotes: 0,\n      status: true,\n      voteCount: 0,\n    },\n  ],\n  socials: [\n    { title: \"Github\", url: \"#\" },\n    { title: \"Twitter\", url: \"#\" },\n    { title: \"Facebook\", url: \"#\" },\n    { title: \"Whatsapp\", url: \"#\" },\n    { title: \"Linkedin\", url: \"#\" },\n  ],\n};\n\nconst titleToIcon = [\n  {\n    title: \"Github\",\n    icon: <i class=\"bi bi-github\"></i>,\n  },\n  {\n    title: \"Twitter\",\n    icon: <i class=\"bi bi-twitter\"></i>,\n  },\n  {\n    title: \"Facebook\",\n    icon: <i class=\"bi bi-facebook\"></i>,\n  },\n  {\n    title: \"Whatsapp\",\n    icon: <i class=\"bi bi-whatsapp\"></i>,\n  },\n  {\n    title: \"Linkedin\",\n    icon: <i class=\"bi bi-linkedin\"></i>,\n  },\n];\nconst headerStyle = {\n  display: \"flex\",\n  flexDirection: \"column\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  height: \"fit-content\",\n  padding: \"0 8px\",\n  width: \"100%\",\n  background: \"white\",\n};\nreturn (\n  <div\n    style={{\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      gap: 16,\n      height: \"fit-content\",\n      padding: \"0 8px\",\n      width: \"100%\",\n    }}\n  >\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"space-evenly\",\n        alignItems: \"center\",\n        padding: \"10px\",\n        height: \"fit-content\",\n        padding: \"0 8px\",\n        width: \"100vw\",\n        height: \"60px\",\n        color: \"white\",\n        background: \"black\",\n      }}\n    >\n      <img\n        style={{ aspectRatio: 1 / 1, maxHeight: \"60px\" }}\n        src={\n          \"https://ipfs.near.social/ipfs/bafkreicxfp5vicqzbnlu75ottkkfghmm3snhlevg373rjtwym72do5ortm\"\n        }\n      ></img>\n      <h3 style={{ margin: \"10px\" }}>Poll Dart</h3>\n      <Web3Connect />\n    </div>\n    <img\n      style={{\n        height: \"100%\",\n        maxHeight: 200,\n        borderRadius: \"10px\",\n        width: \"80vw\",\n        objectFit: \"cover\",\n      }}\n      src={profile.avatar}\n      alt={profile.title}\n    />\n\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        background: \"rgba(250, 250, 250, 0.1)\",\n        width: \"100vw\",\n        borderRadius: \"10px\",\n        padding: \"10px\",\n        height: \"500p\",\n      }}\n    >\n      <h2 style={{ color: props.theme.textColor }}>{profile.title}</h2>\n      <h5 style={{ color: props.theme.textColor2 }}>{profile.subtitle}</h5>\n      <Widget src=\"kingsley-sama.near/widget/countdowntimer\" />\n    </div>\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        width: \"100%\",\n        alignItems: \"center\",\n        maxWidth: \"100vw\",\n      }}\n    >\n      {profile.links?.map((link) => (\n        <Container>\n          <FlexContainer>\n            <ImageContainer>\n              <StyledImage\n                src={link.nftURL}\n                alt={link.artistName}\n                loading=\"lazy\"\n              />\n            </ImageContainer>\n            <FormContainer role=\"form\">\n              <div>\n                <Title>{link.nftName}</Title>\n                <Price>Vote Count: {count}</Price>\n                <Stock>Artist: {link.artistName} </Stock>\n              </div>\n              <div>\n                <Button onClick={() => vote(link.id)} type=\"button\">\n                  Vote\n                </Button>\n              </div>\n              <div></div>\n              <ShippingText>Status</ShippingText>\n            </FormContainer>\n          </FlexContainer>\n        </Container>\n      ))}\n    </div>\n  </div>\n);\n", "metadata": {"platform": "jutsu.ai"}, "branch": {"draft": null}, "widget_modules_used": null, "widget_url": "https://near.social/#/kingsley-sama.near/widget/landingpage", "fact_widget_deployments_id": "b0236183624d2a2e21dfe8aed9fb1f5b", "inserted_timestamp": "2023-11-30T08:22:26.679Z", "modified_timestamp": "2023-12-20T02:50:47.065Z", "__row_index": 0}