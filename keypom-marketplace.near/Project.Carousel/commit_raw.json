{"tx_hash": "HgA83FsEfRBsAYnTj2TrPJ13oNkr91P4TTfdCf4nUgRk", "action_id_social": "4w2WSGfeHWPRbhGM27yRoqzCQ5dXWtuPh12qLWma9c3S-0-widget", "block_id": 108020723, "block_timestamp": "2023-12-15T16:56:28.405Z", "signer_id": "keypom-marketplace.near", "widget_name": "Project.Carousel", "source_code": "State.init({\n  focusedIndex: 0,\n});\n\nconst move = (direction) => {\n  const newIndex = state.focusedIndex + direction;\n  // Ensure newIndex is within bounds\n  if (newIndex >= 0 && newIndex < props.projects.length - 2) {\n    State.update({ focusedIndex: newIndex });\n  }\n};\n\nconst getFocusedIndex = () => {\n  return state.focusedIndex;\n};\n\nconst cardWidth = 411;\n\nconst Carousel = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  position: relative;\n  width: 100%;\n  overflow: hidden;\n  margin-bottom: 32px;\n`;\n\nconst Cards = styled.div`\n  display: flex;\n  transition: transform 0.5s ease-in-out;\n  transform: translateX(${({ translateX }) => translateX}px);\n`;\n\nconst Card = styled.div`\n  display: flex;\n  flex: 0 0 auto;\n  flex-direction: column;\n  width: ${cardWidth}px;\n  border-radius: 6px;\n  transform: ${({ isFocused }) => (isFocused ? \"scale(1.2)\" : \"scale(0.8)\")};\n  opacity: ${({ isVisible }) => (isVisible ? 1 : 0.5)};\n  transition: transform 0.5s ease-in-out, opacity 0.5s ease-in-out;\n  background-color: white;\n  margin-right: ${({ isLast }) =>\n    isLast ? \"0\" : \"38px\"}; // Add gap only if it is not the last card\n`;\n\nconst Banner = styled.div`\n  position: relative;\n  width: 100%;\n  height: 168;\n  margin-bottom: 30px;\n`;\n\nconst BannerImage = styled.img`\n  width: 100%;\n  height: 100%;\n  //   border-radius: 6px;\n`;\n\nconst ProfileImage = styled.img`\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  border: 3px solid white;\n  position: absolute;\n  bottom: -20px;\n  left: 60px;\n`;\n\nconst Info = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 16px 24px;\n  gap: 16px;\n`;\n\nconst ProjectName = styled.h2`\n  font-size: 16px;\n  font-weight: 600;\n  font-family: mona-sans;\n  color: #2e2e2e;\n`;\n\nconst ProjectDescription = styled.p`\n  font-size: 16px;\n  font-weight: 400;\n  color: #2e2e2e;\n`;\n\nconst Tags = styled.div`\n  display: flex;\n  gap: 8px;\n`;\n\nconst Tag = styled.span`\n  box-shadow: 0px -0.699999988079071px 0px rgba(123, 123, 123, 0.36) inset;\n  padding: 4px 8px;\n  border-radius: 4px;\n  border: 1px solid rgba(123, 123, 123, 0.36);\n`;\n\nconst Arrows = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Arrow = styled.button`\n  /* styling for arrows */\n`;\n\n/*\n\nCalculating the Positioning:\n1 centered card: 411px (fixed width)\n2 full side cards: 2 * 411px\n2 half cards: 2 * (411px/2)\nCalculated widths:\n[1 centered card] + [2 side cards] + [2 half cards]\n[411] + [2 * 411] + [2 * (411/2)]\n[411] + [822] + [411]\n= 1644px\n\n*/\n\nconst totalVisibleWidth = 1644;\nconst offset = (totalVisibleWidth - cardWidth) / 2; // Calculating offset\nconst cardMargin = 38; // if using a 38px margin between cards\nconst cardWithMargin = cardWidth + cardMargin;\n// const translateX = -state.focusedIndex * cardWidth + offset; // Adding the offset\n\nconst calculateTranslateX = () => {\n  // If focused on the first card\n  if (state.focusedIndex === 0) {\n    return (totalVisibleWidth - cardWithMargin) / 2;\n  }\n  // If focused on the last card\n  else if (state.focusedIndex === props.projects.length - 1) {\n    return -((props.projects.length - 1) * cardWithMargin - offset);\n  }\n  // Any other card in the list\n  else {\n    return -state.focusedIndex * cardWithMargin + offset;\n  }\n};\n\nconst translateX = calculateTranslateX();\n\nreturn (\n  <>\n    <Carousel>\n      <Cards translateX={translateX}>\n        {props.projects.map((project, index) => (\n          <Card\n            key={index}\n            isFocused={index === state.focusedIndex}\n            isVisible={Math.abs(index - state.focusedIndex) <= 1.5}\n            isLast={index === props.projects.length - 1}\n          >\n            <Banner>\n              <BannerImage src={project.bannerImage} alt=\"banner\" />\n              <ProfileImage src={project.profileImage} alt=\"profile\" />\n            </Banner>\n            <Info>\n              <ProjectName>{project.name}</ProjectName>\n              <ProjectDescription>{project.description}</ProjectDescription>\n              <Tags>\n                {project.tags.map((tag, tagIndex) => (\n                  <Tag key={tagIndex}>{tag}</Tag>\n                ))}\n              </Tags>\n            </Info>\n          </Card>\n        ))}\n      </Cards>\n    </Carousel>\n    <Arrows>\n      <Arrow onClick={() => move(-1)} disabled={state.focusedIndex === 0}>\n        \u2190\n      </Arrow>\n      <Arrow onClick={() => move(1)} disabled={state.focusedIndex === props.projects.length - 1}>\n        \u2192\n      </Arrow>\n    </Arrows>\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/keypom-marketplace.near/widget/Project.Carousel", "fact_widget_deployments_id": "a8a0ccbfbdc7ab54a795edd66d293f0f", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 2}