{"tx_hash": "8mATUiExkZs4gwsQaZsMSuzuB1mdt9MRE8wJR4B9BQKy", "action_id_social": "F9RrNUeidvmmjSxwYjp1DCevc6i9PHJWg6BiD9EUD4mo-0-widget", "block_id": 112240776, "block_timestamp": "2024-02-06T14:57:35.705Z", "signer_id": "sayalot.near", "widget_name": "NDC.UpVoteButton", "source_code": "//NDC.UpVoteButton\r\n\r\nconst {\r\n  isTest,\r\n  authorForWidget,\r\n  reactedElementData,\r\n  widgets,\r\n  disabled,\r\n  articleSbts,\r\n  upVotes: articleUpVotes,\r\n  callLibs,\r\n  baseActions,\r\n} = props;\r\n\r\nconst data = reactedElementData;\r\n\r\nconst libSrcArray = [widgets.libs.libUpVotes];\r\n\r\nconst initLibCalls = {\r\n  upVotes: [\r\n    {\r\n      functionName: \"getUpVotes\",\r\n      key: \"upVotesBySBT\",\r\n      props: {\r\n        id: data.id ?? `${data.author}-${data.timeCreate}`,\r\n        sbtsNames: articleSbts,\r\n      },\r\n    },\r\n  ],\r\n};\r\nconst initUpVotesBySBT = {};\r\n\r\nif (!articleUpVotes) {\r\n  State.init({\r\n    functionsToCallByLibrary: initLibCalls,\r\n    articleUpVotes: [],\r\n    upVotesBySBT: initUpVotesBySBT,\r\n  });\r\n} else {\r\n  State.init({\r\n    articleUpVotes,\r\n    functionsToCallByLibrary: { upVotes: [] },\r\n  });\r\n}\r\n\r\nif (state.upVotesBySBT && Object.keys(state.upVotesBySBT).length > 0) {\r\n  const key = Object.keys(state.upVotesBySBT)[0]; // There should always be one for now\r\n  const newUpvotes = state.upVotesBySBT[key];\r\n  if (JSON.stringify(state.articleUpVotes) !== JSON.stringify(newUpvotes)) {\r\n    State.update({ articleUpVotes: newUpvotes });\r\n  }\r\n}\r\n\r\nlet upVotesData = state.articleUpVotes;\r\n\r\nlet userVote = upVotesData.find((vote) => vote.accountId === context.accountId);\r\n\r\nlet hasUserVoted = userVote !== undefined;\r\n\r\nfunction getUpVoteButtonClass() {\r\n  if (hasUserVoted) {\r\n    return \"info\";\r\n  } else {\r\n    return \"info outline\";\r\n  }\r\n}\r\n\r\nfunction stateUpdate(obj) {\r\n  State.update(obj);\r\n}\r\n\r\nfunction upVoteButtonListener() {\r\n  let newLibCalls = Object.assign({}, state.functionsToCallByLibrary);\r\n\r\n  if (!hasUserVoted) {\r\n    newLibCalls.upVotes.push({\r\n      functionName: \"addVote\",\r\n      key: \"newVote\",\r\n      props: {\r\n        id: data.id ?? `${data.author}-${data.timeCreate}`,\r\n        articleSbts: data.sbts,\r\n        articleAuthor: data.author,\r\n      },\r\n    });\r\n  } else {\r\n    newLibCalls.upVotes.push({\r\n      functionName: \"deleteVote\",\r\n      key: \"deletedVote\",\r\n      props: {\r\n        id: data.id ?? `${data.author}-${data.timeCreate}`,\r\n        upVoteId: userVote.value.upVoteId,\r\n      },\r\n    });\r\n  }\r\n  State.update({ functionsToCallByLibrary: newLibCalls });\r\n}\r\n\r\nconst IconContainer = styled.div`\r\n    transform: rotate(-90deg);\r\n  `;\r\n\r\nconst Icon = styled.i`\r\n    margin: 0px !important;\r\n  `;\r\n\r\nconst CallLibrary = styled.div`\r\n    display: none;\r\n  `;\r\n\r\nreturn (\r\n  <>\r\n    <div title={disabled && \"You don't own this SBT\"}>\r\n      <Widget\r\n        src={widgets.views.standardWidgets.newStyledComponents.Input.Button}\r\n        props={{\r\n          children: (\r\n            <div className=\"d-flex\">\r\n              <span>{`+${upVotesData.length}`}</span>\r\n              <IconContainer>\r\n                <Icon\r\n                  className={`bi bi-fast-forward-fill ${\r\n                    !disabled && \"text-success\"\r\n                  }`}\r\n                ></Icon>\r\n              </IconContainer>\r\n            </div>\r\n          ),\r\n          disabled,\r\n          className: `${getUpVoteButtonClass()}`,\r\n          size: \"sm\",\r\n          onClick: upVoteButtonListener,\r\n        }}\r\n      />\r\n    </div>\r\n\r\n    <CallLibrary>\r\n      {libSrcArray.map((src) => {\r\n        return callLibs(\r\n          src,\r\n          stateUpdate,\r\n          state.functionsToCallByLibrary,\r\n          { baseAction: baseActions.upVoteBaseAction },\r\n          \"Up vote button\"\r\n        );\r\n      })}\r\n    </CallLibrary>\r\n  </>\r\n);\r\n", "metadata": {"fork_of": "f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb/widget/NDC.UpVoteButton@111142122"}, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/sayalot.near/widget/NDC.UpVoteButton", "fact_widget_deployments_id": "65cae259e3d5e7ea0323d2f27e9ec24c", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 3}