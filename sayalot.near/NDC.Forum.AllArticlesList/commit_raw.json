{"tx_hash": "9Xa5vDiDn5t69mDhNKPJPyYWDeCCxoDSbr3APU5bmLgm", "action_id_social": "8yPDqYruJevfZEzwkFpXrYVg84ih16HNbzu6xQXwrL11-0-widget", "block_id": 109413773, "block_timestamp": "2024-01-02T15:18:09.420Z", "signer_id": "sayalot.near", "widget_name": "NDC.Forum.AllArticlesList", "source_code": "// NDC.Forum.AllArticlesList\n\n//===============================================INITIALIZATION=====================================================\n\nlet {\n  isTest,\n  stateUpdate,\n  articlesToRender,\n  tabs,\n  widgets,\n  addressForArticles,\n  handleFilterArticles,\n  handleOpenArticle,\n  authorForWidget,\n  initialCreateState,\n  editArticleData,\n  handleEditArticle,\n  showCreateArticle,\n  sbtWhiteList,\n  sbts,\n  handleShareButton,\n  handleShareSearch,\n  canLoggedUserCreateArticles,\n  filterBy,\n  callLibs,\n  baseActions,\n  handleOnCommitArticle,\n} = props;\n\nconst libSrcArray = [widgets.libUpVotes];\n\nlet initLibsCalls = { upVotes: [] };\n\n//For the moment we'll allways have only 1 sbt in the array. If this change remember to do the propper work in lib.SBT and here.\n\ninitLibsCalls.upVotes = articlesToRender.map((article) => {\n  return {\n    functionName: \"getUpVotes\",\n    key: `upVotes-${article.id}`,\n    props: {\n      id: article.id ?? `${article.author}-${article.timeCreate}`,\n      sbtsNames: article.sbts ?? [],\n    },\n  };\n});\n\nif (articlesToRender.length > 0) {\n  State.update({ libsCalls: initLibsCalls });\n}\n\nState.init({\n  start: Date.now(),\n  libsCalls: initLibsCalls,\n});\n\nif (state.upVotesBySBT && Object.keys(state.upVotesBySBT).length > 0) {\n  const key = Object.keys(state.upVotesBySBT)[0]; // There should always be one for now\n  const newUpvotes = state.upVotesBySBT[key];\n  if (JSON.stringify(state.upVotes) !== JSON.stringify(newUpvotes)) {\n    State.update({ upVotes: newUpvotes });\n  }\n}\n\nlet finalArticlesWithUpVotes = articlesToRender.map((article) => {\n  if (state[`upVotes-${article.id}`]) {\n    const key = Object.keys(state[`upVotes-${article.id}`])[0];\n    const articleUpVotes = state[`upVotes-${article.id}`][key];\n    article.upVotes = articleUpVotes;\n\n    return article;\n  }\n});\n\nconst fiveDaysTimeLapse = 432000000;\n\nconst newestArticlesWithUpVotes = finalArticlesWithUpVotes\n  .filter((article) => article.timeLastEdit > Date.now() - fiveDaysTimeLapse)\n  .sort((a, b) => b.timeLastEdit - a.timeLastEdit);\n\nconst olderArticlesWithUpVotes = finalArticlesWithUpVotes\n  .filter((article) => article.timeLastEdit < Date.now() - fiveDaysTimeLapse)\n  .sort((a, b) => b.upVotes.length - a.upVotes.length);\n\nconst sortedFinalArticlesWithUpVotes = [\n  ...newestArticlesWithUpVotes,\n  ...olderArticlesWithUpVotes,\n];\n\n//=============================================END INITIALIZATION===================================================\n\n//===================================================CONSTS=========================================================\n\nconst AcordionContainer = styled.div`--bs-accordion-border-width: 0px!important;`;\n\nconst NoMargin = styled.div`margin: 0 0.75rem;`;\n\nconst AccordionBody = styled.div`padding: 0;`;\n\nconst ArticlesListContainer = styled.div`\n  background-color: rgb(248, 248, 249);\n  margin: 0;\n`;\n\nconst CallLibrary = styled.div`\n  display: none;\n`;\n\nconst IconCursorPointer = styled.i`\n  cursor: pointer;\n`;\n\nconst ShareSearchRow = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  align-content: center;\n  margin-bottom: 1rem;\n  margin-top: 1rem;\n`;\n\nconst ShareSearchText = styled.h6`\n  margin-bottom: 0;\n  margin-left: 1rem;\n  margin-right: 1rem;\n`;\n\n//=================================================END CONSTS=======================================================\n\n//==================================================FUNCTIONS=======================================================\n\nfunction getDateLastEdit(timestamp) {\n  const date = new Date(Number(timestamp));\n  const dateString = {\n    date: date.toLocaleDateString(),\n    time: date.toLocaleTimeString(),\n  };\n  return dateString;\n}\n\nfunction allArticlesListStateUpdate(obj) {\n  State.update(obj);\n}\n\n//================================================END FUNCTIONS=====================================================\nreturn (\n  <>\n    {showCreateArticle ? (\n      <>\n        <AcordionContainer className=\"accordion\" id=\"accordionExample\">\n          <NoMargin className=\"accordion-item\">\n            <h2 className=\"accordion-header\" id=\"headingOne\">\n              <button\n                className=\"accordion-button collapsed\"\n                type=\"button\"\n                data-bs-toggle=\"collapse\"\n                data-bs-target=\"#collapseOne\"\n                aria-expanded=\"true\"\n                aria-controls=\"collapseOne\"\n              >\n                <h6 className=\"m-0\">+ Create post</h6>\n              </button>\n            </h2>\n            <div\n              id=\"collapseOne\"\n              className=\"accordion-collapse collapse\"\n              aria-labelledby=\"headingOne\"\n              data-bs-parent=\"#accordionExample\"\n            >\n              <AccordionBody className=\"accordion-body\">\n                <Widget\n                  src={widgets.create}\n                  props={{\n                    isTest,\n                    addressForArticles,\n                    authorForWidget,\n                    stateUpdate,\n                    widgets,\n                    initialCreateState,\n                    editArticleData,\n                    callLibs,\n                    handleFilterArticles,\n                    handleEditArticle,\n                    initialBody: \"\",\n                    canLoggedUserCreateArticles,\n                    sbts,\n                    baseActions,\n                    handleOnCommitArticle,\n                  }}\n                />\n              </AccordionBody>\n            </div>\n          </NoMargin>\n        </AcordionContainer>\n      </>\n    ) : (\n      <h6>You can't post since you don't own this SBT</h6>\n    )}\n    <ShareSearchRow>\n      <ShareSearchText>Share search</ShareSearchText>\n      <Widget\n        src={widgets.newStyledComponents.Input.Button}\n        props={{\n          size: \"sm\",\n          className: \"info outline icon\",\n          children: <i className=\"bi bi-share\"></i>,\n          onClick: () => handleShareSearch(true),\n        }}\n      />\n    </ShareSearchRow>\n    <NoMargin>\n      {filterBy.parameterName === \"tag\" && (\n        <div className=\"mt-3\">\n          <h6>Filter by tag:</h6>\n          <div className=\"d-flex align-items-center \">\n            <Widget\n              src={widgets.newStyledComponents.Element.Badge}\n              props={{\n                children: filterBy.parameterValue,\n                variant: \"round info\",\n                size: \"lg\",\n              }}\n            />\n            <IconCursorPointer\n              className=\"bi bi-x\"\n              onClick={() => handleFilterArticles({ filterBy: \"\", value: \"\" })}\n            ></IconCursorPointer>\n          </div>\n        </div>\n      )}\n      <ArticlesListContainer className=\"row card-group py-3\">\n        {sortedFinalArticlesWithUpVotes.length > 0 ? (\n          sortedFinalArticlesWithUpVotes.map((article, i) => {\n            const authorProfileCall = Social.getr(`${article.author}/profile`);\n\n            if (authorProfileCall) {\n              article.authorProfile = authorProfileCall;\n            }\n\n            // If some widget posts data different than an array it will be ignored\n            if (!Array.isArray(article.tags)) article.tags = [];\n            return (\n              <Widget\n                src={widgets.generalCard}\n                props={{\n                  widgets,\n                  isTest,\n                  data: article,\n                  displayOverlay: true,\n                  renderReactions: true,\n                  addressForArticles,\n                  handleOpenArticle,\n                  handleFilterArticles,\n                  authorForWidget,\n                  handleShareButton,\n                  sbtWhiteList,\n                  handleEditArticle,\n                  callLibs,\n                  baseActions,\n                }}\n              />\n            );\n          })\n        ) : (\n          <h5>No articles uploaded using this SBT yet</h5>\n        )}\n      </ArticlesListContainer>\n    </NoMargin>\n    <CallLibrary>\n      {libSrcArray.map((src) => {\n        return callLibs(\n          src,\n          allArticlesListStateUpdate,\n          state.libsCalls,\n          { baseAction: baseActions.upVoteBaseAction },\n          \"All articles list\"\n        );\n      })}\n    </CallLibrary>\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/sayalot.near/widget/NDC.Forum.AllArticlesList", "fact_widget_deployments_id": "8bf5a2404d4a53653c6f308341bc31b4", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 16}