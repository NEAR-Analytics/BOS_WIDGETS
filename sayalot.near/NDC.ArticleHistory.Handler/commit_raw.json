{"tx_hash": "6Ve2vS4aMyHmoFT6He9bAStXUdzCCrr9C4cWH9bQsZrz", "action_id_social": "BnnvK8PcsHt7XT9BSygyvrJUZ6bAN1mg6dSNefpzMqJT-0-widget", "block_id": 110153973, "block_timestamp": "2024-01-11T15:20:58.682Z", "signer_id": "sayalot.near", "widget_name": "NDC.ArticleHistory.Handler", "source_code": "//NDC.ArticleHistory.Handler\r\n\r\nconst addressForArticles = \"wikiTest2Article\";\r\nconst {\r\n  articleId,\r\n  sbtWhiteList,\r\n  isTest,\r\n  sbts,\r\n  baseActions,\r\n  kanbanColumns,\r\n  callLibs,\r\n  widgets,\r\n} = props;\r\n\r\nconst initLibsCalls = {\r\n  article: [\r\n    {\r\n      functionName: \"getArticleVersions\",\r\n      key: \"versions\",\r\n      props: {\r\n        env: isTest ? \"test\" : \"prod\",\r\n        sbtsNames: sbtWhiteList,\r\n        articleIdToFilter: articleId,\r\n      },\r\n    },\r\n  ],\r\n};\r\n\r\nState.init({\r\n  selectedTab: \"code\",\r\n  selectedBlockHeight: null,\r\n  functionsToCallByLibrary: initLibsCalls,\r\n});\r\n\r\nlet newLibsCalls = state.functionsToCallByLibrary;\r\n\r\nState.update({ libsCalls: newLibsCalls });\r\n\r\nconst libSrcArray = [widgets.libArticle];\r\n\r\nconst versions = state.versions ?? [];\r\n\r\nif (props.count) props.count(versions.length);\r\n\r\nif (!state.selectedBlockHeight)\r\n  state.selectedBlockHeight = versions[0].blockHeight;\r\n\r\nconst renderBlockChangesLink = (version) => {\r\n  if (!version) return <>Loading...</>;\r\n\r\n  const timeLastEdit = new Date(version.timeLastEdit);\r\n\r\n  return (\r\n    <div>\r\n      <button\r\n        className={`list-group-item list-group-item-action ${\r\n          state.selectedBlockHeight != version.blockHeight\r\n            ? \"\"\r\n            : \"list-group-item-info\"\r\n        }`}\r\n        onClick={() => {\r\n          State.update({ selectedBlockHeight: version.blockHeight });\r\n        }}\r\n      >\r\n        #{version.blockHeight} *{\" \"}\r\n        {timeLastEdit.toDateString() + \" \" + timeLastEdit.toLocaleTimeString()}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction renderWidgetCode(blockHeight) {\r\n  const currentVersionDisplayed = versions.find(\r\n    (version) => version.blockHeight == blockHeight\r\n  );\r\n  const index = versions.findIndex((el) => el.blockHeight == blockHeight);\r\n  const prevBlockHeightObject = versions[index + 1];\r\n  return (\r\n    <Widget\r\n      style={{ minHeight: \"200px\" }}\r\n      key={blockHeight}\r\n      src={`f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb/widget/NDC.ArticleHistory.Container`}\r\n      props={{\r\n        pathToCurrentArticle: `${blockHeight.lastEditor}/${addressForArticles}/main`,\r\n        currentBlockHeight: blockHeight,\r\n        currentVersionData: currentVersionDisplayed,\r\n        allVersionsData: versions,\r\n        pathToPrevArticle: `${prevBlockHeightObject.lastEditor}/${addressForArticles}/main`,\r\n        prevBlockHeight: prevBlockHeightObject.blockHeight,\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nfunction blockHeightToWidgetRender(blockHeight, allArticles) {\r\n  const index = versions.findIndex((el) => el.blockHeight == blockHeight);\r\n  return <Markdown text={allArticles[index].body} />;\r\n}\r\n\r\nfunction articleHistoryHasndlerStateUpdate(obj) {\r\n  State.update(obj);\r\n}\r\n\r\n//styles forked from calebjacob.near/widget/Activity\r\nconst Tabs = styled.div`\r\n  display: flex;\r\n  padding: 0 12px;\r\n  height: 48px;\r\n  border-bottom: 1px solid #ECEEF0;\r\n`;\r\n\r\nconst TabsButton = styled.button`\r\n  font-weight: 400;\r\n  font-size: 14px;\r\n  line-height: 17px;\r\n  padding: 0 12px;\r\n  position: relative;\r\n  color: ${(p) => (p.selected ? \"#11181C\" : \"#687076\")};\r\n  background: none;\r\n  border: none;\r\n  outline: none;\r\n\r\n  &:hover {\r\n    color: #11181C;\r\n  }\r\n\r\n  &::after {\r\n    content: '';\r\n    display: ${(p) => (p.selected ? \"block\" : \"none\")};\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: 12px;\r\n    right: 12px;\r\n    height: 3px;\r\n    background: #0091FF;\r\n  }\r\n`;\r\n\r\nconst CallLibrary = styled.div`\r\n  display: block;\r\n`;\r\n\r\nreturn (\r\n  <>\r\n    <div className=\"mt-2\">\r\n      <h3 className=\"text-center\">Article History</h3>\r\n      {!versions ? (\r\n        <div>incorrent widget path</div>\r\n      ) : (\r\n        <div>\r\n          <div div className=\"card mb-3\">\r\n            <h3 className=\"card-header\">{versions.length} Commits</h3>\r\n            <div className=\"list-group\">\r\n              {versions\r\n                .slice(0, 5)\r\n                .map((height) => renderBlockChangesLink(height))}\r\n              <div className=\"collapse\" id=\"collapseExample\">\r\n                {versions\r\n                  .slice(5)\r\n                  .map((height) => renderBlockChangesLink(height))}\r\n              </div>\r\n              {versions.length > 5 && (\r\n                <button\r\n                  className=\"list-group-item active\"\r\n                  type=\"button\"\r\n                  data-bs-toggle=\"collapse\"\r\n                  data-bs-target=\"#collapseExample\"\r\n                  aria-expanded=\"false\"\r\n                  aria-controls=\"collapseExample\"\r\n                >\r\n                  Show all\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <Tabs>\r\n            <TabsButton\r\n              type=\"button\"\r\n              onClick={() =>\r\n                State.update({\r\n                  selectedTab: \"code\",\r\n                })\r\n              }\r\n              selected={state.selectedTab == \"code\"}\r\n            >\r\n              Code\r\n            </TabsButton>\r\n\r\n            <TabsButton\r\n              type=\"button\"\r\n              onClick={() =>\r\n                State.update({\r\n                  selectedTab: \"render\",\r\n                })\r\n              }\r\n              selected={state.selectedTab == \"render\"}\r\n            >\r\n              Render\r\n            </TabsButton>\r\n          </Tabs>\r\n\r\n          {state.selectedTab == \"code\" && (\r\n            <div>{renderWidgetCode(state.selectedBlockHeight)}</div>\r\n          )}\r\n\r\n          {state.selectedTab == \"render\" && (\r\n            <div>\r\n              {blockHeightToWidgetRender(state.selectedBlockHeight, versions)}\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n    <CallLibrary>\r\n      {libSrcArray.map((src) => {\r\n        return callLibs(\r\n          src,\r\n          articleHistoryHasndlerStateUpdate,\r\n          state.functionsToCallByLibrary,\r\n          { baseAction: baseActions.articlesBaseAction, kanbanColumns },\r\n          \"NDC.ArticleHistory.Handler\"\r\n        );\r\n      })}\r\n    </CallLibrary>\r\n  </>\r\n);\r\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/sayalot.near/widget/NDC.ArticleHistory.Handler", "fact_widget_deployments_id": "8b5997380f9f68170fdcd19afb8fe8f4", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 8}