{"tx_hash": "2s55uCTwS31mdH9Nd4xKFhnXasi6hFqmmvMC47utcT7r", "action_id_social": "A5z1eJ84wFYh9czUprpWYVHM51nrNu45zwywbrkLgBWr-0-widget", "block_id": 99921901, "block_timestamp": "2023-08-29T10:42:10.477Z", "signer_id": "sayalot.near", "widget_name": "NDC.SayALot.AddComment", "source_code": "const ModalCard = styled.div`\n  position: fixed;\n  z-index: 1;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: rgba(0, 0, 0, 0.7);\n`;\nconst CommentCard = styled.div`\n  display: flex;\n  width: 400px;\n  padding: 20px;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 16px;\n  border-radius: 10px;\n  background: #fff;\n  border: 1px solid transparent;\n  margin-left: auto;\n  margin-right: auto;\n  margin-buttom: 50%;\n  @media only screen and (max-width: 480px) {\n    width: 90%;\n  }\n`;\nconst H1 = styled.h1`\n  color: black;\n  font-size: 14px;\n  font-weight: 500;\n`;\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  gap: 20px;\n  align-self: stretch;\n`;\nconst CommentBody = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 16px;\n  align-self: stretch;\n`;\nconst BComment = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 8px;\n  align-self: stretch;\n`;\nconst BCommentmessage = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 8px;\n  align-self: stretch;\n`;\nconst BCMHeader = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  gap: 8px;\n`;\nconst BCMProfile = styled.div`\n  width: 28px;\n  height: 28px;\n  flex-shrink: 0;\n  flex-direction: row;\n  border-radius: 29px;\n  background: #d0d6d9;\n  text-align: center;\n`;\nconst BCMProfileimg = styled.img`\n  width: 28px;\n  height: 28px;\n  flex-shrink: 0;\n  vertical-align: initial;\n`;\nconst BCMProfileUsername = styled.label`\n  display: flex;\n  width: 100%;\n  flex-direction: column;\n  justify-content: center;\n  flex-shrink: 0;\n  color: #000;\n  font-size: 14px;\n\n  font-style: normal;\n  font-weight: 500;\n  line-height: 120%;\n`;\nconst BCMMessage = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-self: stretch;\n  color: #686b6d;\n  font-size: 14px;\n\n  font-style: normal;\n  font-weight: 400;\n  line-height: 120%;\n`;\nconst BFooter = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: flex-start;\n  gap: 4px;\n  align-self: stretch;\n`;\nconst BFootercont = styled.div`\n  display: flex;\n  align-items: center;\n  align-self: stretch;\n`;\nconst BFootercontTime = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 4px;\n  flex: 1 0 0;\n`;\nconst BFCTimetext = styled.div`\n  display: flex;\n  height: 19.394px;\n  flex-direction: column;\n  justify-content: center;\n  flex: 1 0 0;\n  color: #000;\n  font-size: 14px;\n\n  font-style: normal;\n  font-weight: 300;\n  line-height: normal;\n`;\nconst BFCButton = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  gap: 4px;\n`;\nconst BFCButtonitem = styled.button`\n  display: flex;\n  padding: 2px 12px;\n  align-items: center;\n  gap: 6px;\n  border-radius: 4px;\n  border-width: 1px;\n  border: solid 1px #9333ea;\n\n  background-image: linear-gradient(#fff, #fff),\n    radial-gradient(circle at top left, #f0e1ce, #f0e1ce);\n  background-origin: border-box;\n  background-clip: padding-box, border-box;\n`;\nconst BFCBIText = styled.label`\n  font-size: 12px;\n\n  font-style: normal;\n  font-weight: 500;\n  line-height: 24px;\n  color: #9333ea;\n  cursor: pointer;\n`;\nconst NewComment = styled.textarea`\n  width: 100%;\n  display: flex;\n  height: 100px;\n  padding: 9px 10px 0px 10px;\n  align-items: flex-start;\n\n  gap: 10px;\n  align-self: stretch;\n  border-radius: 8px;\n  border: 1px solid #d0d6d9;\n  background: #fff;\n\n  font-size: 12px;\n\n  font-style: normal;\n  font-weight: 400;\n  line-height: 120%;\n`;\nconst CommentFooter = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: flex-end;\n  justify-content: end;\n  gap: 16px;\n  align-self: stretch;\n`;\nconst CFCancel = styled.button`\n  display: flex;\n  width: 107px;\n  padding: 8px 12px;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n  color: #9333ea;\n  border-radius: 10px;\n  border-width: 1px;\n  border: solid 1px #9333ea;\n\n  background-image: linear-gradient(#fff, #fff),\n    radial-gradient(circle at top left, #f0e1ce, #f0e1ce);\n  background-origin: border-box;\n  background-clip: padding-box, border-box;\n  @media only screen and (max-width: 480px) {\n    width: 100%;\n  }\n`;\n\nconst CFSubmit = styled.button`\n  display: flex;\n  width: 107px;\n  padding: 8px 12px;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n  color: #000;\n  display: flex;\n  width: 107px;\n  padding: 8px 12px;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n  border-radius: 10px;\n  border-width: 1px;\n  border: solid 1px transparent;\n\n  background-image: linear-gradient(#ffd50d, #ffd50d),\n    radial-gradient(circle at top left, #f0e1ce, #f0e1ce);\n  background-origin: border-box;\n  background-clip: padding-box, border-box;\n  @media only screen and (max-width: 480px) {\n    width: 100%;\n  }\n`;\n\nconst CallLibrary = styled.div`\n  display: none;\n`;\n\nconst {\n  widgets,\n  isTest,\n  article,\n  onCloseModal,\n  isReplying,\n  username,\n  placement,\n  originalComment,\n  replyingTo,\n} = props;\n\nlet realArticleId;\nif (originalComment) {\n  realArticleId = originalComment.originalComment.value.comment.realArticleId;\n} else {\n  realArticleId =\n    article.realArticleId ?? `${article.author}-${article.timeCreate}`;\n}\n\nconst libCalls = [];\n\nconst authorForWidget = \"kenrou-it.near\";\n\nconst libSrcArray = [`${authorForWidget}/widget/SayALot.lib.comment`];\n\nfunction callLibs(srcArray, stateUpdate, libCalls) {\n  return (\n    <>\n      {srcArray.map((src) => {\n        return (\n          <Widget\n            src={src}\n            props={{\n              isTest,\n              stateUpdate,\n              libCalls,\n            }}\n          />\n        );\n      })}\n    </>\n  );\n}\n\nfunction stateUpdate(obj) {\n  State.update(obj);\n}\n\nState.init({\n  theme,\n  reply: \"\",\n  cancel: false,\n  e_message: \"\",\n  libCalls,\n});\n\nconst SetText = (txt) => {\n  State.update({ shareText: txt });\n};\n\nfunction addCommentListener() {\n  let newLibCalls = [...libCalls];\n  const comment = {\n    text: state.reply,\n    realArticleId,\n    timestamp: Date.now(),\n    originalCommentId:\n      originalComment.originalComment.value.comment.commentId ??\n      article.realArticleId ??\n      `${article.author}-${article.timeCreate}`,\n    commentId: comment.commentId ?? `c_${context.accountId}-${Date.now()}`,\n  };\n  newLibCalls.push({\n    functionName: \"createComment\",\n    key: \"createComment\",\n    props: { comment, onCommit: onCloseModal },\n  });\n  State.update({ libCalls: newLibCalls });\n}\n\nreturn (\n  <ModalCard>\n    <CommentCard>\n      <H1>{isReplying ? \"Reply to comment\" : \"Add a Comment\"}</H1>\n      <Container>\n        {replyingTo && (\n          <>\n            <CommentBody>\n              <BComment>\n                <BCommentmessage>\n                  <BCMHeader>\n                    <BCMProfile>\n                      <Widget\n                        src=\"mob.near/widget/ProfileImage\"\n                        props={{\n                          accountId: replyingTo,\n                          imageClassName: \"rounded-circle w-100 h-100\",\n                          style: { width: \"25px\", height: \"25px\" },\n                        }}\n                      />\n                    </BCMProfile>\n                    <BCMProfileUsername>\n                      {replyingTo ? \"@\" + replyingTo : \"@user.near\"}\n                    </BCMProfileUsername>\n                  </BCMHeader>\n                  <BCMMessage>\n                    {originalComment &&\n                      originalComment.originalComment.value.comment.text}\n                  </BCMMessage>\n                </BCommentmessage>\n              </BComment>\n              <BFooter>\n                <label>{state.e_message}</label>\n                <BFootercont>\n                  <BFootercontTime>\n                    <img\n                      alt=\"schedule\"\n                      src={\n                        \"https://emerald-related-swordtail-341.mypinata.cloud/ipfs/QmP3uRUgZtqV3HAgcZoYaDA6JSPpFcpqULvgenWUs3ctSP\"\n                      }\n                      style={{ width: \"14px\", height: \"14px\" }}\n                    />\n                  </BFootercontTime>\n                </BFootercont>\n              </BFooter>\n            </CommentBody>\n            <hr\n              styled={{\n                width: \"100%\",\n                height: \"0px\",\n                border: \"1px solid rgba(130, 134, 136, 0.20)\",\n                flex: \"none\",\n                background: \"rgba(130, 134, 136, 0.20)\",\n                margin: \"0px\",\n                flexGrow: \"0\",\n              }}\n            />\n          </>\n        )}\n        <div className=\"w-100 col\">\n          <Widget\n            src={widgets.styledComponents}\n            props={{\n              TextArea: {\n                placeholder: \"Reply here\",\n                maxLength: 2000,\n                value: state.reply,\n                handleChange: (e) =>\n                  State.update({\n                    reply: e.target.value.substring(0, 1000),\n                  }),\n              },\n            }}\n          />\n        </div>\n        <CommentFooter>\n          <Widget\n            src={widgets.styledComponents}\n            props={{\n              Button: {\n                text: \"Cancel\",\n                className: \"secondary dark\",\n                onClick: onCloseModal,\n              },\n            }}\n          />\n          <Widget\n            src={widgets.styledComponents}\n            props={{\n              Button: {\n                text: \"Submit\",\n                onClick: addCommentListener,\n              },\n            }}\n          />\n        </CommentFooter>\n      </Container>\n    </CommentCard>\n    <CallLibrary>\n      {callLibs(libSrcArray, stateUpdate, state.libCalls)}\n    </CallLibrary>\n  </ModalCard>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/sayalot.near/widget/NDC.SayALot.AddComment", "fact_widget_deployments_id": "ff71df0815d30ea3a653f3a793d9c72c", "inserted_timestamp": "2023-08-29T12:20:51.023Z", "modified_timestamp": "2023-08-29T12:20:51.023Z", "__row_index": 25}