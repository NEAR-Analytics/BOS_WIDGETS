{"tx_hash": "rxvDN8QixfRMbWHkx7UYg58UvMbdth5oAZ71DSUtCc2", "action_id_social": "4EFjEQF87y7ir3cJgu3Fjq7PZko8XLQJarHWiRJvT6fK-0-widget", "block_id": 97331808, "block_timestamp": "2023-07-25T22:28:40.903Z", "signer_id": "sayalot.near", "widget_name": "SayALot_AllArticlesList", "source_code": "State.init({ start: Date.now() });\n\nconst isDebug = props.isDebug;\nconst author = props.author;\n\nconst writersWhiteList = props.writersWhiteList ?? [\n  \"neardigitalcollective.near\",\n  \"blaze.near\",\n  \"jlw.near\",\n  \"kazanderdad.near\",\n  \"joep.near\",\n  \"sarahkornfeld.near\",\n  \"yuensid.near\",\n  \"shubham007.near\",\n  \"fiftycent.near\",\n  \"chloe.near\",\n  \"ozymandius.near\",\n];\n\nconst sayALotWorkers = [\n  \"silkking.near\",\n  \"f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb\",\n  \"blaze.near\",\n  \"ayelen.near\",\n  \"kenrou-it.near\",\n];\n\nif (isDebug) {\n  writersWhiteList = sayALotWorkers;\n}\n\nconst addressForArticles = isDebug ? \"test_sayALotArticle\" : \"sayALotArticle\";\nconst articleBlackList = [91092435, 91092174, 91051228, 91092223, 91051203];\nconst authorForWidget = \"sayalot.near\";\n// const authorForWidget =\n// \"f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb\";\n// ========== GET INDEX ARRAY FOR ARTICLES ==========\nconst postsIndex = Social.index(addressForArticles, \"main\", {\n  order: \"desc\",\n  accountId: undefined,\n});\n\nif (!postsIndex) {\n  return \"Loading...\";\n}\n\n// ========== GET ALL ARTICLES ==========\nconst resultArticles =\n  postsIndex &&\n  postsIndex\n    .reduce((acc, { accountId, blockHeight }) => {\n      const postData = Social.get(\n        `${accountId}/${addressForArticles}/main`,\n        blockHeight\n      );\n      const postDataWithBlockHeight = { ...JSON.parse(postData), blockHeight };\n      return [...acc, postDataWithBlockHeight];\n    }, [])\n    .filter((article) =>\n      writersWhiteList.some((addr) => addr === article.author)\n    )\n    .filter((article) => article.lastEditor === article.author)\n    .filter((article) => !articleBlackList.includes(article.blockHeight));\n\nif (resultArticles.length === 0) {\n  return \"Loading...\";\n}\n\n// ========== FILTER DUPLICATES ==========\nlet filteredArticles =\n  resultArticles.length &&\n  resultArticles.reduce((acc, article) => {\n    if (!acc.some(({ articleId }) => articleId === article.articleId)) {\n      return [...acc, article];\n    } else {\n      return acc;\n    }\n  }, []);\n\nif (author) {\n  filteredArticles = filteredArticles.filter(\n    (article) => article.author === author\n  );\n}\n\nconst getDateLastEdit = (timestamp) => {\n  const date = new Date(Number(timestamp));\n  const dateString = {\n    date: date.toLocaleDateString(),\n    time: date.toLocaleTimeString(),\n  };\n  return dateString;\n};\n\nreturn (\n  <div className=\"row card-group py-3\">\n    {filteredArticles.length > 0 &&\n      filteredArticles.map((article) => {\n        // If some widget posts data different than an array it will be ignored\n        if (!Array.isArray(article.tags)) article.tags = [];\n        return (\n          <div\n            className=\"col-sm-12 col-lg-6 col-2xl-4 gy-3\"\n            key={article.articleId}\n          >\n            <div className=\"card h-100\">\n              <a\n                className=\"text-decoration-none text-dark\"\n                href={\n                  isDebug\n                    ? `#/${authorForWidget}/widget/SayALot_OneArticle?articleId=${article.articleId}&blockHeight=${article.blockHeight}&lastEditor=${article.lastEditor}&isDebug=true\n            `\n                    : `#/${authorForWidget}/widget/SayALot_OneArticle?articleId=${article.articleId}&blockHeight=${article.blockHeight}&lastEditor=${article.lastEditor}\n            `\n                }\n              >\n                <div className=\"card-body\">\n                  <div className=\"row d-flex justify-content-center\">\n                    <h5 className=\"card-title text-center pb-2 border-bottom\">\n                      {article.articleId}\n                    </h5>\n                    <div className=\"col flex-grow-1\">\n                      <Widget\n                        src=\"mob.near/widget/Profile.ShortInlineBlock\"\n                        props={{ accountId: article.author, tooltip: true }}\n                      />\n                    </div>\n                    <div className=\"col flex-grow-0\">\n                      <p className=\"card-subtitle text-muted text-end\">\n                        {getDateLastEdit(article.timeCreate).date}\n                      </p>{\" \"}\n                      <p className=\"card-subtitle text-muted text-end\">\n                        {getDateLastEdit(article.timeCreate).time}\n                      </p>\n                    </div>\n                  </div>\n                  <div\n                    className=\"mt-3 alert alert-secondary\"\n                    style={{ backgroundColor: \"white\" }}\n                  >\n                    <div>\n                      Last edit by{\" \"}\n                      <a\n                        href={`https://near.social/#/mob.near/widget/ProfilePage?accountId=${article.lastEditor}`}\n                        style={{ textDecoration: \"underline\" }}\n                      >\n                        {article.lastEditor}\n                      </a>\n                      <br />\n                      Edited on {getDateLastEdit(article.timeLastEdit).date}\n                      <br />\n                      Edit versions: {article.version}\n                    </div>\n                    <Widget\n                      src={`${authorForWidget}/widget/SayALot_TagList`}\n                      props={{ tags: article.tags, isDebug }}\n                    />\n                  </div>\n                </div>\n              </a>\n            </div>\n          </div>\n        );\n      })}\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/sayalot.near/widget/SayALot_AllArticlesList", "fact_widget_deployments_id": "24cc60390c23fad819687254b8af04d4", "inserted_timestamp": "2000-01-01T00:00:00.000Z", "modified_timestamp": "2000-01-01T00:00:00.000Z", "__row_index": 5}