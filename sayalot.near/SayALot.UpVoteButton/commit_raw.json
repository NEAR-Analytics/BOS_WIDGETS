{"tx_hash": "Fz3S5vP3vpCa79Xagq1C9zDTFL2gK3JbUXeJhdpGyJNa", "action_id_social": "C7PWBQXm4HzmSuEve9i8JKYZowwPcciqgcP1XK5zbTGL-0-widget", "block_id": 104268305, "block_timestamp": "2023-10-26T20:25:27.103Z", "signer_id": "sayalot.near", "widget_name": "SayALot.UpVoteButton", "source_code": "// SayALot.UpVoteButton\r\n\r\nconst {\r\n  isTest,\r\n  authorForWidget,\r\n  reactedElementData,\r\n  widgets,\r\n  disabled,\r\n  articleSbts,\r\n  upVotes,\r\n  callLibs,\r\n} = props;\r\n// console.log(\"props upVotes: \", upVotes);\r\nconst data = reactedElementData;\r\n\r\nconst libSrcArray = [widgets.libUpVotes];\r\n\r\nconst initLibCalls = {\r\n  upVotes: [\r\n    {\r\n      functionName: \"getUpVotes\",\r\n      key: \"upVotesBySBT\",\r\n      props: {\r\n        id: data.id ?? `${data.author}-${data.timeCreate}`,\r\n        sbtsNames: articleSbts,\r\n      },\r\n    },\r\n  ],\r\n};\r\nconst initUpVotesBySBT = {};\r\n\r\nif (!upVotes) {\r\n  State.init({\r\n    libCalls: initLibCalls,\r\n    upVotes: [],\r\n    upVotesBySBT: initUpVotesBySBT,\r\n  });\r\n} else {\r\n  State.init({\r\n    upVotes,\r\n    libCalls: { upVotes: [] },\r\n  });\r\n}\r\n\r\nif (state.upVotesBySBT && Object.keys(state.upVotesBySBT).length > 0) {\r\n  // console.log(\r\n  //   \"Object.keys(state.upVotesBySBT): \",\r\n  //   Object.keys(state.upVotesBySBT)\r\n  // );\r\n\r\n  const key = Object.keys(state.upVotesBySBT)[0]; // There should always be one for now\r\n  // console.log(\"key: \", key);\r\n  const newUpvotes = state.upVotesBySBT[key];\r\n  // console.log(\"newUpvotes: \", newUpvotes);\r\n  if (JSON.stringify(state.upVotes) !== JSON.stringify(newUpvotes)) {\r\n    State.update({ upVotes: newUpvotes });\r\n  }\r\n}\r\n\r\nlet upVotesData = state.upVotes;\r\n\r\n// console.log(\"upVotesData: \", upVotesData);\r\n\r\nlet userVote = upVotesData.find((vote) => vote.accountId === context.accountId);\r\n\r\nlet hasUserVoted = userVote !== undefined;\r\n\r\nfunction getUpVoteButtonClass() {\r\n  if (hasUserVoted) {\r\n    return \"info\";\r\n  } else {\r\n    return \"info outline\";\r\n  }\r\n}\r\n\r\nfunction stateUpdate(obj) {\r\n  State.update(obj);\r\n}\r\n\r\nfunction upVoteButtonListener() {\r\n  let newLibCalls = Object.assign({}, state.libCalls);\r\n\r\n  if (!hasUserVoted) {\r\n    console.log(2, data);\r\n    newLibCalls.upVotes.push({\r\n      functionName: \"addVote\",\r\n      key: \"newVote\",\r\n      props: {\r\n        id: data.id ?? `${data.author}-${data.timeCreate}`,\r\n        articleSbts: data.sbts,\r\n      },\r\n    });\r\n  } else {\r\n    newLibCalls.upVotes.push({\r\n      functionName: \"deleteVote\",\r\n      key: \"deletedVote\",\r\n      props: {\r\n        id: data.id ?? `${data.author}-${data.timeCreate}`,\r\n        upVoteId: userVote.value.upVoteId,\r\n      },\r\n    });\r\n  }\r\n  State.update({ libCalls: newLibCalls });\r\n}\r\n\r\nconst IconContainer = styled.div`\r\n  transform: rotate(-90deg);\r\n`;\r\n\r\nconst Icon = styled.i`\r\n  margin: 0px !important;\r\n`;\r\n\r\nconst CallLibrary = styled.div`\r\n  display: none;\r\n`;\r\n\r\nreturn (\r\n  <>\r\n    <Widget\r\n      src={widgets.newStyledComponents.Input.Button}\r\n      props={{\r\n        // text: `+${upVotesData.length}`,\r\n        children: (\r\n          <div className=\"d-flex\">\r\n            <span>{`+${upVotesData.length}`}</span>\r\n            <IconContainer>\r\n              <Icon className=\"bi bi-fast-forward-fill\"></Icon>\r\n            </IconContainer>\r\n          </div>\r\n        ),\r\n        disabled,\r\n        className: `${getUpVoteButtonClass()}`,\r\n        size: \"sm\",\r\n        onClick: upVoteButtonListener,\r\n        // icon: (\r\n        //   <IconContainer>\r\n        //     <Icon className=\"bi bi-fast-forward-fill\"></Icon>\r\n        //   </IconContainer>\r\n        // ),\r\n        // icon: (\r\n        //   <IconContainer>\r\n        //     <Icon className=\"bi bi-fast-forward-button\"></Icon>\r\n        //   </IconContainer>\r\n        // ),\r\n        // icon: <i className=\"bi bi-hand-thumbs-up\"></i>,\r\n        // icon: \"\u23eb\",\r\n      }}\r\n    />\r\n\r\n    <CallLibrary>\r\n      {libSrcArray.map((src) => {\r\n        return callLibs(\r\n          src,\r\n          stateUpdate,\r\n          state.libCalls,\r\n          { baseAction: \"sayALotUpVote\" },\r\n          \"Up vote button\"\r\n        );\r\n      })}\r\n    </CallLibrary>\r\n  </>\r\n);\r\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/sayalot.near/widget/SayALot.UpVoteButton", "fact_widget_deployments_id": "055af29d75ec07a2a881538b308b4d20", "inserted_timestamp": "2023-10-26T22:26:42.958Z", "modified_timestamp": "2023-10-26T22:26:42.958Z", "__row_index": 35}