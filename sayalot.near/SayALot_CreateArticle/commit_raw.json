{"tx_hash": "9E1eRvabn8ngL9U2xHdMj8zzbrxJ1xHTYJa5MTpmPT27", "action_id_social": "3wKg7HTwgMipvoN6HxTM4EmAh136aBbRVPwy7QJWkZJY-0-widget", "block_id": 96414360, "block_timestamp": "2023-07-14T00:33:54.189Z", "signer_id": "sayalot.near", "widget_name": "SayALot_CreateArticle", "source_code": "const addressForArticles = \"sayALotArticle\";\nconst authorForWidget = \"sayalot.near\";\nconst accountId = props.accountId ?? context.accountId;\nif (!accountId) {\n  return \"No account ID\";\n}\nconst profile = props.profile ?? Social.getr(`${accountId}/profile`);\nif (profile === null) {\n  return \"Loading\";\n}\n\nconst initialBody = `# h1 Heading 8-) \n## h2 Heading \n`;\n\nconst errTextNoBody = \"ERROR: no article Body\",\n  errTextNoId = \"ERROR: no article Id\",\n  errTextDublicatedId = \"ERROR: there is article with such name\";\n\nconst initialCreateArticleState = {\n  articleId: \"\",\n  articleBody: initialBody,\n  errorId: \"\",\n  errorBody: \"\",\n  tags: {},\n  saveComplete: false,\n};\n\nState.init(initialCreateArticleState);\nconst tagsArray = state.tags ? state.tags : [];\n\nconst getArticleData = () => {\n  const args = {\n    articleId: state.articleId,\n    author: accountId,\n    lastEditor: accountId,\n    timeLastEdit: Date.now(),\n    timeCreate: Date.now(),\n    body: state.articleBody,\n    version: 0,\n    navigation_id: null,\n    tags: tagsArray,\n  };\n  return args;\n};\n\nconst composeData = () => {\n  const data = {\n    sayALotArticle: {\n      main: JSON.stringify(getArticleData()),\n    },\n    index: {\n      sayALotArticle: JSON.stringify({\n        key: \"main\",\n        value: {\n          type: \"md\",\n        },\n      }),\n    },\n  };\n\n  if (tagsArray.length) {\n    data.index.tag = JSON.stringify(\n      tagsArray.map((tag) => ({\n        key: tag,\n        value: item,\n      }))\n    );\n  }\n\n  return data;\n};\n\n// === SAVE HANDLER ===\nconst saveHandler = (e) => {\n  State.update({\n    errorId: \"\",\n    errorBody: \"\",\n  });\n  if (state.articleId && state.articleBody) {\n    // TODO check it automaticle\n    const isArticleIdDuplicated = false;\n\n    if (!isArticleIdDuplicated) {\n      const newData = composeData();\n\n      State.update({ saving: true });\n\n      Social.set(newData, {\n        force: true,\n        onCommit: () => {\n          State.update({ saveComplete: true, saving: false });\n        },\n        onCancel: () => {\n          State.update({ saving: false });\n        },\n      });\n    } else {\n      State.update({\n        errorId: errTextDublicatedId,\n      });\n    }\n  } else {\n    if (!state.articleId) {\n      State.update({\n        errorId: errTextNoId,\n      });\n    }\n    if (!state.articleBody) {\n      State.update({ errorBody: errTextNoBody });\n    }\n  }\n};\n\nconst Button = styled.button` \n  margin: 0px 1rem; \n  display: inline-block; \n  text-align: center; \n  vertical-align: middle; \n  cursor: pointer; \n  user-select: none; \n  transition: color 0.15s ease-in-out,background-color 0.15s ease-in-out,border-color 0.15s ease-in-out,box-shadow 0.15s ease-in-out; \n \n  border: 2px solid transparent; \n  font-weight: 500; \n  padding: 0.3rem 0.5rem; \n  background-color: #010A2D; \n  border-radius: 12px; \n  color: white; \n  text-decoration: none;   \n \n  &:hover { \n    color: #010A2D; \n    background-color: white; \n  } \n`;\n\nreturn (\n  <div\n    className=\"container-fluid\"\n    style={\n      state.saveComplete\n        ? {\n            backgroundColor: \"rgb(230, 230, 230)\",\n            borderRadius: \"20px\",\n            padding: \"0 0 1rem 0 \",\n            position: \"relative\",\n            overflow: \"hidden\",\n            height: \"80vh\",\n          }\n        : {\n            backgroundColor: \"rgb(230, 230, 230)\",\n            borderRadius: \"20px\",\n            padding: \"0 0 1rem 0 \",\n            position: \"relative\",\n          }\n    }\n  >\n    {state.saveComplete && (\n      <a\n        style={{\n          position: \"absolute\",\n          top: \"0\",\n          height: \"100%\",\n          width: \"100%\",\n          backdropFilter: \"blur(5px)\",\n        }}\n        href={`https://near.social/#/${authorForWidget}/widget/SayALot`}\n      >\n        <div\n          style={{\n            width: \"50%\",\n            margin: \"0 auto\",\n            position: \"relative\",\n            top: \"40vh\",\n          }}\n        >\n          <h3\n            style={{\n              textAlign: \"center\",\n              color: \"black\",\n              backgroundColor: \"rgb(230, 230, 230)\",\n              zIndex: \"2\",\n            }}\n            className=\"rounded-pill p-3\"\n          >\n            Click to continue\n          </h3>\n        </div>\n      </a>\n    )}\n    <Widget\n      src={`${authorForWidget}/widget/SayALot_MainNavigation`}\n      props={{ currentNavPill: \"create\" }}\n    />\n    <div\n      style={{\n        margin: \"0 auto\",\n        width: \"90%\",\n        minWidth: \"360px\",\n        backgroundColor: \"white\",\n        padding: \"1rem\",\n        borderRadius: \"20px\",\n      }}\n    >\n      <h1 className=\"mb-3\"> Create Article</h1>\n      <div>\n        <div>\n          <Button type=\"submit\" onClick={saveHandler}>\n            {state.saving && (\n              <div\n                className=\"spinner-border text-secondary\"\n                style={{ height: \"1rem\", width: \"1rem\" }}\n                role=\"status\"\n              >\n                <span className=\"sr-only\" title=\"Loading...\"></span>\n              </div>\n            )}\n            Save Article\n          </Button>\n        </div>\n        <div className=\"d-flex flex-column pt-3\">\n          <label for=\"inputArticleId\">\n            Input article id (case-sensitive, without spaces):\n          </label>\n          <label for=\"inputArticleId\" className=\"small text-danger\">\n            {state.errorId}\n          </label>\n          <Widget\n            src={`f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb/widget/fasterTextInput`}\n            props={{\n              firstText: state.articleId,\n              stateUpdate: (obj) => State.update(obj),\n              filterText: (e) => e.target.value.replace(/\\s+/g, \"\"),\n            }}\n          />\n        </div>\n        <div className=\"d-flex flex-column pt-3\">\n          {!state.saveComplete && (\n            <Widget\n              src=\"mob.near/widget/TagsEditor\"\n              props={{\n                initialTagsObject: state.tags,\n                placeholder: \"Input tags\",\n                setTagsObject: (tags) => {\n                  state.tags = Object.keys(tags);\n                  State.update();\n                },\n              }}\n            />\n          )}\n        </div>\n        <div className=\"d-flex flex-column pt-3\">\n          <label for=\"textareaArticleBody\">\n            Input article body (in makrdown format):\n          </label>\n          <label for=\"textareaArticleBody\" className=\"small text-danger\">\n            {state.errorBody}\n          </label>\n          <div className=\"d-flex gap-2\" style={{ minHeight: \"300px\" }}>\n            <div className=\"w-50\">\n              <Widget\n                src=\"mob.near/widget/MarkdownEditorIframe\"\n                props={{\n                  initialText: initialBody,\n                  onChange: (articleBody) => State.update({ articleBody }),\n                }}\n              />\n            </div>\n            <div className=\"w-50\">\n              <Widget\n                src=\"mob.near/widget/SocialMarkdown\"\n                props={{ text: state.articleBody }}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/sayalot.near/widget/SayALot_CreateArticle", "fact_widget_deployments_id": "083b7baafe8261917b5c0d940cb8cfda", "inserted_timestamp": "2000-01-01T00:00:00.000Z", "modified_timestamp": "2000-01-01T00:00:00.000Z", "__row_index": 16}