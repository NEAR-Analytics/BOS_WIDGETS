{"tx_hash": "36xXTkQcYnx9fmTHLqD5uSPwWW4qgvNgciovmkLLYBFq", "action_id_social": "7WZ4q89PyMw1MbV7B2RTn7QUWwptU5b2EJKdJ9zb7jqZ-0-widget", "block_id": 104283623, "block_timestamp": "2023-10-27T01:42:49.603Z", "signer_id": "ad8383b55371a8f32ca19cfc47da0677dc2b556e6e074eba964c8797bc9ff47a", "widget_name": "boroughs.index", "source_code": "const MAP_STYLE = \"mapbox://styles/mapbox/outdoors-v12\";\nconst MAP_TOKEN =\n  \"pk.eyJ1IjoidGVqMDEiLCJhIjoiY2xqcHZ2dGpkMDB5azNsbzQ0bmMwNjRjaCJ9.FVv2zRPaLwzZMgagbI2YZw\";\n\nconst center = [-74.00597, 40.71427];\nconst zoom = 10;\nconst accountId = context.accountId;\n\nconst questions = [\n  { key: 1, value: \"How would you recognize someone from your borough?\" },\n  { key: 2, value: \"What's a popular dish?\" },\n  { key: 3, value: \"Name a famous landmark.\" },\n  { key: 4, value: \"What's some slang from your neighborhood?\" },\n  { key: 5, value: \"What are the top 3 destinations?\" },\n  { key: 6, value: \"What are people most likely doing on a Saturday?\" },\n  { key: 7, value: \"What are you most likely to see on the train?\" },\n  { key: 8, value: \"How do people say goodbye?\" },\n  { key: 9, value: \"What\u2019s the first thing a stranger asks when visiting?\" },\n  { key: 10, value: \"Where do the locals go?\" },\n];\n\nconst Container = styled.div`\n  display: flex;\n  width: 100%;\n  margin-top: var(--header-height);\n  height: calc(100vh - 70px);\n  align-items: stretch;\n  flex-direction: column;\n  overflow: auto;\n  position: relative;\n  z-index: 100;\n`;\n\nconst Button = styled.button`\n  background: #191a1a;\n  border-radius: 6px;\n  color: white;\n  z-index: 1;\n  padding: 10px 22px;\n`;\n\nconst Profile = styled.div`\n  position: absolute;\n  right: 50px;\n  top: 30px;\n  @media (max-width: 510px) {\n    padding: 6px 15px;\n    right: 15px;\n    top: 15px;\n  }\n`;\n\nconst Inspect = styled.div`\n  position: absolute;\n  left: 50px;\n  top: 30px;\n  @media (max-width: 510px) {\n    padding: 6px 15px;\n    right: 15px;\n    top: 15px;\n  }\n`;\n\nconst Location = styled.div`\n  position: absolute;\n  bottom: 50px;\n  @media (max-width: 510px) {\n    padding: 6px 15px;\n    bottom: 15px;\n  }\n`;\n\nconst markers = Social.get(`*/thing/citbikeMarker`, \"final\", {\n  subscribe: \"true\",\n});\n\nif (!markers) {\n  return <></>;\n}\n\nconst dataMap = {};\n\nObject.keys(markers).forEach((accountId) => {\n  if (markers[accountId].thing && markers[accountId].thing.citbikeMarker) {\n    const markerObj = JSON.parse(markers[accountId].thing.citbikeMarker);\n    dataMap[accountId] = { accountId, ...markerObj };\n  }\n});\n\nState.init({\n  locations: [],\n  edit: false,\n  currentLocation: (dataMap[accountId] && dataMap[accountId].coordinates) || {},\n});\n\nconst handleSave = (data) => {\n  if (!data) {\n    data = dataMap[accountId].data;\n  }\n  Social.set(\n    {\n      thing: {\n        citbikeMarker: {\n          \"\": JSON.stringify({\n            coordinates: state.currentLocation,\n            data,\n          }),\n        },\n      },\n    },\n    {\n      onCommit: () => {\n        State.update({ edit: false, showForm: false, showInspect: false });\n      },\n      onCancel: () =>\n        State.update({ edit: false, showForm: false, showInspect: false }),\n    }\n  );\n};\n\nfunction DownIcon() {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"20\"\n      height=\"20\"\n      viewBox=\"0 0 48 48\"\n    >\n      <mask id=\"ipSDownOne0\">\n        <path\n          fill=\"#fff\"\n          stroke=\"#fff\"\n          strokeLinejoin=\"round\"\n          strokeWidth=\"4\"\n          d=\"M36 19L24 31L12 19h24Z\"\n        />\n      </mask>\n      <path fill=\"currentColor\" d=\"M0 0h48v48H0z\" mask=\"url(#ipSDownOne0)\" />\n    </svg>\n  );\n}\n\nfunction LocationIcon() {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n    >\n      <g\n        fill=\"none\"\n        stroke=\"currentColor\"\n        strokeLinejoin=\"round\"\n        strokeWidth=\"2\"\n      >\n        <path d=\"M13 9a1 1 0 1 1-2 0a1 1 0 0 1 2 0Z\" />\n        <path d=\"M17.5 9.5c0 3.038-2 6.5-5.5 10.5c-3.5-4-5.5-7.462-5.5-10.5a5.5 5.5 0 1 1 11 0Z\" />\n      </g>\n    </svg>\n  );\n}\n\nreturn (\n  <Container>\n    {/* Absolute Positioning */}\n    {accountId && (\n      <Profile>\n        <Button\n          onClick={() => {\n            State.update({ showForm: !state.showForm });\n          }}\n        >\n          {`What's your Spark?`}\n          <DownIcon />\n        </Button>\n      </Profile>\n    )}\n    {accountId && state.showForm && (\n      <Widget\n        src={\n          \"ad8383b55371a8f32ca19cfc47da0677dc2b556e6e074eba964c8797bc9ff47a/widget/boroughs.form\"\n        }\n        props={{\n          data: (dataMap[accountId] && dataMap[accountId].data) || {},\n          handleSave,\n          questions,\n        }}\n      />\n    )}\n\n    {state.showInspect && (\n      <Widget\n        src={\n          \"ad8383b55371a8f32ca19cfc47da0677dc2b556e6e074eba964c8797bc9ff47a/widget/boroughs.inspect\"\n        }\n        props={{\n          focusedMarker: state.focusedMarker,\n          questions,\n        }}\n      />\n    )}\n\n    {/* Absolute Positioning */}\n    {accountId && (\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <Location>\n          <Button\n            onClick={\n              state.edit\n                ? () => handleSave()\n                : () => State.update({ edit: !state.edit })\n            }\n          >\n            {`${!state.edit ? \"Mark your Spark!\" : \"Save\"}`}\n            <LocationIcon />\n          </Button>\n          {state.edit && (\n            <Button\n              onClick={() => State.update({ edit: false, showForm: false })}\n            >\n              Cancel\n            </Button>\n          )}\n        </Location>\n      </div>\n    )}\n\n    <Widget\n      src={\n        \"ad8383b55371a8f32ca19cfc47da0677dc2b556e6e074eba964c8797bc9ff47a/widget/boroughs.map\"\n      }\n      props={{\n        API_URL,\n        accessToken: MAP_TOKEN,\n        styleUrl: MAP_STYLE,\n        center,\n        zoom,\n        markers: Object.values(dataMap),\n        edit: state.edit,\n        onMapClick: (e) => {\n          State.update({ currentLocation: e.coordinates, showInspect: false });\n        },\n        onMarkerClick: (e) => {\n          State.update({ focusedMarker: e, showInspect: true });\n        },\n      }}\n    />\n  </Container>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/ad8383b55371a8f32ca19cfc47da0677dc2b556e6e074eba964c8797bc9ff47a/widget/boroughs.index", "fact_widget_deployments_id": "84093316b131cae5ed55dc4e493de5da", "inserted_timestamp": "2023-10-27T03:30:27.913Z", "modified_timestamp": "2023-10-27T03:30:27.913Z", "__row_index": 4}