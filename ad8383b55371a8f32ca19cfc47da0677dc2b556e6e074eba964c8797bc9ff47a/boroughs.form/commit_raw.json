{"tx_hash": "JAX8NSWbEnyKzUrE2r3wqEHGU9d2iideaPHQqArF7wNY", "action_id_social": "36cyjRhHdWX6fzkJe6BoxqVVEV5fxaBtE3BRhSnXfpSQ-0-widget", "block_id": 104283525, "block_timestamp": "2023-10-27T01:40:31.371Z", "signer_id": "ad8383b55371a8f32ca19cfc47da0677dc2b556e6e074eba964c8797bc9ff47a", "widget_name": "boroughs.form", "source_code": "const data = props.data;\nconst handleSave = props.handleSave || (() => {});\nconst questions = props.questions;\n\nconst ModalOverlay = styled.div`\n  position: absolute;\n  right: 50px;\n  top: 80px;\n  background-color: #191a1a;\n  border-radius: 12px;\n  display: flex;\n  flex-direction: column;\n  // z-index: 100;\n  width: 400px;\n  @media (max-width: 510px) {\n    right: 10px;\n    top: 54px;\n    width: 96%;\n  }\n`;\n\nconst ModalContent = styled.div`\n  padding: 20px;\n  width: 100%;\n  color: white;\n  border-radius: 4px;\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n`;\n\nconst ModalTitle = styled.h4`\n  margin-bottom: 10px;\n`;\n\nconst Input = styled.input`\n  background-color: rgba(0, 0, 0, 0.2);\n  border: 2px solid rgba(255, 255, 255, 0.8);\n  min-height: 46px;\n  color: #fff;\n  font-size: 14px;\n  width: 100%;\n  padding: 0px 11px;\n  margin-bottom: 10px;\n`;\nconst Textarea = styled.textarea`\n  background-color: rgba(0, 0, 0, 0.2);\n  border: 2px solid rgba(255, 255, 255, 0.8);\n  min-height: 120px;\n  color: #fff;\n  font-size: 14px;\n  width: 100%;\n  padding: 0px 11px;\n  margin-bottom: 10px;\n`;\n\nconst Label = styled.label`\n  display: block;\n  color: #fff;\n  font-size: 16px;\n  position: relative;\n  padding-right: 5px;\n  margin-bottom: 10px;\n`;\n\nconst Button = styled.button`\n  color: rgba(255, 255, 255, 0.8);\n  font-size: 16px;\n  padding: 5px 16px;\n  font-weight: 400;\n  background: none;\n  border: 1px solid rgba(255, 255, 255, 0.2);\n  box-shadow: 0 2px 0 rgba(0, 0, 0, 0.02);\n  height: 40px;\n  border-radius: 40px;\n  line-height: 29px;\n  letter-spacing: 0.01em;\n  display: flex;\n  align-items: center;\n`;\n\nconst SaveButton = styled.button`\n  color: rgba(255, 255, 255, 0.8);\n  font-size: 16px;\n  padding: 5px 16px;\n  font-weight: 400;\n  background: none;\n  border: 1px solid rgba(255, 255, 255, 0.2);\n  box-shadow: 0 2px 0 rgba(0, 0, 0, 0.02);\n  height: 40px;\n  border-radius: 40px;\n  line-height: 29px;\n  letter-spacing: 0.01em;\n  display: flex;\n  align-items: center;\n\n  background-color: var(--primary-color);\n  width: 100%;\n  margin-left: auto;\n  padding: 5px 20px;\n  text-align: center;\n`;\n\nconst FlexContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst QuestionText = styled.span`\n  flex-grow: 1;\n  margin-right: 10px;\n  white-space: normal;\n  word-wrap: break-word;\n`;\n\nconst ShuffleIcon = styled.span`\n  cursor: pointer;\n  flex-shrink: 0;\n  background-color: var(--primary-color);\n  padding: 5px 8px;\n  border-radius: 10px;\n`;\n\nfunction getRandomIndex() {\n  return Math.floor(Math.random() * questions.length);\n}\n\nState.init({\n  name: data.name || \"\",\n  description: data.description || \"\",\n  currentQuestionIndex: getRandomIndex(),\n  answers: data.answers || {},\n});\n\n// function shuffleQuestion() {\n//   State.update({ currentQuestionIndex: getRandomIndex() });\n// }\n\nconst handleAnswerChange = (value) => {\n  // const currentQuestion = questions[state.currentQuestionIndex];\n  State.update({\n    answers: {\n      // ...state.answers,\n      [\"what-should-people-know\"]: value,\n    },\n  });\n};\n\nreturn (\n  <ModalOverlay>\n    <ModalContent>\n      <ModalTitle>What's your Spark?</ModalTitle>\n      <div>\n        <Label>Name it!</Label>\n        <Input\n          value={state.name}\n          onChange={(v) => State.update({ name: v.target.value })}\n        />\n      </div>\n      <div>\n        <Label>Describe it!</Label>\n        <Input\n          value={state.description}\n          onChange={(v) =>\n            State.update({\n              description: v.target.value,\n            })\n          }\n        />\n      </div>\n      <div>\n        <Label>\n          <FlexContainer>\n            <QuestionText>\n              What should people know about it?\n              {/* {questions[state.currentQuestionIndex].value} */}\n            </QuestionText>\n            {/* <ShuffleIcon onClick={shuffleQuestion}>\n              <i className=\"bi bi-shuffle\" />\n            </ShuffleIcon> */}\n          </FlexContainer>\n        </Label>\n        <Textarea\n          onChange={(e) => handleAnswerChange(e.target.value)}\n          value={state.answers[\"what-should-people-know\"] || \"\"}\n          // value={state.answers[questions[state.currentQuestionIndex].key] || \"\"}\n        ></Textarea>\n      </div>\n      <div>\n        <SaveButton\n          onClick={() =>\n            handleSave({\n              name: state.name,\n              description: state.description,\n              answers: state.answers,\n            })\n          }\n        >\n          Save\n        </SaveButton>\n      </div>\n    </ModalContent>\n  </ModalOverlay>\n);\n", "metadata": {"platform": "jutsu.ai"}, "branch": {"draft": null}, "widget_modules_used": null, "widget_url": "https://near.social/#/ad8383b55371a8f32ca19cfc47da0677dc2b556e6e074eba964c8797bc9ff47a/widget/boroughs.form", "fact_widget_deployments_id": "30247a43634617447f7f9d2996832564", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}