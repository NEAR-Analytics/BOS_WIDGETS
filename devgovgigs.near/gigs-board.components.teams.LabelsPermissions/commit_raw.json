{"tx_hash": "DrVuAUkvii4i2WFQXYxwptkSATP2pLFGsgqW8H6Y4DC4", "action_id_social": "7rrdtRBiiH4K7yz5MJAxte9SnMiRrm1jksN1i1Eufm2E-0-widget", "block_id": 93246816, "block_timestamp": "2023-06-02T00:50:43.166Z", "signer_id": "devgovgigs.near", "widget_name": "gigs-board.components.teams.LabelsPermissions", "source_code": "/* INCLUDE: \"common.jsx\" */\nconst nearDevGovGigsContractAccountId =\n  props.nearDevGovGigsContractAccountId ||\n  (context.widgetSrc ?? \"devgovgigs.near\").split(\"/\", 1)[0];\n\nconst nearDevGovGigsWidgetsAccountId =\n  props.nearDevGovGigsWidgetsAccountId ||\n  (context.widgetSrc ?? \"devgovgigs.near\").split(\"/\", 1)[0];\n\nfunction widget(widgetName, widgetProps, key) {\n  widgetProps = {\n    ...widgetProps,\n    nearDevGovGigsContractAccountId: props.nearDevGovGigsContractAccountId,\n    nearDevGovGigsWidgetsAccountId: props.nearDevGovGigsWidgetsAccountId,\n    referral: props.referral,\n  };\n\n  return (\n    <Widget\n      src={`${nearDevGovGigsWidgetsAccountId}/widget/gigs-board.${widgetName}`}\n      props={widgetProps}\n      key={key}\n    />\n  );\n}\n\nfunction href(widgetName, linkProps) {\n  linkProps = { ...linkProps };\n\n  if (props.nearDevGovGigsContractAccountId) {\n    linkProps.nearDevGovGigsContractAccountId =\n      props.nearDevGovGigsContractAccountId;\n  }\n\n  if (props.nearDevGovGigsWidgetsAccountId) {\n    linkProps.nearDevGovGigsWidgetsAccountId =\n      props.nearDevGovGigsWidgetsAccountId;\n  }\n\n  if (props.referral) {\n    linkProps.referral = props.referral;\n  }\n\n  const linkPropsQuery = Object.entries(linkProps)\n    .filter(([_key, nullable]) => (nullable ?? null) !== null)\n    .map(([key, value]) => `${key}=${value}`)\n    .join(\"&\");\n\n  return `/#/${nearDevGovGigsWidgetsAccountId}/widget/gigs-board.pages.${widgetName}${\n    linkPropsQuery ? \"?\" : \"\"\n  }${linkPropsQuery}`;\n}\n/* END_INCLUDE: \"common.jsx\" */\n\nconst access_info =\n  Near.view(nearDevGovGigsContractAccountId, \"get_access_control_info\") ?? null;\n\nif (!access_info) {\n  return <div>Loading...</div>;\n}\n\nconst rules_list = props.rules_list ?? access_info.rules_list;\n\nconst permissionExplainer = (permission) => {\n  if (permission.startsWith(\"starts-with:\")) {\n    let s = permission.substring(\"starts-with:\".length);\n    if (s == \"\") {\n      return \"Any label\";\n    } else {\n      return `Labels that start with \"${s}\"`;\n    }\n  } else {\n    return permission;\n  }\n};\n\nreturn (\n  <div className=\"card border-secondary\" key=\"labelpermissions\">\n    <div className=\"card-header\">\n      <i class=\"bi-lock-fill\"> </i>\n      <small class=\"text-muted\">Restricted Labels</small>\n    </div>\n    <ul class=\"list-group list-group-flush\">\n      {Object.entries(rules_list).map(([pattern, metadata]) => (\n        <li class=\"list-group-item\" key={pattern}>\n          <span class=\"badge text-bg-primary\" key={`${pattern}-permission`}>\n            {permissionExplainer(pattern)}\n          </span>{\" \"}\n          {metadata.description}\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/devgovgigs.near/widget/gigs-board.components.teams.LabelsPermissions", "fact_widget_deployments_id": "bb7f45113f87d9721cc8ff80290f823e", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 14}