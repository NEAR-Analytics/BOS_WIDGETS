{"tx_hash": "5bJ1TbvL9cSiyGwNUKuURQ2K4CRFhYzQFxoZLNfPgxfM", "action_id_social": "HY8tFiDoSQTiZQKbpUbCfHZJaHFw11dyXQkaQzfuj6xh-0-widget", "block_id": 108348895, "block_timestamp": "2023-12-19T19:08:04.007Z", "signer_id": "mctery.near", "widget_name": "NearFillar", "source_code": "State.init({\n  address: null,\n  route: \"def\",\n  cid: null,\n  filename: null,\n  uploading_file: false,\n  api: \"https://glowworm-organic-oddly.ngrok-free.app\",\n  graphQL: \"https://air3-database.hasura.app/api/rest/\",\n  graphQL_token:\n    \"Hyi0kHeCvYUVfSJpLWK520VLjSIKXsJVIOwTy938xZdQjzLjvhsugLn89eqsrA5n\",\n  ipfsUrl: \"https://ipfs.near.social/ipfs/\",\n});\nfunction _init() {\n  const eth_address = Ethers.send(\"eth_requestAccounts\", [])[0];\n  if (eth_address) {\n    eth_address.toLowerCase();\n    let ipfs_list = fetchGraphQL(\"getuseripfs\", \"POST\", {\n      _address: eth_address,\n    });\n    State.update({\n      address: eth_address,\n      route: \"drive\",\n      ipfs_list: ipfs_list.uploads,\n    });\n  } else {\n    State.update({ route: \"def\", address: null });\n  }\n}\nfunction fetchGraphQL(rest, method, data) {\n  try {\n    let res = fetch(`${state.graphQL}/${rest}`, {\n      method: method,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-hasura-admin-secret\": state.graphQL_token,\n      },\n      body: JSON.stringify(data),\n    });\n    return res.body;\n  } catch (e) {\n    return false;\n  }\n}\nfunction fetchData(url, method, data) {\n  try {\n    let response = fetch(url, {\n      method: method,\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    });\n    return response;\n  } catch (e) {\n    return false;\n  }\n}\nfunction getHeader() {\n  const address = state.address;\n  return (\n    <div>\n      <div class=\"navbar navbar-expand-lg bg-body-tertiary\">\n        <div class=\"container-fluid\">\n          <a class=\"navbar-brand\" href=\"#\">\n            NearFillar\n          </a>\n          <div class=\"d-flex\">\n            <div class=\"navbar-nav\">\n              {address ? (\n                <>\n                  <div class=\"nav-item p-1\">\n                    0{address.substring(1, 6)}...\n                    {address.substring(address.length - 4, address.length)}\n                  </div>\n                  <Web3Connect\n                    class=\"nav-item btn mt-3\"\n                    connectLabel=\"Disconnect\"\n                  />\n                </>\n              ) : (\n                <Web3Connect class=\"nav-item btn mt-3\" connectLabel=\"Connect\" />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\nfunction getFooter() {\n  return (\n    <div class=\"d-flex flex-wrap justify-content-between align-items-center py-3 my-4 border-top\">\n      NearFillar 1.1 beta #developer #bitkubblockathon\n    </div>\n  );\n}\nfunction setUploadFile() {\n  try {\n    State.update({ uploading_file: true });\n    Ethers.provider()\n      .getSigner()\n      .signMessage(`${state.address}${state.filename}`)\n      .then((result_sign) => {\n        State.update({ uploading_file: false });\n        let source = {\n          user_eth_address: state.address,\n          ipfs_cid: state.cid,\n          ipns_name: state.filename,\n          project_name: state.project_name,\n          signature: result_sign,\n        };\n        fetchData(`${state.api}/create`, \"POST\", source);\n      });\n  } catch (e) {\n    return false;\n  }\n}\nfunction setUpdateFile(item) {\n  try {\n    State.update({ uploading_file: true });\n    Ethers.provider()\n      .getSigner()\n      .signMessage(`${state.address}${item.ipns_name}`)\n      .then((result_sign) => {\n        State.update({ uploading_file: false });\n        let source = {\n          user_eth_address: state.address,\n          ipns_from_generate: item.ipns_from_generate,\n          ipfs_cid: state.ipfs_replace_cid,\n          signature: result_sign,\n        };\n        fetchData(`${state.api}/replace`, \"POST\", source);\n      });\n  } catch (e) {\n    return false;\n  }\n}\nfunction getIPFSInfo(info) {\n  return (\n    <div class=\"card mb-3\" style={{ width: \"30rem\" }}>\n      <div class=\"row g-0\">\n        <div class=\"col-md-4 text-center\">\n          <img\n            class=\"img-thumbnail\"\n            width={\"100px\"}\n            height={\"100px\"}\n            src={`https://ipfs.io/ipfs/${info.ipfs_cid}`}\n          ></img>\n        </div>\n        <div class=\"col-md-8\">\n          <div class=\"card-body\">\n            <h6 class=\"card-title\">{getLongName(info.ipfs_cid)}</h6>\n            <a href=\"#\" data-bs-toggle=\"modal\" data-bs-target=\"#ipfs_id\">\n              Replace\n            </a>\n          </div>\n        </div>\n      </div>\n      <div\n        class=\"modal fade\"\n        id=\"ipfs_id\"\n        tabindex=\"-1\"\n        aria-labelledby=\"ipfs_idLabel\"\n        aria-hidden=\"true\"\n      >\n        <div class=\"modal-dialog\">\n          <div class=\"modal-content\">\n            <div class=\"modal-header\">\n              <h5 class=\"modal-title\" id=\"ipfs_idLabel\">\n                Replace IPFS\n              </h5>\n              <button\n                type=\"button\"\n                class=\"btn-close\"\n                data-bs-dismiss=\"modal\"\n                aria-label=\"Close\"\n              ></button>\n            </div>\n            <div class=\"modal-body\">\n              <div class=\"form-group\">\n                <label for=\"ipfs_replace_cid\">IPFS CID</label>\n                <input\n                  type=\"text\"\n                  class=\"form-control\"\n                  id=\"ipfs_replace_cid\"\n                  placeholder=\"new cid\"\n                  value={state.ipfs_replace_cid}\n                  onChange={(e) => {\n                    State.update({ ipfs_replace_cid: e.target.value });\n                  }}\n                ></input>\n              </div>\n            </div>\n            <div class=\"modal-footer\">\n              <button\n                type=\"button\"\n                class=\"btn btn-secondary\"\n                data-bs-dismiss=\"modal\"\n              >\n                Close\n              </button>\n              <button\n                type=\"button\"\n                class=\"btn btn-primary\"\n                data-bs-dismiss=\"modal\"\n                onClick={() => {\n                  setUpdateFile(info);\n                }}\n              >\n                Save changes\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\nconst getLongName = (name) => {\n  if (name.length >= 20) {\n    return <div>{name.substring(0, 20)}...</div>;\n  } else {\n    return <div>{name}</div>;\n  }\n};\n_init();\nif (state.route === \"def\") {\n  return (\n    <div class=\"container\">\n      {getHeader()}\n      <div class=\"row justify-content-md-center text-center\">\n        <div class=\"col col-lg-12 mt-5\">\n          <p>Please Connect your Wallet to Upload Files.</p>\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            height=\"60\"\n            width=\"75\"\n            viewBox=\"0 0 384 512\"\n          >\n            <path d=\"M64 0C28.7 0 0 28.7 0 64V448c0 35.3 28.7 64 64 64H320c35.3 0 64-28.7 64-64V160H256c-17.7 0-32-14.3-32-32V0H64zM256 0V128H384L256 0zM216 408c0 13.3-10.7 24-24 24s-24-10.7-24-24V305.9l-31 31c-9.4 9.4-24.6 9.4-33.9 0s-9.4-24.6 0-33.9l72-72c9.4-9.4 24.6-9.4 33.9 0l72 72c9.4 9.4 9.4 24.6 0 33.9s-24.6 9.4-33.9 0l-31-31V408z\" />\n          </svg>\n        </div>\n      </div>\n      {getFooter()}\n    </div>\n  );\n}\nif (state.route === \"drive\" && state.address) {\n  return (\n    <div class=\"container\">\n      {getHeader()}\n      <div>\n        <div class></div>\n        <fieldset class=\"text-center mb-3 p-4\">\n          <Files\n            multiple={false}\n            accepts={[\n              \"image/*\",\n              \"video/*\",\n              \"audio/*\",\n              \"font/*\",\n              \"application/*\",\n              \"font/*\",\n            ]}\n            minFileSize={1}\n            clickable\n            className=\"btn btn-outline-primary\"\n            onChange={(files) => {\n              if (!files || !files.length) return;\n              const [body] = files;\n              State.update({ uploading_file: true, cid: null });\n              asyncFetch(\"https://ipfs.near.social/add\", {\n                method: \"POST\",\n                headers: { Accept: \"application/json\" },\n                body,\n              }).then(({ body: { cid } }) => {\n                State.update({\n                  cid,\n                  filename: body.name,\n                  uploading_file: false,\n                });\n              });\n            }}\n          >\n            {state.uploading_file ? \"Loading...\" : \"Upload your file\"}\n          </Files>\n        </fieldset>\n        <div class=\"form text-left\">\n          <div class=\"form-group\">\n            <label for=\"ipns_name\">IPNS Name</label>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              id=\"ipns_name\"\n              placeholder=\"put your ipns name\"\n              value={state.filename}\n              onChange={(e) => {\n                State.update({ filename: e.target.value });\n              }}\n            ></input>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"cid\">IPFS (CID)</label>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              id=\"cid\"\n              placeholder=\"cid...\"\n              value={state.cid}\n              onChange={(e) => {\n                State.update({ cid: e.target.value });\n              }}\n            ></input>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"project\">Project Name</label>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              id=\"project_name\"\n              placeholder=\"near fillar\"\n              value={state.project_name}\n              onChange={(e) => {\n                State.update({ project_name: e.target.value });\n              }}\n            ></input>\n          </div>\n          <div class=\"form-group mt-3 pb-3 border-bottom\">\n            <button\n              type=\"button\"\n              onClick={() => {\n                setUploadFile();\n              }}\n            >\n              \u0e14\u0e35\u0e43\u0e08\u0e08\u0e31\u0e07 \u0e2d\u0e31\u0e1e\u0e42\u0e2b\u0e25\u0e14\u0e44\u0e14\u0e49\u0e41\u0e25\u0e49\u0e27!\n            </button>\n          </div>\n        </div>\n      </div>\n      <table class=\"table\" width=\"100%\" cellPadding={10}>\n        <thead>\n          <tr class=\"thead-dark\">\n            <td scope=\"col\">No.</td>\n            <td scope=\"col\">Project</td>\n            <td scope=\"col\">IPNS Name</td>\n            <td scope=\"col\">IPFS</td>\n          </tr>\n        </thead>\n        <tbody>\n          {state.ipfs_list.length > 0 &&\n            state.ipfs_list.map((i, index) => {\n              return (\n                <tr>\n                  <td scope=\"row\">{index + 1}</td>\n                  <td>{i.project_name}</td>\n                  <td>\n                    <div>\n                      {getLongName(i.ipns_name)}\n                      <a\n                        style={{ fontSize: \"12px\" }}\n                        href=\"#\"\n                        data-toggle=\"tooltip\"\n                        title={`ipns://${i.ipns_from_generate}`}\n                        onClick={() => {\n                          clipboard.writeText(`ipns://${i.ipns_from_generate}`);\n                        }}\n                      >\n                        Copy\n                      </a>\n                    </div>\n                  </td>\n                  <td>{getIPFSInfo(i)}</td>\n                </tr>\n              );\n            })}\n        </tbody>\n      </table>\n      {getFooter()}\n    </div>\n  );\n}\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/mctery.near/widget/NearFillar", "fact_widget_deployments_id": "e69dc2847f41acd1e0faf6c1337de492", "inserted_timestamp": "2023-12-19T21:25:30.312Z", "modified_timestamp": "2023-12-21T16:46:06.815Z", "__row_index": 13}