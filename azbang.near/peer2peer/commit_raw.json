{"tx_hash": "9CBqtFpTDttba8vg6ksN7GmegthgPdMheujx6BqbRFCZ", "action_id_social": "AoCpKff2YKw2PNB11QRDbPPtyghwL8BGffAK189jnHdP-0-widget", "block_id": 101846995, "block_timestamp": "2023-09-24T12:06:23.204Z", "signer_id": "azbang.near", "widget_name": "peer2peer", "source_code": "State.init({\n  orders: [],\n  amount: \"0.001\",\n});\n\nconst sender = Ethers.send(\"eth_requestAccounts\", [])[0];\nif (!sender) return \"Please login first\";\n\nconst Button = styled.button`\n  color: #fff;\n  font-size: 16px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: #255ff4;\n  padding: 16px;\n  width: 250px;\n  border-radius: 32px;\n  border: none;\n  text-align: center;\n  font-weight: bold;\n  transition: 0.2s all;\n  height: 64px;\n  &:hover {\n    color: #fff;\n    text-decoration: none;\n    background-color: rgb(107 148 255);\n  }\n`;\n\nconst Container = styled.div`\n    * {\n      font-family:  -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\n    }\n\n    display: flex;\n    margin: 48px auto;\n    justify-content: center;\n    flex-direction: column;\n    width: 400px;\n    gap: 16px;\n\n    button {\n      width: 100%;\n    }\n\n    input {\n      height: 56px;\n    }\n`;\n\nconst AmountButton = styled(Button)`\n  box-shadow: 0 0 0 0 #fff;\n  height: 48px;\n  &.active {\n    box-shadow: 0 0 0 4px #fff;\n  }\n`;\n\nconst Info = styled.div`\n  padding: 12px;\n  border: 1px solid #6c757d88;\n  color: #ccc;\n  border-radius: 12px;\n  margin-top: -8px;\n\n`;\n\nconst Transaction = styled.div`\n  padding: 16px;\n  border-radius: 12px;\n  border: 1px solid #ccc;\n  display: flex;\n  flex-direction: row;\n  position: relative;\n  cursor: pointer;\n  transition: 0.2s box-shadow;\n  p { margin: 0; }\n  margin-bottom: 12px;\n\n  &:hover {\n    box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.1);\n  }\n`;\n\nconst CONTRACT = \"0xbeC6a3A108552e6ea9f3aa609847eBF4135bBE71\";\nconst tokenAddress = \"0x8c9e6c40d3402480ACE624730524fACC5482798c\";\nconst erc20abi = [\"function approve(address _spender, uint _value)\"];\n\nconst PaymentRequest =\n  \"(address payable requester, uint256 amount, bytes32 zelleEmailHash, address payable executor)\";\n\nconst abi = [\n  \"function createPaymentRequest(uint256 amount, bytes32 _zelleEmailHash) external returns (uint256)\",\n  `function getPaymentRequestsByIds(uint256[] memory requestIds) external view returns (${PaymentRequest}[] memory)`,\n  \"function reservePayment(uint256 requestId) payable\",\n  \"function confirmPayment(uint256 requestId, uint256 transactionId)\",\n  \"event PaymentReserved(uint256 requestId, address indexed reserver)\",\n];\n\nconst signer = Ethers.provider().getSigner();\nconst erc20 = new ethers.Contract(tokenAddress, erc20abi, signer);\nconst peer2peer = new ethers.Contract(CONTRACT, abi, signer);\nconst daiDecimal = 18;\n\nconst fetchOrders = () => {\n  const ids = new Array(50).fill(0).map((_, i) => (i + 1).toString());\n  peer2peer.getPaymentRequestsByIds(ids).then((data) => {\n    data = data.map((t, index) => ({\n      id: ids[index],\n      requester: t[0],\n      amount: ethers.utils.formatEther(t[1], daiDecimal),\n      zelleHash: t[2],\n      executor: t[3],\n    }));\n\n    State.update({\n      orders: data.filter((t) => t.amount > 0),\n    });\n  });\n};\n\n//2\n\nfetchOrders();\n\nconst handleCreate = () => {\n  State.update({ loading: true });\n  const emailHash = ethers.utils.sha256(ethers.utils.toUtf8Bytes(state.amount));\n  const amount = ethers.utils.parseUnits(state.amount.toString(), daiDecimal);\n\n  console.log(emailHash);\n\n  erc20.approve(CONTRACT, amount).then((tx) => {\n    tx.wait().then(() => {\n      peer2peer.createPaymentRequest(amount, emailHash).then((tx) => {\n        tx.wait().then((result) => {\n          State.update({ loading: false });\n          fetchOrders();\n        });\n      });\n    });\n  });\n};\n\nconst handleBuy = (order) => {\n  peer2peer\n    .reservePayment(order.id, {\n      value: ethers.utils.parseEther(\"0.01\"),\n    })\n    .then((tx) => {\n      tx.wait().then(() => {\n        Storage.privateSet(\"activeOrder\", order);\n        State.update({ activeOrder: order });\n      });\n    });\n};\n\nif (state.activeOrder) {\n  return (\n    <Widget\n      src=\"azbang.near/widget/peer2peerMakeOrder\"\n      props={{ order: state.activeOrder.id, public_token: props.public_token }}\n    />\n  );\n}\n\nconsole.log(state.orders);\n\n//3\n\nreturn (\n  <Container>\n    <div style={{ display: \"flex\", gap: 12 }}>\n      {[\"0.001\", \"50\", \"100\"].map((amount) => (\n        <AmountButton\n          className={amount == state.amount && \"active\"}\n          onClick={() => State.update({ amount })}\n        >\n          {amount} DAI\n        </AmountButton>\n      ))}\n    </div>\n\n    <input\n      value={state.email}\n      placeholder=\"Enter your Zelle email\"\n      onChange={(e) => State.update({ email: e.target.value })}\n    />\n\n    <Info>\n      Make sure that you indicate the email that is linked to your Zelle\n      account, at this address validators verify the payment from the buyer\n    </Info>\n\n    <Button onClick={() => handleCreate()}>\n      {state.loading ? (\n        <Widget\n          src=\"azbang.near/widget/dots-spinner\"\n          props={{\n            style: {\n              height: 32,\n              display: \"flex\",\n              alignItems: \"center\",\n              margin: \"auto\",\n            },\n          }}\n        />\n      ) : (\n        \"Sell DAI\"\n      )}\n    </Button>\n\n    <div style={{ marginTop: 24 }}>\n      <h4 style={{ marginBottom: 16 }}>Active orders</h4>\n      {state.orders.map((order) => {\n        const isRequester =\n          order.requester.toLowerCase() === sender.toLowerCase();\n        const isExecuter =\n          order.executor.toLowerCase() === sender.toLowerCase();\n        if (!isRequester && !isExecuter) return null;\n\n        return (\n          <Transaction>\n            <div style={{ flex: 1 }}>\n              <p>\n                {isRequester\n                  ? \"Your order, you SELL\"\n                  : `You BUY from ${order.requester.slice(\n                      0,\n                      6\n                    )}...${order.requester.slice(-6)}`}\n              </p>\n              <p>{order.amount} DAI</p>\n            </div>\n            <Button\n              onClick={() => State.update({ activeOrder: order })}\n              style={{ height: 48, width: 100 }}\n            >\n              Chat\n            </Button>\n          </Transaction>\n        );\n      })}\n    </div>\n\n    <div style={{ marginTop: 24 }}>\n      <h4 style={{ marginBottom: 16 }}>Buy DAI</h4>\n      {state.orders\n        .filter(\n          (t) =>\n            t.executor === \"0x0000000000000000000000000000000000000000\" &&\n            t.requester.toLowerCase() !== sender.toLowerCase()\n        )\n        .map((order) => (\n          <Transaction>\n            <div style={{ flex: 1 }}>\n              <p>\n                {order.requester.slice(0, 8)}...{order.requester.slice(-8)}\n              </p>\n              <p>{order.amount} DAI</p>\n            </div>\n            <Button\n              onClick={() => handleBuy(order)}\n              style={{ height: 48, width: 100 }}\n            >\n              Buy\n            </Button>\n          </Transaction>\n        ))}\n    </div>\n  </Container>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/azbang.near/widget/peer2peer", "fact_widget_deployments_id": "8cde6d0330b94fe17ecd5e8613224f7a", "inserted_timestamp": "2023-09-24T13:52:29.875Z", "modified_timestamp": "2023-09-24T13:52:29.875Z", "__row_index": 6}