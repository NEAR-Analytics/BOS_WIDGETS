{"tx_hash": "HRFhzsszGr9Qu68DLCMPseCApibrKWjCEnAVYz8nwM7h", "action_id_social": "7YAhnDWRy2qJZBTyLqtsYVLiK1kXmQ7A4DXQKGe1vGfr-0-widget", "block_id": 107369114, "block_timestamp": "2023-12-07T15:41:37.162Z", "signer_id": "azbang.near", "widget_name": "ExportAccount", "source_code": "State.init({\n  creds: null,\n  link: null,\n});\n\nconst Page = styled.div`\n    width: 100%;\n    height: 100%;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    display: flex;\n`;\n\nconst BlurScreen = styled.div`\n    position: absolute;\n    top: 0px;\n    width: 100%;\n    height: 100%;\n    background: rgba(255, 255, 255, 0.3);\n    backdrop-filter: blur(10px);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`;\n\nif (!Near.signAndSendTransactions) {\n  return <p>Sorry, your Gateway does not support this feature.</p>;\n}\n\nif (context.accountId == null) {\n  return (\n    <Page>\n      <h2 style={{ width: \"100%\", textAlign: \"center\" }}>Sign in please</h2>\n    </Page>\n  );\n}\n\nconst newKey = async () => {\n  const key = nacl.sign.keyPair();\n  const publicKey = \"ed25519:\" + ethers.utils.base58.encode(key.publicKey);\n  const privateKey = \"ed25519:\" + ethers.utils.base58.encode(key.secretKey);\n\n  Near.signAndSendTransactions([\n    {\n      receiverId: context.accountId,\n      actions: [\n        {\n          type: \"AddKey\",\n          params: {\n            publicKey: publicKey,\n            accessKey: {\n              permission: \"FullAccess\",\n            },\n          },\n        },\n      ],\n    },\n  ]);\n\n  State.update({\n    creds: {\n      accountId: context.accountId,\n      privateKey,\n    },\n  });\n};\n\nconst code = fetch(\n  \"https://nftstorage.link/ipfs/bafybeicgzd7pnlaswyf3xohphkja6x35fyl5icjyyehyj564pgpkxksusu\"\n);\n\nif (code.body != null && state.creds != null) {\n  const script = `\n        <script>\n            window.accountId = \"${state.creds.accountId}\";\n            window.privateKey = \"${state.creds.privateKey}\";\n            window.openLink = (link) => {\n            window.top.postMessage(link, \"*\")\n            }\n\n            window.mockLocalStorage = {\n            setItem: () => {},\n            getItem: () => null,\n            removeItem: () => {}\n            }\n        </script>\n    `;\n\n  return (\n    <Page style={{ display: \"flex\", justifyContent: \"center\", width: \"100%\" }}>\n      <iframe\n        onMessage={(link) => State.update({ link })}\n        style={{ width: \"100%\", maxWidth: \"812px\", height: \"555px\" }}\n        srcDoc={\n          script +\n          code.body\n            .replaceAll(\"window.localStorage\", \"window.mockLocalStorage\")\n            .replaceAll(\"window.location.assing\", \"window.openLink\")\n            .replaceAll(\"window.open\", \"window.openLink\")\n        }\n      />\n\n      {state.link && (\n        <BlurScreen>\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href={state.link}\n            style={{ fontSize: 24, textAlign: \"center\" }}\n            onClick={() => State.update({ link: null })}\n          >\n            Open {state.link.split(\"/\")?.[2] || \"link\"} <br /> to export account\n          </a>\n        </BlurScreen>\n      )}\n    </Page>\n  );\n}\n\nreturn (\n  <div\n    style={{\n      width: 480,\n      border: \"1px solid #ccc\",\n      padding: 24,\n      paddingTop: 16,\n      borderRadius: 24,\n      margin: \"20% auto 0\",\n    }}\n  >\n    <h2 style={{ marginTop: 0 }}>Export account</h2>\n    <p>\n      In order to export your account to a new wallet, you need to create a new\n      full access key, which, using the official secure private key transfer\n      protocol, will be exported to one of the possible wallets.\n    </p>\n    <button onClick={newKey} class=\"btn btn-dark btn-lg\">\n      Create new access key\n    </button>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/azbang.near/widget/ExportAccount", "fact_widget_deployments_id": "927faa7ea2ef6660b0836991671ded5c", "inserted_timestamp": "2023-12-07T17:38:45.119Z", "modified_timestamp": "2023-12-20T03:22:11.422Z", "__row_index": 3}