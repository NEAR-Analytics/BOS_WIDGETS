{"tx_hash": "sBhHewoJxGSPmpZgcaSRp9tovwvPusCeGn5zEhSksmW", "action_id_social": "H9fEdyYFbjZLuB2S11xN6qqvnYnAGQ5uDkACzZtusyPK-0-widget", "block_id": 101846388, "block_timestamp": "2023-09-24T11:54:50.453Z", "signer_id": "azbang.near", "widget_name": "peer2peerMakeOrder", "source_code": "const sender = Ethers.send(\"eth_requestAccounts\", [])[0];\nif (!sender) return \"Please login first\";\nconst signer = Ethers.provider().getSigner();\n\nconst PaymentRequest =\n  \"(address payable requester, uint256 amount, bytes32 zelleEmailHash, address payable executor)\";\nconst abi = [\n  \"function createPaymentRequest(uint256 amount, bytes32 _zelleEmailHash) external returns (uint256)\",\n  `function getPaymentRequestsByIds(uint256[] memory requestIds) external view returns (${PaymentRequest}[] memory)`,\n  \"function reservePayment(uint256 requestId)\",\n  \"function confirmPayment(uint256 requestId, uint256 transactionId)\",\n  \"event PaymentReserved(uint256 requestId, address indexed reserver)\",\n];\n\nconst CONTRACT = \"0xa50ba5122f1d3a68C0493c7dda4Fd717aa235B8D\";\nconst tokenAddress = \"0x8c9e6c40d3402480ACE624730524fACC5482798c\";\nconst erc20abi = [\"function approve(address _spender, uint _value)\"];\nconst erc20 = new ethers.Contract(tokenAddress, erc20abi, signer);\nconst peer2peer = new ethers.Contract(CONTRACT, abi, signer);\nconst daiDecimal = 18;\n\npeer2peer.getPaymentRequestsByIds([props.order]).then(([data]) => {\n  State.update({\n    order: {\n      requester: data[0],\n      amount: ethers.utils.formatEther(data[1], daiDecimal),\n      zelleHash: data[2],\n      executor: data[3],\n    },\n  });\n});\n\nconst handleVerify = (proof) => {\n  peer2peer\n    .confirmPayment(props.order, proof.transactionId, { gasLimit: 3000000 })\n    .then((tx) => {\n      tx.wait().then(() => console.log(\"SUCCESS!!\"));\n    });\n};\n\nconst order = state.order;\nif (!order) return \"\";\n\nconst Container = styled.div`\n    * {\n      font-family:  -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\n    }\n\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n    width: 400px;\n`;\n\nconst isRequester = order.requester.toLowerCase() === sender.toLowerCase();\nconst isExecuter = order.executor.toLowerCase() === sender.toLowerCase();\n\nreturn (\n  <div\n    style={{\n      display: \"flex\",\n      gap: 32,\n      justifyContent: \"center\",\n      marginTop: 32,\n      width: \"100%\",\n    }}\n  >\n    <Container>\n      <h4 style={{ lineBreak: \"anywhere\" }}>\n        {isRequester ? \"Your order, you SELL\" : order.requester}\n      </h4>\n      <h5 style={{ marginBottom: 32 }}>{order.amount} DAI</h5>\n\n      {order.executor !== \"0x0000000000000000000000000000000000000000\" && (\n        <Widget\n          src=\"azbang.near/widget/xmtp-chat\"\n          props={{ receiver: isRequester ? order.executor : order.requester }}\n        />\n      )}\n\n      {order.executor === \"0x0000000000000000000000000000000000000000\" && (\n        <div\n          style={{\n            margin: \"auto\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            marginTop: 100,\n          }}\n        >\n          <p style={{ marginTop: 24 }}>Wait order executor</p>\n          <Widget\n            src=\"azbang.near/widget/dots-spinner\"\n            props={{\n              style: {\n                height: 32,\n                display: \"flex\",\n                alignItems: \"center\",\n                margin: \"auto\",\n              },\n            }}\n          />\n        </div>\n      )}\n    </Container>\n    {isExecuter && (\n      <div style={{ marginTop: -48 }}>\n        <Widget\n          src=\"azbang.near/widget/plaid\"\n          props={{\n            onVerified: handleVerify,\n            public_token: props.public_token,\n            widgetSrc: \"azbang.near/widget/peer2peer\",\n          }}\n        />\n      </div>\n    )}\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/azbang.near/widget/peer2peerMakeOrder", "fact_widget_deployments_id": "baf03fa1c57b4d9ef54fe6c8d2eef203", "inserted_timestamp": "2023-09-24T13:45:29.846Z", "modified_timestamp": "2023-09-24T13:45:29.846Z", "__row_index": 10}