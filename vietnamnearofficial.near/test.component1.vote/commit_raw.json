{"tx_hash": "9x5vUtC58fSRirFnfQxheJKqb7m2hPt5b5q1P1NF8VYb", "action_id_social": "GXz9GpYTA97ToMHJGgotE9UEbiYcpoMtUrhVarLcQwGx-0-widget", "block_id": 98316420, "block_timestamp": "2023-08-08T03:00:31.103Z", "signer_id": "vietnamnearofficial.near", "widget_name": "test.component1.vote", "source_code": "if (\n  state.networkId === undefined &&\n  ethers !== undefined &&\n  Ethers.send(\"eth_requestAccounts\", [])[0]\n) {\n  Ethers.provider()\n    .getNetwork()\n    .then((chainIdData) => {\n      if (chainIdData?.chainId) {\n        State.update({ networkId: chainIdData.chainId });\n      }\n    });\n}\nif (state.networkId !== undefined && state.networkId !== 1) {\n  return <p>Switch to Ethereum Mainnet</p>;\n}\n\nState.init({\n  unwrap: false,\n  balanceToken: null,\n  balanceWrapToken: null,\n  intervalStarted: false,\n  amountIn: null,\n  amountOut: null,\n  swapButtonText: null,\n  swapReady: false,\n  sender: null,\n});\n\nconst ownerId = \"manzanal.near\";\nconst wethAddress =\n  props.wethAddress || \"0xB4FBF271143F4FBf7B91A5ded31805e42b2208d6\";\nconst tokenDecimals = 18;\nconst wethAbiUrl =\n  props.wethAbiUrl ||\n  \"https://raw.githubusercontent.com/leomanza/chain-agnostic-bos-workshop/main/ABIs/WETH.abi.json\";\nconst wethAbi = fetch(wethAbiUrl);\n\nif (!wethAbi.ok) {\n  return \"Loading\";\n}\nconst wethAbiBody = wethAbi.body;\nconst signer = Ethers.provider() ? Ethers.provider().getSigner() : null;\nconst wethContract = new ethers.Contract(wethAddress, wethAbiBody, signer);\n\nif (!state.sender || state.sender === null) {\n  const accounts = Ethers.send(\"eth_requestAccounts\", []);\n  if (accounts.length) {\n    State.update({ sender: accounts[0] });\n  }\n}\n\nconst parseToUnits = (amount) => {\n  const tokenDecimals = 18;\n  return ethers.utils.parseUnits(amount, tokenDecimals);\n};\nconst formatUnitsFn = (amount) => {\n  const tokenDecimals = 18;\n  return ethers.utils.formatUnits(amount, tokenDecimals);\n};\nconst isValidAmout = (amount) => {\n  if (!amount) return false;\n  if (isNaN(Number(amount))) return false;\n  if (amount === \"\") return false;\n  if (amount < 0) return false;\n  return true;\n};\n\nconst imgWrapTokenSvg = (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\">\n    <g fill=\"none\" fill-rule=\"evenodd\">\n      <circle cx=\"16\" cy=\"16\" r=\"16\" fill=\"#627EEA\" />\n      <g fill=\"#FFF\" fill-rule=\"nonzero\">\n        <path fill-opacity=\".602\" d=\"M16.498 4v8.87l7.497 3.35z\" />\n        <path d=\"M16.498 4L9 16.22l7.498-3.35z\" />\n        <path fill-opacity=\".602\" d=\"M16.498 21.968v6.027L24 17.616z\" />\n        <path d=\"M16.498 27.995v-6.028L9 17.616z\" />\n        <path fill-opacity=\".2\" d=\"M16.498 20.573l7.497-4.353-7.497-3.348z\" />\n        <path fill-opacity=\".602\" d=\"M9 16.22l7.498 4.353v-7.701z\" />\n      </g>\n    </g>\n  </svg>\n);\nconst imgTokenSvg = (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    version=\"1.2\"\n    viewBox=\"0 0 21 21\"\n    width=\"35\"\n    height=\"35\"\n  >\n    <path\n      fill-rule=\"evenodd\"\n      d=\"m10.7 21c-5.8 0-10.5-4.7-10.5-10.5 0-5.8 4.7-10.5 10.5-10.5 5.7 0 10.4 4.7 10.4 10.5 0 5.8-4.7 10.5-10.4 10.5zm3.9-9.6l-4.1 2.4-4-2.4 4 5.8zm0-0.8l-4-6.8-4 6.8 4 2.3z\"\n    />\n  </svg>\n);\n\nconst updateBalances = (address) => {\n  if (!address) return;\n  Ethers.provider()\n    .getBalance(address)\n    .then((balance) =>\n      State.update({\n        balanceToken: balance,\n      })\n    );\n\n  wethContract.balanceOf(address).then((balance) =>\n    State.update({\n      balanceWrapToken: balance,\n    })\n  );\n};\n\nif (!state.intervalStarted) {\n  State.update({ intervalStarted: true });\n  updateBalances(state.sender);\n\n  setInterval(() => {\n    updateBalances(state.sender);\n  }, 2000);\n}\n\nconst updateSwapButton = () => {\n  State.update({ swapReady: false });\n  if (!!state.sender) {\n    State.update({ swapButtonText: \"Connect Wallet\" });\n    return;\n  }\n\n  if (!state.amountIn) {\n    return;\n  }\n\n  let amountIn = state.amountIn;\n  if (!isValidAmout(amountIn)) {\n    State.update({ swapButtonText: \"Invalid Amount\" });\n    return;\n  }\n\n  let limit = state.unwrap ? state.balanceWrapToken : state.balanceToken;\n\n  if (limit && amountIn < limit) {\n    State.update({\n      swapButtonText: state.unwrap ? `Unwrap ETH` : `Wrap ETH`,\n      swapReady: true,\n    });\n  } else {\n    State.update({\n      swapButtonText: `Insufficient ${state.unwrap ? \"WETH\" : \"ETH\"} Balance`,\n    });\n  }\n};\n\nconst swapInputOnChange = (event) => {\n  let re = /^[0-9]*[.,]?[0-9]*$/;\n  if (re.test(event.target.value)) {\n    State.update({\n      amountIn: event.target.value,\n      amountOut: event.target.value,\n      swapButtonText: null,\n    });\n\n    updateSwapButton();\n  }\n};\n\nconst swapButtonOnClick = () => {\n  const amount = parseToUnitsFn(amountIn);\n  if (state.unwrap) {\n    wethContract.withdraw(amount);\n  } else {\n    wethContract.deposit({ value: amount });\n  }\n};\n\nconst Card = styled.div`\n  font-family: 'Inter custom',sans-serif;\n  font-size: 16px;\n  font-variant: none;\n  -webkit-font-smoothing: antialiased;\n  -webkit-tap-highlight-color: transparent;\n  color: rgb(255, 255, 255);\n  box-sizing: border-box;\n \n  background: rgb(13, 17, 28);\n  border-radius: 16px;\n  border: 1px solid rgb(27, 34, 54);\n  padding: 8px;\n  z-index: 1;\n  transition: transform 250ms ease 0s;\n  display: block;\n`;\n\nconst SwapContainer = styled.div`\n  background-color: rgb(19, 26, 42);\n  border-radius: 12px;\n  padding: 16px;\n`;\n\nconst SwapContainerOuter = styled.div`\n  display: flex;\n  flex-flow: column nowrap;\n  border-radius: 20px;\n`;\n\nconst SwapContainerInner = styled.div`\n  border-radius: 20px;\n`;\n\nconst InputContainer = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst SwapInput = styled.input`\n  color: rgb(255, 255, 255);\n  position: relative;\n  font-weight: 400;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  background-color: transparent;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  padding: 0px;\n  appearance: textfield;\n  filter: none;\n  opacity: 1;\n  transition: opacity 0.2s ease-in-out 0s;\n  text-align: left;\n  font-size: 36px;\n  line-height: 44px;\n  font-variant: small-caps;\n`;\n\nconst SwapArrowContainer = styled.div`\n  border-radius: 12px;\n  height: 40px;\n  width: 40px;\n  position: relative;\n  margin: -18px auto;\n  background-color: rgb(41, 50, 73);\n  border: 4px solid rgb(13, 17, 28);\n  z-index: 2;\n \n  :hover {\n    opacity: 0.75;\n  }\n`;\n\nconst SwapArrowWrapper = styled.div`\n  display: inline-flex;\n  -webkit-box-align: center;\n  align-items: center;\n  -webkit-box-pack: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n  cursor: pointer;\n`;\n\nconst CurrencyPillContainer = styled.div`\n  text-decoration: none;\n  background-color: rgb(41, 50, 73);\n  color: rgb(255, 255, 255);\n  border-radius: 16px;\n  padding: 4px 8px 4px 4px;\n  margin-left: 12px;\n`;\n\nconst CurrencyPillWrapper = styled.div`\n  display: flex;\n  -webkit-box-align: center;\n  align-items: center;\n  -webkit-box-pack: start;\n  justify-content: flex-start;\n`;\n\nconst CurrencyPillImageWrapper = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst CurrencyPillSvgImageContainer = styled.div`\n  width: 32px;\n  height: 32px;\n  border-radius: 50%;\n  margin-right: 2px;\n`;\n\nconst CurrencyPillImage = styled.img`\n  color: rgb(255, 255, 255);\n  width: 24px;\n  height: 24px;\n  border-radius: 50%;\n  margin-right: 2px;\n`;\n\nconst CurrencyPillText = styled.span`\n  margin: 0px 4px;\n  font-size: 20px;\n  font-weight: 600;\n`;\n\nconst SwapDetailsContainer = styled.div`\n  padding: 8px 0px 0px;\n`;\n\nconst SwapDetailsWrapper = styled.div`\n  display: flex;\n  gap: 10;\n  -webkit-box-align: center;\n  align-items: center;\n  -webkit-box-pack: justify;\n  justify-content: end;\n`;\n\nconst TextSmall = styled.div`\n  color: rgb(152, 161, 192);\n  line-height: 1rem;\n  box-sizing: border-box;\n  font-weight: 400;\n  font-size: 14px;\n`;\n\nconst SwapButtonWrapper = styled.div`\n  margin-top: 12px;\n`;\n\nconst SwapButton = styled.button`\n  background-color: ${(props) =>\n    props.disabled ? \"rgb(41, 50, 73)\" : \"#1758FE\"};\n  padding: 16px;\n  font-size: 20px;\n  font-weight: 600;\n  color: rgb(245, 246, 252);\n  width: 100%;\n  text-align: center;\n  border-radius: 20px;\n  outline: none;\n  border: 1px solid transparent;\n  text-decoration: none;\n  position: relative;\n  z-index: 1;\n  cursor: pointer;\n`;\n\nconst TitleWrapper = styled.div`\n  padding: 8px 12px;\n  margin: 0px 0px 8px 0px;\n  color: rgb(255, 255, 255);\n  font-weight: 500;\n  font-size: 16px;\n`;\n\nconst Wrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding: 32px;\n    width: 100%;\n    height: 100%;\n    justify-content: center;\n  `;\n\nconst renderSwapContainer = (\n  state,\n  showTokenSvg,\n  showTokenName,\n  swapInputOnChange\n) => (\n  <SwapContainer>\n    <SwapContainerOuter>\n      <SwapContainerInner>\n        <InputContainer>\n          <SwapInput\n            inputmode=\"decimal\"\n            autocomplete=\"off\"\n            autocorrect=\"off\"\n            type=\"text\"\n            placeholder=\"0\"\n            minLength=\"1\"\n            maxLength=\"79\"\n            spellcheck=\"false\"\n            value={state.amountIn}\n            onChange={swapInputOnChange}\n          />\n          <CurrencyPillContainer>\n            <CurrencyPillWrapper>\n              <CurrencyPillImageWrapper>\n                <CurrencyPillSvgImageContainer>\n                  {showTokenSvg()}\n                </CurrencyPillSvgImageContainer>\n                <CurrencyPillText>{showTokenName()}</CurrencyPillText>\n              </CurrencyPillImageWrapper>\n            </CurrencyPillWrapper>\n          </CurrencyPillContainer>\n        </InputContainer>\n        <SwapDetailsContainer>\n          <SwapDetailsWrapper>\n            {state.unwrap ? (\n              state.balanceWrapToken ? (\n                <TextSmall>Balance: {state.balanceWrapToken}</TextSmall>\n              ) : null\n            ) : state.balanceToken ? (\n              <TextSmall>Balance: {state.balanceToken}</TextSmall>\n            ) : null}\n          </SwapDetailsWrapper>\n        </SwapDetailsContainer>\n      </SwapContainerInner>\n    </SwapContainerOuter>\n  </SwapContainer>\n);\n\nreturn (\n  <Wrapper>\n    <Card>\n      <TitleWrapper>\n        <p style={{ margin: 0 }}>ETH/WETH Wrapper</p>\n      </TitleWrapper>\n      {renderSwapContainer(\n        state,\n        () => (state.unwrap ? imgWrapTokenSvg : imgTokenSvg),\n        () => (state.unwrap ? \"WETH\" : \"ETH\"),\n        swapInputOnChange\n      )}\n      <SwapArrowContainer\n        onClick={() => {\n          State.update({\n            unwrap: !state.unwrap,\n            amountIn: state.amountOut,\n            amountOut: state.amountIn,\n          });\n          updateSwapButton();\n        }}\n      >\n        <SwapArrowWrapper>\n          <i class=\"bi bi-arrow-down-short\" />\n        </SwapArrowWrapper>\n      </SwapArrowContainer>\n      {renderSwapContainer(\n        state,\n        () => (!state.unwrap ? imgWrapTokenSvg : imgTokenSvg),\n        () => (!state.unwrap ? \"WETH\" : \"ETH\"),\n        swapInputOnChange\n      )}\n      <SwapButtonWrapper>\n        <SwapButton disabled={!state.swapReady} onClick={swapButtonOnClick}>\n          {state.swapButtonText ??\n            `Enter ${state.unwrap ? \"WETH\" : \"ETH\"} Amount`}\n        </SwapButton>\n      </SwapButtonWrapper>\n    </Card>\n  </Wrapper>\n);\n", "metadata": {"image": {"ipfs_cid": "bafkreibat7ngjddwozv3buv6jm5bbltu5wdgjjf4kmvm4cv7ts6z47qhfy"}}, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/vietnamnearofficial.near/widget/test.component1.vote", "fact_widget_deployments_id": "2fe943e170254fe68251b2eb5fcc278b", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}