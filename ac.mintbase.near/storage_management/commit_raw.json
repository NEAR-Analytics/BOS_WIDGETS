{"tx_hash": "E5h3Uy6U5ee2KtGpdUk91gpL2RjXq3eHnmZ9MBUr6uB5", "action_id_social": "3WDZDfpBSHVzyu1ENefjGTSsSzNRkPNyCgoo61jBx5mx-0-widget", "block_id": 116124491, "block_timestamp": "2024-04-04T16:34:24.647Z", "signer_id": "ac.mintbase.near", "widget_name": "storage_management", "source_code": "const { accountId } = context;\nconst rpcServer = \"https://1rpc.io/near\";\n\nconst Centered = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: flex-start;\n  height: 100vh;\n  padding-top: 33vh;\n`;\n\nconst Spinner = styled.span`\n  display: inline-block;\n  width: 2rem;\n  height: 2rem;\n  vertical-align: text-bottom;\n  border: 0.25em solid #272829;\n  border-right-color: transparent;\n  border-radius: 50%;\n  animation: spinner-border 0.75s linear infinite;\n  margin-bottom: 1rem;\n\n  @keyframes spinner-border {\n    to {\n      transform: rotate(360deg);\n    }\n  }\n`;\n\nconst LoginPrompt = styled.div`\n  color: #856404;\n  background-color: #fff3cd;\n  padding: 1rem;\n  border-radius: 5px;\n  text-align: center;\n  font-size: 1rem;\n  margin-bottom: 1.5rem;\n`;\n\nif (!accountId) {\n  return (\n    <Centered>\n      <LoginPrompt>\u8acb\u5148\u767b\u5165</LoginPrompt>\n    </Centered>\n  );\n}\n\nconst txs = [...(state?.txs ?? [])];\nlet storageDeposits = [...(state?.storageDeposits ?? [])];\nState.init({\n  txs,\n  page: state?.page ?? 1,\n  doneTxs: state?.doneTxs ?? false,\n  storageDeposits,\n  doneRpc: state?.doneRpc ?? false,\n  expandedContracts: state?.expandedContracts ?? {},\n});\n\nif (!state.doneTxs) {\n  asyncFetch(\n    `https://api.nearblocks.io/v1/account/${accountId}/txns?method=storage_deposit&order=desc&page=${state.page}&per_page=25`\n  ).then((res) => {\n    if (\n      !res.ok ||\n      !Array.isArray(res.body?.txns) ||\n      res.body.txns.length === 0\n    ) {\n      State.update({\n        doneTxs: true,\n      });\n      return;\n    }\n    State.update({\n      txs: txs.concat(res.body.txns),\n      page: state.page + 1,\n    });\n  });\n  return (\n    <Centered>\n      <Spinner />\n      <div style={{ color: \"#272829\" }}>\u6b63\u5728\u8f09\u5165\u4ea4\u6613...</div>\n    </Centered>\n  );\n}\n\nif (!state.doneRpc) {\n  const tx = txs.pop();\n  asyncFetch(rpcServer, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      jsonrpc: \"2.0\",\n      id: \"dontcare\",\n      method: \"tx\",\n      params: [tx.transaction_hash, tx.predecessor_account_id],\n    }),\n  }).then((res) => {\n    if (!res.ok || !Array.isArray(res.body.result?.transaction?.actions)) {\n      State.update({\n        doneRpc: true,\n      });\n      return;\n    }\n    const storageDeposit = res.body.result.transaction.actions.find(\n      (action) => {\n        const args = action.FunctionCall?.args;\n        if (args == null) return false;\n        const actionArgs = JSON.parse(Buffer.from(args, \"base64\").toString());\n        return actionArgs.receiver_id === accountId;\n      }\n    );\n    if (storageDeposit != null) {\n      storageDeposits.push(tx.receiver_account_id);\n    }\n    const doneRpc = txs.length === 0;\n    if (doneRpc) {\n      storageDeposits = Array.from(new Set(storageDeposits));\n    }\n    State.update({\n      txs: [...txs],\n      storageDeposits: [...storageDeposits],\n      doneRpc,\n    });\n  });\n  return (\n    <Centered>\n      <Spinner />\n      <div style={{ color: \"#272829\" }}>\n        \u6b63\u5728\u6383\u63cf\u4ea4\u6613...\n        <br />\n        \u5269\u9918: {txs.length}\n      </div>\n    </Centered>\n  );\n}\n\nconst storageBalances = {};\nfor (const contractId of state.storageDeposits) {\n  try {\n    const storageBalanceOf = Near.view(contractId, \"storage_balance_of\", {\n      account_id: accountId,\n    });\n    if (storageBalanceOf != null) {\n      storageBalances[contractId] = storageBalanceOf;\n    }\n  } catch (err) {}\n}\n\nlet totalAvailable = Big(\"0\");\nfor (const storageBalanceOf of Object.values(storageBalances)) {\n  if (\n    !storageBalanceOf ||\n    !storageBalanceOf.total ||\n    !storageBalanceOf.available\n  ) {\n    continue;\n  }\n  totalAvailable = totalAvailable.plus(storageBalanceOf.available);\n}\ntotalAvailable = totalAvailable.div(Big(10).pow(24)).round(3).toString();\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  align-items: center;\n  justify-content: center;\n  padding: 2rem;\n  max-width: 600px;\n  margin: 0 auto;\n  background-color: #F5F7F8;\n  border-radius: 10px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n`;\n\nconst Title = styled.h1`\n  font-size: 2rem;\n  font-weight: bold;\n  text-align: center;\n  margin-top: 4rem;\n  margin-bottom: 1.5rem;\n  color: #272829;\n`;\n\nconst Text = styled.p`\n  font-size: 1rem;\n  text-align: center;\n  margin-bottom: 1.5rem;\n  color: #272829;\n`;\n\nconst FormGroup = styled.div`\n  margin-top: 2rem;\n  width: 100%;\n`;\n\nconst Button = styled.button`\n  padding: 0.5rem 1rem;\n  font-size: 1rem;\n  color: #F5F7F8;\n  background-color: #272829;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.2s;\n  margin-top: 0.5rem;\n\n  &:hover {\n    background-color: #31363f;\n  }\n`;\n\nconst ContractCard = styled.div`\n  background-color: #ffffff;\n  border-radius: 10px;\n  padding: 1rem;\n  margin-bottom: 1rem;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  width: 100%;\n`;\n\nconst ContractHeader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  cursor: pointer;\n`;\n\nconst ContractDetails = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n  margin-top: 1rem;\n`;\n\nconst ButtonGroup = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 0.5rem;\n`;\n\nconst storageWithdrawAll = () => {\n  Near.call(\n    Object.entries(storageBalances)\n      .filter(\n        ([_, storageBalanceOf]) =>\n          storageBalanceOf != null &&\n          !!storageBalanceOf.total &&\n          !!storageBalanceOf.available &&\n          Number(storageBalanceOf.available) > 0\n      )\n      .map(([contractId]) => ({\n        contractName: contractId,\n        methodName: \"storage_withdraw\",\n        deposit: \"1\",\n      }))\n  );\n};\n\nconst toggleContract = (contractId) => {\n  State.update({\n    expandedContracts: {\n      ...state.expandedContracts,\n      [contractId]: !state.expandedContracts[contractId],\n    },\n  });\n};\n\nconst storageWithdraw = (contractId) => {\n  Near.call(contractId, \"storage_withdraw\", {}, \"30000000000000\", \"1\");\n};\n\nconst storageUnregister = (contractId) => {\n  Near.call(contractId, \"storage_unregister\", {}, \"30000000000000\", \"1\");\n};\n\nreturn (\n  <Wrapper>\n    <Title>Storage Management</Title>\n    <Text>\u9019\u500b BOS \u61c9\u7528\u7a0b\u5f0f\u53ef\u4ee5\u8b93\u4f60\u91cb\u653e\u70ba\u5132\u5b58\u62b5\u62bc\u4f46\u672a\u4f7f\u7528\u7684 NEAR\u3002</Text>\n    {!state.doneTxs || !state.doneRpc ? (\n      <Centered>\n        <Spinner />\n        <div style={{ color: \"#272829\" }}>\n          {!state.doneTxs ? \"\u6b63\u5728\u8f09\u5165\u4ea4\u6613...\" : \"\u6b63\u5728\u6383\u63cf\u4ea4\u6613...\"}\n          {!state.doneRpc && (\n            <>\n              <br />\n              \u5269\u9918: {txs.length}\n            </>\n          )}\n        </div>\n      </Centered>\n    ) : (\n      <>\n        <Button onClick={() => storageWithdrawAll()}>\n          \u5f9e {state.storageDeposits.length} \u500b\u5408\u7d04\u4e2d\u91cb\u653e {totalAvailable} NEAR\n        </Button>\n        <FormGroup>\n          {Object.entries(storageBalances)\n            .filter(\n              ([_, storageBalanceOf]) =>\n                storageBalanceOf != null &&\n                !!storageBalanceOf.total &&\n                !!storageBalanceOf.available\n            )\n            .map(([contractId, storageBalanceOf]) => {\n              const total = Big(storageBalanceOf.total)\n                .div(Big(10).pow(24))\n                .round(3)\n                .toString();\n              const available = Big(storageBalanceOf.available)\n                .div(Big(10).pow(24))\n                .round(3)\n                .toString();\n              return (\n                <ContractCard key={contractId}>\n                  <ContractHeader onClick={() => toggleContract(contractId)}>\n                    <label style={{ color: \"#272829\" }}>\ud83d\udcdd {contractId}</label>\n                    <span>{state.expandedContracts[contractId] ? \"\u25b2\" : \"\u25bc\"}</span>\n                  </ContractHeader>\n                  {state.expandedContracts[contractId] && (\n                    <ContractDetails>\n                      <div style={{ color: \"#272829\" }}>\u5df2\u62b5\u62bc: {total}</div>\n                      <div style={{ color: \"#272829\" }}>\u53ef\u7528: {available}</div>\n                      <ButtonGroup>\n                        {storageBalanceOf.available &&\n                          Number(storageBalanceOf.available) > 0 && (\n                            <Button onClick={() => storageWithdraw(contractId)}>\n                              \u91cb\u653e {available} NEAR\n                            </Button>\n                          )}\n                        <Button onClick={() => storageUnregister(contractId)}>\n                          \u70ba {total} NEAR \u8a3b\u92b7\u5e33\u6236\n                        </Button>\n                      </ButtonGroup>\n                    </ContractDetails>\n                  )}\n                </ContractCard>\n              );\n            })}\n        </FormGroup>\n      </>\n    )}\n  </Wrapper>\n);", "metadata": null, "branch": {"draft": null}, "widget_modules_used": null, "widget_url": "https://near.social/#/ac.mintbase.near/widget/storage_management", "fact_widget_deployments_id": "c9146360dbcf308319a5efc1343c5805", "inserted_timestamp": "2024-04-04T17:32:58.816Z", "modified_timestamp": "2024-04-04T18:35:57.019Z", "__row_index": 1}