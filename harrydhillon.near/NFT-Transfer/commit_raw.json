{"tx_hash": "5mNC3HxDWPrTE3xT433XJpQkZCL1jT4r4wd5XnNf7kQv", "action_id_social": "D7UqrQDqX7kLYRR9FZoEKZYYahqVhVLb8JhVepAffbwY-0-widget", "block_id": 101330327, "block_timestamp": "2023-09-17T13:22:13.469Z", "signer_id": "harrydhillon.near", "widget_name": "NFT-Transfer", "source_code": "// add nft transfers here\n// NEED TO FIX SCIENTIFIC NOTION ON PRICE //  ADD ERROR CHECKING for nft contract but preview is enough\nconst image = props.image;\nconst onChange = props.onChange;\nconst amount = \"10000000000000000000000\"; // 0.01 NEAR // amount to list at, by default its for other marketplaces\nconst accountId = context.accountId; // add check for context it\nconst ownerId = \"minorityprogrammers.near\"; // attribution\nconst nft = props.nft ?? {\n  contractId: props.contractId,\n  tokenId: props.tokenId,\n}; // just in case need to pass in a NFT\nconst contractId = \"genadrop-contract.nftgen.near\"; // default nft contract\nconst tokenId = \"1679119560198\"; // maybe condtional check if props is eempty // default nft\nconst fewfarmarket = \"market.fewandfar.near\";\nconst tradeportmarket = \"market.tradeport.near\";\n// fewfar link // display button if listed // asking them for format and they are working on a fix // https://fewfar.com/genadrop-single-nft-near/1675689302938/\nconst tradeportLink =\n  \"https://www.tradeport.xyz/near/collection/\" + contractId + \"/\" + tokenId;\n// maybe utilize the helper funciton here\n// const fewfarlink =\nconst default_receiver = \"minorityprogrammers.near\"; // default reciver nft for transfers\nconst msg =\n  '{\"price\":' +\n  '\"' +\n  amount +\n  '\"' +\n  ',\"market_type\":\"sale\",\"ft_token_id\":\"near\"}';\n// need to find custom market link to work with\n\nconst nftMetadata = Near.view(contractId, \"nft_metadata\"); // get the contract name\nconst tokenInfo = Near.view(contractId, \"nft_token\", {\n  token_id: tokenId,\n});\n\ninitState({\n  contractId: contractId,\n  tokenId: tokenId,\n  tradeportLink: tradeportLink,\n  validMarketLink: true,\n  nftMetadata: nftMetadata,\n  tokenInfo: tokenInfo,\n  receiverId: default_receiver,\n  validReceiver: true,\n  ownsNFT: false, // change this and check intially\n  transfer: false, // add checkbox for transfer that shows\n  url: image.url,\n  allNFTS: [],\n  nft: image.nft ?? {}, // from santiago\n});\n\n/* HELPER FUNCTION */\nfunction isNearAddress(address) {\n  if (typeof address !== \"string\") {\n    return false;\n  }\n  if (!address.endsWith(\".near\")) {\n    return false;\n  }\n  const parts = address.split(\".\");\n  if (parts.length !== 2) {\n    return false;\n  }\n  if (parts[0].length < 2 || parts[0].length > 32) {\n    return false;\n  }\n  if (!/^[a-z0-9_-]+$/i.test(parts[0])) {\n    return false;\n  }\n  return true;\n}\n\nconst offer = () => {\n  if (!accountId) {\n    return;\n  }\n  // need to buffer serialize arguments, add helper functions with state arguments\n  const gas = 100000000000000; // 100 tGas\n  //   const deposit = 1; // exactly 1 yocto\n  const deposit = 1; // 0.01 near // maybe less\n  Near.call([\n    {\n      contractName: state.contractId,\n      methodName: \"nft_transfer\",\n      args: {\n        receiver_id: state.receiverId,\n        token_id: state.tokenId,\n      },\n      gas: gas ?? 200000000000000,\n      deposit: deposit ?? 10000000000000000000000,\n    },\n  ]);\n};\n\nconst ConfirmOffer = () => {\n  return <></>;\n};\n\nreturn (\n  <div>\n    <h1> \ud83d\udecd\ufe0f Transfer NFT </h1>\n    <div style={{ display: \"flex\", gap: \"5px\" }}>\n      <div\n        className=\"p-2\"\n        style={{\n          background: \"#fdfdfd\",\n          border: \"1px solid lightgray\",\n          borderTop: 0,\n          width: \"40%\",\n          borderRadius: \"5px\",\n        }}\n      >\n        <div>\n          <p>Your Wallet : {accountId} </p>\n          <div className=\"mt-2\">\n            <Widget\n              src={`harrydhillon.near/widget/nft-selector`}\n              props={{\n                selectedNFTS: state.allNFTS,\n                onChange: (nftDetails) => {\n                  const isInList = !!state.allNFTS.filter(\n                    ({ tokenId }) => tokenId === nftDetails.tokenId\n                  )?.[0];\n                  console.log(\n                    isInList,\n                    state.allNFTS.filter(\n                      ({ tokenId }) => tokenId !== nftDetails.tokenId\n                    ),\n                    state.allNFTS\n                  );\n                  if (inList) {\n                    State.update({\n                      allNFTS: state.allNFTS.filter(\n                        ({ tokenId }) => tokenId !== nftDetails.tokenId\n                      ),\n                    });\n                  } else {\n                    State.update({\n                      allNFTS: [...state.allNFTS, nftDetails],\n                    });\n                  }\n                },\n              }}\n            />\n          </div>\n        </div>\n      </div>\n      <div\n        style={{\n          width: \"20%\",\n          padding: 10,\n          border: \"1px solid lightgray\",\n          borderRadius: 10,\n          height: \"fit-content\",\n        }}\n      >\n        <h4>Offer </h4>\n        Instructions:\n        <br />\n        1. Select the NFTs you want to trade.\n        <br />\n        2. Input the recipient's address.\n        <br />\n        3. Select the NFTs you want to receive.\n        <br />\n        4. Click on the \"Offer\" button.\n        <input\n          style={{ marginTop: 10 }}\n          type=\"number\"\n          placeholder=\"amount in near \u24c3\"\n        />\n        <input\n          style={{ marginTop: 10, marginBottom: 20 }}\n          placeholder=\"Recipient Address\"\n        />\n        <button onClick={() => {}} style={{ width: \"100%\" }}>\n          Offer\n        </button>\n      </div>\n      <div\n        className=\"p-2\"\n        style={{\n          background: \"#fdfdfd\",\n          border: \"1px solid lightgray\",\n          borderTop: 0,\n          width: \"40%\",\n          borderRadius: \"5px\",\n        }}\n      >\n        <div>\n          <p>Recipient{`'`}s Wallet</p>\n          <div className=\"mt-2\"></div>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n", "metadata": {"platform": "jutsu.ai"}, "branch": {"draft": null}, "widget_modules_used": null, "widget_url": "https://near.social/#/harrydhillon.near/widget/NFT-Transfer", "fact_widget_deployments_id": "6b9620c576a838e4e08494d6713c69c7", "inserted_timestamp": "2023-09-17T15:23:44.290Z", "modified_timestamp": "2023-09-17T15:23:44.290Z", "__row_index": 16}