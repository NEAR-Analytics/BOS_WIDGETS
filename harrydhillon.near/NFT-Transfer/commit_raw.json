{"tx_hash": "6ZWZGpzRKuGET3iDRTvkwC1cNanTDrwtAapbhb4xLgnd", "action_id_social": "3d25Uugk64oeCWspqY7DrefyDhcxyGjtkr9zPLw4mByi-0-widget", "block_id": 101332352, "block_timestamp": "2023-09-17T14:01:27.833Z", "signer_id": "harrydhillon.near", "widget_name": "NFT-Transfer", "source_code": "// add nft transfers here\n// NEED TO FIX SCIENTIFIC NOTION ON PRICE //  ADD ERROR CHECKING for nft contract but preview is enough\nconst image = props.image;\nconst onChange = props.onChange;\nconst amount = \"10000000000000000000000\"; // 0.01 NEAR // amount to list at, by default its for other marketplaces\nconst accountId = context.accountId; // add check for context it\nconst ownerId = \"minorityprogrammers.near\"; // attribution\nconst nft = props.nft ?? {\n  contractId: props.contractId,\n  tokenId: props.tokenId,\n}; // just in case need to pass in a NFT\nconst contractId = \"genadrop-contract.nftgen.near\"; // default nft contract\nconst tokenId = \"1679119560198\"; // maybe condtional check if props is eempty // default nft\nconst fewfarmarket = \"market.fewandfar.near\";\nconst tradeportmarket = \"market.tradeport.near\";\n// fewfar link // display button if listed // asking them for format and they are working on a fix // https://fewfar.com/genadrop-single-nft-near/1675689302938/\nconst tradeportLink =\n  \"https://www.tradeport.xyz/near/collection/\" + contractId + \"/\" + tokenId;\n// maybe utilize the helper funciton here\n// const fewfarlink =\nconst default_receiver = \"\"; // default reciver nft for transfers\nconst msg =\n  '{\"price\":' +\n  '\"' +\n  amount +\n  '\"' +\n  ',\"market_type\":\"sale\",\"ft_token_id\":\"near\"}';\n// need to find custom market link to work with\n\nconst nftMetadata = Near.view(contractId, \"nft_metadata\"); // get the contract name\nconst tokenInfo = Near.view(contractId, \"nft_token\", {\n  token_id: tokenId,\n});\n\ninitState({\n  receiverId: default_receiver,\n  validReceiver: true,\n  ownsNFT: false, // change this and check intially\n  transfer: false, // add checkbox for transfer that shows\n  url: image.url,\n  allNFTS: [],\n  nft: image.nft ?? {}, // from santiago\n});\n\nconst ShadowBOX = styled.div`\n-webkit-box-shadow: -1px 0px 9px 8px rgba(0,0,0,0.03);\n-moz-box-shadow: -1px 0px 9px 8px rgba(0,0,0,0.03);\nbox-shadow: -1px 0px 9px 8px rgba(0,0,0,0.03);\n  border-radius:10px;\n  padding-top:10px;\n  padding-bottom:10px;\n`;\n\n/* HELPER FUNCTION */\nfunction isNearAddress(address) {\n  if (typeof address !== \"string\") {\n    return false;\n  }\n  if (!address.endsWith(\".near\")) {\n    return false;\n  }\n  const parts = address.split(\".\");\n  if (parts.length !== 2) {\n    return false;\n  }\n  if (parts[0].length < 2 || parts[0].length > 32) {\n    return false;\n  }\n  if (!/^[a-z0-9_-]+$/i.test(parts[0])) {\n    return false;\n  }\n  return true;\n}\n\nconst offer = () => {\n  if (!accountId) {\n    return;\n  }\n  // need to buffer serialize arguments, add helper functions with state arguments\n  const gas = 100000000000000; // 100 tGas\n  //   const deposit = 1; // exactly 1 yocto\n  const deposit = 1; // 0.01 near // maybe less\n  Near.call([\n    {\n      contractName: state.contractId,\n      methodName: \"nft_transfer\",\n      args: {\n        receiver_id: state.receiverId,\n        token_id: state.tokenId,\n      },\n      gas: gas ?? 200000000000000,\n      deposit: deposit ?? 10000000000000000000000,\n    },\n  ]);\n};\n\nconst ConfirmOffer = () => {\n  return (\n    <div>\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        <h4>Confirm NFT Offer</h4>\n        <button\n          onClick={() => {\n            State.update({ isOfferModalOpen: false });\n          }}\n        >\n          X\n        </button>\n      </div>\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          flexWrap: \"wrap\",\n          justifyContent: \"space-around\",\n          gap: \"5px\",\n          overflowX: \"hidden\",\n          overFlowY: \"scroll\",\n        }}\n      >\n        {state.allNFTS.map((item) => (\n          <ShadowBOX\n            style={{\n              width: 200,\n              marginBottom: 10,\n              display: \"flex\",\n              textAlign: \"center\",\n              alignItems: \"center\",\n              justifyContent:\"center\",\n            }}\n          >\n            <div>\n              <img\n                style={{ width: 150, height: 150, borderRadius: 10 }}\n                src={item.media}\n              />\n              <p style={{ marginBottom: 0 }}>Token ID : {item.tokenId}</p>\n              <p style={{ marginBottom: 0, fontSize: 10 }}>\n                NFT Contract : {item.contractId}\n              </p>\n            </div>\n          </ShadowBOX>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nreturn (\n  <div>\n    <h1> \ud83d\udecd\ufe0f Transfer NFT </h1>\n    <div style={{ display: \"flex\", gap: \"5px\" }}>\n      <div\n        className=\"p-2\"\n        style={{\n          background: \"#fdfdfd\",\n          border: \"1px solid lightgray\",\n          borderTop: 0,\n          width: \"40%\",\n          borderRadius: \"5px\",\n        }}\n      >\n        <div>\n          <p>Your Wallet : {accountId} </p>\n          <div className=\"mt-2\">\n            <Widget\n              src={`harrydhillon.near/widget/nft-selector`}\n              props={{\n                selectedNFTS: state.allNFTS,\n                onChange: (nftDetails) => {\n                  const isInList = !!state.allNFTS.filter(\n                    ({ tokenId }) => tokenId === nftDetails.tokenId\n                  )?.[0];\n                  console.log(\n                    isInList,\n                    state.allNFTS.filter(\n                      ({ tokenId }) => tokenId !== nftDetails.tokenId\n                    ),\n                    state.allNFTS\n                  );\n                  if (isInList) {\n                    State.update({\n                      allNFTS: state.allNFTS.filter(\n                        ({ tokenId }) => tokenId !== nftDetails.tokenId\n                      ),\n                    });\n                  } else {\n                    State.update({\n                      allNFTS: [...state.allNFTS, nftDetails],\n                    });\n                  }\n                },\n              }}\n            />\n          </div>\n        </div>\n      </div>\n      <div\n        style={{\n          width: \"20%\",\n          padding: 10,\n          border: \"1px solid lightgray\",\n          borderRadius: 10,\n          height: \"fit-content\",\n        }}\n      >\n        <h4>Offer </h4>\n        Instructions:\n        <br />\n        1. Select the NFTs you want to trade.\n        <br />\n        2. Input the recipient's address.\n        <br />\n        3. Select the NFTs you want to receive.\n        <br />\n        4. Click on the \"Offer\" button.\n        <input\n          style={{ marginTop: 10 }}\n          type=\"number\"\n          placeholder=\"amount in near \u24c3\"\n          value={state.offerAmount}\n          onChange={(e) => {\n            State.update({ offerAmount: e.target.value });\n          }}\n        />\n        <input\n          style={{ marginTop: 10 }}\n          placeholder=\"Recipient Address\"\n          value={state.receiverId}\n          onChange={(e) => {\n            State.update({ receiverId: e.target.value });\n          }}\n        />\n        {!isNearAddress(state.receiverId) && (\n          <p style={{ color: \"red\", fontSize: 10, marginBottom: 0 }}>\n            Please enter a valid near wallet address\n          </p>\n        )}\n        <button\n          disabled={\n            state.allNFTS.length === 0 ||\n            !isNearAddress(state.receiverId) ||\n            state.offerAmount === \"\"\n          }\n          onClick={() => {\n            State.update({ isOfferModalOpen: true });\n          }}\n          style={{ width: \"100%\", marginTop: 15 }}\n        >\n          Offer\n        </button>\n      </div>\n      <div\n        className=\"p-2\"\n        style={{\n          background: \"#fdfdfd\",\n          border: \"1px solid lightgray\",\n          borderTop: 0,\n          width: \"40%\",\n          borderRadius: \"5px\",\n        }}\n      >\n        <div>\n          <p>Recipient{`'`}s Wallet</p>\n          <div className=\"mt-2\"></div>\n        </div>\n      </div>\n    </div>\n\n    <Widget\n      src=\"harrydhillon.near/widget/Keypom.Components.Modal\"\n      props={{\n        children: ConfirmOffer(),\n        isOpen: state.isOfferModalOpen,\n        contentStyles: {\n          style: {\n            overflowX: \"hidden\",\n            width: 600,\n          },\n        },\n      }}\n    />\n  </div>\n);\n", "metadata": null, "branch": {"draft": null}, "widget_modules_used": null, "widget_url": "https://near.social/#/harrydhillon.near/widget/NFT-Transfer", "fact_widget_deployments_id": "26633272cf2651b8c42b501bb3ab67f9", "inserted_timestamp": "2023-09-17T15:46:17.835Z", "modified_timestamp": "2023-09-17T15:46:17.835Z", "__row_index": 15}