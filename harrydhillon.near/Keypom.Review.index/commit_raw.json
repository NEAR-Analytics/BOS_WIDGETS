{"tx_hash": "2vRYWh27t7t8RjBwG6hcUtXP8Fbcttfyee52BgFU1Adh", "action_id_social": "9W96JiWmx48Zga9kb3nG3ShCte4uT8H6Utuhs7G9JP3-0-widget", "block_id": 101754311, "block_timestamp": "2023-09-23T06:08:05.896Z", "signer_id": "harrydhillon.near", "widget_name": "Keypom.Review.index", "source_code": "const HeadingDisplayFlex = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n`;\n\nconst Label = styled.p`\n    font-weight:500;\n    margin: 0;\n`;\n\nconst UnstyledButton = styled.button`\n  background-color:transparent;\n  border-width:0px;\n  color:#00A7E4;\n`;\n\nconst EventDisplayFlex = styled.div`\n    display:flex;\n    margin-top:10px;\n    align-items: center;\n`;\n\nconst eventData = props.eventData ?? {};\nconst ticketValue = props.tickets ?? [];\n\nreturn (\n  <div style={{ padding: 10 }}>\n    <HeadingDisplayFlex>\n      <Label>Let\u2019s make sure all your details are correct</Label>\n      <UnstyledButton\n        onClick={() => {\n          State.update({ previewEvent: true });\n        }}\n      >\n        Preview Event Page\n      </UnstyledButton>\n    </HeadingDisplayFlex>\n    <EventDisplayFlex>\n      <div style={{ width: \"50%\", display: \"flex\", alignItems: \"center\" }}>\n        <img\n          style={{\n            width: 200,\n            height: 150,\n            objectFit: \"contain\",\n            borderRadius: 5,\n            margin: 10,\n            marginBottom: 5,\n            marginLeft: 0,\n          }}\n          src={`https://ipfs.near.social/ipfs/${eventData?.image?.cid}`}\n        />\n        <div>\n          <Label>Event name</Label>\n          <p style={{ fontSize: 12 }}>{eventData?.eventName}</p>\n          <Label>Event description</Label>\n          <p style={{ fontSize: 12 }}>{eventData?.description}</p>\n        </div>\n      </div>\n      <div style={{ width: \"10%\" }} />\n      <div style={{ width: \"40%\" }}>\n        <Label>Event date</Label>\n        <p style={{ fontSize: 12 }}>\n          {eventData?.isSingleDateEvent ? eventData.date : eventData?.from}\n        </p>\n        <Label>Event location</Label>\n        <p style={{ fontSize: 12 }}>{eventData.location}</p>\n      </div>\n    </EventDisplayFlex>\n    <Widget\n      props={{\n        ticketValue,\n      }}\n      src=\"harrydhillon.near/widget/Keypom.Review.TicketTable\"\n    />\n    <button\n      onClick={() => {\n        const tickets = props?.getStorage(\"tickets\");\n        const formValues = props?.getStorage(\"formValues\");\n        const collectInfo = props?.getStorage(\"collectInfo\");\n        props?.setStorage(\"tickets\", \"\");\n        props?.setStorage(\"formValues\", \"\");\n        props?.setStorage(\"collectInfo\", \"\");\n        props?.setStorage(\n          \"allData\",\n          JSON.stringify({\n            tickets,\n            formValues,\n            collectInfo,\n          })\n        );\n      }}\n    >\n      Reset Fields\n    </button>\n    <button\n      onClick={() => {\n        const { tickets, formValues, collectInfo } = JSON.parse(\n          props?.getStorage(\"allData\")\n        );\n        props?.setStorage(\"tickets\", JSON.stringify(tickets));\n        props?.setStorage(\"formValues\", JSON.stringify(formValues));\n        props?.setStorage(\"collectInfo\", JSON.stringify(collectInfo));\n      }}\n    >\n      Revert Feidls\n    </button>\n    {state?.previewEvent && (\n      <Widget\n        src=\"harrydhillon.near/widget/Keypom.Components.Modal\"\n        props={{\n          children: (\n            <div>\n              <Widget\n                props={{ ...eventData, date: eventData.from }}\n                src=\"harrydhillon.near/widget/Keypom.EventInfo.Eventview\"\n              />\n              <button\n                onClick={() => {\n                  State.update({ previewEvent: false });\n                }}\n                style={{\n                  width: \"100%\",\n                  backgroundColor: \"white\",\n                  fontSize: 14,\n                  borderRadius: 10,\n                  borderWidth: 1,\n                  borderColor: \"lightgray\",\n                  marginTop: 5,\n                  color: \"black\",\n                }}\n              >\n                Close\n              </button>\n            </div>\n          ),\n          isOpen: state.previewEvent,\n          contentStyles: {\n            style: {\n              width: \"600px\",\n            },\n          },\n        }}\n      />\n    )}\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/harrydhillon.near/widget/Keypom.Review.index", "fact_widget_deployments_id": "acc68103b9e6b82035634b39e2131806", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 16}