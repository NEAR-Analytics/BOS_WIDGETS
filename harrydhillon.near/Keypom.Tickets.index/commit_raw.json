{"tx_hash": "7kAwKgVqH1x91URCu8LffubFHFzpNMUmzPGSJkNba9vA", "action_id_social": "8ZfpRimrJwZczv4apSNsufNUApxHBN7ByRaJ1hMkP5Lq-0-widget", "block_id": 99019577, "block_timestamp": "2023-08-17T14:24:28.118Z", "signer_id": "harrydhillon.near", "widget_name": "Keypom.Tickets.index", "source_code": "const CreateTicketContainer = styled.div`\ndisplay:flex;\njustify-content:space-between;\nalign-items:center;\n`;\n\nconst Table = styled.table`\n  width: 100%;\n  border-radius: 8px;\n  overflow:hidden;\n  border:0.1px solid #30C9F3;\n  margin: 20px 0;\n  border-collapse: separate;\n  border-spacing: 0;\n`;\n\nconst TableHead = styled.thead`\n  background-color: #F8FAFC;\n`;\n\nconst TableRow = styled.tr`\n\n`;\n\nconst TableHeader = styled.th`\n  padding: 8px;\n  font-weight:500;\n  text-align: left;\n`;\n\nconst TableCell = styled.td`\n  padding: 8px;\n`;\n\nconst UnstyledButton = styled.button`\n  background-color:transparent;\n  border-width:0px;\n  color:#00A7E4;\n`;\n\nconst ActionButton = styled.button`\n  color: black;\n  padding: 5px 10px;\n  padding-bottom:8px;\n  background-color:transparent;\n  border:1px solid lightgray;\n  border-radius: 5px;\n  cursor: pointer;\n`;\n\nState.init({\n  isCreateTicketModalOpen: false,\n  tickets: [],\n});\n\nconst createTickets = () => {\n  return (\n    <>\n      <CreateTicketContainer>\n        <div>\n          <p style={{ marginBottom: 0, fontSize: 20, fontWeight: \"600\" }}>\n            Create Tickets *\n          </p>\n          <p style={{ marginBottom: 0 }}>\n            Create custom tickets for [event name].\n          </p>\n        </div>\n        <button\n          onClick={() => {\n            State.update({\n              isCreateTicketModalOpen: true,\n            });\n          }}\n          style={{ backgroundColor: \"black\", borderWidth: 0 }}\n        >\n          Create Ticket\n        </button>\n        {state.isCreateTicketModalOpen && (\n          <Widget\n            src=\"harrydhillon.near/widget/Keypom.Tickets.AddTicketModal\"\n            props={{\n              isOpen: state.isCreateTicketModalOpen,\n              onSave: (ticketData) => {\n                if (state.edit) {\n                  const allTickets = [...state.tickets];\n                  allTickets[state.ticketToEdit] = ticketData;\n                  State.update({\n                    tickets: allTickets,\n                    isCreateTicketModalOpen: false,\n                    editMode: false,\n                    editVal: null,\n                  });\n                } else {\n                  State.update({\n                    tickets: [...state.tickets, ticketData],\n                    isCreateTicketModalOpen: false,\n                  });\n                }\n              },\n              editMode: state.editMode,\n              editVal: state.editVal,\n              onClose: () => {\n                State.update({\n                  isCreateTicketModalOpen: false,\n                });\n              },\n            }}\n          />\n        )}\n      </CreateTicketContainer>\n      {state.tickets.length !== 0 && (\n        <div style={{ marginTop: 10 }}>\n          <p style={{ marginBottom: 0, fontSize: 20, fontWeight: \"600\" }}>\n            Your Tickets\n          </p>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableHeader>Ticket</TableHeader>\n                <TableHeader />\n                <TableHeader># of tickets</TableHeader>\n                <TableHeader>Price (NEAR)</TableHeader>\n                <TableHeader />\n              </TableRow>\n            </TableHead>\n            <tbody style={{ borderRadius: 10 }}>\n              {state.tickets.map((item, index) => (\n                <TableRow key={index}>\n                  <TableCell style={{ width: \"30%\" }}>\n                    {item.ticketName}\n                  </TableCell>\n                  <TableCell>\n                    <UnstyledButton>Preview Ticket</UnstyledButton>\n                  </TableCell>\n                  <TableCell>{item.numberOfTickets}</TableCell>\n                  <TableCell>{item.ticketPricing}</TableCell>\n                  <TableCell>\n                    <ActionButton\n                      onClick={() => {\n                        State.update({\n                          tickets: state.tickets.filter(\n                            (item, idx) => idx !== index\n                          ),\n                        });\n                      }}\n                    >\n                      <Widget src=\"harrydhillon.near/widget/Keypom.Tickets.DeleteSVG\" />\n                    </ActionButton>\n                    <ActionButton\n                      onClick={() => {\n                        const currentTicket = state.tickets[index];\n                        State.update({\n                          tickets: [...state.tickets, currentTicket],\n                        });\n                      }}\n                    >\n                      <Widget src=\"harrydhillon.near/widget/Keypom.Tickets.CloneSVG\" />\n                    </ActionButton>\n                    <ActionButton\n                      onClick={() => {\n                        State.update({\n                          isCreateTicketModalOpen: true,\n                          editMode: true,\n                          ticketToEdit: index,\n                          editVal: item,\n                        });\n                      }}\n                    >\n                      <Widget src=\"harrydhillon.near/widget/Keypom.Tickets.EditSVG\" />\n                    </ActionButton>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </tbody>\n          </Table>\n        </div>\n      )}\n    </>\n  );\n};\n\nreturn <div style={{ padding: 10 }}>{createTickets()}</div>;\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/harrydhillon.near/widget/Keypom.Tickets.index", "fact_widget_deployments_id": "5ef2b10ba565ceb249b79bfb0ccad602", "inserted_timestamp": "2023-08-17T16:26:17.975Z", "modified_timestamp": "2023-08-17T16:26:17.975Z", "__row_index": 15}