{"tx_hash": "D3zDPaapgcXq67g8sfq22JpWgyAUJEa2sMLWNaSQvDBk", "action_id_social": "FRDGHGgZPBtEHwj9UjCjqWgr9t8bZ2f9ESWN6XDFRWb1-0-widget", "block_id": 101346585, "block_timestamp": "2023-09-17T18:50:28.597Z", "signer_id": "harrydhillon.near", "widget_name": "SearchPage.ComponentItem.TimeAgo", "source_code": "if (props.now) {\n  return \"now\";\n}\n\nconst keyPath = props.keyPath;\nlet blockHeight = props.blockHeight ? parseInt(props.blockHeight) : undefined;\n\nif (blockHeight === undefined && keyPath) {\n  blockHeight = Social.keys(keyPath, undefined, {\n    return_type: \"BlockHeight\",\n  });\n  if (blockHeight === null) {\n    return \"Loading\";\n  }\n  keyPath.split(\"/\").forEach((key) => {\n    blockHeight = blockHeight[key];\n  });\n}\n\nif (!blockHeight) {\n  return \"unknown\";\n}\n\nconst block = Near.block(blockHeight);\n\nif (block === null) {\n  return \"Loading\";\n}\n\nif (!block) {\n  return \"unknown\";\n}\n\nconst timeMs = parseFloat(block.header.timestamp_nanosec) / 1e6;\nconst date = new Date(timeMs);\nconst title = `${date.toLocaleTimeString([], {\n  hour: \"2-digit\",\n  minute: \"2-digit\",\n})} ${date.toLocaleDateString([], {\n  day: \"numeric\",\n  month: \"short\",\n  year: \"numeric\",\n})}`;\n\nfunction timeAgo(timestamp) {\n    const now = new Date();\n    const past = new Date(timestamp);\n    const msPerMinute = 60 * 1000;\n    const msPerHour = msPerMinute * 60;\n    const msPerDay = msPerHour * 24;\n    const msPerMonth = msPerDay * 30.44; // average month\n    const msPerYear = msPerDay * 365.25; // account for leap year\n\n    const elapsed = now - past;\n\n    if (elapsed < msPerMinute) {\n        return 'just now';\n    } else if (elapsed < msPerHour) {\n        return Math.round(elapsed / msPerMinute) + ' minutes ago';\n    } else if (elapsed < msPerDay) {\n        return Math.round(elapsed / msPerHour) + ' hours ago';\n    } else if (elapsed < msPerMonth) {\n        const days = Math.round(elapsed / msPerDay);\n        return days === 1 ? '1 day ago' : days + ' days ago';\n    } else if (elapsed < msPerYear) {\n        const months = Math.round(elapsed / msPerMonth);\n        return months === 1 ? '1 month ago' : months + ' months ago';\n    } else {\n        const years = Math.round(elapsed / msPerYear);\n        return years === 1 ? '1 year ago' : years + ' years ago';\n    }\n}\n\nconst TimeAgoContainer = styled.div`\n  color: ${props.theme.textColor2};\n  display: flex;\n  gap: 4px;\n  justify-content: center;\n  // padding: 4px 8px;\n  // border-radius: 4px;\n\n  // position: absolute;\n  // top: 8px;\n  // right: 8px;\n  // background-color: ${props.theme.ui2};\n\n  z-index: 10;\n`;\n\n// <TimeAgoContainer>\n// <i className=\"bi bi-clock\" style={{ fontSize: 14 }}></i>{\" \"}\nreturn (\n  <p style={props.style} title={title}>\n    {timeAgo(Date.now() - timeMs)} ago\n  </p>\n);\n// </TimeAgoContainer>\n", "metadata": {"platform": "jutsu.ai"}, "branch": {"draft": null}, "widget_modules_used": null, "widget_url": "https://near.social/#/harrydhillon.near/widget/SearchPage.ComponentItem.TimeAgo", "fact_widget_deployments_id": "554e134253bc327fe9700a4d9f869fdf", "inserted_timestamp": "2023-09-17T20:34:58.150Z", "modified_timestamp": "2023-09-17T20:34:58.150Z", "__row_index": 2}