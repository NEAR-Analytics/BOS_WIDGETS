{"tx_hash": "7XetN9Vdr6ZryK9dt8ZV25bwDRySpm3qLAGBpDUuGGoE", "action_id_social": "E4UGGrtX7DMAx2yK4ZpJ1BaeYPZwb6ToVdmL6ULuXKWX-0-widget", "block_id": 101762286, "block_timestamp": "2023-09-23T08:56:44.708Z", "signer_id": "harrydhillon.near", "widget_name": "Keypom.TicketDropLayout", "source_code": "const FormBackground = styled.div`\nbackground-color:white;\npadding:10px;\npadding-top:30px;\nmargin-top:40px;\nmargin-bottom:100px;\nborder-radius:10px;\n  border: 2px solid #B6E8F7;\n`;\n\nconst RadiantBackground = styled.div`\n    background: rgb(220,244,251);\n    min-height:100vh;\n    padding:10px;\n    padding-left:50px;\n    padding-right:50px; \n    background: linear-gradient(0deg, rgba(220,244,251,1) 0%, rgba(251,254,255,1) 95%, rgba(255,255,255,1) 100%);\n`;\n\nState.init({\n  index: 0,\n});\n\nconst Grid = styled.div`\n    display: grid;\n    grid-template-columns: 1fr;  // By default, 1 item per row\n    gap: 16px;  // Gap between rows and columns\n\n    @media (min-width: 1000px) {\n        grid-template-columns: 1fr 1fr;  // 2 items per row if width is greater than 1000px\n    }\n`;\nconst Label = styled.p`\n  font-size: 16px;\n  translate: 3px 8px;\n  font-style: normal;\n  font-weight: 500;\n`;\n\nconst BottomStyledContainer = styled.div`\n  background-color: white;\n  width: 100%;\n  padding: 10px;\n  padding-left: 25px;\n  position: absolute;\n  padding-right: 25px;\n  display: flex;\n  justify-content: space-between;\n  bottom: 0;\n  left: 0;\n`;\n\nconst BackButton = styled.button`\n  background-color:transparent;\n  border-width:0px;\n  color:black;\n  padding-left:10px;\n  border-radius:5px;\n  box-shadow: 10px 10px 38px -3px rgba(0,0,0,0.09);\n  -webkit-box-shadow: 10px 10px 38px -3px rgba(0,0,0,0.09);\n  -moz-box-shadow: 10px 10px 38px -3px rgba(0,0,0,0.09);\n  padding-right:10px;\n  opacity:${(props) => (props.disabled ? 0.5 : 1)};\n`;\n\nconst AllSteps = [\n  {\n    label: \"Event Info\",\n    active: state.index === 0,\n  },\n  {\n    label: \"Collect Info\",\n    active: state.index === 1,\n  },\n  {\n    label: \"Tickets\",\n    active: state.index === 2,\n  },\n  {\n    label: \"Review\",\n    active: state.index === 3,\n  },\n];\n\nconst componentsToRender = [\n  <Widget\n    props={{\n      validationMode: state.validationMode,\n      setStorage: (key, val) => Storage.set(key, val),\n      getStorage: (key, val) => Storage.get(key, val),\n      nextStep: (isValid) => {\n        if (isValid) {\n          State.update({ validationMode: false, index: state.index + 1 });\n        } else {\n          State.update({ validationMode: false });\n        }\n      },\n    }}\n    src=\"harrydhillon.near/widget/Keypom.EventInfo.Form\"\n  />,\n  <Widget\n    props={{\n      setStorage: (key, val) => Storage.set(key, val),\n      getStorage: (key, val) => Storage.get(key, val),\n    }}\n    src=\"harrydhillon.near/widget/Keypom.CollectInfo.Index\"\n  />,\n  <Widget\n    props={{\n      setStorage: (key, val) => Storage.set(key, val),\n      getStorage: (key, val) => Storage.get(key, val),\n    }}\n    src=\"harrydhillon.near/widget/Keypom.Tickets.index\"\n  />,\n  <Widget\n    props={{\n      setStorage: (key, val) => Storage.set(key, val),\n      getStorage: (key, val) => Storage.get(key, val),\n      tickets: Storage.get(\"tickets\") ? JSON.parse(Storage.get(\"tickets\")) : [],\n      eventData: Storage.get(\"formValues\")\n        ? JSON.parse(Storage.get(\"formValues\"))\n        : {},\n    }}\n    src=\"harrydhillon.near/widget/Keypom.Review.index\"\n  />,\n];\n\nconst formContent = () => {\n  return (\n    <>\n      <p style={{ fontSize: 12, letterSpacing: 0.5, marginBottom: 0 }}>\n        <span style={{ color: \"gray\" }}>All Drops</span> {\">\"} New Ticket Drop\n      </p>\n      <p style={{ fontSize: 36, fontWeight: \"500\" }}>\n        Enter the details for your new Ticket Drop\n      </p>\n      <FormBackground>\n        <div\n          style={{\n            width: \"fit-content\",\n            margin: \"auto\",\n            transform: \"scale(0.8)\",\n            marginTop: -65,\n          }}\n        >\n          <Widget src=\"harrydhillon.near/widget/Keypom.Components.TicketLogo\" />\n        </div>\n        <div\n          style={{\n            margin: \"auto\",\n            display: \"flex\",\n            alignItems: \"center\",\n            width: \"fit-content\",\n            justifyContent: \"space-evently\",\n          }}\n        >\n          {AllSteps.map((item, idx) => (\n            <div\n              style={{\n                marginRight: 20,\n                backgroundColor: \"transparent\",\n                color: \"black\",\n                borderWidth: 0,\n              }}\n              onClick={() => {\n                // State.update({ index: idx });\n              }}\n            >\n              <Widget\n                src=\"harrydhillon.near/widget/Keypom.Components.StepLabel\"\n                props={{\n                  stepNumber: idx + 1,\n                  label: item.label,\n                  active: item?.active,\n                }}\n              />\n            </div>\n          ))}\n        </div>\n        {componentsToRender[state.index]}\n      </FormBackground>\n      <BottomStyledContainer>\n        <BackButton\n          disabled={state.index === 0}\n          onClick={() => {\n            State.update({ index: state.index - 1 });\n          }}\n        >\n          Back\n        </BackButton>\n        <button\n          disabled={state.index === 3}\n          onClick={() => {\n            if (state.index === 0) {\n              State.update({ validationMode: true });\n            } else {\n              State.update({ index: state.index + 1 });\n            }\n          }}\n          style={{ backgroundColor: \"black\", borderWidth: 0 }}\n        >\n          {state.index !== 3 ? `Next` : `Create Event for X NEAR`}\n        </button>\n      </BottomStyledContainer>\n    </>\n  );\n};\n\nreturn <RadiantBackground>{formContent()}</RadiantBackground>;\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/harrydhillon.near/widget/Keypom.TicketDropLayout", "fact_widget_deployments_id": "c07feba756ab21d06c3af476544aadda", "inserted_timestamp": "2023-09-23T10:50:27.558Z", "modified_timestamp": "2023-09-23T10:50:27.558Z", "__row_index": 0}