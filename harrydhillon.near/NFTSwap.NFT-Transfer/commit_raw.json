{"tx_hash": "FeEY6zBtv4UjwLN7tvGGgteKDFR2Ytk76tdvukSHBvjL", "action_id_social": "581NJoQ12bSN5FGWimEXRqiVsKBR75cMt9FUkymRmsud-0-widget", "block_id": 101512006, "block_timestamp": "2023-09-20T00:18:35.513Z", "signer_id": "harrydhillon.near", "widget_name": "NFTSwap.NFT-Transfer", "source_code": "// add nft transfers here\n// NEED TO FIX SCIENTIFIC NOTION ON PRICE //  ADD ERROR CHECKING for nft contract but preview is enough\nconst amount = \"10000000000000000000000\"; // 0.01 NEAR // amount to list at, by default its for other marketplaces\nconst accountId = context.accountId; // add check for context it\nconst ownerId = \"minorityprogrammers.near\"; // attribution\n\nconst contractId = \"genadrop-contract.nftgen.near\"; // default nft contract\nconst tokenId = \"1679119560198\"; // maybe condtional check if props is eempty // default nft\nconst fewfarmarket = \"market.fewandfar.near\";\nconst tradeportmarket = \"market.tradeport.near\";\n// fewfar link // display button if listed // asking them for format and they are working on a fix // https://fewfar.com/genadrop-single-nft-near/1675689302938/\nconst tradeportLink =\n  \"https://www.tradeport.xyz/near/collection/\" + contractId + \"/\" + tokenId;\n// maybe utilize the helper funciton here\n// const fewfarlink =\nconst default_receiver = \"\"; // default reciver nft for transfers\nconst msg =\n  '{\"price\":' +\n  '\"' +\n  amount +\n  '\"' +\n  ',\"market_type\":\"sale\",\"ft_token_id\":\"near\"}';\n// need to find custom market link to work with\n\nconst nftMetadata = Near.view(contractId, \"nft_metadata\"); // get the contract name\nconst tokenInfo = Near.view(contractId, \"nft_token\", {\n  token_id: tokenId,\n});\n\ninitState({\n  receiverId: default_receiver,\n  offerAmount: 0,\n  validReceiver: true,\n  ownsNFT: false, // change this and check intially\n  transfer: false, // add checkbox for transfer that shows\n  url: image.url,\n  sendNFTS: [],\n  offerNFTS: [],\n  nft: image.nft ?? {}, // from santiago\n});\n\n/* HELPER FUNCTION */\nfunction isNearAddress(address) {\n  if (typeof address !== \"string\" || address === \"\") {\n    return false;\n  }\n  if (context.accountId === address) {\n    return false;\n  }\n\n  return true;\n}\n\nconst offerButtonDisabled =\n  (state.sendNFTS.length === 0 && state.offerNFTS.length === 0) ||\n  !isNearAddress(state.receiverId);\n\nconsole.log(state);\n\nreturn (\n  <div>\n    <h1> \ud83d\udecd\ufe0f Transfer NFT </h1>\n    <div style={{ display: \"flex\", gap: \"5px\" }}>\n      <div\n        className=\"p-2\"\n        style={{\n          background: \"#fdfdfd\",\n          border: \"1px solid lightgray\",\n          borderTop: 0,\n          width: \"40%\",\n          borderRadius: \"5px\",\n        }}\n      >\n        <div>\n          <p style={{ wordBreak: \"break-all\" }}>Your Wallet : {accountId} </p>\n          <div className=\"mt-2\">\n            <Widget\n              src={`harrydhillon.near/widget/nft-selector`}\n              props={{\n                selectedNFTS: state.sendNFTS,\n                onChange: (nftDetails) => {\n                  const isInList = !!state.sendNFTS.filter(\n                    ({ tokenId }) => tokenId === nftDetails.tokenId\n                  )?.[0];\n                  console.log(\n                    isInList,\n                    state.sendNFTS.filter(\n                      ({ tokenId }) => tokenId !== nftDetails.tokenId\n                    ),\n                    state.sendNFTS\n                  );\n                  if (isInList) {\n                    State.update({\n                      sendNFTS: state.sendNFTS.filter(\n                        ({ tokenId }) => tokenId !== nftDetails.tokenId\n                      ),\n                    });\n                  } else {\n                    State.update({\n                      sendNFTS: [...state.sendNFTS, nftDetails],\n                    });\n                  }\n                },\n              }}\n            />\n          </div>\n        </div>\n      </div>\n      <div\n        style={{\n          width: \"20%\",\n          padding: 10,\n          border: \"1px solid lightgray\",\n          borderRadius: 10,\n          height: \"fit-content\",\n        }}\n      >\n        <h4>Offer </h4>\n        Instructions:\n        <br />\n        1. Select the NFTs you want to trade.\n        <br />\n        2. Input the recipient's address.\n        <br />\n        3. Select the NFTs you want to receive.\n        <br />\n        4. Click on the \"Offer\" button.\n        <input\n          style={{ marginTop: 10 }}\n          type=\"number\"\n          placeholder=\"amount in near \u24c3\"\n          value={state.offerAmount}\n          onChange={(e) => {\n            State.update({ offerAmount: e.target.value });\n          }}\n        />\n        <input\n          style={{ marginTop: 10 }}\n          placeholder=\"Recipient Address\"\n          value={state.receiverId}\n          onChange={(e) => {\n            State.update({ receiverId: e.target.value });\n          }}\n        />\n        {!isNearAddress(state.receiverId) && (\n          <p style={{ color: \"red\", fontSize: 10, marginBottom: 0 }}>\n            Please enter a valid near wallet address\n          </p>\n        )}\n        <button\n          disabled={offerButtonDisabled}\n          onClick={() => {\n            State.update({ isOfferModalOpen: true });\n          }}\n          style={{ width: \"100%\", marginTop: 15 }}\n        >\n          Offer\n        </button>\n      </div>\n      <div\n        className=\"p-2\"\n        style={{\n          background: \"#fdfdfd\",\n          border: \"1px solid lightgray\",\n          borderTop: 0,\n          width: \"40%\",\n          borderRadius: \"5px\",\n        }}\n      >\n        <div>\n          <p>Recipient{`'`}s Wallet</p>\n          <div className=\"mt-2\">\n            {isNearAddress(state.receiverId) && (\n              <Widget\n                src={`harrydhillon.near/widget/nft-selector`}\n                props={{\n                  selectedNFTS: state.offerNFTS,\n                  accountId: state.receiverId,\n                  onChange: (nftDetails) => {\n                    const isInList = !!state.offerNFTS.filter(\n                      ({ tokenId }) => tokenId === nftDetails.tokenId\n                    )?.[0];\n                    console.log(\n                      isInList,\n                      state.offerNFTS.filter(\n                        ({ tokenId }) => tokenId !== nftDetails.tokenId\n                      ),\n                      state.offerNFTS\n                    );\n                    if (isInList) {\n                      State.update({\n                        offerNFTS: state.offerNFTS.filter(\n                          ({ tokenId }) => tokenId !== nftDetails.tokenId\n                        ),\n                      });\n                    } else {\n                      State.update({\n                        offerNFTS: [...state.offerNFTS, nftDetails],\n                      });\n                    }\n                  },\n                }}\n              />\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <Widget\n      src=\"harrydhillon.near/widget/NFTSwap.ConfirmOffer\"\n      props={{\n        ...state,\n        update: (d) => State.update(d),\n        isOpen: state.isOfferModalOpen,\n        contentStyles: {\n          style: {\n            overflowX: \"hidden\",\n            width: 600,\n          },\n        },\n      }}\n    />\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/harrydhillon.near/widget/NFTSwap.NFT-Transfer", "fact_widget_deployments_id": "a51276b2e52469f464722db5095a5f23", "inserted_timestamp": "2023-09-20T02:26:56.419Z", "modified_timestamp": "2023-09-20T02:26:56.419Z", "__row_index": 14}