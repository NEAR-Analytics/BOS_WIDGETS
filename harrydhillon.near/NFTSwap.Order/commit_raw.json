{"tx_hash": "91XUNHcTmLuQhs9yoTm6ZbE16cpnXfUX4p8uqxivTdpk", "action_id_social": "DJ7Kc8FEUrixPa6gbk4hPK1UmQRssnWApKxXuxykLyLB-0-widget", "block_id": 101581188, "block_timestamp": "2023-09-20T22:34:59.586Z", "signer_id": "harrydhillon.near", "widget_name": "NFTSwap.Order", "source_code": "const accountId = context.accountId;\n\ninitState({ allTransactions: [] });\n\nuseEffect(() => {\n  const allUserTransactionHashes = Near.view(\n    \"swap.genadrop.near\",\n    \"get_hashes_for_owner\",\n    {\n      owner_id: accountId,\n    }\n  );\n\n  const allTransactionData = [];\n\n  allUserTransactionHashes.map((item) => {\n    allTransactionData.push(\n      Near.view(\"swap.genadrop.near\", \"get_transaction_data\", {\n        hash: item,\n      })\n    );\n  });\n\n  function processNFTs(nfts) {\n    let arrayToReturn = [];\n    nfts.map(async (nft) => {\n      const nftContract = nft.contract_id;\n      const tokenId = nft.token_id;\n      const metadata = Near.view(nftContract, \"nft_metadata\", {\n        token_id: tokenId,\n      });\n      const baseUri = metadata.base_uri || \"\";\n\n      const nftMetadata = Near.view(nftContract, \"nft_token\", {\n        token_id: tokenId,\n      });\n      const media = nftMetadata.metadata.media;\n      console.log(media, nftMetadata)\n      const image =\n        media.startsWith(\"https\") || media.startsWith(\"http\")\n          ? media\n          : `${baseUri}/${media}`;\n\n      let collection = \"\";\n\n      if (nftContract === \"x.paras.near\") {\n        const response = fetch(\n          `https://api-v2-mainnet.paras.id/token?token_id=${tokenId}`\n        );\n        collection = response.data.results[0].metadata.collection_id;\n      }\n\n      arrayToReturn.push({\n        title: nftMetadata.metadata.title,\n        image: image,\n        token_id: tokenId,\n        contract_id: nftContract,\n        collection: collection ? collection : metadata.name,\n      });\n    });\n    return arrayToReturn;\n  }\n\n  State.update({ allTransactions: allTransactionData });\n\n  const nftData = [];\n  allTransactionData.map((item) => {\n    const senderNFTs = processNFTs(item.sender_nfts);\n    const receiverNFTs = processNFTs(item.receiver_nfts);\n    console.log(senderNFTs, receiverNFTs);\n    senderNFTs.map((item) => {\n      nftData.push(item);\n    });\n    receiverNFTs.map((item) => {\n      nftData.push(item);\n    });\n  });\n  State.update({ nftData });\n}, []);\n\nreturn (\n  <div\n    style={{\n      border: \"1px solid lightgray\",\n      width: \"100%\",\n      borderRadius: 5,\n      padding: 10,\n    }}\n  >\n    {state.allTransactions.map((transaction) => (\n      <>\n        <p style={{ marginBottom: 0 }}>Reciever NFT</p>\n        <div\n          style={{\n            border: \"1px solid lightgray\",\n            width: \"100%\",\n            borderRadius: 5,\n            padding: 10,\n          }}\n        >\n          {transaction.receiver_nfts.map((item) => {\n            const transaction_data = state.nftData.filter(\n              (item) => item.token_id === item.token_id\n            )[0];\n            console.log(transaction_data.image);\n            return (\n              <>\n                <img src={transaction_data.image} />\n              </>\n            );\n          })}\n        </div>\n\n        <p style={{ marginBottom: 0, marginTop: 10 }}>Sender NFT</p>\n        <div\n          style={{\n            border: \"1px solid lightgray\",\n            width: \"100%\",\n            borderRadius: 5,\n            padding: 10,\n          }}\n        >\n          {transaction.sent_nfts.map((item) => (\n            <>\n              <img src={\"\"} />\n            </>\n          ))}\n        </div>\n      </>\n    ))}\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/harrydhillon.near/widget/NFTSwap.Order", "fact_widget_deployments_id": "586065cfbb46ae528f4a2c5359d0765c", "inserted_timestamp": "2023-09-21T00:33:41.347Z", "modified_timestamp": "2023-09-21T00:33:41.347Z", "__row_index": 5}