{"tx_hash": "HHmvacrFV7HkRnjUebd7d4fCYYE7E5TTCmED6onMCDCD", "action_id_social": "HZhW1hiGhJ2ZF3r4C8nbWSbNCy4drHQ8suRPM6Efe7gW-0-widget", "block_id": 99497487, "block_timestamp": "2023-08-23T20:17:32.980Z", "signer_id": "harrydhillon.near", "widget_name": "Keypom.Landing.DropDetails.Table", "source_code": "const Table = styled.table`\n  width: 100%;\n  border-radius: 8px;\n  overflow:hidden;\n  border:0.1px solid #30C9F3;\n  margin: 20px 0;\n  border-collapse: separate;\n  border-spacing: 0;\n`;\n\nconst TableHead = styled.thead`\n  background-color: #F8FAFC;\n`;\n\nconst TableRow = styled.tr`\n    padding:5px;\n`;\n\nconst TableHeader = styled.th`\n  padding: 8px;\n  font-weight:500;\n  text-align: left;\n`;\n\nconst TableCell = styled.td`\n  padding: 15px;\n`;\n\nconst ActionButton = styled.button`\n  color: black;\n  padding: 5px 10px;\n  margin-top:5px;\n  padding-bottom:8px;\n  background-color:transparent;\n  border:1px solid lightgray;\n  border-radius: 5px;\n  cursor: pointer;\n`;\n\nconst drops = [];\n\n// Helper function to generate a random date\nfunction randomDate(start, end) {\n  return new Date(\n    start.getTime() + Math.random() * (end.getTime() - start.getTime())\n  );\n}\n\nfor (let i = 0; i < 20; i++) {\n  const drop = {\n    ticketName: `Ticket ${i + 1}`, // Just giving a sequential name for simplicity\n    numberOfTicket: `${[\"0\", \"30\", \"6\", \"20\"][Math.floor(Math.random() * 4)]}/${\n      [\"100\", \"200\", \"150\", \"200\"][Math.floor(Math.random() * 4)]\n    }`, // Randomly select between 'Event', 'NFT', and 'Token'\n    pricePerTicket: 50, // Generate a random date between 2020-01-01 and 2023-08-22\n  };\n\n  drops.push(drop);\n}\n\nfunction extractDateComponents(dateStr) {\n  const dateObj = new Date(dateStr);\n\n  const month = dateObj.toLocaleString(\"default\", { month: \"long\" }); // e.g., \"August\"\n  const date = dateObj.getDate(); // e.g., 3\n  const year = dateObj.getFullYear(); // e.g., 2023\n\n  return `${month} ${date}, ${year}`;\n}\n\nconst CompletelyClaimed = styled.div`\n    background-color:#F8FAFC;\n    color:#475569;\n    padding-top:3px;\n    padding-bottom:3px;\n    padding-left:10px;\n    padding-right:10px;\n    width:fit-content;\n`;\n\nconst Uncalimed = styled.div`\n    background-color:#F0FDF4;\n    color:#16A34A;\n    padding-top:3px;\n    padding-bottom:3px;\n    padding-left:10px;\n    padding-right:10px;\n        width:fit-content;\n`;\n\nconst claimedFunc = (claimed) =>\n  claimed ? (\n    <CompletelyClaimed>Claimed</CompletelyClaimed>\n  ) : (\n    <Uncalimed>1 of 6 Claimed</Uncalimed>\n  );\n\nreturn (\n  <div style={{ padding: 10 }}>\n    <Table>\n      <TableHead>\n        <TableRow>\n          <TableHeader>Ticket Name</TableHeader>\n          <TableHeader>Number of tickets</TableHeader>\n          <TableHeader>Price per ticket (NEAR)</TableHeader>\n          <TableHeader />\n          <TableHeader />\n        </TableRow>\n      </TableHead>\n      <tbody>\n        {drops.map((item) => (\n          <TableRow key={item.ticketName}>\n            <TableCell>{item.ticketName}</TableCell>\n            <TableCell>{item.numberOfTicket}</TableCell>\n            <TableCell>{item.pricePerTicket}</TableCell>\n            <TableCell>Preview</TableCell>\n            <TableCell>\n          <div style={{gap:\"10px\",display:'flex'}}>\n              <ActionButton\n                onClick={() => {\n                  State.update({\n                    tickets: state.tickets.filter((item, idx) => idx !== index),\n                  });\n                }}\n              >\n                <Widget src=\"harrydhillon.near/widget/Keypom.Tickets.DeleteSVG\" />\n              </ActionButton>\n              <ActionButton\n                onClick={() => {\n                  State.update({\n                    tickets: state.tickets.filter((item, idx) => idx !== index),\n                  });\n                }}\n              >\n                <Widget src=\"harrydhillon.near/widget/Keypom.Landing.DropDetails.ExternalLinkSVG\" />\n              </ActionButton>\n              </div>\n            </TableCell>\n          </TableRow>\n        ))}\n      </tbody>\n    </Table>\n  </div>\n);\n", "metadata": null, "branch": {"draft": null}, "widget_modules_used": null, "widget_url": "https://near.social/#/harrydhillon.near/widget/Keypom.Landing.DropDetails.Table", "fact_widget_deployments_id": "895a90f5b6d663834de9bafd04841a5f", "inserted_timestamp": "2023-08-24T05:01:15.719Z", "modified_timestamp": "2023-08-24T05:01:15.719Z", "__row_index": 3}