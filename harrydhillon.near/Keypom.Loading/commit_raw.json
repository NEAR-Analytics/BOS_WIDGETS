{"tx_hash": "9qgFM15FkowH3r5TsBFnESRN7CKaHb6m7AjSvuMDEdop", "action_id_social": "4ScznV51sfHXtcECy5tZVsTiyW2MJQnUu2rKgGmR7ELd-0-widget", "block_id": 101762047, "block_timestamp": "2023-09-23T08:52:06.059Z", "signer_id": "harrydhillon.near", "widget_name": "Keypom.Loading", "source_code": "const FormBackground = styled.div`\nbackground-color:white;\npadding:10px;\npadding-top:30px;\nmargin-top:40px;\nmargin-bottom:100px;\nborder-radius:10px;\nwidth:90%;\ntext-align:center;\n  border: 2px solid #B6E8F7;\n`;\n\nconst RadiantBackground = styled.div`\n    background: rgb(220,244,251);\n    min-height:100vh;\n    padding:10px;\n    display:flex;\n    justify-content:center;\n    align-items:center;\n    background: linear-gradient(0deg, rgba(220,244,251,1) 0%, rgba(251,254,255,1) 95%, rgba(255,255,255,1) 100%);\n`;\n\nState.init({\n  index: 0,\n});\n\nconst Grid = styled.div`\n    display: grid;\n    grid-template-columns: 1fr;  // By default, 1 item per row\n    gap: 16px;  // Gap between rows and columns\n\n    @media (min-width: 1000px) {\n        grid-template-columns: 1fr 1fr;  // 2 items per row if width is greater than 1000px\n    }\n`;\nconst Label = styled.p`\n  font-size: 16px;\n  translate: 3px 8px;\n  font-style: normal;\n  font-weight: 500;\n`;\n\nState.init({\n  width: props.width || \"20px\",\n  height: props.height || \"20px\",\n});\n\nconst useTheme = (light, dark) => {\n  return state.theme === \"light\" ? light : dark;\n};\n\nconst dark = {\n  bg: \"#28282b\",\n  color: \"#e6eaee\",\n  border: \"#30C9F3\",\n};\n\nconst light = {\n  bg: \"#e3e8ef\",\n  color: \"#4c5566\",\n  border: \"#30C9F3\",\n};\n\nconst Spinner = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  @keyframes spinner {\n    to {\n      transform: rotate(360deg);\n    }\n  }\n\n  :before {\n    content: \"\";\n    box-sizing: border-box;\n    width: 80px;\n    height: 80px;\n    border-radius: 50%;\n    border: 2px solid ${useTheme(light.color, dark.color)};\n    border-top-color: ${useTheme(light.border, dark.border)};\n    animation: spinner 0.6s linear infinite;\n  }\n`;\n\nconst AllSteps = [\n  {\n    label: \"Event Info\",\n    active: state.index === 0,\n  },\n  {\n    label: \"Collect Info\",\n    active: state.index === 1,\n  },\n  {\n    label: \"Tickets\",\n    active: state.index === 2,\n  },\n  {\n    label: \"Review\",\n    active: state.index === 3,\n  },\n];\n\nconst componentsToRender = [\n  <Widget\n    props={{\n      validationMode: state.validationMode,\n      setStorage: (key, val) => Storage.set(key, val),\n      getStorage: (key, val) => Storage.get(key, val),\n      nextStep: (isValid) => {\n        if (isValid) {\n          State.update({ validationMode: false, index: state.index + 1 });\n        } else {\n          State.update({ validationMode: false });\n        }\n      },\n    }}\n    src=\"harrydhillon.near/widget/Keypom.EventInfo.Form\"\n  />,\n  <Widget\n    props={{\n      setStorage: (key, val) => Storage.set(key, val),\n      getStorage: (key, val) => Storage.get(key, val),\n    }}\n    src=\"harrydhillon.near/widget/Keypom.CollectInfo.Index\"\n  />,\n  <Widget\n    props={{\n      setStorage: (key, val) => Storage.set(key, val),\n      getStorage: (key, val) => Storage.get(key, val),\n    }}\n    src=\"harrydhillon.near/widget/Keypom.Tickets.index\"\n  />,\n  <Widget\n    props={{\n      setStorage: (key, val) => Storage.set(key, val),\n      getStorage: (key, val) => Storage.get(key, val),\n      tickets: Storage.get(\"tickets\") ? JSON.parse(Storage.get(\"tickets\")) : [],\n      eventData: Storage.get(\"formValues\")\n        ? JSON.parse(Storage.get(\"formValues\"))\n        : {},\n    }}\n    src=\"harrydhillon.near/widget/Keypom.Review.index\"\n  />,\n];\n\nconst formContent = () => {\n  return (\n    <>\n      <FormBackground>\n        <div\n          style={{\n            width: \"fit-content\",\n            margin: \"auto\",\n            transform: \"scale(0.8)\",\n            marginTop: -65,\n          }}\n        >\n          <Widget src=\"harrydhillon.near/widget/Keypom.Components.TicketLogo\" />\n        </div>\n        <h3>Creating Ticket</h3>\n        <Spinner />\n        <p style={{ marginBottom: 0, marginTop: 10 }}>1 of 6 tickets</p>\n      </FormBackground>\n    </>\n  );\n};\n\nreturn <RadiantBackground>{formContent()}</RadiantBackground>;\n", "metadata": {"platform": "jutsu.ai"}, "branch": {"draft": null}, "widget_modules_used": null, "widget_url": "https://near.social/#/harrydhillon.near/widget/Keypom.Loading", "fact_widget_deployments_id": "9e81ab042157a047461a38224542aeb0", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}