{"tx_hash": "DRbUxEtz2RdL4KGaXsCYLnb4YW3V6v29yAwiSLsZ3Hm3", "action_id_social": "CZ3s22hHaFVGoUj48rqDhA2NishaJTHWirzwHhQrEt5k-0-widget", "block_id": 101391909, "block_timestamp": "2023-09-18T09:11:33.168Z", "signer_id": "harrydhillon.near", "widget_name": "ProfilePage.Main", "source_code": "const accountId = props.accountId || context.accountId;\n\nif (!accountId) return \"Login or send accountId in the props\";\n\nconst profile = Social.getr(`${accountId}/profile`);\n\nconst allWidgetsHistoryChangesBlocks = Social.keys(\n  `${accountId}/widget/*`,\n  \"final\",\n  {\n    return_type: \"History\",\n  }\n);\n\nif (allWidgetsHistoryChangesBlocks === null) return \"Loading...\";\n\nconst widget = allWidgetsHistoryChangesBlocks[accountId].widget;\n\nconst totalCommits = Object.keys(widget ?? {})\n  .map((key) => widget[key])\n  .flat();\n\nconst widgets = Social.getr(`${accountId}/widget`) ?? {};\n\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\n  asyncFetch(\"https://near-queryapi.api.pagoda.co/v1/graphql\", {\n    method: \"POST\",\n    body: JSON.stringify({\n      query: operationsDoc,\n      variables: variables,\n      operationName: operationName,\n    }),\n    headers: {\n      \"x-hasura-role\": \"harrydhillon_near\",\n      \"content-type\": \"application/json\",\n    },\n  }).then(({ body: { data } }) => {\n    State.update({ allImages: Object.values(data)[0] });\n  });\n}\n\nconst operationsDoc = `  query MyQuery {\n    harrydhillon_near_jutsu_widget_activity_search_widget_activity(\n      where: {account_id: {_iregex: \"${accountId}\"}, _and: {widget_image: {_neq: \"\"}}}\n      distinct_on: widget_name\n    ) {\n      widget_image\n      widget_name\n    }\n  }`;\n\nconsole.log(operationsDoc);\n\nfunction fetchMyQuery() {\n  return fetchGraphQL(operationsDoc, \"MyQuery\", {});\n}\n\nfetchMyQuery();\n\nconst FollowButton = styled.button`\n    background-color: transparent;\n    border: 2px solid ${props.theme.textColor};\n    border-radius: 40px;\n    color: ${props.theme.textColor};\n    padding-top: 4px;\n    padding-bottom: 4px;\n    padding-left: 30px;\n    padding-right: 30px;\n    margin-left:auto;\n`;\n\nreturn (\n  <div style={{ display: \"flex\", width: \"100%\", gap: \"20px\" }}>\n    <div style={{ width: \"50%\" }}>\n      <Widget\n        src=\"harrydhillon.near/widget/ProfilePage.UserInfo\"\n        props={props}\n      />\n    </div>\n    <div style={{ width: \"50%\" }}>\n      <div>\n        <div\n          style={{\n            width: \"fit-content\",\n            marginLeft: \"auto\",\n            paddingRight: 15,\n            paddingTop: 15,\n          }}\n        >\n          <FollowButton>+ Follow</FollowButton>\n        </div>\n        <div style={{ marginTop: 20 }} />\n        <h4\n          style={{\n            lineHeight: \"16px\",\n            fontWeight: 500,\n            color: props.theme.textColor,\n            textAlign: \"left\",\n          }}\n        >\n          Contributions\n        </h4>\n        <div style={{ marginTop: 16 }} />\n        <Widget\n          src=\"harrydhillon.near/widget/ProfilePage.Contributions\"\n          props={{ theme: props.theme, accountId }}\n        />\n        <p style={{ color: props.theme.textColor3, marginTop: 5 }}>\n          {totalCommits.length} contributions in the last year\n        </p>\n      </div>\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          paddingTop: 35,\n        }}\n      >\n        <div>\n          <h4\n            style={{\n              lineHeight: \"16px\",\n              fontWeight: 600,\n              fontWeight: 500,\n              color: props.theme.textColor,\n              textAlign: \"left\",\n            }}\n          >\n            Widgets\n          </h4>\n        </div>\n        {Object.keys(widgets)?.length > 0 ? (\n          <div\n            style={{\n              display: \"grid\",\n              gridTemplateColumns: \"repeat(auto-fill, minmax(300px, 1fr))\",\n              marginTop: 16,\n              gap: 16,\n            }}\n          >\n            {Object.keys(widgets)?.map((item, index) => (\n              <>\n                <Widget\n                  src=\"harrydhillon.near/widget/ProfilePage.WidgetItem\"\n                  props={{\n                    name: item,\n                    image: state?.allImages.filter(\n                      (_) => _.widget_name === item\n                    )?.[0]?.widget_image\n                      ? JSON.parse(\n                          state?.allImages.filter(\n                            (_) => _.widget_name === item\n                          )?.[0]?.widget_image\n                        ).ipfs_cid\n                      : null,\n                    accountId,\n                    commits:\n                      allWidgetsHistoryChangesBlocks[accountId].widget[item],\n                    theme: props.theme,\n                  }}\n                />\n              </>\n            ))}\n          </div>\n        ) : (\n          <p\n            style={{\n              padding: 20,\n              textAlign: \"center\",\n              color: \"rgba(0,0,0,.75)\",\n            }}\n          >\n            {profile?.name} does not have any widget.\n          </p>\n        )}\n      </div>\n    </div>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/harrydhillon.near/widget/ProfilePage.Main", "fact_widget_deployments_id": "53baaef18fe4f1bf9611526ccdf7472f", "inserted_timestamp": "2023-09-18T10:41:43.362Z", "modified_timestamp": "2023-09-18T10:41:43.362Z", "__row_index": 17}