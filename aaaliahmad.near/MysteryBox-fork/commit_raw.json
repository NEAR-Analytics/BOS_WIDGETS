{"tx_hash": "3NGQEYcH6mQ2ybhuGbMS6G823z3pj1UMbbetaS9Vr5wr", "action_id_social": "FpfxH19JJCNHrAEvAjK6jxBzacvkaVQ3nYVJcvS78SGm-0-widget", "block_id": 111624163, "block_timestamp": "2024-01-29T17:34:00.886Z", "signer_id": "aaaliahmad.near", "widget_name": "MysteryBox-fork", "source_code": "import React, { useState } from \"react\";\n\n// Assuming you have a function to generate a random reward based on rarity\nconst getRandomReward = (rarityRewards) => {\n  const randomIndex = Math.floor(Math.random() * rarityRewards.length);\n  return rarityRewards[randomIndex];\n};\n\nconst GiftWidget = ({ onClaim, boxes, totalSupply }) => {\n  const [claimedReward, setClaimedReward] = useState(null);\n\n  const handleClaim = (boxId) => {\n    // Assuming you have a function to claim the reward from the server\n    const claimedReward = onClaim(boxId);\n\n    // Set the claimed reward in the state\n    setClaimedReward(claimedReward);\n  };\n\n  // Assuming you have a function to render each box with the \"Gift\" icon\n  const renderBox = (box) => (\n    <div key={box.id}>\n      <span>Box {box.id}</span>\n      <span> Rarity: {box.rarity}</span>\n      <button onClick={() => handleClaim(box.id)}>Gift</button>\n    </div>\n  );\n\n  return (\n    <div>\n      <h1>Gift Boxes</h1>\n      {boxes.map(renderBox)}\n      <p>Total Supply: {totalSupply}</p>\n      {claimedReward && (\n        <div>\n          <h2>Claimed Reward</h2>\n          <p>{claimedReward}</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default GiftWidget;\n", "metadata": {"fork_of": "nearukraineguild.near/widget/MysteryBox@106215664"}, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/aaaliahmad.near/widget/MysteryBox-fork", "fact_widget_deployments_id": "1948191cff3196b4ab826949a30948e2", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}