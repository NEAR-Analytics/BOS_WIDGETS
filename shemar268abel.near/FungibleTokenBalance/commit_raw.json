{"tx_hash": "FZsaLGutKivaj74uU8L4Nq9FWpRjKKDHzN9gsp1jLbKj", "action_id_social": "9LAxSVnfWHFitzEzxsuEot6hKAHj3CAsVpzo8wPbb6X6-0-widget", "block_id": 98765747, "block_timestamp": "2023-08-14T06:05:48.987Z", "signer_id": "shemar268abel.near", "widget_name": "FungibleTokenBalance", "source_code": "State.init({\r\n  activeTokens: null,\r\n  inputAmount: \"\",\r\n  inputReceiver: \"\",\r\n  root: null,\r\n  errorTransfer: null,\r\n  itemsToShow: 5, // New state variable\r\n});\r\n\r\n// Start of Style component\r\nconst cssFont = fetch(\r\n  \"https://fonts.googleapis.com/css2?family=Poppins:wght@200;300;400;500;600;700;800\"\r\n).body;\r\n\r\nconst _root = styled.div`\r\n  ${cssFont}\r\n  width: 100%;\r\n  height: 100%;\r\n  font-family: Poppins, sans-serif;\r\n  border-radius: 12px;\r\n\r\n  p {\r\n    font-size: 12px;\r\n    margin: 0;\r\n  }\r\n`;\r\n\r\nif (!state.root) {\r\n  State.update({ root: _root });\r\n}\r\n\r\nconst Account = styled.div`\r\n  .account-address {\r\n    font-size: 24px;\r\n    font-weight: 800;\r\n    margin-bottom: 16px;\r\n  }\r\n\r\n  .token-info-wrapper {\r\n    font-size: 16px;\r\n    margin-bottom: 12px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    color: #585858;\r\n  }\r\n`;\r\n\r\nconst FungibleToken = styled.div`\r\n  display: flex;\r\n  padding: 12px 8px;\r\n  border-top: 1px solid #e6e6e6;\r\n  align-items: center;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background: #f5f5f5;\r\n  }\r\n\r\n  .token-icon {\r\n    width: 40px;\r\n    height: 40px;\r\n    border-radius: 20px;\r\n    margin-right: 12px;\r\n  }\r\n\r\n  .token-info {\r\n    flex: 1;\r\n  }\r\n\r\n  .token-info-name {\r\n    font-weight: 600;\r\n  }\r\n\r\n  .token-info-usd-price {\r\n    color: #585858;\r\n  }\r\n\r\n  .token-balance {\r\n    text-align: right;\r\n  }\r\n\r\n  .token-balance-usd {\r\n    color: #585858;\r\n  }\r\n`;\r\n\r\nconst SendToken = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n  width: auto;\r\n  padding: 8px;\r\n  position: relative;\r\n\r\n  input::-webkit-outer-spin-button,\r\n  input::-webkit-inner-spin-button {\r\n    -webkit-appearance: none;\r\n    margin: 0;\r\n  }\r\n\r\n  input[type=\"number\"] {\r\n    -moz-appearance: textfield; /* Firefox */\r\n  }\r\n\r\n  .title-send-token {\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n  }\r\n\r\n  .token-icon {\r\n    width: 80px;\r\n    height: 80px;\r\n    margin-bottom: 12px;\r\n  }\r\n\r\n  .back-icon {\r\n    position: absolute;\r\n    top: 0px;\r\n    left: 0px;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .input-amount {\r\n    width: 100%;\r\n    border: none;\r\n    outline: none;\r\n    font-size: 30px;\r\n    font-weight: 600;\r\n    margin: auto;\r\n    text-align: center;\r\n    margin: 12px 0;\r\n  }\r\n\r\n  .input-amount:focus {\r\n    outline: none;\r\n    border: none;\r\n  }\r\n\r\n  .asset-available-wrapper {\r\n    display: flex;\r\n    justify-content: end;\r\n    width: 100%;\r\n    color: #585858;\r\n  }\r\n\r\n  .asset-available-wrapper p {\r\n    font-size: 12px;\r\n  }\r\n\r\n  .send-to-wrapper {\r\n    margin: 12px 0;\r\n    margin-top: 8px;\r\n    width: 100%;\r\n  }\r\n\r\n  .send-to-label-text {\r\n    color: #585858;\r\n    font-size: 12px;\r\n    text-align: left;\r\n  }\r\n\r\n  .send-to-button {\r\n    width: 100%;\r\n    border: none;\r\n    outline: none;\r\n    background: #5a58e5;\r\n    color: white;\r\n    border-radius: 12px;\r\n    margin-top: 8px;\r\n    padding: 12px;\r\n    font-size: 14px;\r\n  }\r\n\r\n  .error-message {\r\n    color: #ff0033;\r\n  }\r\n`;\r\n// End of style\r\n\r\nconst accountId = props.accountId || context.accountId;\r\n\r\nif (!accountId) return <p>Please provide account id as props</p>;\r\n\r\nconst data = fetch(\r\n  `https://api.kitwallet.app/account/${accountId}/likelyTokensFromBlock?fromBlockTimestamp=0`\r\n).body;\r\nconst tokenPrice = fetch(\"https://indexer.ref.finance/list-token-price\").body;\r\n\r\nconst contractData = data.list\r\n  .map((contract) => {\r\n    const ftMetadata = Near.view(contract, \"ft_metadata\", `{}`);\r\n    const ftBalance = Near.view(contract, \"ft_balance_of\", {\r\n      account_id: accountId,\r\n    });\r\n\r\n    if (!ftMetadata || !ftBalance) return null;\r\n\r\n    if (ftBalance === \"0\") return null;\r\n\r\n    const parsedBalance = Big(ftBalance)\r\n      .div(Big(10).pow(ftMetadata.decimals))\r\n      .toFixed(5);\r\n\r\n    const usdPrice = JSON.parse(tokenPrice)[contract].price;\r\n    const balanceInUsd = parseFloat(parsedBalance) * parseFloat(usdPrice);\r\n\r\n    return {\r\n      ...ftMetadata,\r\n      balance: parsedBalance,\r\n      usdPrice,\r\n      contract,\r\n      balanceInUsd: balanceInUsd ? balanceInUsd.toFixed(2) : null,\r\n    };\r\n  })\r\n  .filter((item) => item);\r\n\r\nconst onClickSendToken = () => {\r\n  // TODO:\r\n  // - check if account has enough balance\r\n  // - check if balance is valid (not negative, not zero, not more than balance)\r\n  // - check if account id is valid\r\n  // - check if account id is not the same as current account\r\n\r\n  if (!state.inputAmount || !state.inputReceiver)\r\n    return State.update({ errorTransfer: \"Please fill all fields\" });\r\n\r\n  Near.call(\r\n    state.activeTokens.contract,\r\n    \"ft_transfer\",\r\n    {\r\n      amount: Big(state.inputAmount).times(\r\n        Big(10).pow(state.activeTokens.decimals)\r\n      ),\r\n      receiver_id: state.inputReceiver,\r\n    },\r\n    undefined,\r\n    1\r\n  );\r\n};\r\n\r\n// Limit tokens to the first `itemsToShow` items\r\nconst limitedContractData = contractData.slice(0, state.itemsToShow);\r\n\r\nconst Root = state.root;\r\nconst totalValue = contractData.reduce((total, item) => {\r\n  return total + (item.balanceInUsd ? parseFloat(item.balanceInUsd) : 0);\r\n}, 0);\r\n\r\nreturn (\r\n  <Root className=\"p-2\">\r\n    {state.activeTokens ? (\r\n      <SendToken>\r\n        <div\r\n          class=\"back-icon\"\r\n          onClick={() =>\r\n            State.update({\r\n              activeTokens: null,\r\n              inputAmount: \"\",\r\n              inputReceiver: \"\",\r\n            })\r\n          }\r\n        >\r\n          <svg\r\n            width=\"24\"\r\n            height=\"24\"\r\n            viewBox=\"0 0 24 24\"\r\n            fill=\"none\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n          >\r\n            <path\r\n              d=\"M15.41 16.59L10.83 12L15.41 7.41L14 6L8 12L14 18L15.41 16.59Z\"\r\n              fill=\"black\"\r\n            />\r\n          </svg>\r\n        </div>\r\n        {state.activeTokens.icon && (\r\n          <img class=\"token-icon\" src={state.activeTokens.icon} />\r\n        )}\r\n        <p class=\"title-send-token\">Send {state.activeTokens.name}</p>\r\n        <input\r\n          required\r\n          type=\"number\"\r\n          class=\"input-amount\"\r\n          min=\"0.1\"\r\n          placeholder=\"10\"\r\n          autofocus\r\n          value={state.inputAmount}\r\n          onChange={(e) =>\r\n            State.update({ inputAmount: e.target.value, errorTransfer: null })\r\n          }\r\n        />\r\n        <div class=\"asset-available-wrapper\">\r\n          <p>\r\n            Available: {state.activeTokens.balance} {state.activeTokens.symbol}\r\n          </p>\r\n        </div>\r\n        <div class=\"send-to-wrapper\">\r\n          <p class=\"send-to-label-text\">Send to</p>\r\n          <input\r\n            required\r\n            value={state.inputReceiver}\r\n            onChange={(e) =>\r\n              State.update({\r\n                inputReceiver: e.target.value,\r\n                errorTransfer: null,\r\n              })\r\n            }\r\n            placeholder=\"account id\"\r\n            style={{ fontSize: \"14px\", padding: \"10px 8px\" }}\r\n          />\r\n        </div>\r\n        {state.errorTransfer && (\r\n          <p class=\"error-message\">{state.errorTransfer}</p>\r\n        )}\r\n        <button type=\"submit\" class=\"send-to-button\" onClick={onClickSendToken}>\r\n          Continue\r\n        </button>\r\n      </SendToken>\r\n    ) : (\r\n      <>\r\n        <Account>\r\n          {/*<div className=\"mb-3\">\r\n            <Widget\r\n              src=\"mob.near/widget/Profile.InlineBlock\"\r\n              props={{ accountId }}\r\n            />\r\n          </div>*/}\r\n          <div class=\"token-info-wrapper\">\r\n            <p>Assets</p>\r\n            <p>Token balance</p>\r\n          </div>\r\n        </Account>\r\n        {limitedContractData.map((item) => (\r\n          <FungibleToken onClick={() => State.update({ activeTokens: item })}>\r\n            <div class=\"token-icon\">\r\n              {item.icon && <img class=\"token-icon\" src={item.icon} />}\r\n            </div>\r\n            <div class=\"token-info\">\r\n              <p class=\"token-info-name\">{item.name}</p>\r\n              <p class=\"token-info-usd-price\">\r\n                {item.usdPrice ? `$${item.usdPrice}` : \"Price unavailable\"}\r\n              </p>\r\n            </div>\r\n            <div class=\"token-balance\">\r\n              <p>\r\n                {item.balance} {item.symbol}\r\n              </p>\r\n              <p class=\"token-balance-usd\">\r\n                {item.balanceInUsd ? `\u2248 ${item.balanceInUsd} USD` : \"-\"}\r\n              </p>\r\n            </div>\r\n          </FungibleToken>\r\n        ))}\r\n        {contractData.length > state.itemsToShow && (\r\n          <button\r\n            style={{\r\n              display: \"block\",\r\n              width: \"100%\",\r\n              padding: \"10px\",\r\n              margin: \"10px 0\",\r\n              borderRadius: \"10px\",\r\n              border: \"1px solid #ddd\",\r\n              backgroundColor: \"#f5f5f5\",\r\n              cursor: \"pointer\",\r\n              color: \"#000\",\r\n            }}\r\n            onClick={() => State.update({ itemsToShow: state.itemsToShow + 5 })}\r\n          >\r\n            Show More\r\n          </button>\r\n        )}\r\n        <div\r\n          style={{\r\n            textAlign: \"right\",\r\n            width: \"100%\",\r\n            backgroundColor: \"transparent\",\r\n          }}\r\n        >\r\n          <h4>Total: ${totalValue.toFixed(2)}</h4>\r\n        </div>\r\n      </>\r\n    )}\r\n  </Root>\r\n);\r\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/shemar268abel.near/widget/FungibleTokenBalance", "fact_widget_deployments_id": "c5c70b2ba36a21748db7de946c7270f2", "inserted_timestamp": "2023-08-14T07:40:18.864Z", "modified_timestamp": "2023-08-14T07:40:18.864Z", "__row_index": 3}