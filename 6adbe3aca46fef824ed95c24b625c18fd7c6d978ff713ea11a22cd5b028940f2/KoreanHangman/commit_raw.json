{"tx_hash": "Hrw4PKmrWhVxR9DUbzv5x92SY1m9oG8jSpMtKRr8Tihn", "action_id_social": "BXZZGPVYCA36jq94ZnfnFpMcapbbYkE17ZDoAEumkuQK-0-widget", "block_id": 101827338, "block_timestamp": "2023-09-24T05:44:38.030Z", "signer_id": "6adbe3aca46fef824ed95c24b625c18fd7c6d978ff713ea11a22cd5b028940f2", "widget_name": "KoreanHangman", "source_code": "const style = {\n  //\n  titleFont: {\n    margin: \"1vw\",\n    fontSize: \"5vw\",\n    fontWeight: \"900\",\n    textAlign: \"center\",\n  },\n  infoFont: {\n    fontSize: \"3vw\",\n    fontWeight: \"900\",\n    textAlign: \"center\",\n  },\n  inputWrapper: {\n    display: \"flex\",\n    marginBottom: \"3vw\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n  },\n  inputElement: {\n    width: \"10vw\",\n    height: \"10vw\",\n    fontSize: \"5vw\",\n    textAlign: \"center\",\n  },\n  hangmanImageWrapper: {\n    position: \"relative\",\n    height: \"50vh\",\n  },\n  hangmanImage: {\n    transform: \"translate(-50%)\",\n    position: \"absolute\",\n    width: \"50vw\",\n    left: \"50%\",\n    top: \"5vw\",\n  },\n};\n\nconsole.log(props.answer);\nconst answer = props.answer || \"\u3131\u3163\u3141\u3145\u3154\u3148\u3153\u3147\";\n\nconst inputStates = {};\nanswer.split(\"\").forEach((v, i) => {\n  inputStates[`inputCharacter${i}`] = \"\";\n});\n\n/**\n * answer: \uc815\ub2f5 \ub2e8\uc5b4\n * inputStates: inputCharacter0, ... \uc815\ub2f5 \ucca0\uc790 \ubcc4\ub85c \uc0c1\ud0dc \uac12 \uad00\ub9ac\n * successCount: \ud604\uc7ac\uae4c\uc9c0 \ub9de\ucd98 \ucca0\uc790 \uc218 (\uc815\ub2f5 \ub2e8\uc5b4 \uae38\uc774\uc640 \ub3d9\uc77c\ud574\uc9c8 \uacbd\uc6b0 \uac8c\uc784 \uc131\uacf5)\n * opportunityCount: \ub0a8\uc740 \uae30\ud68c \uc218 (\uae30\ubcf8\uac12 10\ubc88)\n * startTime: \uac8c\uc784 \uc2dc\uc791 \ud0c0\uc784\uc2a4\ud0ec\ud504\n * endTime: \uac8c\uc784 \uc885\ub8cc \ud0c0\uc784\uc2a4\ud0ec\ud504 (\uc131\uacf5 \ubc0f \uc2e4\ud328 \uc2dc \uc5c5\ub370\uc774\ud2b8)\n * hangmanImages: 11\uac1c\uc758 \ud575\ub9e8 \uc774\ubbf8\uc9c0 \uacbd\ub85c\n */\nState.init({\n  answer: answer,\n  ...inputStates,\n  successCount: 0,\n  opportunityCount: 10,\n  startTime: Date.now(),\n  endTime: 0,\n  hangmanImages: Array.from(\n    { length: 11 },\n    (v, i) =>\n      `https://raw.githubusercontent.com/mydreamis-18/Ludium-2023-collegium-BOS-KoreanHangmanGame/main/%ED%96%89%EB%A7%A8${\n        i + 1\n      }.jpg`\n  ),\n});\n\nconst inputHandle = (e) => {\n  //\n  const { answer, successCount, opportunityCount } = state;\n  const index = e.target.id.split(\"\").pop();\n  const isCorrect = answer[index] === e.target.value;\n  const isEmpty = e.target.value === \"\";\n\n  // \u315c \ube48 \uac12 \uc785\ub825 \uc2dc\n  if (isEmpty) {\n    State.update({\n      [e.target.id]: e.target.value,\n    });\n    return;\n  }\n\n  // \u315c \uc624\ub2f5 \uc785\ub825 \uc2dc\n  if (!isCorrect) {\n    State.update({\n      [e.target.id]: e.target.value,\n      opportunityCount: opportunityCount - 1,\n      endTime: opportunityCount - 1 <= 0 ? Date.now() : 0,\n    });\n  }\n\n  // \u315c \uc815\ub2f5 \uc785\ub825 \uc2dc\n  else {\n    State.update({\n      [e.target.id]: e.target.value,\n      successCount: successCount + 1,\n      endTime: successCount + 1 === answer.length ? Date.now() : 0,\n    });\n  }\n};\n\nreturn (\n  <>\n    <div style={{ ...style.titleFont, marginTop: \"10vw\" }}>\n      Korean Hangman Game\n    </div>\n    <div style={style.titleFont}>{props.subject || \"\ubc30\uc6b0 \uc774\ub984\"} \ub9de\ucd94\uae30!</div>\n    <div style={style.infoFont}>\ub0a8\uc740 \ud69f\uc218: {state.opportunityCount}</div>\n    {/** \u315c \uc815\ub2f5 \uc785\ub825 \uce78 */}\n    <div style={style.inputWrapper}>\n      {Array.from({ length: state.answer.length }, (v, i) => (\n        <input\n          style={style.inputElement}\n          disabled={\n            state.opportunityCount <= 0 ||\n            state[`inputCharacter${i}`] === answer[i]\n          }\n          onChange={inputHandle}\n          id={`inputCharacter${i}`}\n          maxLength={1}\n          autoComplete={\"off\"}\n        />\n      ))}\n    </div>\n    {/** */}\n    {/** \u315c \uac8c\uc784 \uc131\uacf5 \uc2dc \uba54\uc138\uc9c0 \ud45c\uc2dc */}\n    {state.successCount >= state.answer.length && (\n      <>\n        <div style={style.titleFont}>\uac8c\uc784 \uc131\uacf5!</div>\n        <div style={style.infoFont}>\n          \uae30\ub85d: {(state.endTime - state.startTime) / 1000}\ucd08\n        </div>\n      </>\n    )}\n    {/** */}\n    {/** \u315c \uae30\ud68c \uc18c\uc9c4 \uc2dc \uac8c\uc784 \uc885\ub8cc \ubc0f \uc815\ub2f5 \uacf5\uac1c */}\n    {state.opportunityCount <= 0 && (\n      <>\n        <div style={style.infoFont}>\uc815\ub2f5 \uacf5\uac1c</div>\n        <div style={style.inputWrapper}>\n          {state.answer.split(\"\").map((v, i) => (\n            <input style={style.inputElement} disabled value={v} />\n          ))}\n        </div>\n        <div style={style.titleFont}>\uac8c\uc784 \uc2e4\ud328!</div>\n        <div style={style.infoFont}>\n          \uae30\ub85d: {(state.endTime - state.startTime) / 1000}\ucd08\n        </div>\n      </>\n    )}\n    {/** */}\n    <div style={style.hangmanImageWrapper}>\n      <img\n        style={style.hangmanImage}\n        src={\n          state.hangmanImages[\n            state.hangmanImages.length - state.opportunityCount - 1\n          ]\n        }\n        alt={`\ud589\ub9e8 \uc774\ubbf8\uc9c0 ${\n          state.hangmanImages.length - state.opportunityCount\n        }`}\n      />\n    </div>\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/6adbe3aca46fef824ed95c24b625c18fd7c6d978ff713ea11a22cd5b028940f2/widget/KoreanHangman", "fact_widget_deployments_id": "c83be72e58bb3581faa997f085606844", "inserted_timestamp": "2023-09-24T07:32:24.812Z", "modified_timestamp": "2023-09-24T07:32:24.812Z", "__row_index": 7}