{"tx_hash": "Q5QraYsc3NZtukkGrX2RgLxp73sJwrULVFdjzen2gwk", "action_id_social": "8cxjVTEMAtLSd42GRkagpe56NVztnVUmpmmfktdxeY4H-0-widget", "block_id": 122371334, "block_timestamp": "2024-07-01T05:45:15.088Z", "signer_id": "bos.forum.potlock.near", "widget_name": "widget.components.molecule.DropDownWithSearch", "source_code": "const {\n  selectedValue,\n  onChange,\n  options,\n  defaultLabel,\n  showSearch,\n  searchInputPlaceholder,\n  searchByLabel,\n  searchByValue,\n  onSearch,\n  disabled,\n} = props;\nconst [searchTerm, setSearchTerm] = useState(\"\");\nconst [filteredOptions, setFilteredOptions] = useState(options);\nconst [isOpen, setIsOpen] = useState(false);\nconst [selectedOption, setSelectedOption] = useState({\n  label:\n    options?.find((item) => item.value === selectedValue)?.label ??\n    defaultLabel,\n  value: defaultLabel,\n});\nuseEffect(() => {\n  if (selectedOption.value !== selectedValue) {\n    setSelectedOption({\n      label:\n        options?.find((item) => item.value === selectedValue)?.label ??\n        defaultLabel,\n      value: defaultLabel,\n    });\n  }\n}, [selectedValue]);\nuseEffect(() => {\n  setFilteredOptions(options);\n}, [options]);\nconst handleSearch = (event) => {\n  const term = event.target.value.toLowerCase();\n  setSearchTerm(term);\n  if (typeof onSearch === \"function\") {\n    onSearch(term);\n    return;\n  }\n  const filteredOptions = options.filter((option) => {\n    if (searchByLabel) {\n      return option.label.toLowerCase().includes(term);\n    }\n    if (searchByValue) {\n      return option.value.toString().toLowerCase().includes(term);\n    }\n  });\n  setFilteredOptions(filteredOptions);\n};\nconst toggleDropdown = () => {\n  setIsOpen(!isOpen);\n};\nconst handleOptionClick = (option) => {\n  setSelectedOption(option);\n  setIsOpen(false);\n  onChange(option);\n};\nconst Container = styled.div`\n  .drop-btn {\n    width: 100%;\n    text-align: left;\n    padding-inline: 10px;\n  }\n  .dropdown-toggle:after {\n    position: absolute;\n    top: 46%;\n    right: 5%;\n  }\n  .dropdown-menu {\n    width: 100%;\n  }\n  .dropdown-item.active,\n  .dropdown-item:active {\n    background-color: #f0f0f0 !important;\n    color: black;\n  }\n  .custom-select {\n    position: relative;\n  }\n  .scroll-box {\n    max-height: 200px;\n    overflow-y: scroll;\n  }\n  .selected {\n    background-color: #f0f0f0;\n  }\n  input {\n    background-color: #f8f9fa;\n  }\n  .cursor-pointer {\n    cursor: pointer;\n  }\n  .text-wrap {\n    overflow: hidden;\n    white-space: normal;\n  }\n  .disabled {\n    background-color: #f8f8f8 !important;\n    cursor: not-allowed !important;\n    border-radius: 5px;\n    opacity: inherit !important;\n  }\n  .disabled.dropdown-toggle::after {\n    display: none !important;\n  }\n`;\nlet searchFocused = false;\nreturn (\n  <Container>\n    <div\n      className=\"custom-select w-100\"\n      tabIndex=\"0\"\n      onBlur={() => {\n        setTimeout(() => {\n          setIsOpen(searchFocused || false);\n        }, 0);\n      }}\n    >\n      <div\n        className={\n          \"dropdown-toggle bg-white border rounded-2 btn drop-btn w-100 \" +\n          (disabled ? \"disabled\" : \"\")\n        }\n      >\n        <div\n          className={`selected-option w-100 text-wrap ${\n            selectedOption.label === defaultLabel ? \"text-muted\" : \"\"\n          }`}\n          onClick={!disabled && toggleDropdown}\n        >\n          {selectedOption.label}\n        </div>\n      </div>\n      {isOpen && (\n        <div className=\"dropdown-menu dropdown-menu-end dropdown-menu-lg-start px-2 shadow show\">\n          {showSearch && (\n            <input\n              type=\"text\"\n              className=\"form-control mb-2\"\n              placeholder={searchInputPlaceholder ?? \"Search options\"}\n              value={searchTerm}\n              onChange={handleSearch}\n              onFocus={() => {\n                searchFocused = true;\n              }}\n              onBlur={() => {\n                setTimeout(() => {\n                  searchFocused = false;\n                }, 0);\n              }}\n            />\n          )}\n          <div className=\"scroll-box\">\n            {filteredOptions.map((option) => (\n              <div\n                key={option.value}\n                className={`dropdown-item cursor-pointer w-100 text-wrap ${\n                  selectedOption.value === option.value ? \"selected\" : \"\"\n                }`}\n                onClick={() => handleOptionClick(option)}\n              >\n                {option.label}\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  </Container>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bos.forum.potlock.near/widget/widget.components.molecule.DropDownWithSearch", "fact_widget_deployments_id": "c3ce57ce6bc9c7871173ecceb02fe797", "inserted_timestamp": "2024-07-01T06:54:47.770Z", "modified_timestamp": "2024-07-01T06:54:47.770Z", "__row_index": 0}