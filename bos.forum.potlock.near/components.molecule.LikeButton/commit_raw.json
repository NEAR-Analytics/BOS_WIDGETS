{"tx_hash": "DNEofmhqppt4oZMbUXnobsDzVSVYRwSGofa4Fo8V3gqm", "action_id_social": "JQiApczhXuFGCfDarkBpxEPaA11i5nLksBE4UG9RT2j-0-widget", "block_id": 122380822, "block_timestamp": "2024-07-01T09:04:47.346Z", "signer_id": "bos.forum.potlock.near", "widget_name": "components.molecule.LikeButton", "source_code": "const item = props.item;\nconst proposalId = props.proposalId;\nconst rfpId = props.rfpId;\nconst notifyAccountIds = props.notifyAccountIds ?? [];\nif (!item) {\n  return \"\";\n}\nconst likes = Social.index(\"like\", item);\nconst dataLoading = likes === null;\nconst likesByUsers = {};\n(likes || []).forEach((like) => {\n  if (like.value.type === \"like\") {\n    likesByUsers[like.accountId] = like;\n  } else if (like.value.type === \"unlike\") {\n    delete likesByUsers[like.accountId];\n  }\n});\nif (state.hasLike === true) {\n  likesByUsers[context.accountId] = {\n    accountId: context.accountId,\n  };\n} else if (state.hasLike === false) {\n  delete likesByUsers[context.accountId];\n}\nconst accountsWithLikes = Object.keys(likesByUsers);\nconst hasLike = context.accountId && !!likesByUsers[context.accountId];\nconst hasLikeOptimistic =\n  state.hasLikeOptimistic === undefined ? hasLike : state.hasLikeOptimistic;\nconst totalLikes =\n  accountsWithLikes.length +\n  (hasLike === false && state.hasLikeOptimistic === true ? 1 : 0) -\n  (hasLike === true && state.hasLikeOptimistic === false ? 1 : 0);\nconst LikeButton = styled.button`\n  border: 0;\n  display: inline-flex;\n  align-items: center;\n  gap: 6px;\n  color: #687076;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 17px;\n  cursor: pointer;\n  background: none;\n  padding: 6px;\n  transition: color 200ms;\n  i {\n    font-size: 16px;\n    transition: color 200ms;\n    &.bi-heart-fill {\n      color: #e5484d !important;\n    }\n  }\n  &:hover,\n  &:focus {\n    outline: none;\n    color: #11181c;\n  }\n`;\nconst likeClick = (e) => {\n  e.preventDefault();\n  e.stopPropagation();\n  if (state.loading) {\n    return;\n  }\n  State.update({\n    loading: true,\n    hasLikeOptimistic: !hasLike,\n  });\n  const data = {\n    index: {\n      like: JSON.stringify({\n        key: item,\n        value: {\n          type: hasLike ? \"unlike\" : \"like\",\n        },\n      }),\n    },\n  };\n  if (!hasLike && notifyAccountIds.length > 0) {\n    const notifyData = notifyAccountIds.map((account) => {\n      if (account !== context.accountId) {\n        return {\n          key: account,\n          value: proposalId\n            ? {\n                type: \"proposal/like\",\n                item,\n                proposal: proposalId,\n                widgetAccountId: \"bos.forum.potlock.near\",\n              }\n            : {\n                type: \"rfp/like\",\n                item,\n                rfp: rfpId,\n                widgetAccountId: \"bos.forum.potlock.near\",\n              },\n        };\n      }\n    });\n    if (notifyData.length > 0) {\n      data.index.notify = notifyData;\n    }\n  }\n  Social.set(data, {\n    onCommit: () => State.update({ loading: false, hasLike: !hasLike }),\n    onCancel: () =>\n      State.update({\n        loading: false,\n        hasLikeOptimistic: !state.hasLikeOptimistic,\n      }),\n  });\n};\nconst title = hasLike ? \"Unlike\" : \"Like\";\nreturn (\n  <LikeButton\n    disabled={state.loading || dataLoading || !context.accountId}\n    title={title}\n    onClick={likeClick}\n  >\n    <i className={`${hasLikeOptimistic ? \"bi-heart-fill\" : \"bi-heart\"}`} />\n    {Object.values(likesByUsers ?? {}).length > 0 ? (\n      <span className={`count ${hasLike ? \"liked\" : \"\"}`}>\n        <Widget\n          loading={likeCount || \"\"}\n          src=\"mob.near/widget/N.Overlay.Faces\"\n          props={{ accounts: likesByUsers, limit: 10 }}\n        />\n      </span>\n    ) : (\n      \"0\"\n    )}\n  </LikeButton>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bos.forum.potlock.near/widget/components.molecule.LikeButton", "fact_widget_deployments_id": "b98e82d7f8763790c8e7f739f31c14f5", "inserted_timestamp": "2024-07-01T09:55:31.554Z", "modified_timestamp": "2024-07-01T09:55:31.554Z", "__row_index": 2}