{"tx_hash": "Q5QraYsc3NZtukkGrX2RgLxp73sJwrULVFdjzen2gwk", "action_id_social": "8cxjVTEMAtLSd42GRkagpe56NVztnVUmpmmfktdxeY4H-0-widget", "block_id": 122371334, "block_timestamp": "2024-07-01T05:45:15.088Z", "signer_id": "bos.forum.potlock.near", "widget_name": "widget.components.molecule.LinkedProposalsDropdown", "source_code": "const { fetchGraphQL } = VM.require(\n  `bos.forum.potlock.near/widget/core.common`\n) || { fetchGraphQL: () => {} };\nconst { href } = VM.require(`devhub.near/widget/core.lib.url`);\nhref || (href = () => {});\nconst linkedProposals = props.linkedProposals;\nconst onChange = props.onChange;\nconst [selectedProposals, setSelectedProposals] = useState(linkedProposals);\nconst [proposalsOptions, setProposalsOptions] = useState([]);\nconst [searchProposalId, setSearchProposalId] = useState(\"\");\nconst queryName = \"megha19_near_forum_potlock_proposals_with_latest_snapshot\";\nconst query = `query GetLatestSnapshot($offset: Int = 0, $limit: Int = 10, $where: ${queryName}_bool_exp = {}) {\n${queryName}(\n  offset: $offset\n  limit: $limit\n  order_by: {proposal_id: desc}\n  where: $where\n) {\n  name\n  proposal_id\n}\n}`;\nuseEffect(() => {\n  if (JSON.stringify(linkedProposals) !== JSON.stringify(selectedProposals)) {\n    setSelectedProposals(linkedProposals);\n  }\n}, [linkedProposals]);\nuseEffect(() => {\n  if (JSON.stringify(linkedProposals) !== JSON.stringify(selectedProposals)) {\n    onChange(selectedProposals);\n  }\n}, [selectedProposals]);\nfunction separateNumberAndText(str) {\n  const numberRegex = /\\d+/;\n  if (numberRegex.test(str)) {\n    const number = str.match(numberRegex)[0];\n    const text = str.replace(numberRegex, \"\").trim();\n    return { number: parseInt(number), text };\n  } else {\n    return { number: null, text: str.trim() };\n  }\n}\nconst buildWhereClause = () => {\n  let where = {};\n  const { number, text } = separateNumberAndText(searchProposalId);\n  if (number) {\n    where = { proposal_id: { _eq: number }, ...where };\n  }\n  if (text) {\n    where = {\n      _or: [\n        { name: { _iregex: `${text}` } },\n        { summary: { _iregex: `${text}` } },\n        { description: { _iregex: `${text}` } },\n      ],\n      ...where,\n    };\n  }\n  return where;\n};\nconst fetchProposals = () => {\n  const FETCH_LIMIT = 30;\n  const variables = {\n    limit: FETCH_LIMIT,\n    offset: 0,\n    where: buildWhereClause(),\n  };\n  fetchGraphQL(query, \"GetLatestSnapshot\", variables).then(async (result) => {\n    if (result.status === 200) {\n      if (result.body.data) {\n        const proposalsData = result.body.data?.[queryName];\n        const data = [];\n        for (const prop of proposalsData) {\n          data.push({\n            label: \"# \" + prop.proposal_id + \" : \" + prop.name,\n            value: prop.proposal_id,\n          });\n        }\n        setProposalsOptions(data);\n      }\n    }\n  });\n};\nuseEffect(() => {\n  fetchProposals();\n}, [searchProposalId]);\nreturn (\n  <>\n    {selectedProposals.map((proposal) => {\n      return (\n        <div className=\"d-flex gap-2 align-items-center\">\n          <a\n            className=\"text-decoration-underline flex-1\"\n            href={href({\n              widgetSrc: `bos.forum.potlock.near/widget/app`,\n              params: {\n                page: \"proposal\",\n                id: proposal.value,\n              },\n            })}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            {proposal.label}\n          </a>\n          <div\n            className=\"cursor-pointer\"\n            onClick={() => {\n              const updatedLinkedProposals = selectedProposals.filter(\n                (item) => item.value !== proposal.value\n              );\n              setSelectedProposals(updatedLinkedProposals);\n            }}\n          >\n            <i className=\"bi bi-trash3-fill\"></i>\n          </div>\n        </div>\n      );\n    })}\n    <Widget\n      src={`bos.forum.potlock.near/widget/components.molecule.DropDownWithSearch`}\n      props={{\n        selectedValue: selectedProposals,\n        onChange: (v) => {\n          if (!selectedProposals.some((item) => item.value === v.value)) {\n            setSelectedProposals([...selectedProposals, v]);\n          }\n        },\n        options: proposalsOptions,\n        showSearch: true,\n        searchInputPlaceholder: \"Search by Id\",\n        defaultLabel: \"Search proposals\",\n        searchByValue: true,\n        onSearch: (value) => {\n          setSearchProposalId(value);\n        },\n      }}\n    />\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bos.forum.potlock.near/widget/widget.components.molecule.LinkedProposalsDropdown", "fact_widget_deployments_id": "2e988a633e4e277ad1484c42ef958bd3", "inserted_timestamp": "2024-07-01T06:54:47.770Z", "modified_timestamp": "2024-07-01T06:54:47.770Z", "__row_index": 0}