{"tx_hash": "n5X1jHgjZhajWyD275c4ZEW1R9YpychSAiBmc77ZvhQ", "action_id_social": "CsxN3S4iuchiy2JuZJJGT8qkE1aQzAmQhpXCYS7hgRjm-0-widget", "block_id": 95031607, "block_timestamp": "2023-06-25T23:14:06.677Z", "signer_id": "relayer.pagodaplatform.near", "widget_name": "rmTrial0", "source_code": "const srcCode = `<!DOCTYPE html>\n<html>\n  <head>\n    <title>Word Guessing Game</title>\n    <style>\n      canvas {\n        border: 1px solid black;\n      }\n    </style>\n  </head>\n  <body>\n    \n    <canvas id=\"gameCanvas\" width=\"800\" height=\"400\"></canvas>\n\n    <script>\n      // Game configuration\n      const word = 'regeneration';\n      const maxGuesses = 7;\n      const soilColor = '#8B4513';\n      const skyColor = '#87CEEB';\n      const carbonColor = '#FFFFFF';\n      const wrongGuessColor = '#FF0000';\n      const circleRadius = 30;\n\n      // Game state\n      let visibleLetters = [];\n      let guessedLetters = [];\n      let remainingGuesses = maxGuesses;\n      let carbonLevels = 0;\n\n      // Initialize visible letters with underscores\n      for (let i = 0; i < word.length; i++) {\n        visibleLetters.push('_');\n      }\n\n      // Get canvas element\n      const canvas = document.getElementById('gameCanvas');\n      const context = canvas.getContext('2d');\n\n      // Draw the game scene\n      function drawScene() {\n        // Clear canvas\n        context.clearRect(0, 0, canvas.width, canvas.height);\n\n        // Draw sky\n        context.fillStyle = skyColor;\n        context.fillRect(0, 0, canvas.width, canvas.height);\n\n        // Draw soil\n        context.fillStyle = soilColor;\n        context.fillRect(0, canvas.height - 100, canvas.width, 100);\n        context.font = '24px Arial';\n\n        // Draw carbon characters in the soil\n        for (let i = 0; i < remainingGuesses; i++) {\n          context.fillStyle = 'green';\n          const x = (canvas.width / (maxGuesses + 1)) * (1 + i);\n          const y = canvas.height - (circleRadius + 20);\n          context.beginPath();\n          context.arc(x, y, circleRadius, 0, Math.PI * 2);\n          context.closePath();\n          context.fill();\n          context.textAlign = 'left';\n          context.fillStyle = carbonColor;\n          context.fillText('c', x - 5, y + 8);\n        }\n\n        // Draw carbon characters rising to the sky\n        for (let i = 0; i < carbonLevels; i++) {\n          context.fillStyle = 'red';\n          const x = canvas.width - (i + 1) * (canvas.width / (maxGuesses + 1));\n          const y = circleRadius + 20;\n          context.beginPath();\n          context.arc(x, y, circleRadius, 0, Math.PI * 2);\n          context.closePath();\n          context.fill();\n          context.textAlign = 'left';\n          context.fillStyle = carbonColor;\n          context.fillText('c', x - 5, y + 8);\n        }\n\n        // Draw visible letters\n        context.font = '48px Arial';\n        context.fillStyle = '#000000';\n        context.textAlign = 'center'; // Center the text\n        context.fillText(\n          visibleLetters.join(' '),\n          canvas.width / 2,\n          canvas.height / 2\n        );\n\n        // Display remaining guesses\n        context.font = '24px Arial';\n        context.textAlign = 'center'; // Center the text\n        context.fillText(\n          'Remaining Guesses:' + remainingGuesses,\n          canvas.width / 2,\n          canvas.height / 2 + 50\n        );\n      }\n\n      // Handle user input\n      function handleInput(event) {\n        const guessedLetter = event.key.toLowerCase();\n\n        // Check if the guessed letter is in the word\n        let found = false;\n        for (let i = 0; i < word.length; i++) {\n          if (word[i] === guessedLetter) {\n            visibleLetters[i] = guessedLetter;\n            found = true;\n          }\n        }\n\n        // Update game state\n        if (!guessedLetters.includes(guessedLetter)) {\n          if (!found) {\n            remainingGuesses--;\n            carbonLevels++;\n            if (remainingGuesses === 0) {\n              // All guesses are wrong, game over\n              context.fillStyle = wrongGuessColor;\n              context.fillRect(0, 0, canvas.width, canvas.height);\n            }\n          }\n          guessedLetters.push(guessedLetter);\n        }\n\n        // Redraw the scene\n        drawScene();\n\n        // Check if the word is guessed\n        if (visibleLetters.join('') === word) {\n          alert('Congratulations! You guessed the word!');\n        }\n      }\n\n      // Attach event listener for keypress\n      document.addEventListener('keypress', handleInput);\n\n      // Initial draw\n      drawScene();\n    </script>\n  </body>\n</html>\n`;\n\nreturn (\n  <>\n    <iframe\n      srcDoc={srcCode}\n      style={{\n        height: \"80vh\",\n        width: \"135vh\",\n      }}\n    ></iframe>\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/relayer.pagodaplatform.near/widget/rmTrial0", "fact_widget_deployments_id": "f8fc4b73caea6221f41e42d9e5311de2", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}