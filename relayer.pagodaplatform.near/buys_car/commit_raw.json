{"tx_hash": "5M8SGSCY6U8oQ5Nr7VvpHS5AgFU63fyxtNfLMShze33V", "action_id_social": "4MeMqSQ1azLhmjfTB9DME4X4bRTJ3rvW6G7nDcsoDTQ2-0-widget", "block_id": 112071263, "block_timestamp": "2024-02-04T07:30:20.681Z", "signer_id": "relayer.pagodaplatform.near", "widget_name": "buys_car", "source_code": "const { normalize } = VM.require(\"buildbox./widget/utils.stringUtils\") || {\n  normalize: (s) => s,\n};\n\nconst app = props.app || \"buildbox\";\nconst type = props.type || \"project\";\n\nconst accountId = context.accountId;\n\n//estilos de los campos y titulo\nconst Root = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  background-color: #292320;\n  color: #fff;\n  gap: 5rem;\n\n  padding: 64px 80px;\n`;\n\nconst Header = styled.h1`\n  color: #fff;\n  font-size: 90px;\n  max-width: 900px;\n  font-style: normal;\n  text-align: left;\n  font-weight: 500;\n  line-height: 108px;\n  text-transform: lowercase;\n\n  @media screen and (max-width: 768px) {\n    font-size: 36px;\n    max-width: 70%;\n    line-height: 43px;\n  }\n`;\n\nconst Subheader = styled.p`\n  color: rgb(255, 255, 255);\n  font-size: 24px;\n  max-width: 800px;\n  text-align: left;\n  line-height: 36px;\n\n  @media screen and (max-width: 768px) {\n    font-size: 16px;\n    line-height: 24px;\n  }\n`;\n\nconst HeaderContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  gap: 2rem;\n\n  @media screen and (max-width: 768px) {\n    gap: 1rem;\n  }\n`;\n\nconst FormContainer = styled.div`\n  width: 100%;\n  max-width: 600px;\n`;\n\nconst FormGroup = styled.div`\n  margin-bottom: 20px;\n`;\n\nconst Label = styled.label`\n  font-weight: bold;\n  display: block;\n  margin-bottom: 8px;\n  font-size: 24px;\n`;\n\nconst Subtext = styled.p`\n  font-size: 12px;\n  color: #c0c0c0;\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  padding: 10px;\n  margin-top: 5px;\n  box-sizing: border-box;\n  background-color: #292320;\n  color: #fff;\n  border: 1px solid #fff;\n  outline: none;\n  border-radius: 0.5rem;\n`;\n\nconst Textarea = styled.textarea`\n  width: 100%;\n  padding: 10px;\n  margin-top: 5px;\n  box-sizing: border-box;\n  background-color: #292320;\n  color: #fff;\n  border: 1px solid #fff;\n  outline: none;\n  border-radius: 0.5rem;\n`;\n\nconst CheckboxGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst CheckboxLabel = styled.label`\n  margin-right: 15px;\n  color: #fff;\n`;\n\nconst CheckBox = styled.input`\n  margin-right: 5px;\n`;\n\nconst ConsentContainer = styled.div`\n  display: flex;\n  align-items: flex-start;\n  margin-bottom: 1rem;\n`;\n\nconst ConsentCheckbox = styled.input`\n  margin-right: 5px;\n  margin-top: 5px;\n`;\n\nconst ConsentLabel = styled.label`\n  font-size: 14px;\n`;\n\nconst SubmitButton = styled.button`\n  color: #000;\n  cursor: pointer;\n  display: inline-block;\n  font-size: 18px;\n  box-shadow: 5px 6px 0 0 #000;\n  font-style: normal;\n  transition: 0.3s;\n  font-weight: 500;\n  border-color: #000;\n  border-width: 1px;\n  border-radius: 0;\n  padding: 16px 24px;\n  background-color: #ffcf77;\n\n  &:hover {\n    opacity: 0.5;\n  }\n\n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n`;\n\nconst [nombre, setNombre] = useState(\"\");\nconst [teammates, setTeammates] = useState(\"\");\nconst [marca, setMarca] = useState(\"\");\nconst [modelo, setModelo] = useState(\"\");\nconst [a\u00f1o, setA\u00f1o] = useState(\"\");\nconst [bin, setBin] = useState(\"\");\nconst [precio, setPrecio] = useState(\"\");\nconst [fecha, setFecha] = useState(\"\");\n\nconst emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\nconst [isEmailValid, setIsEmailValid] = useState(true);\n\nfunction isValidEmail(email) {\n  return emailRegex.test(email);\n}\n\nuseEffect(() => {\n  setIsEmailValid(isValidEmail(contactInfo));\n  if (contactInfo === \"\") {\n    setIsEmailValid(true);\n  }\n}, [contactInfo]);\n\nconst handleSubmit = () => {\n  const id = normalize(nombre);\n  const path = `${context.accountId}/${app}/${type}/${id}`;\n  const postItem = { type: \"social\", path: `${context.accountId}/post/main` };\n\n  Social.set(\n    {\n      post: {\n        main: JSON.stringify({\n          text: `I've just submitted a ${type} to Abstraction Hacks! #build #${type} #abstraction #hack \\n\\n[EMBED](${path})\\n\\n # ${nombre}\\n\\n${marca}\\n\\n### Teammates\\n${teammates}\\n\\n### Tracks\\n${modelo.join(\n            \"\\n\"\n          )}\\n\\n ### Project Link\\n${a\u00f1o}\\n\\n### Demo\\n${bin}\\n\\n### What I learned\\n\\n${precio}\\n\\n### Referral\\n\\n${fecha}`,\n          image: \"\",\n          type: \"\",\n        }),\n      },\n      index: {\n        post: JSON.stringify({ key: \"main\", value: { type: \"md\" } }),\n        hashtag: JSON.stringify([\n          {\n            key: \"abstraction\",\n            value: postItem,\n          },\n          { key: \"hack\", value: postItem },\n          { key: \"build\", value: postItem },\n          { key: \"project\", value: postItem },\n        ]),\n      },\n      buildbox: {\n        [type]: {\n          [id]: {\n            \"\": JSON.stringify({\n              nombre,\n              teammates,\n              marca,\n              modelo,\n              a\u00f1o,\n              bin,\n              precio,\n              fecha,\n            }),\n            metadata: {\n              name: nombre,\n              teammates,\n              marca,\n              modelo,\n              bin,\n              type: `buildbox.near/type/${type}`, // for later\n              tags,\n            },\n          },\n          hackathon: {\n            abstractionhacks: {\n              submissions: {\n                [`${context.accountId}-${normalize(nombre)}`]: \"\",\n              },\n            },\n          },\n        },\n      },\n    },\n    {\n      force: true,\n      onCommit: (v) => console.log(\"onCommit\", v),\n      onCancel: (v) => console.log(\"onCancel\", v),\n    }\n  );\n};\n\nconst pageDescription = ``;\n\nreturn (\n  <Root>\n    <HeaderContainer>\n      <Header>\ud83d\udce6 Block Car</Header>\n      <Subheader>\n        <Markdown text={pageDescription} />\n      </Subheader>\n    </HeaderContainer>\n    <FormContainer>\n      <FormGroup>\n        <Label htmlFor=\"nombre\">\n          Nombre<span className=\"text-danger\">*</span>\n        </Label>\n        <Subtext>\n          Ingresa el nombre de la persona que comprara el Automovil\n        </Subtext>\n        <Input\n          name=\"nombre\"\n          id=\"nombre\"\n          type=\"text\"\n          value={nombre}\n          onChange={(e) => setNombre(e.target.value)}\n        />\n      </FormGroup>\n\n      <FormGroup>\n        <Label htmlFor=\"teammates\">\n          Correo Electronico <span className=\"text-danger\">*</span>\n        </Label>\n        <Subtext>El correo debe contar con un @</Subtext>\n        <Input\n          name=\"teammates\"\n          id=\"teammates\"\n          type=\"text\"\n          value={teammates}\n          onChange={(e) => setTeammates(e.target.value)}\n        />\n      </FormGroup>\n\n      <FormGroup>\n        <Label htmlFor=\"marca\">\n          Marca\n          <span className=\"text-danger\">*</span>\n        </Label>\n        <Subtext> Ingresa el marca correspondiente al vehiculo</Subtext>\n        <Input\n          name=\"marca\"\n          id=\"marca\"\n          type=\"text\"\n          value={marca}\n          onChange={(e) => setMarca(e.target.value)}\n        />\n      </FormGroup>\n\n      <FormGroup>\n        <Label htmlFor=\"modelo\">\n          Modelo<span className=\"text-danger\">*</span>\n        </Label>\n        <Subtext>Ingresa el modelo correspondiente al vehiculo</Subtext>\n        <Input\n          id=\"modelo\"\n          name=\"modelo\"\n          type=\"text\"\n          value={modelo}\n          onChange={(e) => setModelo(e.target.value)}\n        />\n      </FormGroup>\n\n      <FormGroup>\n        <Label htmlFor=\"a\u00f1o\">\n          A\u00f1o<span className=\"text-danger\">*</span>\n        </Label>\n        <Subtext>Ingresa el a\u00f1o correspondiente al vehiculo</Subtext>\n        <Textarea\n          name=\"a\u00f1o\"\n          id=\"a\u00f1o\"\n          value={a\u00f1o}\n          onChange={(e) => setA\u00f1o(e.target.value)}\n        />\n      </FormGroup>\n\n      <FormGroup>\n        <Label htmlFor=\"bin\">\n          Bin<span className=\"text-danger\">*</span>\n        </Label>\n        <Subtext>Ingresa el modelo correspondiente al vehiculo </Subtext>\n        <Textarea\n          name=\"bin\"\n          id=\"bin\"\n          value={learning}\n          onChange={(e) => setBin(e.target.value)}\n        />\n      </FormGroup>\n\n      <FormGroup>\n        <Label htmlFor=\"precio\">\n          Precio\n          <span className=\"text-danger\">*</span>\n        </Label>\n        <Subtext>Ingresa el bin correspondiente al vehiculo</Subtext>\n        <Input\n          name=\"precio\"\n          id=\"precio\"\n          type=\"text\"\n          value={precio}\n          onChange={(e) => setPrecio(e.target.value)}\n        />\n      </FormGroup>\n\n      <FormGroup>\n        <Label htmlFor=\"fecha\">\n          Fecha<span className=\"text-danger\">*</span>\n        </Label>\n        <Subtext>Ingresa la fecha de la compra del vehiculo</Subtext>\n        <Textarea\n          name=\"fecha\"\n          id=\"fecha\"\n          value={fecha}\n          onChange={(e) => setFecha(e.target.value)}\n        />\n      </FormGroup>\n\n      <SubmitButton\n        onClick={handleSubmit}\n        disabled={\n          !nombre ||\n          !teammates ||\n          !marca ||\n          !modelo ||\n          !a\u00f1o ||\n          !bin ||\n          !precio ||\n          !fecha ||\n          !isEmailValid\n        }\n      >\n        Submit\n      </SubmitButton>\n    </FormContainer>\n  </Root>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/relayer.pagodaplatform.near/widget/buys_car", "fact_widget_deployments_id": "23eaa315ff1145cab392f5ba5a79e6b6", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}