{"tx_hash": "8eaMQrjdN8tX4whxnsh2u1hr9KP6PmDBwXMtacEgDrSR", "action_id_social": "34XBoGJC7qyiyaxrVdsRtoniiA9sm9vZXQuTXdUp7q2E-0-widget", "block_id": 98437067, "block_timestamp": "2023-08-09T17:52:09.115Z", "signer_id": "relayer.pagodaplatform.near", "widget_name": "Untitled-4", "source_code": "const {\n  xColumn,\n  yColumn,\n  data,\n  legendMax,\n  legendMin,\n  label,\n  isXDate,\n  strokeColumn,\n} = props;\nconst code = `\n<!-- observerable plot -->\n<div id=\"myplot\" style=\"width: 100%; display: flex; align-items: center; justify-content: center;\"></div>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/7.8.5/d3.min.js\" integrity=\"sha512-M7nHCiNUOwFt6Us3r8alutZLm9qMt4s9951uo8jqO4UwJ1hziseL6O3ndFyigx6+LREfZqnhHxYjKRJ8ZQ69DQ==\" crossorigin=\"anonymous\" referrerpolicy=\"no-referrer\"></script>\n<script type=\"module\">\n\nimport * as Plot from \"https://cdn.jsdelivr.net/npm/@observablehq/plot@0.6/+esm\";\n\nconst data = ${JSON.stringify(data ?? [])};\n\n// convert to date object\nif(1 == ${isXDate ? \"1\" : \"0\"}) {\n   data.forEach((x, index) => {\n      data[index]['${xColumn}'] = new Date(data[index]['${xColumn}']);\n   });\n}\n\nconst plot = Plot.plot({\n  width: 780,\n  x: {type: \"band\"},\n  y: {grid: true, label: \"${label}\"},\n  color: { legend: true },\n  marks: [\n    Plot.ruleY([0]),\n    Plot.barY(data, {x: \"${xColumn}\", y: \"${yColumn}\", fill: \"${strokeColumn}\"})\n  ]\n})\nconst div = document.querySelector(\"#myplot\");\ndiv.append(plot);\n\n</script>\n\n`;\n\nreturn (\n  <div>\n    <iframe className=\"w-100\" style={{ height: \"600px\" }} srcDoc={code} />\n  </div>\n);\n", "metadata": null, "branch": {"draft": null}, "widget_modules_used": null, "widget_url": "https://near.social/#/relayer.pagodaplatform.near/widget/Untitled-4", "fact_widget_deployments_id": "54176833da7edcb6bbf4a70a25b0185f", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 12}