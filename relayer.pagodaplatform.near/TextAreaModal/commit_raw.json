{"tx_hash": "7XtSbMkcK9erKdsQLHMa2DqYjCJVREqY2c323VQFVYVw", "action_id_social": "CpmmeJmPutJoJRXYTLbVdG7bTwy94y2TsufV1vKy4gmm-0-widget", "block_id": 102068937, "block_timestamp": "2023-09-27T11:41:29.578Z", "signer_id": "relayer.pagodaplatform.near", "widget_name": "TextAreaModal", "source_code": "State.init({\n  key: \"\",\n  value: \"\",\n});\n\nconst keyLabel = props.keyLabel || \"Key\";\nconst keyPlaceholder = props.keyPlaceholder || \"Key\";\nconst valueLabel = props.valueLabel || \"Value\";\nconst valuePlaceHolder = props.valuePlaceHolder || \"Value\";\n\nconst title = props.title || \"Add Attribute\";\nconst confirmText = props.confirmText || \"Save\";\nconst onConfirm = props.onConfirm;\nconst hidden = props.hidden;\nconst onClose = props.onClose;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: flex-start;\n  padding: 0px;\n  gap: 0.45em;\n  width: 100%;\n`;\n\nconst Label = styled.label`\n  font-style: normal;\n  font-weight: 600;\n  font-size: 0.95em;\n  line-height: 1.25em;\n  color: #344054;\n  margin-top: 3%;\n`;\n\nconst Input = styled.textarea`\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding: 0.5em 0.75em;\n  width: 100%;\n  gap: 0.5em;\n  background: #ffffff;\n  border: 1px solid #d0d5dd;\n  box-shadow: 0px 1px 2px rgba(16, 24, 40, 0.05);\n  border-radius: 4px;\n  margin-top: 3px;\n`;\n\nconst Modal = styled.div`\n  display: ${({ hidden }) => (hidden ? \"none\" : \"flex\")};\n  position: fixed;\n  inset: 0;\n  justify-content: center;\n  align-items: center;\n  opacity: 1;\n  z-index: 1;\n`;\n\nconst ModalBackdrop = styled.div`\n  position: absolute;\n  inset: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  opacity: 0.4;\n`;\n\nconst ModalDialog = styled.div`\n  padding: 2em;\n  z-index: 3;\n  background-color: white;\n  border-radius: 6px;\n  width: 60%;\n  max-height: 80%;\n  box-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);\n  overflow-y: auto;\n\n  @media (width < 720px) {\n    width: 100%;\n  }\n`;\n\nconst ModalHeader = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  border-bottom: 1px solid #d3d3d3;\n  padding-bottom: 4px;\n  margin-bottom: 3%;\n`;\n\nconst ModalFooter = styled.div`\n  padding-top: 4px;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: items-center;\n  margin-top: 5%;\n`;\n\nconst CloseButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: white;\n  padding: 0.7em;\n  border-radius: 6px;\n  border: 0;\n  color: #344054;\n  transition: 300ms;\n\n  &:hover {\n    background-color: #d3d3d3;\n  }\n`;\n\nconst ConfirmButton = styled.button`\n  padding: 0.7em;\n  border-radius: 6px;\n  border: 0;\n  box-shadow: 0px 1px 2px rgba(16, 24, 40, 0.05);\n  background-color: #12b76a;\n  color: white;\n  transition: background-color 0.2s ease-in-out;\n\n  &:hover {\n    background-color: #0e9f5d;\n  }\n`;\n\nconst ModalContent = styled.div`\n  flex: 1;\n  margin-top: 4px;\n  margin-bottom: 4px;\n  overflow-y: auto;\n  max-height: 50%;\n`;\n\nconst handleOnConfirm = () => {\n  onConfirm(key, value);\n};\n\nreturn (\n  <Modal hidden={hidden}>\n    <ModalBackdrop />\n\n    <ModalDialog>\n      <ModalHeader>\n        <h5>{title}</h5>\n      </ModalHeader>\n\n      <Container>\n        <Label>{keyLabel}</Label>\n        <Input\n          placeholder={keyPlaceholder}\n          value={key}\n          onChange={({ target: { key } }) => onChange(key)}\n          rows={1}\n        />\n\n        <Label>{valueLabel}</Label>\n        <Input\n          placeholder={valuePlaceHolder}\n          value={value}\n          onChange={({ target: { value } }) => onChange(value)}\n          rows={1}\n        />\n      </Container>\n\n      <ModalFooter>\n        <CloseButton onClick={onClose}>Cancel</CloseButton>\n        <ConfirmButton onClick={handleOnConfirm}>{confirmText}</ConfirmButton>\n      </ModalFooter>\n    </ModalDialog>\n  </Modal>\n);\n", "metadata": {"description": "# Text Input Modal Component\n\nA customizable modal component for entering key-value pairs, commonly used for form input.\n\n## Example\n\n```jsx\nimport TextModalInput from 'your-text-modal-input-library';\n\nState.init({\n  hidden: true,\n});\n\nconst handleOnConfirm = (key, value) => {\n  console.log(\"Key: \" + key);\n  console.log(\"Value: \" + value);\n  State.update({ hidden: !hidden });\n};\n\nreturn (\n  <TextModalInput\n    keyLabel=\"Your Key Label\"\n    keyPlaceholder=\"Your Key Placeholder\"\n    valueLabel=\"Your Value Label\"\n    valuePlaceholder=\"Your Value Placeholder\"\n    title=\"Your Title\"\n    confirmText=\"Your Confirm Text\"\n    hidden={hidden}\n    onClose={() => State.update({ hidden: !hidden })}\n    onConfirm={handleOnConfirm}\n  />\n);\nProps\nkeyLabel\nType: string\nDefault: \"Key\"\nDescription: The label for the key input field.\nkeyPlaceholder\nType: string\nDefault: \"Key\"\nDescription: The placeholder text for the key input field.\nvalueLabel\nType: string\nDefault: \"Value\"\nDescription: The label for the value input field.\nvaluePlaceholder\nType: string\nDefault: \"Value\"\nDescription: The placeholder text for the value input field.\ntitle\nType: string\nDefault: \"Add Attribute\"\nDescription: The title of the modal.\nconfirmText\nType: string\nDefault: \"Save\"\nDescription: The text for the confirmation button.\nhidden\nType: boolean\nDefault: true\nDescription: Controls whether the modal is hidden or visible.\nonClose\nType: function\nDescription: A callback function to be called when the modal is closed.\nonConfirm\nType: function\nDescription: A callback function to be called when the confirmation button is clicked. It receives the key and value entered by the user as arguments.\n...otherProps\nDescription: All other props not listed above will be forwarded to the underlying input elements.\nHTML Attributes\nAll other props not listed above will be forwarded to the input elements within the modal, such as type, value, and placeholder. You can use these to further customize the input fields as needed.", "image": {"ipfs_cid": "bafkreigo42xqaeozebogx5ozfgpajzdn2quqsb3riz7zoxqxeepnsxrh3i"}, "name": "TextAreaModal"}, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/relayer.pagodaplatform.near/widget/TextAreaModal", "fact_widget_deployments_id": "c934cce94b5999880b39c5021b4a1e79", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}