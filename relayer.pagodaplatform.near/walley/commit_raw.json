{"tx_hash": "CuZgHSmNxuBR7kDDi6Wbq8ryp8McAhCGsPiFSwYvVbq6", "action_id_social": "DcRWfdrsGNdaKGcUDUyS4dHBCD3CE9MAm1gcRTJBdAav-0-widget", "block_id": 99265316, "block_timestamp": "2023-08-20T19:56:06.089Z", "signer_id": "relayer.pagodaplatform.near", "widget_name": "walley", "source_code": "const nftAddress = \"0x2ff89994bac89d17c7dc101ca9c0e2154737c035\";\r\nconst NFTManagerABI = [\r\n  {\r\n    inputs: [],\r\n    stateMutability: \"payable\",\r\n    type: \"constructor\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: false,\r\n        internalType: \"address\",\r\n        name: \"nftContract\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: \"uint256\",\r\n        name: \"tokenId\",\r\n        type: \"uint256\",\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: \"string\",\r\n        name: \"name\",\r\n        type: \"string\",\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: \"address\",\r\n        name: \"storeAddress\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: \"address\",\r\n        name: \"owner\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: \"uint256\",\r\n        name: \"amount\",\r\n        type: \"uint256\",\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: \"string\",\r\n        name: \"store\",\r\n        type: \"string\",\r\n      },\r\n    ],\r\n    name: \"NFTListed\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: false,\r\n        internalType: \"address\",\r\n        name: \"nftContract\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: \"uint256\",\r\n        name: \"tokenId\",\r\n        type: \"uint256\",\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: \"string\",\r\n        name: \"name\",\r\n        type: \"string\",\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: \"address\",\r\n        name: \"storeAddress\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: \"address\",\r\n        name: \"owner\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: \"uint256\",\r\n        name: \"amount\",\r\n        type: \"uint256\",\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: \"string\",\r\n        name: \"store\",\r\n        type: \"string\",\r\n      },\r\n    ],\r\n    name: \"NFTSold\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"string\",\r\n        name: \"store\",\r\n        type: \"string\",\r\n      },\r\n      {\r\n        internalType: \"address\",\r\n        name: \"storeAddress\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"addStore\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"_nftContract\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"_tokenId\",\r\n        type: \"uint256\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"_amount\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"approveTransaction\",\r\n    outputs: [],\r\n    stateMutability: \"payable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"_nftContract\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"_tokenId\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"cancelTransaction\",\r\n    outputs: [],\r\n    stateMutability: \"payable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"getAllStores\",\r\n    outputs: [\r\n      {\r\n        components: [\r\n          {\r\n            internalType: \"string\",\r\n            name: \"storeName\",\r\n            type: \"string\",\r\n          },\r\n          {\r\n            internalType: \"address\",\r\n            name: \"storeAddress\",\r\n            type: \"address\",\r\n          },\r\n        ],\r\n        internalType: \"struct NFTManager.storeDetails[]\",\r\n        name: \"\",\r\n        type: \"tuple[]\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"getBalance\",\r\n    outputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"getMyActiveTransactions\",\r\n    outputs: [\r\n      {\r\n        components: [\r\n          {\r\n            internalType: \"address\",\r\n            name: \"nftContract\",\r\n            type: \"address\",\r\n          },\r\n          {\r\n            internalType: \"uint256\",\r\n            name: \"tokenId\",\r\n            type: \"uint256\",\r\n          },\r\n          {\r\n            internalType: \"string\",\r\n            name: \"name\",\r\n            type: \"string\",\r\n          },\r\n          {\r\n            internalType: \"address payable\",\r\n            name: \"storeAddress\",\r\n            type: \"address\",\r\n          },\r\n          {\r\n            internalType: \"address payable\",\r\n            name: \"owner\",\r\n            type: \"address\",\r\n          },\r\n          {\r\n            internalType: \"uint256\",\r\n            name: \"amount\",\r\n            type: \"uint256\",\r\n          },\r\n          {\r\n            internalType: \"string\",\r\n            name: \"store\",\r\n            type: \"string\",\r\n          },\r\n        ],\r\n        internalType: \"struct NFTManager.NFT[]\",\r\n        name: \"\",\r\n        type: \"tuple[]\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"storeAddress\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"getStoreActiveTransactions\",\r\n    outputs: [\r\n      {\r\n        components: [\r\n          {\r\n            internalType: \"address\",\r\n            name: \"nftContract\",\r\n            type: \"address\",\r\n          },\r\n          {\r\n            internalType: \"uint256\",\r\n            name: \"tokenId\",\r\n            type: \"uint256\",\r\n          },\r\n          {\r\n            internalType: \"string\",\r\n            name: \"name\",\r\n            type: \"string\",\r\n          },\r\n          {\r\n            internalType: \"address payable\",\r\n            name: \"storeAddress\",\r\n            type: \"address\",\r\n          },\r\n          {\r\n            internalType: \"address payable\",\r\n            name: \"owner\",\r\n            type: \"address\",\r\n          },\r\n          {\r\n            internalType: \"uint256\",\r\n            name: \"amount\",\r\n            type: \"uint256\",\r\n          },\r\n          {\r\n            internalType: \"string\",\r\n            name: \"store\",\r\n            type: \"string\",\r\n          },\r\n        ],\r\n        internalType: \"struct NFTManager.NFT[]\",\r\n        name: \"\",\r\n        type: \"tuple[]\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"_nftContract\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"string\",\r\n        name: \"name\",\r\n        type: \"string\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"_tokenId\",\r\n        type: \"uint256\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"_amount\",\r\n        type: \"uint256\",\r\n      },\r\n      {\r\n        internalType: \"address payable\",\r\n        name: \"_storeAddress\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"string\",\r\n        name: \"store\",\r\n        type: \"string\",\r\n      },\r\n    ],\r\n    name: \"initTransaction\",\r\n    outputs: [],\r\n    stateMutability: \"payable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"stores\",\r\n    outputs: [\r\n      {\r\n        internalType: \"string\",\r\n        name: \"storeName\",\r\n        type: \"string\",\r\n      },\r\n      {\r\n        internalType: \"address\",\r\n        name: \"storeAddress\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n];\r\nconst walleyAddress = \"0xbaeeb75e706cbcdbb4ed815bfb0ea6c8fac2ebcd\";\r\nconst WalleyABI = [\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"_marketplaceContract\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"constructor\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"owner\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"approved\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: \"uint256\",\r\n        name: \"tokenId\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"Approval\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"owner\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"operator\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: \"bool\",\r\n        name: \"approved\",\r\n        type: \"bool\",\r\n      },\r\n    ],\r\n    name: \"ApprovalForAll\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: false,\r\n        internalType: \"uint256\",\r\n        name: \"_fromTokenId\",\r\n        type: \"uint256\",\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: \"uint256\",\r\n        name: \"_toTokenId\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"BatchMetadataUpdate\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: false,\r\n        internalType: \"uint256\",\r\n        name: \"_tokenId\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"MetadataUpdate\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: false,\r\n        internalType: \"uint256\",\r\n        name: \"\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"NFTMinted\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"from\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"to\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: \"uint256\",\r\n        name: \"tokenId\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"Transfer\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"to\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"tokenId\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"approve\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"owner\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"balanceOf\",\r\n    outputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"tokenId\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"getApproved\",\r\n    outputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"getToken\",\r\n    outputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"owner\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"address\",\r\n        name: \"operator\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"isApprovedForAll\",\r\n    outputs: [\r\n      {\r\n        internalType: \"bool\",\r\n        name: \"\",\r\n        type: \"bool\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"mint\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"name\",\r\n    outputs: [\r\n      {\r\n        internalType: \"string\",\r\n        name: \"\",\r\n        type: \"string\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"tokenId\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"ownerOf\",\r\n    outputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"from\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"address\",\r\n        name: \"to\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"tokenId\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"safeTransferFrom\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"from\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"address\",\r\n        name: \"to\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"tokenId\",\r\n        type: \"uint256\",\r\n      },\r\n      {\r\n        internalType: \"bytes\",\r\n        name: \"data\",\r\n        type: \"bytes\",\r\n      },\r\n    ],\r\n    name: \"safeTransferFrom\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"operator\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"bool\",\r\n        name: \"approved\",\r\n        type: \"bool\",\r\n      },\r\n    ],\r\n    name: \"setApprovalForAll\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"bytes4\",\r\n        name: \"interfaceId\",\r\n        type: \"bytes4\",\r\n      },\r\n    ],\r\n    name: \"supportsInterface\",\r\n    outputs: [\r\n      {\r\n        internalType: \"bool\",\r\n        name: \"\",\r\n        type: \"bool\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"symbol\",\r\n    outputs: [\r\n      {\r\n        internalType: \"string\",\r\n        name: \"\",\r\n        type: \"string\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"tokenId\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"tokenURI\",\r\n    outputs: [\r\n      {\r\n        internalType: \"string\",\r\n        name: \"\",\r\n        type: \"string\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"from\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"address\",\r\n        name: \"to\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"tokenId\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"transferFrom\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n];\r\nState.init({\r\n  general: {\r\n    chainId: undefined,\r\n    balance: 0,\r\n  },\r\n  store: {\r\n    stores: [],\r\n    storeName: \"\",\r\n    storeAddress: \"\",\r\n    storeNames: [],\r\n    isStore: false,\r\n    storePendingTransactions: [],\r\n  },\r\n  user: {\r\n    userPendingTransactions: [],\r\n  },\r\n});\r\n\r\nconst cssFont = fetch(\r\n  \"https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700;800;900&display=swap\"\r\n).body;\r\n\r\nconst Root = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    font-family: Poppins, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\r\n    ${cssFont}\r\n    flex-direction: column;\r\n    padding: 0;\r\n    align-items: center;\r\n    justify-content: center;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst WalleyTitle = styled.div`\r\n    text-align: left;\r\n    font-weight: 900;\r\n    width: 100%;\r\n    font-size: 30px;\r\n    margin: 0px;\r\n    padding: 5px;\r\n    color: #000D1A; \r\n`;\r\n\r\nconst WalleyIndexContainer = styled.div`\r\n    \r\n    box-shadow: 12px 0px 0px 5px #000D1A;\r\n    background: linear-gradient( to bottom, orange 0%, orange 50%, #FFF5F5 50%, #FFF5F5 100% ); ;\r\n    color: #000D1A;\r\n    width: 100%;\r\n    padding: 20px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    text-align: center;\r\n    justify-content: space-betweeen;\r\n`;\r\n\r\nconst WalleyIndexTop = styled.div`\r\n    margin-top: 20px;\r\n    color: #000D1A;\r\n    font-weight: 600;\r\n    font-size: 40px;\r\n    height: 100%;\r\n    padding-bottom: 10px;\r\n    @media screen and (max-width: 600px) {\r\n        font-size: 25px;\r\n        font-weight: 700;\r\n    }\r\n`;\r\n\r\nconst WalleyIndexBottom = styled.div`\r\n    position: relative;\r\n    top: 50%;\r\n    height: 350px;\r\n    background-color: white;\r\n    font-weight: 500;\r\n    width: 400px;\r\n    text-align: left;\r\n    box-shadow: 12px 0px 0px 5px #000D1A;\r\n    @media screen and (max-width: 600px) {\r\n        width: 100%;\r\n        box-shadow: none;\r\n        border: 1px solid #DBDED7;\r\n        border-radius: 20px;\r\n    }\r\n    &>button {\r\n        border: none;\r\n        background: orange;\r\n        color: white;\r\n    }\r\n`;\r\n\r\nconst WalleyHomeContainer\r\n\r\nconst sender = Ethers.send(\"eth_requestAccounts\", [])[0];\r\nconst updateBalance = (balance) => {\r\n  State.update({ balance });\r\n};\r\nif (!sender) {\r\n  return (\r\n    <Root>\r\n      <WalleyIndexContainer>\r\n        <WalleyTitle>Walley.</WalleyTitle>\r\n        <WalleyIndexTop>Go Phoneless</WalleyIndexTop>\r\n        <WalleyIndexBottom>\r\n          Get Started\r\n          <Web3Connect connectLabel=\"Connect Wallet\" />\r\n        </WalleyIndexBottom>\r\n      </WalleyIndexContainer>\r\n    </Root>\r\n  );\r\n}\r\nif (state.chainId === undefined && ethers !== undefined && sender) {\r\n  Ethers.provider()\r\n    .getNetwork()\r\n    .then((chainIdData) => {\r\n      if (chainIdData?.chainId) {\r\n        State.update({ chainId: chainIdData.chainId });\r\n      }\r\n    });\r\n  Ethers.provider()\r\n    .getBalance(sender)\r\n    .then((balance) => {\r\n      console.log(balance);\r\n      updateBalance(Big(balance).div(Big(10).pow(18)).toFixed(5));\r\n    });\r\n}\r\nif (state.chainId !== undefined && state.chainId !== 11155111) {\r\n  return <p>Switch to Ethereum Sepolia</p>;\r\n}\r\nconst nftIface = new ethers.utils.Interface(NFTManagerABI);\r\nconst nftContract = new ethers.Contract(\r\n  nftAddress,\r\n  NFTManagerABI,\r\n  Ethers.provider().getSigner()\r\n);\r\nconst walleyIface = new ethers.utils.Interface(WalleyABI);\r\nconst walleyContract = new ethers.Contract(\r\n  walleyAddress,\r\n  WalleyABI,\r\n  Ethers.provider().getSigner()\r\n);\r\n\r\n//get stores data\r\nif (state.store.stores.length === 0 && nftContract && sender) {\r\n  nftContract.getAllStores().then((stores) => {\r\n    const storeState = state.store;\r\n    storeState.stores = stores;\r\n    let store;\r\n    for (let i = 0; i < stores.length; i++) {\r\n      store = stores[i];\r\n      storeState.storeNames.push(store[0]);\r\n      if (store[1] === sender) {\r\n        storeState.isStore = true;\r\n        storeState.storeName = store[0];\r\n        storeState.storeAddress = store[1];\r\n        nftContract\r\n          .getStoreActiveTransactions(store[1])\r\n          .then(\r\n            (transactions) =>\r\n              (storeState.storePendingTransactions = transactions)\r\n          );\r\n      }\r\n      if (i === stores.length - 1) State.update({ store: storeState });\r\n    }\r\n    console.log(state.store);\r\n  });\r\n}\r\n\r\nif (store.user.userPendingTransactions.length === 0 && sender && nftContract) {\r\n  nftContract\r\n    .getMyActiveTransactions({ from: sender })\r\n    .then((transactions) =>\r\n      State.update({ user: { userPendingTransactions: transactions } })\r\n    );\r\n}\r\n\r\nreturn (\r\n    <Root></Root>\r\n)", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/relayer.pagodaplatform.near/widget/walley", "fact_widget_deployments_id": "ba4d71417449eee888e79a6bd25e8c33", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 93}