{"tx_hash": "DzvvNdas96cjY6D1YauW9EhcnEJxjCCHuKubUBXjwrte", "action_id_social": "H14eBMgpfPGeB19zsEWEE72ty1cQaQJnjXVKZ6SgPFv4-0-widget", "block_id": 99067358, "block_timestamp": "2023-08-18T05:41:26.651Z", "signer_id": "relayer.pagodaplatform.near", "widget_name": "Onboarding.Starter-fork", "source_code": "const nftAddress = \"0x3e0f64d801823706f29686eeca0aac521e77674e\";\nconst NFTManagerABI = fetch(\n  \"https://raw.githubusercontent.com/test1883/files/main/NFTManager.json\"\n);\nif (!NFTManagerABI.ok) {\n  return \"Loading..\";\n}\nconst walleyAddress = \"0x2ebb88cd2a775308636afad718800bbb82f19137\";\nconst WalleyABI = fetch(\n  \"https://raw.githubusercontent.com/test1883/files/main/Walley.json\"\n);\n\nif (!WalleyABI.ok) {\n  return \"Loading..\";\n}\n\nState.init({\n  chainId: undefined,\n  balance: 0,\n  transfers: [],\n});\nconst sender = Ethers.send(\"eth_requestAccounts\", [])[0];\n\nif (!sender) return <Web3Connect connectLabel=\"Connect with Web3\" />;\nif (state.chainId === undefined && ethers !== undefined && sender) {\n  Ethers.provider()\n    .getNetwork()\n    .then((chainIdData) => {\n      if (chainIdData?.chainId) {\n        State.update({ chainId: chainIdData.chainId });\n      }\n    });\n  Ethers.provider()\n    .getBalance(sender)\n    .then((balance) => {\n      State.update({ balance: Big(balance).div(Big(10).pow(18)).toFixed(2) });\n    });\n  console.log(sender);\n}\nif (state.chainId !== undefined && state.chainId !== 11155111) {\n  return <p>Switch to Ethereum Sepolia</p>;\n}\nconsole.log(NFTManagerABI);\nconst nftIface = new ethers.utils.Interface(JSON.parse(NFTManagerABI.body).abi);\nconsole.log(\"hehe\");\nconst nftContract = new ethers.Contract(\n  nftAddress,\n  JSON.parse(NFTManagerABI.body).abi,\n  Ethers.provider().getSigner()\n);\nconst walleyIface = new ethers.utils.Interface(JSON.parse(WalleyABI.body).abi);\nconst walleyContract = new ethers.Contract(\n  walleyAddress,\n  JSON.parse(WalleyABI.body).abi,\n  Ethers.provider().getSigner()\n);\n\nconst mint = () => {\n  walleyContract\n    .mint()\n    .send({ from: sender })\n    .then((tokenId) => console.log(tokenId))\n    .catch((err) => console.log(err));\n};\n\nconst initTransaction = () => {\n  walleyContract.mint({ from: sender }).on(\"receipt\", function (receipt) {\n    console.log(\"minted\");\n    // List the NFT\n    const tokenId = receipt.events.NFTMinted.returnValues[0];\n    nftContract\n      .initTransaction(\n        walleyAddress,\n        tokenId,\n        ethers.utils.toWei(\"0.1\", \"ether\"),\n        \"0xF0DB85E02DBC2d2c9b86dFC245cd9C2CAF9a901B\",\n        \"Test\",\n        { from: accounts[0], value: \"0.1 ether\" }\n      )\n      .on(\"receipt\", function () {\n        console.log(\"listed\");\n      });\n  });\n};\n\nconst createTransfer = () => {\n  if (contract) {\n    console.log(\"hhh\");\n    contract\n      .createTransfer(1000, \"0xF0DB85E02DBC2d2c9b86dFC245cd9C2CAF9a901B\")\n      .then(() => {\n        console.log(\"hello\");\n      })\n      .catch((err) => console.log(err));\n  }\n};\nconst getTransfers = () => {\n  if (state.transfers.length === 0) {\n    console.log(\"hhh\");\n    contract\n      .getTransfers()\n      .then((transfers) => {\n        const tmp = [...state.transfers];\n        transfers.map((transfer) => {\n          console.log(transfer);\n\n          tmp.push({\n            id: Big(transfer[0]).toFixed(0),\n            amount: Big(transfer[1]).div(Big(10).pow(18)).toFixed(20),\n            to: transfer[2],\n            sent: transfer[3],\n            approver: transfer[4],\n          });\n        });\n        State.update({ transfers: tmp });\n        console.log(transfers);\n      })\n      .then(() => {\n        console.log(state.transfers);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n};\nconst approveTransfer = (id) => {\n  console.log(id);\n  contract.approveTransfer(id).send({ from: sender });\n};\nreturn (\n  <>\n    <p>{state.chainId}</p>\n    <p>{state.balance}</p>\n    <button onClick={mint}>Mint</button>\n    <button onClick={initTransaction}>init</button>\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/relayer.pagodaplatform.near/widget/Onboarding.Starter-fork", "fact_widget_deployments_id": "060a74a1cf717b63a8049066e0f6c2d1", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 181}