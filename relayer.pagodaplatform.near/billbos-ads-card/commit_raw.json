{"tx_hash": "38UvCLiiQVX1dzJTMdJa1W44QKB6FmR15Cb3hbtjAfMr", "action_id_social": "D1V5AyTvXgYbAiF9Ltx9v2ZQzmrawio73qWDZoX64Kq5-0-widget", "block_id": 108258050, "block_timestamp": "2023-12-18T14:51:05.242Z", "signer_id": "relayer.pagodaplatform.near", "widget_name": "billbos-ads-card", "source_code": "const isShowAction = props.isShowAction;\nconst adsId = props.adsId;\nconst adsContent = props.adsContent;\nconst adsStakedBalance = props.adsStakedBalance;\nconst adsViewed = props.adsViewed;\nconst chainId = props.chainId;\nconst coreContractAddress = props.coreContractAddress;\n\nconst chainName = () => {\n  if (chainId == \"25925\") {\n    return \"Bitkub Chain\";\n  }\n  if (chainId == \"35011\") {\n    return \"J2O Chain\";\n  }\n  return \"Network Error\";\n};\n\nconst BillBOSCoreABI = fetch(\n  \"https://gist.githubusercontent.com/jimmy-ez/0344bb9cce14ced6c6e7f89d7d1654ce/raw/e7dd9962a90819f71de155b1f68f276eed07790a/BillBOSCoreABIV3.json\"\n);\nif (!BillBOSCoreABI.ok) {\n  return \"Loading\";\n}\nconst IBillBOSCore = new ethers.utils.Interface(BillBOSCoreABI.body);\n\nState.init({\n  isOpenStake: false,\n});\n\nconst handleUnstake = () => {\n  State.update({\n    isOpenLoadingModal: true,\n  });\n  const billbosProvider = new ethers.Contract(\n    coreContractAddress,\n    IBillBOSCore,\n    Ethers.provider().getSigner()\n  );\n  billbosProvider\n    .unboostAll(adsId)\n    .then((res) => {\n      console.log(res);\n    })\n    .catch((error) => {\n      console.log(error);\n    });\n};\n\nconst content = (\n  <div class=\"w-full border rounded-xl pb-4 relative bg-white\">\n    <img\n      style={{\n        height: \"126px\",\n      }}\n      class=\"w-full rounded-t-xl\"\n      src={`https://ipfs.near.social/ipfs/${\n        adsContent?.imageCID ??\n        \"bafkreihtf7uoqlzugb347zlo24s5l5zdgj7kbdbltepgekutnnv43zgfze\"\n      }`}\n      alt=\"uploaded\"\n    />\n    <div class=\"w-full flex flex-col justify-center items-center text-center px-8\">\n      <p class=\"mt-4 text-xl font-semibold\">{adsContent?.name ?? \"\"}</p>\n      <p class=\"mt-1 font-light text-gray-400\">\n        {adsContent?.newTabLink ?? \"\"}\n      </p>\n      <div class=\"mt-8 grid grid-cols-5\">\n        <div class=\"flex flex-col justify-center col-span-2\">\n          <p class=\"font-semibold\">{`${\n            ethers.utils.formatEther(adsStakedBalance) ?? \"\"\n          } USDT`}</p>\n          <p class=\"text-gray-400 text-sm\">{\"Staked\"}</p>\n        </div>\n        <div class=\"flex justify-center\">\n          <div class=\"h-full border-l-2\"></div>\n        </div>\n        <div class=\"flex flex-col justify-center col-span-2\">\n          <p class=\"font-semibold\">{adsViewed}</p>\n          <p class=\"text-gray-400 text-sm\">{\"Viewed\"}</p>\n        </div>\n      </div>\n      {isShowAction && (\n        <div class=\"w-full grid grid-cols-2 gap-2 mt-12\">\n          <button\n            onClick={() => {\n              State.update({ isOpenStake: true });\n            }}\n            class=\"w-full py-2 text-white font-semibold brand-green rounded-lg\"\n          >\n            Stake Now\n          </button>\n          <button\n            onClick={handleUnstake}\n            class=\"w-full py-2 green-text font-semibold border-1 border-green-300 rounded-lg\"\n          >\n            Unstake\n          </button>\n        </div>\n      )}\n    </div>\n    <div\n      style={{ width: \"135px\", height: \"44px\" }}\n      class={`\n      absolute \n      top-0 \n      right-0 \n      bg-gray-900 \n      text-white \n      flex \n      justify-center \n      items-center\n      rounded-tr-xl\n      rounded-bl-xl\n      `}\n    >\n      <p>{chainName()}</p>\n    </div>\n  </div>\n);\n\nreturn (\n  <>\n    <Widget\n      src=\"chayanonc-ph.near/widget/billbos-css\"\n      props={{\n        children: content,\n      }}\n    />\n    <Widget\n      src=\"jimmy-ez.near/widget/billbos-stake-modal\"\n      props={{\n        isOpenStake: state.isOpenStake,\n        onCloseStake: () => {\n          State.update({ isOpenStake: false });\n        },\n        coreContractAddress: coreContractAddress,\n        adsId: adsId,\n      }}\n    />\n  </>\n);\n", "metadata": {"fork_of": "jimmy-ez.near/widget/billbos-ads-card@108253335"}, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/relayer.pagodaplatform.near/widget/billbos-ads-card", "fact_widget_deployments_id": "92a8f06e63e496c06cd1cb61c7cc3c00", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 13}