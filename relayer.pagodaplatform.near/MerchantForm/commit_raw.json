{"tx_hash": "FYnwriqaePrGvSwJSmiqT9TQBwRtteexwQua7nYYeYaz", "action_id_social": "HHWPMBDMzbfGjm3ptz6NQDGUfmZZ8QsrbrwYjEdUAsa4-0-widget", "block_id": 97005500, "block_timestamp": "2023-07-21T16:55:17.701Z", "signer_id": "relayer.pagodaplatform.near", "widget_name": "MerchantForm", "source_code": null, "metadata": null, "branch": {"draft": {"": "// STYLED\nconst APP_TITLE = \"SubScript.io\";\nconst Container = styled.div`\n  min-height: 100vh;\n  background-color: #1c1f2a;\n`;\nconst Heading = styled.h1`\n  text-align: center;\n  color: #8f73ff;\n  font-weight: 700;\n  font-size: 24pt;\n  letter-spacing: 3pt;\n  text-transform: uppercase;\n  display: flex;\n  justify-content: center;\n  padding-top: 10px\n`;\nconst FormContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  max-width: 600px;\n  margin: 0 auto;\n`;\nconst FormGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 1rem;\n`;\nconst Label = styled.label`\n  color: #e3e6ec;\n  margin-bottom: 0.5rem;\n  font-weight: bold;\n  min-width: 100px;\n`;\nconst Input = styled.input`\n  height: 2rem;\n  width: 15rem;\n  margin: 0 auto;\n  border: ${(props) =>\n    props.active == \"blank\"\n      ? \"none\"\n      : props.active == \"valid\"\n      ? \"1px solid #00ff00\"\n      : \"1px solid #ff0000\"};\n`;\nconst SubmitButton = styled.button`\n  background-color: #8f73ff;\n  color: white;\n  padding: 12px 30px;\n  border: none;\n  border-radius: 10px;\n  font-size: 14px;\n  cursor: pointer;\n  margin-bottom:50px;\n`;\nconst Footer = styled.div`\n  position: relative;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 20px;\n`;\nconst HorizontalLine = styled.hr`\n  width: 100%;\n  border: none;\n  border-top: 1px solid #e3e6ec;\n  margin-bottom: 10px;\n  margin-top: 50px;\n`;\nconst FooterText = styled.p`\n  font-size: 14px;\n  color: #e3e6ec;\n`;\n\n// CHECK FOR SEPOLIA NETWORK\nif (\n  state.chainId === undefined &&\n  ethers !== undefined &&\n  Ethers.send(\"eth_requestAccounts\", [])[0]\n) {\n  Ethers.provider()\n    .getNetwork()\n    .then((chainIdData) => {\n      if (chainIdData?.chainId) {\n        State.update({ chainId: chainIdData.chainId });\n      }\n    });\n}\nif (state.chainId !== undefined && state.chainId !== 11155111) {\n  return <p>Switch to Sepolia</p>;\n}\n\n// CHECK FOR WALLET CONNECTION\nif (state.sender === undefined) {\n  const accounts = Ethers.send(\"eth_requestAccounts\", []);\n  if (accounts.length) {\n    State.update({ sender: accounts[0] });\n\n    console.log(\"set sender\", accounts[0]);\n  }\n  return (\n    <Web3Connect\n      className=\"LidoStakeFormSubmitContainer\"\n      connectLabel=\"Connect with Web3\"\n    />\n  );\n}\n\n// FETCH SENDER BALANCE\nif (state.balance === undefined && state.sender) {\n  Ethers.provider()\n    .getBalance(state.sender)\n    .then((balance) => {\n      State.update({ balance: Big(balance).div(Big(10).pow(18)).toFixed(2) });\n    });\n}\n\n// CONTRACT INSTANCE\nconst contractAddress = \"0x1C0035EdBe28270806BE380f6d43A17eA2fE876b\";\n/*const factoryABI = fetch(\n  \"https://github.com/knwtechs/NFT-subscriptions-contracts\"\n);\nif (!factoryABI.ok) {\n  return \"Loading ABI...\";\n}*/\n/*const subscriptionsFactoryContract = new ethers.Contract(\n  contractAddress,\n  JSON.parse(\n    '[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"collectionAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"paymentAmounts\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"tiersSupply\",\"type\":\"int256[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paymentFrequency\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"merchant\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"baseUri\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"}],\"name\":\"NewCollectionCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"contracts\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\",\"constant\":true},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"paymentAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"int256[]\",\"name\":\"tiersSupply\",\"type\":\"int256[]\"},{\"internalType\":\"uint256\",\"name\":\"paymentFrequency\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"merchant\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"baseUri\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"}],\"name\":\"createCollection\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]'\n  ),\n  Ethers.provider().getSigner()\n);*/\n\n// INIT STATE\nState.init({\n  product_name,\n  timeframe,\n  uri,\n  startTimestamp,\n  price: 0,\n  usdPrice: 0,\n  supply: -1,\n});\n\n// PRODUCT NAME\nconst onNameChange = ({ target }) => {\n  State.update({ product_name: target.value });\n};\nconst validateName = () => {\n  return state.product_name.length > 0;\n};\n\n// TIMEFRAME\nconst onTimeframeChange = ({ target }) => {\n  State.update({ timeframe: target.value });\n};\nconst validateTimeframe = () => {\n  return state.timeframe >= 1;\n};\n\n// URI\nconst onUriChange = ({ target }) => {\n  State.update({ uri: target.value });\n};\nconst validateUri = () => {\n  return state.uri.length > 0;\n};\n\n// START TIMESTAMP\nconst onStartTimestampChange = ({ target }) => {\n  State.update({ startTimestamp: target.value });\n};\nconst validateStartTimestamp = () => {\n  const timestamp = new Date(state.startTimestamp);\n  return timestamp >= Date.now();\n};\n\n// PRICE\nconst onPriceChange = ({ target }) => {\n  let ethusd = fetch(\n    \"https://api.coingecko.com/api/v3/simple/price?ids=ethereum&vs_currencies=usd\"\n  ).body;\n  console.log(ethusd);\n  //if (ethusd.ok) State.update({ usdPrice: target.value * ethusd });\n  State.update({ price: target.value });\n};\nconst validatePrice = () => {\n  return state.price > 0;\n};\n\n// SUPPLY\nconst onSupplyChange = ({ target }) => {\n  State.update({ supply: target.value });\n};\nconst validateSupply = () => {\n  return state.supply >= -1;\n};\n\n// CONTRACT INTERACTION\nconst createCollection = async () => {\n  if (\n    state.price &&\n    state.supplies &&\n    state.paymentFrequency &&\n    state.baseUri &&\n    state.startTimestamp &&\n    state.sender\n  ) {\n    subscriptionsFactoryContract\n      .createCollection(\n        state.prices,\n        state.supplies,\n        state.paymentFrequency,\n        Ethers.provider().getSigner().getAddress(),\n        state.baseUri,\n        state.startTimestamp\n      )\n      .then((transactionHash) => {\n        console.log(\"transactionHash is \" + transactionHash);\n      })\n      .catch(function (err) {\n        console.log(err);\n      });\n  }\n};\n\nconst css = fetch(\n  \"https://cdn.jsdelivr.net/npm/bootstrap@4.4.1/dist/css/bootstrap.min.css\"\n).body;\nif (!css) return \"\";\n\nif (!state.theme) {\n  State.update({\n    theme: styled.div`\n    ${css}\n`,\n  });\n}\nconst Theme = state.theme;\n\nreturn (\n  <Theme>\n    <Container>\n      <div\n        class=\"row d-flex justify-content-center w-100\"\n        onSubmit={handleSubmit}\n      >\n        <Heading class=\"my-5\">{APP_TITLE}</Heading>\n      </div>\n      // PRODUCT NAME\n      <div class=\"row d-flex justify-content-center\">\n        <div class=\"col-10 col-md-6 col-lg-4\">\n          <div class=\"form-group\">\n            <label for=\"product_name\" class=\"text-white\">\n              Product Name\n            </label>\n            <input\n              type=\"text\"\n              value={state.product_name}\n              onChange={onNameChange}\n              class=\"form-control\"\n              id=\"product_name\"\n              placeholder=\"Netflix\"\n              active={\n                !state.product_name\n                  ? \"blank\"\n                  : validateName()\n                  ? \"valid\"\n                  : \"invalid\"\n              }\n            />\n          </div>\n        </div>\n      </div>\n      // PRODUCT PRICE\n      <div class=\"row d-flex justify-content-center\">\n        <div class=\"col-10 col-md-6 col-lg-4\">\n          <div class=\"form-group\">\n            <label for=\"price\" class=\"text-white\">\n              Recurrent Price (ETH)\n            </label>\n\n            <div class=\"input-group mb-3\">\n              <div class=\"input-group-prepend\">\n                <span class=\"input-group-text\" id=\"basic-addon1\">\n                  \u039e\n                </span>\n              </div>\n              <input\n                type=\"number\"\n                class=\"form-control\"\n                value={state.price}\n                onChange={onPriceChange}\n                id=\"price\"\n                placeholder=\"0.011\"\n                active={\n                  !state.price ? \"blank\" : validatePrice() ? \"valid\" : \"invalid\"\n                }\n              />\n              <div class=\"input-group-append\">\n                <span class=\"input-group-text\">{state.usdPrice} $</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      // TIMEFRAME\n      <div class=\"row d-flex justify-content-center\">\n        <div class=\"col-10 col-md-6 col-lg-4\">\n          <div class=\"form-group\">\n            <label for=\"timeframe\" class=\"text-white\">\n              Timeframe (days)\n            </label>\n            <input\n              type=\"number\"\n              class=\"form-control\"\n              value={state.timeframe}\n              onChange={onTimeframeChange}\n              id=\"timeframe\"\n              placeholder=\"30\"\n              active={\n                !state.price\n                  ? \"blank\"\n                  : validateTimeframe()\n                  ? \"valid\"\n                  : \"invalid\"\n              }\n            />\n          </div>\n        </div>\n      </div>\n      // URI\n      <div class=\"row d-flex justify-content-center\">\n        <div class=\"col-10 col-md-6 col-lg-4\">\n          <div class=\"form-group\">\n            <label for=\"uri\" class=\"text-white\">\n              Metadata URI\n            </label>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              value={state.uri}\n              onChange={onUriChange}\n              id=\"uri\"\n              placeholder=\"https://cloudflare-ipfs.com/ipfs/QmXoypizjW3WknFiJnKLwHCnL72vedxjQkDDP1mXWo6uco/w\"\n              active={\n                !state.uri ? \"blank\" : validateUri() ? \"valid\" : \"invalid\"\n              }\n            />\n          </div>\n        </div>\n      </div>\n      // START TIMESTAMP\n      <div class=\"row d-flex justify-content-center\">\n        <div class=\"col-10 col-md-6 col-lg-4\">\n          <div class=\"form-group\">\n            <label for=\"startTimestamp\" class=\"text-white\">\n              Mint starts at\n            </label>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              value={state.startTimestamp}\n              onChange={onStartTimestampChange}\n              id=\"startTimestamp\"\n              active={\n                !state.uri\n                  ? \"blank\"\n                  : validateStartTimestamp()\n                  ? \"valid\"\n                  : \"invalid\"\n              }\n            />\n          </div>\n        </div>\n      </div>\n      <div class=\"row d-flex justify-content-center\">\n        <div class=\"col-10 text-center\">\n          <button\n            class=\"btn btn-primary\"\n            style={{ fontWeight: 500 }}\n            type=\"submit\"\n            onClick={createCollection}\n          >\n            Create Product\n          </button>\n        </div>\n      </div>\n      <Footer>\n        <HorizontalLine />\n        <FooterText>Made with &#x2665; by KNW Technologies FZCO</FooterText>\n      </Footer>\n    </Container>\n  </Theme>\n);\n"}}, "widget_modules_used": null, "widget_url": "https://near.social/#/relayer.pagodaplatform.near/widget/MerchantForm", "fact_widget_deployments_id": "02fd07bcb336254b8554806d094514bb", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 1}