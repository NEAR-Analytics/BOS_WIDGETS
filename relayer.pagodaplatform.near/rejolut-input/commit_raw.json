{"tx_hash": "DpLLiMuEmhqHsw7v9Rq4L76Stnggiht5E3gkLejTyaar", "action_id_social": "8QHPoKoUYHPw6iPUUjtMccgBebrpZFqYYZg5H5gXUVbD-0-widget", "block_id": 94824715, "block_timestamp": "2023-06-23T06:36:34.319Z", "signer_id": "relayer.pagodaplatform.near", "widget_name": "rejolut-input", "source_code": "const themeColors = {\n  contained: {\n    background: \"#ffffff\",\n    text: \"#666666\",\n    border: \"#969696\",\n    hoverBackground: \"transparent\",\n    hoverText: \"#1A1A1A\",\n    hoverBorder: \"#503BC4\",\n  },\n  outlined: {\n    background: \"#ffffff\",\n    text: \"#666666\",\n    border: \"#969696\",\n    hoverBackground: \"transparent\",\n    hoverText: \"#1A1A1A\",\n    hoverBorder: \"#503BC4\",\n  },\n  text: {\n    background: \"#ffffff\",\n    text: \"#666666\",\n    border: \"none\",\n    hoverBackground: \"transparent\",\n    hoverText: \"#1A1A1A\",\n    hoverBorder: \"#503BC4\",\n  },\n  error: {\n    background: \"#ffffff\",\n    text: \"#1A1A1A\",\n    border: \"#D92D20\",\n    hoverBackground: \"transparent\",\n    hoverText: \"#1A1A1A\",\n    hoverBorder: \"#D92D20\",\n  },\n};\nconst variant = props.variant || \"contained\";\n\nconst Input = styled.input`\n    background: ${themeColors[variant].background};\n    color: ${themeColors[variant].text};\n    font-size: 1em;\n    padding: 0.25em 1em;\n    padding-left: ${(props) => (props.startIcon ? \"2.5rem\" : \"1em\")} ;\n    padding-right: ${(props) => (props.endIcon ? \"2.5rem\" : \"1em\")} ;\n    border: ${(props) =>\n      variant !== \"text\"\n        ? `2px solid ${themeColors[variant]?.border}`\n        : \"none\"};\n    border-radius: 10px;\n    transition: all 0.3s ease;\n    padding-right:30px\n    &::placeholder {\n      color: ${themeColors[variant].text};\n    }\n  \n    &:hover {\n      background-color:${themeColors[variant].hoverBackground};\n      color:${themeColors[variant].hoverText};\n      border: ${`2px solid ${themeColors[variant]?.hoverBorder}`}\n  }\n    &:focus {\n      outline: none;\n      box-shadow: 0 0 5px ${themeColors[variant]?.hoverBorder};\n    }\n  \n    &:disabled {\n      background-color: transparent;\n      color: #D2D2D2;\n      border: 2px solid #D2D2D2;\n      cursor: not-allowed;\n    }\n  \n    ${(props) =>\n      props.error &&\n      `\n      border-color: ${themeColors.error.border};\n      color: ${themeColors.error.text};\n    `}\n  `;\n\nconst Textarea = styled.textarea`\n    background: ${themeColors[variant].background};\n    color: ${themeColors[variant].text};\n    font-size: 1em;\n    padding: 0.25em 1em;\n    padding-left: ${(props) => (props.startIcon ? \"2.5rem\" : \"1em\")} ;\n    padding-right: ${(props) => (props.endIcon ? \"2.5rem\" : \"1em\")} ;\n    border: ${(props) =>\n      props.variant !== \"text\"\n        ? `2px solid ${themeColors[variant]?.border}`\n        : \"none\"};\n    border-radius: 10px;\n    transition: all 0.3s ease;\n    padding-right:30px\n    &::placeholder {\n      color: ${themeColors[variant].text};\n    }\n  \n    &:hover {\n      background-color:${themeColors[variant].hoverBackground};\n      color:${themeColors[variant].hoverText};\n      border: ${`2px solid ${themeColors[variant]?.hoverBorder}`}\n  }\n    &:focus {\n      outline: none;\n      box-shadow: 0 0 5px ${themeColors[variant]?.hoverBorder};\n    }\n  \n    &:disabled {\n      background-color: transparent;\n      color: #D2D2D2;\n      border: 2px solid #D2D2D2;\n      cursor: not-allowed;\n    }\n  \n    ${(props) =>\n      props.error &&\n      `\n      border-color: ${themeColors.error.border};\n      color: ${themeColors.error.text};\n    `}\n`;\n\nconst InputContainer = styled.div`\n  position: relative;\n  display: inline-block;\n`;\n\nconst StartIcon = styled.span`\n  position: absolute;\n  top: 50%;\n  left: 1rem;\n  transform: translateY(-50%);\n`;\n\nconst EndIcon = styled.span`\n  position: absolute;\n  top: 50%;\n  right: 1rem;\n  transform: translateY(-50%);\n  cursor: pointer;\n`;\n\nconst Tag = props.multiline ? Textarea : Input;\n\nreturn (\n  <div style={{ padding: \"5px 0px\" }}>\n    <div style={{ padding: \"5px 0px\" }}>{props.label}</div>\n    <InputContainer>\n      {props.startIcon && <StartIcon>{props.startIcon}</StartIcon>}\n      <Tag\n        type={props.type || \"text\"}\n        placeholder={props.placeholder}\n        value={props.value}\n        onChange={props.onChange}\n        startIcon={props.startIcon}\n        endIcon={props.endIcon}\n        variant={props.variant}\n        rows={props.rows || 5}\n        style={props.style}\n      />\n      {props.endIcon && (\n        <EndIcon onClick={props.rightIconClick}>{props.endIcon}</EndIcon>\n      )}\n    </InputContainer>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/relayer.pagodaplatform.near/widget/rejolut-input", "fact_widget_deployments_id": "07a98fd592223346049f7f5598e2665d", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}