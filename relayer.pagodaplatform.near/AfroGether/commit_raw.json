{"tx_hash": "H24zKmKNuw7V69ZJe3bEKPwcesAiaoCDCM1GHyMwwMfp", "action_id_social": "6berhmMd8xzQ636wHKovuHUJTzebiU5PDxjJi2iiUCSM-0-widget", "block_id": 102758280, "block_timestamp": "2023-10-06T15:27:20.371Z", "signer_id": "relayer.pagodaplatform.near", "widget_name": "AfroGether", "source_code": null, "metadata": null, "branch": {"draft": {"": "State.init({\n  items: [\n    {\n      loading: false,\n      error: null,\n      transaction: null,\n      groupPurchaseCount: 2,\n      groupPurchaseThreshold: 3,\n      currentUserPurchased: true,\n    },\n    {\n      loading: false,\n      error: null,\n      transaction: null,\n      groupPurchaseCount: 2,\n      groupPurchaseThreshold: 4,\n      currentUserPurchased: false,\n    },\n  ],\n});\n\nconst handlePurchase = (itemType) => {\n  if (itemType === \"item1\") {\n    State.update({ [item1.currentUserPurchased]: true });\n  } else if (itemType === \"item2\") {\n    State.update({ [item2.currentUserPurchased]: true });\n  }\n};\n\nconst renderPurchaseActions = (item) => (\n  <>\n    {item.currentUserPurchased ? (\n      <>\n        <p>\n          You are part of this group purchase. Would you like to leave or find\n          more users to release the tickets?\n        </p>\n\n        {item.groupPurchaseCount < item.groupPurchaseThreshold && (\n          <>\n            <p>\n              {item.groupPurchaseThreshold - item.groupPurchaseCount} more users\n              required to purchase tickets before tickets are released\n            </p>\n            <button\n              className=\"btn btn-danger m-3\"\n              onClick={() => handlePurchase(\"item1\")}\n              disabled={\n                item.loading ||\n                item.groupPurchaseCount === item.groupPurchaseThreshold\n              }\n            >\n              Leave Group Order\n            </button>\n          </>\n        )}\n      </>\n    ) : (\n      <>\n        <button\n          className=\"btn btn-primary m-3\"\n          onClick={() => handlePurchase(\"item1\")}\n          disabled={\n            state.loading ||\n            state.groupPurchaseCount === state.groupPurchaseThreshold\n          }\n        >\n          Buy together with your friends - ($20)\n        </button>\n        <button\n          className=\"btn btn-secondary m-3\"\n          onClick={() => handlePurchase(\"item2\")}\n          disabled={state.loading}\n        >\n          Purchase individually at full price - ($30)\n        </button>\n      </>\n    )}\n  </>\n);\n\nreturn (\n  <div className=\"Afrogether container card shadow my-5 p-5\">\n    <h3 className=\"text-center mb-3\">AfroGether</h3>\n    <p className=\"text-center mb-3\">Buy things together with friends.</p>\n    <div className=\"container\">\n      {state.items.map((item, index) => (\n        <>\n          <div className=\"card shadow-sm mb-3\">\n            <div className=\"card-body\">\n              <p>\n                Item {index + 1}: {item.groupPurchaseCount} out of{\" \"}\n                {item.groupPurchaseThreshold} users have purchased tickets for\n                the event.\n              </p>\n\n              {Array.from({ length: item.groupPurchaseCount }).map(\n                (_, index) => (\n                  <img\n                    key={index}\n                    className=\"img-thumbnail\"\n                    style={{ width: \"50px\", height: \"50px\" }}\n                    src={`https://source.unsplash.com/random?sig=${index}`}\n                    alt=\"user\"\n                  />\n                )\n              )}\n              {renderPurchaseActions(item)}\n            </div>\n          </div>\n        </>\n      ))}\n    </div>\n  </div>\n);\n"}}, "widget_modules_used": null, "widget_url": "https://near.social/#/relayer.pagodaplatform.near/widget/AfroGether", "fact_widget_deployments_id": "e84cfb29d3cea3cf9fbc263f300beeeb", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 1}