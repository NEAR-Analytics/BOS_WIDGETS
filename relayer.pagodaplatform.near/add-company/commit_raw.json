{"tx_hash": "NP3phQkjihj418eoBsUL7GSRgKKhxAUW6VTRRZ4cGEq", "action_id_social": "9aoaMgsqcnkLpBgb7rDTMsho1qRF46m5w4nqTpE8cY2B-0-widget", "block_id": 95008460, "block_timestamp": "2023-06-25T16:03:19.994Z", "signer_id": "relayer.pagodaplatform.near", "widget_name": "add-company", "source_code": "const interface = props.interface ? props.interface : null;\nconsole.log(\"----->\", interface);\nconst blockchainInfo = props.blockchainInfo ? props.blockchainInfo : {};\nconst updatePage = props.updatePage\n  ? props.updatePage\n  : (page) => {\n      console.log(\"no update page\", page);\n    };\n\nState.init({\n  domain: \"\",\n  loading: false,\n});\n\nconst CancelButton = styled.button`\n  padding: 8px 16px;\n  background-color: #fff;\n  color: #333;\n  border: 1px solid #333;\n  border-radius: 4px;\n  font-size: 14px;\n  cursor: pointer;\n  \n  &:hover {\n    background-color: #eee;\n  }\n`;\n\nconst addCompany = (domain) => {\n  if (!interface) {\n    console.log(\"Error: You do not have contract interfaces!\");\n    return false;\n  }\n  console.log(\"pass1\");\n  if (!domain) {\n    <Widget\n      src=\"s-farshad-k.near/widget/WarningBoxComponent\"\n      props={{ children: \"Amount is missing\" }}\n    />;\n  }\n  console.log(\"pass2\");\n\n  const domainBytes = Buffer.from(domain, \"utf8\");\n  const encodedData = interface.encodeFunctionData(\"add_Company\", [\n    domainBytes,\n  ]);\n  console.log(\"pass3\", interface, blockchainInfo);\n  console.log(\"calling:\", Ethers.provider());\n  const provider = new ethers.providers.JsonRpcProvider(\n    \"https://rpc-mumbai.maticvigil.com/v1/your-maticvigil-api-key\"\n  );\n  const signer = new provider.getSigner();\n  console.log(\n    \"going for contract:\",\n    blockchainInfo.contractAddrecass,\n    blockchainInfo.contractABI,\n    signer\n  );\n\n  const contract = new ethers.Contract(\n    blockchainInfo.contractAddress,\n    blockchainInfo.contractABI,\n    Ethers.provider().getSigner() // think about Ethers.provider().getSigner()\n  );\n  const result = contract.add_Company(encodedData);\n  console.log(result);\n  return result;\n};\n\nconst getCurrentCompany = (domain) => {\n  State.update({ loading: true });\n  if (!interface) {\n    console.log(\"Error: You do not have contract interfaces!\");\n    return false;\n  }\n  if (!domain) {\n    <Widget\n      src=\"s-farshad-k.near/widget/WarningBoxComponent\"\n      props={{ children: \"Amount is missing\" }}\n    />;\n  }\n  const domainBytes = Buffer.from(domain, \"utf8\");\n\n  const encodedData = interface.encodeFunctionData(\"add_Company\", [\n    domainBytes,\n  ]);\n  console.log(\n    \"going for contract:\",\n    blockchainInfo.contractAddress,\n    blockchainInfo.contractABI,\n    Ethers.provider().getSigner()\n  );\n\n  const contract = new ethers.Contract(\n    blockchainInfo.contractAddress,\n    blockchainInfo.contractABI,\n    Ethers.provider().getSigner() // think about Ethers.provider().getSigner()\n  );\n  const result = contract.add_Company(encodedData);\n  console.log(result);\n  return result;\n};\nif (state.loading) {\n  return <Widget src=\"s-farshad-k.near/widget/Loading\" props={{}} />;\n}\nreturn (\n  <div>\n    <Widget\n      src=\"s-farshad-k.near/widget/hero-header\"\n      props={{\n        title: \"Please tell us your website address \",\n        subtitle: \"We will ask you to verify the ownership of this domain! \",\n      }}\n    />\n    Company website domain:\n    <input\n      value={state.domain}\n      onChange={(e) => {\n        State.update({ domain: e.target.value });\n      }}\n      placeholder=\"e.g. google.com\"\n    />\n    <button\n      onClick={() => {\n        try {\n          const a = addCompany(state.domain);\n          console.log(\"a\", a);\n          a.then((res) => {\n            State.update({ loading: false });\n            console.log(\"request completed:\", res);\n          }).catch((err) => {\n            console.log(\"error:\", err);\n            State.update({ loading: false });\n          });\n        } catch (e) {\n          console.log(\"something wrong!\", e);\n        }\n      }}\n    >\n      Add Company\n    </button>\n    <CancelButton\n      onClick={() => {\n        updatePage(\"home\");\n      }}\n    >\n      Go Back\n    </CancelButton>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/relayer.pagodaplatform.near/widget/add-company", "fact_widget_deployments_id": "579a985db4f6dca5ca92f40e46e95a22", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 29}