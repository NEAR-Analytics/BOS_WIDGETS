{"tx_hash": "81aij8HpXSZEKrBaK3VUyfyQG3riBf6d7qY58jsU5Wa1", "action_id_social": "WmiNzebnC514S5eCjU7czdRW2g3VumDy7wvaqfXj2oR-0-widget", "block_id": 94716900, "block_timestamp": "2023-06-21T20:58:22.073Z", "signer_id": "relayer.pagodaplatform.near", "widget_name": "gamma-zkevm-vault", "source_code": null, "metadata": null, "branch": {"draft": {"": "const addresses = {\n  Chef: \"0x1e2d8f84605d32a2cbf302e30bfd2387badf35dd\",\n  DAI: \"0xc5015b9d9161dca7e18e32f6f25c4ad850731fd4\",\n  MATIC: \"0xa2036f0538221a77a3937f1379699f44945018d0\",\n  \"N MATIC-USDC\": \"0x19f4ebc0a1744b93a355c2320899276ae7f79ee5\",\n  \"N USDC-WBTC\": \"0x9783c45564232c0aff8dc550a9c247c42e8c8b98\",\n  \"N WETH-MATIC\": \"0x2f39293c9ed046822c014143fb18d5ae0479be93\",\n  \"N WETH-USDC\": \"0x04c6b11e1ffe1f1032bd62adb343c9d07767489c\",\n  \"N WETH-WBTC\": \"0x1cc4ee0cb063e9db36e51f5d67218ff1f8dbfa0f\",\n  USDC: \"0xa8ce8aee21bc2a48a5ef670afcc9274c7bbbc035\",\n  \"USDC-DAI\": \"0xafad6e114cfbc8a19e91b8d7d04da740a7698595\",\n  USDT: \"0x1e4a5963abfd975d8c9021ce480b42188849d41d\",\n  \"USDT-DAI\": \"0xcd36b8a47a072e3e05e894b6ec89d294bec3d3ed\",\n  \"USDT-USDC\": \"0x145d55ae4848f9782efcac785a655e3e5dce1bcd\",\n  \"W MATIC-USDC\": \"0x8462e4173d63f8769f94bf7ae5bc1ac7ab5d96e3\",\n  \"W USDC-WBTC\": \"0x83de646a7125ac04950fea7e322481d4be66c71d\",\n  \"W WETH-MATIC\": \"0x5ada298913d53aa823824de69b4a6e790aed9327\",\n  \"W WETH-USDC\": \"0xfb3a24c0f289e695ceb87b32fc18a2b8bd896167\",\n  \"W WETH-WBTC\": \"0x64e78e990b2a45fad8b64b43e62a67d69a156042\",\n  WBTC: \"0xea034fb02eb1808c2cc3adbc15f447b93cbe08e1\",\n  WETH: \"0x4f9a0e7fd2bf6067db6994cf12e4495df938e6e9\",\n  stMATIC: \"0x83b874c1e09d316059d929da402dcb1a98e92082\",\n  \"stMATIC-MATIC\": \"0x9616052273a598bc04bd1ad7f7a753157c24f77e\",\n};\n\nconst defaultPair = {\n  id: \"W WETH-USDC\",\n  token0: \"WETH\",\n  token1: \"USDC\",\n};\n\nconst Wrapper = styled.div`\n    background: #1d1e1f;\n    display: flex;\n    flex-direction: column;\n    max-width: 320px;\n    font-family: 'Inter';\n    color: #fff;\n    border-radius: 8px;\n    overflow: hidden;\n`;\nconst SubWrapper = styled.div`\n    display: flex;\n    padding: 20px;\n    flex-direction: column;\n    justify-content: center;\n    gap: 32px;\n`;\nconst InputWrapper = styled.div`\n    display: flex;\n    position: relative;\n    flex-direction: column;\n    gap: 4px;\n    span {\n        font-size: 12px;\n    }\n`;\nconst Input = styled.input`\n    border: none;\n    background: #333;\n    outline: none;\n    color: #fff;\n    padding: 8px 12px;\n    border-radius: 4px;\n    font-size: 14px;\n`;\nconst Button = styled.button`\n    background: #8247E5;\n    border-radius: 4px;\n    border: none;\n    color: #fff;\n    padding: 8px 0;\n    font-weight: 600;\n    font-size: 14px;\n`;\n\nconst Tab = styled.div`\n    display: flex;\n    gap: 1px;\n`;\n\nconst TabItem = styled.div`\n    flex:1;\n    padding: 16px 24px;\n    background: #333;\n    font-size: 14px;\n    cursor: pointer;\n    &:hover {\n        background: #1d1e1f;\n    }\n`;\n\nconst MaxButton = styled.button`\n  position: absolute;\n  background: transparent;\n  border: none;\n  color: #fff;\n  padding: 8px;\n  font-size: 14px;\n  right: 0;\n  bottom: 28%;\n`;\nState.init({\n  isDeposit: true,\n  balances: [],\n  amount0: 0,\n  amount1: 0,\n});\n\nconst sender = Ethers.send(\"eth_requestAccounts\", [])[0];\nif (!sender) return <Web3Connect connectLabel=\"Connect with Web3\" />;\n\nconst updateBalance = (token) => {\n  const { address, symbol } = token;\n  const decimals = [\"USDC\", \"USDT\"].includes(symbol) ? 6 : 18;\n\n  if (symbol === \"WETH\") {\n    Ethers.provider()\n      .getBalance(sender)\n      .then((balanceBig) => {\n        const adjustedBalance = ethers.utils.formatEther(balanceBig);\n        State.update({\n          balances: {\n            ...state.balances,\n            [symbol]: Number(adjustedBalance).toFixed(4),\n          },\n        });\n      });\n  } else {\n    const erc20Abi = [\"function balanceOf(address) view returns (uint256)\"];\n    const tokenContract = new ethers.Contract(\n      address,\n      erc20Abi,\n      Ethers.provider()\n    );\n    tokenContract.balanceOf(sender).then((balanceBig) => {\n      const adjustedBalance = ethers.utils.formatUnits(balanceBig, decimals);\n      State.update({\n        balances: {\n          ...state.balances,\n          [symbol]: Number(Number(adjustedBalance).toFixed(4)),\n        },\n      });\n    });\n  }\n};\n\nconst { token0, token1 } = props.pair || defaultPair;\n\nif (sender)\n  [\n    { symbol: token0, address: addresses[token0] },\n    { symbol: token1, address: addresses[token1] },\n  ].map(updateBalance);\n\nconst { isDeposit, balances, amount0, amount1 } = state;\n\nconst changeMode = (isDeposit) => {\n  State.update({ isDeposit });\n};\n\nconst handleMax = (isToken0) => {\n  if (isToken0) State.update({ amount0: balances[token0] });\n  else State.update({ amount1: balances[token1] });\n};\n\nconst handleToken0Change = (e) => {\n  const amount = Number(e.target.value);\n  State.update({ amount0: amount });\n};\n\nconst handleToken1Change = (e) => {\n  const amount = Number(e.target.value);\n  State.update({ amount1: amount });\n};\n\nreturn (\n  <Wrapper>\n    <Tab>\n      <TabItem onClick={() => changeMode(true)}>Deposit</TabItem>\n      <TabItem onClick={() => changeMode(false)}>Withdraw</TabItem>\n    </Tab>\n    {isDeposit ? (\n      <SubWrapper>\n        <InputWrapper>\n          <span>Amount of {token0}</span>\n          <Input value={amount0} onChange={handleToken0Change} />\n          <MaxButton onClick={() => handleMax(true)}>Max</MaxButton>\n          <span>Balance: {balances[token0]}</span>\n        </InputWrapper>\n        <InputWrapper>\n          <span>Amount of {token1}</span>\n          <Input value={amount1} onChange={handleToken1Change} />\n          <MaxButton onClick={() => handleMax(false)}>Max</MaxButton>\n          <span>Balance: {balances[token1]}</span>\n        </InputWrapper>\n        <Button> Deposit </Button>\n      </SubWrapper>\n    ) : (\n      <SubWrapper>\n        <InputWrapper>\n          <span>\n            Amount of {token0}-{token1}\n          </span>\n          <Input />\n        </InputWrapper>\n        <Button> Withdraw </Button>\n      </SubWrapper>\n    )}\n  </Wrapper>\n);\n"}}, "widget_modules_used": null, "widget_url": "https://near.social/#/relayer.pagodaplatform.near/widget/gamma-zkevm-vault", "fact_widget_deployments_id": "c132e6ad04cc6c86a807896a3d59daec", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 31}