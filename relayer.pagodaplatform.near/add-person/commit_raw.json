{"tx_hash": "AirdGyxmWbMFRkp7USFLY99o2imMPuY8d2fzi64dKvVY", "action_id_social": "2K6UfMVRtqSXMTxXhLtxypt7hFQybVM72q4VQXkt3WAk-0-widget", "block_id": 94997779, "block_timestamp": "2023-06-25T12:37:12.700Z", "signer_id": "relayer.pagodaplatform.near", "widget_name": "add-person", "source_code": "const interface = props.interface ? props.interface : null;\nconst blockchainInfo = props.blockchainInfo ? props.blockchainInfo : {};\nconst updatePage = props.updatePage\n  ? props.updatePage\n  : (page) => {\n      console.log(\"no update page\", page);\n    };\n\nconsole.log(\"interface:\", interface);\nState.init({\n  domain: \"\",\n  employeeID: \"\",\n  loading: false,\n});\n\nconst addEmployee = (employeeID, domain) => {\n  State.update({\n    loading: true,\n  });\n  console.log(\"(employeeID, domain)\", employeeID, domain);\n  if (!interface) {\n    console.log(\"Error: You do not have contract interfaces!\");\n    return false;\n  }\n  if (!domain) {\n    <Widget\n      src=\"s-farshad-k.near/widget/WarningBoxComponent\"\n      props={{ children: \"Domain is missing\" }}\n    />;\n  }\n  if (!employeeID) {\n    <Widget\n      src=\"s-farshad-k.near/widget/WarningBoxComponent\"\n      props={{ children: \"EmployeeID is missing\" }}\n    />;\n  }\n\n  // const domainBytes = Buffer.from(domain, \"utf8\");\n  // const employeeIDBytes = Buffer.from(domain, \"utf8\");\n\n  const encodedData = interface.encodeFunctionData(\"add_Employee\", [\n    employeeID,\n    domain,\n  ]);\n  console.log(\n    \"going for contract:\",\n    blockchainInfo.contractAddress,\n    blockchainInfo.contractABI,\n    Ethers.provider().getSigner()\n  );\n\n  const contract = new ethers.Contract(\n    blockchainInfo.contractAddress,\n    blockchainInfo.contractABI,\n    Ethers.provider().getSigner() // think about Ethers.provider().getSigner()\n  );\n  console.log(\"Calling it!\");\n  const result = contract.add_Employee(...encodedData);\n  console.log(result);\n  return result;\n};\n\nif (state.loading) {\n  return <Widget src=\"s-farshad-k.near/widget/Loading\" props={{}} />;\n}\nreturn (\n  <div>\n    <Widget\n      src=\"s-farshad-k.near/widget/hero-header\"\n      props={{\n        title: \"Please add your employees \",\n        subtitle: \"We will ask you to verify the ownership of this domain! \",\n      }}\n    />\n    Add an employee to your company:\n    <input\n      value={state.domain}\n      onChange={(e) => {\n        State.update({ domain: e.target.value });\n      }}\n      placeholder=\"e.g. google.com\"\n    />\n    <input\n      value={state.employeeID}\n      onChange={(e) => {\n        State.update({ employeeID: e.target.value });\n      }}\n      placeholder=\"Public key of the employee e.g. 0x12Ec9880959e52b43381ed8458b7fce05AF4E74A\"\n    />\n    <button\n      onClick={() => {\n        addEmployee(state.employeeID, state.domain)\n          .then((res) => {\n            console.log(\"request completed:\", res);\n            State.update({ loading: false });\n          })\n          .catch((err) => {\n            console.log(\"error:\", err);\n            State.update({ loading: false });\n          });\n      }}\n    >\n      Add Employee\n    </button>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/relayer.pagodaplatform.near/widget/add-person", "fact_widget_deployments_id": "aecd0e215e0b3e927d34e75cf689ab28", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 6}