{"tx_hash": "3wNQWRSDeg6sXX6VRgsHoYujqLuwPHtC1ZiQEvbUSGVh", "action_id_social": "BfZfiXhTV7tb3Jee6j8bC8Unhexz457kb5DYExx9A311-0-widget", "block_id": 108252291, "block_timestamp": "2023-12-18T13:06:52.384Z", "signer_id": "relayer.pagodaplatform.near", "widget_name": "Donation.Project.Create", "source_code": null, "metadata": null, "branch": {"draft": {"": "/**\n * Require a project link\n */\nconst donationHubContractAccountId =\n  props.donationHubContractAccountId || \"donationhubv2.near\".split(\"/\", 1)[0];\n\n/* END_INCLUDE: \"core/lib/autocomplete\" */\n\nconst DRAFT_STATE_STORAGE_KEY = \"DRAFT_STATE\";\nconst parentId = props.parentId ?? null;\nconst postId = props.postId ?? null;\nconst mode = props.mode ?? \"Create\";\n\nconst referralLabels = props.referral ? [`${props.referral}`] : [];\nconst labelStrings = (props.labels ? props.labels.split(\",\") : []).concat(\n  referralLabels\n);\n\ninitState({\n  seekingFunding: false,\n  selectedElements: [],\n\n  // Should be a list of objects with field \"name\".\n  // Should be a list of labels as strings.\n  //postType: \"Solution\",\n  name: props.name ?? \"\",\n  description: props.description ?? \"\",\n  amount: props.amount ?? \"\",\n  token: props.token ?? \"USD\",\n  supervisor: props.supervisor ?? \"username.near\",\n  chain: \"\",\n  bitkub_address: props.bitkub_address ?? \"\",\n  jfin_address: props.jfin_address ?? \"\",\n  eth_address: props.eth_address ?? \"\",\n});\n\n// This must be outside onClick, because Near.view returns null at first, and when the view call finished, it returns true/false.\n// If checking this inside onClick, it will give `null` and we cannot tell the result is true or false.\nconst onSubmit = () => {\n  //Storage.privateSet(DRAFT_STATE_STORAGE_KEY, JSON.stringify(state));\n\n  let body = {\n    description: generateDescription(\n      state.description,\n      state.amount,\n      state.token,\n      state.supervisor,\n      state.eth_address,\n      state.bitkub_address,\n      state.jfin_address\n    ),\n  };\n\n  if (!context.accountId) return;\n\n  let txn = [];\n  if (mode == \"Create\") {\n    txn.push({\n      contractName: donationHubContractAccountId,\n      methodName: \"add_post\",\n      args: {\n        name: state.name,\n        description: body.description,\n        eth_address: state.eth_address,\n        bitkub_address: state.bitkub_address,\n        jfin_address: state.jfin_address,\n      },\n      //   deposit: Big(10).pow(21).mul(3),\n      //   gas: Big(10).pow(12).mul(100),\n    });\n  }\n  Near.call(txn);\n};\n\nconst nameDiv = (\n  <div className=\"col-lg-6 mb-2\">\n    <p className=\"fs-4 fw-bold mb-1\">Project Name</p>\n    <input\n      type=\"text\"\n      value={state.name}\n      onChange={(event) => State.update({ name: event.target.value })}\n    />\n  </div>\n);\n\nconst descriptionDiv = (\n  <div className=\"col-lg-12 mb-2\">\n    <p className=\"fs-4 fw-bold mb-1\">Description</p>\n    <p class=\"text-muted w-75 my-1\"> Tell us about project story </p>\n    <textarea\n      value={state.description}\n      type=\"text\"\n      rows={6}\n      className=\"form-control\"\n      onInput={(event) => textareaInputHandler(event.target.value)}\n      onKeyUp={(event) => {\n        if (event.key === \"Escape\") {\n          State.update({ showAccountAutocomplete: false });\n        }\n      }}\n      onChange={(event) => State.update({ description: event.target.value })}\n    />\n  </div>\n);\n\nconst ethaddress = (\n  <div className=\"col-lg-6 mb-2\">\n    ETH ADDRESS\n    <input\n      type=\"text\"\n      value={state.eth_address}\n      onChange={(event) => State.update({ eth_address: event.target.value })}\n    />\n  </div>\n);\n\nconst bitkubaddress = (\n  <div className=\"col-lg-6 mb-2\">\n    BITKUB ADDRESS\n    <input\n      type=\"text\"\n      value={state.bitkub_address}\n      onChange={(event) => State.update({ bitkub_address: event.target.value })}\n    />\n  </div>\n);\n\nconst jfinaddress = (\n  <div className=\"col-lg-6 mb-2\">\n    JFIN ADDRESS\n    <input\n      type=\"text\"\n      value={state.jfin_address}\n      onChange={(event) => State.update({ jfin_address: event.target.value })}\n    />\n  </div>\n);\n\nconst fundraisingDiv = (\n  <div class=\"d-flex flex-column mb-2\">\n    <div className=\"col-lg-6  mb-2\">\n      Currency\n      <select\n        onChange={(event) => State.update({ token: event.target.value })}\n        class=\"form-select\"\n        aria-label=\"Default select\"\n      >\n        <option selected value=\"USD\">\n          USD\n        </option>\n      </select>\n    </div>\n    <div className=\"col-lg-6 mb-2\">\n      Requested amount <span class=\"text-muted fw-normal\">(Numbers Only)</span>\n      <input\n        type=\"number\"\n        step=\"0.01\"\n        value={state.amount !== null ? state.amount : \"\"}\n        min={0}\n        onChange={(event) => {\n          const newValue = event.target.value;\n          // Ensure the input is a valid number\n          if (/^\\d*\\.?\\d{0,2}$/.test(newValue)) {\n            State.update({\n              amount: newValue,\n            });\n          }\n        }}\n      />\n    </div>\n    <div className=\"col-lg-6 mb-2\">\n      <p class=\"mb-1\">\n        Requested sponsor <span class=\"text-muted fw-normal\">(Optional)</span>\n      </p>\n      <p style={{ fontSize: \"13px\" }} class=\"m-0 text-muted fw-light\">\n        If you are requesting funding from a specific sponsor, please enter\n        their username.\n      </p>\n      <div class=\"input-group flex-nowrap\">\n        <span class=\"input-group-text\" id=\"addon-wrapping\">\n          @\n        </span>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          placeholder=\"Enter username\"\n          value={state.supervisor}\n          onChange={(event) => State.update({ supervisor: event.target.value })}\n        />\n      </div>\n    </div>\n  </div>\n);\n\nfunction generateDescription(text, amount, token, supervisor) {\n  const funding = `Requested amount: ${amount} ${token}~Requested sponsor: @${supervisor}~`;\n  if (amount > 0 && token && supervisor) return funding + text;\n  return newText;\n}\n\nreturn (\n  <div class=\"bg-light d-flex flex-column flex-grow-1\">\n    <div class=\"mx-5 mb-5\">\n      {props.transactionHashes ? (\n        <>\n          Succesfull submission. Back to{\" \"}\n          <a\n            style={{\n              color: \"#3252A6\",\n            }}\n            className=\"fw-bold\"\n          >\n            feed\n          </a>\n        </>\n      ) : (\n        <>\n          <p>{state.seekingFunding}</p>\n          <div class=\"card border-light\">\n            <div class=\"card-body\">\n              <h1 class=\"card-title fw-bold fs-1\">Donation HUB</h1>\n\n              {state.warning && (\n                <div\n                  class=\"alert alert-warning alert-dismissible fade show\"\n                  role=\"alert\"\n                >\n                  {state.warning}\n                  <button\n                    type=\"button\"\n                    class=\"btn-close\"\n                    data-bs-dismiss=\"alert\"\n                    aria-label=\"Close\"\n                    onClick={() => State.update({ warning: \"\" })}\n                  ></button>\n                </div>\n              )}\n              <div className=\"row\">\n                {nameDiv}\n                {descriptionDiv}\n                {categoryDiv}\n                {fundraisingDiv}\n              </div>\n\n              <div>\n                {ethaddress}\n                {bitkubaddress}\n                {jfinaddress}\n              </div>\n\n              <button\n                style={{\n                  width: \"7rem\",\n                  backgroundColor: \"#0C7283\",\n                  color: \"#f3f3f3\",\n                }}\n                className=\"btn btn-light mb-2 p-3\"\n                onClick={onSubmit}\n              >\n                Post\n              </button>\n            </div>\n          </div>\n        </>\n      )}\n    </div>\n  </div>\n);\n"}}, "widget_modules_used": null, "widget_url": "https://near.social/#/relayer.pagodaplatform.near/widget/Donation.Project.Create", "fact_widget_deployments_id": "ed585ec3f1034cf77df319f551614640", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 24}