{"tx_hash": "HKpWHPJDAnfXcnobRYR18LMwDjZGEqEsevvw17ZkLGv9", "action_id_social": "BoHnaW8iTGYzk4cxoCRPwvAkzFVaLtokbKS6x6wFq7cT-0-widget", "block_id": 108135133, "block_timestamp": "2023-12-17T02:27:10.319Z", "signer_id": "relayer.pagodaplatform.near", "widget_name": "billbos-main", "source_code": "State.init({\n  chainId: null,\n  walletAddress: null,\n  balance: null,\n  walletConnected: false,\n  tabSelect: 0,\n  chains: {\n    25925: {\n      name: \"Bitkub Chain Testnet\",\n      id: 25925,\n      image:\n        \"https://ipfs.near.social/ipfs/bafkreicksbcmv5i7ezaw5b2424vliuegcbgfckjc4qt73eql67pdmrvvfu\",\n    },\n    96: {\n      name: \"Bitkub Chain Mainnet\",\n      id: 96,\n    },\n    3501: {\n      name: \"JFIN Chain\",\n      id: 3501,\n      image:\n        \"https://ipfs.near.social/ipfs/bafkreia4w3mcfsrvcoh3r44x5nxrmarrt5xr3nta7dnw7pjfufd3b3anki\",\n    },\n  },\n});\n\nconst DEFAULT_CHAIN_ID = 25925;\nconst CHAIN_LIST = [25925, 3501];\n\nfunction switchEthereumChain(chainId) {\n  const chainIdHex = `0x${chainId.toString(16)}`;\n  const res = Ethers.send(\"wallet_switchEthereumChain\", [\n    { chainId: chainIdHex },\n  ]);\n}\n\nfunction setTabSelect(index) {\n  State.update({\n    tabSelect: index,\n  });\n}\n\nif (\n  state.chainId === null &&\n  ethers !== undefined &&\n  Ethers.send(\"eth_requestAccounts\", [])[0]\n) {\n  Ethers.provider()\n    .getNetwork()\n    .then((data) => {\n      const chainId = data?.chainId;\n      if (CHAIN_LIST.includes(chainId)) {\n        State.update({ chainId: chainId });\n      } else {\n        State.update({ chainId: null });\n        switchEthereumChain(DEFAULT_CHAIN_ID);\n      }\n    });\n}\n\nfunction checkProvider() {\n  const provider = Ethers.provider();\n  if (provider) {\n    provider\n      .getSigner()\n      ?.getAddress()\n      ?.then((address) => {\n        State.update({ walletAddress: address });\n      });\n    provider\n      .getSigner()\n      ?.getBalance()\n      .then((balance) => State.update({ balance: balance }));\n    State.update({ walletConnected: true });\n  } else {\n    State.update({ walletConnected: false, balance: null });\n  }\n}\ncheckProvider();\n\nfunction tabComponent() {\n  if (state.tabSelect == 0) {\n    return <div>0</div>;\n  } else if (state.tabSelect == 1) {\n    return (\n      <div className=\"container\">\n        <div className=\"flex justify-between py-8 items-center\">\n          <div>\n            <h2 className=\"font-semibold text-xl \">Campaigns</h2>\n            <p className=\"text-sm\">\n              Unlock the power of onchain data for Web3 Ads\n            </p>\n          </div>\n          <div>\n            <Widget src=\"jimmy-ez.near/widget/billbos-craete-ads\" props={{}} />\n          </div>\n        </div>\n        <div className=\"grid grid-cols-3 gap-3\">\n          {Array.from({ length: 3 }).map((_, index) => {\n            return (\n              <div key={index}>\n                <Widget\n                  src=\"jimmy-ez.near/widget/billbos-ads-card\"\n                  props={{}}\n                />\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  } else if (state.tabSelect == 2) {\n    return (\n      <div>\n        <div\n          style={{ height: \"430px\" }}\n          className=\"bg-black container flex items-center\"\n        >\n          <div className=\"w-96 text-white\">\n            <h2 className=\"text-4xl font-semibold\">\n              Generate Ads ID. Earn Crypto Together\n            </h2>\n            <p className=\"mt-2\">Earn up to 20% commission on every view</p>\n          </div>\n        </div>\n        <div\n          style={{ marginTop: \"-50px\" }}\n          className=\"container rounded-t-3xl gray-surface min-h-screen\"\n        >\n          <div className=\"flex justify-between py-8 items-center \">\n            <div>\n              <h2 className=\"font-semibold text-xl \">Campaigns</h2>\n              <p className=\"text-sm\">\n                Unlock the power of onchain data for Web3 Ads\n              </p>\n            </div>\n            <div>\n              <Widget\n                src=\"porx-dev.near/widget/billbos-modal\"\n                props={{\n                  btnName: \"Get my ads component\",\n                  btnClass: \"brand-green px-2.5 py-2 rounded-xl text-white text-sm\",\n                }}\n              />\n            </div>\n          </div>\n          <div className=\"flex gap-3\">\n            {Array.from({ length: 2 }).map((_, i) => {\n              return (\n                <Widget\n                  src=\"porx-dev.near/widget/billbos-reward-card\"\n                  props={{}}\n                />\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst main = (\n  <div className=\"relative gray-surface \">\n    <div>\n      {state.walletConnected ? (\n        <div>\n          <div className=\"sticky top-0 z-10 bg-white\">\n            <Widget\n              src=\"porx-dev.near/widget/billbos-header\"\n              props={{\n                walletAddress: state.walletAddress,\n                chainId: state.chainId,\n                setTabSelect: (index) => setTabSelect(index),\n                chains: state.chains,\n              }}\n            />\n          </div>\n\n          <div className=\" min-h-screen w-full\">\n            <div>{tabComponent()}</div>\n          </div>\n        </div>\n      ) : (\n        <Widget src=\"porx-dev.near/widget/billbos-authen\" props={{}} />\n      )}\n    </div>\n  </div>\n);\n\nreturn (\n  <>\n    <Widget src=\"porx-dev.near/widget/billbos-css\" props={{ children: main }} />\n  </>\n);\n", "metadata": {"fork_of": "porx-dev.near/widget/billbos-main@108134929"}, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/relayer.pagodaplatform.near/widget/billbos-main", "fact_widget_deployments_id": "9980259252e6feddf7a10b54e0409a69", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 38}