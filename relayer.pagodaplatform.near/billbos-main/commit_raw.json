{"tx_hash": "w2svcsX72b375aYbU6GoniTaTz3WkQyYEzTPrw5F6xV", "action_id_social": "A614sMR98wf49JXG8XFVQHpSvRsb5yiY1yMcdtEgiMVD-0-widget", "block_id": 108220378, "block_timestamp": "2023-12-18T03:32:20.647Z", "signer_id": "relayer.pagodaplatform.near", "widget_name": "billbos-main", "source_code": "State.init({\n  chainId: undefined,\n  walletAddress: null,\n  balance: null,\n  test: null,\n  viewOfMonth: 0,\n  viewOfWalletAddress: 0,\n  ratioOfWalletAddress: 0,\n  walletConnected: false,\n  response: null,\n  tabSelect: 0,\n  chains: {\n    25925: {\n      id: 25925,\n      name: \"Bitkub Chain\",\n      rpcUrl: \"https://rpc-testnet.bitkubchain.io\",\n      currencySymbol: \"tKUB\",\n      nativeCurrency: ETH_TOKEN,\n      image:\n        \"https://ipfs.near.social/ipfs/bafkreicksbcmv5i7ezaw5b2424vliuegcbgfckjc4qt73eql67pdmrvvfu\",\n    },\n    96: {\n      id: 96,\n      name: \"Bitkub Chain\",\n      rpcUrl: \"https://rpc.bitkubchain.io\",\n      currencySymbol: \"KUB\",\n      nativeCurrency: ETH_TOKEN,\n      image:\n        \"https://ipfs.near.social/ipfs/bafkreicksbcmv5i7ezaw5b2424vliuegcbgfckjc4qt73eql67pdmrvvfu\",\n    },\n    3501: {\n      id: 3501,\n      name: \"JFIN Chain\",\n      rpcUrl: \"https://rpc.jfinchain.com\",\n      currencySymbol: \"jfin\",\n      nativeCurrency: ETH_TOKEN,\n      image:\n        \"https://ipfs.near.social/ipfs/bafkreia4w3mcfsrvcoh3r44x5nxrmarrt5xr3nta7dnw7pjfufd3b3anki\",\n    },\n    35011: {\n      id: 35011,\n      name: \"J2O Taro\",\n      rpcUrl: \"https://rpc.j2o.io\",\n      nativeCurrency: ETH_TOKEN,\n      currencySymbol: \"taro\",\n      image:\n        \"https://ipfs.near.social/ipfs/bafkreia4w3mcfsrvcoh3r44x5nxrmarrt5xr3nta7dnw7pjfufd3b3anki\",\n    },\n  },\n  adsContent:\n    '<Widget src=\"jimmy-ez.near/widget/billbos-craete-ads\" props={{}} />',\n});\n\nconst BACKEND_API = \"https://api-billbos.0xnutx.space\";\nconst DEFAULT_CHAIN_ID = 25925;\n// const CHAIN_LIST = [25925, 3501, 35011, 96];\nconst CHAIN_LIST = [25925, 35011];\nconst ETH_TOKEN = { name: \"Ethereum\", symbol: \"ETH\", decimals: 18 };\n\nfunction switchEthereumChain(chainId) {\n  const chainIdHex = `0x${chainId.toString(16)}`;\n  const res = Ethers.send(\"wallet_switchEthereumChain\", [\n    { chainId: chainIdHex },\n  ]);\n\n  //   if (res === undefined) {\n  //     console.log(\n  //       `Failed to switch chain to ${chainId}. Add the chain to wallet`\n  //     );\n  //     Ethers.send(\"wallet_addEthereumChain\", [\n  //       {\n  //         chainId: chainIdHex,\n  //         chainName: state.chains[chainId].name,\n  //         nativeCurrency: state.chains[chainId].nativeCurrency,\n  //         rpcUrls: [state.chains[chainId].rpcUrl],\n  //       },\n  //     ]);\n  //   }\n}\n\nfunction setTabSelect(index) {\n  State.update({\n    tabSelect: index,\n  });\n}\n\nif (\n  state.chainId === undefined &&\n  ethers !== undefined &&\n  Ethers.send(\"eth_requestAccounts\", [])[0]\n) {\n  Ethers.provider()\n    .getNetwork()\n    .then((data) => {\n      const chainId = data?.chainId;\n      if (CHAIN_LIST.includes(chainId)) {\n        State.update({ chainId: chainId });\n      } else {\n        State.update({ chainId: null });\n        switchEthereumChain(DEFAULT_CHAIN_ID);\n      }\n    });\n}\n\nconst fetchApi = (queryURI, method, data) => {\n  const options = {\n    method: method,\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  if (data) options[body] = JSON.stringify(data);\n  return asyncFetch(queryURI, options);\n};\n\nconst handleRequest = (query, viewCase) => {\n  const endpoint = BACKEND_API + query;\n  switch (viewCase) {\n    case \"viewOfMonth\":\n      fetchApi(endpoint, \"GET\", \"\").then((res) => {\n        State.update({\n          response: res,\n        });\n        if (res.ok) {\n          State.update({ viewOfMonth: res.body.view });\n        }\n      });\n      return;\n    case \"viewOfWalletAddress\":\n      fetchApi(endpoint, \"GET\", \"\").then((res) => {\n        if (res.ok) {\n          State.update({ viewOfWalletAddress: res.body.view });\n        }\n      });\n      return;\n    case \"ratioOfWalletAddress\":\n      fetchApi(endpoint, \"GET\", \"\").then((res) => {\n        if (res.ok) {\n          State.update({ ratioOfWalletAddress: res.body.ration });\n        }\n      });\n      return;\n    default:\n      break;\n  }\n};\n\nfunction checkProvider() {\n  const provider = Ethers.provider();\n  if (provider) {\n    provider\n      .getSigner()\n      ?.getAddress()\n      ?.then((address) => {\n        State.update({ walletAddress: address });\n      });\n    provider\n      .getSigner()\n      ?.getBalance()\n      .then((balance) => State.update({ balance: balance }));\n    State.update({ walletConnected: true });\n  } else {\n    State.update({ walletConnected: false, balance: null });\n  }\n}\ncheckProvider();\n\nfunction tapCampaigns() {\n  return (\n    <div className=\"container\">\n      <div className=\"w-full\">\n        {state.walletConnected ? (\n          <>\n            <div className=\"flex justify-between py-8 items-center\">\n              <div>\n                <h2 className=\"font-semibold text-xl \">Campaigns</h2>\n                <p className=\"text-sm\">\n                  Unlock the power of onchain data for Web3 Ads\n                </p>\n              </div>\n              <div>\n                <Widget\n                  src=\"jimmy-ez.near/widget/billbos-craete-ads\"\n                  props={{}}\n                />\n              </div>\n            </div>\n            <div className=\"grid grid-cols-3 gap-3\">\n              {Array.from({ length: 3 }).map((_, index) => {\n                return (\n                  <div key={index}>\n                    <Widget\n                      src=\"jimmy-ez.near/widget/billbos-ads-card\"\n                      props={{}}\n                    />\n                  </div>\n                );\n              })}\n            </div>\n          </>\n        ) : (\n          <div className=\"w-full\">\n            <Widget src=\"chayanonc-ph.near/widget/billbos-authen\" props={{}} />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nfunction tapRewards() {\n  // get view of page owner\n  const walletAddress = \"0xFf462851bd130a5F86e4391CBf5c92D99E6416BC\";\n  const month = 1;\n\n  handleRequest(\n    `/ads/total-webpageowner-view-by-owner-address?month=${month}&walletAddress=${walletAddress}`,\n    \"viewOfWalletAddress\"\n  );\n\n  handleRequest(\n    `/ads/ratio-webpageOwnerview-by-allwebpageOwner?month=${month}&walletAddress=${walletAddress}`,\n    \"ratioOfWalletAddress\"\n  );\n\n  return (\n    <div>\n      <div\n        style={{ height: \"430px\" }}\n        className=\"bg-black container flex items-center\"\n      >\n        <div className=\"w-96 text-white\">\n          <h2 className=\"text-4xl font-semibold\">\n            Generate Ads ID. Earn Crypto Together\n          </h2>\n          <p className=\"mt-2\">Earn up to 20% commission on every view</p>\n        </div>\n      </div>\n      <div\n        style={{ marginTop: \"-50px\" }}\n        className=\"container rounded-t-3xl gray-surface min-h-screen\"\n      >\n        <div className=\"flex justify-between py-8 items-center \">\n          <div>\n            <h2 className=\"font-semibold text-xl \">Campaigns</h2>\n            <p className=\"text-sm\">\n              Unlock the power of onchain data for Web3 Ads\n            </p>\n          </div>\n          <div>\n            <Widget\n              src=\"chayanonc-ph.near/widget/billbos-ads\"\n              props={{\n                btnName: \"Get my ads component\",\n                btnClass:\n                  \"brand-green px-2.5 py-2 rounded-xl text-white text-sm font-semibold\",\n                height: \"467px\",\n                width: \"550px\",\n                isOpenDefault: false,\n                body: (\n                  <div className=\"flex flex-wrap justify-center w-full \">\n                    <div style={{ width: \"482px\" }}>\n                      <div>\n                        <p className=\"font-semibold text-lg\">\n                          Get my Ads Component\n                        </p>\n                        <p className=\"tertiary-text text-sm\">\n                          Give your teammates access to this presets and start\n                          collaborating in real time.\n                        </p>\n                      </div>\n                    </div>\n                    <div className=\"w-full h-px bg-gray-200 my-4 \"></div>\n                    <div\n                      style={{ width: \"482px\", height: \"280px\" }}\n                      className=\"text-sm p-3 bg-gray-100 rounded-xl mt-2 relative\"\n                    >\n                      <div\n                        className=\"absolute top-3 right-3 cursor-pointer z-10\"\n                        onClick={() => {\n                          copyContent(state.adsContent);\n                        }}\n                      >\n                        <Widget\n                          src=\"mob.near/widget/CopyButton\"\n                          props={{\n                            className: \"bg-gray-100\",\n                            text: state.adsContent,\n                            clipboardIcon: (\n                              <svg\n                                width=\"16\"\n                                height=\"16\"\n                                viewBox=\"0 0 16 16\"\n                                fill=\"none\"\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                              >\n                                <g clip-path=\"url(#clip0_3757_2743)\">\n                                  <path\n                                    d=\"M10.6654 0.666687H2.66536C1.93203 0.666687 1.33203 1.26669 1.33203 2.00002V11.3334H2.66536V2.00002H10.6654V0.666687ZM12.6654 3.33335H5.33203C4.5987 3.33335 3.9987 3.93335 3.9987 4.66669V14C3.9987 14.7334 4.5987 15.3334 5.33203 15.3334H12.6654C13.3987 15.3334 13.9987 14.7334 13.9987 14V4.66669C13.9987 3.93335 13.3987 3.33335 12.6654 3.33335ZM12.6654 14H5.33203V4.66669H12.6654V14Z\"\n                                    fill=\"#C3C5C7\"\n                                  />\n                                </g>\n                                <defs>\n                                  <clipPath id=\"clip0_3757_2743\">\n                                    <rect width=\"16\" height=\"16\" fill=\"white\" />\n                                  </clipPath>\n                                </defs>\n                              </svg>\n                            ),\n                          }}\n                        />\n                      </div>\n                      <div className=\"w-96\">{state.adsContent}</div>\n                    </div>\n                  </div>\n                ),\n              }}\n            />\n          </div>\n        </div>\n        <div className=\"grid grid-cols-3 gap-4 mb-5\">\n          <div className=\"p-3 bg-white rounded-xl \">\n            <div>\n              <p className=\"text-xs secondary-text\">Total Earnings</p>\n              <p className=\"text-xl mt-1 font-medium\">100.20 USDT</p>\n            </div>\n          </div>\n          <div className=\"p-3 bg-white rounded-xl\">\n            <div>\n              <p className=\"text-xs secondary-text\">My Total View</p>\n              <p className=\"text-xl mt-1 font-medium\">\n                {state.viewOfWalletAddress}\n              </p>\n            </div>\n          </div>\n          <div className=\"p-3 bg-white rounded-xl\">\n            <div>\n              <p className=\"text-xs secondary-text\">My Total Earnings</p>\n              <p className=\"text-xl mt-1 font-medium\">\n                {state.ratioOfWalletAddress * state.viewOfWalletAddress} USDT\n              </p>\n            </div>\n          </div>\n        </div>\n        <div className=\"w-full my-4\">\n          <p className=\"text-sm font-medium\">Reward</p>\n        </div>\n        <div className=\"flex gap-3\">\n          {CHAIN_LIST.map((item, i) => {\n            const chainConfig = state.chains[item];\n\n            return (\n              <Widget\n                src=\"porx-dev.near/widget/billbos-reward-card\"\n                props={{\n                  chainName: chainConfig.name,\n                  amount: \"1000.20\",\n                  tokenName: \"USDT\",\n                  onClaim: () => {},\n                }}\n              />\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction tapDashboard() {\n  // get total view ads\n  handleRequest(\"/ads/total-ad-view?month=1\", \"viewOfMonth\");\n\n  const earningCards = [\n    {\n      title: \"Total Staked\",\n      ipfsUrl: \"bafkreigb2h33nc6bpa2gcuvbs46eys4bbb6djibx76xknbrkswtqfqlyzm\",\n    },\n    {\n      title: \"Total Earnings\",\n      ipfsUrl: \"bafkreievjy5wntddg6augnywctekhic3dttnf57h4dhjkypyx5mhjci2ou\",\n    },\n    {\n      title: \"Total View Ads\",\n      ipfsUrl: \"bafkreid32njwsekcwj3uvbfrz7upc6iqpz5tzxbymw5jb7kye5axdgnmri\",\n    },\n  ];\n\n  return (\n    <div\n      style={{\n        height: \"221px\",\n      }}\n      className=\"brand-gradient-green-radial w-full \"\n    >\n      <div className=\"container\">\n        <div className=\"text-white pt-10\">\n          <p className=\"font-semibold text-xl\">BillBos Dashboard</p>\n          <p className=\"text-sm font-medium\">\n            Unlock the power of onchain data for Web3 Ads\n          </p>\n        </div>\n        <div className=\"w-full grid grid-cols-3 gap-4 mt-16 pt-2 \">\n          {earningCards.map((item, i) => {\n            return (\n              <div key={i} className=\"h-full\">\n                <Widget\n                  src=\"chayanonc-ph.near/widget/billbos-earning-card\"\n                  props={{\n                    title: item.title,\n                    amountUSDT: item.usdt,\n                    amountTHB: item.thb,\n                    totalView: i == 2 ? state.viewOfMonth.toString() : \"\",\n                    ipfsUrl: `https://ipfs.near.social/ipfs/${item.ipfsUrl}`,\n                  }}\n                />\n              </div>\n            );\n          })}\n        </div>\n        <div className=\"my-10\">\n          <p className=\"font-semibold \">Top Ads</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction tabComponent() {\n  if (state.tabSelect == 0) {\n    return tapDashboard();\n  } else if (state.tabSelect == 1) {\n    return tapCampaigns();\n  } else if (state.tabSelect == 2) {\n    return tapRewards();\n  }\n}\n\nconst main = (\n  <div className=\"relative gray-surface \">\n    <div>\n      <div>\n        <div className=\"sticky top-0 z-10 bg-white\">\n          <Widget\n            src=\"chayanonc-ph.near/widget/billbos-header\"\n            props={{\n              walletAddress: state.walletAddress,\n              chainId: state.chainId,\n              setTabSelect: (index) => setTabSelect(index),\n              chains: state.chains,\n            }}\n          />\n        </div>\n        {state.chainId !== undefined && !CHAIN_LIST.includes(state.chainId) ? (\n          <div className=\"w-full\">Chain not support </div>\n        ) : (\n          <div className=\" min-h-screen w-full\">\n            <div>{tabComponent()}</div>\n          </div>\n        )}\n      </div>\n    </div>\n  </div>\n);\n\nreturn (\n  <>\n    <Widget\n      src=\"chayanonc-ph.near/widget/billbos-css\"\n      props={{ children: main }}\n    />\n  </>\n);\n", "metadata": {"fork_of": "chayanonc-ph.near/widget/billbos-main@108219121"}, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/relayer.pagodaplatform.near/widget/billbos-main", "fact_widget_deployments_id": "7e9428039cce19073f5bb5772642c18a", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 53}