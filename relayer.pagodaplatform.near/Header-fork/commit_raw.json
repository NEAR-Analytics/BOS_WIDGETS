{"tx_hash": "GUMMqiEqqCRk4EcVRZbFV9xGTvvefDACKAASpi8iBeZy", "action_id_social": "BkHnukGbnhzWDkMbbPcCHyUSxKZ9uJzGoorDgmoDPxbw-0-widget", "block_id": 104983682, "block_timestamp": "2023-11-05T09:16:09.813Z", "signer_id": "relayer.pagodaplatform.near", "widget_name": "Header-fork", "source_code": null, "metadata": null, "branch": {"draft": {"": "const user = \"alexandremachupro.near\";\n\n/// Layout\nconst DaisyUIWrapper = ({ children }) => {\n  return (\n    <Widget\n      src=\"igris.near/widget/DaisyUIWrapper\"\n      props={{\n        children,\n        daisyUiTheme: \"dark\",\n      }}\n    />\n  );\n};\n\n/// Assets\nconst IconETH = () => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      height=\"24.002\"\n      viewBox=\"0 0 24 24.002\"\n      width=\"24\"\n    ></svg>\n  );\n};\n\n/// CONSTANTS\nconst ZERO_ADDRESS = \"0x0000000000000000000000000000000000000000\";\n\nconst CONFIG = {\n  testnet: {\n    CHAIN_ID: 114,\n    NETWORK_INFO: {\n      blockExplorerUrls: [\"https://coston2-explorer.flare.network//\"],\n      iconUrls: [\n        \"https://flare-explorer.flare.network/images/flare-120c821cf29e165c8d80f1ccfb076a37.svg?vsn=d\",\n      ],\n      rpcUrls: [\"https://coston2-api.flare.network/ext/bc/C/rpc\"],\n      chainId: \"0x72\",\n      chainName: \"Flare Testnet Coston2i\",\n      nativeCurrency: {\n        name: \"C2FLR\",\n        symbol: \"C2FLR\",\n        decimals: 18,\n      },\n    },\n  },\n};\n\nreturn (\n  <DaisyUIWrapper>\n    <div class=\"card max-w-2xl mx-auto bg-neutral text-white\">\n      <div class=\"px-4 pt-4\">\n        <div class=\"relative flex justify-center\">\n          {network && (\n            <button\n              class=\"btn btn-xs btn-outline absolute right-0 top-0\"\n              onClick={() => {\n                State.update({ showSettings: !state.showSettings });\n              }}\n            >\n              {network === \"unsupported\" ? \"Unsupported network\" : network}\n            </button>\n          )}\n\n          {/* settings menu */}\n          {state.showSettings && (\n            <div class=\"absolute right-0 top-8 bg-gray-900 rounded p-3\">\n              <div class=\"flex flex-col gap-2\">\n                <button\n                  class={`btn btn-xs btn-outline${\n                    network === \"testnet\" ? \" bg-purple-700\" : \"\"\n                  }`}\n                  onClick={() => {\n                    network === \"testnet\"\n                      ? State.update({ showSettings: false })\n                      : handleClickSwitchNetwork(\"testnet\");\n                  }}\n                >\n                  Testnet\n                </button>\n              </div>\n            </div>\n          )}\n        </div>\n\n        <label class=\"label\">\n          <span class=\"label-text text-lg\">Near Swap</span>\n        </label>\n\n        <label class=\"label\">\n          <p class=\"label-text text-gray-500\"></p>\n          <p class=\"label-text text-2xl\">${price}</p>\n        </label>\n\n        <div class=\"bg-purple-900 rounded p-2 mb-2\">\n          <label class=\"label pl-4\">\n            <span class=\"label-text text-gray-500\">Pay{payValueDisplay}</span>\n            <span class=\"label-text text-gray-500\">\n              Balance:\n              <span class=\"text-white\"></span>\n            </span>\n          </label>\n          <div class=\"flex\">\n            <input\n              class=\"input w-full bg-purple-900 text-2xl focus:outline-none\"\n              onChange={(e) => handleChangePayAmount(e)}\n              value={payAmount}\n              placeholder=\"0.0\"\n            />\n            <div class=\"flex items-center space-x-1\">\n              {balance > 0 && (\n                <button\n                  class=\"btn btn-sm border-none font-normal rounded-1 px-2 mx-1 bg-purple-300 hover:bg-red-300 focus:bg-red-200\"\n                  onClick={() => payAmount !== balance && handleClickMax()}\n                >\n                  MAX\n                </button>\n              )}\n              <IconETH />\n              <select disabled class=\"select-ghost bg-purple-300 text-2xl\">\n                <option disabled selected>\n                  WETH\n                </option>\n              </select>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"bg-purple-900 rounded p-2\">\n          <label class=\"label pl-4 pr-2\">\n            <span class=\"label-text text-gray-500\">\n              Receive\n              {`$${price * payAmount}`}\n            </span>\n            <span class=\"label-text\">\n              <span class=\"text-gray-500\">Leverage: </span>\n            </span>\n          </label>\n          <div class=\"flex\">\n            <input\n              class=\"input w-full bg-purple-900 text-2xl focus:outline-none\"\n              value={payAmount * price}\n              placeholder=\"0.0\"\n            />\n            <div class=\"flex items-center space-x-1\">\n              <select disabled class=\"select-ghost  bg-purple-300 text-2xl\">\n                <option disabled selected>\n                  1INCH\n                </option>\n              </select>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"px-4 pb-4\">\n        {sender ? (\n          <button\n            class={`btn w-full bg-blue-200 hover:bg-blue-300 focus:bg-blue-500 mt-2`}\n            onClick={() => swap()}\n          >\n            {primaryButtonText}\n          </button>\n        ) : (\n          <button\n            disabled={sender && payAmount <= 0}\n            class=\"relative btn w-full bg-purple-700 hover:bg-blue-300 focus:bg-indigo-500 mt-2\"\n          >\n            Connect Wallet\n            <Web3Connect\n              className=\"opacity-0 absolute w-full h-full\"\n              connectLabel=\"Connect with Web3\"\n            />\n          </button>\n        )}\n      </div>\n    </div>\n  </DaisyUIWrapper>\n);\n"}}, "widget_modules_used": null, "widget_url": "https://near.social/#/relayer.pagodaplatform.near/widget/Header-fork", "fact_widget_deployments_id": "f8fc36ed6c4bc97ddd494d28f72e90e7", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}