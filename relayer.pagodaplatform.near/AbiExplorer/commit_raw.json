{"tx_hash": "78Edh45uXsZ4M1Bo5W8nyqkawLUQ5DiRkuNeiXU9Tvhi", "action_id_social": "7WiPJuTLLw3UX3FDMcEGKYuE763sfjuT2wzS5bG4CUu6-0-widget", "block_id": 94947286, "block_timestamp": "2023-06-24T20:55:34.007Z", "signer_id": "relayer.pagodaplatform.near", "widget_name": "AbiExplorer", "source_code": "// const sender = Ethers.send(\"eth_requestAccounts\", [])[0];\n\n// if (!sender) return <Web3Connect connectLabel=\"Connect with Web3\" />;\n\ninitState({\n  sender: sender,\n  abi: \"\",\n  functions: [],\n  inputs: [],\n  selectedFunction: \"\",\n  contractAddress: \"\",\n  chain: \"\",\n});\n\nconst generateUI = () => {\n  const functions = JSON.parse(state.abi)\n    .filter((x) => x.type === \"function\")\n    .map((f) => <option value={f.name}>{f.name}</option>);\n\n  State.update({ functions: functions || [] });\n};\n\nconst capitalize = (word) => {\n  return word[0].toUpperCase() + word.slice(1).toLowerCase();\n};\n\nconst handleView = (e) => {\n  const body = {\n    chain: state.chain,\n    functionName: state.selectedFunction[0].name,\n    abi: state.abi,\n    address: state.contractAddress,\n  };\n\n  fetch(\"https://e84b-50-204-107-211.ngrok.io/api/functionCall\", {\n    \"Content-Type\": \"application/json\",\n    method: \"POST\",\n    body: JSON.stringify(body),\n  }).then((res) => {\n    const result = res.body;\n    console.log(result);\n  });\n};\n\nreturn (\n  <>\n    <h3>ABI Explorer</h3>\n    <label for=\"selectFunction\" class=\"mt-2\">\n      Select Chain\n    </label>\n    <select\n      class=\"form-select mt-2\"\n      id=\"selectFunction\"\n      onChange={(e) => {\n        const chain = e.target.value;\n        State.update({ chain });\n      }}\n    >\n      <option selected value=\"ETHEREUM\">\n        ETHEREUM\n      </option>\n      <option value=\"GOERLI\">GOERLI</option>\n      <option value=\"SEPOLIA\">SEPOLIA</option>\n      <option value=\"POLYGON\">POLYGON</option>\n      <option value=\"MUMBAI\">MUMBAI</option>\n      <option value=\"BSC\">BSC</option>\n    </select>\n    <div class=\"mb-3 mt-2\">\n      <div class=\"col\">\n        <label>Contract Address</label>\n        <input\n          class=\"form-control mt-2\"\n          type=\"text\"\n          placeholder=\"Example: 0x00...00\"\n          onChange={(e) => {\n            State.update({ contractAddress: e.target.value });\n          }}\n        />\n      </div>\n    </div>\n    <div class=\"mb-3\">\n      <label for=\"selectFunction\">Contract ABI</label>\n      <textarea\n        style={{ resize: \"none\" }}\n        rows=\"10\"\n        cols=\"50\"\n        class=\"form-control mt-2\"\n        id=\"abiJson\"\n        placeholder=\"Enter ABI json\"\n        onChange={(e) => {\n          State.update({ abi: e.target.value });\n          const functions = JSON.parse(state.abi)\n            .filter((x) => x.type === \"function\")\n            .map((f) => <option value={f.name}>{f.name}</option>);\n\n          State.update({ functions: functions || [] });\n        }}\n      ></textarea>\n    </div>\n\n    <div class=\"mb-3\">\n      {state.abi && (\n        <div class=\"col m-2 mt-3\">\n          <label for=\"selectFunction\" class=\"mt-2\">\n            Functions\n          </label>\n          <select\n            class=\"form-select mt-2\"\n            id=\"selectFunction\"\n            onChange={(e) => {\n              const func = e.target.value;\n              const xs = JSON.parse(state.abi).filter((x) => x.name === func);\n              State.update({ selectedFunction: xs });\n              State.update({ inputs: xs[0].inputs });\n            }}\n          >\n            <option>constructor</option>\n            {state.functions}\n          </select>\n        </div>\n      )}\n      <div class=\"dropdown-divider\"></div>\n\n      {state.selectedFunction[0].stateMutability && (\n        <div class=\"col m-2 mt-5\">\n          <div class=\"card\">\n            <div class=\"card-body\">\n              <h5 class=\"card-title\">Form</h5>\n              <div class=\"mt-2\">\n                {state.inputs.map((input) => {\n                  const dataType = input.type;\n                  console.log(\"======\", dataType);\n\n                  if (dataType === \"address\") {\n                    return (\n                      <div class=\"mt-2\">\n                        <label for={input.name}>\n                          {capitalize(input.name)} ({input.type})\n                        </label>\n                        <input\n                          class=\"form-control mt-2\"\n                          type=\"text\"\n                          id={input.name}\n                          placeholder=\"Example: 0x00...00\"\n                        />\n                      </div>\n                    );\n                  }\n\n                  if (dataType === \"bytes\") {\n                    return (\n                      <div class=\"m-2\">\n                        <label for={input.name}>\n                          {capitalize(input.name)} ({input.type})\n                        </label>\n                        <input\n                          class=\"form-control mt-2\"\n                          type=\"text\"\n                          id={input.name}\n                          placeholder=\"Example: 0x12345\"\n                        />\n                      </div>\n                    );\n                  }\n\n                  if (dataType === \"uint256\") {\n                    return (\n                      <div class=\"mt-2\">\n                        <label for={input.name}>\n                          {capitalize(input.name)} ({input.type})\n                        </label>\n                        <input\n                          class=\"form-control mt-2\"\n                          type=\"number\"\n                          id={input.name}\n                          placeholder=\"Example: 1234\"\n                        />\n                      </div>\n                    );\n                  }\n                })}\n              </div>\n              <div class=\"col-sm\">\n                {state.selectedFunction[0].stateMutability === \"view\" && (\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-success\"\n                    onClick={handleView}\n                  >\n                    View\n                  </button>\n                )}\n\n                {(state.selectedFunction[0].stateMutability === \"nonPayable\" ||\n                  tate.selectedFunction[0].stateMutability === \"payable\") && (\n                  <button type=\"button\" class=\"btn btn-success\" d>\n                    Call\n                  </button>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/relayer.pagodaplatform.near/widget/AbiExplorer", "fact_widget_deployments_id": "88a449e633e4b91eaf4758a48c04f5b3", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 3}