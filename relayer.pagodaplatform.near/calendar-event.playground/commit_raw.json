{"tx_hash": "7DzcjdbWaBMN6j4UuCacymMhJhfew2FF7FtRqqnpSQmJ", "action_id_social": "Fk4RBU1puKMxWsqWRFwzgqRsNKqoSuQ4n699nSu8uR1M-0-widget", "block_id": 99626836, "block_timestamp": "2023-08-25T12:50:59.472Z", "signer_id": "relayer.pagodaplatform.near", "widget_name": "calendar-event.playground", "source_code": "const getCurrentDate = () => {\n  const currentDate = new Date();\n\n  const year = currentDate.getFullYear();\n  const month = (currentDate.getMonth() + 1).toString().padStart(2, \"0\"); // Months are 0-indexed\n  const day = currentDate.getDate().toString().padStart(2, \"0\");\n\n  return `${year}-${month}-${day}`;\n};\n\nconst getCurrentTime = () => {\n  const currentDate = new Date();\n\n  const hours = currentDate.getHours().toString().padStart(2, \"0\");\n  const minutes = currentDate.getMinutes().toString().padStart(2, \"0\");\n\n  return `${hours}:${minutes}`;\n};\n\nState.init({\n  id: \"\",\n  title: \"\",\n  description: {\n    content: \"\",\n  },\n  start: getCurrentDate(),\n  startTime: getCurrentTime(),\n  end: getCurrentDate(),\n  endTime: getCurrentTime(),\n  location: \"\",\n  link: \"\",\n  organizer: \"\",\n  isAllDay: false,\n  category: \"\",\n  logo: null,\n  background: null,\n  tempHash: \"\",\n  hashTags: [],\n\n  events: [],\n});\n\nconst onIdChange = ({ target }) => {\n  State.update({ id: target.value });\n};\n\nconst onTitleChange = ({ target }) => {\n  State.update({ title: target.value });\n};\n\nconst onDescriptionChange = (target) => {\n  State.update({ description: { content: target } });\n};\n\nconst onStartChange = ({ target }) => {\n  State.update({ start: target.value });\n  console.log(state.start);\n};\n\nconst onStartTimeChange = ({ target }) => {\n  State.update({ startTime: target.value });\n  console.log(state.startTime);\n};\n\nconst onEndChange = ({ target }) => {\n  State.update({ end: target.value });\n};\n\nconst onEndTimeChange = ({ target }) => {\n  State.update({ endTime: target.value });\n};\n\nconst onLocationChange = ({ target }) => {\n  State.update({ location: target.value });\n};\n\nconst onLinkChange = ({ target }) => {\n  State.update({ link: target.value });\n};\n\nconst onOrganizerChange = ({ target }) => {\n  State.update({ organizer: target.value });\n};\n\nconst onCategoryChange = ({ target }) => {\n  State.update({ category: target.value });\n};\n\nconst onIsAllDayChange = () => {\n  State.update({ isAllDay: !state.isAllDay });\n};\n\nconst onLogoChange = (target) => {\n  State.update({ logo: target });\n};\n\nconst onBackgroundChange = (target) => {\n  State.update({ background: target });\n};\n\nconst onTempHashChange = ({ target }) => {\n  State.update({ tempHash: target.value });\n};\n\nconst onHashTagAdd = () => {\n  State.update({ hashTags: [...state.hashTags, state.tempHash] });\n  State.update({ tempHash: \"\" });\n};\n\nconst clearFields = () => {\n  State.update({\n    id: \"\",\n    title: \"\",\n    description: {\n      content: \"\",\n    },\n    start: getCurrentDate(),\n    startTime: getCurrentTime(),\n    end: getCurrentDate(),\n    endTime: getCurrentTime(),\n    location: \"\",\n    link: \"\",\n    organizer: \"\",\n    isAllDay: false,\n    category: \"\",\n    logo: null,\n    background: null,\n    tempHash: \"\",\n    hashTags: [],\n  });\n};\n\nconst handleNewEvent = () => {\n  const newEvent = {\n    id: state.id,\n    title: state.title,\n    description: state.description,\n    start: state.start,\n    startTime: state.startTime,\n    end: state.end,\n    endTime: state.endTime,\n    location: state.location,\n    link: state.link,\n    organizer: state.organizer,\n    isAllDay: state.isAllDay,\n    category: state.category,\n    logo: state.logo,\n    background: state.background,\n    hashTags: state.hashTags,\n  };\n\n  State.update({ events: [...state.events, newEvent] });\n  clearFields();\n\n  console.log(state.events);\n};\n\nconst CreateEvent = () => {\n  return (\n    <div className=\"container\">\n      <h2>Create Event</h2>\n      <div>\n        <div className=\"mb-3\">\n          <label class=\"form-label\" for=\"id\">\n            Event ID\n          </label>\n          <input\n            class=\"form-control\"\n            id=\"id\"\n            value={state.id}\n            onChange={onIdChange}\n          />\n        </div>\n        <div className=\"mb-3\">\n          <label class=\"form-label\" for=\"title\">\n            Event Title\n          </label>\n          <input\n            class=\"form-control\"\n            id=\"title\"\n            value={state.title}\n            onChange={onTitleChange}\n          />\n        </div>\n        <div className=\"mb-3\">\n          <label class=\"form-label\" for=\"description\">\n            Event Description\n          </label>\n          <Widget\n            src=\"efiz.near/widget/every.markdown.create\"\n            props={{\n              data: state.description,\n              onChange: onDescriptionChange,\n            }}\n          />\n        </div>\n        <div className=\"d-flex justify-content-around gap-3 mb-3\">\n          <div className=\"flex-fill\">\n            <label for=\"start\">Event Start Date</label>\n            <input\n              class=\"form-control\"\n              id=\"start\"\n              type=\"date\"\n              value={state.start}\n              onChange={onStartChange}\n            />\n          </div>\n          <div className=\"flex-fill\">\n            <label for=\"startTime\">Event Start Time</label>\n            <input\n              class=\"form-control\"\n              id=\"startTime\"\n              type=\"time\"\n              value={state.startTime}\n              onChange={onStartTimeChange}\n            />\n          </div>\n        </div>\n        <div className=\"d-flex justify-content-around gap-3 mb-3\">\n          <div className=\"flex-fill\">\n            <label for=\"end\">Event End Date</label>\n            <input\n              class=\"form-control\"\n              id=\"end\"\n              type=\"date\"\n              value={state.end}\n              onChange={onEndChange}\n            />\n          </div>\n          <div className=\"flex-fill\">\n            <label for=\"endTime\">Event End Time</label>\n            <input\n              class=\"form-control\"\n              id=\"endTime\"\n              type=\"time\"\n              value={state.endTime}\n              onChange={onEndTimeChange}\n            />\n          </div>\n        </div>\n        <div className=\"mb-3\">\n          <label class=\"form-label\" for=\"location\">\n            Event Location\n          </label>\n          <input\n            class=\"form-control\"\n            id=\"location\"\n            value={state.location}\n            onChange={onLocationChange}\n          />\n        </div>\n        <div className=\"mb-3\">\n          <label class=\"form-label\" for=\"link\">\n            Event Link\n          </label>\n          <input\n            class=\"form-control\"\n            id=\"link\"\n            type=\"url\"\n            value={state.link}\n            onChange={onLinkChange}\n          />\n        </div>\n        <div className=\"mb-3\">\n          <label class=\"form-label\" for=\"organizer\">\n            Event Organizer\n          </label>\n          <input\n            class=\"form-control\"\n            id=\"organizer\"\n            value={state.organizer}\n            onChange={onOrganizerChange}\n          />\n        </div>\n        <div className=\"mb-3\">\n          <div class=\"form-check\">\n            <label class=\"form-check-label\" for=\"isAllDay\">\n              All Day Event\n            </label>\n            <input\n              value={state.isAllDay}\n              checked={state.isAllDay}\n              class=\"form-check-input\"\n              type=\"checkbox\"\n              id=\"isAllDay\"\n              onChange={onIsAllDayChange}\n            />\n          </div>\n        </div>\n        <div className=\"mb-3\">\n          <label class=\"form-label\" for=\"category\">\n            Event Category\n          </label>\n          <input\n            class=\"form-control\"\n            id=\"category\"\n            value={state.category}\n            onChange={onCategoryChange}\n          />\n        </div>\n        <div className=\"mb-3 d-flex flex-justify-content-around gap-3\">\n          <div className=\"flex-fill\">\n            <label>Logo Image</label>\n            <Widget\n              src=\"near/widget/ImageEditorTabs\"\n              props={{ image: state.logo, onChange: onLogoChange }}\n            />\n          </div>\n          <div className=\"flex-fill\">\n            <label>Background Image</label>\n            <Widget\n              src=\"near/widget/ImageEditorTabs\"\n              props={{ image: state.background, onChange: onBackgroundChange }}\n            />\n          </div>\n        </div>\n        <div className=\"mb-3\">\n          <label for=\"hashtags\">\n            <p>\n              Hashtags:{\" \"}\n              {state.hashTags.length !== 0 &&\n                state.hashTags.map((item) => (\n                  <>\n                    <span className=\"badge bg-secondary\">{item}</span>{\" \"}\n                  </>\n                ))}\n            </p>\n          </label>\n          <div className=\"d-flex gap-3\">\n            <input\n              id=\"hashtags\"\n              value={state.tempHash}\n              onChange={onTempHashChange}\n            />\n            <button onClick={onHashTagAdd}>Add</button>\n          </div>\n        </div>\n        <div className=\"mb-3\">\n          <button onClick={handleNewEvent}>Add Event</button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nreturn (\n  <div>\n    <CreateEvent />\n    <Widget\n      src=\"evrything.near/widget/Calendar\"\n      props={{ events: state.events }}\n    />\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/relayer.pagodaplatform.near/widget/calendar-event.playground", "fact_widget_deployments_id": "ca944cb9b22853e32a68e6dcc2294236", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}