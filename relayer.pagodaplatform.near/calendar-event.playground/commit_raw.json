{"tx_hash": "49jrorwT8QZ37HHeeR9Zjf26eLZnumcBsEfZ7o5LQ6ve", "action_id_social": "HG7U8QHcWE98QpwJcqjYi4SQJzvHBLxSE8Dkgq9GCgv4-0-widget", "block_id": 99478637, "block_timestamp": "2023-08-23T14:20:07.771Z", "signer_id": "relayer.pagodaplatform.near", "widget_name": "calendar-event.playground", "source_code": null, "metadata": null, "branch": {"draft": {"": "const getCurrentDateTime = () => {\n  // Get the current date and time\n  const currentDate = new Date();\n\n  // Extract individual components\n  const year = currentDate.getFullYear();\n  const month = (currentDate.getMonth() + 1).toString().padStart(2, \"0\"); // Months are 0-indexed\n  const day = currentDate.getDate().toString().padStart(2, \"0\");\n  const hours = currentDate.getHours().toString().padStart(2, \"0\");\n  const minutes = currentDate.getMinutes().toString().padStart(2, \"0\");\n\n  // Format the components as a string\n  return `${year}-${month}-${day}T${hours}:${minutes}`;\n};\n\nState.init({\n  title: \"\",\n  url: \"\",\n  startDate: getCurrentDateTime(),\n  endDate: getCurrentDateTime(),\n  allDay: false,\n  events: [],\n});\n\nconst addEvent = () => {\n  const onTitleChange = ({ target }) => {\n    State.update({ title: target.value });\n  };\n\n  const onUrlChange = ({ target }) => {\n    State.update({ url: target.value });\n  };\n\n  const onStartChange = ({ target }) => {\n    State.update({ startDate: target.value });\n  };\n\n  const onEndChange = ({ target }) => {\n    State.update({ endDate: target.value });\n  };\n\n  const onAllDayChange = () => {\n    State.update({ allDay: !state.allDay });\n  };\n\n  const handleSubmit = () => {\n    const newEvent = {\n      title: state.title,\n      url: state.url,\n      start: state.startDate,\n      end: state.endDate,\n      allDay: allDay,\n    };\n\n    State.update({\n      title: \"\",\n      url: \"\",\n      startDate: getCurrentDateTime(),\n      endDate: getCurrentDateTime(),\n      allDay: false,\n      events: [...state.events, newEvent],\n    });\n  };\n\n  const handleClear = () => {\n    State.update({\n      title: \"\",\n      url: \"\",\n      startDate: getCurrentDateTime(),\n      endDate: getCurrentDateTime(),\n      allDay: false,\n      events: [],\n    });\n  };\n\n  return (\n    <div class=\"border p-4\">\n      <div class=\"mb-3\">\n        <label class=\"form-label\" for=\"title\">\n          Event Name\n        </label>\n        <input\n          class=\"form-control\"\n          id=\"title\"\n          name=\"title\"\n          type=\"text\"\n          placeholder=\"Event name\"\n          value={state.title}\n          onChange={onTitleChange}\n        />\n      </div>\n      <div class=\"mb-3\">\n        <label class=\"form-label\" for=\"url\">\n          Event URL\n        </label>\n        <input\n          class=\"form-control\"\n          id=\"url\"\n          name=\"url\"\n          type=\"url\"\n          placeholder=\"Event Url\"\n          value={state.url}\n          onChange={onUrlChange}\n        />\n      </div>\n      <div class=\"mb-3\">\n        <label class=\"form-label\" for=\"start-date\">\n          Start Date\n        </label>\n        <input\n          class=\"form-control\"\n          id=\"start-date\"\n          name=\"start-date\"\n          type=\"datetime-local\"\n          value={state.startDate}\n          onChange={onStartChange}\n        />\n      </div>\n      <div class=\"mb-3\">\n        <label class=\"form-label\" for=\"end-date\">\n          End Date\n        </label>\n        <input\n          class=\"form-control\"\n          id=\"end-date\"\n          name=\"end-date\"\n          type=\"datetime-local\"\n          value={state.endDate}\n          onChange={onEndChange}\n        />\n      </div>\n      <div class=\"form-check mb-3\">\n        <input\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          value={state.allDay}\n          onChange={onAllDayChange}\n          id=\"all-day\"\n        />\n        <label class=\"form-check-label\" for=\"all-day\">\n          All day event\n        </label>\n      </div>\n      <div>\n        <button onClick={handleSubmit}>Add Event</button>\n        <button onClick={handleClear}>Clear All Events</button>\n      </div>\n    </div>\n  );\n};\n\nreturn (\n  <div>\n    <addEvent />\n    <Widget\n      src=\"evrything.near/widget/Calendar\"\n      props={{ events: state.events }}\n    />\n  </div>\n);\n"}}, "widget_modules_used": null, "widget_url": "https://near.social/#/relayer.pagodaplatform.near/widget/calendar-event.playground", "fact_widget_deployments_id": "237bebd8f1867488676e5abe22451f24", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 1}