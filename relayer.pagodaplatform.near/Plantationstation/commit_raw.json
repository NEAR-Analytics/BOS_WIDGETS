{"tx_hash": "AmjUXFTRbHL33PktVhPZCLQ9n2ERz5EsmJ648zw4Gtkn", "action_id_social": "378YAPqeks7xABgkPYgiB9gMAJRADzupaqsh9VhDDLvn-0-widget", "block_id": 93897601, "block_timestamp": "2023-06-10T15:28:35.643Z", "signer_id": "relayer.pagodaplatform.near", "widget_name": "Plantationstation", "source_code": "const styles = {};\n\nconst Theme = styled.div`\n  /* fonts */\n  --font-inter: Inter;\n\n  /* font sizes */\n  --font-size-sm: 14px;\n  --font-size-base: 16px;\n  --font-size-xl: 20px;\n\n  /* Colors */\n  --color-gray-100: #151515;\n  --color-gray-200: #111;\n  --color-darkslategray: #303030;\n  --color-darkgray: #999;\n  --color-white: #fff;\n  --color-black: #000;\n  --color-dimgray: #666;\n\n  /* Gaps */\n  --gap-base: 16px;\n  --gap-5xl: 24px;\n\n  /* Paddings */\n  --padding-xs: 12px;\n  --padding-base: 16px;\n  --padding-5xs: 8px;\n\n  /* border radiuses */\n  --br-xs: 12px;\n  --br-5xl: 24px;\n\n.frameChild {\n  position: relative;\n  width: 28.87px;\n  height: 32px;\n  z-index: 0;\n}\n.plantationstation {\n  position: relative;\n  z-index: 1;\n}\n.frameItem {\n  position: absolute;\n  margin: 0 !important;\n  top: 5.11px;\n  left: 3.54px;\n  border-radius: 50%;\n  background-color: var(--color-gray-100);\n  width: 21.78px;\n  height: 21.78px;\n  z-index: 2;\n}\n.groupParent {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: flex-start;\n  gap: 4px;\n}\n.groupParent,\n.home {\n  position: relative;\n}\n.frameGroup,\n.homeParent {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: flex-start;\n}\n.homeParent {\n  gap: 21px;\n  font-size: var(--font-size-base);\n}\n.frameGroup {\n  gap: 48px;\n}\n.adamSmith {\n  position: relative;\n  font-weight: 500;\n}\n.adamSmithWrapper {\n  border-radius: 8px;\n  border: 1px solid var(--color-darkgray);\n  display: flex;\n  flex-direction: row;\n  padding: var(--padding-5xs) var(--padding-base);\n  align-items: flex-start;\n  justify-content: flex-start;\n}\n.settings {\n  position: relative;\n  font-size: var(--font-size-base);\n}\n.frameContainer,\n.frameParent {\n  display: flex;\n  flex-direction: column;\n}\n.frameContainer {\n  align-items: flex-start;\n  justify-content: flex-start;\n  gap: var(--gap-base);\n  color: var(--color-darkgray);\n}\n.frameParent {\n  position: absolute;\n  top: 0;\n  left: 0;\n  background-color: var(--color-gray-100);\n  width: 200px;\n  height: 1024px;\n  padding: 32px 24px;\n  box-sizing: border-box;\n  align-items: center;\n  justify-content: space-between;\n}\n.home1 {\n  position: absolute;\n  top: 56px;\n  left: 240px;\n  font-size: 24px;\n  color: var(--color-dimgray);\n}\n.mintNewPlantWrapper,\n.yourPlantsParent {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n}\n.mintNewPlantWrapper {\n  border-radius: var(--br-xs);\n  background-color: var(--color-white);\n  width: 167px;\n  height: 50px;\n  padding: var(--padding-xs) var(--padding-base);\n  box-sizing: border-box;\n  justify-content: center;\n  font-size: var(--font-size-base);\n  color: var(--color-black);\n}\n.yourPlantsParent {\n  position: absolute;\n  top: 102px;\n  left: 240px;\n  width: 1160px;\n  justify-content: space-between;\n  font-size: 32px;\n}\n.growingPlantsWrapper {\n  border-radius: 16px;\n  background-color: rgba(255, 255, 255, 0.2);\n  display: flex;\n  flex-direction: row;\n  padding: var(--padding-xs) var(--padding-base);\n  align-items: flex-start;\n  justify-content: flex-start;\n}\n.readyToHarvest {\n  position: relative;\n  color: var(--color-dimgray);\n}\n.frameParent1 {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  gap: var(--gap-5xl);\n}\n.instanceChild {\n  align-self: stretch;\n  flex: 1;\n  position: relative;\n  border-radius: var(--br-5xl);\n}\n.growing43Wrapper,\n.x786c65d37e5c2Parent {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n}\n.x786c65d37e5c2Parent {\n  align-self: stretch;\n  justify-content: space-between;\n}\n.growing43Wrapper {\n  flex: 1;\n  border-radius: var(--br-xs);\n  background-color: var(--color-darkslategray);\n  padding: var(--padding-xs) var(--padding-base);\n  justify-content: center;\n}\n.frameWrapper {\n  align-self: stretch;\n  display: flex;\n  flex-direction: row;\n  align-items: flex-start;\n  justify-content: flex-start;\n}\n.rectangleParent {\n  cursor: pointer;\n}\n.rectangleGroup,\n.rectangleParent {\n  flex: 1;\n  height: 401px;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: flex-start;\n  gap: var(--gap-base);\n}\n.instanceParent {\n  width: 1160px;\n  height: 365.5px;\n  display: flex;\n  flex-direction: row;\n  gap: var(--gap-5xl);\n  font-size: var(--font-size-sm);\n  color: var(--color-darkgray);\n}\n.dashboardInner,\n.frameDiv,\n.instanceParent {\n  align-items: flex-start;\n  justify-content: flex-start;\n}\n.frameDiv {\n  display: flex;\n  flex-direction: column;\n  gap: 32px;\n}\n.dashboardInner {\n  position: absolute;\n  top: 203px;\n  left: 240px;\n  font-size: var(--font-size-xl);\n}\n.dashboardInner,\n.rectangleParent2,\n.wrapper {\n  display: flex;\n  flex-direction: column;\n}\n.wrapper {\n  position: absolute;\n  top: 204px;\n  left: 605px;\n  border-radius: 30px;\n  background-color: var(--color-white);\n  width: 24px;\n  height: 24px;\n  padding: var(--padding-5xs);\n  box-sizing: border-box;\n  align-items: center;\n  justify-content: center;\n  font-size: var(--font-size-base);\n  color: var(--color-black);\n}\n.rectangleParent2 {\n  flex: 1;\n  height: 531px;\n  align-items: flex-start;\n  justify-content: flex-start;\n  gap: var(--gap-base);\n}\n.dashboard,\n.dashboardChild {\n  background-color: var(--color-gray-200);\n  height: 1024px;\n}\n.dashboardChild {\n  position: absolute;\n  top: 0;\n  left: 1464px;\n  width: 504px;\n  display: flex;\n  flex-direction: row;\n  padding: 40px;\n  box-sizing: border-box;\n  align-items: flex-start;\n  justify-content: flex-start;\n  color: var(--color-darkgray);\n}\n.dashboard {\n  position: relative;\n  width: 100%;\n  overflow: hidden;\n  text-align: left;\n  font-size: var(--font-size-sm);\n  color: var(--color-white);\n  font-family: var(--font-inter);\n}`;\n\nif (\n  state.chainId === undefined &&\n  ethers !== undefined &&\n  Ethers.send(\"eth_requestAccounts\", [])[0]\n) {\n  Ethers.provider()\n    .getNetwork()\n    .then((chainIdData) => {\n      if (chainIdData?.chainId) {\n        State.update({ chainId: chainIdData.chainId });\n      }\n    });\n}\n\n// FETCH GROW REGISTRY ABI\n\nconst growContract = \"0x31D3202d8744B16A120117A053459DDFAE93c855\";\n\nconst growAbi = fetch(\n  \"https://raw.githubusercontent.com/8ball030/plantation_station/main/abis/GrowRegistry.json\"\n);\nif (!growAbi.ok) {\n  return \"Loading\";\n}\n\nconst iface = new ethers.utils.Interface(growAbi.body);\n\n// HELPER FUNCTIONS\n\nconst getStakedBalance = (receiver) => {\n  const encodedData = iface.encodeFunctionData(\"balanceOf\", [receiver]);\n\n  return Ethers.provider()\n    .call({\n      to: lidoContract,\n      data: encodedData,\n    })\n    .then((rawBalance) => {\n      const receiverBalanceHex = iface.decodeFunctionResult(\n        \"balanceOf\",\n        rawBalance\n      );\n\n      return Big(receiverBalanceHex.toString())\n        .div(Big(10).pow(tokenDecimals))\n        .toFixed(2)\n        .replace(/\\d(?=(\\d{3})+\\.)/g, \"$&,\");\n    });\n};\n\n// DETECT SENDER\n\nif (state.sender === undefined) {\n  const accounts = Ethers.send(\"eth_requestAccounts\", []);\n  if (accounts.length) {\n    State.update({ sender: accounts[0] });\n    console.log(\"set sender\", accounts[0]);\n  }\n}\n\n//if (!state.sender)  return \"Please login first\";\n\n// FETCH SENDER BALANCE\n\nif (state.balance === undefined && state.sender) {\n  Ethers.provider()\n    .getBalance(state.sender)\n    .then((balance) => {\n      State.update({ balance: Big(balance).div(Big(10).pow(18)).toFixed(2) });\n    });\n}\n\n// FETCH SENDER STETH BALANCE\n\nif (state.stakedBalance === undefined && state.sender) {\n  getStakedBalance(state.sender).then((stakedBalance) => {\n    State.update({ stakedBalance });\n  });\n}\n\n// FETCH TX COST\n\nconst mintGrow = () => {\n  const account = Ethers.provider().getSigner();\n  const growRegistry = new ethers.Contract(growContract, growAbi.body, account);\n\n  const hashIPSF = \"0x\" + \"5\".repeat(64);\n  growRegistry\n    .create(account.address, account.address, hashIPSF)\n    .then((transactionHash) => {\n      console.log(\"transactionHash is \" + transactionHash);\n    });\n};\n\nconsole.log(\"txcost1\", state.txCost);\nif (state.txCost === undefined) {\n  const gasEstimate = ethers.BigNumber.from(1875000);\n  const gasPrice = ethers.BigNumber.from(1500000000);\n\n  const gasCostInWei = gasEstimate.mul(gasPrice);\n  const gasCostInEth = ethers.utils.formatEther(gasCostInWei);\n\n  let responseGql = fetch(\n    \"https://api.thegraph.com/subgraphs/name/uniswap/uniswap-v2\",\n    {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        query: `{\n          bundle(id: \"1\" ) {\n            ethPrice\n          }\n        }`,\n      }),\n    }\n  );\n\n  if (!responseGql) return \"\";\n\n  const ethPriceInUsd = responseGql.body.data.bundle.ethPrice;\n\n  const txCost = Number(gasCostInEth) * Number(ethPriceInUsd);\n\n  State.update({ txCost: `$${txCost.toFixed(2)}` });\n  console.log(\"txcost2\", txCost);\n}\nconsole.log(\"txcost3\", state.txCost, mintGrow);\n\n// OUTPUT UI\n\nconst getSender = () => {\n  return !state.sender\n    ? \"\"\n    : state.sender.substring(0, 6) +\n        \"...\" +\n        state.sender.substring(state.sender.length - 4, state.sender.length);\n};\n\nreturn (\n  <Theme>\n    <div className=\"dashboard\">\n      <div className=\"frameParent\">\n        <div className=\"frameGroup\">\n          <div className=\"groupParent\">\n            <img className=\"frameChild\" alt=\"\" src=\"/group-1.svg\" />\n            <b className=\"plantationstation\">{`PlantationStation `}</b>\n            <div className=\"frameItem\" />\n          </div>\n          <div className=\"homeParent\">\n            <div className=\"home\">Home</div>\n            <div className=\"home\">Analytics</div>\n            <div className=\"home\">Marketplace</div>\n          </div>\n        </div>\n        <div className=\"frameContainer\">\n          <div className=\"adamSmithWrapper\">\n            <div className=\"adamSmith\">Adam Smith</div>\n          </div>\n          <div className=\"settings\">Settings</div>\n        </div>\n      </div>\n      <div className=\"home1\">Home</div>\n\n      <div className=\"yourPlantsParent\">\n        {!!state.sender ? (\n          <button\n            class=\"LidoStakeFormSubmitContainer\"\n            onClick={() => mintGrow()}\n          >\n            <span>Mint</span>\n          </button>\n        ) : (\n          <Web3Connect\n            className=\"LidoStakeFormSubmitContainer\"\n            connectLabel=\"Connect with Web3\"\n          />\n        )}\n        <div className=\"home\">Your plants</div>\n        <div className=\"mintNewPlantWrapper\">\n          {!!state.sender ? (\n            <button class=\"adamSmith\" onClick={() => mintGrow()}>\n              <span>Mint a plant</span>\n            </button>\n          ) : (\n            <Web3Connect\n              className=\"adamSmith\"\n              connectLabel=\"Connect with Web3\"\n            />\n          )}\n        </div>\n      </div>\n      <div className=\"dashboardInner\">\n        <div className=\"frameDiv\">\n          <div className=\"frameParent1\">\n            <div className=\"growingPlantsWrapper\">\n              <div className=\"home\">Growing plants</div>\n            </div>\n            <div className=\"readyToHarvest\">Ready to harvest</div>\n          </div>\n          <div className=\"instanceParent\">\n            <div className=\"rectangleParent\" onClick={onFrameContainer13Click}>\n              <div className=\"instanceChild\" />\n              <div className=\"settings\">Plant name</div>\n              <div className=\"x786c65d37e5c2Parent\">\n                <div className=\"home\">0x786c65d....37e5c2</div>\n                <div className=\"home\">Show all</div>\n              </div>\n              <div className=\"frameWrapper\">\n                <div className=\"growing43Wrapper\">\n                  <div className=\"adamSmith\">Growing (43%)</div>\n                </div>\n              </div>\n            </div>\n            <div className=\"rectangleGroup\">\n              <div className=\"instanceChild\" />\n              <div className=\"settings\">Plant name</div>\n              <div className=\"x786c65d37e5c2Parent\">\n                <div className=\"home\">0x786c65d....37e5c2</div>\n                <div className=\"home\">Show all</div>\n              </div>\n              <div className=\"frameWrapper\">\n                <div className=\"growing43Wrapper\">\n                  <div className=\"adamSmith\">Growing (43%)</div>\n                </div>\n              </div>\n            </div>\n            <div className=\"rectangleGroup\">\n              <div className=\"instanceChild\" />\n              <div className=\"settings\">Plant name</div>\n              <div className=\"x786c65d37e5c2Parent\">\n                <div className=\"home\">0x786c65d....37e5c2</div>\n                <div className=\"home\">Show all</div>\n              </div>\n              <div className=\"frameWrapper\">\n                <div className=\"growing43Wrapper\">\n                  <div className=\"adamSmith\">Growing (43%)</div>\n                </div>\n              </div>\n            </div>\n            <div className=\"rectangleGroup\">\n              <div className=\"instanceChild\" />\n              <div className=\"settings\">Plant name</div>\n              <div className=\"x786c65d37e5c2Parent\">\n                <div className=\"home\">0x786c65d....37e5c2</div>\n                <div className=\"home\">Show all</div>\n              </div>\n              <div className=\"frameWrapper\">\n                <div className=\"growing43Wrapper\">\n                  <div className=\"adamSmith\">Growing (43%)</div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"wrapper\">\n        <div className=\"home\">4</div>\n      </div>\n      <div className=\"dashboardChild\">\n        <div className=\"rectangleParent2\">\n          <div className=\"instanceChild\" />\n          <div className=\"settings\">Plant name</div>\n          <div className=\"x786c65d37e5c2Parent\">\n            <div className=\"home\">0x786c65d....37e5c2</div>\n            <div className=\"home\">Show all</div>\n          </div>\n          <div className=\"frameWrapper\">\n            <div className=\"growing43Wrapper\">\n              <div className=\"adamSmith\">Growing (43%)</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </Theme>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/relayer.pagodaplatform.near/widget/Plantationstation", "fact_widget_deployments_id": "e10f7f09d2be32158bbf6d459c3fd9b4", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 3}