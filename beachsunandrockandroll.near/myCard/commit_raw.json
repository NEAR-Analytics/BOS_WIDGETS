{"tx_hash": "BQFShEVnS3Ei7qp3qM4TxT6wNLvbouZFopmKozj68214", "action_id_social": "Fp3TGmnzeYCvxSAkWzEadf8y8VGp9KmUH1b2FFg14CvY-0-widget", "block_id": 118440737, "block_timestamp": "2024-05-07T14:28:49.425Z", "signer_id": "beachsunandrockandroll.near", "widget_name": "myCard", "source_code": "const { Tailwind } = VM.require(\"uiisnear.near/widget/tailwind\");\nconst { Button, ButtonConf } = VM.require(\"uiisnear.near/widget/button\");\n\nconst [toastDestructive, setToastDestructive] = useState(\"\");\n\nconst baseToast =\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-2 overflow-hidden rounded-md border p-4 pr-6 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\";\n\nconst variantDefault = \"border bg-background text-foreground\";\n\nconst ToastConf = ({ className, variant, output }) => {\n  const srcDoc = `\n      <script type=\"module\"> \n        import clsx from 'https://cdn.jsdelivr.net/npm/clsx@2.1.1/+esm'\n        import { twMerge } from 'https://cdn.jsdelivr.net/npm/tailwind-merge@2.3.0/+esm'\n        import { cva } from 'https://cdn.jsdelivr.net/npm/class-variance-authority@0.7.0/+esm'\n        \n        const toastVariants = cva(\n          \"${baseToast}\",\n          {\n            variants: {\n              variant: {\n                default: \"${variantDefault}\",\n                destructive:\n                  \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n              },\n            },\n            defaultVariants: {\n              variant: \"default\",\n            },\n          }\n        )\n  \n        window.addEventListener(\"message\", ({ data }) => {\n          try {\n            event.source.postMessage(twMerge(clsx(toastVariants(data))), \"*\");\n          } catch (e) {}\n        }, false);\n      </script>\n    `;\n\n  return (\n    <iframe\n      className=\"d-none\"\n      srcDoc={srcDoc}\n      message={{ className, variant }}\n      onMessage={output}\n    />\n  );\n};\n\nconst ToastProvider = ({ children, ...props }) => (\n  <Toast.Provider ref=\"forwardedRef\" {...props}>\n    {children}\n  </Toast.Provider>\n);\n\nconst toastViewportClassname =\n  \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\";\n\nconst ToastViewport = ({ className, children, ...props }) => (\n  <Toast.Viewport\n    ref=\"forwardedRef\"\n    className={className ?? toastViewportClassname}\n    {...props}\n  >\n    {children}\n  </Toast.Viewport>\n);\n\nconst toastClassnameDefault = `${baseToast} ${variantDefault}`;\n\nconst ToastRoot = ({ className, children, ...props }) => (\n  <Toast.Root\n    ref=\"forwardedRef\"\n    className={className ?? toastClassnameDefault}\n    {...props}\n  >\n    {children}\n  </Toast.Root>\n);\n\nconst toastActionClassname =\n  \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium transition-colors hover:bg-secondary focus:outline-none focus:ring-1 focus:ring-ring disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\";\n\nconst ToastAction = ({ className, children, ...props }) => (\n  <Toast.Action\n    ref=\"forwardedRef\"\n    className={className ?? toastActionClassname}\n    {...props}\n  >\n    {children}\n  </Toast.Action>\n);\n\nconst toastCloseClassname =\n  \"absolute right-1 top-1 rounded-md p-1 text-foreground opacity-10 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-1 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\";\n\nconst ToastClose = ({ className, ...props }) => (\n  <Toast.Close\n    ref=\"forwardedRef\"\n    className={className ?? toastCloseClassname}\n    toast-close=\"\"\n    {...props}\n  >\n    <i class=\"bi bi-x h-4 w-4\"></i>\n  </Toast.Close>\n);\n\nconst toastTitleClassname = \"text-sm font-semibold [&+div]:text-xs\";\n\nconst ToastTitle = ({ className, children, ...props }) => (\n  <Toast.Title\n    ref=\"forwardedRef\"\n    className={className ?? toastTitleClassname}\n    {...props}\n  >\n    {children}\n  </Toast.Title>\n);\n\nconst toastDescriptionClassname = \"text-sm opacity-90\";\n\nconst ToastDescription = ({ className, children, ...props }) => (\n  <Toast.Description\n    ref=\"forwardedRef\"\n    className={className ?? toastDescriptionClassname}\n    {...props}\n  >\n    {children}\n  </Toast.Description>\n);\n\nconst Toaster = ({ toasts, className }) => (\n  <ToastProvider swipeDirection=\"left\">\n    {toasts?.map(({ id, title, description, action, ...props }) => (\n      <ToastRoot key={id} className={className} {...props}>\n        <div className=\"grid gap-1\">\n          {title && <ToastTitle>{title}</ToastTitle>}\n          {description && <ToastDescription>{description}</ToastDescription>}\n        </div>\n        {action}\n        <ToastClose />\n      </ToastRoot>\n    ))}\n    <ToastViewport />\n  </ToastProvider>\n);\n\nconst [toasts, setToasts] = useState([]);\n\nconst handleOpen = () => {\n  const timer = setTimeout(\n    () => setToasts((t) => [{ ...t, open: false }]),\n    5000\n  );\n  return () => clearTimeout(timer);\n};\n\nif (Tailwind == undefined) return \"\";\n\nif (toastDestructive === \"\")\n  return <ToastConf output={setToastDestructive} variant=\"destructive\" />;\n\nreturn (\n  <Tailwind>\n    <Toaster toasts={toasts} className={toastDestructive} />\n    <div className=\"flex mx-auto w-max pt-48 h-screen\">\n      <Button\n        onClick={() => {\n          setToasts([\n            {\n              title: \"Scheduled: Catch up \",\n              description: \"Friday, February 10, 2023 at 5:57 PM\",\n              open,\n              onOpenChange: setOpen,\n              action: (\n                <ToastAction altText=\"Goto schedule to undo\">Undo</ToastAction>\n              ),\n            },\n          ]);\n          handleOpen();\n        }}\n      >\n        Add to calendar\n      </Button>\n    </div>\n  </Tailwind>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/beachsunandrockandroll.near/widget/myCard", "fact_widget_deployments_id": "f4e9d1732c7ff56500520f75f25ea8c4", "inserted_timestamp": "2024-05-07T15:40:01.544Z", "modified_timestamp": "2024-05-07T16:41:50.514Z", "__row_index": 0}