{"tx_hash": "6aGiivd4BjGR77587xctKcNnNMGUb7hF7FatRY31fLeE", "action_id_social": "F6aqDR5LdsYobSKMhvLL9tBUBXuZpjRsY35TJA9G2zo7-0-widget", "block_id": 106019762, "block_timestamp": "2023-11-19T01:12:26.918Z", "signer_id": "beachsunandrockandroll.near", "widget_name": "sheet", "source_code": "const sheetIdx = props.sheetIdx || 0;\nconst back = props.back;\n\nconst { getNormalDate, ppdContract, ppdAbi, studyType, focusType } = VM.require(\n  \"beachsunandrockandroll.near/widget/utils\"\n);\nconst [addRecord, setAddRecord] = useState(false);\nconst [showImg, setShowImg] = useState(false);\n\nState.init({\n  userSheets: [],\n});\n\nconst getUserSheets = () => {\n  if (ppdContract == undefined) return;\n\n  const ppd = new ethers.Contract(\n    ppdContract,\n    ppdAbi.body,\n    Ethers.provider().getSigner()\n  );\n\n  ppd.getUserIdx().then((userIdx) => {\n    ppd.getUserSheets(parseInt(userIdx.toString())).then((userSheets) => {\n      userSheets.map((userSheet, i) => {\n        if (i === sheetIdx) {\n          const sheet = {\n            name: userSheet[0],\n            createdAt: getNormalDate(userSheet[1]),\n            difficulty: userSheet[2],\n            dataUri: userSheet[3],\n          };\n          State.update({ sheet });\n        }\n      });\n    });\n  });\n};\n\nconst getRecordsBySheet = () => {\n  const ppd = new ethers.Contract(\n    ppdContract,\n    ppdAbi.body,\n    Ethers.provider().getSigner()\n  );\n\n  ppd.getUserIdx().then((userIdx) => {\n    ppd.getRecordsBySheet(Big(userIdx).toFixed(), sheetIdx).then((res) => {\n      const records = res.map((r) => ({\n        phraseNum: Big(r[0]).toFixed(),\n        subPhraseNum: Big(r[1]).toFixed(),\n        qtyMinutes: r[2],\n        studyType: r[3],\n        focusType: r[4],\n        isAllSheet: r[5],\n        createdAt: r[6],\n      }));\n\n      State.update({ records });\n    });\n  });\n};\n\nif (state.sender === undefined) {\n  const accounts = Ethers.send(\"eth_requestAccounts\", []);\n  if (accounts.length) {\n    State.update({ sender: accounts[0] });\n    getUserSheets();\n    getRecordsBySheet();\n  }\n}\n\nreturn (\n  <div class=\"px-3 py-5\">\n    <a href=\"#\" onClick={back} class=\"text-underline pb-4\">\n      &lt;- Back\n    </a>\n    <h2>{state.sheet.name}</h2>\n    <p>Created At: {state.sheet.createdAt}</p>\n    {!addRecord && (\n      <>\n        {state.sheet.dataUri && (\n          <a href=\"#\" onClick={() => setShowImg(!showImg)}>\n            Show/Hide Sheet\n          </a>\n        )}\n        <div className=\"mt-2\">\n          {showImg && state.sheet.dataUri && (\n            <img\n              src={`https://ipfs.near.social/ipfs/${state.sheet.dataUri}`}\n              alt=\"uploaded\"\n            />\n          )}\n        </div>\n        <button\n          onClick={() => {\n            setAddRecord(true);\n            setSheetIdx(i);\n          }}\n        >\n          New Record\n        </button>\n      </>\n    )}\n    {addRecord ? (\n      <div class=\"pt-2 pb-2\">\n        <h5 class=\"text-center pb-2\">Fill the Form to Add a new Record</h5>\n        <Widget\n          src={`beachsunandrockandroll.near/widget/addRecord`}\n          props={{\n            setAddRecord,\n            sheetIdx,\n          }}\n        />\n      </div>\n    ) : (\n      state.records && (\n        <>\n          <h4 class=\"text-center pt-4\">Record List</h4>\n          <div class=\"mt-4\">\n            <table className=\"table table-bordered table-hover table-responsive bg-light p-3 shadow-lg rounded\">\n              <thead className=\"thead-dark\">\n                <tr>\n                  <th scope=\"col\">Phrase Number</th>\n                  <th scope=\"col\">SubPhrase Number</th>\n                  <th scope=\"col\">Qty Minutes</th>\n                  <th scope=\"col\">Study Type</th>\n                  <th scope=\"col\">Focus Type</th>\n                  <th scope=\"col\">Is All Sheet?</th>\n                  <th scope=\"col\">Created at</th>\n                </tr>\n              </thead>\n              <tbody>\n                {state.records\n                  .sort((a, b) => b.createdAt - a.createdAt)\n                  .map((record) => {\n                    return (\n                      <tr>\n                        <td>{record.phraseNum}</td>\n                        <td>{record.subPhraseNum}</td>\n                        <td>{record.qtyMinutes}</td>\n                        <td>{studyType[record.studyType]}</td>\n                        <td>{focusType[record.focusType]}</td>\n                        <td>{record.isAllSheet ? \"Yes\" : \"No\"}</td>\n                        <td>{getNormalDate(record.createdAt)}</td>\n                      </tr>\n                    );\n                  })}\n              </tbody>\n            </table>\n          </div>\n        </>\n      )\n    )}\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/beachsunandrockandroll.near/widget/sheet", "fact_widget_deployments_id": "120b648574d365c2e4bcb77e6117ff13", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}