{"tx_hash": "Gpo9VshggQ6YoDrMPkeocU6zK8cssNJKNbUMcGBvosr2", "action_id_social": "3EmwjS1h2ASeifuVuV3JxwfhQznbLeFMHkejuxiho6uq-0-widget", "block_id": 105986728, "block_timestamp": "2023-11-18T15:43:01.639Z", "signer_id": "beachsunandrockandroll.near", "widget_name": "sheet", "source_code": "const sheetIdx = props.sheetIdx || 0;\nconst back = props.back;\n\nconst { getNormalDate, ppdContract, ppdAbi } = VM.require(\n  \"beachsunandrockandroll.near/widget/utils\"\n);\nconst [addRecord, setAddRecord] = useState(false);\n\nState.init({\n  userSheets: [],\n});\n\nconst getUserSheets = () => {\n  if (ppdContract == undefined) return;\n\n  const ppd = new ethers.Contract(\n    ppdContract,\n    ppdAbi.body,\n    Ethers.provider().getSigner()\n  );\n\n  ppd.getUserIdx().then((userIdx) => {\n    ppd.getUserSheets(parseInt(userIdx.toString())).then((userSheets) => {\n      userSheets.map((userSheet, i) => {\n        if (i === sheetIdx) {\n          const sheet = {\n            name: userSheet[0],\n            createdAt: getNormalDate(userSheet[1]),\n            difficulty: userSheet[2],\n            dataUri: userSheet[3],\n          };\n          State.update({ sheet });\n        }\n      });\n    });\n  });\n};\n\nconst getRecordsBySheet = () => {\n  const ppd = new ethers.Contract(\n    ppdContract,\n    ppdAbi.body,\n    Ethers.provider().getSigner()\n  );\n\n  ppd.getUserIdx().then((userIdx) => {\n    ppd.getRecordsBySheet(Big(userIdx).toFixed(), sheetIdx).then((res) => {\n      const records = res.map((r) => ({\n        phraseNum: Big(r[0]).toFixed(),\n        subPhraseNum: Big(r[1]).toFixed(),\n        qtyMinutes: r[2],\n        studyType: r[3],\n        focusType: r[4],\n        isAllSheet: r[5],\n        createdAt: r[6],\n      }));\n\n      State.update({ records });\n    });\n  });\n};\n\nif (state.sender === undefined) {\n  const accounts = Ethers.send(\"eth_requestAccounts\", []);\n  if (accounts.length) {\n    State.update({ sender: accounts[0] });\n    getUserSheets();\n    getRecordsBySheet();\n  }\n}\n\nreturn (\n  <>\n    <h2>{state.sheet.name}</h2>\n    <button onClick={back}>Back</button>\n    <button\n      onClick={() => {\n        setAddRecord(true);\n        setSheetIdx(i);\n      }}\n    >\n      New Record\n    </button>\n\n    {addRecord ? (\n      <>\n        <Widget\n          src={`beachsunandrockandroll.near/widget/addRecord`}\n          props={{\n            setAddRecord,\n            sheetIdx,\n          }}\n        />\n      </>\n    ) : (\n      state.records &&\n      state.records.map((record) => {\n        return (\n          <>\n            <div>Phrase Number: {record.phraseNum}</div>\n            <div>SubPhrase Number: {record.subPhraseNum}</div>\n            <div>Qty Minutes: {record.qtyMinutes}</div>\n            <div>Study Type: {record.studyType}</div>\n            <div>Focus Type: {record.focusType}</div>\n            <div>is all sheet?: {record.isAllSheet ? \"yes\" : \"no\"}</div>\n\n            <div>Created at: {getNormalDate(record.createdAt)}</div>\n          </>\n        );\n      })\n    )}\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/beachsunandrockandroll.near/widget/sheet", "fact_widget_deployments_id": "a1936b5902f4ee811f595dd53ed24b40", "inserted_timestamp": "2023-11-18T17:38:22.624Z", "modified_timestamp": "2023-11-18T17:38:22.624Z", "__row_index": 1}