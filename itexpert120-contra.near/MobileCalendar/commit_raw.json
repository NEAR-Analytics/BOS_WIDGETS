{"tx_hash": "Hin1uo49g4yerE1U6JgusMDPKWkh1EQrvivccGdNfqpg", "action_id_social": "42oXLbayroKncSvFbteyxwCgUs9g2wa5Wi2n8ppr18Vs-0-widget", "block_id": 101200518, "block_timestamp": "2023-09-15T19:18:05.777Z", "signer_id": "itexpert120-contra.near", "widget_name": "MobileCalendar", "source_code": "const events = props.events;\r\nconst date = props.date;\r\n\r\nconst currYear = date.getFullYear();\r\nconst currMonth = date.getMonth();\r\n\r\nState.init({\r\n  selectedDate: date,\r\n});\r\n\r\nconst firstDayOfMonth = new Date(currYear, currMonth, 1).getDay(); // get first day of month\r\nconst lastDateOfMonth = new Date(currYear, currMonth + 1, 0).getDate(); // get lastdate of month\r\nconst lastDayOfMonth = new Date(currYear, currMonth, lastDateOfMonth).getDay(); // get last day of month\r\nconst lastDateOfLastMonth = new Date(currYear, currMonth, 0).getDate(); // get last date of previous month\r\n\r\nconst headerUL = styled.ul`\r\n  padding: 0 8px;\r\n  margin: 0;\r\n  margin-bottom: 12px;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-around;\r\n  list-style: none;\r\n`;\r\n\r\nconst daysOfWeek = styled.li`\r\n  color: #7e818c;\r\n  padding: 4px;\r\n  text-align: center;\r\n  font-size: 14px;\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  line-height: normal;\r\n`;\r\n\r\nconst daysContainer = styled.ul`\r\n  padding: 0 8px;\r\n  margin: 0;\r\n  display: grid;\r\n  grid-template-columns: repeat(7, minmax(0, 1fr));\r\n  justify-content: space-around;\r\n  list-style: none;\r\n`;\r\n\r\nconst inactiveDays = styled.li`\r\n  text-align: center;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: #aaa;\r\n  font-size: 16px;\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  line-height: normal;\r\n  text-transform: uppercase;\r\n  margin-bottom: 16px;\r\n`;\r\n\r\nconst dayContainer = styled.li`\r\n  position: relative;\r\n  text-align: center;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: #333;\r\n  font-size: 16px;\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  line-height: normal;\r\n  text-transform: uppercase;\r\n  margin-bottom: 16px;\r\n\r\n  cursor: pointer;\r\n\r\n  &::before {\r\n    position: absolute;\r\n    content: \"\";\r\n    height: 24px;\r\n    width: 24px;\r\n    top: 50%;\r\n    left: 50%;\r\n    z-index: -1;\r\n    border-radius: 50%;\r\n    transform: translate(-50%, -50%);\r\n  }\r\n\r\n  &.active-day {\r\n    color: #fff;\r\n  }\r\n\r\n  &.active-day:hover::before {\r\n    background: #6792ff;\r\n  }\r\n\r\n  &.active-day::before {\r\n    position: absolute;\r\n    content: \"\";\r\n    height: 24px;\r\n    width: 24px;\r\n    top: 50%;\r\n    left: 50%;\r\n    z-index: -1;\r\n    border-radius: 50%;\r\n    transform: translate(-50%, -50%);\r\n    background: #6792ff;\r\n  }\r\n\r\n  &.selected-day::before {\r\n    background: #dfe8ff;\r\n  }\r\n\r\n  &:hover::before {\r\n    background: #dfe8ff;\r\n  }\r\n`;\r\n\r\nconst getDaysContainer = (lastDateOfMonth) => {\r\n  let content = [];\r\n\r\n  for (let i = firstDayOfMonth; i > 0; i--) {\r\n    content.push(\r\n      <inactiveDays key={`last-${i}`}>\r\n        {lastDateOfLastMonth - i + 1}\r\n      </inactiveDays>\r\n    );\r\n  }\r\n\r\n  for (let i = 1; i <= lastDateOfMonth; i++) {\r\n    const isToday =\r\n      i === date.getDate() &&\r\n      currMonth === new Date().getMonth() &&\r\n      currYear === new Date().getFullYear()\r\n        ? \"active-day\"\r\n        : \"\";\r\n    const thisDate = `${currYear}-${currMonth + 1}-${i}`;\r\n\r\n    content.push(\r\n      <dayContainer\r\n        className={`${isToday}`}\r\n        key={`day-${i}`}\r\n        onClick={() => {\r\n          State.update({ selectedDate: new Date(thisDate) });\r\n        }}\r\n      >\r\n        {i}\r\n      </dayContainer>\r\n    );\r\n  }\r\n\r\n  for (let i = lastDayOfMonth; i < 6; i++) {\r\n    content.push(\r\n      <inactiveDays key={`last-${i}`}>{i - lastDayOfMonth + 1}</inactiveDays>\r\n    );\r\n  }\r\n  return content;\r\n};\r\n\r\nconst todaysEvents = () => {\r\n  const selectedDate = `${state.selectedDate.getFullYear()}-${state.selectedDate.getMonth()}-${state.selectedDate.getDate()}`;\r\n  const filteredEvents = events.filter((ev) => {\r\n    const startDate = new Date(ev.start);\r\n    const filterDate = `${startDate.getFullYear()}-${startDate.getMonth()}-${startDate.getDate()}`;\r\n    return filterDate === selectedDate;\r\n  });\r\n\r\n  if (filteredEvents.length === 0) {\r\n    return (\r\n      <div className=\"d-flex w-100 justify-content-center\">\r\n        <p className=\"\">No Events on {selectedDate}</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {filteredEvents.map((ev) => (\r\n        <Widget\r\n          src=\"itexpert120-contra.near/widget/EventCard\"\r\n          props={{ data: ev }}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nreturn (\r\n  <>\r\n    <div className=\"border border-top-0 rounded-bottom border-light-subtle mb-2\">\r\n      <headerUL>\r\n        <daysOfWeek>S</daysOfWeek>\r\n        <daysOfWeek>M</daysOfWeek>\r\n        <daysOfWeek>T</daysOfWeek>\r\n        <daysOfWeek>W</daysOfWeek>\r\n        <daysOfWeek>TH</daysOfWeek>\r\n        <daysOfWeek>F</daysOfWeek>\r\n        <daysOfWeek>S</daysOfWeek>\r\n      </headerUL>\r\n      <daysContainer>{getDaysContainer(lastDateOfMonth)}</daysContainer>\r\n    </div>\r\n    <todaysEvents />\r\n  </>\r\n);\r\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/itexpert120-contra.near/widget/MobileCalendar", "fact_widget_deployments_id": "690e309d6db14257b982edb1b24ea2f4", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}