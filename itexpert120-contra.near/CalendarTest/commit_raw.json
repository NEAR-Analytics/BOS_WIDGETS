{"tx_hash": "EY13A3bAT4J9JeT5ntLTVCGUjgeViWQfuQhEoYzKZbZr", "action_id_social": "7NzyDEnRAN8uecSDLBYJDzVadFkAqXgwvYBsP4JLnhEX-0-widget", "block_id": 100028470, "block_timestamp": "2023-08-30T20:39:03.293Z", "signer_id": "itexpert120-contra.near", "widget_name": "CalendarTest", "source_code": "// helper function to fetch all events\r\nconst fetchAllEvents = () => {\r\n  const index = Social.index(\"every\", \"every.near/type/event\");\r\n\r\n  let fetchedEvents = [];\r\n\r\n  index.map((item) => {\r\n    const path = `${item.accountId}/thing/${item.value.id}`;\r\n    const blockHeight = item.blockHeight;\r\n\r\n    const eventThing = Social.getr(path, blockHeight);\r\n    fetchedEvents.push(eventThing.data);\r\n  });\r\n\r\n  return fetchedEvents;\r\n};\r\n\r\n\r\nconst fetchedEvents = fetchAllEvents();\r\n\r\nconst formattedEvents = fetchedEvents.map((event) => {\r\n  return {\r\n    title: event.title,\r\n    start: new Date(`${event.start} ${event.startTime}`),\r\n    end: new Date(`${event.end} ${event.endTime}`),\r\n    url: event.link,\r\n    allDay: event.isAllDay === \"true\",\r\n    editable: false,\r\n    extendedProps: {\r\n      category: event.category,\r\n    },\r\n  };\r\n});\r\n\r\nif (!formattedEvents) {\r\n  return <div>Loading...</div>;\r\n}\r\n\r\nreturn (\r\n  <Widget\r\n    src=\"itexpert120-contra.near/widget/Calendar\"\r\n    props={{ events: formattedEvents }}\r\n  />\r\n);\r\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/itexpert120-contra.near/widget/CalendarTest", "fact_widget_deployments_id": "aeb8cf28eeb991aa3fae86648904f9e9", "inserted_timestamp": "2023-08-30T22:34:55.925Z", "modified_timestamp": "2023-08-30T22:34:55.925Z", "__row_index": 1}