{"tx_hash": "FQbasc4jsuryeW3BwfKZrcY9Aci3Na2nVEqpKbFFkXKn", "action_id_social": "BQPCwwtwnmLsZoLztaKHNXJ1T9nbc61jjAJK9hLZggwA-0-widget", "block_id": 101989095, "block_timestamp": "2023-09-26T09:56:18.649Z", "signer_id": "itexpert120-contra.near", "widget_name": "ProposeProject", "source_code": "const UUID = {\r\n  generate: (template) => {\r\n    if (typeof template !== \"string\") {\r\n      template = \"xxxxxxxx-xxxx-xxxx-yxxx-xxxxxxxxxxxx\";\r\n    }\r\n    return template.replace(/[xy]/g, (c) => {\r\n      var r = (Math.random() * 16) | 0;\r\n      var v = c === \"x\" ? r : (r & 0x3) | 0x8;\r\n      return v.toString(16);\r\n    });\r\n  },\r\n};\r\n\r\n\r\nconst accountId = context.accountId;\r\n\r\nif (!accountId) {\r\n  return \"Please login to NEAR Wallet in order to continue\";\r\n}\r\n\r\nconst projectId = UUID.generate();\r\n\r\nState.init({\r\n  id: projectId,\r\n  projectName: \"\",\r\n  projectLink: \"\",\r\n  projectDescription: \"\",\r\n  projectImage: null,\r\n});\r\n\r\nconst clearFields = () => {\r\n  console.log(\"clicked\");\r\n  State.update({\r\n    projectName: \"\",\r\n    projectLink: \"\",\r\n    projectDescription: \"\",\r\n    projectImage: null,\r\n  });\r\n};\r\n\r\nconst proposeProject = () => {\r\n  const newProject = {\r\n    data: {\r\n      id: state.id,\r\n      name: state.projectName,\r\n      link: state.projectLink,\r\n      desciption: state.projectDescription,\r\n      image: state.projectImage,\r\n      approved: false,\r\n    },\r\n  };\r\n\r\n  const thingId = newProject.data.id;\r\n\r\n  // index new event\r\n  Social.set({\r\n    thing: {\r\n      [thingId]: newProject,\r\n    },\r\n    index: {\r\n      discoverbos: JSON.stringify({\r\n        key: \"discover.bos/projects/proposed\",\r\n        value: {\r\n          type: \"discover.bos/projects/proposed\",\r\n          id: thingId,\r\n        },\r\n      }),\r\n    },\r\n  });\r\n};\r\n\r\nreturn (\r\n  <div className=\"container\">\r\n    <h2>Project Proposal</h2>\r\n    <div className=\"mb-2\">\r\n      <label htmlFor=\"project-name\">Project Name</label>\r\n      <input\r\n        name=\"project-name\"\r\n        id=\"project-name\"\r\n        type=\"text\"\r\n        value={state.projectName}\r\n        onChange={(e) => State.update({ projectName: e.target.value })}\r\n      />\r\n    </div>\r\n    <div className=\"mb-2\">\r\n      <label htmlFor=\"project-link\">Project Link</label>\r\n      <input\r\n        name=\"project-link\"\r\n        id=\"project-link\"\r\n        type=\"url\"\r\n        value={state.projectLink}\r\n        onChange={(e) => State.update({ projectLink: e.target.value })}\r\n      />\r\n    </div>\r\n    <div className=\"mb-2\">\r\n      <label htmlFor=\"project-description\">Project Description</label>\r\n      <input\r\n        name=\"project-description\"\r\n        id=\"project-description\"\r\n        type=\"text\"\r\n        value={state.projectDescription}\r\n        onChange={(e) => State.update({ projectDescription: e.target.value })}\r\n      />\r\n    </div>\r\n    <div className=\"mb-2\">\r\n      <label>Project Image</label>\r\n      <Widget\r\n        src=\"near/widget/ImageEditorTabs\"\r\n        props={{\r\n          image: state.projectImage,\r\n          onChange: (image) => {\r\n            State.update({ projectImage: image });\r\n          },\r\n        }}\r\n      />\r\n    </div>\r\n\r\n    <div className=\"d-flex gap-2\">\r\n      <button className=\"btn btn-secondary ms-auto\" onClick={clearFields}>\r\n        Clear Fields\r\n      </button>\r\n      <button className=\"btn btn-primary\" onClick={proposeProject}>\r\n        Propose Project\r\n      </button>\r\n    </div>\r\n  </div>\r\n);\r\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/itexpert120-contra.near/widget/ProposeProject", "fact_widget_deployments_id": "46940ad99465fa7bd7d9d2bdc68550cb", "inserted_timestamp": "2023-09-26T11:47:14.279Z", "modified_timestamp": "2023-09-26T11:47:14.279Z", "__row_index": 0}