{"tx_hash": "CXRMWinG2LwQ6gg9pFtAdQQHw2j8Yxp8WzynUeP9gxk5", "action_id_social": "6sVhcoMqQzRuTVsaHx3u52DSMsWAigPrNqhJDHoAmj6g-0-widget", "block_id": 115821758, "block_timestamp": "2024-03-31T01:40:54.776Z", "signer_id": "kiskesis.near", "widget_name": "stake-weighted-checker", "source_code": "const Input = styled.input`\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding: 0.5em 0.75em;\n  gap: 0.5em;\n  background: #ffffff;\n  border: 1px solid #d0d5dd;\n  box-shadow: 0px 1px 2px rgba(16, 24, 40, 0.05);\n  border-radius: 4px;\n`;\n\nconst LabelArea = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: flex-start;\n  gap: 0.25em;\n  margin-bottom: 0.5em;\n  flex-wrap: wrap;\n`;\n\nconst Error = styled.small`\n  color: red;\n`;\n\nconst CodeSnippet = styled.div`\n  font-family: monospace;\n  white-space: pre-wrap;\n  margin: 0;\n`;\n\nState.init({\n  valid: true,\n  accountId: \"\",\n  errorMessage: <></>,\n  votingPower: null,\n  voterInfo: null,\n});\n\nconst validate = (accountId) => {\n  const accountIdRegex =\n    /^(([a-z\\d]+[\\-_])*[a-z\\d]+\\.)*([a-z\\d]+[\\-_])*[a-z\\d]+$/;\n\n  if (typeof accountId !== \"string\") {\n    State.update({\n      accountId: \"\",\n      valid: false,\n      errorMessage: \"Account ID must be a text value!\",\n    });\n    return;\n  }\n\n  if (accountId.length < 2) {\n    State.update({\n      accountId: \"\",\n      valid: false,\n      errorMessage: \"Account ID must be at least 2 characters long!\",\n    });\n    return;\n  }\n\n  if (accountId.length > 64) {\n    State.update({\n      accountId: \"\",\n      valid: false,\n      errorMessage: \"Account ID must be at most 64 characters long!\",\n    });\n    return;\n  }\n\n  if (!accountIdRegex.test(accountId)) {\n    State.update({\n      accountId: \"\",\n      valid: false,\n      errorMessage: (\n        <>\n          Account ID must follow the rules specified{\" \"}\n          <a href=\"https://nomicon.io/DataStructures/Account#account-id-rules\">\n            here\n          </a>\n          and ends on .near!\n        </>\n      ),\n    });\n    return;\n  }\n\n  State.update({ valid: true, errorMessage: \"\", accountId });\n};\n\nconst accountId = props.accountId ?? \"Login with NEAR Wallet\";\n\nconst getVotingPower = (accountId) => {\n  const votingPower = fetch(\"https://rpc.testnet.near.org\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      id: \"dontcare\",\n      method: \"query\",\n      jsonrpc: \"2.0\",\n      params: {\n        request_type: \"call_function\",\n        finality: \"final\",\n        account_id: \"snapshot-test.testnet\",\n        method_name: \"get_vote_power\",\n        args_base64: btoa(JSON.stringify({ voter: `${accountId}` })),\n      },\n    }),\n  });\n\n  // const voterInfo = fetch(\"https://rpc.testnet.near.org\", {\n  //   method: \"POST\",\n  //   headers: {\n  //     \"Content-Type\": \"application/json\",\n  //   },\n  //   body: JSON.stringify({\n  //     id: \"dontcare\",\n  //     method: \"query\",\n  //     jsonrpc: \"2.0\",\n  //     params: {\n  //       request_type: \"call_function\",\n  //       finality: \"final\",\n  //       account_id: \"snapshot-test.testnet\",\n  //       method_name: \"get_eligible_voter_info\",\n  //       args_base64: btoa(JSON.stringify({ account_id: `${accountId}` })),\n  //     },\n  //   }),\n  // });\n\n  // const voterInfo = fetch(\"https://rpc.testnet.near.org\", {\n  //   headers: {\n  //     \"Content-Type\": \"application/json\",\n  //   },\n  //   method: \"POST\",\n  //   body: JSON.stringify({\n  //     method: \"query\",\n  //     jsonrpc: \"2.0\",\n  //     contract: \"snapshot-test.testnet\",\n  //     params: {\n  //       request_type: \"get_eligible_voter_info\",\n  //       finality: \"final\",\n  //       account_id: `${accountId}`,\n  //     },\n  //   }),\n  // });\n\n  console.log(\"votingPower\", votingPower);\n  console.log(\"voterInfo\", voterInfo.body.result);\n\n  State.update({ votingPower, voterInfo });\n};\n\nconst Card = ({ children, className }) => {\n  return (\n    <div\n      className={`card ${className}`}\n      style={{ maxWidth: \"800px\", padding: \"2px\" }}\n    >\n      <div className=\"card-body p-2\">{children}</div>\n    </div>\n  );\n};\n\nconst CardTitle = ({ children, className }) => {\n  return <p className={`card-title ${className}`}>{children}</p>;\n};\n\nconsole.log(\"state.voterInfo\", state.voterInfo);\n\nconst codeSnippet = `stakepower = if stake > 1000 (configurable) \n  1000 + sqrt(stake - 1000)\nelse {\n  stake\n}\nactivity_power = 20 * active_months\n\nresult = stake_power + activity_power`;\n\nreturn (\n  <div className=\"d-flex flex-column align-items-center\">\n    <h1>Check your voting power for NDC Stake-Weighted mechanism</h1>\n    <p>\n      Type the account which you want to validate 'XXX.near' and click button to\n      see your voting power and related information\n    </p>\n    <LabelArea>\n      <div className=\"d-flex flex-column justify-content-center align-items-center\">\n        <Input\n          id\n          type=\"text\"\n          value={v}\n          onChange={(e) => validate(e.target.value)}\n          className=\"w-100\"\n          style={{ maxWidth: \"200px\" }}\n        />\n        <Error>{state.valid ? <></> : state.errorMessage}</Error>\n      </div>\n    </LabelArea>\n    <button onClick={() => getVotingPower(state.accountId)}>\n      Get Voting Power\n    </button>\n    {state.votingPower && <div>Voting Power: {state.votingPower}</div>}\n    {state.voterInfo && (\n      <div>\n        <div>Active Months: {state.voterInfo.active_months}</div>\n        <div>Stake: {state.voterInfo.stake}</div>\n      </div>\n    )}\n    <Card className=\"mt-3\">\n      <CardTitle>Calculation of Voting Power</CardTitle>\n      <pre\n        style={{\n          backgroundColor: \"#f3f3f3\",\n          padding: \"10px\",\n          borderRadius: \"5px\",\n          overflowX: \"auto\",\n        }}\n      >\n        <CodeSnippet>{codeSnippet}</CodeSnippet>\n      </pre>\n    </Card>\n  </div>\n);\n", "metadata": {"description": "Check how many voting power account will have based on the snapshot data and get know more information about new Stake Weighted Mechanism", "fork_of": "kiskesis.near/widget/stake-weighted-checker@115821143", "image": {"ipfs_cid": "bafkreicr2lundnhnm7btjhdplcmwfq5kdneoowbqx7grknui6hvgj62x4m"}, "linktree": {"website": "hackmd.io/8YBpAi47QN2ceqPLjG68Iw"}, "name": "NDC Stake Weighted Voting Checker", "tags": {"app": "", "ndc": "", "vote": ""}}, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/kiskesis.near/widget/stake-weighted-checker", "fact_widget_deployments_id": "0ebe15fd70013347a80dc0602401d2bd", "inserted_timestamp": "2024-03-31T02:38:23.468Z", "modified_timestamp": "2024-03-31T02:38:23.468Z", "__row_index": 6}