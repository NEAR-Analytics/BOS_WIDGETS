{"tx_hash": "5Eywcv5tqYFgkkbq5BoQyhVhkToCy7i5wacK1BbhsUHk", "action_id_social": "9k5L9VSECchSNwzqfaAr11hBiBCfUoRudL7LirdRKAUF-0-widget", "block_id": 116414024, "block_timestamp": "2024-04-08T19:32:15.942Z", "signer_id": "kiskesis.near", "widget_name": "stake-weighted-checker", "source_code": "const font = fetch(\n  \"https://fonts.googleapis.com/css2?family=Kodchasan:wght@700&display=swap\"\n).body;\n\nconst Container = useMemo(\n  () => styled.div`\n  ${font}\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 960px;\n  padding-right: 15px;\n  padding-left: 15px;\n  \n  & * {\n    font-family: 'Kodchasan', sans-serif;\n  }\n`,\n  [font]\n);\n\nconst wallet = props.wallet_id || context.accountId;\n\nconst [accountId, setAccountId] = useState(wallet || \"\");\nconst [valid, setValid] = useState(true);\nconst [errorMessage, setErrorMessage] = useState(\"\");\nconst [votingPower, setVotingPower] = useState(null);\nconst [voterInfo, setVoterInfo] = useState(null);\nconst [totalUsers, setTotalUsers] = useState(null);\n\nconst validate = (accountId) => {\n  console.log(\"accountId\", accountId);\n  const accountIdRegex =\n    /^(([a-z\\d]+[\\-_])*[a-z\\d]+\\.)*([a-z\\d]+[\\-_])*[a-z\\d]+$/;\n  setAccountId(accountId);\n\n  if (typeof accountId !== \"string\") {\n    setValid(false);\n    setErrorMessage(\"Account ID must be a text value!\");\n    return;\n  }\n\n  if (accountId.length < 2) {\n    setValid(false);\n    setErrorMessage(\"Account ID must be at least 2 characters long!\");\n\n    return;\n  }\n\n  if (accountId.length > 64) {\n    setValid(false);\n    setErrorMessage(\"Account ID must be at most 64 characters long!\");\n\n    return;\n  }\n\n  if (!accountIdRegex.test(accountId)) {\n    setValid(false);\n    setErrorMessage(\n      \"Account ID must follow the specified rules and end with .near!\"\n    );\n\n    return;\n  }\n\n  setValid(true);\n  setErrorMessage(\"\");\n};\n\nconst fetchData = (method, params, callback) => {\n  return asyncFetch(\"https://rpc.testnet.near.org\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      id: \"dontcare\",\n      method: \"query\",\n      jsonrpc: \"2.0\",\n      params: {\n        ...params,\n        request_type: method,\n        account_id: \"snapshot-test.testnet\",\n        finality: \"final\",\n      },\n    }),\n  }).then((res) => {\n    callback(res.body);\n  });\n};\n\nuseEffect(() => {\n  fetchData(\n    \"call_function\",\n    {\n      method_name: \"get_total_eligible_users\",\n      args_base64: btoa({}),\n    },\n    (res) => {\n      setTotalUsers(JSON.parse(String.fromCharCode(...res.result.result)));\n    }\n  );\n}, []);\n\nconst getVotingPower = () => {\n  fetchData(\n    \"call_function\",\n    {\n      method_name: \"get_vote_power\",\n      args_base64: btoa(JSON.stringify({ voter: accountId })),\n    },\n    (res) => {\n      console.log(\"res\", res);\n      console.log(\n        \"String.fromCharCode(...res.result.result)\",\n        String.fromCharCode(...res.result.result)\n      );\n      setVotingPower(String.fromCharCode(...res.result.result));\n    }\n  );\n\n  fetchData(\n    \"call_function\",\n    {\n      method_name: \"get_eligible_voter_info\",\n      args_base64: btoa(JSON.stringify({ account_id: accountId })),\n    },\n    (res) => {\n      setVoterInfo(JSON.parse(String.fromCharCode(...res.result.result)));\n    }\n  );\n};\n\nconst codeSnippet = `stakepower = if stake > 1000 (configurable) \n  1000 + sqrt(stake - 1000)\nelse {\n  stake\n}\nactivity_power = 20 * active_months\n\nresult = stake_power + activity_power`;\n\nreturn (\n  <Container className=\"custom-container\">\n    <h1 className=\"mb-4 text-center\">\n      Check your voting power for the NDC Stake-Weighted mechanism\n    </h1>\n    <div className=\"card bg-light p-4 mb-4 text-center\">\n      <p>\n        Your vote matters! Please take a moment to cast your vote and help shape\n        the future of our community.\n      </p>\n      <p>\n        Don't forget to{\" \"}\n        <a\n          href=\"https://near.org/astraplusplus.ndctools.near/widget/home?page=dao&tab=proposals&daoId=voting-body-v1.ndc-gwg.near&proposalId=11\"\n          className=\"text-primary\"\n        >\n          cast your vote\n        </a>{\" \"}\n        to support this stake-weighted solution or reject it if you don't like\n        it.\n      </p>\n    </div>\n    <p className=\"text-center\">\n      Type the account which you want to validate: <br />\n      'XXX.near', 'XXX.tg' or hash(64 symbols)\n      <br />\n      and click to see your voting power and related info\n    </p>\n    <div className=\"input-group mb-4 w-100\">\n      <input\n        type=\"text\"\n        value={accountId}\n        placeholder={walletId}\n        onChange={(e) => validate(e.target.value)}\n        className=\"form-control w-100\"\n      />\n      {!valid && <small className=\"text-danger\">{errorMessage}</small>}\n    </div>\n    <button className=\"btn btn-primary mb-4\" onClick={getVotingPower}>\n      Get Voting Power\n    </button>\n    <div className=\"text-center\">\n      {votingPower && (\n        <div>\n          <b>Voting Power:</b> {votingPower}\n        </div>\n      )}\n      {voterInfo && (\n        <div>\n          <div>\n            <b>Active Months:</b> {voterInfo.active_months}\n          </div>\n          <div>\n            <b>Stake:</b>{\" \"}\n            {(parseFloat(voterInfo.stake) / Math.pow(10, 24)).toFixed(2)} Near\n          </div>\n        </div>\n      )}\n    </div>\n    <div className=\"card bg-light p-4 my-4\">\n      <p className=\"mb-0\">\n        <b>Calculation of Voting Power</b>\n      </p>\n      <pre className=\"text-left bg-warning p-4 rounded\">{codeSnippet}</pre>\n    </div>\n    <div>\n      <h4>Explanation of voting power: </h4>\n      <ol className=\"my-4 list-group list-group-numbered\">\n        <li className=\"list-group-item\">\n          After the threshold 1000 Near, the system uses a quadratic formula\n        </li>\n        <li className=\"list-group-item\">1000 staked Near - 1000 votes</li>\n        <li className=\"list-group-item\">\n          1001000 (1mil) Near - 1000 + sqrt(1000000) = 2000 votes\n        </li>\n        <li className=\"list-group-item\">\n          Additionally, if you ever staked with your account, you can have{\" \"}\n          <b>20*(active on-chain months, right now - 42 months)</b> voting power\n        </li>\n        <li className=\"list-group-item\">\n          Total is <b>{totalUsers}</b> accounts that can potentially vote\n        </li>\n        <li className=\"list-group-item\">\n          Data made from a{\" \"}\n          <a\n            href=\"https://bafybeidy6aerzfcaytshbntccgq6oquopd4q3ftsuaz66bstjfc4vpuwku.ipfs.w3s.link/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            snapshot\n          </a>{\" \"}\n          that was made on <b>17.12.2023</b>\n        </li>\n      </ol>\n    </div>\n    <div>\n      <p>\n        <b>\n          Read more about the voting system and how it will be implemented{\" \"}\n          <a\n            href=\"https://hackmd.io/8YBpAi47QN2ceqPLjG68Iw\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            here\n          </a>{\" \"}\n          if you have any questions please ask them{\" \"}\n          <a\n            href=\"https://t.me/ndcopstech\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            in Ops team telegram chat\n          </a>\n        </b>\n      </p>\n    </div>\n    <h1 className=\"mb-4\">Some useful analytics</h1>\n    <div>\n      <h3>Legend:</h3>\n      <ol>\n        <li>0-1 - accounts with a stake from 0-1 Near</li>\n        <li>1-10 - accounts with a stake from 1-10 Near</li>\n        <li>10-100 - accounts with a stake from 10-100 Near</li>\n        <li>100-1000 - accounts with a stake from 100-1000 Near</li>\n        <li>1000-10000 - accounts with a stake from 1000-10000 Near</li>\n        <li>10000+ - accounts with stake more than 1000 Near</li>\n      </ol>\n    </div>\n    <Widget\n      src=\"lord1.near/widget/Pie-chart\"\n      props={{\n        data: [\n          [\"0-1\", 22.82],\n          [\"1-10\", 6.54],\n          [\"10-100\", 12.98],\n          [\"100-1000\", 30.45],\n          [\"1000-10000\", 18.02],\n          [\"10000+\", 9.18],\n        ],\n        chartOption: {\n          title: \"Voting Power Distribution\",\n          type: \"donut\",\n        },\n      }}\n    />\n    <Widget\n      src=\"lord1.near/widget/Pie-chart\"\n      props={{\n        data: [\n          [\"0-1\", 9410],\n          [\"1-10\", 94670],\n          [\"10-100\", 1330000],\n          [\"100-1000\", 8080000],\n          [\"1000-10000\", 5515550],\n          [\"10000+\", 2886694],\n        ],\n        chartOption: {\n          title: \"Voting Power by Stake distribution\",\n          type: \"donut\",\n        },\n      }}\n    />\n    <Widget\n      src=\"lord1.near/widget/Pie-chart\"\n      props={{\n        data: [\n          [\"0-1\", 7844022],\n          [\"1-10\", 2157842],\n          [\"10-100\", 3137216],\n          [\"100-1000\", 2401050],\n          [\"1000-10000\", 685902],\n          [\"10000+\", 273968],\n        ],\n        chartOption: {\n          title: \"Voting Power by Activity distribution\",\n          type: \"donut\",\n        },\n      }}\n    />\n\n    <Widget\n      src=\"lord1.near/widget/Pie-chart\"\n      props={{\n        data: [\n          [\"0-1\", 131],\n          [\"1-10\", 137],\n          [\"10-100\", 187],\n          [\"100-1000\", 571],\n          [\"1000-10000\", 1183],\n          [\"10000+\", 1510],\n        ],\n        chartOption: {\n          title: \"Power Per User\",\n          type: \"donut\",\n        },\n      }}\n    />\n\n    <Widget\n      src=\"lord1.near/widget/Pie-chart\"\n      props={{\n        data: [\n          [\"0-1\", 47.54],\n          [\"1-10\", 13.08],\n          [\"10-100\", 19.01],\n          [\"100-1000\", 14.55],\n          [\"1000-10000\", 4.16],\n          [\"10000+\", 1.66],\n        ],\n        chartOption: {\n          title: \"Users by stake category\",\n          type: \"donut\",\n        },\n      }}\n    />\n\n    <Widget\n      src=\"kiskesis.near/widget/my-socials\"\n      props={{\n        twitterURL: \"https://twitter.com/arugutavo\",\n        textOptions: {\n          textColor: \"black\",\n          text: \"Follow\",\n        },\n        iconsOptions: {\n          telegram: \"black\",\n          twitter: \"black\",\n          nearSocial: \"black\",\n        },\n      }}\n    />\n  </Container>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/kiskesis.near/widget/stake-weighted-checker", "fact_widget_deployments_id": "31bef0a8f1ba71fcd563dec0c5e4615a", "inserted_timestamp": "2024-04-08T21:30:33.994Z", "modified_timestamp": "2024-04-08T21:30:33.994Z", "__row_index": 10}