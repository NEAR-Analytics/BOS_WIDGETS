{"tx_hash": "B5xeQgu6WeJ44YyxZkM9RM31XH2yFkcaijfEbH5u6Egx", "action_id_social": "GfMUjXyuC5FmBdHZc779WTxVbMe91jrAjFadXkHuK19D-0-widget", "block_id": 105095913, "block_timestamp": "2023-11-06T20:05:43.608Z", "signer_id": "ciuz.near", "widget_name": "Bosense.Common.Card.PublisherCard", "source_code": "let { accountId, join_at, total_income } = props;\n\nif (!accountId) {\n  accountId = context.accountId;\n}\n\nif (!join_at) {\n  join_at = \"2021-09-01T00:00:00\";\n}\n\nif (!total_income) {\n  total_income = 1210;\n}\n\nconst PublisherCard = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;  \n  .user {\n    width: 40%;\n    border: 1px solid #000;\n  }\n\n  .income {\n    font-size: 24px;\n    font-weight: 600;\n    color: #000;\n  }\n\n  .title {\n    font-size: 12px;\n    font-weight: 600;\n    color: #6149cd;\n  }\n`;\n\nconst calIncome = () => {\n  if (total_income > 1000000000) {\n    return (total_income / 1000000000).toFixed(2) + \"B\";\n  }\n  if (total_income > 1000000) {\n    return (total_income / 1000000).toFixed(2) + \"M\";\n  }\n  if (total_income > 1000) {\n    return (total_income / 1000).toFixed(2) + \"K\";\n  }\n  return total_income;\n};\n\nconst convertDate = (date) => {\n  const d = new Date(date);\n  return d.toLocaleDateString();\n};\n\nreturn (\n  <PublisherCard>\n    <div className=\"user overflow-x-hidden\">\n      <Widget\n        src=\"nearui.near/widget/Element.User\"\n        props={{\n          accountId: accountId,\n        }}\n      />\n      <span>Join at: {convertDate(join_at)}</span>\n    </div>\n    <div className=\"d-flex row px-4\">\n      <span className=\"income\">{calIncome(total_income)} N</span>\n      <span className=\"title\">Total Income</span>\n    </div>\n  </PublisherCard>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/ciuz.near/widget/Bosense.Common.Card.PublisherCard", "fact_widget_deployments_id": "8162e09c1dba9b1499bb980cb0667850", "inserted_timestamp": "2023-11-06T21:52:51.939Z", "modified_timestamp": "2023-11-06T21:52:51.939Z", "__row_index": 1}