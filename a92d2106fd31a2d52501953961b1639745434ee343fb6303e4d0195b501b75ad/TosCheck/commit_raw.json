{"tx_hash": "34NqjwJuBr1Bw7gFnz2ECvFPwVVbj3F3PtdN4TMNv4WE", "action_id_social": "FqVRDd4mURdkRtHkoFYjtFPrHyvTQbt2APWfuuoY3eJo-0-widget", "block_id": 89777046, "block_timestamp": "2023-04-17T08:21:24.356Z", "signer_id": "a92d2106fd31a2d52501953961b1639745434ee343fb6303e4d0195b501b75ad", "widget_name": "TosCheck", "source_code": "const { tosName, targetComponent, logOut } = props;\nconst targetProps = props?.targetProps || {};\nconst acceptanceKey = tosName; // may change\n\nconsole.log(\"Another version\");\n\nState.init({\n  hasCommittedAcceptance: false,\n  agreeIsChecked: false,\n  expand: false,\n});\n\n// find all instances of the user agreeing to some version of the desired TOS\nconst agreementsForUser = Social.index(\"tosAccept\", acceptanceKey, {\n  accountId: context.accountId, // make sure it was written by the user in question\n  subscribe: true,\n});\n\nconst tosVersions = Social.keys(tosName, \"final\", {\n  return_type: \"BlockHeight\",\n  // subscribe: true,\n});\n\nconsole.log(\"TosVersions\", tosVersions);\n\n// TODO perform path validation before this\nconst tosPath = tosName.split(\"/\");\nconst latestTosVersion = tosPath.reduce((acc, curr) => {\n  return acc[curr];\n}, tosVersions);\n\nconsole.log(\"latest\", latestTosVersion);\n\nconst Backdrop = styled.div`\n  height: 100vh;\n  width: 100vw;\n  background-color: rgba(0, 0, 0, 0.5);\n  position: fixed;\n  left: 0;\n  top: 0;\n  z-index: 1001;\n`;\n\nconst Modal = styled.div`\n  width: 30rem;\n  max-width: 95vw;\n  max-height: 80vh;\n  background-color: white;\n  border-radius: 10px;\n  margin: auto;\n  padding: 1.5rem;\n  display: flex;\n  row-gap: 1rem;\n  flex-direction: column;\n`;\n\nconst ModalContent = styled.div`\ndisplay: flex;\nflex-direction: column;\nflex-grow:1\nmin-height 0;\noverflow-y: auto;\n`;\n\nconst ModalFooter = styled.div`\n  display: flex;\n  flex-direction: column;\n  row-gap: 2rem;\n`;\n\nconst AcceptSection = styled.div`\n  display: flex;\n  flex-direction: row;\n  column-gap: 1rem;\n  .continue-button {\n    background: #59E692;\n    color: #09342E;\n    border-radius: 40px;\n    height: 40px;\n    padding: 0 35px;\n    font-weight: 600;\n    font-size: 14px;\n    border: none;\n    cursor: pointer;\n    transition: background 200ms, opacity 200ms;\n    &:hover,\n    &:focus {\n      background: rgb(112 242 164);\n      outline: none;\n    }\n    &:disabled {\n      opacity: 0.5;\n      pointer-events: none;\n    }\n  }\n`;\n\nconst CheckWrapper = styled.div`\ndisplay: flex;\nflex-direction: row;\nalign-items: center;\ncolor: ${state.agreeIsChecked ? \"#26A65A\" : \"inherit\"}\n`;\n\nconst CheckButton = styled.button`\n  border: none;\n  --bs-btn-hover-bg: transparent;\n  --bs-btn-active-bg: transparent;\n  --bs-btn-color: ${state.agreeIsChecked ? \"#26A65A\" : \"black\"};\n  --bs-btn-hover-color: ${state.agreeIsChecked ? \"#26A65A\" : \"var(--bs-blue)\"};\n`;\n\nconst expand = (e) => {\n  State.update({ expand: e });\n};\n\n// we check for existence of Index results because if no results are found\n// we get an empty array. This means that when the existence check fails\n// we are still loading and we do not want to potentially flash the modal\n// until we know for sure that it should be displayed\nconst showTos =\n  !state.hasCommittedAcceptance &&\n  context.accountId &&\n  latestTosVersion &&\n  agreementsForUser &&\n  (!agreementsForUser.length ||\n    agreementsForUser[agreementsForUser.length - 1].value < latestTosVersion);\n\nreturn (\n  <div>\n    {showTos && (\n      <Backdrop className=\"d-flex\">\n        <Modal>\n          <ModalContent>\n            <Widget src={tosName} props={expand} />\n          </ModalContent>\n          <ModalFooter>\n            <CheckWrapper>\n              <CheckButton\n                onClick={() => {\n                  State.update({ agreeIsChecked: !state.agreeIsChecked });\n                }}\n                className=\"btn btn-outline-dark\"\n              >\n                <div className=\"d-flex flex-row align-items-center gap-3\">\n                  <i\n                    className={`bi bi-${\n                      state.agreeIsChecked ? \"check-square\" : \"square\"\n                    }`}\n                    style={{ fontSize: \"1.5rem\" }}\n                  />\n                  <span style={{ textAlign: \"left\" }}>\n                    I agree to the Terms of Service and Privacy Policy\n                  </span>\n                </div>\n              </CheckButton>\n            </CheckWrapper>\n            <AcceptSection>\n              <button\n                className=\"btn btn-outline-secondary\"\n                style={{\n                  flexGrow: 1,\n                  flexBasis: \"10rem\",\n                  borderRadius: \"1.25rem\",\n                }}\n                onClick={logOut}\n              >\n                Decline\n              </button>\n              <CommitButton\n                style={{\n                  flexGrow: 1,\n                  flexBasis: \"10rem\",\n                  borderRadius: \"1.25rem\",\n                }}\n                className=\"continue-button\"\n                disabled={!state.agreeIsChecked}\n                data={{\n                  index: {\n                    tosAccept: JSON.stringify({\n                      key: acceptanceKey,\n                      value: latestTosVersion,\n                    }),\n                  },\n                }}\n                onCommit={() => {\n                  State.update({ hasCommittedAcceptance: true });\n                }}\n              >\n                Continue\n              </CommitButton>\n            </AcceptSection>\n          </ModalFooter>\n        </Modal>\n      </Backdrop>\n    )}\n\n    <Widget src={targetComponent} props={targetProps} />\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/a92d2106fd31a2d52501953961b1639745434ee343fb6303e4d0195b501b75ad/widget/TosCheck", "fact_widget_deployments_id": "4b72687df3d13cecaf7a6c26c9cb21f4", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 35}