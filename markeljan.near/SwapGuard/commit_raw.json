{"tx_hash": "DTLVxixPYQYcKhGBxUzR3goAsuwCWuEnNenBYp4znpjN", "action_id_social": "GqMojaQjwTPYFSPGCBPkkBKEmndbVFnApKSgtWN3iAJZ-0-widget", "block_id": 104466777, "block_timestamp": "2023-10-29T14:10:53.061Z", "signer_id": "markeljan.near", "widget_name": "SwapGuard", "source_code": "/// Layout\nconst DaisyUIWrapper = ({ children }) => {\n  return (\n    <Widget\n      src=\"igris.near/widget/DaisyUIWrapper\"\n      props={{\n        children,\n        daisyUiTheme: \"dark\",\n      }}\n    />\n  );\n};\n\nconst USDCIcon = () => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      height=\"24.002\"\n      viewBox=\"0 0 24 24.002\"\n      width=\"24\"\n    >\n      <path\n        d=\"M1000 2000c554.17 0 1000-445.83 1000-1000S1554.17 0 1000 0 0 445.83 0 1000s445.83 1000 1000 1000z\"\n        fill=\"#2775ca\"\n      />\n      <path\n        d=\"M1275 1158.33c0-145.83-87.5-195.83-262.5-216.66-125-16.67-150-50-150-108.34s41.67-95.83 125-95.83c75 0 116.67 25 137.5 87.5 4.17 12.5 16.67 20.83 29.17 20.83h66.66c16.67 0 29.17-12.5 29.17-29.16v-4.17c-16.67-91.67-91.67-162.5-187.5-170.83v-100c0-16.67-12.5-29.17-33.33-33.34h-62.5c-16.67 0-29.17 12.5-33.34 33.34v95.83c-125 16.67-204.16 100-204.16 204.17 0 137.5 83.33 191.66 258.33 212.5 116.67 20.83 154.17 45.83 154.17 112.5s-58.34 112.5-137.5 112.5c-108.34 0-145.84-45.84-158.34-108.34-4.16-16.66-16.66-25-29.16-25h-70.84c-16.66 0-29.16 12.5-29.16 29.17v4.17c16.66 104.16 83.33 179.16 220.83 200v100c0 16.66 12.5 29.16 33.33 33.33h62.5c16.67 0 29.17-12.5 33.34-33.33v-100c125-20.84 208.33-108.34 208.33-220.84z\"\n        fill=\"#fff\"\n      />\n      <path\n        d=\"M787.5 1595.83c-325-116.66-491.67-479.16-370.83-800 62.5-175 200-308.33 370.83-370.83 16.67-8.33 25-20.83 25-41.67V325c0-16.67-8.33-29.17-25-33.33-4.17 0-12.5 0-16.67 4.16-395.83 125-612.5 545.84-487.5 941.67 75 233.33 254.17 412.5 487.5 487.5 16.67 8.33 33.34 0 37.5-16.67 4.17-4.16 4.17-8.33 4.17-16.66v-58.34c0-12.5-12.5-29.16-25-37.5zM1229.17 295.83c-16.67-8.33-33.34 0-37.5 16.67-4.17 4.17-4.17 8.33-4.17 16.67v58.33c0 16.67 12.5 33.33 25 41.67 325 116.66 491.67 479.16 370.83 800-62.5 175-200 308.33-370.83 370.83-16.67 8.33-25 20.83-25 41.67V1700c0 16.67 8.33 29.17 25 33.33 4.17 0 12.5 0 16.67-4.16 395.83-125 612.5-545.84 487.5-941.67-75-237.5-258.34-416.67-487.5-491.67z\"\n        fill=\"#fff\"\n      />\n    </svg>\n  );\n};\n\n/// Assets\nconst IconETH = () => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      height=\"24.002\"\n      viewBox=\"0 0 24 24.002\"\n      width=\"24\"\n    >\n      <path d=\"m0 .003h24v24h-24z\" fill=\"none\" />\n      <path\n        d=\"m23.64 14.905a12 12 0 1 1 -8.74-14.545 12 12 0 0 1 8.74 14.545z\"\n        fill=\"#fff\"\n        transform=\"translate(0 -.001)\"\n      />\n      <g transform=\"translate(6.858 3.628)\">\n        <path\n          d=\"m383.612 0-.112.382v11.075l.112.112 5.141-3.039z\"\n          fill=\"#343434\"\n          transform=\"translate(-378.471)\"\n        />\n        <path d=\"m5.141 0-5.141 8.53 5.141 3.039z\" fill=\"#8c8c8c\" />\n        <path\n          d=\"m387.3 727.927-.063.077v3.945l.063.185 5.144-7.245z\"\n          fill=\"#3c3c3b\"\n          transform=\"translate(-382.162 -715.385)\"\n        />\n        <path\n          d=\"m5.141 732.135v-4.207l-5.141-3.038z\"\n          fill=\"#8c8c8c\"\n          transform=\"translate(0 -715.385)\"\n        />\n        <path\n          d=\"m392.07 477.706 5.141-3.039-5.141-2.337z\"\n          fill=\"#141414\"\n          transform=\"translate(-386.929 -466.137)\"\n        />\n        <path\n          d=\"m0 474.667 5.141 3.039v-5.376z\"\n          fill=\"#393939\"\n          transform=\"translate(0 -466.137)\"\n        />\n      </g>\n    </svg>\n  );\n};\n\n/// CONSTANTS\nconst ZERO_ADDRESS = \"0x0000000000000000000000000000000000000000\";\n\nconst CONFIG = {\n  testnet: {\n    CHAIN_ID: 114,\n    NETWORK_INFO: {\n      blockExplorerUrls: [\"https://coston2-explorer.flare.network//\"],\n      iconUrls: [\n        \"https://flare-explorer.flare.network/images/flare-120c821cf29e165c8d80f1ccfb076a37.svg?vsn=d\",\n      ],\n      rpcUrls: [\"https://coston2-api.flare.network/ext/bc/C/rpc\"],\n      chainId: \"0x72\",\n      chainName: \"Flare Testnet Coston2i\",\n      nativeCurrency: {\n        name: \"C2FLR\",\n        symbol: \"C2FLR\",\n        decimals: 18,\n      },\n    },\n  },\n};\n\n/// State\nState.init({\n  payAmount: \"\",\n  payTokenData: undefined,\n  leverage: 1.1,\n  isLong: true,\n  sender: undefined,\n  balance: undefined,\n  network: undefined,\n  showSettings: false,\n});\nconst {\n  payAmount,\n  payTokenData,\n  leverage,\n  isLong,\n  sender,\n  balance,\n  network,\n  showSettings,\n} = state;\n\nconst price = ethers.utils.formatUnits(payTokenData || \"0\", 5);\n\nconsole.log(\"price\", price);\nconst currentConfig = CONFIG[\"testnet\"];\n\nconst feeValue = leveragedValue && leveragedValue * 0.0014;\nconst feeValueDisplay =\n  \"-$\" +\n  Math.max(feeValue, 1.5).toLocaleString(\"en-US\", {\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2,\n  });\n\n// FETCH ABI\nconst abiResponse = fetch(\n  \"https://gist.githubusercontent.com/Markeljan/73299b201d5747a0f6bf89eb8b4b4af2/raw/3f2310a80104b8cfc6dbc4e575cb0e213e170f70/MULTIDEX_ABI.json\"\n);\n\nif (!abiResponse.ok) {\n  return \"Loading ABI...\";\n}\n\nconst MULTIDEX_ABI = abiResponse.body;\n\n// RECONNECT TO WALLET\nif (sender === undefined) {\n  State.update({ sender: Ethers.send(\"eth_requestAccounts\", [])[0] });\n}\n\nconst iface = new ethers.utils.Interface(MULTIDEX_ABI);\n\n// FETCH WALLET BALANCE\nif (sender && balance === undefined) {\n  Ethers.provider()\n    .getBalance(sender)\n    .then((balance) => {\n      State.update({ balance: Big(balance).div(Big(10).pow(18)).toFixed(12) });\n    });\n\n  Ethers.provider()\n    .getNetwork()\n    .then((network) => {\n      if (network.chainId === CONFIG.testnet.CHAIN_ID) {\n        State.update({ network: \"testnet\" });\n      } else {\n        State.update({ network: \"unsupported\" });\n      }\n    });\n}\n\nconst multidexContract =\n  sender &&\n  new ethers.Contract(\n    \"0xa24e3200e1A2FEa4927C30505407e20aFf68ecb7\",\n    MULTIDEX_ABI,\n    Ethers.provider().getSigner()\n  );\n\n// FETCH DATA\nconst flareOracleData =\n  multidexContract &&\n  multidexContract[\"getTokenPriceWei\"](\"testETH\").then((res) => {\n    // res is a promise i need res[0] it is in hex but I want to set State to it\n    State.update({ payTokenData: res[0] });\n  });\n\nconsole.log(\"payTokenData\", payTokenData);\n\nconsole.log(\"flareOracleData\", flareOracleData);\n\nconst ethTokenData = flareOracleData[0];\n\nconst primaryButtonText = \"Swap\";\n\n// RECONNECT TO WALLET\nif (sender === undefined) {\n  State.update({ sender: Ethers.send(\"eth_requestAccounts\", [])[0] });\n}\n\n// FETCH WALLET BALANCE\nif (sender && balance === undefined) {\n  Ethers.provider()\n    .getBalance(sender)\n    .then((balance) => {\n      State.update({ balance: Big(balance).div(Big(10).pow(18)).toFixed(12) });\n    });\n\n  Ethers.provider()\n    .getNetwork()\n    .then((network) => {\n      if (network.chainId === CONFIG.testnet.CHAIN_ID) {\n        State.update({ network: \"testnet\" });\n      } else {\n        State.update({ network: \"unsupported\" });\n      }\n    });\n}\nconst payAmountBigNumber = ethers.utils.parseEther(payAmount || \"0\");\n/// FUNCTIONS\nfunction swap() {\n  multidexContract[\"swapTokenToToken\"](\n    // weth\n    \"0xDbCae8192036b8e52614899fd176F2804b01278C\",\n    // usdc\n    \"0xE38b9b20B5ff326AFA16284cA028cb5627B60722\",\n    //_tokensSold\n    payAmountBigNumber,\n    //priceGaurd\n    0\n  ).then((res) => {\n    console.log(\"res\", res);\n  });\n}\n\n/// HANDLERS\n\nfunction handleClickMax() {\n  State.update({\n    payAmount: (balance * 0.95).toFixed(4) || \"0.0\",\n  });\n}\n\nfunction handleClickSwitchNetwork(network) {\n  // try connecting if no sender\n  if (!sender) {\n    State.update({ sender: Ethers.send(\"eth_requestAccounts\", [])[0] });\n  }\n\n  const chainId = CONFIG[network].CHAIN_ID;\n  try {\n    Ethers.send(\"wallet_switchEthereumChain\", [{ chainId: chainId }]);\n  } catch (e) {\n    console.log(\"error switching network\", e);\n  }\n  try {\n    Ethers.send(\"wallet_addEthereumChain\", [CONFIG[network].NETWORK_INFO]);\n  } catch (e) {\n    console.log(\"error adding new network\", e);\n  }\n}\n\nfunction handleChangePayAmount(e) {\n  if (e.target.value === \".\" && !payAmount) {\n    State.update({\n      payAmount: \"0.\",\n    });\n  }\n  if (isNaN(e.target.value)) {\n    return;\n  }\n\n  State.update({\n    payAmount: e.target.value,\n  });\n}\n\nreturn (\n  <DaisyUIWrapper>\n    <div class=\"card max-w-2xl mx-auto bg-neutral text-white\">\n      <div class=\"px-4 pt-4\">\n        <div class=\"relative flex justify-center\">\n          {network && (\n            <button\n              class=\"btn btn-xs btn-outline absolute right-0 top-0\"\n              onClick={() => {\n                State.update({ showSettings: !state.showSettings });\n              }}\n            >\n              {network === \"unsupported\" ? \"Unsupported network\" : network}\n            </button>\n          )}\n\n          {/* settings menu */}\n          {state.showSettings && (\n            <div class=\"absolute right-0 top-8 bg-gray-900 rounded p-3\">\n              <div class=\"flex flex-col gap-2\">\n                <button\n                  class={`btn btn-xs btn-outline${\n                    network === \"testnet\" ? \" bg-red-700\" : \"\"\n                  }`}\n                  onClick={() => {\n                    network === \"testnet\"\n                      ? State.update({ showSettings: false })\n                      : handleClickSwitchNetwork(\"testnet\");\n                  }}\n                >\n                  Testnet\n                </button>\n              </div>\n            </div>\n          )}\n        </div>\n\n        <label class=\"label\">\n          <span class=\"label-text text-lg\">SwapGuard</span>\n        </label>\n\n        <label class=\"label\">\n          <p class=\"label-text text-gray-500\">\n            Ethereum Price from Flare Oracle\n          </p>\n          <p class=\"label-text text-2xl\">${price}</p>\n        </label>\n\n        <div class=\"bg-pink-900 rounded p-2 mb-2\">\n          <label class=\"label pl-4\">\n            <span class=\"label-text text-gray-500\">Pay{payValueDisplay}</span>\n            <span class=\"label-text text-gray-500\">\n              Balance:\n              <span class=\"text-white\">{Number(balance || 0).toFixed(4)}</span>\n            </span>\n          </label>\n          <div class=\"flex\">\n            <input\n              class=\"input w-full bg-pink-900 text-2xl focus:outline-none\"\n              onChange={(e) => handleChangePayAmount(e)}\n              value={payAmount}\n              placeholder=\"0.0\"\n            />\n            <div class=\"flex items-center space-x-1\">\n              {balance > 0 && (\n                <button\n                  class=\"btn btn-sm border-none font-normal rounded-1 px-2 mx-1 bg-red-300 hover:bg-red-300 focus:bg-red-200\"\n                  onClick={() => payAmount !== balance && handleClickMax()}\n                >\n                  MAX\n                </button>\n              )}\n              <IconETH />\n              <select disabled class=\"select-ghost bg-red-300 text-2xl\">\n                <option disabled selected>\n                  WETH\n                </option>\n              </select>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"bg-pink-900 rounded p-2\">\n          <label class=\"label pl-4 pr-2\">\n            <span class=\"label-text text-gray-500\">\n              Receive\n              {`$${price * payAmount}`}\n            </span>\n            <span class=\"label-text\">\n              <span class=\"text-gray-500\">Leverage: </span>\n              {leverage.toFixed(2)}x\n            </span>\n          </label>\n          <div class=\"flex\">\n            <input\n              class=\"input w-full bg-pink-900 text-2xl focus:outline-none\"\n              value={payAmount * price}\n              placeholder=\"0.0\"\n            />\n            <div class=\"flex items-center space-x-1\">\n              <USDCIcon />\n              <select disabled class=\"select-ghost  bg-red-300 text-2xl\">\n                <option disabled selected>\n                  USDC\n                </option>\n              </select>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"px-4 pb-4\">\n        {sender ? (\n          <button\n            class={`btn w-full bg-red-200 hover:bg-red-300 focus:bg-red-500 mt-2`}\n            onClick={() => swap()}\n          >\n            {primaryButtonText}\n          </button>\n        ) : (\n          <button\n            disabled={sender && payAmount <= 0}\n            class=\"relative btn w-full bg-red-700 hover:bg-red-300 focus:bg-indigo-500 mt-2\"\n          >\n            Connect Wallet\n            <Web3Connect\n              className=\"opacity-0 absolute w-full h-full\"\n              connectLabel=\"Connect with Web3\"\n            />\n          </button>\n        )}\n      </div>\n    </div>\n  </DaisyUIWrapper>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/markeljan.near/widget/SwapGuard", "fact_widget_deployments_id": "53800d4ba280f290ec80d263c5ee394a", "inserted_timestamp": "2023-10-29T16:18:57.267Z", "modified_timestamp": "2023-10-29T16:18:57.267Z", "__row_index": 3}