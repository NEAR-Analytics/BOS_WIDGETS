{"tx_hash": "FYEN6gaZViwLstWD3gGMBTHHFsj9MuxFiCydQEjfs4RW", "action_id_social": "6C6J4bA2bNfQiEYweWitM4VeJA9wH26e8dSt66uUVLJi-0-widget", "block_id": 96786137, "block_timestamp": "2023-07-18T20:37:34.105Z", "signer_id": "nomination.ndctools.near", "widget_name": "NDC.Nomination.Compose", "source_code": "const { handleClose, nomination_contract } = props;\n\nlet Socialcontract = \"social.near\";\n\nlet profileInfo = Social.getr(`${context.accountId}/profile`);\n\nlet imageIsNFT = profileInfo.image.nft ? true : false;\nlet imageIsIpfs_cid = profileInfo.image.ipfs_cid ? true : false;\nlet imageIsUrl = profileInfo.image.url ? true : false;\nlet RealProfileImageAsURL = \"\";\n\nconst widgets = {\n  styledComponents: \"nomination.ndctools.near/widget/NDC.StyledComponents\",\n  affiliations:\n    \"nomination.ndctools.near/widget/NDC.Nomination.Compose.Affiliations\",\n  platform: \"nomination.ndctools.near/widget/NDC.Nomination.Compose.Platform\",\n  page: \"nomination.ndctools.near/widget/NDC.Nomination.Page\",\n  tags: \"nomination.ndctools.near/widget/NDC.Nomination.Compose.Tags\",\n};\n\nif (imageIsNFT) {\n  let nftData = profileInfo.image.nft;\n  const getNftCid = Near.view(nftData.contractId, \"nft_token\", {\n    token_id: nftData.tokenId,\n  });\n\n  RealProfileImageAsURL =\n    \"https://nativonft.mypinata.cloud/ipfs/\" + getNftCid.metadata.media;\n  console.log(\"was nft\", RealProfileImageAsURL);\n}\n\nif (imageIsIpfs_cid) {\n  RealProfileImageAsURL =\n    \"https://nativonft.mypinata.cloud/ipfs/\" + profileInfo.image.ipfs_cid;\n  console.log(\"was ipfs\", RealProfileImageAsURL);\n}\n\nif (imageIsUrl) {\n  RealProfileImageAsURL = profileInfo.image.url;\n  console.log(\"was url\", RealProfileImageAsURL);\n}\n\nState.init({\n  theme,\n  img: {\n    uploading: \"false\",\n    url: RealProfileImageAsURL,\n    name: RealProfileImageAsURL ? \"Uploaded from Social Profile\" : \"\",\n  },\n  name: profileInfo.name ? profileInfo.name : \"\",\n  profileAccount: context.accountId ? \"@\" + context.accountId : \"\",\n  house_intended: 0,\n  HAYInvolve: \"\",\n  WIYStrategy: \"\",\n  Key_Issue_1: \"\",\n  Key_Issue_2: \"\",\n  Key_Issue_3: \"\",\n  addition_platform: \"\",\n  afiliation: [\n    {\n      company_name: \"\",\n      start_date: \"\",\n      end_date: \"\",\n      role: \"\",\n    },\n  ],\n  agreement: \"false\",\n  tags: \"\",\n  error_msg: \"\",\n  video: \"\",\n});\n\nconst CardStyled = styled.div`\n  width: 70%;\n  height: 100%;\n  background: #f8f8f9;\n  gap: 10px;\n  padding: 20px;\n  margin: 0 auto;\n  border-radius: 10px;\n  overflow-y: scroll;\n`;\n\nconst CardForm = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: auto;\n`;\n\nconst H1 = styled.h1`\n  margin-bottom: 10px;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 16px;\n`;\n\nconst Submitcontainer = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  gap: 8px;\n  margin-bottom: 16px;\n  @media only screen and (max-width: 480px) {\n    margin-top: 10px;\n  }\n`;\n\nconst HiddeableWidget = styled.div`\n  display: none;\n  @media (max-width: 480px) {\n    display: block;\n  }\n`;\n\nconst Modal = styled.div`\n  position: fixed;\n  z-index: 101;\n  top: 0px;\n  left: 0px;\n  width: 100%;\n  height: 100vh;\n  background: rgba(128, 128, 128, 0.65);\n`;\n\nconst ComponentWrapper = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 80%;\n  z-index: 100;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n\nconst ErrorBlock = styled.div`\n  border-radius: 4px;\n  border: 1px solid #c23f38;\n  background: #f1d6d5;\n  color: #c23f38;\n  font-size: 12px;\n  padding: 8px 12px;\n  margin: 20px 0 30px 0;\n`;\n\nconst Hr = styled.div`\n  height: 1px;\n  margin: 15px 0;\n  width: 100%;\n  background: rgba(208, 214, 217, 0.4);\n`;\n\nconst Section = styled.div`\n  margin: 12px 0;\n`;\n\nconst validatedInputs = () => {\n  const {\n    img,\n    name,\n    profileAccount,\n    house_intended,\n    HAYInvolve,\n    WIYStrategy,\n    Key_Issue_1,\n    Key_Issue_2,\n    Key_Issue_3,\n    afiliation,\n    agreement,\n    tags,\n  } = state;\n\n  const isEmpty = (str) => str.trim() === \"\";\n  const isFalse = (check) => check === \"false\";\n  let isValid = true;\n\n  if (img.cid === null) {\n    State.update({ error_msg: \"Pic an image\" });\n    isValid = false;\n  }\n  if (isEmpty(name)) {\n    State.update({ error_msg: \"Fill the name\" });\n    isValid = false;\n  }\n  if (isEmpty(profileAccount)) {\n    State.update({ error_msg: \"Fill the Profile Account\" });\n    isValid = false;\n  }\n  if (house_intended === 0) {\n    State.update({ error_msg: \"Select a house\" });\n    isValid = false;\n  }\n  if (isEmpty(HAYInvolve)) {\n    State.update({ error_msg: \"How are you involved?\" });\n    isValid = false;\n  }\n  if (isEmpty(WIYStrategy)) {\n    State.update({ error_msg: \"What is your strategy?\" });\n    isValid = false;\n  }\n  if (isEmpty(Key_Issue_1)) {\n    State.update({ error_msg: \"Fill the key issued 1\" });\n    isValid = false;\n  }\n  if (isEmpty(Key_Issue_2)) {\n    State.update({ error_msg: \"Fill the key issued 2\" });\n    isValid = false;\n  }\n  if (isEmpty(Key_Issue_3)) {\n    State.update({ error_msg: \"Fill the key issued 3\" });\n    isValid = false;\n  }\n  if (tags.split(\",\").length == 0) {\n    State.update({ error_msg: \"Write a tag\" });\n    isValid = false;\n  }\n  if (isFalse(agreement)) {\n    State.update({ error_msg: \"Accept the declaration\" });\n    isValid = false;\n  }\n  if (afiliation.length == 0) {\n    State.update({ error_msg: \"Add a affiliation\" });\n    isValid = false;\n  }\n\n  if (afiliation.length > 0) {\n    afiliation.forEach((element) => {\n      if (isEmpty(element.company_name)) {\n        State.update({ error_msg: \"Fill the company name\" });\n        isValid = false;\n      }\n      if (isEmpty(element.start_date)) {\n        State.update({ error_msg: \"Select a start date\" });\n        isValid = false;\n      }\n      if (isEmpty(element.end_date)) {\n        State.update({ error_msg: \"Select a end date\" });\n        isValid = false;\n      }\n      if (isEmpty(element.role)) {\n        State.update({ error_msg: \"Write your role\" });\n        isValid = false;\n      }\n    });\n  } else {\n    State.update({ error_msg: null });\n    isValid = false;\n  }\n\n  return isValid;\n};\n\nconst uploadFileUpdateState = (body) => {\n  asyncFetch(\"https://ipfs.near.social/add\", {\n    method: \"POST\",\n    headers: { Accept: \"application/json\" },\n    body,\n  }).then(async (res) => {\n    const _cid = res.body.cid;\n    const _name = body.name;\n    State.update({ img: { uploading: \"true\", cid: _cid, name: _name } });\n  });\n};\n\nconst filesOnChange = (files) => {\n  if (files) {\n    State.update({ error_msg: null });\n    uploadFileUpdateState(files[0]);\n  }\n};\n\nconst handleName = (item) => State.update({ name: item, error_msg: null });\n\nconst handleProfile = (item) =>\n  State.update({ profileAccount: item, error_msg: null });\n\nconst handleChangeHouse = (item) => {\n  if (item === \"HouseOfMerit\") Storage.privateSet(\"Houseselected\", 1);\n  if (item === \"CouncilOfAdvisors\") Storage.privateSet(\"Houseselected\", 2);\n  if (item === \"TransparencyCommission\") Storage.privateSet(\"Houseselected\", 3);\n\n  State.update({ house_intended: item, error_msg: null });\n};\n\nconst addFields = () => {\n  var temp = state.afiliation;\n  let object = {\n    company_name: \"\",\n    start_date: \"\",\n    end_date: \"\",\n    role: \"\",\n  };\n\n  if (temp.length === 6) return;\n\n  temp.push(object);\n  State.update({ afiliation: temp, error_msg: null });\n};\n\nconst removeField = (index) => {\n  State.update({\n    afiliation: state.afiliation.splice(index, 1),\n    error_msg: null,\n  });\n};\n\nconst validate = (key, item, limit) =>\n  State.update({ [key]: item.substring(0, limit ?? 2000), error_msg: null });\n\nconst validateAffiliations = (params, key, limit) => {\n  let data = state.afiliation;\n\n  data[params.index][key] = params.event.target.value.substring(0, limit);\n  State.update({ afiliation: data, error_msg: null });\n};\n\nconst handleDeclaration = (item) => {\n  State.update({ agreement: item.target.checked.toString(), error_msg: null });\n};\n\nconst handleNominate = () => {\n  if (!validatedInputs()) return;\n\n  let newstate = Object.assign({}, state);\n  newstate.afiliation = JSON.stringify(newstate.afiliation);\n  const stateAsString = JSON.stringify(newstate);\n  const data = ` {\"data\":{ \"${context.accountId}\": {\"nominations\":${stateAsString}} }}`;\n  const SocialArgs = JSON.parse(data);\n\n  let SelfNominate_Payload = {\n    contractName: nomination_contract,\n    methodName: \"self_nominate\",\n    args: {\n      house: state.house_intended,\n      comment: context.accountId,\n      link: \"\",\n    },\n    gas: 300000000000000,\n    deposit: 100000000000000000000000,\n  };\n\n  let Social_Payload = {\n    contractName: Socialcontract,\n    methodName: \"set\",\n    args: SocialArgs,\n    gas: 300000000000000,\n    deposit: 100000000000000000000000,\n  };\n\n  Near.call([Social_Payload, SelfNominate_Payload]).then(() => handleClose());\n};\n\nreturn (\n  <Modal>\n    <ComponentWrapper>\n      <div\n        style={{\n          display: \"flex\",\n          \"justify-content\": \"center\",\n          \"padding-top\": \"16px\",\n          \"margin-bottom\": \"15px\",\n        }}\n      >\n        <HiddeableWidget>\n          <Widget\n            src={widgets.page}\n            props={{\n              nominationData: {\n                img: {\n                  cid: state.img.cid,\n                  isCid: RealProfileImageCid.IS_CID,\n                },\n                profileAccount: state.profileAccount,\n                afiliation: JSON.stringify(state.afiliation),\n                HAYInvolve: state.HAYInvolve,\n                WIYStrategy: state.WIYStrategy,\n                Key_Issue_1: state.Key_Issue_1,\n                Key_Issue_2: state.Key_Issue_2,\n                Key_Issue_3: state.Key_Issue_3,\n                addition_platform: state.addition_platform,\n                tags: state.tags,\n                video: state.video,\n              },\n              indexerData: {\n                house: state.house_intended,\n                timestamp: \"\",\n                nominee: \"\",\n              },\n              profileData: {\n                name: state.name,\n              },\n              upVoteData: {\n                upvotes: \"0\",\n                comments: [],\n              },\n              preview: true,\n            }}\n          />\n        </HiddeableWidget>\n      </div>\n      <CardStyled name=\"compose\">\n        <div className=\"d-flex flex-column \">\n          <H1>Self Nominate</H1>\n\n          <CardForm name=\"cardform\">\n            <Widget\n              src={widgets.styledComponents}\n              props={{\n                Dropdown: {\n                  label: \"House\",\n                  value: state.house_intended,\n                  handleChange: (item) => handleChangeHouse(item),\n                  options: [\n                    { title: \"Select house\", value: 0, default: true },\n                    { title: \"House Of Merit\", value: \"HouseOfMerit\" },\n                    {\n                      title: \"Council Of Advisors\",\n                      value: \"CouncilOfAdvisors\",\n                    },\n                    {\n                      title: \"Transparency Commission\",\n                      value: \"TransparencyCommission\",\n                    },\n                  ],\n                },\n              }}\n            />\n            <Hr />\n            <Widget\n              src={widgets.platform}\n              props={{\n                inputs: [\n                  {\n                    label:\n                      \"How are you involved with the NEAR ecosystem? Why are you a qualified candidate? Why should people vote for you?\",\n                    placeholder: \"Elaborate\",\n                    value: state.HAYInvolve,\n                    handleChange: (e) => validate(\"HAYInvolve\", e.target.value),\n                  },\n                  {\n                    label:\n                      \"What is your strategy to develop the NEAR ecosystem?\",\n                    placeholder: \"Elaborate on your strategy\",\n                    value: state.WIYStrategy,\n                    handleChange: (e) =>\n                      validate(\"WIYStrategy\", e.target.value),\n                  },\n                  {\n                    label:\n                      \"What\u2019s your view and pledge on the issue of User Experience and Accessibility? This issue focuses on improving the user experience, developing the social layer, enhancing the developer experience, and making the Near platform accessible to all users, including those with little technical expertise. It also explores how Near can evoke positive emotions in its users.\",\n                    placeholder: \"Elaborate on your position and pledge\",\n                    value: state.Key_Issue_1,\n                    handleChange: (e) =>\n                      validate(\"Key_Issue_1\", e.target.value),\n                  },\n                  {\n                    label:\n                      \"What\u2019s your view and pledge on the issue of Economic Growth and Innovation? This issue emphasizes the need for economic growth within the NDC, the development of DeFi capabilities, the establishment of fiat ramps, and the support for founders, developers, creators, and builders. It also stresses the importance of launching useful products on the Near mainnet.\",\n                    placeholder: \"Elaborate on your position and pledge\",\n                    value: state.Key_Issue_2,\n                    handleChange: (e) =>\n                      validate(\"Key_Issue_2\", e.target.value),\n                  },\n                  {\n                    label:\n                      \"What\u2019s your view and pledge on the issue of Marketing and Outreach? This issue underscores the importance of marketing to make NEAR a household name, conducting research, participating in conferences and hackathons, integrating with Web 2.0 platforms, and promoting Near as a hub of innovation.\",\n                    placeholder: \"Elaborate on your position and pledge\",\n                    value: state.Key_Issue_3,\n                    handleChange: (e) =>\n                      validate(\"Key_Issue_3\", e.target.value),\n                  },\n                  {\n                    label: \"Additional Platform\",\n                    placeholder:\n                      \"Elaborate on your position and your pledge on additional issues and topics\",\n                    value: state.addition_platform,\n                    handleChange: (e) =>\n                      validate(\"addition_platform\", e.target.value),\n                  },\n                ],\n              }}\n            />\n            <Widget\n              src={widgets.affiliations}\n              props={{\n                affiliations: state.afiliation,\n                addFields,\n                removeField,\n                handleAFFCompanyName: (params) =>\n                  validateAffiliations(params, \"company_name\", 500),\n                handleAFFStartdate: (params) =>\n                  validateAffiliations(params, \"start_date\"),\n                handleAFFEnddate: (params) =>\n                  validateAffiliations(params, \"end_date\"),\n                handleAFFRole: (params) =>\n                  validateAffiliations(params, \"role\", 500),\n              }}\n            />\n\n            <Section>\n              <Widget\n                src={widgets.styledComponents}\n                props={{\n                  Input: {\n                    label: \"Video Link (optional)\",\n                    placeholder:\n                      \"Add a Youtube video link that describes your candidacy\",\n                    value: state.video,\n                    handleChange: (e) =>\n                      State.update({ video: e.target.value }),\n                  },\n                }}\n              />\n            </Section>\n\n            <Widget\n              src={widgets.tags}\n              props={{\n                agreement: state.agreement,\n                tags: state.tags,\n                handleTags: (e) => validate(\"tags\", e.target.value, 500),\n                handleDeclaration,\n              }}\n            />\n\n            {state.error_msg && (\n              <ErrorBlock>\n                <label className=\"text-danger\">{state.error_msg}</label>\n              </ErrorBlock>\n            )}\n\n            <div className=\"col-sm-12 px-4 w-100\">\n              <Submitcontainer>\n                <Widget\n                  src={widgets.styledComponents}\n                  props={{\n                    Button: {\n                      className: \"secondary dark\",\n                      text: \"Cancel\",\n                      onClick: handleClose,\n                    },\n                  }}\n                />\n                <Widget\n                  src={widgets.styledComponents}\n                  props={{\n                    Button: {\n                      text: \"Submit\",\n                      onClick: () => handleNominate(),\n                    },\n                  }}\n                />\n              </Submitcontainer>\n            </div>\n          </CardForm>\n        </div>\n      </CardStyled>\n    </ComponentWrapper>\n  </Modal>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/nomination.ndctools.near/widget/NDC.Nomination.Compose", "fact_widget_deployments_id": "8142295ce48199c977670fc6400d0466", "inserted_timestamp": "2000-01-01T00:00:00.000Z", "modified_timestamp": "2000-01-01T00:00:00.000Z", "__row_index": 1}