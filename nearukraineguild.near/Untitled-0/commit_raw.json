{"tx_hash": "DNiAdNH4HC721mXJYzj5izm7rnE3fuZUP9ZZJk9c2UBR", "action_id_social": "6yFgCYVxB4ZnD74KEMXtLfuJ8z1u9BhSHTAMHMmGpNKz-0-widget", "block_id": 96249562, "block_timestamp": "2023-07-11T21:15:54.860Z", "signer_id": "nearukraineguild.near", "widget_name": "Untitled-0", "source_code": "const TableWrapper = styled.div`\n  overflow-x: auto;\n  max-width: 100%;\n`;\n\nconst Table = styled.table`\n  width: 100%;\n  border-collapse: collapse;\n`;\n\nconst TableRow = styled.tr`\n  border-bottom: 1px solid #ddd;\n`;\n\nconst TableCell = styled.td`\n  padding: 8px;\n  white-space: nowrap;\n  text-align: left;\n\n  @media (max-width: 768px) {\n    display: block;\n    padding: 6px;\n    font-size: 14px;\n    text-align: left;\n  }\n`;\n\nconst CandidateName = styled.span`\n  color: #007bff;\n  text-decoration: underline;\n  cursor: pointer;\n`;\n\nconst VotesTable = styled.table`\n  width: 100%;\n  border-collapse: collapse;\n  margin-top: 16px;\n`;\n\nconst VotesTableRow = styled.tr`\n  border-bottom: 1px solid #ddd;\n`;\n\nconst VotesTableCell = styled.td`\n  padding: 8px;\n  text-align: left;\n`;\n\nconst candidates = Near.view(\"rc-dao.sputnik-dao.near\", \"get_proposals\", {\n  from_index: 911,\n  limit: 26,\n});\nconsole.log(\"candidates\", candidates);\n\nconst extractCandidateInfo = (description) => {\n  const startIndex = description.indexOf(\"Candidate:\") + 11;\n  const endIndex = description.indexOf(\"(\");\n  const candidateName = description.substring(startIndex, endIndex).trim();\n  const nameWithoutLink = candidateName.replace(/ *\\([^)]*\\) */g, \"\");\n  const link = description\n    .substring(endIndex + 1, description.length - 1)\n    .trim();\n\n  return {\n    candidateName: nameWithoutLink,\n    link,\n  };\n};\n\nconst europe = [];\nconst asia = [];\nconst afrika = [];\nconst northAmerica = [];\nconst southAmerica = [];\nconst avb = [];\n\nState.init({ selectedCandidate: null });\n\ncandidates.map((candidate) => {\n  let votesCount = 0;\n  const keys = Object.keys(candidate.votes);\n\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    votesCount++;\n  }\n\n  // Check if the description contains the name of a continent\n\n  const candidateName = extractCandidateInfo(candidate.description);\n  const updatedCandidate = {\n    ...candidate,\n    votesCount,\n    ...candidateName,\n  };\n  const description = candidate.description.toLowerCase();\n  if (description.includes(\"europe\")) {\n    europe.push(updatedCandidate);\n  } else if (description.includes(\"asia\")) {\n    asia.push(updatedCandidate);\n  } else if (description.includes(\"africa\")) {\n    afrika.push(updatedCandidate);\n  } else if (description.includes(\"north america\")) {\n    northAmerica.push(updatedCandidate);\n  } else if (description.includes(\"south america\")) {\n    southAmerica.push(updatedCandidate);\n  } else {\n    avb.push(updatedCandidate);\n  }\n  return;\n});\n\nconst handleCandidateClick = (candidate) => {\n  State.update({ selectedCandidate: candidate });\n};\n\nconsole.log(selectedCandidate);\n\nconst renderVotesTable = () => {\n  if (!selectedCandidate) {\n    return null;\n  }\n\n  const votesKeys = Object.keys(selectedCandidate.votes);\n\n  return (\n    <VotesTable>\n      <tbody>\n        {votesKeys.map((voteKey, index) => (\n          <VotesTableRow key={index}>\n            <VotesTableCell>{voteKey}</VotesTableCell>\n          </VotesTableRow>\n        ))}\n      </tbody>\n    </VotesTable>\n  );\n};\n\nconst CandidateTable = ({ title, candidates }) => (\n  <div>\n    <h2>{title}</h2>\n    <TableWrapper>\n      <Table>\n        <tbody>\n          {candidates.map((candidate, index) => (\n            <TableRow\n              key={index}\n              onClick={() => handleCandidateClick(candidate)}\n            >\n              <TableCell>\n                <CandidateName>\n                  <a\n                    href={candidate.link}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    {candidate.candidateName}\n                  </a>\n                </CandidateName>\n              </TableCell>\n              <TableCell>Votes: {candidate.votesCount}</TableCell>\n            </TableRow>\n          ))}\n        </tbody>\n      </Table>\n    </TableWrapper>\n  </div>\n);\n\nconst sortedEurope = europe.slice().sort((a, b) => b.votesCount - a.votesCount);\nconst sortedAsia = asia.slice().sort((a, b) => b.votesCount - a.votesCount);\nconst sortedAfrika = afrika.slice().sort((a, b) => b.votesCount - a.votesCount);\nconst sortedNorthAmerica = northAmerica\n  .slice()\n  .sort((a, b) => b.votesCount - a.votesCount);\nconst sortedSouthAmerica = southAmerica\n  .slice()\n  .sort((a, b) => b.votesCount - a.votesCount);\nconst sortedAvb = avb.slice().sort((a, b) => b.votesCount - a.votesCount);\n\nreturn (\n  <div>\n    {renderVotesTable()}\n    <CandidateTable title=\"Europe Candidates\" candidates={sortedEurope} />\n    <CandidateTable title=\"Asia Candidates\" candidates={sortedAsia} />\n    <CandidateTable title=\"Africa Candidates\" candidates={sortedAfrika} />\n    <CandidateTable\n      title=\"North America Candidates\"\n      candidates={sortedNorthAmerica}\n    />\n    <CandidateTable\n      title=\"South America Candidates\"\n      candidates={sortedSouthAmerica}\n    />\n    <CandidateTable title=\"Available Candidates\" candidates={sortedAvb} />\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/nearukraineguild.near/widget/Untitled-0", "fact_widget_deployments_id": "43574fb1961b00267074f09c92e033b8", "inserted_timestamp": "2000-01-01T00:00:00.000Z", "modified_timestamp": "2000-01-01T00:00:00.000Z", "__row_index": 14}