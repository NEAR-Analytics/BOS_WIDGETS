{"tx_hash": "6SoL7axbB7of9MMbiT6TmXWoivDQJktMFrJxyqZxedwj", "action_id_social": "3o44LXDTf2WQLuZy7yShVJW5zRB8Ad2e2q25XT3yCiPr-0-widget", "block_id": 99462789, "block_timestamp": "2023-08-23T09:24:49.024Z", "signer_id": "nearukraineguild.near", "widget_name": "votes", "source_code": "State.init({\n  data: null,\n});\n\nconst fetchVotesData = async (query) => {\n  const url = \"https://mainnet.db.explorer.indexer.near.dev/query\"; // Adjust the URL\n  const body = `\n    WITH votes as (\n      SELECT\n        receipt_predecessor_account_id as user,\n        (args->>'args_json')::json->>'candidate' as candidate,\n        MIN(to_timestamp(receipt_included_in_block_timestamp / 1000000000)) as time\n      FROM action_receipt_actions\n      WHERE\n        receipt_receiver_account_id = 'nominations.ndc-gwg.near'\n        AND action_kind = 'FUNCTION_CALL'\n        AND args ->> 'method_name' = 'upvote'\n        AND (args->>'args_json')::json->>'candidate' = 'vadim.near'\n      GROUP BY receipt_predecessor_account_id, candidate\n    )\n    SELECT * FROM votes\n    ORDER BY time DESC;\n  `;\n\n  const options = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\", // Adjust the content type if needed\n    },\n    body: JSON.stringify({ query: body }),\n    responseType: \"json\", // Adjust the response type as needed\n  };\n\n  try {\n    const response = fetch(url, options);\n    console.log(\"response\", response);\n    return response.body;\n  } catch (error) {\n    console.error(\"Error fetching data:\", error);\n    return null;\n  }\n};\n\n// Usage example\n// const data = fetchVotesData();\n\nif (data.ok) {\n  const rows = data.body\n    .split(\"\\n\")\n    .map((line) => line.split(\"|\"))\n    .filter((data) => data.length === 3)\n    .map((item) => (\n      <tr>\n        <td>\n          <Widget\n            src=\"mob.near/widget/Profile.ShortInlineBlock\"\n            props={{ accountId: item[0], tooltip: false }}\n          />\n        </td>\n        <td class=\"align-top\">\n          <small>{item[2].substr(0, 19)}</small>\n        </td>\n      </tr>\n    ));\n  return (\n    <>\n      <h1>Fantastic users who voted for Vadim</h1>\n      <a\n        href=\"/nomination.ndctools.near/widget/NDC.Nomination.Candidate.Page?house=HouseOfMerit&accountId=vadim.near\"\n        class=\"btn btn-primary mt-2\"\n      >\n        VOTE FOR VADIM!\n      </a>\n      <table class=\"table table-sm mt-4\">\n        <thead>\n          <tr>\n            <th scope=\"col\">User</th>\n            <th scope=\"col\">Vote date (UTC)</th>\n          </tr>\n        </thead>\n        <tbody>{rows}</tbody>\n      </table>\n      <p>\n        <small>\n          Data is retrieved automatically from the\n          <a\n            href=\"https://github.com/zavodil/near-nft-owners-list/blob/main/.github/workflows/indexed.yml\"\n            target=\"_blank\"\n          >\n            NEAR Public indexer\n          </a>{\" \"}\n          with a slight delay.\n        </small>\n      </p>\n    </>\n  );\n} else\n  return (\n    <>\n      \"Loading\"\n      <button onClick={fetchVotesData}>Click</button>\n    </>\n  );\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/nearukraineguild.near/widget/votes", "fact_widget_deployments_id": "16783e1a8ab78cf5c459c4c62827a6a5", "inserted_timestamp": "2023-08-23T11:23:11.352Z", "modified_timestamp": "2023-08-23T11:23:11.352Z", "__row_index": 8}