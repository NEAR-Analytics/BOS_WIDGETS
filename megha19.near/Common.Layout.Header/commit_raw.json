{"tx_hash": "9xvMLPw1Nh4TcSFZ6N5N26EX6Gngzd9WesyRmG4Uysss", "action_id_social": "8rithBGL4GhKbpVCcAVFpJuyEeCiJLhConBk2w9Woz2j-0-widget", "block_id": 111351454, "block_timestamp": "2024-01-26T10:01:11.396Z", "signer_id": "megha19.near", "widget_name": "Common.Layout.Header", "source_code": "/**\n  To make sure that the sidebar displays correctly, you need to add some bootstrap classes to the parent component.\n \n  Add the following className to the parent component: \"row\"\n  and add the following CSS to the content component: \"col\"\n\nExample:\n\nreturn (\n  <div className=\"row\">\n    <Widget src=\"account.near/widget/Common.Layout.Header\" />\n    <div className=\"col\">home</div>\n  </div>\n);\n \n*/\n\nconst hasSidebar = props.hasSidebar ?? true;\nconst items = props.items ?? [];\n\nState.init({\n    sidebarExpanded: false\n});\n\nconst Header = styled.div`\n    border-bottom: 1px solid #e5e5e5;\n\n    .sidebar-toggle {\n        display: none;\n    }\n    @media (max-width: 768px) {\n        .sidebar-toggle {\n            display: block;\n        }\n    }\n`;\n\nconst Sidebar = styled.div`\n    height: 100%;\n    transition: all 0.5s ease-in-out;\n    max-width: 300px;\n    background: #fff;\n    border-right: 1px solid #e5e5e5;\n\n    &.collapsed {\n        padding-right: 26px;\n        max-width: 94px;\n    }\n\n    @media (max-width: 768px) {\n        position: fixed !important;\n        top: 0;\n        bottom: 0;\n        z-index: 10000;\n        left: 0;\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n\n        &.collapsed {\n            left: -400px;\n        }\n    }\n\n    ul {\n        list-style: none;\n        margin: 0;\n        padding: 0;\n        display: flex;\n        flex-direction: column;\n        gap: 16px;\n        align-items: flex-start;\n        width: 100%;\n        max-width: 240px;\n    }\n\n    .group {\n        width: 100%;\n    }\n\n    li {\n        background: #fff;\n        cursor: pointer;\n        border-radius: 8px;\n        width: 100%;\n        transition: all 100ms ease-in-out;\n\n        div,\n        a {\n            padding: 8px 26px;\n            color: #000 !important;\n            text-decoration: none;\n            font-weight: 600;\n            font-size: 15px;\n            letter-spacing: 0;\n            display: flex;\n            gap: 12px;\n            align-items: center;\n        }\n\n        i {\n            font-size: 19px;\n        }\n    }\n\n    li:hover {\n        background-color: rgba(68, 152, 224, 0.1);\n\n        * {\n            color: #4498e0 !important;\n        }\n    }\n\n    li:active {\n        background-color: rgba(68, 152, 224, 0.12);\n        * {\n            color: #4498e0 !important;\n        }\n    }\n\n    li.active {\n        background-color: rgba(68, 152, 224, 0.1);\n\n        * {\n            color: #4498e0 !important;\n        }\n    }\n\n    &.collapsed {\n        li {\n            width: 100% !important;\n\n            div,\n            a {\n                display: flex;\n                flex-direction: column;\n                align-items: center;\n                justify-content: center;\n                font-size: 12px;\n                text-align: center;\n                gap: 4px;\n            }\n        }\n\n        li .title {\n            display: none;\n        }\n\n        .group {\n            li:not(:first-child) {\n                display: none;\n            }\n        }\n    }\n`;\n\nconst Toggle = styled.div`\n    position: absolute;\n    top: 10px;\n    right: -20px;\n    z-index: 10;\n    height: 40px;\n    width: 40px;\n    background: #4498e0;\n    color: #fff;\n    border-radius: 6px;\n    display: grid;\n    place-items: center;\n\n    @media (max-width: 768px) {\n        bottom: 100px;\n        top: auto;\n    }\n`;\n\nconst MobileToggle = styled.div`\n    height: 40px;\n    width: 40px;\n    background: #4498e0;\n    color: #fff;\n    border-radius: 6px;\n    display: grid;\n    place-items: center;\n`;\n\nreturn (\n    <>\n        <Header className=\"d-flex align-items-center py-3 px-md-3 m-0 flex-row\">\n            <MobileToggle\n                className=\"sidebar-toggle btn btn-outline-light\"\n                onClick={() =>\n                    State.update({ sidebarExpanded: !state.sidebarExpanded })\n                }\n            >\n                <i className=\"bi bi-list\"></i>\n            </MobileToggle>\n            <a\n                href=\"#/megha19.near/widget/home\"\n                className=\"h4 text-decoration-none fw-bold text-black m-0\"\n            >\n                <Widget\n                    src=\"megha19.near/widget/Common.logo\"\n                    props={{\n                        height: \"18px\"\n                    }}\n                />\n            </a>\n        </Header>\n        <Sidebar\n            className={[\n                \"position-relative col-sm\",\n                !state.sidebarExpanded && \"collapsed\"\n            ].join(\" \")}\n        >\n            <Toggle\n                role=\"button\"\n                onClick={() =>\n                    State.update({ sidebarExpanded: !state.sidebarExpanded })\n                }\n            >\n                {state.sidebarExpanded ? (\n                    <i className=\"bi bi-chevron-left\"></i>\n                ) : (\n                    <i className=\"bi bi-chevron-right\"></i>\n                )}\n            </Toggle>\n            <ul className=\"pt-4\">\n                {items.map((item, i) => {\n                    if (Array.isArray(item)) {\n                        return (\n                            <div key={i} className=\"group\">\n                                <ul>\n                                    {item.map((subItem, j) => {\n                                        if (subItem.hidden) return null;\n                                        return (\n                                            <li\n                                                key={j}\n                                                className={[\n                                                    subItem.active && \"active\",\n                                                    j > 0 && \"ms-auto\"\n                                                ].join(\" \")}\n                                                style={{\n                                                    width: j > 0 ? \"85%\" : \"\"\n                                                }}\n                                            >\n                                                {subItem.href ? (\n                                                    <a\n                                                        href={subItem.href}\n                                                        onClick={\n                                                            subItem.onClick\n                                                        }\n                                                    >\n                                                        <span className=\"icon\">\n                                                            {subItem.icon}\n                                                        </span>\n                                                        <span className=\"title\">\n                                                            {subItem.title}\n                                                        </span>\n                                                    </a>\n                                                ) : (\n                                                    <div\n                                                        onClick={\n                                                            subItem.onClick\n                                                        }\n                                                        role=\"button\"\n                                                    >\n                                                        <span className=\"icon\">\n                                                            {subItem.icon}\n                                                        </span>\n                                                        <span className=\"title\">\n                                                            {subItem.title}\n                                                        </span>\n                                                    </div>\n                                                )}\n                                            </li>\n                                        );\n                                    })}\n                                </ul>\n                            </div>\n                        );\n                    } else {\n                        if (item.hidden) return null;\n                        return (\n                            <li key={i} className={item.active && \"active\"}>\n                                {item.href ? (\n                                    <a href={item.href} onClick={item.onClick}>\n                                        <span className=\"icon\">\n                                            {item.icon}\n                                        </span>\n                                        <span className=\"title\">\n                                            {item.title}\n                                        </span>\n                                    </a>\n                                ) : (\n                                    <div onClick={item.onClick} role=\"button\">\n                                        <span className=\"icon\">\n                                            {item.icon}\n                                        </span>\n                                        <span className=\"title\">\n                                            {item.title}\n                                        </span>\n                                    </div>\n                                )}\n                            </li>\n                        );\n                    }\n                })}\n            </ul>\n        </Sidebar>\n    </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/megha19.near/widget/Common.Layout.Header", "fact_widget_deployments_id": "c253afbf1ce7a346dc26fa0b6452f597", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 24}