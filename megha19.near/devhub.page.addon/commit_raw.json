{"tx_hash": "J7f2cKyJGnq6C9Agp3dcNcVhyew4EHTrSvPA39xqV4v5", "action_id_social": "Cb4jG5sz7xtF7weCZrWtNSKprvb1aGTpm2otk79MEt4V-0-widget", "block_id": 108401785, "block_timestamp": "2023-12-20T11:35:00.027Z", "signer_id": "megha19.near", "widget_name": "devhub.page.addon", "source_code": "const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  width: 100%;\n  position: relative;\n  padding: 0 1rem;\n\n  @media screen and (max-width: 960px) {\n    padding: 0 1rem;\n  }\n`;\n\nconst Content = styled.div`\n  flex: 1;\n  padding: 20px;\n  overflow: auto;\n`;\n\nconst SettingsButton = styled.button`\n  position: absolute;\n  top: 10px;\n  right: 10px;\n\n  background-color: #fff;\n  display: flex;\n  padding: 14px 16px;\n  align-items: center;\n  gap: 16px;\n  width: 50px;\n  height: 50px;\n\n  border-radius: 4px;\n  border: 1px solid #00ec97;\n\n  z-index: 10;\n\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n\n  &:hover {\n    transform: translateY(2px);\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  }\n\n  &:active {\n    transform: translateY(0);\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n  }\n`;\n\nconst CenteredMessage = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: ${(p) => p.height ?? \"100%\"};\n`;\n\nconst { addon, permissions, handle } = props;\n\nconst { getAllAddons, setCommunityAddon } = VM.require(\n  \"megha19.near/widget/core.adapter.devhub-contract\"\n);\n\nif (!getAllAddons || !setCommunityAddon) {\n  return <p>Loading modules...</p>;\n}\n\nconst availableAddons = getAllAddons();\n\nconst addonMatch = (availableAddons ?? []).find(\n  (it) => it.id === addon.addon_id\n);\n\nif (!addonMatch) {\n  return (\n    <CenteredMessage height={\"384px\"}>\n      <h2>Addon with id: \"{addon.addon_id}\" not found.</h2>\n    </CenteredMessage>\n  );\n}\n\nconst config = JSON.parse(addon.parameters || \"null\");\n\nconst ButtonRow = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst [view, setView] = useState(props.view || \"viewer\");\n\n// TODO : remove after contract data change\nfunction updateWidgetEndpoint(widgetSrc) {\n  widgetSrc = widgetSrc.replace(\"configurator\", \"Configurator\");\n  widgetSrc = widgetSrc.replace(\"devgovgigs.near\", \"megha19.near\");\n  return widgetSrc;\n}\n\nreturn (\n  <Container>\n    {permissions.can_configure && (\n      <SettingsButton\n        onClick={() => setView(view === \"configure\" ? \"view\" : \"configure\")}\n      >\n        {view === \"configure\" ? (\n          <span className=\"bi bi-x\"></span>\n        ) : (\n          <span className=\"bi bi-gear\"></span>\n        )}\n      </SettingsButton>\n    )}\n    <Content>\n      {/* We hide in order to prevent a reload when we switch between two views */}\n      <div className={`${view !== \"configure\" ? \"d-none\" : \"\"}`}>\n        <Widget\n          src={updateWidgetEndpoint(addonMatch.configurator_widget)}\n          props={{\n            ...config,\n            data: config,\n            onSubmit: (data) => {\n              setCommunityAddon({\n                handle,\n                addon: {\n                  ...addon,\n                  parameters: JSON.stringify(data),\n                },\n              });\n            },\n            handle, // this is temporary prop drilling until kanban and github are migrated\n            permissions,\n          }}\n        />\n      </div>\n      <div className={`${view === \"configure\" ? \"d-none\" : \"\"}`}>\n        <Widget\n          src={updateWidgetEndpoint(addonMatch.view_widget)}\n          props={{\n            ...config,\n            data: config,\n            handle,\n            permissions,\n          }}\n        />\n      </div>\n    </Content>\n  </Container>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/megha19.near/widget/devhub.page.addon", "fact_widget_deployments_id": "d5f468c3999da5212870df6039524ac0", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 2}