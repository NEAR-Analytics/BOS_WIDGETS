{"tx_hash": "FUf6BGpqzGa73QkMSiARm9LYBvoDFqEGWJ1jKN4AgM9A", "action_id_social": "Hmc663SGMa8BFQa1HnBcw8SUKNQiQBH87bwyarCP5jQ8-0-widget", "block_id": 113228855, "block_timestamp": "2024-02-20T15:52:27.566Z", "signer_id": "megha19.near", "widget_name": "devhub.entity.proposal.ComposeComment", "source_code": "const ComposeEmbeddCSS = `\n  .CodeMirror {\n    border: none !important;\n    min-height: 50px !important;\n  }\n\n  .editor-toolbar {\n    border: none !important;\n  }\n\n  .CodeMirror-scroll{\n    min-height: 50px !important;\n  }\n`;\nconst notifyAccountId = props.notifyAccountId;\nconst accountId = context.accountId;\nconst item = props.item;\nconst [comment, setComment] = useState(null);\n\nfunction extractMentions(text) {\n  const mentionRegex =\n    /@((?:(?:[a-z\\d]+[-_])*[a-z\\d]+\\.)*(?:[a-z\\d]+[-_])*[a-z\\d]+)/gi;\n  mentionRegex.lastIndex = 0;\n  const accountIds = new Set();\n  for (const match of text.matchAll(mentionRegex)) {\n    if (\n      !/[\\w`]/.test(match.input.charAt(match.index - 1)) &&\n      !/[/\\w`]/.test(match.input.charAt(match.index + match[0].length)) &&\n      match[1].length >= 2 &&\n      match[1].length <= 64\n    ) {\n      accountIds.add(match[1].toLowerCase());\n    }\n  }\n  return [...accountIds];\n}\n\nfunction extractTagNotifications(text, item) {\n  return extractMentions(text || \"\")\n    .filter((accountId) => accountId !== context.accountId)\n    .map((accountId) => ({\n      key: accountId,\n      value: {\n        type: \"mention\",\n        item,\n      },\n    }));\n}\n\nfunction composeData() {\n  const data = {\n    post: {\n      comment: JSON.stringify({\n        type: \"md\",\n        text: comment,\n        item,\n      }),\n    },\n    index: {\n      comment: JSON.stringify({\n        key: item,\n        value: {\n          type: \"md\",\n        },\n      }),\n    },\n  };\n\n  const notifications = extractTagNotifications(comment, {\n    type: \"social\",\n    path: `${accountId}/post/comment`,\n  });\n\n  if (notifyAccountId && notifyAccountId !== context.accountId) {\n    notifications.push({\n      key: notifyAccountId,\n      value: {\n        type: \"comment\",\n        item,\n      },\n    });\n  }\n\n  if (notifications.length) {\n    data.index.notify = JSON.stringify(\n      notifications.length > 1 ? notifications : notifications[0]\n    );\n  }\n\n  Social.set(data, {\n    force: true,\n    onCommit: () => {},\n    onCancel: () => {},\n  });\n}\n\nreturn (\n  <div className=\"d-flex gap-2\">\n    <Widget\n      src={\"megha19.near/widget/devhub.entity.proposal.Profile\"}\n      props={{\n        accountId: accountId,\n      }}\n    />\n    <div className=\"d-flex flex-column gap-2 w-100\">\n      <b className=\"mt-1\">Add a comment</b>\n      <Widget\n        src={\"megha19.near/widget/devhub.components.molecule.Compose\"}\n        props={{\n          data: comment,\n          onChange: setComment,\n          autocompleteEnabled: true,\n          autoFocus: false,\n          placeholder: \"Add your comment here...\",\n          height: \"160\",\n          embeddCSS: ComposeEmbeddCSS,\n        }}\n      />\n      <div className=\"d-flex gap-2 align-content-center justify-content-end\">\n        {/* <Widget\n          src={\"megha19.near/widget/devhub.components.molecule.Button\"}\n          props={{\n            label: \"Cancel\",\n            classNames: { root: \"btn-outline-danger border-0 shadow-none btn-sm\" },\n            onClick: () => {\n              setComment(null);\n            }\n          }}\n        /> */}\n        <Widget\n          src={\"megha19.near/widget/devhub.components.molecule.Button\"}\n          props={{\n            label: \"Comment\",\n            classNames: { root: \"green-btn btn-sm\" },\n            onClick: () => {\n              composeData();\n            },\n          }}\n        />\n      </div>\n    </div>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/megha19.near/widget/devhub.entity.proposal.ComposeComment", "fact_widget_deployments_id": "12097845df30acbb9e020a06444d4f6b", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}