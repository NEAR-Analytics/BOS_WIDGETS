{"tx_hash": "DjvWWz9mxcNGSK3XFj4DdWdA4qh9c7ddH5Qmufn8RKZF", "action_id_social": "Gwnd9XFDyegyByLFDRXBC2qxb8cjcyQmh8TaggNXzmiE-0-widget", "block_id": 109645680, "block_timestamp": "2024-01-05T10:22:51.990Z", "signer_id": "megha19.near", "widget_name": "devhub.entity.addon.kanban.post_board", "source_code": "const { getPostsByLabel } = VM.require(\n  \"devhub.near/widget/core.adapter.devhub-contract\"\n);\nconst { getPost } = VM.require(\n  \"devhub.near/widget/core.adapter.devhub-contract\"\n);\ngetPost || (getPost = () => {});\ngetPostsByLabel || (getPostsByLabel = () => {});\n\nconst postTagsToIdSet = (tags) => {\n  return new Set(\n    (tags ?? [])?.map((tag) => getPostsByLabel({ label: tag }) ?? []).flat(1)\n  );\n};\n\nconst sortByValues = {\n  descendingAmount: \"descending-amount\",\n  ascendingAmount: \"ascending-amount\",\n  descendingDate: \"descending-date\",\n  ascendingDate: \"ascending-date\",\n  ascendingAuthor: \"ascending-author\",\n  descendingAuthor: \"descending-author\",\n  ascendingSponsor: \"ascending-sponsor\",\n  descendingSponsor: \"descending-sponsor\",\n  descendingLikes: \"descending-likes\",\n  ascendingLikes: \"ascending-likes\",\n};\n\nconst [showTable, setShowTable] = useState(false);\nconst [expandTables, setExpandTables] = useState({});\n// we have heading in this component but the logic to display them is in child\nconst [showDescription, setDescriptionDisplay] = useState({});\nconst [showFunding, setFundingDisplay] = useState({});\nconst [showTags, setTagsDisplay] = useState({});\nconst [showSponsor, setSponsorDisplay] = useState({});\n\nconst configToColumnData = ({ columns, tags }) =>\n  Object.entries(columns).reduce((registry, [columnId, column]) => {\n    const postIds = (getPostsByLabel({ label: column.tag }) ?? []).reverse();\n    return {\n      ...registry,\n      [columnId]: {\n        ...column,\n        postIds: postIds,\n      },\n    };\n  }, {});\n\nconst basicAlphabeticalComparison = (a, b) => {\n  if (a < b) return -1;\n  if (a > b) return 1;\n  return 0;\n};\n\nconst KanbanPostBoard = ({ metadata, payload }) => {\n  const boardData = Object.entries(configToColumnData(payload) ?? {});\n\n  const view = boardData.map(([columnId, column]) => {\n    const data = [];\n    column.postIds?.map((postId) => {\n      if (postId) {\n        const postData = getPost({\n          post_id: postId ? parseInt(postId) : 0,\n        });\n        data.push(postData);\n      }\n    });\n\n    // sort data by selected sorting mechanism\n    switch (metadata.ticket.sortBy) {\n      case sortByValues.descendingAmount:\n        data.sort((a, b) => b?.snapshot?.amount - a?.snapshot?.amount);\n        break;\n      case sortByValues.ascendingAmount:\n        data.sort((a, b) => a?.snapshot?.amount - b?.snapshot?.amount);\n        break;\n      case sortByValues.descendingDate:\n        data.sort(\n          (a, b) =>\n            parseInt(b?.snapshot?.timestamp) - parseInt(a?.snapshot?.timestamp)\n        );\n        break;\n      case sortByValues.ascendingDate:\n        data.sort(\n          (a, b) =>\n            parseInt(a?.snapshot?.timestamp) - parseInt(b?.snapshot?.timestamp)\n        );\n        break;\n      case sortByValues.ascendingAuthor:\n        data.sort((a, b) =>\n          basicAlphabeticalComparison(a.author_id, b.author_id)\n        );\n        break;\n      case sortByValues.descendingAuthor:\n        data.sort((a, b) =>\n          basicAlphabeticalComparison(b.author_id, a.author_id)\n        );\n        break;\n      case sortByValues.ascendingSponsor:\n        data.sort((a, b) =>\n          basicAlphabeticalComparison(\n            a?.snapshot?.requested_sponsor || a?.snapshot?.supervisor,\n            b?.snapshot?.requested_sponsor || b?.snapshot?.supervisor\n          )\n        );\n        break;\n      case sortByValues.descendingSponsor:\n        data.sort((a, b) =>\n          basicAlphabeticalComparison(\n            b?.snapshot?.requested_sponsor || b?.snapshot?.supervisor,\n            a?.snapshot?.requested_sponsor || a?.snapshot?.supervisor\n          )\n        );\n        break;\n      case sortByValues.descendingLikes:\n        data.sort((a, b) => b.likes.length - a.likes.length);\n        break;\n      case sortByValues.ascendingLikes:\n        data.sort((a, b) => a.likes.length - b.likes.length);\n        break;\n      default:\n        data;\n        break;\n    }\n\n    if (showTable) {\n      return (\n        <div className=\"card p-2\">\n          <div className=\"d-flex justify-content-between p-3 align-items-center\">\n            <div className=\"d-flex gap-2 align-items-center\">\n              <div style={{ fontSize: 20, fontWeight: 700 }}>\n                {column.title}\n              </div>\n              <div className=\"badge rounded-pill bg-secondary\">\n                {column.postIds.length}\n              </div>\n            </div>\n            {column.postIds?.length > 0 && (\n              <div\n                onClick={() => {\n                  const data = { ...expandTables };\n                  data[columnId] =\n                    typeof data[columnId] === \"boolean\"\n                      ? !data[columnId]\n                      : false;\n\n                  setExpandTables(data);\n                }}\n              >\n                {expandTables[columnId] !== false ? (\n                  <i class=\"bi bi-caret-up\"></i>\n                ) : (\n                  <i class=\"bi bi-caret-down\"></i>\n                )}\n              </div>\n            )}\n          </div>\n\n          {expandTables[columnId] !== false && column.postIds?.length > 0 && (\n            <div className=\"card-body w-100\">\n              <table className=\"table table-bordered\">\n                <thead>\n                  <tr>\n                    <th>Title</th>\n                    {showDescription[columnId] && <th>Description</th>}\n                    {showFunding[columnId] && <th>Amount</th>}\n                    {showSponsor[columnId] && <th>Sponser/Supervisor</th>}\n                    {showTags[columnId] && <th>Tags</th>}\n                  </tr>\n                </thead>\n                <tbody>\n                  {data.length === column.postIds.length &&\n                    data.map((postData) => (\n                      <Widget\n                        src={`devhub.near/widget/devhub.entity.addon.${metadata.ticket.type}`}\n                        props={{\n                          setDescriptionDisplay,\n                          setFundingDisplay,\n                          setSponsorDisplay,\n                          setTagsDisplay,\n                          showDescriptionState: showDescription,\n                          showFundingState: showFunding,\n                          showSponsorState: showSponsor,\n                          showTagsState: showTags,\n                          metadata: { id: postData.id, ...metadata.ticket },\n                          isTableView: true,\n                          columnId,\n                          data: postData,\n                        }}\n                        key={postData.id}\n                      />\n                    ))}\n                </tbody>\n              </table>\n            </div>\n          )}\n        </div>\n      );\n    } else {\n      return (\n        <div\n          className=\"col-3\"\n          style={{ minWidth: \"300px\" }}\n          key={`column-${columnId}-view`}\n        >\n          <div className=\"card rounded-4\">\n            <div\n              className={[\n                \"card-body d-flex flex-column gap-3 p-2\",\n                \"border border-1 rounded-4\",\n              ].join(\" \")}\n              style={{ height: \"75vh\" }}\n            >\n              <span className=\"d-flex flex-column py-1\">\n                <h6 className=\"card-title h6 d-flex align-items-center gap-2 m-0\">\n                  {column.title}\n\n                  <span className=\"badge rounded-pill bg-secondary\">\n                    {column.postIds.length}\n                  </span>\n                </h6>\n\n                <p class=\"text-secondary m-0\">{column.description}</p>\n              </span>\n\n              <div\n                class=\"d-flex flex-column gap-2\"\n                style={{ overflow: \"scroll\" }}\n              >\n                {data.length === column.postIds.length &&\n                  data.map((postData) => (\n                    <Widget\n                      src={`devhub.near/widget/devhub.entity.addon.${metadata.ticket.type}`}\n                      props={{\n                        metadata: { id: postData.postId, ...metadata.ticket },\n                        isTableView: false,\n                        data: postData,\n                      }}\n                      key={postData.postId}\n                    />\n                  ))}\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    }\n  });\n\n  return (\n    <div>\n      <div className=\"d-flex flex-column align-items-center gap-2 pb-4 w-100\">\n        {/* <div class=\"form-check\">\n          <input\n            class=\"form-check-input\"\n            type=\"checkbox\"\n            value={showTable}\n            id={\"table\"}\n            checked={showTable === true}\n            onChange={() => setShowTable(!showTable)}\n          />\n          <label class=\"form-check-label\" for={`table`}>\n            Table View\n          </label>\n        </div> */}\n        <h5 className=\"h4 d-inline-flex gap-2 m-0\">\n          <span>{metadata?.title}</span>\n        </h5>\n\n        <p className=\"h6 m-0 py-1 text-secondary text-center\">\n          {metadata?.description}\n        </p>\n      </div>\n      <div className=\"d-flex gap-3 w-100\" style={{ overflow: \"scroll\" }}>\n        <div\n          className={[\n            \"d-flex align-items-center justify-content-center w-100 text-black-50 opacity-50\",\n            columns.length === 0 ? \"\" : \"d-none\",\n          ].join(\" \")}\n          style={{ height: 384 }}\n        >\n          No columns were created so far.\n        </div>\n        <span\n          className={\n            showTable ? \"w-100 d-flex flex-column gap-3\" : \"d-flex gap-3 w-100\"\n          }\n        >\n          {view}\n        </span>\n      </div>\n    </div>\n  );\n};\n\nreturn KanbanPostBoard(props);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/megha19.near/widget/devhub.entity.addon.kanban.post_board", "fact_widget_deployments_id": "3b413a712c5f91651ff36700c135f4bf", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 9}