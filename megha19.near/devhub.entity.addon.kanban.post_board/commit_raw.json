{"tx_hash": "6zo2NcbBwpBDBwbRBWqM5p95F8XvahgFN1ANXznXkygM", "action_id_social": "Fg8C8AqhqPSUiKfuJyQxwVBuEm8vz37CfuVTVW47mrd1-0-widget", "block_id": 109410544, "block_timestamp": "2024-01-02T14:22:17.654Z", "signer_id": "megha19.near", "widget_name": "devhub.entity.addon.kanban.post_board", "source_code": "const { getPostsByLabel } = VM.require(\n  \"megha19.near/widget/core.adapter.devhub-contract\"\n);\ngetPostsByLabel || (getPostsByLabel = () => {});\n\nconst postTagsToIdSet = (tags) => {\n  return new Set(\n    (tags ?? [])?.map((tag) => getPostsByLabel({ label: tag }) ?? []).flat(1)\n  );\n};\n\nconst [showTable, setShowTable] = useState(false);\nconst [expandTables, setExpandTables] = useState({});\n// we have heading in this component but the logic to display them is in child\nconst [showDescription, setDescriptionDisplay] = useState({});\nconst [showFunding, setFundingDisplay] = useState({});\nconst [showTags, setTagsDisplay] = useState({});\nconst [showSponsor, setSponsorDisplay] = useState({});\n\nconst configToColumnData = ({ columns, tags }) =>\n  Object.entries(columns).reduce((registry, [columnId, column]) => {\n    const postIds = (getPostsByLabel({ label: column.tag }) ?? []).reverse();\n    return {\n      ...registry,\n      [columnId]: {\n        ...column,\n        postIds:\n          tags.required.length > 0\n            ? postIds.filter(\n                (postId) =>\n                  postTagsToIdSet(tags.required).has(postId) &&\n                  !postTagsToIdSet(tags.excluded).has(postId)\n              )\n            : postIds,\n      },\n    };\n  }, {});\n\nconst KanbanPostBoard = ({ metadata, payload }) => {\n  const tableView = Object.entries(configToColumnData(payload) ?? {}).map(\n    ([columnId, column]) => {\n      return (\n        <div className=\"card p-2\">\n          <div className=\"d-flex justify-content-between p-3 align-items-center\">\n            <div className=\"d-flex gap-2 align-items-center\">\n              <div style={{ fontSize: 20, fontWeight: 700 }}>\n                {column.title}\n              </div>\n              <div className=\"badge rounded-pill bg-secondary\">\n                {column.postIds.length}\n              </div>\n            </div>\n            {column.postIds?.length > 0 && (\n              <div\n                onClick={() => {\n                  const data = { ...expandTables };\n                  data[columnId] =\n                    typeof data[columnId] === \"boolean\"\n                      ? !data[columnId]\n                      : false;\n\n                  setExpandTables(data);\n                }}\n              >\n                {expandTables[columnId] !== false ? (\n                  <i class=\"bi bi-caret-up\"></i>\n                ) : (\n                  <i class=\"bi bi-caret-down\"></i>\n                )}\n              </div>\n            )}\n          </div>\n\n          {expandTables[columnId] !== false && column.postIds?.length > 0 && (\n            <div className=\"card-body w-100\" style={{ overflow: \"scroll\" }}>\n              <table className=\"table\">\n                <thead>\n                  <tr>\n                    <th>Title</th>\n                    {showDescription[columnId] && <th>Description</th>}\n                    {showFunding[columnId] && <th>Funding</th>}\n                    {showSponsor[columnId] && <th>Sponser/Supervisor</th>}\n                    {showTags[columnId] && <th>Tags</th>}\n                  </tr>\n                </thead>\n\n                {column.postIds?.map((postId) => (\n                  <Widget\n                    src={`megha19.near/widget/devhub.entity.addon.${metadata.ticket.type}`}\n                    props={{\n                      setDescriptionDisplay,\n                      setFundingDisplay,\n                      setSponsorDisplay,\n                      setTagsDisplay,\n                      showDescriptionState: showDescription,\n                      showFundingState: showFunding,\n                      showSponsorState: showSponsor,\n                      showTagsState: showTags,\n                      metadata: { id: postId, ...metadata.ticket },\n                      isTableView: true,\n                      columnId,\n                    }}\n                    key={postId}\n                  />\n                ))}\n              </table>\n            </div>\n          )}\n        </div>\n      );\n    }\n  );\n\n  const columnView = Object.entries(configToColumnData(payload) ?? {}).map(\n    ([columnId, column]) => (\n      <div\n        className=\"col-3\"\n        style={{ minWidth: \"300px\" }}\n        key={`column-${columnId}-view`}\n      >\n        <div className=\"card rounded-4\">\n          <div\n            className={[\n              \"card-body d-flex flex-column gap-3 p-2\",\n              \"border border-2 border-secondary rounded-4\",\n            ].join(\" \")}\n            style={{ height: \"75vh\", overflow: \"scroll\" }}\n          >\n            <span className=\"d-flex flex-column py-1\">\n              <h6 className=\"card-title h6 d-flex align-items-center gap-2 m-0\">\n                {column.title}\n\n                <span className=\"badge rounded-pill bg-secondary\">\n                  {column.postIds.length}\n                </span>\n              </h6>\n\n              <p class=\"text-secondary m-0\">{column.description}</p>\n            </span>\n\n            <div class=\"d-flex flex-column gap-2\">\n              {column.postIds?.map((postId) => (\n                <Widget\n                  src={`megha19.near/widget/devhub.entity.addon.${metadata.ticket.type}`}\n                  props={{\n                    metadata: { id: postId, ...metadata.ticket },\n                    isTableView: false,\n                  }}\n                  key={postId}\n                />\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  );\n\n  return (\n    <div>\n      <div className=\"d-flex flex-column align-items-center gap-2 py-4 w-100\">\n        <div class=\"form-check\">\n          <input\n            class=\"form-check-input\"\n            type=\"checkbox\"\n            value={showTable}\n            id={\"table\"}\n            checked={showTable === true}\n            onChange={() => setShowTable(!showTable)}\n          />\n          <label class=\"form-check-label\" for={`table`}>\n            Table View\n          </label>\n        </div>\n        <h5 className=\"h5 d-inline-flex gap-2 m-0\">\n          <span>{metadata?.title}</span>\n        </h5>\n\n        <p className=\"m-0 py-1 text-secondary text-center\">\n          {metadata?.description}\n        </p>\n      </div>\n      <div className=\"d-flex gap-3 w-100\" style={{ overflow: \"scroll\" }}>\n        <div\n          className={[\n            \"d-flex align-items-center justify-content-center w-100 text-black-50 opacity-50\",\n            columns.length === 0 ? \"\" : \"d-none\",\n          ].join(\" \")}\n          style={{ height: 384 }}\n        >\n          No columns were created so far.\n        </div>\n\n        {showTable ? (\n          <div className=\"w-100 d-flex flex-column gap-3\">{tableView} </div>\n        ) : (\n          columnView\n        )}\n      </div>\n    </div>\n  );\n};\n\nreturn KanbanPostBoard(props);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/megha19.near/widget/devhub.entity.addon.kanban.post_board", "fact_widget_deployments_id": "497ad6292ac05aaecc3eb5f75754ddbb", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 18}