{"tx_hash": "6H5MvUJU8TmaYWgzBny2DLaRLFtcajHWAXBVhJqWQbMn", "action_id_social": "FcprRQjBkFzcCNkE36tNnDjwooidZGrfZVdnon2XXcUa-0-widget", "block_id": 115113765, "block_timestamp": "2024-03-20T18:40:36.648Z", "signer_id": "megha19.near", "widget_name": "devhub.components.molecule.Compose", "source_code": "const AutoComplete = styled.div`\n  width: 100%;\n  margin-top: 0.5rem;\n`;\n\nconst EmbeddCSS = `\n  .CodeMirror {\n    border: none !important;\n  }\n\n  .editor-toolbar {\n    border: none !important;\n  }\n`;\n\nconst Wrapper = styled.div`\n  .nav-link {\n    color: inherit !important;\n  }\n\n  .card-header {\n    padding-bottom: 0px !important;\n  }\n`;\n\nconst Compose = ({\n  data,\n  onChange,\n  toolbar,\n  autoFocus,\n  autocompleteEnabled,\n  placeholder,\n  height,\n  embeddCSS,\n}) => {\n  State.init({\n    data: data,\n    showAccountAutocomplete: false,\n    mentionInput: \"\", // text next to @ tag\n    mentionsArray: [], // all the mentions in the description\n    selectedTab: \"editor\",\n  });\n\n  useEffect(() => {\n    onChange(state.data);\n  }, [state.data]);\n\n  useEffect(() => {\n    if (data !== state.data) {\n      State.update({ data: data, handler: \"autocompleteSelected\" });\n    }\n  }, [data]);\n\n  function textareaInputHandler(value) {\n    const words = value.split(/\\s+/);\n    const allMentiones = words\n      .filter((word) => word.startsWith(\"@\"))\n      .map((mention) => mention.slice(1));\n    const newMentiones = allMentiones.filter(\n      (item) => !state.mentionsArray.includes(item)\n    );\n\n    State.update((lastKnownState) => ({\n      ...lastKnownState,\n      data: value,\n      showAccountAutocomplete: newMentiones?.length > 0,\n      mentionsArray: allMentiones,\n      mentionInput: newMentiones?.[0] ?? \"\",\n    }));\n  }\n  function autoCompleteAccountId(id) {\n    // to make sure we update the @ at correct index\n    let currentIndex = 0;\n    const updatedDescription = state.data.replace(\n      /(?:^|\\s)(@[^\\s]*)/g,\n      (match) => {\n        if (currentIndex === state.mentionsArray.indexOf(state.mentionInput)) {\n          currentIndex++;\n          return ` @${id}`;\n        } else {\n          currentIndex++;\n          return match;\n        }\n      }\n    );\n\n    State.update((lastKnownState) => ({\n      ...lastKnownState,\n      handler: \"autocompleteSelected\",\n      data: updatedDescription,\n      showAccountAutocomplete: false,\n    }));\n  }\n\n  return (\n    <Wrapper>\n      <div className=\"card\">\n        <div className=\"card-header\" style={{ position: \"relative\" }}>\n          <div>\n            <ul class=\"nav nav-tabs\">\n              <li class=\"nav-item\">\n                <button\n                  class={`nav-link ${\n                    state.selectedTab === \"editor\" ? \"active\" : \"\"\n                  }`}\n                  onClick={() => State.update({ selectedTab: \"editor\" })}\n                >\n                  Write\n                </button>\n              </li>\n              <li class=\"nav-item\">\n                <button\n                  class={`nav-link ${\n                    state.selectedTab === \"preview\" ? \"active\" : \"\"\n                  }`}\n                  onClick={() => State.update({ selectedTab: \"preview\" })}\n                >\n                  Preview\n                </button>\n              </li>\n            </ul>\n          </div>\n        </div>\n\n        {state.selectedTab === \"editor\" ? (\n          <>\n            <Widget\n              src={\"${REPL_DEVHUB}/widget/devhub.components.molecule.SimpleMDE\"}\n              props={{\n                data: { handler: state.handler, content: state.data },\n                onChange: (content) => {\n                  State.update({ data: content, handler: \"update\" });\n                  textareaInputHandler(content);\n                },\n                toolbar: toolbar || [\n                  \"heading\",\n                  \"bold\",\n                  \"italic\",\n                  \"quote\",\n                  \"code\",\n                  \"link\",\n                  \"unordered-list\",\n                  \"ordered-list\",\n                  \"checklist\",\n                  \"mention\",\n                ],\n                statusConfig: [],\n                spellChecker: false,\n                autoFocus: autoFocus,\n                placeholder: placeholder,\n                height,\n                embeddCSS: embeddCSS || EmbeddCSS,\n              }}\n            />\n            {autocompleteEnabled && state.showAccountAutocomplete && (\n              <AutoComplete>\n                <Widget\n                  src=\"${REPL_DEVHUB}/widget/devhub.components.molecule.AccountAutocomplete\"\n                  props={{\n                    term: state.mentionInput,\n                    onSelect: autoCompleteAccountId,\n                    onClose: () =>\n                      State.update({ showAccountAutocomplete: false }),\n                  }}\n                />\n              </AutoComplete>\n            )}\n          </>\n        ) : (\n          <div className=\"card-body\">\n            <Widget\n              src={\n                \"${REPL_DEVHUB}/widget/devhub.components.molecule.MarkdownViewer\"\n              }\n              props={{\n                text: data,\n              }}\n            />\n          </div>\n        )}\n      </div>\n    </Wrapper>\n  );\n};\n\nreturn Compose(props);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/megha19.near/widget/devhub.components.molecule.Compose", "fact_widget_deployments_id": "2fe8b59bb381ca66b39ea1c1dd68eeeb", "inserted_timestamp": "2024-03-20T20:31:28.264Z", "modified_timestamp": "2024-03-20T20:31:28.264Z", "__row_index": 26}