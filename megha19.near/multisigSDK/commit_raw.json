{"tx_hash": "F3bh7ccya9iDhD8VNtxZia3fqU83BqWLtJ7eaF8wb7j1", "action_id_social": "2okzPwz2hGS8xrqXmMQKNrfqxugsJ1oiVSZuGh883JwZ-0-widget", "block_id": 111113633, "block_timestamp": "2024-01-23T11:27:50.675Z", "signer_id": "megha19.near", "widget_name": "multisigSDK", "source_code": "return (contractId, requestId) => {\n  const MultisigSDK = {\n    // VIEW METHODS\n    getRequest: () => {\n      return Near.view(contractId, \"get_request\", {\n        request_id: requestId,\n      });\n    },\n    getNumRequestsPk: () => {\n      return Near.view(contractId, \"get_num_requests_pk\");\n    },\n    listRequestIds: () => {\n      return Near.view(contractId, \"list_request_ids\");\n    },\n    getConfirmations: () => {\n      return Near.view(contractId, \"get_confirmations\", {\n        request_id: requestId,\n      });\n    },\n    getNumConfirmations: () => {\n      return Near.view(contractId, \"get_num_confirmations\");\n    },\n    getRequestNonce: () => {\n      return Near.view(contractId, \"get_request_nonce\");\n    },\n\n    // CALL METHODS\n    addRequest: ({ receiverId, actions, deposit, gas }) => {\n      return MultisigSDK.call({\n        methodName: \"add_request\",\n        args: {\n          request: {\n            receiver_id: receiverId,\n            actions: actions,\n          },\n        },\n        deposit,\n        gas,\n      });\n    },\n    addRequestAndConfirm: ({ receiverId, actions, deposit, gas }) => {\n      return MultisigSDK.call({\n        methodName: \"add_request_and_confirm\",\n        args: {\n          request: {\n            receiver_id: receiverId,\n            actions: actions,\n          },\n        },\n        deposit,\n        gas,\n      });\n    },\n    deleteRequest: () => {\n      return Near.call(contractId, \"delete_request\", {\n        request_id: requestId,\n      });\n    },\n    confirm: () => {\n      return Near.call(contractId, \"confirm\", { request_id: requestId });\n    },\n\n    // SPECIFIC ADD REQUESTS\n    createTransferRequest: ({ receiverId, amount, deposit, gas }) => {\n      return MultisigSDK.addRequest({\n        receiver_id: receiverId,\n        actions: [{ type: \"Transfer\", amount: amount }],\n        deposit,\n        gas,\n      });\n    },\n    createAccountRequest: ({ receiverId, amount, publicKey, deposit, gas }) => {\n      return MultisigSDK.addRequest({\n        receiver_id: receiverId,\n        actions: [\n          { type: \"CreateAccount\" },\n          { type: \"Transfer\", amount: amount },\n          { type: \"AddKey\", public_key: publicKey },\n        ],\n        deposit,\n        gas,\n      });\n    },\n    createDeployContractRequest: ({ receiverId, code, deposit, gas }) => {\n      return MultisigSDK.addRequest({\n        receiver_id: receiverId,\n        actions: [{ type: \"DeployContract\", code }],\n        deposit,\n        gas,\n      });\n    },\n    createAddKeyRequest: ({\n      receiverId,\n      publicKey,\n      permission,\n      deposit,\n      gas,\n    }) => {\n      return MultisigSDK.addRequest({\n        receiver_id: receiverId,\n        actions: [\n          { type: \"AddKey\", public_key: publicKey, permission: permission },\n        ],\n        deposit,\n        gas,\n      });\n    },\n    createDeleteKeyRequest: ({ receiverId, publicKey, deposit, gas }) => {\n      return MultisigSDK.addRequest({\n        receiver_id: receiverId,\n        actions: [{ type: \"DeleteKey\", public_key: publicKey }],\n        deposit,\n        gas,\n      });\n    },\n    createFunctionCallRequest: ({\n      receiverId,\n      methodName,\n      args,\n      proposalDeposit,\n      proposalGas,\n      deposit,\n      gas,\n    }) => {\n      const proposal_args = Buffer.from(JSON.stringify(args), \"utf-8\").toString(\n        \"base64\"\n      );\n      return MultisigSDK.addRequest({\n        receiver_id: receiverId,\n        actions: [\n          {\n            type: \"FunctionCall\",\n            method_name: methodName,\n            args: proposal_args,\n            deposit: proposalDeposit,\n            gas: proposalGas,\n          },\n        ],\n        deposit,\n        gas,\n      });\n    },\n    createSetNumConfirmationsRequest: ({\n      receiverId,\n      numConfirmations,\n      deposit,\n      gas,\n    }) => {\n      return MultisigSDK.addRequest({\n        receiver_id: receiverId,\n        actions: {\n          SetNumConfirmations: {\n            num_confirmations: numConfirmations,\n          },\n        },\n        deposit,\n        gas,\n      });\n    },\n    createSetActiveRequestsLimitRequest: ({\n      receiverId,\n      activeRequestsLimit,\n      deposit,\n      gas,\n    }) => {\n      return MultisigSDK.addRequest({\n        receiver_id: receiverId,\n        actions: {\n          SetActiveRequestsLimit: {\n            active_requests_limit: activeRequestsLimit,\n          },\n        },\n        deposit,\n        gas,\n      });\n    },\n    // UTILS\n    call: ({ methodName, args, deposit, gas }) => {\n      return Near.call([\n        {\n          contractName: contractId,\n          methodName,\n          args,\n          deposit,\n          gas,\n        },\n      ]);\n    },\n    decodeArgs: ({ args }) => {\n      try {\n        const args64 = args;\n        const jsonArgs = JSON.parse(\n          Buffer.from(args64, \"base64\").toString(\"utf-8\")\n        );\n        return JSON.stringify(jsonArgs, undefined, 2);\n      } catch {\n        return \"failed to deserialize\";\n      }\n    },\n  };\n  return MultisigSDK;\n};\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/megha19.near/widget/multisigSDK", "fact_widget_deployments_id": "74ed7d5c794de4c515eb00a4ab9b464e", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 1}