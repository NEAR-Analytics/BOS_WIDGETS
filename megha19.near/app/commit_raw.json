{"tx_hash": "J6s2Ch1oSLQYBEUMRXusnFNmvhhugBYZpVySQPGersSa", "action_id_social": "51ZH3TrQS5ez8TvrM5gu9gLdzkQdso6vL9xRU2Lt5Hxt-0-widget", "block_id": 120705290, "block_timestamp": "2024-06-08T11:14:38.226Z", "signer_id": "megha19.near", "widget_name": "app", "source_code": "/*\nLicense: MIT\nAuthor: devhub.near\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\n*/\n/* INCLUDE: \"includes/common.jsx\" */\nconst REPL_DEVHUB = \"devhub.near\";\nconst REPL_INFRASTRUCTURE_COMMITTEE = \"megha19.near\";\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT = \"truedove38.near\";\nconst REPL_RPC_URL = \"https://rpc.mainnet.near.org\";\nconst REPL_NEAR = \"near\";\nconst REPL_SOCIAL_CONTRACT = \"social.near\";\nconst RFP_IMAGE =\n  \"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\";\n\nconst RFP_FEED_INDEXER_QUERY_NAME =\n  \"polyprogrammist_near_devhub_objects_s_rfps_with_latest_snapshot\";\n\nconst RFP_INDEXER_QUERY_NAME =\n  \"polyprogrammist_near_devhub_objects_s_rfp_snapshots\";\n\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\n  \"polyprogrammist_near_devhub_objects_s_proposals_with_latest_snapshot\";\n\nconst PROPOSAL_QUERY_NAME =\n  \"polyprogrammist_near_devhub_objects_s_proposal_snapshots\";\nconst RFP_TIMELINE_STATUS = {\n  ACCEPTING_SUBMISSIONS: \"ACCEPTING_SUBMISSIONS\",\n  EVALUATION: \"EVALUATION\",\n  PROPOSAL_SELECTED: \"PROPOSAL_SELECTED\",\n  CANCELLED: \"CANCELLED\",\n};\n\nconst PROPOSAL_TIMELINE_STATUS = {\n  DRAFT: \"DRAFT\",\n  REVIEW: \"REVIEW\",\n  APPROVED: \"APPROVED\",\n  REJECTED: \"REJECTED\",\n  CANCELED: \"CANCELLED\",\n  APPROVED_CONDITIONALLY: \"APPROVED_CONDITIONALLY\",\n  PAYMENT_PROCESSING: \"PAYMENT_PROCESSING\",\n  FUNDED: \"FUNDED\",\n};\n\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\n\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\n  return asyncFetch(QUERYAPI_ENDPOINT, {\n    method: \"POST\",\n    headers: { \"x-hasura-role\": `polyprogrammist_near` },\n    body: JSON.stringify({\n      query: operationsDoc,\n      variables: variables,\n      operationName: operationName,\n    }),\n  });\n}\n\nconst CANCEL_RFP_OPTIONS = {\n  CANCEL_PROPOSALS: \"CANCEL_PROPOSALS\",\n  UNLINK_PROPOSALS: \"UNLINK_PROPOSALSS\",\n  NONE: \"NONE\",\n};\n\nfunction parseJSON(json) {\n  if (typeof json === \"string\") {\n    try {\n      return JSON.parse(json);\n    } catch (error) {\n      return json;\n    }\n  } else {\n    return json;\n  }\n}\n\nfunction isNumber(value) {\n  return typeof value === \"number\";\n}\n\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\n];\n\nfunction getLinkUsingCurrentGateway(url) {\n  const data = fetch(`https://httpbin.org/headers`);\n  const gatewayURL = data?.body?.headers?.Origin ?? \"\";\n  return `https://${\n    gatewayURL.includes(\"near.org\") ? \"dev.near.org\" : \"near.social\"\n  }/${url}`;\n}\n/* END_INCLUDE: \"includes/common.jsx\" */\n\n/**\n * This is the main entry point for the RFP application.\n * Page route gets passed in through params, along with all other page props.\n */\n\nconst { page, ...passProps } = props;\n\n// Import our modules\nconst { AppLayout } = VM.require(\n  `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/components.template.AppLayout`\n);\n\nif (!AppLayout) {\n  return <p>Loading modules...</p>;\n}\n\n// CSS styles to be used across the app.\n// Define fonts here, as well as any other global styles.\nconst Theme = styled.div`\n  a {\n    color: inherit;\n  }\n\n  .attractable {\n    box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075) !important;\n    transition: box-shadow 0.6s;\n\n    &:hover {\n      box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15) !important;\n    }\n  }\n`;\n\nif (!page) {\n  // If no page is specified, we default to the feed page TEMP\n  page = \"about\";\n}\n\n// This is our navigation, rendering the page based on the page parameter\nfunction Page() {\n  const routes = page.split(\".\");\n  switch (routes[0]) {\n    case \"about\": {\n      return (\n        <Widget\n          src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/components.pages.about`}\n          props={passProps}\n        />\n      );\n    }\n    case \"rfps\": {\n      return (\n        <Widget\n          src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/components.rfps.Feed`}\n          props={passProps}\n        />\n      );\n    }\n    case \"rfp\": {\n      return (\n        <Widget\n          src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/components.rfps.Rfp`}\n          props={passProps}\n        />\n      );\n    }\n    case \"create-rfp\": {\n      return (\n        <Widget\n          src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/components.rfps.Editor`}\n          props={passProps}\n        />\n      );\n    }\n    case \"create-proposal\": {\n      return (\n        <Widget\n          src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/components.proposals.Editor`}\n          props={{ ...passProps }}\n        />\n      );\n    }\n\n    case \"proposals\": {\n      return (\n        <Widget\n          src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/components.proposals.Feed`}\n          props={passProps}\n        />\n      );\n    }\n    case \"proposal\": {\n      return (\n        <Widget\n          src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/components.proposals.Proposal`}\n          props={passProps}\n        />\n      );\n    }\n    case \"about\": {\n      return (\n        <Widget\n          src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/components.pages.about`}\n          props={passProps}\n        />\n      );\n    }\n    case \"admin\": {\n      return (\n        <Widget\n          src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/components.pages.admin`}\n          props={passProps}\n        />\n      );\n    }\n    default: {\n      // TODO: 404 page\n      return <p>404</p>;\n    }\n  }\n}\n\nreturn (\n  <Theme>\n    <AppLayout page={page}>\n      <Page />\n    </AppLayout>\n  </Theme>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/megha19.near/widget/app", "fact_widget_deployments_id": "18857076874573e58108b6ac28a7ab2e", "inserted_timestamp": "2024-06-08T12:04:37.837Z", "modified_timestamp": "2024-06-08T13:04:16.098Z", "__row_index": 10}