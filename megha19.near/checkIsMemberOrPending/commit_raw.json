{"tx_hash": "BGZaDcR2NJHb9BTvn3GBhZsuzv9zSDmApGBUVnJNWieW", "action_id_social": "A7VPXxQzr1avKbPgX69dDcAef3x9HW57pAKknELF2QPt-0-widget", "block_id": 111218185, "block_timestamp": "2024-01-24T17:38:00.667Z", "signer_id": "megha19.near", "widget_name": "checkIsMemberOrPending", "source_code": "// checks if the user is already dao's community/council member or has an active proposal\nconst checkIsMemberOrPending = (accountId) => {\n  const daoId = \"build.sputnik-dao.near\";\n  if (!accountId) {\n    return false;\n  }\n  const alreadyJoinedRolesNames = [\"community\", \"council\"];\n  const searchRange = 100;\n\n  const lastProposalId = Near.view(daoId, \"get_last_proposal_id\");\n\n  const policy = Near.view(daoId, \"get_policy\");\n  const isDaoMember = false;\n  const lastProposals =\n    Near.view(daoId, \"get_proposals\", {\n      from_index: lastProposalId - searchRange,\n      limit: searchRange,\n    }) || [];\n  const alreadyMadeAProposal =\n    lastProposals.filter((proposal) => {\n      return (\n        proposal.proposer === accountId && proposal.status === \"InProgress\"\n      );\n    }).length > 0;\n\n  policy.roles\n    .filter((role) => alreadyJoinedRolesNames.includes(role.name))\n    .map((role) => {\n      if (Array.isArray(role.kind.Group) && !isDaoMember) {\n        isDaoMember = role.kind.Group.includes(accountId);\n      }\n    });\n  return isDaoMember || alreadyMadeAProposal;\n};\n\nreturn { checkIsMemberOrPending };\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/megha19.near/widget/checkIsMemberOrPending", "fact_widget_deployments_id": "d1933cd77606907a626f0215de6d6fb8", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 2}