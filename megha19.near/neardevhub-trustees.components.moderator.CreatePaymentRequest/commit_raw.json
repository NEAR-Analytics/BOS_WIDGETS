{"tx_hash": "F1hbjPPowarKuXWb7o1fKdk9RqEf6CfABNdGriRZRBTg", "action_id_social": "3TfiAaHtv9pNk1G2oyhD2sxk8rjz94jNJ24wtYQ46NF3-0-widget", "block_id": 113234744, "block_timestamp": "2024-02-20T17:59:13.932Z", "signer_id": "megha19.near", "widget_name": "neardevhub-trustees.components.moderator.CreatePaymentRequest", "source_code": "/*\nLicense: MIT\nAuthor: devhub.near\nHomepage: https://github.com/NEAR-DevHub/neardevhub-treasury-dashboard.git#readme\n*/\n/* INCLUDE: \"includes//common.jsx\" */\nconst REPL_TREASURY_CONTRACT = \"treasurydevhub.near\";\nconst REPL_TREASURY = \"megha19.near\";\n// \"dashboard.treasury-devdao.near\";\nconst REPL_DEVHUB = \"devhub.near\";\n// devhub.near;\nconst REPL_PROPOSAL_CONTRACT =\n  \"713ed9aef61d14ce3dfeb3f5a55dfdf16c407280267e8de96bce0953d0e1af8c\";\nconst REPL_NEAR = \"near\";\n/* END_INCLUDE: \"includes//common.jsx\" */\n\n// dropdown options\nconst [fromWalletOptions, setFromWalletOptions] = useState([\n  // { label: \"treasurydevhub.testnet\", value: \"treasurydevhub.testnet\" },\n  { label: \"treasurydevhub.near\", value: \"treasurydevhub.near\" },\n]);\nconst [proposalsOptions, setProposalsOptions] = useState([]);\nconst [recipientsOptions, setReceientsOptions] = useState([\n  { label: \"devhub.near\", value: \"devhub.near\" },\n  { label: \"devgovgigs.near\", value: \"devgovgigs.near\" },\n]);\n\nconst tokenMapping = {\n  NEAR: \"NEAR\",\n  USDT: {\n    NEP141: {\n      address: \"usdt.tether-token.near\",\n    },\n  },\n  USDC: {\n    NEP141: {\n      address:\n        \"17208628f84f5d6ad33f0da3bbbeb27ffcb398eac501a31bd6ad2011e36133a1\",\n    },\n  },\n};\n\nconst [tokensOptions, setTokenOptions] = useState([\n  { label: \"NEAR\", value: tokenMapping.NEAR },\n  { label: \"USDT\", value: tokenMapping.USDT.NEP141.address },\n  {\n    label: \"USDC\",\n    value: tokenMapping.USDC.NEP141.address,\n  },\n]);\n\nconst [sender, setSender] = useState(fromWalletOptions[0].value);\nconst [tokenId, setTokenId] = useState(null);\nconst [receiver, setReceiver] = useState(null);\nconst [memo, setMemo] = useState(null);\nconst [selectedProposalId, setSelectedProposalId] = useState(\"\");\nconst [amount, setAmount] = useState(null);\nconst [proposalsArray, setProposalsArray] = useState([]);\n\nconst proposalsData = Near.view(REPL_PROPOSAL_CONTRACT, \"get_proposals\");\nif (proposalsData !== null && Array.isArray(proposalsData)) {\n  setProposalsArray(proposalsData);\n  const data = [];\n  const receiverSet = new Set();\n\n  for (const prop of proposalsData) {\n    const account = prop.snapshot.receiver_account;\n    data.push({\n      label: \"Id \" + prop.id + \" : \" + prop.snapshot.name,\n      value: prop.id,\n    });\n    receiverSet.add(account);\n  }\n  const receiverArray = [...receiverSet].map((account) => ({\n    label: account,\n    value: account,\n  }));\n  setProposalsOptions(data);\n  setReceientsOptions(receiverArray);\n}\n\nconst Container = styled.div`\n  margin-top: 10px;\n  font-size: 14px;\n  width: 40%;\n\n  @media screen and (max-width: 1300px) {\n    width: 60%;\n  }\n\n  @media screen and (max-width: 1000px) {\n    width: 100%;\n  }\n\n  .text-grey {\n    color: #b9b9b9 !important;\n  }\n\n  label {\n    font-weight: 600;\n    margin-bottom: 3px;\n    font-size: 15px;\n  }\n\n  .p-2 {\n    padding: 0px !important;\n  }\n\n  .rounded-pill {\n    border-radius: 5px !important;\n  }\n\n  .green-btn {\n    background-color: #04a46e !important;\n    color: white;\n  }\n`;\n\nfunction onSelectProposal(id) {\n  const proposal = proposalsArray.find((item) => item.id === id);\n  if (proposal !== null) {\n    const token = proposal.snapshot.requested_sponsorship_token;\n    const stringifiedToken = JSON.stringify(\n      proposal.snapshot.requested_sponsorship_token\n    );\n    if (JSON.stringify(tokenMapping.USDC) === stringifiedToken) {\n      token = tokenMapping.USDC.NEP141.address;\n    }\n    if (JSON.stringify(tokenMapping.USDT) === stringifiedToken) {\n      token = tokenMapping.USDT.NEP141.address;\n    }\n    setReceiver(proposal.snapshot.receiver_account);\n    setAmount(proposal.snapshot.requested_sponsorship_amount);\n    setTokenId(token);\n    setSelectedProposalId(id);\n  }\n}\n\nfunction onCancelClick() {}\n\nfunction onSubmitClick() {\n  const isNEAR = tokenId === tokenMapping.NEAR;\n\n  let ftMetadata = {\n    decimals: 24,\n  };\n  if (!isNEAR) {\n    ftMetadata = Near.view(tokenId, \"ft_metadata\", {});\n    if (ftMetadata === null) return null;\n  }\n  let parsedAmount = Big(amount)\n    .mul(Big(10).pow(ftMetadata.decimals))\n    .toFixed();\n\n  const policy = Near.view(sender, \"get_policy\");\n  const gas = 270000000000000;\n  const deposit = policy?.proposal_bond || 100000000000000000000000;\n  const proposal = proposalsArray.find(\n    (item) => item.id === selectedProposalId\n  );\n  const description = {\n    proposal_id: selectedProposalId,\n    title: proposal.snapshot.name,\n    summary: proposal.snapshot.summary,\n    link: `https://near.org/devhub.near/widget/app?page=proposal&id=${selectedProposalId}`,\n    memo: memo,\n  };\n  Near.call([\n    {\n      contractName: sender,\n      methodName: \"add_proposal\",\n      args: {\n        proposal: {\n          description: JSON.stringify(description),\n          kind: {\n            Transfer: {\n              token_id: isNEAR ? \"\" : tokenId,\n              receiver_id: receiver,\n              amount: parsedAmount,\n            },\n          },\n        },\n      },\n      gas: gas,\n      deposit: deposit,\n    },\n  ]);\n}\n\nconst VerificationIconContainer = ({ isVerified, label }) => {\n  return (\n    <div className=\"d-flex gap-2 align-items-center\">\n      {isVerified ? (\n        <img\n          src=\"https://ipfs.near.social/ipfs/bafkreidqveupkcc7e3rko2e67lztsqrfnjzw3ceoajyglqeomvv7xznusm\"\n          height={30}\n        />\n      ) : (\n        \"Need icon\"\n      )}\n      <div>{label}</div>\n    </div>\n  );\n};\n\nreturn (\n  <Container className=\"d-flex gap-3 flex-column\">\n    <div className=\"h5 bold mb-2\">Create Payment Request</div>\n    <Widget\n      src={`${REPL_TREASURY}/widget/neardevhub-trustees.components.molecule.DropDownWithSearch`}\n      props={{\n        selectedValue: sender,\n        onChange: (v) => setSender(v),\n        label: \"From Wallet\",\n        options: fromWalletOptions,\n        showSearch: false,\n        defaultLabel: \"treasury.near\",\n      }}\n    />\n    <Widget\n      src={`${REPL_TREASURY}/widget/neardevhub-trustees.components.molecule.DropDownWithSearch`}\n      props={{\n        selectedValue: selectedProposalId,\n        onChange: onSelectProposal,\n        label: \"Choose Proposal\",\n        options: proposalsOptions,\n        showSearch: true,\n        searchInputPlaceholder: \"Search by Id\",\n        defaultLabel: \"Seach proposals\",\n        searchByValue: true,\n      }}\n    />\n    <Widget\n      src={`${REPL_TREASURY}/widget/neardevhub-trustees.components.molecule.DropDownWithSearch`}\n      props={{\n        selectedValue: receiver,\n        onChange: (v) => setReceiver(v),\n        label: \"To Wallet (Recipient)\",\n        options: recipientsOptions,\n        showSearch: false,\n        defaultLabel: \"neardevhub.near\",\n      }}\n    />\n    <div className=\"d-flex gap-2 flex-column\">\n      <VerificationIconContainer isVerified={true} label=\"KYC Verified\" />\n      <VerificationIconContainer\n        isVerified={true}\n        label=\"Test Transaction Confirmed\"\n      />\n      <div className=\"text-grey\">\n        You can add new recipients in the Manage Recipients tab.\n      </div>\n    </div>\n    <Widget\n      src={`${REPL_TREASURY}/widget/neardevhub-trustees.components.molecule.DropDownWithSearch`}\n      props={{\n        selectedValue: tokenId,\n        onChange: (v) => setTokenId(v),\n        label: \"Currency\",\n        options: tokensOptions,\n        showSearch: false,\n        defaultLabel: \"Near\",\n      }}\n    />\n    <Widget\n      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Input`}\n      props={{\n        className: \"flex-grow-1\",\n        key: `total-amount`,\n        label: \"Total Amount\",\n        onChange: (e) => setAmount(e.target.value),\n        placeholder: \"Enter amount\",\n        value: amount,\n        inputProps: {\n          type: \"number\",\n        },\n      }}\n    />\n    <Widget\n      src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Input`}\n      props={{\n        className: \"flex-grow-1\",\n        key: `notes`,\n        label: \"Notes (Optional)\",\n        onChange: (e) => setMemo(e.target.value),\n        placeholder: \"Enter memo\",\n        value: memo,\n      }}\n    />\n    <div className=\"d-flex mt-4 gap-3 justify-content-end\">\n      <Widget\n        src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\n        props={{\n          classNames: { root: \"btn-outline-danger shadow-none border-0\" },\n          label: \"Cancel\",\n          onClick: onCancelClick,\n        }}\n      />\n      <Widget\n        src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\n        props={{\n          classNames: { root: \"green-btn\" },\n          disabled:\n            !amount || !sender || !receiver || !selectedProposalId?.toString(),\n          label: \"Submit\",\n          onClick: onSubmitClick,\n        }}\n      />\n    </div>\n  </Container>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/megha19.near/widget/neardevhub-trustees.components.moderator.CreatePaymentRequest", "fact_widget_deployments_id": "87e7be506db8ada501b8a0ba7ef1d1df", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}