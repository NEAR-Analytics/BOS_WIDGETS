{"tx_hash": "4QWMmx64XRQt9wyWf1wax6Si7oYvd3EX8nHTEjGfpqak", "action_id_social": "FuCcHUF8qsfYtwZCGpbwZExaLVeyN5gfyH5uPN56pjJG-0-widget", "block_id": 111351654, "block_timestamp": "2024-01-26T10:04:45.933Z", "signer_id": "megha19.near", "widget_name": "Common.Modals.Voters", "source_code": "let votes = props.votes;\nconst daoId = props.daoId;\nconst isCongressDaoID = props.isCongressDaoID;\nconst isVotingBodyDao = props.isVotingBodyDao;\nconst proposalId = props.proposalId;\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql/`;\nconst votersCount = props.votersCount;\n\nconst query = `query MyQuery {\n    strachu_near_vb_prod_v2_vote(where: {proposal_id: {_eq: ${proposalId}}}) {\n      vote\n      voter\n      timestamp\n    }\n  }`;\n\nfunction fetchGraphQL(operationsDoc, operationName, variables) {\n    return asyncFetch(QUERYAPI_ENDPOINT, {\n        method: \"POST\",\n        headers: { \"x-hasura-role\": \"strachu_near\" },\n        body: JSON.stringify({\n            query: operationsDoc,\n            variables: variables,\n            operationName: operationName\n        })\n    });\n}\nif (isVotingBodyDao) {\n    votes = useCache(\n        () =>\n            fetchGraphQL(query, \"MyQuery\", {}).then((result) => {\n                const parsedData = {};\n                if (result.status === 200) {\n                    if (result.body.data) {\n                        const data =\n                            result.body.data[\"strachu_near_vb_prod_v2_vote\"];\n\n                        if (data?.length > 0) {\n                            for (const a of data) {\n                                parsedData[a.voter] = {\n                                    timestamp: a.timestamp,\n                                    vote: a.vote\n                                };\n                            }\n                        }\n                    }\n                }\n                return parsedData;\n            }),\n        daoId + \"proposals\" + proposalId,\n        { subscribe: false }\n    );\n}\n\nconst Wrapper = styled.ul`\n    background: #f8f9fa;\n    border-radius: 14px;\n    overflow: hidden;\n    padding: 24px;\n    list-style: none;\n    display: flex;\n    flex-direction: column;\n    gap: 12px;\n\n    .radius {\n        border-radius: 14px;\n    }\n\n    li {\n        display: flex;\n        flex-direction: column;\n        padding: 12px;\n        gap: 10px;\n        border-radius: 14px;\n    }\n\n    div.Approve {\n        background-color: #59e69220;\n        .vote {\n            color: #0d562b;\n        }\n    }\n    div.Reject {\n        background-color: #e5484d20;\n        .vote {\n            color: #bf2c30;\n        }\n    }\n    div.Abstain {\n        background-color: #d3d3d3;\n        .vote {\n            color: black;\n        }\n    }\n    div.Spam {\n        background-color: #ffda0920;\n        .vote {\n            color: #73692d;\n        }\n    }\n    div.Remove {\n        background-color: #ffda0920;\n        .vote {\n            color: #73692d;\n        }\n    }\n`;\n\nreturn (\n    <Wrapper>\n        {Object.keys(votes).length === 0 && (\n            <span className=\"text-muted text-center\">No votes yet</span>\n        )}\n        {isCongressDaoID &&\n            isVotingBodyDao &&\n            votersCount > Object.keys(votes).length && (\n                <div>\n                    Note: Indexer is currently running behind schedule, and the\n                    expected results may take longer to appear. We appreciate\n                    your patience and apologize for any inconvenience.\n                </div>\n            )}\n        {Object.keys(votes).map((voterId) => {\n            const vote =\n                isCongressDaoID || isVotingBodyDao\n                    ? votes[voterId].vote\n                    : votes[voterId];\n            return (\n                <div className={vote + \" radius\"}>\n                    <li className={vote}>\n                        <div className=\"d-flex items-center justify-content-between\">\n                            <div className=\"text-truncate w-70\">\n                                <Widget\n                                    src=\"mob.near/widget/Profile.ShortInlineBlock\"\n                                    props={{\n                                        accountId: voterId,\n                                        tooltip: true\n                                    }}\n                                />\n                            </div>\n                            <div className=\"w-30\">\n                                <Widget\n                                    src=\"nearui.near/widget/Element.Badge\"\n                                    props={{\n                                        children: (\n                                            <span className=\"vote\">{vote}</span>\n                                        ),\n                                        variant: `round`,\n                                        size: \"md\"\n                                    }}\n                                />\n                            </div>\n                        </div>\n                        {((isCongressDaoID && votes[voterId].timestamp > 0) ||\n                            isVotingBodyDao) &&\n                            votes[voterId].timestamp && (\n                                <div className=\"d-flex gap-2\">\n                                    <small>\n                                        <i className=\"bi bi-clock\" />\n                                    </small>\n                                    <small className=\"text-secondary\">\n                                        {new Date(\n                                            votes[voterId].timestamp\n                                        ).toLocaleString()}\n                                    </small>\n                                </div>\n                            )}\n                    </li>\n                </div>\n            );\n        })}\n    </Wrapper>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/megha19.near/widget/Common.Modals.Voters", "fact_widget_deployments_id": "d322b8afbbcfa6c708d7eddf1f55e285", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}