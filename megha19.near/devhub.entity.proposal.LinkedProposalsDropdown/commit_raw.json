{"tx_hash": "GEJsf7QLXaiJS6AvfodauXPJ4mTuFHYqNgQT21L7UkNf", "action_id_social": "F3XTKCfaNapxZyB4nG2mwZ22S2F5yGt8iMDkh2wQ6XM9-0-widget", "block_id": 115798434, "block_timestamp": "2024-03-30T17:15:23.935Z", "signer_id": "megha19.near", "widget_name": "devhub.entity.proposal.LinkedProposalsDropdown", "source_code": "const onChange = props.onChange;\nconst [proposalsOptions, setProposalsOptions] = useState([]);\nconst [searchProposalId, setSearchProposalId] = useState(\"\");\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\nconst queryName =\n  \"thomasguntenaar_near_devhub_proposals_quebec_proposals_with_latest_snapshot\";\nconst query = `query GetLatestSnapshot($offset: Int = 0, $limit: Int = 10, $where: ${queryName}_bool_exp = {}) {\n${queryName}(\n  offset: $offset\n  limit: $limit\n  order_by: {proposal_id: desc}\n  where: $where\n) {\n  name\n  proposal_id\n}\n}`;\n\nfunction separateNumberAndText(str) {\n  const numberRegex = /\\d+/;\n\n  if (numberRegex.test(str)) {\n    const number = str.match(numberRegex)[0];\n    const text = str.replace(numberRegex, \"\").trim();\n    return { number: parseInt(number), text };\n  } else {\n    return { number: null, text: str.trim() };\n  }\n}\n\nconst buildWhereClause = () => {\n  let where = {};\n  const { number, text } = separateNumberAndText(searchProposalId);\n\n  if (number) {\n    where = { proposal_id: { _eq: number }, ...where };\n  }\n\n  if (text) {\n    where = { name: { _ilike: `%${text}%` }, ...where };\n  }\n\n  return where;\n};\n\nfunction fetchGraphQL(operationsDoc, operationName, variables) {\n  return asyncFetch(QUERYAPI_ENDPOINT, {\n    method: \"POST\",\n    headers: { \"x-hasura-role\": `thomasguntenaar_near` },\n    body: JSON.stringify({\n      query: operationsDoc,\n      variables: variables,\n      operationName: operationName,\n    }),\n  });\n}\n\nconst fetchProposals = () => {\n  const FETCH_LIMIT = 30;\n  const variables = {\n    limit: FETCH_LIMIT,\n    offset: 0,\n    where: buildWhereClause(),\n  };\n  fetchGraphQL(query, \"GetLatestSnapshot\", variables).then(async (result) => {\n    if (result.status === 200) {\n      if (result.body.data) {\n        const proposalsData =\n          result.body.data\n            .thomasguntenaar_near_devhub_proposals_quebec_proposals_with_latest_snapshot;\n\n        const data = [];\n        for (const prop of proposalsData) {\n          data.push({\n            label: \"# \" + prop.proposal_id + \" : \" + prop.name,\n            value: prop.proposal_id,\n          });\n        }\n        setProposalsOptions(data);\n      }\n    }\n  });\n};\n\nuseEffect(() => {\n  fetchProposals();\n}, [searchProposalId]);\n\nreturn (\n  <Widget\n    src=\"megha19.near/widget/devhub.components.molecule.DropDownWithSearch\"\n    props={{\n      selectedValue: \"\",\n      onChange: onChange,\n      options: proposalsOptions,\n      showSearch: true,\n      searchInputPlaceholder: \"Search by Id\",\n      defaultLabel: \"Search proposals\",\n      searchByValue: true,\n      onSearch: (value) => {\n        setSearchProposalId(value);\n      },\n    }}\n  />\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/megha19.near/widget/devhub.entity.proposal.LinkedProposalsDropdown", "fact_widget_deployments_id": "15e54ecbb25f2cbb4ba62c6dde123093", "inserted_timestamp": "2024-03-30T18:33:58.268Z", "modified_timestamp": "2024-03-30T18:33:58.268Z", "__row_index": 8}