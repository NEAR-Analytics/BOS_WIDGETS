{"tx_hash": "G4rKsihqwLKKHthvkZsK3h4YVM6z5GwKi9U3SFxuFHQC", "action_id_social": "2FQZhkpCSWmLrhgaqsUaVkYs4Tz7Kxm82p4oGKJcvfMf-0-widget", "block_id": 111771022, "block_timestamp": "2024-01-31T12:18:37.636Z", "signer_id": "megha19.near", "widget_name": "devhub.entity.community.configuration.AccessControlConfigurator", "source_code": "const CommunityAccessControlSchema = {\n  admins: {\n    format: \"comma-separated\",\n    inputProps: { required: true },\n    label: \"Admins\",\n    order: 1,\n  },\n};\n\nconst Struct = VM.require(\"megha2001.testnet/widget/core.lib.struct\");\n\nif (!Struct) {\n  return <p>Loading modules...</p>;\n}\n\nconst AutoComplete = styled.div`\n  z-index: 5;\n\n  > div > div {\n    padding: calc(var(--padding) / 2);\n  }\n`;\n\nconst Wrapper = styled.div`\n  .container {\n    display: flex;\n    align-items: center;\n    flex-wrap: wrap;\n    gap: 0.5em;\n  }\n\n  .admins-item {\n    display: inline-block;\n    padding: 0.6em 0.8em;\n    border-radius: 10px;\n    border: 1px solid lightgray;\n    position: relative;\n  }\n\n  .admins-item .remove {\n    position: absolute;\n    right: 5px;\n    top: 0;\n    font-size: 18px;\n    color: grey;\n    cursor: pointer;\n  }\n\n  .admins-input {\n    flex-grow: 1;\n    border: none;\n    outline: none;\n  }\n\n  input[type=\"text\"]:disabled {\n    all: inherit;\n  }\n\n  input::placeholder {\n    font-size: 16px;\n  }\n`;\n\nconst { data, onSubmit, onCancel, setIsActive, isActive } = props;\nconst initialValues = Struct.typeMatch(CommunityAccessControlSchema)\n  ? Struct.pick(data ?? {}, Object.keys(CommunityAccessControlSchema))\n  : {};\n\nconst [admins, setAdmins] = useState(initialValues?.admins ?? []);\nconst [text, setText] = useState(\"\");\nconst [showAccountAutocomplete, setShowAutoAutocomplete] = useState(false);\n\nfunction handleKeyDown(e) {\n  if (e.key !== \"Enter\") return;\n  const value = e.target.value;\n  if (!value.trim()) return;\n  // Add the value to the admins array\n  setAdmins([...admins, value]);\n  setText(\"\");\n}\n\nconst onCancelClick = () => {\n  setAdmins(initialValues?.admins ?? []);\n  setIsActive(false);\n};\n\nconst onSubmitClick = () => {\n  onSubmit({ admins: admins.map((admin) => admin.trim()) });\n  setIsActive(false);\n};\n\nfunction autoCompleteAccountId(id) {\n  setAdmins([...admins, id]);\n  setText(\"\");\n  setShowAutoAutocomplete(false);\n}\n\nreturn (\n  <Wrapper className=\"flex-grow-1 d-flex flex-column gap-4\">\n    <div className=\"container\">\n      {admins.map((admin, index) => (\n        <div className=\"admins-item\" key={index}>\n          <Widget\n            src={\"megha2001.testnet/widget/devhub.components.molecule.ProfileCard\"}\n            props={{\n              accountId: admin,\n              nearDevGovGigsWidgetsAccountId: \"megha2001.testnet\",\n              openLinkInNewTab: true,\n            }}\n          />\n          {/* don't allow removal if only 1 admin is added */}\n          {admins.length > 1 && isActive && (\n            <span\n              className=\"remove\"\n              onClick={() => setAdmins(admins.filter((item) => item !== admin))}\n            >\n              &times;\n            </span>\n          )}\n        </div>\n      ))}\n      <input\n        disabled={!isActive}\n        value={text}\n        onChange={(v) => {\n          setShowAutoAutocomplete(true);\n          setText(v.target.value);\n        }}\n        onKeyDown={handleKeyDown}\n        type=\"text\"\n        className=\"admins-input\"\n        placeholder={isActive && \"Add Admins here...\"}\n      />\n    </div>\n    {showAccountAutocomplete && (\n      <AutoComplete>\n        <Widget\n          src=\"megha2001.testnet/widget/devhub.components.molecule.AccountAutocomplete\"\n          props={{\n            term: text,\n            onSelect: autoCompleteAccountId,\n            onClose: () => setShowAutoAutocomplete(false),\n            filterAccounts: admins,\n          }}\n        />\n      </AutoComplete>\n    )}\n    {isActive && (\n      <div className=\"d-flex align-items-center justify-content-end gap-3 mt-auto\">\n        <Widget\n          src={\"megha2001.testnet/widget/devhub.components.molecule.Button\"}\n          props={{\n            classNames: { root: \"btn-outline-danger shadow-none border-0\" },\n            label: cancelLabel || \"Cancel\",\n            onClick: onCancelClick,\n          }}\n        />\n        <Widget\n          src={\"megha2001.testnet/widget/devhub.components.molecule.Button\"}\n          props={{\n            classNames: { root: \"btn-success\" },\n            disabled: Struct.isEqual(admins, initialValues?.admins ?? []),\n            icon: {\n              type: \"bootstrap_icon\",\n              variant: \"bi-check-circle-fill\",\n            },\n            label: \"Submit\",\n            onClick: onSubmitClick,\n          }}\n        />\n      </div>\n    )}\n  </Wrapper>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/megha19.near/widget/devhub.entity.community.configuration.AccessControlConfigurator", "fact_widget_deployments_id": "2c52a2e646c02295b9904575ac1239d9", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 35}