{"tx_hash": "2L8hRJx3rTUEZEDWiPBTKXYzB8SD836Qvy8toi9FrDU5", "action_id_social": "3WMpvwCR4qBFZRjx2gjznzpgeXqekfv3g3uVAWFoFH9R-0-widget", "block_id": 106330092, "block_timestamp": "2023-11-23T05:29:53.153Z", "signer_id": "megha19.near", "widget_name": "devhub.components.molecule.AccountAutocomplete", "source_code": "if (!context.accountId || !props.term) return <></>;\n\nlet results = [];\nconst profilesData = Social.get(\"*/profile/name\", \"final\") || {};\nconst followingData = Social.get(\n  `${context.accountId}/graph/follow/**`,\n  \"final\"\n);\nif (!profilesData) return <></>;\nconst profiles = Object.entries(profilesData);\nconst term = (props.term || \"\").replace(/\\W/g, \"\").toLowerCase();\nconst limit = 5;\n\nfor (let i = 0; i < profiles.length; i++) {\n  let score = 0;\n  const accountId = profiles[i][0];\n  const accountIdSearch = profiles[i][0].replace(/\\W/g, \"\").toLowerCase();\n  const nameSearch = (profiles[i][1]?.profile?.name || \"\")\n    .replace(/\\W/g, \"\")\n    .toLowerCase();\n  const accountIdSearchIndex = accountIdSearch.indexOf(term);\n  const nameSearchIndex = nameSearch.indexOf(term);\n\n  if (accountIdSearchIndex > -1 || nameSearchIndex > -1) {\n    score += 10;\n\n    if (accountIdSearchIndex === 0) {\n      score += 10;\n    }\n    if (nameSearchIndex === 0) {\n      score += 10;\n    }\n    if (followingData[accountId] === \"\") {\n      score += 30;\n    }\n\n    results.push({\n      accountId,\n      score,\n    });\n  }\n}\n\nresults.sort((a, b) => b.score - a.score);\nresults = results.slice(0, limit);\n\nfunction onResultClick(id) {\n  props.onSelect && props.onSelect(id);\n}\n\nconst Wrapper = styled.div`\n  position: relative;\n  background: #eceef0;\n\n  &::before {\n    content: \"\";\n    display: block;\n    position: absolute;\n    right: 0;\n    width: 6px;\n    height: 100%;\n    background: linear-gradient(\n      to left,\n      rgba(236, 238, 240, 1),\n      rgba(236, 238, 240, 0)\n    );\n    z-index: 10;\n  }\n`;\n\nconst Scroller = styled.div`\n  position: relative;\n  display: flex;\n  padding: 6px;\n  gap: 6px;\n  overflow: auto;\n  scroll-behavior: smooth;\n  align-items: center;\n  scrollbar-width: none;\n  -ms-overflow-style: none;\n  &::-webkit-scrollbar {\n    display: none;\n  }\n\n  > * {\n    max-width: 175px;\n    flex-grow: 0;\n    flex-shrink: 0;\n\n    button {\n      border: 1px solid #eceef0;\n      background: #fff !important;\n      border-radius: 6px;\n      padding: 3px 6px;\n      transition: all 200ms;\n\n      &:focus,\n      &:hover {\n        border-color: #687076;\n      }\n    }\n  }\n`;\n\nconst CloseButton = styled.button`\n    background: none;\n    border: none;\n    display: block;\n    padding: 12px;\n    color #687076;\n    transition: all 200ms;\n\n    &:hover {\n        color: #000;\n    }\n`;\n\nif (results.length === 0) return <></>;\n\nreturn (\n  <Wrapper>\n    <Scroller>\n      <CloseButton tabIndex={-1} type=\"button\" onClick={props.onClose}>\n        <i className=\"bi bi-x-circle\" />\n      </CloseButton>\n\n      {results.map((result) => {\n        return (\n          <Widget\n            key={result.accountId}\n            src=\"near/widget/AccountProfile\"\n            props={{\n              avatarSize: \"34px\",\n              accountId: result.accountId,\n              onClick: onResultClick,\n              overlayPlacement: \"bottom\",\n            }}\n          />\n        );\n      })}\n    </Scroller>\n  </Wrapper>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/megha19.near/widget/devhub.components.molecule.AccountAutocomplete", "fact_widget_deployments_id": "e8819465890aa5ddd10a6aa54bd3a657", "inserted_timestamp": "2023-11-23T07:33:37.714Z", "modified_timestamp": "2023-11-23T07:33:37.714Z", "__row_index": 0}