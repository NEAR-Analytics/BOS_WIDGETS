{"tx_hash": "257TMrmvtTxxhUhVA5GpQCz4F2bLsFNynsjFQUsiMUpd", "action_id_social": "3z4srJQcCZsgxZbZK26xuU5aRvA3ZDFxndG9ChU4SBS1-0-widget", "block_id": 120621570, "block_timestamp": "2024-06-07T07:23:49.573Z", "signer_id": "megha19.near", "widget_name": "near-prpsls-bos.components.proposals.Feed", "source_code": "/*\nLicense: MIT\nAuthor: devhub.near\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\n*/\n/* INCLUDE: \"includes/common.jsx\" */\nconst REPL_DEVHUB = \"devhub.near\";\nconst REPL_INFRASTRUCTURE_COMMITTEE = \"megha19.near\";\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT = \"truedove38.near\";\nconst REPL_RPC_URL = \"https://rpc.mainnet.near.org\";\nconst REPL_NEAR = \"near\";\nconst REPL_SOCIAL_CONTRACT = \"social.near\";\nconst RFP_IMAGE =\n  \"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\";\n\nconst RFP_FEED_INDEXER_QUERY_NAME =\n  \"polyprogrammist_near_devhub_objects_s_rfps_with_latest_snapshot\";\n\nconst RFP_INDEXER_QUERY_NAME =\n  \"polyprogrammist_near_devhub_objects_s_rfp_snapshots\";\n\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\n  \"polyprogrammist_near_devhub_objects_s_proposals_with_latest_snapshot\";\n\nconst PROPOSAL_QUERY_NAME =\n  \"polyprogrammist_near_devhub_objects_s_proposal_snapshots\";\nconst RFP_TIMELINE_STATUS = {\n  ACCEPTING_SUBMISSIONS: \"ACCEPTING_SUBMISSIONS\",\n  EVALUATION: \"EVALUATION\",\n  PROPOSAL_SELECTED: \"PROPOSAL_SELECTED\",\n  CANCELLED: \"CANCELLED\",\n};\n\nconst PROPOSAL_TIMELINE_STATUS = {\n  DRAFT: \"DRAFT\",\n  REVIEW: \"REVIEW\",\n  APPROVED: \"APPROVED\",\n  REJECTED: \"REJECTED\",\n  CANCELED: \"CANCELLED\",\n  APPROVED_CONDITIONALLY: \"APPROVED_CONDITIONALLY\",\n  PAYMENT_PROCESSING: \"PAYMENT_PROCESSING\",\n  FUNDED: \"FUNDED\",\n};\n\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\n\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\n  return asyncFetch(QUERYAPI_ENDPOINT, {\n    method: \"POST\",\n    headers: { \"x-hasura-role\": `polyprogrammist_near` },\n    body: JSON.stringify({\n      query: operationsDoc,\n      variables: variables,\n      operationName: operationName,\n    }),\n  });\n}\n\nconst CANCEL_RFP_OPTIONS = {\n  CANCEL_PROPOSALS: \"CANCEL_PROPOSALS\",\n  UNLINK_PROPOSALS: \"UNLINK_PROPOSALSS\",\n  NONE: \"NONE\",\n};\n\nfunction parseJSON(json) {\n  if (typeof json === \"string\") {\n    try {\n      return JSON.parse(json);\n    } catch (error) {\n      return json;\n    }\n  } else {\n    return json;\n  }\n}\n\nfunction isNumber(value) {\n  return typeof value === \"number\";\n}\n\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\n];\n\nfunction getLinkUsingCurrentGateway(url) {\n  const data = fetch(`https://httpbin.org/headers`);\n  const gatewayURL = data?.body?.headers?.Origin ?? \"\";\n  return `https://${\n    gatewayURL.includes(\"near.org\") ? \"dev.near.org\" : \"near.social\"\n  }/${url}`;\n}\n/* END_INCLUDE: \"includes/common.jsx\" */\n\nconst { href } = VM.require(`${REPL_DEVHUB}/widget/core.lib.url`);\nhref || (href = () => {});\n\nconst { getGlobalLabels } = VM.require(\n  `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.core.lib.contract`\n) || { getGlobalLabels: () => {} };\n\nconst Container = styled.div`\n  .full-width-div {\n    width: 100vw;\n    position: relative;\n    left: 50%;\n    right: 50%;\n    margin-left: -50vw;\n    margin-right: -50vw;\n  }\n\n  .card.no-border {\n    border-left: none !important;\n    border-right: none !important;\n    margin-bottom: -3.5rem;\n  }\n\n  @media screen and (max-width: 768px) {\n    font-size: 13px;\n  }\n\n  .text-sm {\n    font-size: 13px;\n  }\n\n  .bg-grey {\n    background-color: #f4f4f4;\n  }\n\n  .border-bottom {\n    border-bottom: 1px solid grey;\n  }\n\n  .cursor-pointer {\n    cursor: pointer;\n  }\n\n  .proposal-card {\n    border-left: none !important;\n    border-right: none !important;\n    border-bottom: none !important;\n    &:hover {\n      background-color: #f4f4f4;\n    }\n  }\n\n  .blue-btn {\n    background-color: #3c697d !important;\n    border: none;\n    color: white;\n\n    &:active {\n      color: white;\n    }\n  }\n\n  @media screen and (max-width: 768px) {\n    .blue-btn {\n      padding: 0.5rem 0.8rem !important;\n      min-height: 32px;\n    }\n  }\n\n  a.no-space {\n    display: inline-block;\n  }\n\n  .text-wrap {\n    overflow: hidden;\n    white-space: normal;\n  }\n\n  .bg-blue {\n    background-image: linear-gradient(to bottom, #4b7a93, #213236);\n    color: white;\n  }\n`;\n\nconst Heading = styled.div`\n  font-size: 24px;\n  font-weight: 700;\n  width: 100%;\n\n  .text-normal {\n    font-weight: normal !important;\n  }\n\n  @media screen and (max-width: 768px) {\n    font-size: 18px;\n  }\n`;\n\nconst rfpLabelOptions = getGlobalLabels();\n\nconst FeedItem = ({ proposal, index }) => {\n  const accountId = proposal.author_id;\n  proposal.timeline = parseJSON(proposal.timeline);\n  const profile = Social.get(`${accountId}/profile/**`, \"final\");\n  // We will have to get the proposal from the contract to get the block height.\n  const blockHeight = parseInt(proposal.social_db_post_block_height);\n  const item = {\n    type: \"social\",\n    path: `${REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT}/post/main`,\n    blockHeight: blockHeight,\n  };\n\n  const isLinked = isNumber(proposal.linked_rfp);\n  const rfpData = proposal.rfpData;\n\n  return (\n    <a\n      href={href({\n        widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\n        params: {\n          page: \"proposal\",\n          id: proposal.proposal_id,\n        },\n      })}\n      onClick={(e) => e.stopPropagation()}\n      style={{ textDecoration: \"none\" }}\n    >\n      <div\n        className={\n          \"proposal-card d-flex justify-content-between gap-2 text-muted cursor-pointer p-3 w-100 flex-wrap flex-sm-nowrap \" +\n          (index !== 0 && \" border\")\n        }\n      >\n        <div className=\"d-flex gap-4 w-100\">\n          <Widget\n            src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.Profile`}\n            props={{\n              accountId,\n            }}\n          />\n          <div className=\"d-flex flex-column gap-2 w-100 text-wrap\">\n            <div className=\"d-flex gap-2 align-items-center flex-wrap w-100\">\n              <div className=\"h6 mb-0 text-black\">{proposal.name}</div>\n              <Widget\n                src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.MultiSelectCategoryDropdown`}\n                props={{\n                  selected: proposal.labels,\n                  disabled: true,\n                  hideDropdown: true,\n                  onChange: () => {},\n                  availableOptions: rfpLabelOptions,\n                }}\n              />\n            </div>\n            {isLinked && rfpData && (\n              <div className=\"text-sm text-muted d-flex gap-1 align-items-center\">\n                <i class=\"bi bi-link-45deg\"></i>\n                In response to RFP :\n                <a\n                  className=\"text-decoration-underline flex-1\"\n                  href={href({\n                    widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\n                    params: {\n                      page: \"rfp\",\n                      id: rfpData.rfp_id,\n                    },\n                  })}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  {rfpData.name}\n                </a>\n              </div>\n            )}\n            <div className=\"d-flex gap-2 align-items-center flex-wrap flex-sm-nowrap text-sm w-100\">\n              <div>#{proposal.proposal_id} \uff65 </div>\n              <div className=\"text-truncate\">\n                By {profile.name ?? accountId} \uff65{\" \"}\n              </div>\n              <Widget\n                src={`${REPL_NEAR}/widget/TimeAgo`}\n                props={{\n                  blockHeight,\n                  blockTimestamp: proposal.timestamp,\n                }}\n              />\n            </div>\n            <div className=\"d-flex gap-2 align-items-center\">\n              <Widget\n                src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.LikeButton`}\n                props={{\n                  item,\n                  proposalId: proposal.id,\n                  notifyAccountId: accountId,\n                }}\n              />\n\n              <Widget\n                src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.CommentIcon`}\n                props={{\n                  item,\n                  showOverlay: false,\n                  onClick: () => {},\n                }}\n              />\n            </div>\n          </div>\n        </div>\n        <div className=\"align-self-center\" style={{ minWidth: \"fit-content\" }}>\n          <Widget\n            src={`${REPL_DEVHUB}/widget/devhub.entity.proposal.StatusTag`}\n            props={{\n              timelineStatus: proposal.timeline.status,\n            }}\n          />\n        </div>\n      </div>\n    </a>\n  );\n};\n\nconst getProposal = (proposal_id) => {\n  return Near.asyncView(\n    `${REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT}`,\n    \"get_proposal\",\n    {\n      proposal_id,\n    }\n  );\n};\n\nconst FeedPage = () => {\n  State.init({\n    data: [],\n    cachedItems: {},\n    stage: \"\",\n    sort: \"\",\n    label: \"\",\n    input: \"\",\n    loading: false,\n    loadingMore: false,\n    aggregatedCount: null,\n    currentlyDisplaying: 0,\n    isFiltered: false,\n  });\n\n  const queryName = PROPOSAL_FEED_INDEXER_QUERY_NAME;\n  const query = `query GetLatestSnapshot($offset: Int = 0, $limit: Int = 10, $where: ${queryName}_bool_exp = {}) {\n    ${queryName}(\n      offset: $offset\n      limit: $limit\n      order_by: {proposal_id: desc}\n      where: $where\n    ) {\n      author_id\n      block_height\n      name\n      labels\n      summary\n      editor_id\n      proposal_id\n      ts\n      timeline\n      views\n      linked_rfp\n    }\n    ${queryName}_aggregate(\n      order_by: {proposal_id: desc}\n      where: $where\n    )  {\n      aggregate {\n        count\n      }\n    }\n  }`;\n\n  const rfpQueryName = RFP_FEED_INDEXER_QUERY_NAME;\n  const rfpQuery = `query GetLatestSnapshot($offset: Int = 0, $limit: Int = 10, $where: ${rfpQueryName}_bool_exp = {}) {\n    ${rfpQueryName}(\n      offset: $offset\n      limit: $limit\n      order_by: {rfp_id: desc}\n      where: $where\n    ) {\n      name\n      rfp_id\n    }\n  }`;\n\n  function separateNumberAndText(str) {\n    const numberRegex = /\\d+/;\n\n    if (numberRegex.test(str)) {\n      const number = str.match(numberRegex)[0];\n      const text = str.replace(numberRegex, \"\").trim();\n      return { number: parseInt(number), text };\n    } else {\n      return { number: null, text: str.trim() };\n    }\n  }\n\n  const buildWhereClause = () => {\n    let where = {};\n\n    if (state.label) {\n      where = { labels: { _contains: state.label }, ...where };\n    }\n\n    if (state.stage) {\n      // timeline is stored as jsonb\n      where = {\n        timeline: { _cast: { String: { _regex: `${state.stage}` } } },\n        ...where,\n      };\n    }\n    if (state.input) {\n      const { number, text } = separateNumberAndText(state.input);\n      if (number) {\n        where = { proposal_id: { _eq: number }, ...where };\n      }\n\n      if (text) {\n        where = {\n          _or: [\n            { name: { _iregex: `${text}` } },\n            { summary: { _iregex: `${text}` } },\n            { description: { _iregex: `${text}` } },\n          ],\n          ...where,\n        };\n      }\n    }\n    State.update({ isFiltered: Object.keys(where).length > 0 });\n    return where;\n  };\n\n  const buildOrderByClause = () => {\n    /**\n     * TODO\n     * Most commented -> edit contract and indexer\n     * Unanswered -> 0 comments\n     */\n  };\n\n  const makeMoreItems = () => {\n    if (state.aggregatedCount <= state.currentlyDisplaying) return;\n    fetchProposals(state.data.length);\n  };\n\n  const fetchProposals = (offset) => {\n    if (!offset) {\n      offset = 0;\n    }\n    if (state.loading) return;\n    const FETCH_LIMIT = 10;\n    const variables = {\n      limit: FETCH_LIMIT,\n      offset,\n      where: buildWhereClause(),\n    };\n    fetchGraphQL(query, \"GetLatestSnapshot\", variables).then(async (result) => {\n      if (result.status === 200) {\n        if (result.body.data) {\n          const data = result.body.data?.[queryName];\n          const totalResult = result.body.data?.[`${queryName}_aggregate`];\n          const promises = data.map((item) => {\n            if (isNumber(item.linked_rfp)) {\n              return fetchGraphQL(rfpQuery, \"GetLatestSnapshot\", {}).then(\n                (result) => {\n                  const rfpData = result.body.data?.[rfpQueryName];\n                  return { ...item, rfpData: rfpData[0] };\n                }\n              );\n            } else {\n              return Promise.resolve(item);\n            }\n          });\n          Promise.all(promises).then((res) => {\n            State.update({ aggregatedCount: totalResult.aggregate.count });\n            fetchBlockHeights(res, offset);\n          });\n        }\n      }\n    });\n  };\n\n  const renderItem = (item, index) => (\n    <div\n      key={item.proposal_id}\n      className={\n        (index !== state.data.length - 1 && \"border-bottom \") + index === 0 &&\n        \" rounded-top-2\"\n      }\n    >\n      <FeedItem proposal={item} index={index} />\n    </div>\n  );\n  const cachedRenderItem = (item, index) => {\n    if (props.term) {\n      return renderItem(item, {\n        searchKeywords: [props.term],\n      });\n    }\n\n    const key = JSON.stringify(item);\n\n    if (!(key in state.cachedItems)) {\n      state.cachedItems[key] = renderItem(item, index);\n      State.update();\n    }\n    return state.cachedItems[key];\n  };\n\n  useEffect(() => {\n    fetchProposals();\n  }, [state.sort, state.label, state.stage]);\n\n  const mergeItems = (newItems) => {\n    const items = [\n      ...new Set([...newItems, ...state.data].map((i) => JSON.stringify(i))),\n    ].map((i) => JSON.parse(i));\n    // Sorting in the front end\n    if (state.sort === \"proposal_id\" || state.sort === \"\") {\n      items.sort((a, b) => b.proposal_id - a.proposal_id);\n    } else if (state.sort === \"views\") {\n      items.sort((a, b) => b.views - a.views);\n    }\n\n    return items;\n  };\n\n  const fetchBlockHeights = (data, offset) => {\n    let promises = data.map((item) => getProposal(item.proposal_id));\n    Promise.all(promises).then((blockHeights) => {\n      data = data.map((item, index) => ({\n        ...item,\n        timeline: JSON.parse(item.timeline),\n        social_db_post_block_height:\n          blockHeights[index].social_db_post_block_height,\n      }));\n      if (offset) {\n        let newData = mergeItems(data);\n        State.update({\n          data: newData,\n          currentlyDisplaying: newData.length,\n          loading: false,\n        });\n      } else {\n        State.update({\n          data,\n          currentlyDisplaying: data.length,\n          loading: false,\n        });\n      }\n    });\n  };\n\n  const loader = (\n    <div className=\"d-flex justify-content-center align-items-center w-100\">\n      <Widget\n        src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Spinner`}\n      />\n    </div>\n  );\n\n  const renderedItems = state.data ? state.data.map(cachedRenderItem) : null;\n\n  return (\n    <Container className=\"w-100 py-4 px-2 d-flex flex-column gap-3\">\n      <div className=\"d-flex justify-content-between flex-wrap gap-2 align-items-center\">\n        <Heading>\n          Proposals\n          <span className=\"text-muted text-normal\">\n            ({state.aggregatedCount ?? state.data.length}){\" \"}\n          </span>\n        </Heading>\n        <div className=\"d-flex flex-wrap gap-4 align-items-center\">\n          <Widget\n            src={`${REPL_DEVHUB}/widget/devhub.feature.proposal-search.by-input`}\n            props={{\n              search: state.input,\n              className: \"w-xs-100\",\n              onSearch: (input) => {\n                State.update({ input });\n                fetchProposals();\n              },\n              onEnter: () => {\n                fetchProposals();\n              },\n            }}\n          />\n          <Widget\n            src={`${REPL_DEVHUB}/widget/devhub.feature.proposal-search.by-sort`}\n            props={{\n              onStateChange: (select) => {\n                State.update({ sort: select.value });\n              },\n            }}\n          />\n          <div className=\"d-flex gap-4 align-items-center\">\n            <Widget\n              src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.FilterByLabel`}\n              props={{\n                onStateChange: (select) => {\n                  State.update({ label: select.value });\n                },\n                availableOptions: rfpLabelOptions,\n              }}\n            />\n            <Widget\n              src={`${REPL_DEVHUB}/widget/devhub.feature.proposal-search.by-stage`}\n              props={{\n                onStateChange: (select) => {\n                  State.update({ stage: select.value });\n                },\n              }}\n            />\n          </div>\n        </div>\n        <div className=\"mt-2 mt-xs-0\">\n          <Link\n            to={href({\n              widgetSrc: `${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.pages.app`,\n              params: { page: \"create-proposal\" },\n            })}\n          >\n            <Widget\n              src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\n              props={{\n                label: (\n                  <div className=\"d-flex gap-2 align-items-center\">\n                    <div>\n                      <i className=\"bi bi-plus-circle-fill\"></i>\n                    </div>\n                    Submit Proposal\n                  </div>\n                ),\n                classNames: { root: \"blue-btn\" },\n              }}\n            />\n          </Link>\n        </div>\n      </div>\n      <div style={{ minHeight: \"50vh\" }}>\n        {!Array.isArray(state.data) ? (\n          loader\n        ) : (\n          <div className=\"card no-border rounded-0 mt-4 py-3 full-width-div\">\n            <div className=\"container-xl\">\n              <div className=\"bg-blue text-sm mt-2 p-3 rounded-3\">\n                <p className=\"d-flex gap-3 align-items-center mb-0\">\n                  <div>\n                    <i className=\"bi bi-info-circle\"></i>\n                  </div>\n                  <div>\n                    <span className=\"fw-bold\">\n                      Welcome to the Infrastructure Committee Proposal Feed!\n                    </span>\n                    This dedicated space makes it easy to submit and track\n                    funding proposals from the Infrastructure Committee, the\n                    primary organization overseeing improvements pertaining to\n                    wallets, indexers, RPC services, explorers, oracles,\n                    bridges, NEAR Protocol features, and related ecosystem\n                    upgrades. You are welcome to respond to any RFPs that are\n                    accepting submissions or submit an independent proposal.\n                  </div>\n                </p>\n              </div>\n              <div className=\"mt-4 border rounded-2\">\n                {state.aggregatedCount === 0 ? (\n                  <div className=\"m-2\">\n                    {state.isFiltered ? (\n                      <div class=\"alert alert-danger\" role=\"alert\">\n                        No proposal found for selected filter.\n                      </div>\n                    ) : (\n                      <div class=\"alert alert-secondary\" role=\"alert\">\n                        No proposal has been created yet.\n                      </div>\n                    )}\n                  </div>\n                ) : state.aggregatedCount > 0 ? (\n                  <InfiniteScroll\n                    pageStart={0}\n                    loadMore={makeMoreItems}\n                    hasMore={state.aggregatedCount > state.data.length}\n                    loader={loader}\n                    useWindow={false}\n                    threshold={100}\n                  >\n                    {renderedItems}\n                  </InfiniteScroll>\n                ) : (\n                  loader\n                )}\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </Container>\n  );\n};\n\nreturn FeedPage(props);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/megha19.near/widget/near-prpsls-bos.components.proposals.Feed", "fact_widget_deployments_id": "d8605b004081c0f9ec6652bf424ce264", "inserted_timestamp": "2024-06-07T09:04:48.590Z", "modified_timestamp": "2024-06-07T09:04:48.590Z", "__row_index": 0}