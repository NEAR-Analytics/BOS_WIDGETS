{"tx_hash": "257TMrmvtTxxhUhVA5GpQCz4F2bLsFNynsjFQUsiMUpd", "action_id_social": "3z4srJQcCZsgxZbZK26xuU5aRvA3ZDFxndG9ChU4SBS1-0-widget", "block_id": 120621570, "block_timestamp": "2024-06-07T07:23:49.573Z", "signer_id": "megha19.near", "widget_name": "near-prpsls-bos.components.admin.AboutConfigurator", "source_code": "/*\nLicense: MIT\nAuthor: devhub.near\nHomepage: https://github.com/NEAR-DevHub/near-prpsls-bos#readme\n*/\n/* INCLUDE: \"includes/common.jsx\" */\nconst REPL_DEVHUB = \"devhub.near\";\nconst REPL_INFRASTRUCTURE_COMMITTEE = \"megha19.near\";\nconst REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT = \"truedove38.near\";\nconst REPL_RPC_URL = \"https://rpc.mainnet.near.org\";\nconst REPL_NEAR = \"near\";\nconst REPL_SOCIAL_CONTRACT = \"social.near\";\nconst RFP_IMAGE =\n  \"https://ipfs.near.social/ipfs/bafkreicbygt4kajytlxij24jj6tkg2ppc2dw3dlqhkermkjjfgdfnlizzy\";\n\nconst RFP_FEED_INDEXER_QUERY_NAME =\n  \"polyprogrammist_near_devhub_objects_s_rfps_with_latest_snapshot\";\n\nconst RFP_INDEXER_QUERY_NAME =\n  \"polyprogrammist_near_devhub_objects_s_rfp_snapshots\";\n\nconst PROPOSAL_FEED_INDEXER_QUERY_NAME =\n  \"polyprogrammist_near_devhub_objects_s_proposals_with_latest_snapshot\";\n\nconst PROPOSAL_QUERY_NAME =\n  \"polyprogrammist_near_devhub_objects_s_proposal_snapshots\";\nconst RFP_TIMELINE_STATUS = {\n  ACCEPTING_SUBMISSIONS: \"ACCEPTING_SUBMISSIONS\",\n  EVALUATION: \"EVALUATION\",\n  PROPOSAL_SELECTED: \"PROPOSAL_SELECTED\",\n  CANCELLED: \"CANCELLED\",\n};\n\nconst PROPOSAL_TIMELINE_STATUS = {\n  DRAFT: \"DRAFT\",\n  REVIEW: \"REVIEW\",\n  APPROVED: \"APPROVED\",\n  REJECTED: \"REJECTED\",\n  CANCELED: \"CANCELLED\",\n  APPROVED_CONDITIONALLY: \"APPROVED_CONDITIONALLY\",\n  PAYMENT_PROCESSING: \"PAYMENT_PROCESSING\",\n  FUNDED: \"FUNDED\",\n};\n\nconst QUERYAPI_ENDPOINT = `https://near-queryapi.api.pagoda.co/v1/graphql`;\n\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\n  return asyncFetch(QUERYAPI_ENDPOINT, {\n    method: \"POST\",\n    headers: { \"x-hasura-role\": `polyprogrammist_near` },\n    body: JSON.stringify({\n      query: operationsDoc,\n      variables: variables,\n      operationName: operationName,\n    }),\n  });\n}\n\nconst CANCEL_RFP_OPTIONS = {\n  CANCEL_PROPOSALS: \"CANCEL_PROPOSALS\",\n  UNLINK_PROPOSALS: \"UNLINK_PROPOSALSS\",\n  NONE: \"NONE\",\n};\n\nfunction parseJSON(json) {\n  if (typeof json === \"string\") {\n    try {\n      return JSON.parse(json);\n    } catch (error) {\n      return json;\n    }\n  } else {\n    return json;\n  }\n}\n\nfunction isNumber(value) {\n  return typeof value === \"number\";\n}\n\nconst PROPOSALS_APPROVED_STATUS_ARRAY = [\n  PROPOSAL_TIMELINE_STATUS.APPROVED,\n  PROPOSAL_TIMELINE_STATUS.APPROVED_CONDITIONALLY,\n  PROPOSAL_TIMELINE_STATUS.PAYMENT_PROCESSING,\n  PROPOSAL_TIMELINE_STATUS.FUNDED,\n];\n\nfunction getLinkUsingCurrentGateway(url) {\n  const data = fetch(`https://httpbin.org/headers`);\n  const gatewayURL = data?.body?.headers?.Origin ?? \"\";\n  return `https://${\n    gatewayURL.includes(\"near.org\") ? \"dev.near.org\" : \"near.social\"\n  }/${url}`;\n}\n/* END_INCLUDE: \"includes/common.jsx\" */\n\nconst { Tile } = VM.require(\n  `${REPL_DEVHUB}/widget/devhub.components.molecule.Tile`\n) || { Tile: () => <></> };\n\nconst item = {\n  path: `${REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT}/profile/**`,\n};\n\nconst profile = Social.get(item.path);\n\nif (!profile.description) {\n  <div\n    style={{ height: \"50vh\" }}\n    className=\"d-flex justify-content-center align-items-center w-100\"\n  >\n    <Widget src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Spinner`} />\n  </div>;\n}\n\nconst initialData = profile.description;\nconst [content, setContent] = useState(null);\nconst [showCommentToast, setCommentToast] = useState(false);\nconst [handler, setHandler] = useState(null);\nconst [isTxnCreated, setTxnCreated] = useState(false);\n\nconst Container = styled.div`\n  width: 100%;\n  margin: 0 auto;\n  padding: 20px;\n  text-align: left;\n`;\n\nconst hasDataChanged = () => {\n  return content !== initialData;\n};\n\nconst handlePublish = () => {\n  setTxnCreated(true);\n  Near.call([\n    {\n      contractName: REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT,\n      methodName: \"set_social_db_profile_description\",\n      args: { description: content },\n      gas: 270000000000000,\n    },\n  ]);\n};\n\nuseEffect(() => {\n  if (isTxnCreated) {\n    const checkForAboutInSocialDB = () => {\n      Near.asyncView(REPL_SOCIAL_CONTRACT, \"get\", {\n        keys: [item.path],\n      }).then((result) => {\n        try {\n          const submittedAboutText = content;\n          const lastAboutTextFromSocialDB =\n            result[REPL_INFRASTRUCTURE_COMMITTEE_CONTRACT].profile.description;\n          if (submittedAboutText === lastAboutTextFromSocialDB) {\n            setTxnCreated(false);\n            setCommentToast(true);\n            return;\n          }\n        } catch (e) {}\n        setTimeout(() => checkForAboutInSocialDB(), 2000);\n      });\n    };\n    checkForAboutInSocialDB();\n  }\n}, [isTxnCreated]);\n\nuseEffect(() => {\n  if (!content && initialData) {\n    setContent(initialData);\n    setHandler(\"update\");\n  }\n}, [initialData]);\n\nfunction Preview() {\n  return (\n    <Tile className=\"p-3\" style={{ background: \"white\" }}>\n      <Widget\n        src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.Markdown`}\n        props={{\n          content: content,\n        }}\n      />\n    </Tile>\n  );\n}\n\nreturn (\n  <Container>\n    <Widget\n      src={`${REPL_NEAR}/widget/DIG.Toast`}\n      props={{\n        title: \"About page updated successfully\",\n        type: \"success\",\n        open: showCommentToast,\n        onOpenChange: (v) => setCommentToast(v),\n        trigger: <></>,\n        providerProps: { duration: 3000 },\n      }}\n    />\n    <ul className=\"nav nav-tabs\" id=\"editPreviewTabs\" role=\"tablist\">\n      <li className=\"nav-item\" role=\"presentation\">\n        <button\n          className=\"nav-link active\"\n          id=\"edit-tab\"\n          data-bs-toggle=\"tab\"\n          data-bs-target=\"#edit\"\n          type=\"button\"\n          role=\"tab\"\n          aria-controls=\"edit\"\n          aria-selected=\"true\"\n        >\n          Edit\n        </button>\n      </li>\n      <li className=\"nav-item\" role=\"presentation\">\n        <button\n          className=\"nav-link\"\n          id=\"preview-tab\"\n          data-bs-toggle=\"tab\"\n          data-bs-target=\"#preview\"\n          type=\"button\"\n          role=\"tab\"\n          aria-controls=\"preview\"\n          aria-selected=\"false\"\n        >\n          Preview\n        </button>\n      </li>\n    </ul>\n    <div className=\"tab-content\" id=\"editPreviewTabsContent\">\n      <div\n        className=\"tab-pane show active py-4\"\n        id=\"edit\"\n        role=\"tabpanel\"\n        aria-labelledby=\"edit-tab\"\n      >\n        <Widget\n          src={`${REPL_INFRASTRUCTURE_COMMITTEE}/widget/near-prpsls-bos.components.molecule.SimpleMDE`}\n          props={{\n            data: { handler: handler, content: content },\n            onChangeKeyup: (v) => {\n              setContent(v);\n            },\n            showAutoComplete: true,\n          }}\n        />\n\n        <div\n          className={\"d-flex align-items-center justify-content-end gap-3 mt-4\"}\n        >\n          <Widget\n            src={`${REPL_DEVHUB}/widget/devhub.components.molecule.Button`}\n            props={{\n              classNames: { root: \"btn-success\" },\n              disabled: !hasDataChanged(),\n              icon: {\n                type: \"bootstrap_icon\",\n                variant: \"bi-check-circle-fill\",\n              },\n              label: \"Publish\",\n              onClick: handlePublish,\n            }}\n          />\n        </div>\n      </div>\n      <div\n        className=\"tab-pane\"\n        id=\"preview\"\n        role=\"tabpanel\"\n        aria-labelledby=\"preview-tab\"\n        style={{ position: \"relative\" }}\n      >\n        <div className=\"w-100 h-100 py-4\">\n          <Preview />\n        </div>\n      </div>\n    </div>\n  </Container>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/megha19.near/widget/near-prpsls-bos.components.admin.AboutConfigurator", "fact_widget_deployments_id": "5955f09822d923cb56dab12637678638", "inserted_timestamp": "2024-06-07T09:04:48.590Z", "modified_timestamp": "2024-06-07T09:04:48.590Z", "__row_index": 0}