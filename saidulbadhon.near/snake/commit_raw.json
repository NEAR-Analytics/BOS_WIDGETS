{"tx_hash": "Exs6xaZJxvmD88hriSnCHgofe88bJXq947tgXxNSt5mA", "action_id_social": "F8o5bk3fdkFaiwgxtH6keqPyT6dBbK7EPPcXCFcDpnAT-0-widget", "block_id": 116908197, "block_timestamp": "2024-04-15T16:50:41.202Z", "signer_id": "saidulbadhon.near", "widget_name": "snake", "source_code": "const srcDoc = `<!DOCTYPE html>\n<html>\n<head>\n    <title>Snake Game</title>\n    <style>\n        @import 'https://cdnjs.cloudflare.com/ajax/libs/tailwindcss/2.1.2/tailwind.min.css';\n        #game-board {\n            height: 400px;\n            width: 400px;\n            border: 1px solid #000;\n        }\n        .dot {\n            height: 20px;\n            width: 20px;\n        }\n        .score {\n            position: absolute;\n            right: 20px;\n            top: 20px;\n        }\n        .arrow-keys-wrapper {\n            position: absolute;\n            right: 20px;\n            bottom: 20px;\n            display: flex;\n            flex-direction: row;\n            justify-content: space-around;\n            align-items: center;\n        }\n        .arrow-key {\n            border: 1px solid #000;\n            padding: 10px;\n            cursor: pointer;\n        }\n        #restart-dialog {\n            position: absolute;\n            top: 0;\n            left: 0;\n            height: 100vh;\n            width: 100vw;\n            background: rgba(0,0,0,0.8);\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            flex-direction: column;\n            color: white;\n            font-size: 2em;\n            display: none;\n        }\n        .restart-button {\n            background-color: #4CAF50;\n            border: none;\n            color: white;\n            padding: 15px 32px;\n            text-align: center;\n            text-decoration: none;\n            display: inline-block;\n            font-size: 16px;\n            margin: 4px 2px;\n            cursor: pointer;\n        }\n        .reset-button {\n            top:0;\n            position: absolute;\n            padding: 10px;\n            border:1px solid black;\n        }\n    </style>\n</head>\n<body class=\"flex items-center justify-center h-screen bg-gray-200\">\n    <div id=\"game-board\" class=\"relative h-full w-full grid grid-cols-20 gap-1\"></div>\n    <div class=\"score text-4xl font-bold\">Score: <span id=\"score\">0</span></div>\n    <button id=\"reset-button\" class=\"reset-button\">Reset Game</button>\n    <div class=\"arrow-keys-wrapper\">\n        <div id=\"arrowUp\" class=\"arrow-key\">&#8593;</div>\n        <div>\n            <div id=\"arrowLeft\" class=\"arrow-key\">&#8592;</div>\n            <div id=\"arrowRight\" class=\"arrow-key\">&#8594;</div>\n        </div>\n        <div id=\"arrowDown\" class=\"arrow-key\">&#8595;</div>\n    </div>\n    <div id=\"restart-dialog\">\n        <p>Game Over. Your score was <span id=\"final-score\">0</span>. Would you like to restart?</p>\n        <button id=\"yes-button\" class=\"restart-button\">Yes</button>\n        <button id=\"no-button\" class=\"restart-button\">No</button>\n    </div>\n\n    <script>\n        let dotSize = 20;\n        let direction = 'r';\n        let snake = [{ top: 0, left: 0 }];\n        let food = null;\n        let score = 0;\n        let gameInterval = null;\n        let end = false;\n\n        function startGame() {\n            direction = 'r';\n            snake = [{ top: 0, left: 0 }];\n            food = null;\n            toReset = false;\n            score = 0;\n            document.getElementById('score').innerText = score;\n            end = false;\n            gameInterval = setInterval(updateGame, 250);\n        }\n\n        function updateGame() {\n            updateSnake();\n            if (!end)\n                drawSnake();\n        }\n        function createDot(top, left, color) {\n            let dot = document.createElement('div');\n            dot.classList.add('absolute', 'dot');\n            dot.style.top = \\`${top}px\\`;\n            dot.style.left = \\`${left}px\\`;\n            dot.style.backgroundColor = color;\n            return dot;\n        }\n        function updateSnake() {\n            let oldHead = snake[0];\n            let newHead = null;\n            switch (direction) {\n                case 'r': newHead = { top: oldHead.top, left: oldHead.left + dotSize }; break;\n                case 'l': newHead = { top: oldHead.top, left: oldHead.left - dotSize }; break;\n                case 'u': newHead = { top: oldHead.top - dotSize, left: oldHead.left }; break;\n                case 'd': newHead = { top: oldHead.top + dotSize, left: oldHead.left }; break;\n            }\n            if (checkCollision(newHead)) return endGame();\n            if (JSON.stringify(newHead) === JSON.stringify(food)) {\n                eatFood();\n            } else {\n                snake.pop();\n            }\n            snake.unshift(newHead);\n            if (food === null) {\n                food = randomPosition();\n                drawFood();\n            }\n            drawSnake();\n        }\n        function checkCollision(dot) {\n            if (dot.left < 0 || dot.top < 0 || dot.left === 400 || dot.top === 400) return true;\n            return snake.some(snakeDot => JSON.stringify(snakeDot) === JSON.stringify(dot));\n        }\n        function eatFood() {\n            food = null;\n            score++;\n            document.getElementById('score').innerText = score;\n        }\n        function drawSnake() {\n            document.getElementById('game-board').innerHTML = '';\n            snake.forEach((dot, index) => document.getElementById('game-board').appendChild(createDot(dot.top, dot.left, index === 0 ? 'black' : 'green')));\n            if (food !== null) document.getElementById('game-board').appendChild(createDot(food.top, food.left, 'red'));\n        }\n        function endGame() {\n            clearInterval(gameInterval);\n            document.getElementById('restart-dialog').style.display = 'flex';\n            document.getElementById('final-score').innerText = score;\n        }\n        function randomPosition() {\n            return {\n                top: Math.floor(Math.random() * 20) * dotSize,\n                left: Math.floor(Math.random() * 20) * dotSize\n            };\n        }\n        function drawFood() {\n            if (food !== null) document.getElementById('game-board').appendChild(createDot(food.top, food.left, 'red'));\n        }\n        startGame();\n        window.addEventListener('keydown', function (event) {\n            switch (event.key) {\n                case 'ArrowUp':\n                    if (direction !== 'd') direction = 'u';\n                    break;\n                case 'ArrowDown':\n                    if (direction !== 'u') direction = 'd';\n                    break;\n                case 'ArrowLeft':\n                    if (direction !== 'r') direction = 'l';\n                    break;\n                case 'ArrowRight':\n                    if (direction !== 'l') direction = 'r';\n                    break;\n            }\n        });\n        document.getElementById('arrowUp').addEventListener('click', function () {\n            if (direction !== 'd') direction = 'u';\n        });\n        document.getElementById('arrowDown').addEventListener('click', function () {\n            if (direction !== 'u') direction = 'd';\n        });\n        document.getElementById('arrowLeft').addEventListener('click', function () {\n            if (direction !== 'r') direction = 'l';\n        });\n        document.getElementById('arrowRight').addEventListener('click', function () {\n            if (direction !== 'l') direction = 'r';\n        });\n        document.getElementById('reset-button').addEventListener('click', function () {\n            clearInterval(gameInterval);\n            startGame();\n        });\n        document.getElementById('yes-button').addEventListener('click', function () {\n            document.getElementById('restart-dialog').style.display = 'none';\n            startGame();\n        });\n        document.getElementById('no-button').addEventListener('click', function () {\n            document.getElementById('restart-dialog').style.display = 'none';\n        });\n    </script>\n</body>\n</html>`;\n\nreturn <iframe style={{ width: \"100%\", height: \"100%\", minHeight:760 }} srcDoc={srcDoc} />;\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/saidulbadhon.near/widget/snake", "fact_widget_deployments_id": "8fa8cf8c356f154c9e457b569af6b9be", "inserted_timestamp": "2024-04-15T18:42:49.292Z", "modified_timestamp": "2024-04-15T18:42:49.292Z", "__row_index": 2}