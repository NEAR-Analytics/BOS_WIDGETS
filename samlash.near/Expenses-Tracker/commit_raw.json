{"tx_hash": "5YMDUYuFYn9cq64HvUSRzivBFvnUWC1Q9BMaZ637YkYh", "action_id_social": "H6kSxbx8XTKXGd4ajeJFNEYMGfnF51KCs488Qy2eZo2k-0-widget", "block_id": 107761391, "block_timestamp": "2023-12-12T12:59:04.650Z", "signer_id": "samlash.near", "widget_name": "Expenses-Tracker", "source_code": "const cssFont = fetch(\n  \"https://fonts.googleapis.com/css2?family=Pacifico&family=Manrope:wght@200;300;400;500;600;700;800\"\n).body;\n\nif (!cssFont) return \"\";\n\nif (!state.theme) {\n  State.update({\n    theme: styled.div`\n              ${cssFont}\n                    font-family:  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n                          color: #fff;\n\n                                .expense-tracker {\n                                        width: 550px;\n                                                padding: 16px;\n                                                        border-radius: 12px;\n                                                                background: linear-gradient(270deg, #5a58e5 17.37%, #66acf7 100%);\n                                                                        display: flex;\n                                                                                flex-direction: column;\n                                                                                        align-items: center;\n                                                                                                justify-content: center;\n                                                                                                        text-align: center;\n                                                                                                              }\n                                                \n        .list{\n            margin-top: 20px;\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n           gap: 8px;\n           background: #fff;\n           color: #000;\n           padding: 10px;\n           width: 350px;\n           border-radius: 10px\n        }     \n        .budget-overview{\n            display: flex;\n            justify-content: space-between;\n           \n            flex-direction: column;\n            font-size:20px\n        }  \n        .budget-overview{\n  display: flex;\n  justify-content: space-between;\n  gap: 10px;\n  font-size: 19px;\n  align-items: center;\n  \n}\n.budget{\n  background-color:#fff ;\n  padding: 10px;\n  border-radius: 5px;\n  font-weight: 600;\n  color: rgb(58, 58, 58);\n  box-shadow: rgba(0, 0, 0, 0.1) 0px 1px 2px 0px;\n}\n.expense{\n  background-color: rgb(255, 205, 205);\n  padding: 10px;\n  border-radius: 5px;\n  font-weight: 600;\n  color: red;\n  box-shadow: rgba(0, 0, 0, 0.1) 0px 1px 2px 0px;\n}\n.remain{\n  background-color: rgb(189, 255, 189);\n  padding: 10px;\n  border-radius: 5px;\n  font-weight: 600;\n  color: green;\n  box-shadow: rgba(0, 0, 0, 0.1) 0px 1px 2px 0px;\n}                                                                                                                                                       display: flex;\n                                                                                                                                                                                                                                                                                                            justify-content: space-between;\n                                                                                                                                                                                                                                                                                                                  }\n                                                                                                                                                                                                                                                                                                                      `,\n  });\n}\n\nconst Theme = state.theme;\n\nconst [expenses, setExpenses] = useState([]);\nconst [budget, setBudget] = useState(1000);\nconst [isEditing, setIsEditing] = useState(false);\nconst [editedBudget, setEditedBudget] = useState(budget);\nconst [description, setDescription] = useState(\"\");\nconst [amount, setAmount] = useState(\"\");\nconst [category, setCategory] = useState(\"\");\nconst [searchQuery, setSearchQuery] = useState(\"\");\n\nconst onAddExpense = (newExpense) => {\n  setExpenses([...expenses, newExpense]);\n};\n\nconst onDeleteExpense = (id) => {\n  const updatedExpenses = expenses.filter((expense) => expense.id !== id);\n  setExpenses(updatedExpenses);\n};\n\nconst onEditExpense = (editedExpense) => {\n  const updatedExpenses = expenses.map((expense) =>\n    expense.id === editedExpense.id ? editedExpense : expense\n  );\n  setExpenses(updatedExpenses);\n};\n\nconst onEditBudget = (newBudget) => {\n  setBudget(newBudget);\n};\n\nconst categorizeExpense = (description) => {\n  const keywordsToCategories = {\n    food: [\"groceries\", \"restaurant\", \"food\", \"breakfast\"],\n    utilities: [\"electricity\", \"water\", \"internet\", \"utilities\"],\n    entertainment: [\"movies\", \"books\", \"games\", \"entertainment\"],\n    travel: [\"airfare\", \"hotel\", \"transportation\", \"travel\"],\n    others: [\"miscellaneous\", \"others\"],\n  };\n\n  for (const [cat, keywords] of Object.entries(keywordsToCategories)) {\n    if (\n      keywords.some((keyword) => description.toLowerCase().includes(keyword))\n    ) {\n      return cat;\n    }\n  }\n\n  return \"others\"; // Default category if no match\n};\n\nconst handleSubmit = (e) => {\n  e.preventDefault();\n  if (!description || !amount) return;\n\n  const expenseCategory = categorizeExpense(description);\n\n  const newExpense = {\n    id: Date.now(),\n    description,\n    amount: parseFloat(amount),\n    category: category || expenseCategory,\n  };\n\n  onAddExpense(newExpense);\n\n  setDescription(\"\");\n  setAmount(\"\");\n  setCategory(\"\");\n};\n\nconst handleEdit = () => {\n  onEditBudget(editedBudget);\n  setIsEditing(false);\n};\n\nconst openEditModal = (expense) => {\n  setExpenseToEdit(expense);\n  setEditModalOpen(true);\n};\n\nconst closeEditModal = () => {\n  setExpenseToEdit(null);\n  setEditModalOpen(false);\n};\n\nconst handleEditExpense = () => {\n  onEditExpense(expenseToEdit);\n  closeEditModal();\n};\n\nconst filteredExpenses = expenses.filter(\n  (expense) =>\n    expense.description.toLowerCase().includes(searchQuery.toLowerCase()) ||\n    expense.category.toLowerCase().includes(searchQuery.toLowerCase())\n);\n\nreturn (\n  <Theme>\n    <div className=\"expense-tracker\">\n      <h1 className=\"heading\">Expense Tracker</h1>\n\n      <div>\n        <h4>Budget Overview</h4>\n        {isEditing ? (\n          <div>\n            <label>\n              New Budget:\n              <input\n                type=\"number\"\n                value={editedBudget}\n                onChange={(e) => setEditedBudget(parseFloat(e.target.value))}\n              />\n            </label>\n            <button onClick={handleEdit} className=\"btn btn-success\">\n              Save\n            </button>\n          </div>\n        ) : (\n          <>\n            <div className=\"budget-overview\">\n              <p className=\"budget\">Budget: \u20a6{budget.toFixed(2)}</p>\n              <p className=\"expense\">\n                Total Expenses: \u20a6\n                {expenses\n                  .reduce((total, expense) => total + expense.amount, 0)\n                  .toFixed(2)}\n              </p>\n\n              <p className=\"remain\">\n                Remaining Budget: \u20a6\n                {(\n                  budget -\n                  expenses.reduce((total, expense) => total + expense.amount, 0)\n                ).toFixed(2)}\n              </p>\n            </div>\n            <button\n              onClick={() => setIsEditing(true)}\n              className=\"btn btn-primary\"\n            >\n              Edit Budget\n            </button>\n          </>\n        )}\n      </div>\n      <div className=\"form-ex\">\n        <br />\n        <div className=\"form-input\">\n          <label>\n            Description:\n            <input\n              type=\"text\"\n              value={description}\n              onChange={(e) => setDescription(e.target.value)}\n            />\n          </label>\n          <label>\n            Amount:\n            <input\n              type=\"number\"\n              value={amount}\n              onChange={(e) => setAmount(e.target.value)}\n            />\n          </label>\n          <label>\n            Category:\n            <input\n              type=\"text\"\n              value={category}\n              onChange={(e) => setCategory(e.target.value)}\n            />\n          </label>\n        </div>\n        <br />\n        <button onClick={handleSubmit}>Add Expense</button>\n      </div>\n      <br />\n      <div className=\"expense-table\">\n        <h2>Expense List</h2>\n        <br />\n        {/* Search input */}\n        <input\n          type=\"text\"\n          placeholder=\"Search expenses...\"\n          value={searchQuery}\n          onChange={(e) => setSearchQuery(e.target.value)}\n        />\n        <br />\n        <ul>\n          {/* Display filtered expenses */}\n          {filteredExpenses.map((expense) => (\n            <li className=\"container row\" key={expense.id}>\n              <div className=\" list\">\n                <strong>{expense.description}</strong>\n                <span>{expense.category}</span>\n                <span>\u20a6{expense.amount}</span>\n\n                <button\n                  onClick={() => onDeleteExpense(expense.id)}\n                  className=\"btn btn-danger\"\n                >\n                  Delete\n                </button>\n              </div>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  </Theme>\n);\n", "metadata": {"fork_of": "binbash.near/widget/ExpensesTracker@107747588"}, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/samlash.near/widget/Expenses-Tracker", "fact_widget_deployments_id": "a81093c6f9d5bb622c854bd4e1a14624", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}