{"tx_hash": "AtoNQcA2heYgMpyHWrVnefK5nPBbG7rzJNHMDdZgEAnP", "action_id_social": "DF2etUiqwdDaQnjbKVhA9SGEsixFsqs5nUctge5GJAWi-0-widget", "block_id": 117611045, "block_timestamp": "2024-04-25T18:51:51.771Z", "signer_id": "thomasguntenaar.near", "widget_name": "devhub.entity.addon.blogv2.editor.content", "source_code": "const { Card } =\n  VM.require(\"thomasguntenaar.near/widget/devhub.entity.addon.blogv2.Card\") ||\n  (() => <></>);\nconst { Page } =\n  VM.require(\"thomasguntenaar.near/widget/devhub.entity.addon.blogv2.Page\") ||\n  (() => <></>);\n\n// TODO: change with settings\nconst categories = [\n  {\n    label: \"Guide\",\n    value: \"guide\",\n  },\n  {\n    label: \"News\",\n    value: \"news\",\n  },\n  {\n    label: \"Reference\",\n    value: \"reference\",\n  },\n];\n\nconst selectOptions = useMemo(\n  () =>\n    categories.map((it) => ({\n      label: it.label,\n      value: it.value,\n    })),\n  [categories]\n);\n\nconst Banner = styled.div`\n  border-radius: var(--bs-border-radius-xl) !important;\n  height: 100%;\n\n  & > div :not(.btn) {\n    position: absolute;\n    display: none;\n    margin: 0 !important;\n    width: 0 !important;\n    height: 0 !important;\n  }\n\n  .btn {\n    padding: 0.5rem 0.75rem !important;\n    min-height: 32;\n    line-height: 1;\n\n    border: none;\n    border-radius: 50px;\n    --bs-btn-color: #ffffff;\n    --bs-btn-bg: #087990;\n    --bs-btn-border-color: #087990;\n    --bs-btn-hover-color: #ffffff;\n    --bs-btn-hover-bg: #055160;\n    --bs-btn-hover-border-color: #055160;\n    --bs-btn-focus-shadow-rgb: 49, 132, 253;\n    --bs-btn-active-color: #ffffff;\n    --bs-btn-active-bg: #055160;\n    --bs-btn-active-border-color: #055160;\n    --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n    opacity: 0.8;\n\n    &:hover {\n      opacity: 1;\n    }\n  }\n`;\n\nconst DropdownBtnContainer = styled.div`\n  font-size: 13px;\n  min-width: 150px;\n\n  .custom-select {\n    position: relative;\n  }\n\n  .select-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    border: 1px solid #ccc;\n    border-radius-top: 5px;\n    cursor: pointer;\n    background-color: #fff;\n    border-radius: 5px;\n  }\n\n  .no-border {\n    border: none !important;\n  }\n\n  .options-card {\n    position: absolute;\n    top: 100%;\n    right: 0;\n    width: 200%;\n    border: 1px solid #ccc;\n    background-color: #fff;\n    padding: 0.5rem;\n    z-index: 99;\n    font-size: 13px;\n    border-radius:0.375rem !important;\n  }\n\n  .left {\n    right: 0 !important;\n    left: auto !important;\n  }\n\n  @media screen and (max-width: 768px) {\n    .options-card {\n      right: 0 !important;\n      left: auto !important;\n    }\n  }\n\n  .option {\n    margin-block: 5px;\n    padding: 10px;\n    cursor: pointer;\n    border-bottom: 1px solid #f0f0f0;\n    transition: background-color 0.3s ease;\n    border-radius: 0.375rem !important;\n  }\n\n  .option:hover {\n    background-color: #f0f0f0; /* Custom hover effect color */\n  }\n\n  .option:last-child {\n    border-bottom: none;\n  }\n\n  .selected {\n    background-color: #f0f0f0;\n  }\n\n  .disabled {\n    background-color: #f4f4f4 !important;\n    cursor: not-allowed !important;\n    font-weight: 500;\n    color: #b3b3b3;\n  }\n\n  .disabled .circle {\n    opacity: 0.5;\n  }\n\n  .circle {\n    width: 8px;\n    height: 8px;\n    border-radius: 50%;\n  }\n\n  .grey {\n    background-color: #818181;\n  }\n\n  .green {\n    background-color: #04a46e;\n  }\n\n  a:hover {\n    text-decoration: none;\n  }\n\n}\n`;\n\nconst { data, handle, onSubmit, onCancel, onDelete } = props;\n\nconst initialData = data;\n\n// Parse the date string to create a Date object\nconst publishedAtDate = new Date(initialData.publishedAt);\nconst year = publishedAtDate.getFullYear();\nconst month = (publishedAtDate.getMonth() + 1).toString().padStart(2, \"0\");\nconst day = publishedAtDate.getDate().toString().padStart(2, \"0\");\nconst initialFormattedDate = year + \"-\" + month + \"-\" + day;\n\nconst [content, setContent] = useState(initialData.content || \"\");\nconst [title, setTitle] = useState(initialData.title || \"\");\nconst [subtitle, setSubtitle] = useState(initialData.subtitle || \"\");\nconst [description, setDescription] = useState(initialData.description || \"\");\nconst [author, setAuthor] = useState(initialData.author || \"\");\nconst [previewMode, setPreviewMode] = useState(\"card\"); // \"card\" or \"page\"\nconst [date, setDate] = useState(initialFormattedDate || new Date());\n// TODO configurable by settings in addon parameters\nconst [category, setCategory] = useState(initialData.category || \"guide\");\nconst [disabledSubmitBtn, setDisabledSubmitBtn] = useState(false);\nconst [isDraftBtnOpen, setDraftBtnOpen] = useState(false);\nconst [selectedStatus, setSelectedStatus] = useState(\n  initialData.status || \"DRAFT\"\n);\n\nconst LoadingButtonSpinner = (\n  <span\n    class=\"submit-proposal-draft-loading-indicator spinner-border spinner-border-sm\"\n    role=\"status\"\n    aria-hidden=\"true\"\n  ></span>\n);\n\nconst SubmitBtn = () => {\n  const btnOptions = [\n    {\n      iconColor: \"grey\",\n      label: \"Save Draft\",\n      description:\n        \"The author can still edit the blog before sharing it with the community.\",\n      value: \"DRAFT\",\n    },\n    {\n      iconColor: \"green\",\n      label: \"Publish\",\n      description:\n        \"The blog will be shared with the community and can be viewed by everyone.\",\n      value: \"PUBLISH\",\n    },\n  ];\n\n  const handleOptionClick = (option) => {\n    setDraftBtnOpen(false);\n    setSelectedStatus(option.value);\n  };\n\n  const toggleDropdown = () => {\n    setDraftBtnOpen(!isDraftBtnOpen);\n  };\n\n  const handleSubmit = () => {\n    handlePublish(selectedStatus);\n  };\n\n  const selectedOption = btnOptions.find((i) => i.value === selectedStatus);\n\n  return (\n    <DropdownBtnContainer>\n      <div\n        className=\"custom-select\"\n        tabIndex=\"0\"\n        onBlur={() => setDraftBtnOpen(false)}\n      >\n        <div\n          className={\n            \"select-header d-flex gap-1 align-items-center submit-draft-button \" +\n            (!hasDataChanged() && \"disabled\")\n          }\n        >\n          <div\n            onClick={() => hasDataChanged() && handleSubmit()}\n            className=\"p-2 d-flex gap-2 align-items-center \"\n          >\n            {/* {isTxnCreated ? (\n              LoadingButtonSpinner\n            ) : ( */}\n            <div className={\"circle \" + selectedOption.iconColor}></div>\n            {/* )} */}\n            <div className={`selected-option`}>{selectedOption.label}</div>\n          </div>\n          <div\n            className=\"h-100 p-2\"\n            style={{ borderLeft: \"1px solid #ccc\" }}\n            onClick={toggleDropdown}\n          >\n            <i class={`bi bi-chevron-${isDraftBtnOpen ? \"up\" : \"down\"}`}></i>\n          </div>\n        </div>\n\n        {isDraftBtnOpen && (\n          <div className=\"options-card\">\n            {btnOptions.map((option) => (\n              <div\n                key={option.value}\n                className={`option ${\n                  selectedOption.value === option.value ? \"selected\" : \"\"\n                }`}\n                onClick={() => handleOptionClick(option)}\n              >\n                <div className={`d-flex gap-2 align-items-center`}>\n                  <div className={\"circle \" + option.iconColor}></div>\n                  <div className=\"fw-bold\">{option.label}</div>\n                </div>\n                <div className=\"text-muted text-xs\">{option.description}</div>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </DropdownBtnContainer>\n  );\n};\n\n// padding 20\nconst Container = styled.div`\n  width: 100%;\n  margin: 0 auto;\n\n  text-align: left;\n`;\n\nconsole.log(\"content publishedAt\", initialData.publishedAt);\n\nconst hasDataChanged = () => {\n  return (\n    content !== initialData.content ||\n    title !== initialData.title ||\n    subtitle !== initialData.subtitle ||\n    description !== initialData.description ||\n    author !== initialData.author ||\n    date !== initialData.publishedAt ||\n    category !== initialData.category\n  );\n};\n\nconst handlePublish = (status) => {\n  onSubmit &&\n    onSubmit(\n      {\n        id: data.id || undefined,\n        title,\n        subtitle,\n        description,\n        date,\n        content,\n        status,\n        author,\n        category,\n        community: handle, // TODO see if we can remove this\n      },\n      data.id !== undefined\n    );\n};\n\nfunction Preview() {\n  switch (previewMode) {\n    case \"card\": {\n      return (\n        <Card\n          data={{\n            title,\n            subtitle,\n            description,\n            date,\n            content,\n            author,\n            category,\n            community: handle,\n          }}\n        />\n      );\n    }\n    case \"page\": {\n      return (\n        <Page\n          data={{\n            title,\n            subtitle,\n            description,\n            date,\n            content,\n            author,\n            category,\n            community: handle,\n          }}\n        />\n      );\n    }\n  }\n}\n\nreturn (\n  <Container>\n    <div className=\"d-flex gap-1 justify-content-end w-100 mb-4\">\n      <button className=\"btn btn-light\" onClick={onCancel}>\n        Cancel\n      </button>\n      <SubmitBtn />\n    </div>\n\n    <ul className=\"nav nav-tabs\" id=\"editPreviewTabs\" role=\"tablist\">\n      <li className=\"nav-item\" role=\"presentation\">\n        <button\n          className=\"nav-link active\"\n          id=\"edit-tab\"\n          data-bs-toggle=\"tab\"\n          data-bs-target=\"#edit\"\n          type=\"button\"\n          role=\"tab\"\n          aria-controls=\"edit\"\n          aria-selected=\"true\"\n        >\n          Edit\n        </button>\n      </li>\n      <li className=\"nav-item\" role=\"presentation\">\n        <button\n          className=\"nav-link\"\n          id=\"preview-tab\"\n          data-bs-toggle=\"tab\"\n          data-bs-target=\"#preview\"\n          type=\"button\"\n          role=\"tab\"\n          aria-controls=\"preview\"\n          aria-selected=\"false\"\n        >\n          Preview\n        </button>\n      </li>\n    </ul>\n    <div className=\"tab-content\" id=\"editPreviewTabsContent\">\n      <div\n        className=\"tab-pane show active p-4\"\n        id=\"edit\"\n        role=\"tabpanel\"\n        aria-labelledby=\"edit-tab\"\n      >\n        <Widget\n          src=\"thomasguntenaar.near/widget/devhub.entity.addon.blogv2.editor.form\"\n          props={{\n            title,\n            setTitle,\n            subtitle,\n            setSubtitle,\n            options: selectOptions,\n            category,\n            setCategory,\n            description,\n            setDescription,\n            author,\n            setAuthor,\n            date,\n            setDate,\n            content,\n            setContent,\n          }}\n        />\n        {data.id ? (\n          <div\n            className={\n              \"d-flex align-items-center justify-content-start gap-3 mt-4\"\n            }\n          >\n            <Widget\n              src={\"thomasguntenaar.near/widget/devhub.components.molecule.Button\"}\n              props={{\n                classNames: { root: \"btn-danger\" },\n                disabled: !hasDataChanged(),\n                icon: {\n                  type: \"bootstrap_icon\",\n                  variant: \"bi-trash\",\n                },\n                label: \"Delete\",\n                onClick: () => onDelete(data.id),\n              }}\n            />\n          </div>\n        ) : null}\n      </div>\n      <div\n        className=\"tab-pane\"\n        id=\"preview\"\n        role=\"tabpanel\"\n        aria-labelledby=\"preview-tab\"\n        style={{ position: \"relative\" }}\n      >\n        <div style={{ position: \"absolute\", top: 10, right: 0, zIndex: 9999 }}>\n          <Widget\n            src=\"thomasguntenaar.near/widget/devhub.components.molecule.Switch\"\n            props={{\n              currentValue: previewMode,\n              key: \"previewMode\",\n              onChange: (e) => setPreviewMode(e.target.value),\n              options: [\n                { label: \"Card\", value: \"card\" },\n                { label: \"Page\", value: \"page\" },\n              ],\n\n              title: \"Preview mode selection\",\n            }}\n          />\n        </div>\n        <div className=\"w-100 h-100 p-4\">\n          <Preview />\n        </div>\n      </div>\n    </div>\n  </Container>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/thomasguntenaar.near/widget/devhub.entity.addon.blogv2.editor.content", "fact_widget_deployments_id": "faded04efb8d9217e22e06e21ee850e0", "inserted_timestamp": "2024-04-25T20:39:41.964Z", "modified_timestamp": "2024-04-25T20:39:41.964Z", "__row_index": 3}