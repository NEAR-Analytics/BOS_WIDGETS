{"tx_hash": "EXpZ4bgNC4P76o18LpAg8thutA4vhSKSBLx9YppUWFbB", "action_id_social": "2YjC7G8zSRadhzgjT3a92UR9yNRhaJHH17LEDMpDcv5k-0-widget", "block_id": 118960039, "block_timestamp": "2024-05-15T08:41:05.120Z", "signer_id": "thomasguntenaar.near", "widget_name": "devhub.entity.addon.blogv2.editor.content", "source_code": "const { Card } =\n  VM.require(\"thomasguntenaar.near/widget/devhub.entity.addon.blogv2.Card\") ||\n  (() => <></>);\nconst { Page } =\n  VM.require(\"thomasguntenaar.near/widget/devhub.entity.addon.blogv2.Page\") ||\n  (() => <></>);\n\nconst categories = [\n  {\n    label: \"Guide\",\n    value: \"guide\",\n  },\n  {\n    label: \"News\",\n    value: \"news\",\n  },\n  {\n    label: \"Reference\",\n    value: \"reference\",\n  },\n];\n\nconst selectOptions = useMemo(\n  () =>\n    categories.map((it) => ({\n      label: it.label,\n      value: it.value,\n    })),\n  [categories]\n);\n\nconst Banner = styled.div`\n  border-radius: var(--bs-border-radius-xl) !important;\n  height: 100%;\n\n  & > div :not(.btn) {\n    position: absolute;\n    display: none;\n    margin: 0 !important;\n    width: 0 !important;\n    height: 0 !important;\n  }\n\n  .btn {\n    padding: 0.5rem 0.75rem !important;\n    min-height: 32;\n    line-height: 1;\n\n    border: none;\n    border-radius: 50px;\n    --bs-btn-color: #ffffff;\n    --bs-btn-bg: #087990;\n    --bs-btn-border-color: #087990;\n    --bs-btn-hover-color: #ffffff;\n    --bs-btn-hover-bg: #055160;\n    --bs-btn-hover-border-color: #055160;\n    --bs-btn-focus-shadow-rgb: 49, 132, 253;\n    --bs-btn-active-color: #ffffff;\n    --bs-btn-active-bg: #055160;\n    --bs-btn-active-border-color: #055160;\n    --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n    opacity: 0.8;\n\n    &:hover {\n      opacity: 1;\n    }\n  }\n`;\n\nconst DropdownBtnContainer = styled.div`\n  font-size: 13px;\n  min-width: 150px;\n\n  .custom-select {\n    position: relative;\n  }\n\n  .select-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    border: 1px solid #ccc;\n    border-radius-top: 5px;\n    cursor: pointer;\n    background-color: #fff;\n    border-radius: 5px;\n  }\n\n  .no-border {\n    border: none !important;\n  }\n\n  .options-card {\n    position: absolute;\n    top: 100%;\n    right: 0;\n    width: 200%;\n    border: 1px solid #ccc;\n    background-color: #fff;\n    padding: 0.5rem;\n    z-index: 99;\n    font-size: 13px;\n    border-radius:0.375rem !important;\n  }\n\n  .left {\n    right: 0 !important;\n    left: auto !important;\n  }\n\n  @media screen and (max-width: 768px) {\n    .options-card {\n      right: 0 !important;\n      left: auto !important;\n    }\n  }\n\n  .option {\n    margin-block: 5px;\n    padding: 10px;\n    cursor: pointer;\n    border-bottom: 1px solid #f0f0f0;\n    transition: background-color 0.3s ease;\n    border-radius: 0.375rem !important;\n  }\n\n  .option:hover {\n    background-color: #f0f0f0; /* Custom hover effect color */\n  }\n\n  .option:last-child {\n    border-bottom: none;\n  }\n\n  .selected {\n    background-color: #f0f0f0;\n  }\n\n  .disabled {\n    background-color: #f4f4f4 !important;\n    cursor: not-allowed !important;\n    font-weight: 500;\n    color: #b3b3b3;\n  }\n\n  .disabled .circle {\n    opacity: 0.5;\n  }\n\n  .circle {\n    width: 8px;\n    height: 8px;\n    border-radius: 50%;\n  }\n\n  .grey {\n    background-color: #818181;\n  }\n\n  .green {\n    background-color: #04a46e;\n  }\n\n  a:hover {\n    text-decoration: none;\n  }\n\n}\n`;\n\nconst {\n  data,\n  handle,\n  onSubmit,\n  onCancel,\n  onDelete,\n  allBlogs: allBlogsOfThisInstance,\n} = props;\n\nconst allBlogKeys =\n  Social.keys(`${handle}.community.devhub.near/blog/*`, \"final\") || {};\n\nconst initialData = data;\n\nconst [initialBlogAmount, setInitialBlogAmount] = useState(\n  Object.keys(allBlogKeys[`${handle}.community.devhub.near`][\"blog\"] || {})\n    .length || 0\n);\n\n// Parse the date string to create a Date object\nconst publishedAtDate = new Date(initialData.publishedAt || new Date());\nconst year = publishedAtDate.getFullYear();\nconst month = (publishedAtDate.getMonth() + 1).toString().padStart(2, \"0\");\nconst day = publishedAtDate.getDate().toString().padStart(2, \"0\");\nconst initialFormattedDate = year + \"-\" + month + \"-\" + day;\n\nconst [content, setContent] = useState(initialData.content || \"\");\nconst [title, setTitle] = useState(initialData.title || \"\");\nconst [subtitle, setSubtitle] = useState(initialData.subtitle || \"\");\nconst [description, setDescription] = useState(initialData.description || \"\");\nconst [author, setAuthor] = useState(initialData.author || context.accountId);\nconst [previewMode, setPreviewMode] = useState(\"edit\"); // \"edit\" or \"card\" or \"page\"\nconst [date, setDate] = useState(initialFormattedDate || new Date());\nconst [category, setCategory] = useState(initialData.category || \"guide\");\nconst [disabledSubmitBtn, setDisabledSubmitBtn] = useState(false);\nconst [isDraftBtnOpen, setDraftBtnOpen] = useState(false);\nconst [selectedStatus, setSelectedStatus] = useState(\n  initialData.status || \"DRAFT\"\n);\n\n// Dont ask me again check when deleting\nconst [submittedBlogDeleted, setSubmittedBlogDeleted] = useState(null);\nuseEffect(() => {\n  const checkForDeletedBlogInSocialDB = () => {\n    const communityAccount = `${handle}.community.devhub.near`;\n    Near.asyncView(\"social.near\", \"get\", {\n      keys: [`${communityAccount}/blog/**`],\n      options: {\n        return_deleted: true,\n      },\n    }).then((result) => {\n      try {\n        if (\n          JSON.parse(result[communityAccount].blog[submittedBlogDeleted]) ===\n          null\n        ) {\n          // Blog is deleted\n          setSubmittedBlogDeleted(null);\n        }\n      } catch (e) {}\n      setTimeout(() => checkForDeletedBlogInSocialDB(), 1000);\n    });\n  };\n  if (submittedBlogDeleted) {\n    checkForDeletedBlogInSocialDB();\n  }\n}, [submittedBlogDeleted]);\n\n// Dont ask me again check when updating and creating blogs\nconst [submittedBlogData, setSubmittedBlogData] = useState(null);\nuseEffect(() => {\n  const checkForNewOrUpdatedBlogInSocialDB = () => {\n    const communityAccount = `${handle}.community.devhub.near`;\n    Near.asyncView(\"social.near\", \"get\", {\n      keys: [`${communityAccount}/blog/**`],\n    }).then((result) => {\n      try {\n        if (initialData.id) {\n          // Update\n          const updatedBlog =\n            result[communityAccount][\"blog\"][initialData.id].metadata;\n          updatedBlog.content =\n            result[communityAccount][\"blog\"][initialData.id][\"\"];\n\n          let theyMatch = true;\n          let keys = Object.keys(submittedBlogData);\n          for (const key of keys) {\n            // Get the full data of the new blog and compare it to socialDB\n            if (updatedBlog[key] !== submittedBlogData[key]) {\n              theyMatch = false;\n              break;\n            }\n          }\n          if (theyMatch) {\n            setSubmittedBlogData(null);\n          }\n        } else {\n          // Create\n          // TODO PR\n          console.log(\"initialBlogAmount + 1 === Object.keys(result).length\");\n          console.log(\n            initialBlogAmount,\n            initialBlogAmount + 1,\n            Object.keys(result[communityAccount][\"blog\"]).length\n          );\n          if (initialBlogAmount + 1 === Object.keys(result).length) {\n            setSubmittedBlogData(null);\n          }\n        }\n      } catch (e) {\n        console.log(\"Error in useEffect checkForNewOrUpdatedBlogInSocialDB\", e);\n      }\n      setTimeout(() => checkForNewOrUpdatedBlogInSocialDB(), 1000);\n    });\n  };\n  if (submittedBlogData) {\n    checkForNewOrUpdatedBlogInSocialDB();\n  }\n}, [submittedBlogData]);\n\nconst LoadingButtonSpinner = (\n  <span\n    class=\"submit-blog-loading-indicator spinner-border spinner-border-sm\"\n    role=\"status\"\n    aria-hidden=\"true\"\n  ></span>\n);\n\nconst SubmitBtn = () => {\n  const btnOptions = [\n    {\n      iconColor: \"grey\",\n      label: \"Save Draft\",\n      description:\n        \"The author can still edit the blog before sharing it with the community.\",\n      value: \"DRAFT\",\n    },\n    {\n      iconColor: \"green\",\n      label: \"Publish\",\n      description:\n        \"The blog will be shared with the community and can be viewed by everyone.\",\n      value: \"PUBLISH\",\n    },\n  ];\n\n  const handleOptionClick = (option) => {\n    setDraftBtnOpen(false);\n    setSelectedStatus(option.value);\n  };\n\n  const toggleDropdown = () => {\n    setDraftBtnOpen(!isDraftBtnOpen);\n  };\n\n  const handleSubmit = () => {\n    // Set the title for dont ask me again check\n    setSubmittedBlogData({\n      title,\n      subtitle,\n      description,\n      author,\n      date,\n      content,\n      category,\n      community: handle,\n      publishedAt,\n      status: selectedStatus,\n    });\n    handlePublish(selectedStatus);\n  };\n\n  const selectedOption = btnOptions.find((i) => i.value === selectedStatus);\n\n  return (\n    <DropdownBtnContainer>\n      <div className=\"custom-select\" tabIndex=\"0\">\n        <div\n          data-testid=\"parent-submit-blog-button\"\n          className={\n            \"select-header d-flex gap-1 align-items-center submit-draft-button \" +\n            (shouldBeDisabled() && \"disabled\")\n          }\n        >\n          <div\n            onClick={() => !shouldBeDisabled() && handleSubmit()}\n            className=\"p-2 d-flex gap-2 align-items-center \"\n            data-testid=\"submit-blog-button\"\n          >\n            {submittedBlogData ? (\n              LoadingButtonSpinner\n            ) : (\n              <div className={\"circle \" + selectedOption.iconColor}></div>\n            )}\n            <div className={`selected-option`}>{selectedOption.label}</div>\n          </div>\n          <div\n            className=\"h-100 p-2\"\n            style={{ borderLeft: \"1px solid #ccc\" }}\n            onClick={toggleDropdown}\n          >\n            <i\n              data-testid=\"toggle-dropdown\"\n              class={`bi bi-chevron-${isDraftBtnOpen ? \"up\" : \"down\"}`}\n            ></i>\n          </div>\n        </div>\n\n        {isDraftBtnOpen && (\n          <div className=\"options-card\">\n            {btnOptions.map((option) => (\n              <div\n                key={option.value}\n                className={`option ${\n                  selectedOption.value === option.value ? \"selected\" : \"\"\n                }`}\n                onClick={() => handleOptionClick(option)}\n                data-testid={\"submit-button-option-\" + option.value}\n              >\n                <div className={`d-flex gap-2 align-items-center`}>\n                  <div className={\"circle \" + option.iconColor}></div>\n                  <div className=\"fw-bold\">{option.label}</div>\n                </div>\n                <div className=\"text-muted text-xs\">{option.description}</div>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </DropdownBtnContainer>\n  );\n};\n\nconst Container = styled.div`\n  width: 100%;\n  margin: 0 auto;\n  text-align: left;\n`;\n\nconst shouldBeDisabled = () => {\n  if (data.id) {\n    // means it's an existing blog post\n    return !hasDataChanged() || hasEmptyFields() || submittedBlogData;\n  }\n\n  return hasEmptyFields() || submittedBlogData;\n};\n\nconst hasDataChanged = () => {\n  return (\n    content !== initialData.content ||\n    title !== initialData.title ||\n    subtitle !== initialData.subtitle ||\n    description !== initialData.description ||\n    author !== initialData.author ||\n    date !== initialFormattedDate ||\n    category !== initialData.category\n  );\n};\n\nconst hasEmptyFields = () => {\n  return (\n    content.trim() === \"\" ||\n    title.trim() === \"\" ||\n    subtitle.trim() === \"\" ||\n    description.trim() === \"\" ||\n    author.trim() === \"\" ||\n    date === \"NaN-NaN-NaN\" ||\n    category.trim() === \"\"\n  );\n};\n\nconst handlePublish = (status) => {\n  onSubmit &&\n    onSubmit(\n      {\n        id: data.id || undefined,\n        title,\n        subtitle,\n        description,\n        date,\n        content,\n        status,\n        author,\n        category,\n        community: handle,\n      },\n      data.id !== undefined\n    );\n};\n\nconst handleDelete = () => {\n  setSubmittedBlogDeleted(initialData.id);\n  onDelete(data.id);\n};\n\nfunction Preview() {\n  switch (previewMode) {\n    case \"card\": {\n      return (\n        <Card\n          data={{\n            title,\n            subtitle,\n            description,\n            publishedAt: date,\n            content,\n            author,\n            category,\n            community: handle,\n          }}\n        />\n      );\n    }\n    case \"page\": {\n      return (\n        <Page\n          data={{\n            title,\n            subtitle,\n            description,\n            publishedAt: date,\n            content,\n            author,\n            category,\n            community: handle,\n          }}\n        />\n      );\n    }\n  }\n}\n\nconst tabs = [\n  { name: \"Edit\", value: \"edit\" },\n  { name: \"Preview Card\", value: \"card\" },\n  { name: \"Preview Page\", value: \"page\" },\n];\n\nfunction classNames() {\n  const classes = Array.from(arguments);\n  return classes.filter(Boolean).join(\" \");\n}\n\nreturn (\n  <Container>\n    <div className=\"flex gap-1 justify-between w-100 mb-4\">\n      <div>\n        <div className=\"sm:hidden\">\n          <label htmlFor=\"tabs\" className=\"sr-only\">\n            Select a tab\n          </label>\n          <select\n            id=\"tabs\"\n            name=\"tabs\"\n            className=\"block w-full rounded-md border-gray-300 focus:border-indigo-500 focus:ring-indigo-500\"\n            defaultValue={tabs.find((tab) => tab.value === previewMode).name}\n          >\n            {tabs.map((tab) => (\n              <option key={tab.name} onClick={() => setPreviewMode(tab.value)}>\n                {tab.name}\n              </option>\n            ))}\n          </select>\n        </div>\n        <div className=\"hidden sm:block\">\n          <div className=\"-mb-px flex gap-1\" aria-label=\"Tabs\">\n            {tabs.map((tab) => (\n              <a\n                key={tab.name}\n                onClick={() => setPreviewMode(tab.value)}\n                className={`rounded-md px-3.5 py-2.5 text-sm cursor-pointer font-semibold text-devhub-green hover:text-white shadow-sm hover:bg-indigo-100 ${\n                  tab.value === previewMode\n                    ? \" bg-devhub-green text-white\"\n                    : \" bg-devhub-green-light text-devhub-green\"\n                }`}\n                aria-current={tab.value === previewMode ? \"page\" : undefined}\n              >\n                {tab.name}\n              </a>\n            ))}\n          </div>\n        </div>\n      </div>\n      <div className=\"flex gap-1\">\n        <button\n          className=\"rounded-md bg-white px-2.5 py-1.5 text-sm h-9 font-semibold text-gray-900 border ring-1 ring-inset ring-gray-300 hover:bg-gray-600 hover:border-1\"\n          onClick={onCancel}\n        >\n          Cancel\n        </button>\n        <SubmitBtn />\n      </div>\n    </div>\n\n    <div>\n      {previewMode === \"edit\" && (\n        <div className=\"tab-pane show active p-4\" id=\"edit\">\n          <Widget\n            src=\"thomasguntenaar.near/widget/devhub.entity.addon.blogv2.editor.form\"\n            props={{\n              title,\n              setTitle,\n              subtitle,\n              setSubtitle,\n              options: selectOptions,\n              category,\n              setCategory,\n              description,\n              setDescription,\n              author,\n              setAuthor,\n              date,\n              setDate,\n              content,\n              setContent,\n            }}\n          />\n          {/* Show delete button */}\n          {data.id ? (\n            <div\n              className={\n                \"d-flex align-items-center justify-content-start gap-3 mt-4\"\n              }\n            >\n              <Widget\n                src={\"thomasguntenaar.near/widget/devhub.components.molecule.Button\"}\n                props={{\n                  classNames: { root: \"btn-danger\" },\n                  icon: {\n                    type: \"bootstrap_icon\",\n                    variant: \"bi-trash\",\n                  },\n                  label: \"Delete\",\n                  testId: \"delete-blog-button\",\n                  disabled: submittedBlogDeleted,\n                  loading: submittedBlogDeleted,\n                  onClick: handleDelete,\n                }}\n              />\n            </div>\n          ) : null}\n        </div>\n      )}\n      {(previewMode === \"page\" || previewMode === \"card\") && (\n        <div\n          className=\"w-100 h-100 p-4\"\n          id=\"preview\"\n          style={{ position: \"relative\" }}\n        >\n          <Preview />\n        </div>\n      )}\n    </div>\n  </Container>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/thomasguntenaar.near/widget/devhub.entity.addon.blogv2.editor.content", "fact_widget_deployments_id": "d15293925d037e214983e1f499b360a7", "inserted_timestamp": "2024-05-15T10:50:02.030Z", "modified_timestamp": "2024-05-15T10:50:02.030Z", "__row_index": 7}