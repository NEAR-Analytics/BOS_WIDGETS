{"tx_hash": "2coZS3WGKQ1DBBmR3DtprmjUbTkkNqm1KAP1Wz6p4adf", "action_id_social": "C3GiYEr515LjvQ4jM6mofXyxCDtFEauQfBeNNCFHKevD-0-widget", "block_id": 100559422, "block_timestamp": "2023-09-07T02:15:16.117Z", "signer_id": "thomasguntenaar.near", "widget_name": "gigs-board.entity.workspace.kanban-view", "source_code": "/* INCLUDE: \"common.jsx\" */\nconst nearDevGovGigsContractAccountId =\n  props.nearDevGovGigsContractAccountId ||\n  (context.widgetSrc ?? \"devgovgigs.near\").split(\"/\", 1)[0];\n\nconst nearDevGovGigsWidgetsAccountId =\n  props.nearDevGovGigsWidgetsAccountId ||\n  (context.widgetSrc ?? \"devgovgigs.near\").split(\"/\", 1)[0];\n\nfunction widget(widgetName, widgetProps, key) {\n  widgetProps = {\n    ...widgetProps,\n    nearDevGovGigsContractAccountId: props.nearDevGovGigsContractAccountId,\n    nearDevGovGigsWidgetsAccountId: props.nearDevGovGigsWidgetsAccountId,\n    referral: props.referral,\n  };\n\n  return (\n    <Widget\n      src={`${nearDevGovGigsWidgetsAccountId}/widget/gigs-board.${widgetName}`}\n      props={widgetProps}\n      key={key}\n    />\n  );\n}\n\nfunction href(widgetName, linkProps) {\n  linkProps = { ...linkProps };\n\n  if (props.nearDevGovGigsContractAccountId) {\n    linkProps.nearDevGovGigsContractAccountId =\n      props.nearDevGovGigsContractAccountId;\n  }\n\n  if (props.nearDevGovGigsWidgetsAccountId) {\n    linkProps.nearDevGovGigsWidgetsAccountId =\n      props.nearDevGovGigsWidgetsAccountId;\n  }\n\n  if (props.referral) {\n    linkProps.referral = props.referral;\n  }\n\n  const linkPropsQuery = Object.entries(linkProps)\n    .filter(([_key, nullable]) => (nullable ?? null) !== null)\n    .map(([key, value]) => `${key}=${value}`)\n    .join(\"&\");\n\n  return `/#/${nearDevGovGigsWidgetsAccountId}/widget/gigs-board.pages.${widgetName}${\n    linkPropsQuery ? \"?\" : \"\"\n  }${linkPropsQuery}`;\n}\n/* END_INCLUDE: \"common.jsx\" */\n/* INCLUDE: \"core/lib/gui/attractable\" */\nconst AttractableDiv = styled.div`\n  box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075) !important;\n  transition: box-shadow 0.6s;\n\n  &:hover {\n    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15) !important;\n  }\n`;\n\nconst AttractableLink = styled.a`\n  box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075) !important;\n  transition: box-shadow 0.6s;\n\n  &:hover {\n    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15) !important;\n  }\n`;\n\nconst AttractableImage = styled.img`\n  box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075) !important;\n  transition: box-shadow 0.6s;\n\n  &:hover {\n    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15) !important;\n  }\n`;\n/* END_INCLUDE: \"core/lib/gui/attractable\" */\n/* INCLUDE: \"core/adapter/dev-hub\" */\nconst devHubAccountId =\n  props.nearDevGovGigsContractAccountId ||\n  (context.widgetSrc ?? \"devgovgigs.near\").split(\"/\", 1)[0];\n\nconst DevHub = {\n  get_root_members: () =>\n    Near.view(devHubAccountId, \"get_root_members\") ?? null,\n\n  has_moderator: ({ account_id }) =>\n    Near.view(devHubAccountId, \"has_moderator\", { account_id }) ?? null,\n\n  create_community: ({ inputs }) =>\n    Near.call(devHubAccountId, \"create_community\", { inputs }),\n\n  get_community: ({ handle }) =>\n    Near.view(devHubAccountId, \"get_community\", { handle }) ?? null,\n\n  get_account_community_permissions: ({ account_id, community_handle }) =>\n    Near.view(devHubAccountId, \"get_account_community_permissions\", {\n      account_id,\n      community_handle,\n    }) ?? null,\n\n  update_community: ({ handle, community }) =>\n    Near.call(devHubAccountId, \"update_community\", { handle, community }),\n\n  delete_community: ({ handle }) =>\n    Near.call(devHubAccountId, \"delete_community\", { handle }),\n\n  update_community_board: ({ handle, board }) =>\n    Near.call(devHubAccountId, \"update_community_board\", { handle, board }),\n\n  update_community_github: ({ handle, github }) =>\n    Near.call(devHubAccountId, \"update_community_github\", { handle, github }),\n\n  get_access_control_info: () =>\n    Near.view(devHubAccountId, \"get_access_control_info\") ?? null,\n\n  get_all_authors: () => Near.view(devHubAccountId, \"get_all_authors\") ?? null,\n\n  get_all_communities_metadata: () =>\n    Near.view(devHubAccountId, \"get_all_communities_metadata\") ?? null,\n\n  get_all_labels: () => Near.view(devHubAccountId, \"get_all_labels\") ?? null,\n\n  get_post: ({ post_id }) =>\n    Near.view(devHubAccountId, \"get_post\", { post_id }) ?? null,\n\n  get_posts_by_author: ({ author }) =>\n    Near.view(devHubAccountId, \"get_posts_by_author\", { author }) ?? null,\n\n  get_posts_by_label: ({ label }) =>\n    Near.view(nearDevGovGigsContractAccountId, \"get_posts_by_label\", {\n      label,\n    }) ?? null,\n\n  useQuery: (name, params) => {\n    const initialState = { data: null, error: null, isLoading: true };\n\n    const cacheState = useCache(\n      () =>\n        Near.asyncView(devHubAccountId, [\"get\", name].join(\"_\"), params ?? {})\n          .then((response) => ({\n            ...initialState,\n            data: response ?? null,\n            isLoading: false,\n          }))\n          .catch((error) => ({\n            ...initialState,\n            error: props?.error ?? error,\n            isLoading: false,\n          })),\n\n      JSON.stringify({ name, params }),\n      { subscribe: true }\n    );\n\n    return cacheState === null ? initialState : cacheState;\n  },\n};\n/* END_INCLUDE: \"core/adapter/dev-hub\" */\n\nconst postTagsToIdSet = (tags) => {\n  return new Set(\n    tags\n      .map(\n        (tag) =>\n          Near.view(nearDevGovGigsContractAccountId, \"get_posts_by_label\", {\n            label: tag,\n          }) ?? []\n      )\n      .flat(1)\n  );\n};\n\nconst configToColumns = ({ columns, tags }) =>\n  Object.entries(columns).reduce((registry, [columnId, column]) => {\n    const postIds = (\n      Near.view(nearDevGovGigsContractAccountId, \"get_posts_by_label\", {\n        label: column.tag,\n      }) ?? []\n    ).reverse();\n\n    return {\n      ...registry,\n\n      [columnId]: {\n        ...column,\n\n        postIds:\n          tags.required.length > 0\n            ? postIds.filter(\n                (postId) =>\n                  postTagsToIdSet(tags.required).has(postId) &&\n                  !postTagsToIdSet(tags.excluded).has(postId)\n              )\n            : postIds,\n      },\n    };\n  }, {});\n\nconst KanbanView = ({\n  config,\n  metadata,\n  isUnderConfiguration,\n  link,\n  onConfigureClick,\n  onDeleteClick,\n  permissions,\n}) => {\n  const columns = configToColumns(config);\n\n  return (\n    <div className=\"d-flex flex-column gap-4\">\n      <div\n        className={\"d-flex justify-content-end gap-3 p-3 rounded-4\"}\n        style={{ backgroundColor: \"#181818\" }}\n      >\n        {typeof link === \"string\" && link.length > 0 ? (\n          <>\n            {false && // Disabled until workspaces are introduced\n              widget(\"components.molecule.button\", {\n                classNames: { root: \"btn-sm btn-outline-secondary\" },\n                href: link,\n                icon: { kind: \"bootstrap-icon\", variant: \"box-arrow-up-right\" },\n                label: \"Open in new tab\",\n                rel: \"noreferrer\",\n                role: \"button\",\n                target: \"_blank\",\n                type: \"link\",\n              })}\n\n            {widget(\"components.molecule.button\", {\n              classNames: {\n                root: \"btn-sm btn-outline-secondary me-auto text-white\",\n              },\n\n              icon: { kind: \"bootstrap-icon\", variant: \"bi-clipboard-fill\" },\n              label: \"Copy link\",\n              onClick: () => clipboard.writeText(link),\n            })}\n          </>\n        ) : null}\n\n        {permissions.can_configure && (\n          <>\n            {widget(\"components.molecule.button\", {\n              classNames: { root: \"btn-sm btn-primary\" },\n\n              icon: {\n                kind: \"bootstrap-icon\",\n                variant: \"bi-gear-wide-connected\",\n              },\n\n              isHidden:\n                typeof onConfigureClick !== \"function\" || isUnderConfiguration,\n\n              label: \"Configure\",\n              onClick: onConfigureClick,\n            })}\n\n            {widget(\"components.molecule.button\", {\n              classNames: {\n                root: \"btn-sm btn-outline-danger shadow-none border-0\",\n              },\n\n              icon: { kind: \"bootstrap-icon\", variant: \"bi-recycle\" },\n              isHidden: \"Disabled for MVP\", // typeof onDeleteClick !== \"function\",\n              label: \"Delete\",\n              onClick: onDeleteClick,\n            })}\n          </>\n        )}\n      </div>\n\n      <div className=\"d-flex flex-column align-items-center gap-2 pt-4\">\n        <h5 className=\"h5 d-inline-flex gap-2 m-0\">\n          <i className=\"bi bi-kanban-fill\" />\n\n          <span>\n            {(metadata.title?.length ?? 0) > 0\n              ? metadata.title\n              : \"Untitled view\"}\n          </span>\n        </h5>\n\n        <p className=\"m-0 py-1 text-secondary text-center\">\n          {(metadata.description?.length ?? 0) > 0\n            ? metadata.description\n            : \"No description provided\"}\n        </p>\n      </div>\n\n      <div className=\"d-flex gap-3\" style={{ overflowX: \"auto\" }}>\n        {Object.keys(columns).length > 0 ? (\n          Object.values(columns).map((column) => (\n            <div className=\"col-3\" key={column.id}>\n              <div className=\"card rounded-4\">\n                <div\n                  className={[\n                    \"card-body d-flex flex-column gap-3 p-2\",\n                    \"border border-2 border-secondary rounded-4\",\n                  ].join(\" \")}\n                >\n                  <span className=\"d-flex flex-column py-1\">\n                    <h6 className=\"card-title h6 d-flex align-items-center gap-2 m-0\">\n                      {column.title}\n\n                      <span className=\"badge rounded-pill bg-secondary\">\n                        {column.postIds.length}\n                      </span>\n                    </h6>\n\n                    <p class=\"text-secondary m-0\">{column.description}</p>\n                  </span>\n\n                  <div class=\"d-flex flex-column gap-2\">\n                    {column.postIds.map((postId) =>\n                      widget(\n                        [\"entity.workspace\", config.ticket_kind].join(\".\"),\n                        { id: postId },\n                        postId\n                      )\n                    )}\n                  </div>\n                </div>\n              </div>\n            </div>\n          ))\n        ) : (\n          <div\n            className={[\n              \"d-flex align-items-center justify-content-center\",\n              \"w-100 text-black-50 opacity-50\",\n            ].join(\" \")}\n            style={{ height: 384 }}\n          >\n            No columns were created so far.\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nreturn KanbanView(props);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/thomasguntenaar.near/widget/gigs-board.entity.workspace.kanban-view", "fact_widget_deployments_id": "691fca15db250f6d42786d6a88aa1ea1", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 2}