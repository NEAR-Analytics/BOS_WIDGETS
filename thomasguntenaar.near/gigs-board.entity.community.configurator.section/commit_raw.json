{"tx_hash": "GgENKQEfHGBHkbjSeXZo6rZZDU7jhdjDi14xNnnWZA5G", "action_id_social": "G9wgmjf2uNVXHSLauJgZtwHxgQGrdearkmFNLhtroagp-0-widget", "block_id": 103209720, "block_timestamp": "2023-10-12T14:35:00.142Z", "signer_id": "thomasguntenaar.near", "widget_name": "gigs-board.entity.community.configurator.section", "source_code": "/* INCLUDE: \"common.jsx\" */\nconst nearDevGovGigsContractAccountId =\n  props.nearDevGovGigsContractAccountId ||\n  (context.widgetSrc ?? \"devgovgigs.near\").split(\"/\", 1)[0];\n\nconst nearDevGovGigsWidgetsAccountId =\n  props.nearDevGovGigsWidgetsAccountId ||\n  (context.widgetSrc ?? \"devgovgigs.near\").split(\"/\", 1)[0];\n\nfunction widget(widgetName, widgetProps, key) {\n  widgetProps = {\n    ...widgetProps,\n    nearDevGovGigsContractAccountId: props.nearDevGovGigsContractAccountId,\n    nearDevGovGigsWidgetsAccountId: props.nearDevGovGigsWidgetsAccountId,\n    referral: props.referral,\n  };\n\n  return (\n    <Widget\n      src={`${nearDevGovGigsWidgetsAccountId}/widget/gigs-board.${widgetName}`}\n      props={widgetProps}\n      key={key}\n    />\n  );\n}\n\nfunction href(widgetName, linkProps) {\n  linkProps = { ...linkProps };\n\n  if (props.nearDevGovGigsContractAccountId) {\n    linkProps.nearDevGovGigsContractAccountId =\n      props.nearDevGovGigsContractAccountId;\n  }\n\n  if (props.nearDevGovGigsWidgetsAccountId) {\n    linkProps.nearDevGovGigsWidgetsAccountId =\n      props.nearDevGovGigsWidgetsAccountId;\n  }\n\n  if (props.referral) {\n    linkProps.referral = props.referral;\n  }\n\n  const linkPropsQuery = Object.entries(linkProps)\n    .filter(([_key, nullable]) => (nullable ?? null) !== null)\n    .map(([key, value]) => `${key}=${value}`)\n    .join(\"&\");\n\n  return `/#/${nearDevGovGigsWidgetsAccountId}/widget/gigs-board.pages.${widgetName}${\n    linkPropsQuery ? \"?\" : \"\"\n  }${linkPropsQuery}`;\n}\n/* END_INCLUDE: \"common.jsx\" */\n\nconst ConfigurationSection = ({\n  heading,\n  headerSlotRight,\n  isEditActive,\n  hasPermissionToConfgure,\n  configurator,\n}) => {\n  State.init({\n    isEditActive: isEditActive ?? false,\n  });\n\n  const toggleEditActive = (forcedState) =>\n    State.update({\n      isEditActive: forcedState ?? !state.isEditActive,\n    });\n\n  return widget(\"components.molecule.tile\", {\n    heading,\n    fullWidth: true,\n    headerSlotRight:\n      headerSlotRight ??\n      (hasPermissionToConfgure &&\n        widget(\"components.molecule.button\", {\n          classNames: { root: \"btn-sm btn-secondary\" },\n          icon: {\n            kind: \"bootstrap-icon\",\n            variant: state.isEditActive ? \"bi-x-circle\" : \"bi-pen-fill\",\n          },\n          label: state.isEditActive ? \"Cancel\" : \"Edit\",\n          onClick: () => toggleEditActive(),\n        })),\n    children: hasPermissionToConfgure ? ( // TODO: I feel there is a better way to do this...\n      <div className=\"flex-grow-1 d-flex flex-column\">\n        {configurator && configurator({ isEditActive: state.isEditActive })}\n      </div>\n    ) : null,\n  });\n};\n\nreturn ConfigurationSection(props);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/thomasguntenaar.near/widget/gigs-board.entity.community.configurator.section", "fact_widget_deployments_id": "84f36a519927d33c5ee3eb071a272ca1", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}