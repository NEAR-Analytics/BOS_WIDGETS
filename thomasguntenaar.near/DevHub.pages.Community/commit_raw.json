{"tx_hash": "GgENKQEfHGBHkbjSeXZo6rZZDU7jhdjDi14xNnnWZA5G", "action_id_social": "G9wgmjf2uNVXHSLauJgZtwHxgQGrdearkmFNLhtroagp-0-widget", "block_id": 103209720, "block_timestamp": "2023-10-12T14:35:00.142Z", "signer_id": "thomasguntenaar.near", "widget_name": "DevHub.pages.Community", "source_code": "const {\n  useQuery,\n  getAccountCommunityPermissions,\n  getAvailableAddons,\n  getCommunityAddonConfigs,\n} = VM.require(\"devhub.efiz.testnet/widget/DevHub.modules.contract-sdk\");\n\nif (\n  !useQuery ||\n  !getAccountCommunityPermissions ||\n  !getAvailableAddons ||\n  !getCommunityAddonConfigs\n) {\n  return <p>Loading modules...</p>;\n}\n\nconst Button = styled.button`\n  height: 40px;\n  font-size: 14px;\n  border-color: #e3e3e0;\n  background-color: #ffffff;\n`;\n\nconst Banner = styled.div`\n  max-width: 100%;\n  min-height: 240px;\n  height: 240px;\n`;\n\nconst CenteredMessage = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: ${(p) => p.height ?? \"100%\"};\n`;\n\nconst NavUnderline = styled.ul`\n  border-bottom: 1px #eceef0 solid;\n  cursor: pointer;\n  a {\n    color: #687076;\n    text-decoration: none;\n  }\n\n  a.active {\n    font-weight: bold;\n    color: #0c7283;\n    border-bottom: 4px solid #0c7283;\n  }\n`;\n\nconst { handle, tab } = props;\n\nif (!tab) {\n  tab = \"Activity\";\n}\n\nconst community = useQuery(\"community\", { handle });\nconst permissions = getAccountCommunityPermissions({\n  account_id: context.accountId,\n  community_handle: handle,\n}) || {\n  can_configure: false,\n  can_delete: false,\n};\n\nif (!community.data) {\n  return (\n    <CenteredMessage height={\"384px\"}>\n      <h2>{`Community with handle \"${handle}\" not found.`}</h2>\n    </CenteredMessage>\n  );\n} else if (community.isLoading) {\n  return (\n    <CenteredMessage height={\"384px\"}>\n      <h2>Loading...</h2>\n    </CenteredMessage>\n  );\n}\n\ncommunity = community.data;\n\nconst [isLinkCopied, setLinkCopied] = useState(false);\n\nconst availableAddons = getAvailableAddons() || [];\nconst communityAddonConfigs = getCommunityAddonConfigs({ handle }) || [];\n\nconst tabs = [\n  {\n    iconClass: \"bi bi-house-door\",\n    viewer: \"devgovgigs.near/widget/gigs-board.pages.community.activity\",\n    title: \"Activity\",\n  },\n  ...(communityAddonConfigs || []).map((addon) => ({\n    title: addon.name,\n    route: availableAddons.find((it) => it.id === addon.config_id).viewer,\n    iconClass: addon.icon,\n    params: {\n      viewer: availableAddons.find((it) => it.id === addon.config_id).viewer,\n      data: addon.parameters || \"\", // @elliotBraem not sure which will work better I guess this is needed for the wiki data but we can also add another data object inside the addon's parameters\n      ...JSON.parse(addon.parameters), // this seems to work witht the wiki for now\n    },\n  })),\n];\n\n// var foundAddOn = (config_id) =>\n//   communityAddonConfigs?.some((config) => config.config_id === config_id) ||\n//   false;\n// console.log(\n//   \"!community?.github || foundAddOn('github')\",\n//   !community?.github,\n//   foundAddOn(\"github\")\n// );\n// const tabs = [\n//   {\n//     defaultActive: true,\n//     iconClass: \"bi bi-house-door\",\n//     route: \"community.activity\",\n//     title: \"Activity\",\n//   },\n\n//   ...(!community?.features.wiki\n//     ? []\n//     : [community?.wiki1, community?.wiki2]\n//         .filter((maybeWikiPage) => maybeWikiPage ?? false)\n//         .map(({ name }, idx) => ({\n//           params: { id: idx + 1 },\n//           route: \"community.wiki\",\n//           title: name,\n//         }))),\n\n//   {\n//     iconClass: \"bi bi-people-fill\",\n//     route: \"community.teams\",\n//     title: \"Teams\",\n//   },\n\n//   ...(!community?.features.board || foundAddOn(\"kanban\")\n//     ? []\n//     : [\n//         {\n//           iconClass: \"bi bi-kanban-fill\",\n//           route: \"community.board\",\n//           title: \"Board\",\n//         },\n//       ]),\n\n//   ...(!community?.github || foundAddOn(\"github\")\n//     ? []\n//     : [\n//         {\n//           iconClass: \"bi bi-github\",\n//           route: \"community.github\",\n//           title: \"GitHub\",\n//         },\n//       ]),\n\n//   ...(!community?.features.telegram ||\n//   (community?.telegram_handle.length ?? 0) === 0 ||\n//   foundAddOn(\"telegram\")\n//     ? []\n//     : [\n//         {\n//           iconClass: \"bi bi-telegram\",\n//           route: \"community.telegram\",\n//           title: \"Telegram\",\n//         },\n//       ]),\n\n//   ...(communityAddonConfigs || []).map((addon) => ({\n//     title: addon.name,\n//     route: availableAddons.find((it) => it.id === addon.config_id).viewer,\n//     iconClass: addon.icon,\n//     params: {\n//       viewer: availableAddons.find((it) => it.id === addon.config_id).viewer,\n//       data: addon.parameters || \"\", // @elliotBraem not sure which will work better I guess this is needed for the wiki data but we can also add another data object inside the addon's parameters\n//       ...JSON.parse(addon.parameters), // this seems to work witht the wiki for now\n//     },\n//   })),\n// ];\n\nconst onShareClick = () =>\n  clipboard\n    .writeText(\n      `https://near.org/devgovgigs.near/widget/DevHub.App?page=community?handle=${handle}`\n    ) // TODO: how should this be determined?\n    .then(setLinkCopied(true));\n\nreturn (\n  <div className=\"d-flex flex-column gap-3 bg-white\">\n    <Banner\n      className=\"object-fit-cover\"\n      style={{\n        background: `center / cover no-repeat url(${community.banner_url})`,\n      }}\n    />\n\n    <div className=\"container d-flex flex-wrap justify-content-between gap-4\">\n      <div className=\"d-flex align-items-end\">\n        <div className=\"position-relative\">\n          <div style={{ width: 150, height: 100 }}>\n            <img\n              alt=\"Loading logo...\"\n              className=\"border border-3 border-white rounded-circle shadow position-absolute\"\n              width=\"150\"\n              height=\"150\"\n              src={community.logo_url}\n              style={{ top: -50 }}\n            />\n          </div>\n        </div>\n\n        <div className=\"d-flex flex-column ps-3 pt-3 pb-2\">\n          <span className=\"h1 text-nowrap\">{community.name}</span>\n          <span className=\"text-secondary\">{community.description}</span>\n        </div>\n      </div>\n\n      <div className=\"d-flex align-items-end gap-3 ms-auto\">\n        <Widget\n          src=\"devgovgigs.near/widget/gigs-board.components.molecule.button\"\n          props={{\n            classNames: { root: \"btn-outline-light text-dark\" },\n            href: `https://near.org/devgovgigs.near/widget/DevHub.App?page=community?handle=${handle}`,\n            icon: { type: \"bootstrap_icon\", variant: \"bi-gear-wide-connected\" },\n            isHidden: !permissions.can_configure,\n            label: \"Configure community\",\n            type: \"link\",\n          }}\n        />\n\n        <Widget\n          src=\"devgovgigs.near/widget/gigs-board.components.molecule.button\"\n          props={{\n            classNames: { root: \"btn-outline-light text-dark\" },\n\n            icon: {\n              type: \"bootstrap_icon\",\n              variant: state.isLinkCopied ? \"bi-check\" : \"bi-link-45deg\",\n            },\n\n            label: \"Share\",\n            onClick: onShareClick,\n            onMouseLeave: () => setLinkCopied(false),\n            title: \"Copy link to clipboard\",\n          }}\n        />\n      </div>\n    </div>\n\n    <NavUnderline className=\"nav\">\n      {tabs.map(({ defaultActive, params, route, title }) =>\n        title ? (\n          <li className=\"nav-item\" key={title}>\n            <a\n              aria-current={defaultActive && \"page\"}\n              className={[\n                \"d-inline-flex gap-2\",\n                tab === title ? \"nav-link active\" : \"nav-link\",\n              ].join(\" \")}\n              // href={href(route, { handle, ...(params ?? {}) })}\n            >\n              <span>{title}</span>\n            </a>\n          </li>\n        ) : null\n      )}\n    </NavUnderline>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/thomasguntenaar.near/widget/DevHub.pages.Community", "fact_widget_deployments_id": "5bfb735ed868c73f4eda77490f564b57", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}