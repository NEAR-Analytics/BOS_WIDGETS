{"tx_hash": "AN81kzeiqRGR6F2VdS29j3uL7BBtJMXza56FB7SxZS81", "action_id_social": "2ytiTg8Z8Te6dbDZTNSvQyN75Y4N2ckVyA9dnBvuVjGY-0-widget", "block_id": 112256365, "block_timestamp": "2024-02-06T20:06:32.109Z", "signer_id": "thomasguntenaar.near", "widget_name": "devhub.components.organism.Feed", "source_code": "const { Feed } = VM.require(\"devs.near/widget/Feed\");\nFeed = Feed || (() => <></>);\n\nconst filteredAccountIds = props.filteredAccountIds ?? [];\nconst [showCard, setShowCard] = useState(false);\n\nconst GRAPHQL_ENDPOINT =\n  props.GRAPHQL_ENDPOINT ?? \"https://near-queryapi.api.pagoda.co\";\n\nlet lastPostSocialApi = Social.index(\"post\", \"main\", {\n  limit: 1,\n  order: \"desc\",\n});\n\nif (lastPostSocialApi == null) {\n  return \"Loading...\";\n}\n\nState.init({\n  // If QueryAPI Feed is lagging behind Social API, fallback to old widget.\n  shouldFallback: false,\n});\n\nfunction fetchGraphQL(operationsDoc, operationName, variables) {\n  return asyncFetch(`${GRAPHQL_ENDPOINT}/v1/graphql`, {\n    method: \"POST\",\n    headers: { \"x-hasura-role\": \"dataplatform_near\" },\n    body: JSON.stringify({\n      query: operationsDoc,\n      variables: variables,\n      operationName: operationName,\n    }),\n  });\n}\n\nconst lastPostQuery = `\nquery IndexerQuery {\n  dataplatform_near_social_feed_posts( limit: 1, order_by: { block_height: desc }) {\n      block_height\n  }\n}\n`;\n\nfetchGraphQL(lastPostQuery, \"IndexerQuery\", {})\n  .then((feedIndexerResponse) => {\n    if (\n      feedIndexerResponse &&\n      feedIndexerResponse.body.data.dataplatform_near_social_feed_posts.length >\n        0\n    ) {\n      const nearSocialBlockHeight = lastPostSocialApi[0].blockHeight;\n      const feedIndexerBlockHeight =\n        feedIndexerResponse.body.data.dataplatform_near_social_feed_posts[0]\n          .block_height;\n\n      const lag = nearSocialBlockHeight - feedIndexerBlockHeight;\n      let shouldFallback = lag > 2 || !feedIndexerBlockHeight;\n      if (shouldFallback === true) {\n        console.log(\n          \"Falling back to Social index feed. Block difference is: \",\n          nearSocialBlockHeight - feedIndexerBlockHeight\n        );\n        State.update({ shouldFallback });\n      }\n    } else {\n      console.log(\n        \"Falling back to Social index feed. No QueryApi data received.\"\n      );\n      State.update({ shouldFallback: true });\n    }\n  })\n  .catch((error) => {\n    console.log(\n      \"Error while fetching QueryApi feed (falling back to index feed): \",\n      error\n    );\n    State.update({ shouldFallback: true });\n  });\n\nreturn (\n  // display card only when a post exists\n  <div className={showCard && \"card p-4\"}>\n    {state.shouldFallback ? (\n      <Feed\n        index={[\n          {\n            action: props.action ? props.action : \"post\",\n            key: \"main\",\n            options: {\n              limit: 10,\n              order: \"desc\",\n              accountId: filteredAccountIds,\n            },\n            cacheOptions: {\n              ignoreCache: true,\n            },\n          },\n        ]}\n        Item={(item) => {\n          if (!showCard) {\n            setShowCard(true);\n          }\n          return (\n            <Widget\n              src=\"near/widget/v1.Posts.Post\"\n              loading={<div className=\"w-100\" style={{ height: \"200px\" }} />}\n              props={{\n                accountId: item.accountId,\n                blockHeight: item.blockHeight,\n                filteredAccountIds: filteredAccountIds,\n              }}\n            />\n          );\n        }}\n      />\n    ) : (\n      <Widget\n        src={`thomasguntenaar.near/widget/devhub.components.organism.Feed.NearQueryApi`}\n        props={{\n          GRAPHQL_ENDPOINT,\n          showFlagAccountFeature: true,\n          filteredAccountIds: filteredAccountIds,\n          setShowCard: setShowCard,\n        }}\n      />\n    )}\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/thomasguntenaar.near/widget/devhub.components.organism.Feed", "fact_widget_deployments_id": "27471ddd79e43c4b648cdf5a3cabc81a", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 38}