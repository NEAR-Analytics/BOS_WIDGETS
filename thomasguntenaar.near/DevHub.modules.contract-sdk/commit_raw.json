{"tx_hash": "GgENKQEfHGBHkbjSeXZo6rZZDU7jhdjDi14xNnnWZA5G", "action_id_social": "G9wgmjf2uNVXHSLauJgZtwHxgQGrdearkmFNLhtroagp-0-widget", "block_id": 103209720, "block_timestamp": "2023-10-12T14:35:00.142Z", "signer_id": "thomasguntenaar.near", "widget_name": "DevHub.modules.contract-sdk", "source_code": "const devHubAccountId =\n  props.nearDevGovGigsContractAccountId ||\n  (context.widgetSrc ?? \"devgovgigs.near\").split(\"/\", 1)[0];\n\nfunction getRootMembers() {\n  return Near.view(devHubAccountId, \"get_root_members\") ?? null;\n}\n\nfunction hasModerator({ account_id }) {\n  return Near.view(devHubAccountId, \"has_moderator\", { account_id }) ?? null;\n}\n\nfunction createCommunity({ inputs }) {\n  return Near.call(devHubAccountId, \"create_community\", { inputs });\n}\n\nfunction getCommunity({ handle }) {\n  return Near.view(devHubAccountId, \"get_community\", { handle }) ?? null;\n}\n\nfunction getAccountCommunityPermissions({ account_id, community_handle }) {\n  return (\n    Near.view(devHubAccountId, \"get_account_community_permissions\", {\n      account_id,\n      community_handle,\n    }) ?? null\n  );\n}\n\nfunction updateCommunity({ handle, community }) {\n  return Near.call(devHubAccountId, \"update_community\", { handle, community });\n}\n\nfunction deleteCommunity({ handle }) {\n  return Near.call(devHubAccountId, \"delete_community\", { handle });\n}\n\nfunction updateCommunityBoard({ handle, board }) {\n  return Near.call(devHubAccountId, \"update_community_board\", {\n    handle,\n    board,\n  });\n}\n\nfunction updateCommunityGithub({ handle, github }) {\n  return Near.call(devHubAccountId, \"update_community_github\", {\n    handle,\n    github,\n  });\n}\n\nfunction addCommunityAddon({ handle, config }) {\n  return Near.call(devHubAccountId, \"add_community_addon\", {\n    community_handle: handle,\n    addon_config: config,\n  });\n}\n\nfunction updateCommunityAddon({ handle, config }) {\n  return Near.call(devHubAccountId, \"update_community_addon\", {\n    community_handle: handle,\n    addon_config: config,\n  });\n}\n\nfunction removeCommunityAddon({ handle, config_id }) {\n  return Near.call(devHubAccountId, \"remove_community_addon\", {\n    community_handle: handle,\n    config_id,\n  });\n}\n\nfunction getAccessControlInfo() {\n  return Near.view(devHubAccountId, \"get_access_control_info\") ?? null;\n}\n\nfunction getAllAuthors() {\n  return Near.view(devHubAccountId, \"get_all_authors\") ?? null;\n}\n\nfunction getAllCommunitiesMetadata() {\n  return Near.view(devHubAccountId, \"get_all_communities_metadata\") ?? null;\n}\n\nfunction getAvailableAddons() {\n  return Near.view(devHubAccountId, \"get_available_addons\") ?? null;\n}\n\nfunction getCommunityAddons({ handle }) {\n  return Near.view(devHubAccountId, \"get_community_addons\", { handle });\n}\n\nfunction getCommunityAddonConfigs({ handle }) {\n  return Near.view(devHubAccountId, \"get_community_addon_configs\", { handle });\n}\n\nfunction getAllLabels() {\n  return Near.view(devHubAccountId, \"get_all_labels\") ?? null;\n}\n\nfunction getPost({ post_id }) {\n  return Near.view(devHubAccountId, \"get_post\", { post_id }) ?? null;\n}\n\nfunction getPostsByAuthor({ author }) {\n  return Near.view(devHubAccountId, \"get_posts_by_author\", { author }) ?? null;\n}\n\nfunction getPostsByLabel({ label }) {\n  return (\n    Near.view(nearDevGovGigsContractAccountId, \"get_posts_by_label\", {\n      label,\n    }) ?? null\n  );\n}\n\nfunction useQuery(name, params) {\n  const initialState = { data: null, error: null, isLoading: true };\n\n  const cacheState = useCache(\n    () =>\n      Near.asyncView(devHubAccountId, [\"get\", name].join(\"_\"), params ?? {})\n        .then((response) => ({\n          ...initialState,\n          data: response ?? null,\n          isLoading: false,\n        }))\n        .catch((error) => ({\n          ...initialState,\n          error: props?.error ?? error,\n          isLoading: false,\n        })),\n\n    JSON.stringify({ name, params }),\n    { subscribe: false } // NOTE: I'm turning off subscribe to stop the constant re-rendering\n  );\n\n  return cacheState === null ? initialState : cacheState;\n}\n\nreturn {\n  getRootMembers,\n  hasModerator,\n  createCommunity,\n  getCommunity,\n  getAccountCommunityPermissions,\n  updateCommunity,\n  deleteCommunity,\n  updateCommunityBoard,\n  updateCommunityGithub,\n  addCommunityAddon,\n  updateCommunityAddon,\n  removeCommunityAddon,\n  getAccessControlInfo,\n  getAllAuthors,\n  getAllCommunitiesMetadata,\n  getAvailableAddons,\n  getCommunityAddons,\n  getCommunityAddonConfigs,\n  getAllLabels,\n  getPost,\n  getPostsByAuthor,\n  getPostsByLabel,\n  useQuery,\n};\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/thomasguntenaar.near/widget/DevHub.modules.contract-sdk", "fact_widget_deployments_id": "972110958b30d31d096bf4f6afc6decf", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}