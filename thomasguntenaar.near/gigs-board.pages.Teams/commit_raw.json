{"tx_hash": "87voviZPs8ZnHUk4NiUSsCmP47ESzFCYUcf11gv37yTv", "action_id_social": "FjTidRYGKh5gfTQLceKe1dHvCzaxRnvz7GRPnuP6k8cV-0-widget", "block_id": 98454859, "block_timestamp": "2023-08-09T23:57:09.133Z", "signer_id": "thomasguntenaar.near", "widget_name": "gigs-board.pages.Teams", "source_code": "/* INCLUDE: \"common.jsx\" */\nconst nearDevGovGigsContractAccountId =\n  props.nearDevGovGigsContractAccountId ||\n  (context.widgetSrc ?? \"devgovgigs.near\").split(\"/\", 1)[0];\n\nconst nearDevGovGigsWidgetsAccountId =\n  props.nearDevGovGigsWidgetsAccountId ||\n  (context.widgetSrc ?? \"devgovgigs.near\").split(\"/\", 1)[0];\n\nfunction widget(widgetName, widgetProps, key) {\n  widgetProps = {\n    ...widgetProps,\n    nearDevGovGigsContractAccountId: props.nearDevGovGigsContractAccountId,\n    nearDevGovGigsWidgetsAccountId: props.nearDevGovGigsWidgetsAccountId,\n    referral: props.referral,\n  };\n\n  return (\n    <Widget\n      src={`${nearDevGovGigsWidgetsAccountId}/widget/gigs-board.${widgetName}`}\n      props={widgetProps}\n      key={key}\n    />\n  );\n}\n\nfunction href(widgetName, linkProps) {\n  linkProps = { ...linkProps };\n\n  if (props.nearDevGovGigsContractAccountId) {\n    linkProps.nearDevGovGigsContractAccountId =\n      props.nearDevGovGigsContractAccountId;\n  }\n\n  if (props.nearDevGovGigsWidgetsAccountId) {\n    linkProps.nearDevGovGigsWidgetsAccountId =\n      props.nearDevGovGigsWidgetsAccountId;\n  }\n\n  if (props.referral) {\n    linkProps.referral = props.referral;\n  }\n\n  const linkPropsQuery = Object.entries(linkProps)\n    .filter(([_key, nullable]) => (nullable ?? null) !== null)\n    .map(([key, value]) => `${key}=${value}`)\n    .join(\"&\");\n\n  return `/#/${nearDevGovGigsWidgetsAccountId}/widget/gigs-board.pages.${widgetName}${\n    linkPropsQuery ? \"?\" : \"\"\n  }${linkPropsQuery}`;\n}\n/* END_INCLUDE: \"common.jsx\" */\n/* INCLUDE: \"core/adapter/dev-hub\" */\nconst devHubAccountId =\n  props.nearDevGovGigsContractAccountId ||\n  (context.widgetSrc ?? \"devgovgigs.near\").split(\"/\", 1)[0];\n\nconst DevHub = {\n  edit_community_github: ({ handle, github }) =>\n    Near.call(devHubAccountId, \"edit_community_github\", { handle, github }) ??\n    null,\n\n  get_access_control_info: () =>\n    Near.view(devHubAccountId, \"get_access_control_info\") ?? null,\n\n  get_all_authors: () => Near.view(devHubAccountId, \"get_all_authors\") ?? null,\n\n  get_all_communities: () =>\n    Near.view(devHubAccountId, \"get_all_communities\") ?? null,\n\n  get_all_labels: () => Near.view(devHubAccountId, \"get_all_labels\") ?? null,\n\n  get_community: ({ handle }) =>\n    Near.view(devHubAccountId, \"get_community\", { handle }) ?? null,\n\n  get_post: ({ post_id }) =>\n    Near.view(devHubAccountId, \"get_post\", { post_id }) ?? null,\n\n  get_posts_by_author: ({ author }) =>\n    Near.view(devHubAccountId, \"get_posts_by_author\", { author }) ?? null,\n\n  get_posts_by_label: ({ label }) =>\n    Near.view(nearDevGovGigsContractAccountId, \"get_posts_by_label\", {\n      label,\n    }) ?? null,\n\n  get_root_members: () =>\n    Near.view(devHubAccountId, \"get_root_members\") ?? null,\n\n  useQuery: ({ name, params }) => {\n    const initialState = { data: null, error: null, isLoading: true };\n\n    const cacheState = useCache(\n      () =>\n        Near.asyncView(devHubAccountId, [\"get\", name].join(\"_\"), params ?? {})\n          .then((response) => ({\n            ...initialState,\n            data: response ?? null,\n            isLoading: false,\n          }))\n          .catch((error) => ({\n            ...initialState,\n            error: props?.error ?? error,\n            isLoading: false,\n          })),\n\n      JSON.stringify({ name, params }),\n      { subscribe: true }\n    );\n\n    return cacheState === null ? initialState : cacheState;\n  },\n};\n/* END_INCLUDE: \"core/adapter/dev-hub\" */\n/* INCLUDE: \"entity/viewer\" */\nconst access_control_info = DevHub.useQuery({\n  name: \"access_control_info\",\n});\n\nconst Viewer = {\n  can: {\n    editCommunity: (communityData) =>\n      Struct.typeMatch(communityData) &&\n      (communityData.admins.includes(context.accountId) ||\n        Viewer.role.isDevHubModerator),\n  },\n\n  role: {\n    isDevHubModerator:\n      access_control_info.data === null || access_control_info.isLoading\n        ? false\n        : access_control_info.data.members_list[\n            \"team:moderators\"\n          ]?.children?.includes?.(context.accountId) ?? false,\n  },\n};\n/* END_INCLUDE: \"entity/viewer\" */\n\nconst isContractOwner = nearDevGovGigsContractAccountId == context.accountId;\n\nState.init({\n  labelData: null,\n  teamData: null,\n  createTeam: false,\n  createLabel: false,\n  isEditorActive: false,\n});\n\nconst access_info = DevHub.get_access_control_info() ?? null,\n  root_members = DevHub.get_root_members() ?? null;\n\nif (!access_info || !root_members) {\n  return <div>Loading...</div>;\n}\n\nfunction addLabel(labelData) {\n  Near.call([\n    {\n      contractName: nearDevGovGigsContractAccountId,\n      methodName: \"set_restricted_rules\",\n      args: {\n        rules: {\n          [labelData.name]: {\n            description: labelData.description,\n            rule_metadata_version: \"V0\",\n          },\n        },\n      },\n      deposit: Big(0).pow(21),\n      gas: Big(10).pow(12).mul(100),\n    },\n  ]);\n}\n\nfunction addTeam(teamData) {\n  let permissions = {};\n  let labels = teamData.label.split(\",\");\n  labels.forEach((element) => {\n    permissions[element] = [\"edit-post\", \"use-labels\"];\n  });\n  Near.call([\n    {\n      contractName: nearDevGovGigsContractAccountId,\n      methodName: \"add_member\",\n      args: {\n        member: `team:${teamData.name}`,\n        metadata: {\n          member_metadata_version: \"V0\",\n          description: teamData.description,\n          permissions,\n          children: [],\n          parents: [],\n        },\n      },\n      deposit: Big(0).pow(21),\n      gas: Big(10).pow(12).mul(100),\n    },\n  ]);\n}\n\nconst pageContent = (\n  <div className=\"pt-3\">\n    {(Viewer.role.isDevHubModerator || isContractOwner) &&\n      widget(\"components.layout.Controls\", {\n        title: \"Create Restricted labels\",\n        onClick: () => {\n          State.update({\n            createLabel: !state.createLabel,\n          });\n        },\n      })}\n    <div className=\"pt-3\">\n      {widget(\"entity.team.LabelsPermissions\", {\n        rules: access_info.rules_list,\n      })}\n    </div>\n    {state.createLabel &&\n      widget(\"components.organism.editor\", {\n        classNames: {\n          submit: \"btn-primary\",\n          submitAdornment: \"bi-check-circle-fill\",\n        },\n        heading: \"Restricted labels\",\n        isEditorActive: state.isEditorActive,\n        isEditingAllowed: Viewer.role.isDevHubModerator || isContractOwner,\n        onChangesSubmit: addLabel,\n        submitLabel: \"Accept\",\n        data: state.labelData,\n        schema: {\n          name: {\n            inputProps: {\n              min: 2,\n              max: 30,\n              placeholder: \"Label name (starts-with:<label>  or <label>)\",\n              required: true,\n            },\n            label: \"Name\",\n            order: 1,\n          },\n          description: {\n            inputProps: {\n              min: 2,\n              max: 60,\n              placeholder: \"Label description\",\n              required: true,\n            },\n            label: \"Description\",\n            order: 2,\n          },\n        },\n      })}\n    {(Viewer.role.isDevHubModerator || isContractOwner) && (\n      <div class=\"pt-3\">\n        {widget(\"components.layout.Controls\", {\n          title: \"Create Team\",\n          onClick: () => {\n            State.update({\n              createTeam: !state.createTeam,\n            });\n          },\n        })}\n      </div>\n    )}\n    {state.createTeam &&\n      widget(\"components.organism.editor\", {\n        classNames: {\n          submit: \"btn-primary\",\n          submitAdornment: \"bi-check-circle-fill\",\n        },\n        heading: \"Team info\",\n        isEditorActive: state.isEditorActive,\n        isEditingAllowed: Viewer.role.isDevHubModerator || isContractOwner,\n        onChangesSubmit: addTeam,\n        submitLabel: \"Accept\",\n        data: state.teamData,\n        schema: {\n          name: {\n            inputProps: {\n              min: 2,\n              max: 30,\n              placeholder: \"Team name\",\n              required: true,\n            },\n            label: \"Name\",\n            order: 1,\n          },\n          description: {\n            inputProps: {\n              min: 2,\n              max: 60,\n              placeholder: \"Team description\",\n              required: true,\n            },\n            label: \"Description\",\n            order: 2,\n          },\n          label: {\n            label: \"Labels\",\n            order: 3,\n            format: \"comma-separated\",\n            inputProps: {\n              min: 2,\n              max: 60,\n              placeholder: Object.keys(access_info.rules_list).join(\",\"),\n              required: true,\n            },\n          },\n        },\n      })}\n    {root_members\n      ? Object.keys(root_members).map((member) =>\n          widget(\n            \"entity.team.TeamInfo\",\n            {\n              member,\n              members_list: access_info.members_list,\n              rules_list: access_info.rules_list,\n              ableToAddMembers: true,\n              ableToAddLabels: true,\n              teamLevel: true,\n              root_members,\n            },\n            member\n          )\n        )\n      : null}\n  </div>\n);\n\nreturn widget(\"components.layout.Page\", {\n  children: pageContent,\n});\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/thomasguntenaar.near/widget/gigs-board.pages.Teams", "fact_widget_deployments_id": "76671b8202035f0e2b2ebbc76cd033a0", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 102}