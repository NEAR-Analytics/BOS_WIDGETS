{"tx_hash": "A5ThGRfmuuxMNvnUnNHkKkgWbRULKoxk5GUgKaQfgRDh", "action_id_social": "GPc7zpXkhn7fhj4y8e53iY7mavJp1R7gdCixHN3BeewX-0-widget", "block_id": 97533210, "block_timestamp": "2023-07-28T13:28:56.110Z", "signer_id": "thomasguntenaar.near", "widget_name": "gigs-board.feature.community-editor.ui", "source_code": "/* INCLUDE: \"common.jsx\" */\nconst nearDevGovGigsContractAccountId =\n  props.nearDevGovGigsContractAccountId ||\n  (context.widgetSrc ?? \"devgovgigs.near\").split(\"/\", 1)[0];\n\nconst nearDevGovGigsWidgetsAccountId =\n  props.nearDevGovGigsWidgetsAccountId ||\n  (context.widgetSrc ?? \"devgovgigs.near\").split(\"/\", 1)[0];\n\nfunction widget(widgetName, widgetProps, key) {\n  widgetProps = {\n    ...widgetProps,\n    nearDevGovGigsContractAccountId: props.nearDevGovGigsContractAccountId,\n    nearDevGovGigsWidgetsAccountId: props.nearDevGovGigsWidgetsAccountId,\n    referral: props.referral,\n  };\n\n  return (\n    <Widget\n      src={`${nearDevGovGigsWidgetsAccountId}/widget/gigs-board.${widgetName}`}\n      props={widgetProps}\n      key={key}\n    />\n  );\n}\n\nfunction href(widgetName, linkProps) {\n  linkProps = { ...linkProps };\n\n  if (props.nearDevGovGigsContractAccountId) {\n    linkProps.nearDevGovGigsContractAccountId =\n      props.nearDevGovGigsContractAccountId;\n  }\n\n  if (props.nearDevGovGigsWidgetsAccountId) {\n    linkProps.nearDevGovGigsWidgetsAccountId =\n      props.nearDevGovGigsWidgetsAccountId;\n  }\n\n  if (props.referral) {\n    linkProps.referral = props.referral;\n  }\n\n  const linkPropsQuery = Object.entries(linkProps)\n    .filter(([_key, nullable]) => (nullable ?? null) !== null)\n    .map(([key, value]) => `${key}=${value}`)\n    .join(\"&\");\n\n  return `/#/${nearDevGovGigsWidgetsAccountId}/widget/gigs-board.pages.${widgetName}${\n    linkPropsQuery ? \"?\" : \"\"\n  }${linkPropsQuery}`;\n}\n/* END_INCLUDE: \"common.jsx\" */\n/* INCLUDE: \"core/lib/struct\" */\nconst Struct = {\n  deepFieldUpdate: (\n    node,\n    { input, params, path: [nextNodeKey, ...remainingPath], via: toFieldValue }\n  ) => ({\n    ...node,\n\n    [nextNodeKey]:\n      remainingPath.length > 0\n        ? Struct.deepFieldUpdate(\n            Struct.typeMatch(node[nextNodeKey]) ||\n              Array.isArray(node[nextNodeKey])\n              ? node[nextNodeKey]\n              : {\n                  ...((node[nextNodeKey] ?? null) !== null\n                    ? { __archivedLeaf__: node[nextNodeKey] }\n                    : {}),\n                },\n\n            { input, path: remainingPath, via: toFieldValue }\n          )\n        : toFieldValue({\n            input,\n            lastKnownValue: node[nextNodeKey],\n            params,\n          }),\n  }),\n\n  isEqual: (input1, input2) =>\n    Struct.typeMatch(input1) && Struct.typeMatch(input2)\n      ? JSON.stringify(Struct.toOrdered(input1)) ===\n        JSON.stringify(Struct.toOrdered(input2))\n      : false,\n\n  toOrdered: (input) =>\n    Object.keys(input)\n      .sort()\n      .reduce((output, key) => ({ ...output, [key]: input[key] }), {}),\n\n  pick: (object, subsetKeys) =>\n    Object.fromEntries(\n      Object.entries(object ?? {}).filter(([key, _]) =>\n        subsetKeys.includes(key)\n      )\n    ),\n\n  typeMatch: (input) =>\n    input !== null && typeof input === \"object\" && !Array.isArray(input),\n};\n/* END_INCLUDE: \"core/lib/struct\" */\n/* INCLUDE: \"core/adapter/dev-hub\" */\nconst devHubAccountId =\n  props.nearDevGovGigsContractAccountId ||\n  (context.widgetSrc ?? \"devgovgigs.near\").split(\"/\", 1)[0];\n\nconst DevHub = {\n  edit_community_github: ({ handle, github }) =>\n    Near.call(devHubAccountId, \"edit_community_github\", { handle, github }) ??\n    null,\n\n  get_access_control_info: () =>\n    Near.view(devHubAccountId, \"get_access_control_info\") ?? null,\n\n  get_all_authors: () => Near.view(devHubAccountId, \"get_all_authors\") ?? null,\n\n  get_all_communities: () =>\n    Near.view(devHubAccountId, \"get_all_communities\") ?? null,\n\n  get_all_labels: () => Near.view(devHubAccountId, \"get_all_labels\") ?? null,\n\n  get_community: ({ handle }) =>\n    Near.view(devHubAccountId, \"get_community\", { handle }) ?? null,\n\n  get_post: ({ post_id }) =>\n    Near.view(devHubAccountId, \"get_post\", { post_id }) ?? null,\n\n  get_posts_by_author: ({ author }) =>\n    Near.view(devHubAccountId, \"get_posts_by_author\", { author }) ?? null,\n\n  get_posts_by_label: ({ label }) =>\n    Near.view(nearDevGovGigsContractAccountId, \"get_posts_by_label\", {\n      label,\n    }) ?? null,\n\n  get_root_members: () =>\n    Near.view(devHubAccountId, \"get_root_members\") ?? null,\n\n  useQuery: ({ name, params }) => {\n    const initialState = { data: null, error: null, isLoading: true };\n\n    const cacheState = useCache(\n      () =>\n        Near.asyncView(devHubAccountId, [\"get\", name].join(\"_\"), params ?? {})\n          .then((response) => ({\n            ...initialState,\n            data: response ?? null,\n            isLoading: false,\n          }))\n          .catch((error) => ({\n            ...initialState,\n            error: props?.error ?? error,\n            isLoading: false,\n          })),\n\n      JSON.stringify({ name, params }),\n      { subscribe: true }\n    );\n\n    return cacheState === null ? initialState : cacheState;\n  },\n};\n/* END_INCLUDE: \"core/adapter/dev-hub\" */\n/* INCLUDE: \"entity/viewer\" */\nconst access_control_info = DevHub.useQuery({\n  name: \"access_control_info\",\n});\n\nconst Viewer = {\n  can: {\n    editCommunity: (communityData) =>\n      Struct.typeMatch(communityData) &&\n      (communityData.admins.includes(context.accountId) ||\n        Viewer.role.isDevHubModerator),\n  },\n\n  role: {\n    isDevHubModerator:\n      access_control_info.data === null || access_control_info.isLoading\n        ? false\n        : access_control_info.data.members_list[\n            \"team:moderators\"\n          ]?.children?.includes?.(context.accountId) ?? false,\n  },\n};\n/* END_INCLUDE: \"entity/viewer\" */\n\nconst withoutEmptyStrings = (array) =>\n  array.filter((string) => string.length > 0);\n\nconst accessControlSectionFormatter = ({ admins }) => ({\n  admins: withoutEmptyStrings(admins),\n});\n\nconst CommunityDefaults = {\n  handle: null,\n  admins: [context.accountId],\n  name: \"\",\n  description: \"\",\n  bio_markdown: null,\n\n  logo_url:\n    \"https://ipfs.near.social/ipfs/bafkreibysr2mkwhb4j36h2t7mqwhynqdy4vzjfygfkfg65kuspd2bawauu\",\n\n  banner_url:\n    \"https://ipfs.near.social/ipfs/bafkreic4xgorjt6ha5z4s5e3hscjqrowe5ahd7hlfc5p4hb6kdfp6prgy4\",\n\n  tag: \"\",\n  github_handle: null,\n  telegram_handle: [],\n  twitter_handle: null,\n  website_url: null,\n  github: null,\n  sponsorship: null,\n  wiki1: null,\n  wiki2: null,\n};\n\nconst CommunityEditorUI = ({ handle: communityHandle }) => {\n  State.init({\n    communityData: null,\n    hasUnsavedChanges: false,\n  });\n\n  const isCommunityNew = typeof communityHandle !== \"string\";\n\n  const community = isCommunityNew\n    ? { data: CommunityDefaults, error: null, isLoading: false }\n    : DevHub.useQuery({\n        name: \"community\",\n        params: { handle: communityHandle },\n      });\n\n  const isSynced = Struct.isEqual(state.communityData, community.data);\n\n  if (state.communityData === null) {\n    State.update((lastKnownState) => ({\n      ...lastKnownState,\n      communityData: community.data,\n      hasUnsavedChanges: false,\n    }));\n  } else if (\n    // TODO: Remove or fix this probably redundant branch\n    typeof communityHandle === \"string\" &&\n    !state.hasUnsavedChanges &&\n    !community.isLoading &&\n    !isSynced\n  ) {\n    State.update((lastKnownState) => ({\n      ...lastKnownState,\n      communityData: community.data,\n      hasUnsavedChanges: false,\n    }));\n  }\n\n  const sectionSubmit = (sectionData) => {\n    State.update((lastKnownState) => {\n      const communityDataUpdate = {\n        ...Object.entries(sectionData).reduce(\n          (update, [propertyKey, propertyValue]) => ({\n            ...update,\n\n            [propertyKey]:\n              typeof propertyValue !== \"string\" ||\n              (propertyValue?.length ?? 0) > 0\n                ? propertyValue ?? null\n                : null,\n          }),\n\n          lastKnownState.communityData\n        ),\n      };\n\n      return {\n        ...lastKnownState,\n        communityData: communityDataUpdate,\n        hasUnsavedChanges: !Struct.isEqual(communityDataUpdate, community.data),\n      };\n    });\n  };\n\n  const changesSave = () =>\n    Near.call(\n      nearDevGovGigsContractAccountId,\n      isCommunityNew ? \"add_community\" : \"edit_community\",\n\n      {\n        handle: isCommunityNew ? state.communityData?.handle : communityHandle,\n        community: state.communityData,\n      }\n    );\n\n  const onDelete = () =>\n    Near.call(nearDevGovGigsContractAccountId, \"delete_community\", {\n      handle: communityHandle,\n    });\n\n  return !isCommunityNew && community.isLoading ? (\n    <div>Loading...</div>\n  ) : (\n    <div className=\"d-flex flex-column align-items-center gap-4 p-4\">\n      {typeof community.data?.handle === \"string\" || isCommunityNew ? (\n        <>\n          {widget(\"feature.community-editor.branding-section\", {\n            isEditingAllowed:\n              isCommunityNew || Viewer.can.editCommunity(community.data),\n\n            onChangesSubmit: sectionSubmit,\n            values: state.communityData,\n          })}\n\n          {widget(\"components.organism.editor\", {\n            classNames: {\n              submit: \"btn-primary\",\n              submitAdornment: \"bi-check-circle-fill\",\n            },\n\n            heading: \"Basic information\",\n            isEditorActive: isCommunityNew,\n\n            isEditingAllowed:\n              isCommunityNew || Viewer.can.editCommunity(community.data),\n\n            onChangesSubmit: sectionSubmit,\n            submitLabel: \"Accept\",\n            data: state.communityData,\n\n            schema: {\n              name: {\n                inputProps: {\n                  min: 2,\n                  max: 30,\n                  placeholder: \"Community name.\",\n                  required: true,\n                },\n\n                label: \"Name\",\n                order: 1,\n              },\n\n              description: {\n                inputProps: {\n                  min: 2,\n                  max: 60,\n\n                  placeholder:\n                    \"Describe your community in one short sentence that will appear in the discovery communities page.\",\n\n                  required: true,\n                },\n\n                label: \"Description\",\n                order: 2,\n              },\n\n              handle: {\n                inputProps: {\n                  min: 2,\n                  max: 40,\n\n                  placeholder:\n                    \"Choose unique URL handle for your community by adding letters and numbers. Example: zero-knowledge.\",\n\n                  required: true,\n                },\n\n                label: \"Handle\",\n                order: 3,\n              },\n\n              tag: {\n                inputProps: {\n                  min: 2,\n                  max: 20,\n\n                  placeholder:\n                    \"Choose one tag for your community. Any posts with this tag will show up in your community feed.\",\n\n                  required: true,\n                },\n\n                label: \"Tag\",\n                order: 4,\n              },\n            },\n          })}\n\n          {widget(\"components.organism.editor\", {\n            classNames: {\n              submit: \"btn-primary\",\n              submitAdornment: \"bi-check-circle-fill\",\n            },\n\n            heading: \"About\",\n\n            isEditingAllowed:\n              isCommunityNew || Viewer.can.editCommunity(community.data),\n\n            onChangesSubmit: sectionSubmit,\n            submitLabel: \"Accept\",\n            data: state.communityData,\n\n            schema: {\n              bio_markdown: {\n                format: \"markdown\",\n\n                inputProps: {\n                  min: 2,\n                  max: 200,\n\n                  placeholder:\n                    \"Tell more about your community. This will appear in the About section of your community\u2019s homepage.\",\n                },\n\n                label: \"Bio\",\n                multiline: true,\n                order: 1,\n              },\n\n              twitter_handle: {\n                inputProps: { min: 2, max: 60 },\n                label: \"Twitter handle\",\n                order: 2,\n              },\n\n              github_handle: {\n                inputProps: { min: 2, max: 60 },\n                label: \"Github organization handle\",\n                order: 3,\n              },\n\n              telegram_handle: {\n                format: \"comma-separated\",\n                label: \"Telegram handles\",\n                order: 4,\n              },\n\n              website_url: {\n                inputProps: { min: 2, max: 60 },\n                label: \"Website\",\n                order: 5,\n              },\n            },\n          })}\n\n          {widget(\"components.organism.editor\", {\n            classNames: {\n              submit: \"btn-primary\",\n              submitAdornment: \"bi-check-circle-fill\",\n            },\n\n            formatter: accessControlSectionFormatter,\n            heading: \"Access control\",\n\n            isEditingAllowed:\n              isCommunityNew || Viewer.can.editCommunity(community.data),\n\n            onChangesSubmit: sectionSubmit,\n            submitLabel: \"Accept\",\n            data: state.communityData,\n\n            schema: {\n              admins: {\n                format: \"comma-separated\",\n                inputProps: { required: true },\n                label: \"Admins\",\n                order: 1,\n              },\n            },\n          })}\n\n          {widget(\"components.organism.editor\", {\n            classNames: {\n              submit: \"btn-primary\",\n              submitAdornment: \"bi-check-circle-fill\",\n            },\n\n            heading: \"Wiki page 1\",\n\n            isEditingAllowed:\n              isCommunityNew || Viewer.can.editCommunity(community.data),\n\n            onChangesSubmit: (value) => sectionSubmit({ wiki1: value }),\n            submitLabel: \"Accept\",\n            data: state.communityData?.wiki1,\n\n            schema: {\n              name: {\n                label: \"Name\",\n                order: 1,\n              },\n\n              content_markdown: {\n                format: \"markdown\",\n                label: \"Content\",\n                multiline: true,\n                order: 2,\n              },\n            },\n          })}\n\n          {widget(\"components.organism.editor\", {\n            classNames: {\n              submit: \"btn-primary\",\n              submitAdornment: \"bi-check-circle-fill\",\n            },\n\n            heading: \"Wiki page 2\",\n\n            isEditingAllowed:\n              isCommunityNew || Viewer.can.editCommunity(community.data),\n\n            onChangesSubmit: (value) => sectionSubmit({ wiki2: value }),\n            submitLabel: \"Accept\",\n            data: state.communityData?.wiki2,\n\n            schema: {\n              name: {\n                label: \"Name\",\n                order: 1,\n              },\n\n              content_markdown: {\n                format: \"markdown\",\n                label: \"Content\",\n                multiline: true,\n                order: 2,\n              },\n            },\n          })}\n\n          {!isCommunityNew && Viewer.role.isDevHubModerator ? (\n            <div\n              className=\"d-flex justify-content-center gap-4 p-4 w-100\"\n              style={{ maxWidth: 896 }}\n            >\n              {widget(\"components.atom.button\", {\n                classNames: {\n                  root: \"btn-lg btn-outline-danger border-none\",\n                },\n\n                label: \"Delete community\",\n                onClick: onDelete,\n              })}\n            </div>\n          ) : null}\n\n          {(isCommunityNew || Viewer.can.editCommunity(community.data)) &&\n            state.hasUnsavedChanges && (\n              <div\n                className=\"position-fixed end-0 bottom-0 bg-transparent pe-4 pb-4\"\n                style={{\n                  borderTopLeftRadius: \"100%\",\n                }}\n              >\n                {widget(\"components.atom.button\", {\n                  adornment: !isCommunityNew ? (\n                    <svg\n                      fill=\"#ffffff\"\n                      version=\"1.1\"\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      width=\"16px\"\n                      height=\"16px\"\n                      viewBox=\"0 0 353.073 353.073\"\n                    >\n                      <g>\n                        <path\n                          d=\"M340.969,0H12.105C5.423,0,0,5.423,0,12.105v328.863c0,6.68,5.423,12.105,12.105,12.105h328.864\n\t\t\t\t\t\t\t\t\t\tc6.679,0,12.104-5.426,12.104-12.105V12.105C353.073,5.423,347.647,0,340.969,0z M67.589,18.164h217.895v101.884H67.589V18.164z\n\t\t\t\t\t\t\t\t\t\t M296.082,327.35H57.003V176.537h239.079V327.35z M223.953,33.295h30.269v72.638h-30.269V33.295z M274.135,213.863H78.938v-12.105\n\t\t\t\t\t\t\t\t\t\th195.197V213.863z M274.135,256.231H78.938v-12.105h195.197V256.231z M274.135,297.087H78.938v-12.105h195.197V297.087z\"\n                        />\n                      </g>\n                    </svg>\n                  ) : null,\n\n                  classNames: {\n                    root: \"btn-lg btn-success\",\n\n                    adornment: `bi ${\n                      isCommunityNew ? \"bi-rocket-takeoff-fill\" : null\n                    }`,\n                  },\n\n                  label: isCommunityNew ? \"Launch\" : \"Save\",\n                  onClick: changesSave,\n                })}\n              </div>\n            )}\n        </>\n      ) : (\n        <div\n          className=\"d-flex flex-column justify-content-center align-items-center w-100\"\n          style={{ height: 384 }}\n        >\n          <h2 className=\"h2\">{`Community with handle \"${communityHandle}\" not found.`}</h2>\n        </div>\n      )}\n    </div>\n  );\n};\n\nreturn CommunityEditorUI(props);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/thomasguntenaar.near/widget/gigs-board.feature.community-editor.ui", "fact_widget_deployments_id": "192d99ac6e6cf6fecabb2a92bacebaee", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 18}