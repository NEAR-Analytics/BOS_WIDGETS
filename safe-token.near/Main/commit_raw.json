{"tx_hash": "t6tL9zLvehZiTvz91szBmW3qB5eBqpyrUpVpzrsXs18", "action_id_social": "GLwBNcnzQXtFaKrRLXTNNuwFo1oPSd9daUkJQjHfPfdN-0-widget", "block_id": 119097771, "block_timestamp": "2024-05-17T05:25:47.130Z", "signer_id": "safe-token.near", "widget_name": "Main", "source_code": "const TGas = Big(10).pow(12);\nconst MaxGasPerTransaction = TGas.mul(250);\nconst GasPerTransaction = MaxGasPerTransaction.plus(TGas);\nconst pageAmountOfPage = 5;\nconst ipfsPrefix = \"https://ipfs.near.social/ipfs\";\nconst landingUrl = \"https://neatprotocol.ai\";\nconst partnerProgramUrl = \"https://forms.gle/4M3fvw3LPiJSyffcA\";\nconst nrc20DocHost = \"https://docs.nrc-20.io/\";\nfunction toLocaleString(source, decimals, rm) {\n  if (typeof source === \"string\") {\n    return toLocaleString(Number(source), decimals);\n  } else if (typeof source === \"number\") {\n    return decimals !== undefined\n      ? source.toLocaleString(undefined, {\n          maximumFractionDigits: decimals,\n          minimumFractionDigits: decimals,\n        })\n      : source.toLocaleString();\n  } else {\n    // Big type\n    return toLocaleString(\n      decimals !== undefined\n        ? Number(source.toFixed(decimals, rm))\n        : source.toNumber(),\n      decimals\n    );\n  }\n}\n\nfunction formatAmount(_balance, _decimal) {\n  const balance = _balance ?? 0;\n  const decimal = _decimal ?? 8;\n  return toLocaleString(\n    Big(balance).div(Big(10).pow(decimal)).toFixed(),\n    decimal\n  );\n}\n\nfunction formatDeployTime(blockTime) {\n  const milliseconds = blockTime / 1000000;\n  const date = new Date(milliseconds);\n\n  const year = date.getUTCFullYear();\n  const month = (date.getUTCMonth() + 1).toString().padStart(2, \"0\");\n  const day = date.getUTCDate().toString().padStart(2, \"0\");\n  const hours = date.getUTCHours().toString().padStart(2, \"0\");\n  const minutes = date.getUTCMinutes().toString().padStart(2, \"0\");\n  const seconds = date.getUTCSeconds().toString().padStart(2, \"0\");\n  return `${year}/${month}/${day} ${hours}:${minutes}:${seconds}`;\n}\n\n// Config for Bos app\nfunction getConfig(network) {\n  switch (network) {\n    case \"mainnet\":\n      return {\n        ownerId: \"inscribe.near\",\n        graphUrl:\n          \"https://api.thegraph.com/subgraphs/name/inscriptionnear/neat\",\n        nodeUrl: \"https://rpc.mainnet.near.org\",\n        contractName: \"inscription.near\",\n        methodName: \"inscribe\",\n        args: {\n          p: \"nrc-20\",\n          op: \"mint\",\n          tick: \"neat\",\n          amt: \"100000000\",\n        },\n        transferArgs: {\n          p: \"nrc-20\",\n          op: \"transfer\",\n          tick: \"neat\",\n        },\n        ftWrapperFactory: \"nrc-20.near\",\n        ftWrapper: \"neat.nrc-20.near\",\n        refFinance: \"https://app.ref.finance/\",\n        minMintEvents: 1_000_000,\n        minHolders: 1_000,\n        neatDecimals: 8,\n      };\n    case \"testnet\":\n      return {\n        ownerId: \"inscribe.testnet\",\n        graphUrl:\n          \"https://api.thegraph.com/subgraphs/name/inscriptionnear/neat-test\",\n        nodeUrl: \"https://rpc.testnet.near.org\",\n        contractName: \"inscription.testnet\",\n        methodName: \"inscribe\",\n        args: {\n          p: \"nrc-20\",\n          op: \"mint\",\n          tick: \"neat\",\n          amt: \"100000000\",\n        },\n        transferArgs: {\n          p: \"nrc-20\",\n          op: \"transfer\",\n          tick: \"neat\",\n        },\n        ftWrapperFactory: \"nrc-20.testnet\",\n        ftWrapper: \"neat.nrc-20.testnet\",\n        refFinance: \"https://testnet.ref-finance.com/\",\n        minMintEvents: 10,\n        minHolders: 5,\n        neatDecimals: 8,\n      };\n    default:\n      throw Error(`Unconfigured environment '${network}'.`);\n  }\n}\nconst config = getConfig(context.networkId);\nconst tx = {\n  contractName: config.contractName,\n  methodName: config.methodName,\n  args: config.args,\n  gas: GasPerTransaction,\n};\n\nfunction ftWrapperAddress(tick) {\n  return tick.toLowerCase() + \".\" + config.ftWrapperFactory;\n}\n\nconst Main = styled.div`\n  width: 100%;\n  min-height: 90vh;\n  overflow: hidden;\n  background: #101010;\n  background-image: linear-gradient(to right, #F4F4F4 4%, #DFDEDC 99%);\n  background-repeat: no-repeat;\n  background-size: cover;\n  padding: 0 16px;\n  color: white;\n  @media (min-width: 640px) {\n    padding: 0 40px;\n  }\n`;\n\nconst Spacer = styled.div``;\n\nconst BodyContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  gap: 20px;\n  margin: 40px 0;\n`;\n\nconst NeatLink = styled.a`\n  color: rgb(0, 214, 175);\n  font-size: 18px;\n  font-weight: 600;\n  display: inline-block;\n  text-decoration: underline;\n`;\n\nconst NeatCommonLink = styled.a`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  color: #fff;\n  font-size: 14px;\n  font-weight: 600;\n  text-decoration: underline;\n`;\n\nconst HeaderContainer = styled.div`\n  padding: 18px 0;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst Logo = styled.img`\n  width: 40px;\n  height: 40px;\n`;\n\nconst TabContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 56px;\n  flex-flow: wrap;\n\n  @media (max-width: 768px) {\n    gap: 20px;\n  }\n`;\n\nconst TabItem = styled(\"Link\")`\n  color: black;\n  cursor: pointer;\n  font-size: 18px;\n  font-weight: 600;\n  ${(props) => !props.selected && \"opacity: 0.4;\"}\n  &:hover {\n    color: black;\n    text-decoration: none;\n    opacity: 0.8;\n  }\n  @media (max-width: 768px) {\n    font-size: 16px;\n  }\n`;\n\nconst FormContainer = styled.div`\n  max-width: 650px;\n  width: 100%;\n  background: #141414;\n  border-radius: 4px;\n  border: 1px solid #ffffff1a;\n  display: flex;\n  flex-direction: column;\n  gap: 36px;\n\n  padding: 16px;\n  @media (min-width: 640px) {\n    padding: 24px;\n  }\n`;\n\nconst FooterWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 8px;\n  margin: 40px 0;\n`;\n\nconst Notification = styled.div`\n  position: absolute;\n  right: 40px;\n  top: 50px;\n  z-index: 1;\n\n  @media (max-width: 768px) {\n    display: none;\n  }\n`;\n\nfunction getTab() {\n  const tab = props.tab;\n  if ([\"transfer\", \"wrap\", \"indexer\", \"mint\"].includes(tab)) {\n    return tab;\n  } else {\n    return \"transfer\";\n  }\n}\n\nconst tab = getTab();\n\nState.init({\n  showNotification: true,\n});\n\nreturn (\n  <Main>\n    <HeaderContainer>\n      <a href={landingUrl} target=\"_blank\">\n        <Logo\n          src={`${ipfsPrefix}/bafkreib47m2sdpttpfpsuonot7uv7gwiehh5yhgohzijafdtc7gdozi45m`}\n          alt=\"Logo\"\n        />\n      </a>\n      <TabContainer>\n        <TabItem\n          selected={tab === \"deploy\"}\n          href={`/${config.ownerId}/widget/NEAT?tab=transfer`}\n        >\n          Deploy\n        </TabItem>\n        <TabItem\n          selected={tab === \"utils\"}\n          href={`/${config.ownerId}/widget/NEAT?tab=wrap`}\n        >\n          Utils\n        </TabItem>\n      </TabContainer>\n      <Spacer />\n    </HeaderContainer>\n    <BodyContainer>\n      {tab === \"deploy\" && <Widget src={`${config.ownerId}/widget/Deploy`} />}\n      {tab === \"utils\" && <Widget src={`${config.ownerId}/widget/Utils`} />}\n    </BodyContainer>\n  </Main>\n);\n", "metadata": {"fork_of": "near/widget/Onboarding.Starter@90335242"}, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/safe-token.near/widget/Main", "fact_widget_deployments_id": "2a409677ab727338152e6ca37872fb6a", "inserted_timestamp": "2024-05-17T06:54:27.705Z", "modified_timestamp": "2024-05-17T06:54:27.705Z", "__row_index": 2}