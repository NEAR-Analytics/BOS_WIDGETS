{"tx_hash": "734rUdix4hdivXWHX3F4425weKN2A6uksCCtAEr3XgzZ", "action_id_social": "8RKUEKaoon9XPCR2Cb8tC7WQjYviaGXM73CGXjT7RcGn-0-widget", "block_id": 99406826, "block_timestamp": "2023-08-22T16:02:57.901Z", "signer_id": "root.benjiman.near", "widget_name": "Keypom-Key-Data", "source_code": "const GRAPHQL_ENDPOINT =\n  \"https://queryapi-hasura-graphql-24ktefolwq-ew.a.run.app\";\n\nfunction fetchGraphQL(operationsDoc, operationName, variables) {\n  return asyncFetch(`${GRAPHQL_ENDPOINT}/v1/graphql`, {\n    method: \"POST\",\n    headers: { \"x-hasura-role\": \"root_benjiman_near\" },\n    body: JSON.stringify({\n      query: operationsDoc,\n      variables: variables,\n      operationName: operationName,\n    }),\n  });\n}\n\nconst lastPostQuery = `\nquery MyQuery {\n  root_benjiman_near_all_keypom_key_additions_keys(\n    order_by: {block_timestamp: desc}\n  ) {\n    funder_id\n    receipt_id\n    block_height\n    block_timestamp\n    public_key\n  }\n}\n`;\n\nlet fetchResult = fetchGraphQL(lastPostQuery, \"IndexerQuery\", {})\n  .then((feedIndexerResponse) => {\n    if (\n      feedIndexerResponse &&\n      feedIndexerResponse.body.data\n        .root_benjiman_near_all_keypom_key_additions_keys.length > 0\n    ) {\n      const data = feedIndexerResponse,data.root_benjiman_near_all_keypom_key_additions_keys;\n      console.log(\"Data: \", data);\n    } else {\n      console.log(\"Falling back to old widget.\");\n    }\n  })\n  .catch((error) => {\n    console.log(\n      \"Error while fetching GraphQL(falling back to old widget): \",\n      error\n    );\n    State.update({ shouldFallback: true });\n  });\n\nif (!fetchResult) {\n  return \"Loading data...\";\n}\nif (!fetchResult.ok) {\n  return \"Failed to fetch data\";\n}\nconst parsed = JSON.parse(fetchResult.body);\nconst dataset = parsed.data\n  .sort((a, b) => a.collected_for_day - b.collected_for_day)\n  .map((row) => ({\n    \"Full Time\": row.full_time,\n    \"Part Time\": row.part_time,\n    \"One Time\": row.one_time,\n    \"Monthly Active\": row.mau,\n    Date: new Date(row.collected_for_day).toISOString().substring(0, 10),\n  }));\n\n//return <div>{JSON.stringify(data)}</div>;\nconst colsToShow = [\"Full Time\", \"Part Time\", \"One Time\", \"Monthly Active\"];\nconst definition = {\n  title: {\n    text: \"NEAR BOS Active Developers\",\n    subtext: `Executed by ${parsed.executed_by} at ${new Date(\n      parsed.executed_at\n    ).toLocaleString()}`,\n  },\n  tooltip: {\n    trigger: \"axis\",\n  },\n  legend: {\n    data: colsToShow,\n    top: \"50\",\n  },\n  grid: {\n    left: \"3%\",\n    right: \"4%\",\n    bottom: \"3%\",\n    top: \"100\",\n    containLabel: true,\n  },\n  toolbox: {\n    feature: {\n      saveAsImage: {},\n    },\n  },\n  xAxis: {\n    type: \"category\",\n    boundaryGap: false,\n    data: dataset.map((r) => r.Date),\n  },\n  yAxis: {\n    type: \"value\",\n  },\n  series: colsToShow.map((col) => ({\n    name: col,\n    type: \"line\",\n    data: dataset.map((r) => r[col]),\n  })),\n};\n\nreturn (\n  <div>\n    <Widget src={`nearpavel.near/widget/EChart`} props={{ definition }} />\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/root.benjiman.near/widget/Keypom-Key-Data", "fact_widget_deployments_id": "6980802b2798963940985a9aca9aed35", "inserted_timestamp": "2023-08-22T17:48:51.459Z", "modified_timestamp": "2023-08-22T17:48:51.459Z", "__row_index": 0}