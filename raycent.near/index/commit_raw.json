{"tx_hash": "Q6vrPTK54ZuwLFn5DiUxtGtLyqNw19irNGnYAuhgzfW", "action_id_social": "Bj8WfcsqNCdLmLjWzv1fsPHtLMH5u5hWe27LcvdR4GxE-0-widget", "block_id": 104281015, "block_timestamp": "2023-10-27T00:47:22.126Z", "signer_id": "raycent.near", "widget_name": "index", "source_code": null, "metadata": null, "branch": {"draft": {"": "const BG = styled.div`\n\tbackground-color: #fff;\n\tbackground-image: linear-gradient(180deg, #fafcfd 0%, #b6dbfc 100%);\n\tposition: fixed;\n\ttop: 0;\n\tleft: 0;\n\tright: 0;\n\tbottom: 0;\n\tz-index: -2;\n`;\n\nconst Circle1 = styled.div`\n\twidth: 500px;\n\theight: 500px;\n\tborder-radius: 50%;\n\tbackground: linear-gradient(90deg, #9333ea 0%, #f29bc0 100%), #03d69d;\n\tposition: fixed;\n\ttop: -100px;\n\tright: -100px;\n\tz-index: 0;\n\topacity: 0.5;\n\tfilter: blur(50px);\n`;\nconst Circle2 = styled.div`\n\twidth: 400px;\n\theight: 400px;\n\tborder-radius: 50%;\n\tborder: 1px solid #cbcbcb;\n\tbackground: linear-gradient(90deg, #f9d74a 0%, #ffd50d 100%);\n\tposition: fixed;\n\ttop: 80px;\n\tright: -100px;\n\tz-index: 0;\n\topacity: 0.8;\n\tfilter: blur(100px);\n\n\tanimation: move 3s ease infinite;\n\n\t@keyframes move {\n\t\t0% {\n\t\t\ttransform: translate(0, 0);\n\t\t}\n\t\t50% {\n\t\t\ttransform: translate(60px, 40px) scale(1.2);\n\t\t}\n\t\t100% {\n\t\t\ttransform: translate(0, 0);\n\t\t}\n\t}\n`;\n\nconst Card = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tbackground: rgba(255, 255, 255, 0.375);\n\tbox-shadow: 0 0.75rem 2rem 0 rgba(0, 0, 0, 0.1);\n\tborder-radius: 2rem;\n\tborder: 1px solid rgba(255, 255, 255, 0.125);\n\tposition: relative;\n\tz-index: 1;\n\tmargin: 20px auto;\n\twidth: 100%;\n\theight: 75vh;\n`;\n\nconst Switch = styled.div`\n\tcolor: #999;\n\tfont-size: 15px;\n\tfont-weight: 800;\n\tfont-family: 'Mona Sans', sans-serif;\n\tdisplay: block;\n\ttext-align: center;\n\tbackground: white;\n\tpadding: 1px 6px;\n\tborder-radius: 15px;\n\tmargin-top: 15px;\n\tposition: absolute;\n\tleft: 50%;\n\t-ms-transform: translateX(-50%);\n\ttransform: translateX(-50%);\n\tz-index: 3;\n`;\n\nconst Selected = styled.span`\n\tbackground: linear-gradient(\n\t\t120deg,\n\t\t#ffd50d 0%,\n\t\t#f29bc0 25%,\n\t\t#4f46e5 50%,\n\t\t#f29bc0 75%,\n\t\t#ffd50d 100%\n\t);\n\tcolor: #000;\n\tbackground-clip: text;\n\ttext-fill-color: transparent;\n\t-webkit-background-clip: text;\n\t-webkit-text-fill-color: transparent;\n\n\tanimation: shine 50s ease infinite;\n\n\t@keyframes shine {\n\t\t0% {\n\t\t\tbackground-position: -1000px;\n\t\t}\n\t\t100% {\n\t\t\tbackground-position: 1000px;\n\t\t}\n\t}\n`;\n\nconst MAP_STYLE = \"mapbox://styles/mapbox/outdoors-v12\";\nconst MAP_TOKEN =\n  \"pk.eyJ1IjoidGVqMDEiLCJhIjoiY2xqcHZ2dGpkMDB5azNsbzQ0bmMwNjRjaCJ9.FVv2zRPaLwzZMgagbI2YZw\";\n\nconst center = [-74.00597, 40.71427];\nconst zoom = 10;\nconst accountId = context.accountId;\n\nconst questions = [\n  { key: 1, value: \"How would you recognize someone from your borough?\" },\n  { key: 2, value: \"What's a popular dish?\" },\n  { key: 3, value: \"Name a famous landmark.\" },\n  { key: 4, value: \"What's some slang from your neighborhood?\" },\n  { key: 5, value: \"What are the top 3 destinations?\" },\n  { key: 6, value: \"What are people most likely doing on a Saturday?\" },\n  { key: 7, value: \"What are you most likely to see on the train?\" },\n  { key: 8, value: \"How do people say goodbye?\" },\n  { key: 9, value: \"What\u2019s the first thing a stranger asks when visiting?\" },\n  { key: 10, value: \"Where do the locals go?\" },\n];\n\nconst Container = styled.div`\n\tdisplay: flex;\n\twidth: 100%;\n\tborder-radius: 2rem;\n\tmargin-top: var(--header-height);\n\theight: calc(100vh - 70px);\n\talign-items: stretch;\n\tflex-direction: column;\n\toverflow: auto;\n\tposition: relative;\n\tz-index: 2;\n`;\n\nconst Button = styled.button`\n\tbackground: #191a1a;\n\tborder-radius: 6px;\n\tcolor: white;\n\tz-index: 1;\n\tpadding: 10px 22px;\n`;\n\nconst Profile = styled.div`\n\tposition: absolute;\n\tright: 50px;\n\ttop: 30px;\n\t@media (max-width: 510px) {\n\t\tpadding: 6px 15px;\n\t\tright: 15px;\n\t\ttop: 15px;\n\t}\n`;\n\nconst Inspect = styled.div`\n\tposition: absolute;\n\tleft: 50px;\n\ttop: 30px;\n\t@media (max-width: 510px) {\n\t\tpadding: 6px 15px;\n\t\tright: 15px;\n\t\ttop: 15px;\n\t}\n`;\n\nconst Location = styled.div`\n\tposition: absolute;\n\tbottom: 50px;\n\t@media (max-width: 510px) {\n\t\tpadding: 6px 15px;\n\t\tbottom: 15px;\n\t}\n`;\n\nconst markers = Social.get(`*/thing/libertyMarker`, \"final\", {\n  subscribe: \"true\",\n});\n\nif (!markers) {\n  return <></>;\n}\n\nconst dataMap = {};\n\nObject.keys(markers).forEach((accountId) => {\n  if (markers[accountId].thing && markers[accountId].thing.libertyMarker) {\n    const markerObj = JSON.parse(markers[accountId].thing.libertyMarker);\n    dataMap[accountId] = { accountId, ...markerObj };\n  }\n});\n\nState.init({\n  locations: [],\n  edit: false,\n  currentLocation: (dataMap[accountId] && dataMap[accountId].coordinates) || {},\n});\n\nconst handleSave = (data) => {\n  if (!data) {\n    data = dataMap[accountId].data;\n  }\n  Social.set(\n    {\n      thing: {\n        libertyMarker: {\n          \"\": JSON.stringify({\n            coordinates: state.currentLocation,\n            data,\n          }),\n        },\n      },\n    },\n    {\n      onCommit: () => {\n        State.update({ edit: false, showForm: false, showInspect: false });\n      },\n      onCancel: () =>\n        State.update({ edit: false, showForm: false, showInspect: false }),\n    }\n  );\n};\n\nfunction DownIcon() {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"20\"\n      height=\"20\"\n      viewBox=\"0 0 48 48\"\n    >\n      <mask id=\"ipSDownOne0\">\n        <path\n          fill=\"#fff\"\n          stroke=\"#fff\"\n          strokeLinejoin=\"round\"\n          strokeWidth=\"4\"\n          d=\"M36 19L24 31L12 19h24Z\"\n        />\n      </mask>\n      <path fill=\"currentColor\" d=\"M0 0h48v48H0z\" mask=\"url(#ipSDownOne0)\" />\n    </svg>\n  );\n}\n\nfunction LocationIcon() {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n    >\n      <g\n        fill=\"none\"\n        stroke=\"currentColor\"\n        strokeLinejoin=\"round\"\n        strokeWidth=\"2\"\n      >\n        <path d=\"M13 9a1 1 0 1 1-2 0a1 1 0 0 1 2 0Z\" />\n        <path d=\"M17.5 9.5c0 3.038-2 6.5-5.5 10.5c-3.5-4-5.5-7.462-5.5-10.5a5.5 5.5 0 1 1 11 0Z\" />\n      </g>\n    </svg>\n  );\n}\n\nreturn (\n  <div className=\"position-relative h-100 w-100 p-1\">\n    <BG />\n    <Card>\n      <Switch>\n        <Selected>Map</Selected> | List\n      </Switch>\n      <Container>\n        {state.showInspect && (\n          <Widget\n            src={\"libertydao.near/widget/boroughs.inspect\"}\n            props={{\n              focusedMarker: state.focusedMarker,\n              questions,\n            }}\n          />\n        )}\n\n        {/* Absolute Positioning */}\n        {accountId && (\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n          >\n            <Location>\n              <Button\n                onClick={\n                  state.edit\n                    ? () => handleSave()\n                    : () => State.update({ edit: !state.edit })\n                }\n              >\n                {`${!state.edit ? \"Add Rent-Stabilized Apartment\" : \"Save\"}`}\n                <LocationIcon />\n              </Button>\n              {state.edit && (\n                <Button\n                  onClick={() => State.update({ edit: false, showForm: false })}\n                >\n                  Cancel\n                </Button>\n              )}\n            </Location>\n          </div>\n        )}\n\n        <Widget\n          src={\"libertydao.near/widget/boroughs.map\"}\n          props={{\n            API_URL,\n            accessToken: MAP_TOKEN,\n            styleUrl: MAP_STYLE,\n            center,\n            zoom,\n            markers: Object.values(dataMap),\n            edit: state.edit,\n            onMapClick: (e) => {\n              State.update({\n                currentLocation: e.coordinates,\n                showInspect: false,\n              });\n            },\n            onMarkerClick: (e) => {\n              State.update({ focusedMarker: e, showInspect: true });\n            },\n          }}\n        />\n      </Container>\n    </Card>\n    <Circle1 />\n    <Circle2 />\n  </div>\n);\n"}}, "widget_modules_used": null, "widget_url": "https://near.social/#/raycent.near/widget/index", "fact_widget_deployments_id": "20ce3315f200820b49232343ffad083b", "inserted_timestamp": "2023-10-27T02:38:38.086Z", "modified_timestamp": "2023-10-27T02:38:38.086Z", "__row_index": 6}