{"tx_hash": "2dV5n3tuTf8uyuHvW7eDwaHwxsncz5ZyZNGiBTUM4PUi", "action_id_social": "CSo6GHdikm4mMh3P1moX97u9MLaJNSNaLusxFamKWCKG-0-widget", "block_id": 119793177, "block_timestamp": "2024-05-26T16:51:37.889Z", "signer_id": "loosequiche.near", "widget_name": "Tic-Tac-Toe", "source_code": "const Game = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  @media (min-width: 768px) {\n    flex-direction: row;\n  }\n`;\n\nconst GameBoard = styled.div`\n  margin-bottom: 20px;\n\n  @media (min-width: 768px) {\n    margin-right: 20px;\n    margin-bottom: 0;\n  }\n`;\n\nconst Board = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-gap: 10px;\n`;\n\nconst Square = styled.button`\n  background-color: #fff;\n  border: 1px solid #999;\n  font-size: 48px;\n  font-weight: bold;\n  line-height: 64px;\n  height: 64px;\n  width: 64px;\n  text-align: center;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #f0f0f0;\n  }\n\n  @media (max-width: 480px) {\n    font-size: 24px;\n    line-height: 48px;\n    height: 48px;\n    width: 48px;\n  }\n`;\n\nconst GameInfo = styled.div`\n  font-size: 24px;\n  font-weight: bold;\n  text-align: center;\n\n  @media (min-width: 768px) {\n    margin-top: 0;\n    text-align: left;\n  }\n`;\n\nconst Header = styled.div`\n  .navbar {\n    background-color: #f8f9fa;\n  }\n\n  .navbar-brand {\n    display: flex;\n    align-items: center;\n  }\n\n  .navbar-brand img {\n    margin-right: 10px;\n  }\n`;\n\nconst App = () => {\n  const initialState = {\n    squares: Array(9).fill(null),\n    xIsNext: true,\n    winner: null,\n  };\n\n  const calculateWinner = (squares) => {\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (\n        squares[a] &&\n        squares[a] === squares[b] &&\n        squares[a] === squares[c]\n      ) {\n        return squares[a];\n      }\n    }\n    return null;\n  };\n\n  const [state, setState] = useState(initialState);\n\n  const handleClick = (i) => {\n    const squares = state.squares.slice();\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    squares[i] = state.xIsNext ? \"X\" : \"O\";\n    setState({\n      squares: squares,\n      xIsNext: !state.xIsNext,\n      winner: calculateWinner(squares),\n    });\n  };\n\n  const renderStatus = () => {\n    const winner = state.winner;\n    if (winner) {\n      return `Winner: ${winner}`;\n    } else {\n      return `Next Player: ${state.xIsNext ? \"X\" : \"O\"}`;\n    }\n  };\n\n  return (\n    <>\n      <Header>\n        <div className=\"navbar navbar-expand-lg bg-body-tertiary\">\n          <div className=\"container-fluid\">\n            <a className=\"navbar-brand\" href=\"#\">\n              <img\n                src=\"https://res.cloudinary.com/dglhc1pfj/image/upload/f_auto,q_auto/v1/samples/lhoetmcicrxlihdcdpou\"\n                alt=\"\"\n                width=\"50px\"\n                height=\"50px\"\n              />\n              Near India\n            </a>\n          </div>\n        </div>\n      </Header>\n      <Game>\n        <GameBoard>\n          <Board>\n            {state.squares.map((square, i) => (\n              <Square key={i} onClick={() => handleClick(i)}>\n                {square}\n              </Square>\n            ))}\n          </Board>\n        </GameBoard>\n        <GameInfo>{renderStatus()}</GameInfo>\n      </Game>\n    </>\n  );\n};\n\nreturn <App />;\n", "metadata": {"platform": "jutsu.ai"}, "branch": {"draft": null}, "widget_modules_used": null, "widget_url": "https://near.social/#/loosequiche.near/widget/Tic-Tac-Toe", "fact_widget_deployments_id": "b4624b314f8d5e39c9710e7ce4be8b0c", "inserted_timestamp": "2024-05-26T18:51:05.502Z", "modified_timestamp": "2024-05-26T18:51:05.502Z", "__row_index": 0}