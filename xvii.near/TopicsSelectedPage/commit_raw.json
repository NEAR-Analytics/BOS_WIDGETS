{"tx_hash": "DxPEkbtheMJYe8Am4re72bjEZjo5nnecx41cm5b3cNnu", "action_id_social": "C2FS1aHBs85iXrVG7KarVUfzaLwkpq7L9i5DKbaXiGn2-0-widget", "block_id": 106510479, "block_timestamp": "2023-11-25T14:47:44.529Z", "signer_id": "xvii.near", "widget_name": "TopicsSelectedPage", "source_code": "// Define an array of accounts with their topics and links\r\nconst accounts = [\r\n  {\r\n    id: \"cripteros.near\",\r\n    topic: \"NEAR UX for Spanish speaking contributors\",\r\n    link: \"\",\r\n  },\r\n  {\r\n    id: \"dabbie3229.near\",\r\n    topic: \"Gender in Web3 (women in near the ecosystem)\",\r\n    link: \"https://docs.google.com/document/d/1qxHZu6IKTxxdIJrJNsIGAiHepkH58KyTincgv2i9VtU/edit?usp=sharing\",\r\n  },\r\n  {\r\n    id: \"hannah17.near\",\r\n    topic: \"Decentralized Finance (DeFi) and Ref Finance\",\r\n    link: \"https://docs.google.com/document/d/1EhODQcNZKAaRdBy_SnERws6-BwlYGp3EVQLY0Zo0Q6E/edit?usp=sharing\",\r\n  },\r\n  {\r\n    id: \"15870c8972a9fe6cdb7dfc2df835740108e8674cc170a091cd0ece0b9e4f6cfa\",\r\n    topic: \"Cryptography in Blockchain\",\r\n    link: \"https://docs.google.com/document/d/1cnE-3tJ-jWXCnIPZK8Mi8xvdL4VnrVwEFg6z-j27aQw/edit?usp=sharing\",\r\n  },\r\n  {\r\n    id: \"ca391bd08dff676aba646e23d2a099dd2cefa728f11d864940e05433f09a4371\",\r\n    topic: \"The impacts of musical NFT\u2019s on near ecosystem\",\r\n    link: \"https://docs.google.com/document/d/10RgXhAs6aaI_6JKy9oTjowjUElUxYeR_-amQpDegYIo/edit\",\r\n  },\r\n  {\r\n    id: \"xvii.near\",\r\n    topic: \"DeFi on NEAR VS ETH\",\r\n    link: \"https://docs.google.com/document/d/1ymC009NWDZxne5CWKrUOhtXTys2MKjxQez5G1brWFyE/edit?usp=sharing\",\r\n  },\r\n  {\r\n    id: \"racheludoka.near\",\r\n    topic: \"Airdrop campaign and it's effects on new projects\",\r\n    link: \"https://docs.google.com/document/d/1vBMw-TuXuzM5D1jiugBwBJ8lPPEgNmTmwHoKItGqdus/edit?usp=drivesdk\",\r\n  },\r\n  {\r\n    id: \"bheegem.near\",\r\n    topic: \"DeFi projects on Near\",\r\n    link: \"https://docs.google.com/document/d/1y_GsDrA_VG8kQubplRqjy8ddIL_Fnjl7IkkNt5YpPbU/edit?usp=drivesdk\",\r\n  },\r\n  {\r\n    id: \"trojanhorse15.near\",\r\n    topic: \"NDC Election\",\r\n    link: \"https://docs.google.com/document/d/1alFrnJ5cQBVouCG5kGytOSZOpd8-sjP1pAdjatTm_UY/edit?usp=drivesdk\",\r\n  },\r\n];\r\n\r\n// -- Get all the roles from the DAO policy\r\nlet roles = Near.view(daoId, \"get_policy\");\r\nroles = roles && roles.roles ? roles.roles : [];\r\n\r\nconst getUserRoles = (user) => {\r\n  const userRoles = [];\r\n  for (const role of roles) {\r\n    if (role.kind === \"Everyone\") {\r\n      continue;\r\n    }\r\n    if (!role.kind.Group) continue;\r\n    if (user && role.kind.Group && role.kind.Group.includes(user)) {\r\n      userRoles.push(role.name);\r\n    }\r\n  }\r\n  return userRoles;\r\n};\r\n\r\nconst isUserAllowedTo = (user, kind, action) => {\r\n  // -- Filter the user roles\r\n  const userRoles = [];\r\n  for (const role of roles) {\r\n    if (role.kind === \"Everyone\") {\r\n      userRoles.push(role);\r\n      continue;\r\n    }\r\n    if (!role.kind.Group) continue;\r\n    if (user && role.kind.Group && role.kind.Group.includes(user)) {\r\n      userRoles.push(role);\r\n    }\r\n  }\r\n\r\n  // -- Check if the user is allowed to perform the action\r\n  let allowed = false;\r\n\r\n  userRoles\r\n    .filter(({ permissions }) => {\r\n      const allowedRole =\r\n        permissions.includes(`${kind.toString()}:${action.toString()}`) ||\r\n        permissions.includes(`${kind.toString()}:*`) ||\r\n        permissions.includes(`*:${action.toString()}`) ||\r\n        permissions.includes(\"*:*\");\r\n      allowed = allowed || allowedRole;\r\n      return allowedRole;\r\n    })\r\n    .map((role) => role.name);\r\n\r\n  return allowed;\r\n};\r\n\r\nconst Card = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  gap: 16px;\r\n  width: 100%;\r\n  border-radius: 12px;\r\n  background: #fff;\r\n  border: 1px solid #eceef0;\r\n  box-shadow: 0px 1px 3px rgba(16, 24, 40, 0.1),\r\n    0px 1px 2px rgba(16, 24, 40, 0.06);\r\n  overflow: hidden;\r\n  padding: 16px;\r\n`;\r\n\r\nconst CardLeft = styled.div`\r\n  display: flex;\r\n  gap: 16px;\r\n  align-items: center;\r\n  width: 100%;\r\n  min-width: 0;\r\n\r\n  > div {\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 100%;\r\n    min-width: 0;\r\n  }\r\n`;\r\n\r\nconst Avatar = styled.a`\r\n  width: 60px;\r\n  height: 60px;\r\n  flex-shrink: 0;\r\n  border: 1px solid #eceef0;\r\n  overflow: hidden;\r\n  border-radius: 56px;\r\n  transition: border-color 200ms;\r\n\r\n  img {\r\n    object-fit: cover;\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n\r\n  &:hover,\r\n  &:focus {\r\n    border-color: #d0d5dd;\r\n  }\r\n`;\r\n\r\nconst TextLink = styled.a`\r\n  display: block;\r\n  margin: 0;\r\n  font-size: 14px;\r\n  line-height: 18px;\r\n  color: ${(p) => (p.bold ? \"#11181C !important\" : \"#687076 !important\")};\r\n  font-weight: ${(p) => (p.bold ? \"600\" : \"400\")};\r\n  font-size: ${(p) => (p.small ? \"12px\" : \"14px\")};\r\n  overflow: ${(p) => (p.ellipsis ? \"hidden\" : \"visible\")};\r\n  text-overflow: ${(p) => (p.ellipsis ? \"ellipsis\" : \"unset\")};\r\n  white-space: nowrap;\r\n  outline: none;\r\n\r\n  &:focus,\r\n  &:hover {\r\n    text-decoration: underline;\r\n  }\r\n`;\r\n\r\nconst TagsWrapper = styled.div`\r\n  padding-top: 4px;\r\n`;\r\n\r\nconst renderCard = (account) => {\r\n  const { id, topic, link } = account;\r\n  const profile = Social.get(`${id}/profile/**`, \"final\");\r\n  const tags = Object.keys(profile.tags || {});\r\n  const profileUrl = `#/near/widget/ProfilePage?accountId=${id}`;\r\n  // ... other existing variables ...\r\n  const daoId = \"hacks.sputnik-dao.near\";\r\n  const role = \"boshacks\";\r\n  const image =\r\n    \"https://ipfs.near.social/ipfs/bafkreig5mg6dfvtmctvmrjaybazql25yuidyf5mndmmir43tm4igm3yd34\";\r\n  const description = `I (${myProfile.name}) want you to be my partner at BOS HACKS`;\r\n\r\n  const userRoles = id ? getUserRoles(id) : [];\r\n  const isHacker = userRoles.includes(roleToCheck);\r\n\r\n  return (\r\n    <Card>\r\n      <CardLeft>\r\n        <Avatar href={profileUrl}>\r\n          <Widget\r\n            src=\"mob.near/widget/Image\"\r\n            props={{\r\n              image: profile.image,\r\n              alt: profile.name,\r\n              fallbackUrl:\r\n                \"https://ipfs.near.social/ipfs/bafkreibiyqabm3kl24gcb2oegb7pmwdi6wwrpui62iwb44l7uomnn3lhbi\",\r\n            }}\r\n          />\r\n        </Avatar>\r\n\r\n        <div>\r\n          <TextLink href={profileUrl} ellipsis bold>\r\n            {profile.name || id.split(\".near\")[0]}\r\n          </TextLink>\r\n          <TextLink href={profileUrl} ellipsis>\r\n            @{id}\r\n          </TextLink>\r\n\r\n          {tags.length > 0 && (\r\n            <TagsWrapper>\r\n              <Widget src=\"near/widget/Tags\" props={{ tags, scroll: true }} />\r\n            </TagsWrapper>\r\n          )}\r\n        </div>\r\n      </CardLeft>\r\n\r\n      {/* New Section for Research Topic */}\r\n      <div>\r\n        <strong>Research Topic Selected:</strong>\r\n        <br />\r\n        {link ? (\r\n          <a href={link} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            {topic}\r\n          </a>\r\n        ) : (\r\n          <span>{topic}</span>\r\n        )}\r\n      </div>\r\n\r\n      {!!context.accountId && context.accountId !== accountId && !isHacker && (\r\n        <Widget\r\n          src=\"ndcplug.near/widget/ProfileCard.DAOButton\"\r\n          props={{\r\n            receiver: accountId,\r\n            //   buttonName: \"NFT Partner Request\",\r\n          }}\r\n        />\r\n      )}\r\n      {!!context.accountId && context.accountId !== accountId && (\r\n        <Widget src=\"near/widget/FollowButton\" props={{ accountId: id }} />\r\n      )}\r\n    </Card>\r\n  );\r\n};\r\n\r\nreturn <div>{accounts.map((account) => renderCard(account))}</div>;\r\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/xvii.near/widget/TopicsSelectedPage", "fact_widget_deployments_id": "84cfadbc714a8e9f53273f1643289d49", "inserted_timestamp": "2023-11-25T16:40:27.411Z", "modified_timestamp": "2023-11-25T16:40:27.411Z", "__row_index": 0}