{"tx_hash": "p1C48yFuikpp9Kp9nbpChb51NaSqfu86ZoYikwdrXDJ", "action_id_social": "DuFQt6HDJN9M4PirvMhtRnx4fQusZf8TSBj8iw9cNd3M-0-widget", "block_id": 102014523, "block_timestamp": "2023-09-26T18:29:37.894Z", "signer_id": "xvii.near", "widget_name": "sbt-search", "source_code": "const themeColor = props.themeColor;\nconst generaltheme = {\n  height: \"110px\",\n  align: \"center\",\n  description: \"Explore the status of your SBTS on Near ecosystem.\",\n  brand: \"Im Human Explorer \ud83d\udc4b\",\n  fontsize: \"100\",\n  fontweight: \"25px\",\n  afterbrand: \"\",\n  afterbrandcolor: themeColor?.dynamic_header?.afterbrandcolor || \"#789efb\",\n  fontbrand: \" Arial, sans-serif\",\n  color1brand: themeColor?.dynamic_header?.color1brand || \"#000\",\n  color2brand: themeColor?.dynamic_header?.color2brand || \"#806ce1\",\n  colordescription: themeColor?.dynamic_header?.colordescription || \"#806ce1\",\n  fontsubtitle: \" Arial, sans-serif\",\n  background:\n    themeColor?.dynamic_header?.background ||\n    \"radial-gradient(circle, rgba(210,202,250,1) 0%, rgba(230,230,231,0.01) 0%, rgba(235,238,255,1) 100%, rgba(235,231,253,1) 100%, rgba(255,241,241,1) 100%, rgba(46,52,90,1) 100%);\",\n};\n\nconst queryHashes = [{ id: 1, hash: \"cbcc0950-c11a-46c5-9e86-72eb9cc9566f\" }];\n\nState.init({\n  singer: \"\",\n  data: null,\n  filteredData: [],\n  isLoading: false,\n  error: [],\n});\n\nconst inputHandler = ({ target }) => {\n  const singer = target.value.toLowerCase().trim();\n  State.update({ singer: singer });\n};\nconst onHandelDate = (inputDate) => {\n  let date = new Date(inputDate);\n  let monthNames = [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ];\n  let day = date.getDate();\n  let month = monthNames[date.getMonth()];\n  let year = date.getFullYear();\n  let createdAt;\n  createdAt = day + \" \" + month + \" \" + year;\n  return createdAt;\n};\n\nconst handleData = () => {\n  if (!state.singer.length) {\n    State.update({ error: [...state.error, \"please insert an address\"] });\n    return;\n  }\n  if (state.data === state.singer) {\n    State.update({ error: [...state.error, \"please insert a new address\"] });\n    return;\n  }\n  const result = fetchData(queryHashes[0].hash);\n  if (result.isLoading) {\n    State.update({ isLoading: true, filterData: [] });\n  }\n  if (result.error) {\n    const errors = state.error;\n    errors.push(`error message is : \"${result.error}\"`);\n    State.update({ error: errors, isLoading: false });\n  }\n  if (result.data) {\n    const filteredData = filterData(result.data);\n\n    State.update({ data: state.singer, filteredData, isLoading: false });\n  }\n};\n\nconst filterData = (data) => {\n  return data.filter((row) => row.SINGER === state.singer);\n};\n\nconst fetchData = (hash) => {\n  const data = fetch(\n    `https://api.flipsidecrypto.com/api/v2/queries/${hash}/data/latest`,\n    {\n      subscribe: true,\n      method: \"GET\",\n      headers: {\n        Accept: \"*/*\",\n      },\n    }\n  );\n  const result = {\n    data: (data && data.body) || null,\n    error: (data && !data.ok && (data.status || data.error)) || null,\n    isLoading: !data && !error,\n  };\n  return result;\n};\nif (state.isLoading) {\n  handleData();\n}\n\nif (state.error.length > 0) {\n  function hide() {\n    const errors = state.error;\n    errors.shift();\n    if (errors.length > 0) setTimeout(hide, 2500);\n    State.update({ error: errors });\n  }\n  setTimeout(hide, 2500);\n}\n\nconst Input = styled.input`\ncolor:${themeColor?.search_sbt?.input_text_color};\nbackground-color:${themeColor?.search_sbt?.input_bg};\nborder: 1px solid ${themeColor?.search_sbt?.input_border};\n&:focus{\n  background-color:${themeColor?.search_sbt?.input_bg};\n  color:${themeColor?.search_sbt?.input_text_color};\nborder: 1px solid ${themeColor?.search_sbt?.input_border};\n};\n&:hover{\n  background-color:${themeColor?.search_sbt?.input_bg_hover}\n};\n\n`;\nconst Button = styled.button`\n    color: ${themeColor?.search_sbt?.search_btn_text};\n    font-size: 16px;\n    padding: 0.5rem 1rem;\n    font-weight: 400;\n    background-color: ${themeColor?.search_sbt?.search_btn_bg};\n    &:hover {background-color: ${themeColor?.search_sbt?.search_btn_bg_hover}};\n    border: 1px solid ${themeColor?.search_sbt?.search_btn_bg};\n    box-shadow: 0 2px 0 rgba(0, 0, 0, 0.02);\n    min-height: calc(1.5em + 1rem + 2px);\n    border-radius: 40px;\n    line-height: 29px;\n    letter-spacing: 0.01em;\n`;\nconst Table = styled.table`\n  --bs-table-color: ${themeColor?.search_sbt?.table_color};\n  --bs-table-bg: ${themeColor?.search_sbt?.table_bg};\n  --bs-table-border-color: ${themeColor?.search_sbt?.table_border_color};\n  --bs-table-accent-bg: ${themeColor?.search_sbt?.table_accent_bg};\n  --bs-table-striped-color: ${themeColor?.search_sbt?.table_striped_color};\n  --bs-table-striped-bg:${themeColor?.search_sbt?.table_striped_bg};\n  --bs-table-hover-color: ${themeColor?.search_sbt?.table_hover_color};\n  --bs-table-hover-bg:${themeColor?.search_sbt?.table_hover_bg}\n`;\nreturn (\n  <div className=\"container-fluid py-2 rounded-4\">\n    <div className=\"toast-container position-fixed bottom-0 end-0 p-3\">\n      {state.error.length > 0 &&\n        state.error.map((er) => (\n          <div\n            className=\"toast show align-items-center text-bg-danger border-0\"\n            role=\"alert\"\n            aria-live=\"assertive\"\n            aria-atomic=\"true\"\n          >\n            <div className=\"d-flex\">\n              <div className=\"toast-body\">{er}</div>\n            </div>\n          </div>\n        ))}\n    </div>\n    <div\n      className=\"shadow-sm  rounded-4\"\n      style={{ background: themeColor?.search_sbt?.section_bg }}\n    >\n      <Widget src=\"lord1.near/widget/header-dynamic\" props={generaltheme} />\n    </div>\n    <div className=\"search py-4\">\n      <div className=\"row\">\n        <div className=\"col-8 \">\n          <Input\n            onBlur={inputHandler}\n            defaultValue={state.singer}\n            type=\"input\"\n            className=\"form-control form-control-lg rounded-4\"\n            id=\"address\"\n            placeholder=\"jlw.near\"\n          />\n        </div>\n        <div className=\"col-4 col-lg-auto\">\n          <Button\n            disabled={state.isLoading}\n            onClick={handleData}\n            className=\"btn-lg\"\n            type=\"button\"\n          >\n            {state.isLoading ? (\n              <div className=\"text-center px-4\">\n                <div className=\"spinner-border spinner-border-sm\" role=\"status\">\n                  <span className=\"visually-hidden\">Loading...</span>\n                </div>\n              </div>\n            ) : (\n              \"search\"\n            )}\n          </Button>\n        </div>\n      </div>\n    </div>\n\n    <div\n      style={{ background: themeColor?.search_sbt?.card_bg }}\n      className={`shadow-sm rounded h-100 `}\n    >\n      {!state.isLoading && state.data && (\n        <div\n          style={{ backgroundColor: themeColor?.search_sbt?.table_bg }}\n          className=\"table-responsive\"\n        >\n          <Table\n            style={{}}\n            className=\"table table-hover table-striped table-borderless \"\n          >\n            <thead>\n              <tr>\n                <th className=\"col-1 align-middle\" scope=\"col\">\n                  User\n                </th>\n                <th className=\"col-1 align-middle\" scope=\"col\">\n                  SBT\n                </th>\n                <th className=\"col-1 align-middle\" scope=\"col\">\n                  Class\n                </th>\n                <th className=\"col-1 align-middle\" scope=\"col\">\n                  Token Id\n                </th>\n                <th className=\"col-1 align-middle\" scope=\"col\">\n                  Issuer\n                </th>\n                <th className=\"col-1 align-middle\" scope=\"col\">\n                  Issue date\n                </th>\n                <th className=\"col-1 align-middle\" scope=\"col\">\n                  Expire date\n                </th>\n                <th className=\"col-1 align-middle\" scope=\"col\">\n                  Date to deadline\n                </th>\n                <th className=\"col-1 align-middle\" scope=\"col\">\n                  Tx Link\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {state.filteredData.length === 0 && (\n                <tr>\n                  <td className=\"text-center p-4\" colspan=\"10\">\n                    No same signer\n                  </td>\n                </tr>\n              )}\n              {state.filteredData.length >= 1 &&\n                state.filteredData.map((row) => {\n                  return (\n                    <tr key={row.TX_HASH}>\n                      <td className=\"align-middle \">\n                        <Link\n                          href={`/mob.near/widget/ProfilePage?accountId=${row.SINGER}`}\n                        >\n                          <Widget\n                            src=\"mob.near/widget/ProfileImage\"\n                            props={{ accountId: row.SINGER }}\n                          />\n                        </Link>\n                      </td>\n                      <td className=\"align-middle\" style={{ color: \"#806ce1\" }}>\n                        {row.SBT_CLASS}\n                      </td>\n                      <td className=\"align-middle\">{row.CLASS}</td>\n                      <td className=\"align-middle\" style={{ color: \"#EA1179\" }}>\n                        {row.TOKEN_ID}\n                      </td>\n                      <td className=\"align-middle\" style={{ color: \"#806ce1\" }}>\n                        {row.SIGNER_ID}\n                      </td>\n                      <td className=\"align-middle\" style={{ color: \"#806ce1\" }}>\n                        {onHandelDate(row.ISSUED_AT)}\n                      </td>\n                      <td\n                        className=\"align-middle \"\n                        style={{ color: \"#806ce1\" }}\n                      >\n                        {onHandelDate(row.EXPIRES_AT)}\n                      </td>\n                      <td className=\"align-middle \">\n                        <Widget\n                          src=\"lord1.near/widget/progress-bar\"\n                          props={{\n                            inside: `${row.DURATION}` - `${row.TO_DEADLINE}`,\n                            total: `${row.DURATION}`,\n                            currTheme: \"#806ce1\",\n                            widgetBarWidth: \"100\",\n                            backgroundcolor: \"#d2cafa\",\n                            gradiantcolorleft: \"#806ce1\",\n                            gradiantcolorright: \"#EA1179\",\n                            visibilitydivision: \"visible\",\n                            visibilitypercent: \"hidden\",\n                          }}\n                        />\n                      </td>\n                      <td className=\"align-middle text-center\">\n                        <a\n                          className=\"d-inline-block\"\n                          href={`https://nearblocks.io/txns/${row.TX_HASH}`}\n                          target=\"_blank\"\n                        >\n                          <svg\n                            width=\"20\"\n                            height=\"20\"\n                            viewBox=\"0 0 20 20\"\n                            fill=\"none\"\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                          >\n                            <path\n                              d=\"M12.9167 5.25001L12.9167 1.75001M12.9167 1.75001H9.41674M12.9167 1.75001L7.66675 7M6.50008 1.75H5.21675C4.23666 1.75 3.74661 1.75 3.37226 1.94074C3.04298 2.10852 2.77527 2.37623 2.60749 2.70552C2.41675 3.07986 2.41675 3.56991 2.41675 4.55V9.45C2.41675 10.4301 2.41675 10.9201 2.60749 11.2945C2.77527 11.6238 3.04298 11.8915 3.37226 12.0593C3.74661 12.25 4.23666 12.25 5.21675 12.25H10.1167C11.0968 12.25 11.5869 12.25 11.9612 12.0593C12.2905 11.8915 12.5582 11.6238 12.726 11.2945C12.9167 10.9201 12.9167 10.4301 12.9167 9.45V8.16667\"\n                              stroke=\"#806ce1\"\n                              stroke-width=\"2.5\"\n                              stroke-linecap=\"round\"\n                              stroke-linejoin=\"round\"\n                            />\n                          </svg>\n                        </a>\n                      </td>\n                    </tr>\n                  );\n                })}\n            </tbody>\n          </Table>\n        </div>\n      )}\n    </div>\n  </div>\n);\n// const props = {\n//   themeColor: {\n//     dynamic_header: {\n//       afterbrandcolor: \"#789efb\",\n//       color1brand: \"#000\",\n//       color2brand: \"#806ce1\",\n//       colordescription: \"#806ce1\",\n//       background:\n//         \"radial-gradient(circle, rgba(210,202,250,1) 0%, rgba(230,230,231,0.01) 0%, rgba(235,238,255,1) 100%, rgba(235,231,253,1) 100%, rgba(255,241,241,1) 100%, rgba(46,52,90,1) 100%);\",\n//     },\n//     search_sbt: {\n//       card_bg: \"rgb(49, 62, 89)\",\n//       search_btn_bg: \"rgb(49,62,89)\",\n//       search_btn_bg_hover: \"rgba(49,62,89,0.8)\",\n//       search_btn_text: \"rgb(255,255,255)\",\n//       input_bg: \"rgb(49,62,89)\",\n//       input_bg_hover: \"rgba(49,62,89,0.8)\",\n//       input_text_color: \"rgb(255,255,255)\",\n//       input_border: \"rgba(49,62,89,0.8)\",\n//       table_bg: \"transparent\",\n//       table_color: \"rgb(255,255,255)\",\n//       table_border_color: \"\",\n//       table_accent_bg: \"\",\n//       table_striped_color: \"rgb(255,255,255)\",\n//       table_striped_bg: \"\",\n//       table_hover_color: \"rgb(255,255,255)\",\n//       table_hover_bg: \"\",\n//     },\n//   },\n// };\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/xvii.near/widget/sbt-search", "fact_widget_deployments_id": "4f1f413f73bd44b414e672e52fb2ff6f", "inserted_timestamp": "2023-09-26T20:29:43.729Z", "modified_timestamp": "2023-09-26T20:29:43.729Z", "__row_index": 1}