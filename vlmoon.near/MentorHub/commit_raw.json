{"tx_hash": "BN43PGyg9N1SM1LsekJaDm94gjg1UBJaqtoMavu3SgSv", "action_id_social": "DJtrJdA5xVdqnPjfFah39Ua65ZgnAHECDCGe5tdyzTJ1-0-widget", "block_id": 116241423, "block_timestamp": "2024-04-06T11:15:21.296Z", "signer_id": "vlmoon.near", "widget_name": "MentorHub", "source_code": "State.init({\r\n  accountId: \"\",\r\n  mentorPhoto: \"\",\r\n  mentorName: \"Mentor Name\",\r\n  mentorPoints: 0,\r\n  studentsCounter: 0,\r\n  students: [],\r\n  studentRequests: [],\r\n  currentAppThemeMode: \"lightMode\",\r\n  currentRoute: \"myInfoPage\",\r\n  profileName: \"\",\r\n  profileDiscription: \"\",\r\n  creatProfileName: \"\",\r\n  creatProfileDiscription: \"\",\r\n  addNewStudent: \"\",\r\n  editDescription: \"\",\r\n  ifAddStudent: true,\r\n  studentArray: [],\r\n  arreyWhitIndexForAddStudent: [],\r\n  heashForDeletnumb: {},\r\n  flagForFindStdudentByID: false,\r\n  idFindStudent: \"\",\r\n  vrifyOurStudent: \"\",\r\n  isModalOpen: false,\r\n});\r\n\r\nconst TecherPossibilities = {\r\n  init: () => {\r\n    const accountId = context.accountId;\r\n    if (!accountId) {\r\n      return \"No account ID\";\r\n    }\r\n    const profile = Social.getr(`${state.accountId}/profile`);\r\n    State.update({\r\n      accountId: accountId,\r\n      profileName: profile.name,\r\n      profileDiscription: profile.discription,\r\n    });\r\n  },\r\n  initProfile: () => {\r\n    Social.set({\r\n      profile: {\r\n        name: state.creatProfileName,\r\n        discription: state.creatProfileDiscription,\r\n      },\r\n    });\r\n  },\r\n  initNameProfile: () => {\r\n    Social.set({\r\n      profile: {\r\n        name: state.creatProfileName,\r\n      },\r\n    });\r\n  },\r\n  initDiscriptionProfile: () => {\r\n    Social.set({\r\n      profile: {\r\n        discription: state.creatProfileDiscription,\r\n      },\r\n    });\r\n  },\r\n  getStudent: (pageNumber, pageSize) => {\r\n    // \u0420\u0430\u0441\u0441\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u043c \u043d\u0430\u0447\u0430\u043b\u044c\u043d\u044b\u0439 \u0438 \u043a\u043e\u043d\u0435\u0447\u043d\u044b\u0439 \u0438\u043d\u0434\u0435\u043a\u0441\u044b \u0434\u043b\u044f \u043f\u0430\u0433\u0438\u043d\u0430\u0446\u0438\u0438\r\n    const startIndex = (pageNumber - 1) * pageSize;\r\n    const endIndex = startIndex + pageSize;\r\n    let studentArray = [];\r\n    let arreyWhitIndexForAddStudent = [];\r\n    let heashForDeletnumb = {};\r\n\r\n    for (let i = startIndex; i < endIndex; i++) {\r\n      const student = Social.get(`maierr.near/mystudents/${i}`);\r\n      if (student) {\r\n        studentArray.push(student);\r\n        heashForDeletnumb[student] = i;\r\n      } else {\r\n        arreyWhitIndexForAddStudent.push(i);\r\n      }\r\n    }\r\n\r\n    State.update({\r\n      studentArray: studentArray,\r\n      arreyWhitIndexForAddStudent: arreyWhitIndexForAddStudent,\r\n      heashForDeletnumb: heashForDeletnumb,\r\n    });\r\n  },\r\n  updateDiscription: (student) => {\r\n    Near.call([\r\n      {\r\n        contractName: \"social.near\",\r\n        methodName: \"set\",\r\n        args: {\r\n          data: {\r\n            [student]: {\r\n              profile: {\r\n                discription: state.editDescription,\r\n              },\r\n            },\r\n          },\r\n        },\r\n        deposit: 1,\r\n        gas: Big(10).pow(12).mul(50),\r\n      },\r\n    ]);\r\n  },\r\n  deleteStudent: (student) => {\r\n    const indexForDeleteNumb = state.heashForDeletnumb[student];\r\n    Social.set({\r\n      mystudents: {\r\n        [indexForDeleteNumb]: null,\r\n      },\r\n      myStudentsForFind: {\r\n        [student]: false,\r\n      },\r\n    });\r\n  },\r\n  addStudent: () => {\r\n    const newStudent = state.addNewStudent;\r\n    const ifAlreadyHaveStudent = Social.get(\r\n      `maierr.near/myStudentsForFind/${newStudent}`\r\n    );\r\n    const sliceForVerification = newStudent.slice(\r\n      newStudent.length - 5,\r\n      newStudent.length\r\n    );\r\n    if (sliceForVerification == \".near\" && ifAlreadyHaveStudent != `true`) {\r\n      let indexForAddStudent = 0;\r\n      if (\r\n        state.studentArray.length > 0 &&\r\n        state.arreyWhitIndexForAddStudent.length > 0\r\n      ) {\r\n        indexForAddStudent = state.arreyWhitIndexForAddStudent[0];\r\n      } else if (\r\n        state.studentArray.length > 0 &&\r\n        state.arreyWhitIndexForAddStudent.length == 0\r\n      ) {\r\n        while (state.arreyWhitIndexForAddStudent.length == 0) {\r\n          const student = Social.get(\r\n            `maierr.near/mystudents/${indexForAddStudent}`\r\n          );\r\n          if (!student) {\r\n            State.update({\r\n              arreyWhitIndexForAddStudent: student,\r\n            });\r\n            break;\r\n          }\r\n          indexForAddStudent++;\r\n        }\r\n      } else if (\r\n        state.studentArray.length == 0 &&\r\n        !state.arreyWhitIndexForAddStudent.length == 0\r\n      ) {\r\n        indexForAddStudent = 0;\r\n      }\r\n      Social.set({\r\n        mystudents: {\r\n          [indexForAddStudent]: state.addNewStudent,\r\n        },\r\n        myStudentsForFind: {\r\n          [newStudent]: true,\r\n        },\r\n      });\r\n      State.update({\r\n        ifAddStudent: true,\r\n      });\r\n    } else {\r\n      State.update({\r\n        ifAddStudent: false,\r\n      });\r\n    }\r\n  },\r\n  findStudentByID: (idaccound) => {\r\n    const isOurStudent = Social.get(\r\n      `maierr.near/myStudentsForFind/${idaccound}`\r\n    );\r\n    if (isOurStudent == `true`) {\r\n      State.update({\r\n        vrifyOurStudent: idaccound,\r\n      });\r\n    } else {\r\n      State.update({\r\n        vrifyOurStudent: \"\",\r\n      });\r\n    }\r\n  },\r\n};\r\n\r\nTecherPossibilities.init();\r\nTecherPossibilities.getStudent(1, 10);\r\n\r\nfunction descriptionForStudent(account_id) {\r\n  const discriprionalIN = Social.getr(`${account_id}/profile`);\r\n  return discriprionalIN.discription;\r\n}\r\n\r\nconst FloatingActionButton = ({ onClick }) => {\r\n  return (\r\n    <FloatingButton onClick={onClick}>\r\n      <i className=\"fa fa-plus\">+</i>\r\n    </FloatingButton>\r\n  );\r\n};\r\n\r\nconst openModal = () => {\r\n  State.update({\r\n    isModalOpen: true,\r\n  });\r\n};\r\n\r\nconst Modal = ({ closeModal }) => {\r\n  return (\r\n    <ModalContainer>\r\n      <ModalContent>\r\n        <h3>Add New Student</h3>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder=\"For add, input account_ID student\"\r\n          onBlur={(e) => State.update({ addNewStudent: e.target.value })}\r\n        />\r\n        <Button onClick={TecherPossibilities.addStudent}>Add</Button>\r\n        {!state.ifAddStudent && <h3>Some gone wrong. Not add</h3>}\r\n        <Button onClick={closeModal}>Close</Button>\r\n      </ModalContent>\r\n    </ModalContainer>\r\n  );\r\n};\r\n\r\n//UI Kit Theme\r\nconst appTheme = {\r\n  colors: () => {\r\n    const currentThemeMode = state.currentAppThemeMode;\r\n    const colors =\r\n      currentThemeMode === \"lightMode\"\r\n        ? {\r\n            standartText: \"#000000\",\r\n            backgroundColor:\r\n              \"linear-gradient(-45deg, #5F8AFA, #FFFFFF, #FFFFFF, #FFFFFF, #A463B0)\",\r\n            primary: \"#000000\",\r\n            secondary: \"rgba(255, 0, 0, 0)\",\r\n            textBlack: \"#000000\",\r\n            textWhite: \"#FFFFFF\",\r\n          }\r\n        : {\r\n            standartText: \"#FFFFFF\",\r\n            backgroundColor: \"#333333\",\r\n            primary: \"#000000\",\r\n            secondary: \"#FFFFFF\",\r\n            textBlack: \"#000000\",\r\n            textWhite: \"#FFFFFF\",\r\n          };\r\n\r\n    return colors;\r\n  },\r\n  fontSizes: {\r\n    h1: \"1.25em\",\r\n    h2: \"2em\",\r\n    h3: \"1.75em\",\r\n    h4: \"1.5em\",\r\n    h5: \"1.25em\",\r\n    h6: \"1em\",\r\n    body: \"1em\",\r\n    b1: \"1em\",\r\n    b2: \"0.9em\",\r\n    b3: \"0.8em\",\r\n  },\r\n  margins: {\r\n    small: \"0.25em\",\r\n    medium: \"0.5em\",\r\n    large: \"1em\",\r\n    xlarge: \"2em\",\r\n  },\r\n  paddings: {\r\n    small: \"0.25em\",\r\n    medium: \"0.5em\",\r\n    large: \"1em\",\r\n    xlarge: \"2em\",\r\n  },\r\n  borderRadius: {\r\n    small: \"4px\",\r\n    medium: \"8px\",\r\n    large: \"20px\",\r\n    circle: \"50%\",\r\n  },\r\n};\r\nconst appThemeService = {\r\n  switchToLightTheme: () =>\r\n    State.update({\r\n      currentAppThemeMode: \"lightMode\",\r\n    }),\r\n  switchToDarkTheme: () =>\r\n    State.update({\r\n      currentAppThemeMode: \"darkMode\",\r\n    }),\r\n  getTheme: () => appTheme,\r\n};\r\n\r\nconst Button = styled.button`\r\n  background: ${appTheme.colors().primary};\r\n  color: ${appTheme.colors().textWhite};\r\n  font-size: ${appTheme.fontSizes.h6};\r\n  margin: ${appTheme.margins.small};\r\n  padding: ${appTheme.paddings.medium};\r\n  width: 100%;\r\n  border: none;\r\n  border-radius: ${appTheme.borderRadius.large};\r\n  align-self: center;\r\n  \r\n`;\r\nconst GlobalContainer = styled.div`\r\n  font-family: 'Manrope', sans-serif;\r\n  margin: auto;\r\n  padding: 2rem; \r\n  background: linear-gradient(-45deg, #5F8AFA, #FFFFFF, #FFFFFF, #FFFFFF, #A463B0); /* \u041b\u0456\u043d\u0456\u0439\u043d\u0438\u0439 \u0433\u0440\u0430\u0434\u0456\u0454\u043d\u0442 */\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center; \r\n  align-items: center;\r\n  padding: ${appTheme.margins.xlarge};\r\n`;\r\nconst Body = styled.div`\r\n  display: flex;\r\n  width : 100%;\r\n  height : 100%;\r\n  flex-direction: column;\r\n  background-color: ${appTheme.colors().backgroundColor};\r\n  align-items: center; \r\n`;\r\nconst NavigationBar = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center; \r\n  padding : ${appTheme.paddings.large};\r\n  background-color: ${appTheme.colors().backgroundColor};\r\n  justify-content: center;\r\n\r\n  button {  \r\n    background: ${appTheme.colors().secondary};\r\n    color: ${appTheme.colors().primary};\r\n    font-size: ${appTheme.fontSizes.h5};\r\n    text-transform: uppercase;\r\n  }\r\n\r\n  .active {\r\n    background-color: ${appTheme.colors().secondary};\r\n    color: ${appTheme.colors().primary};\r\n    font-weight: bold;\r\n  }\r\n`;\r\n\r\nconst ProfileTab = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: ${appTheme.colors().backgroundColor};\r\n  justify-content: center;\r\n  align-items: center; \r\n`;\r\nconst Card = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  gap: 20px;\r\n  width: 100%;\r\n  border-radius: 12px;\r\n  background: #fff;\r\n  border: 1px solid #eceef0;\r\n  box-shadow: 0px 1px 3px rgba(16, 24, 40, 0.1),\r\n    0px 1px 2px rgba(16, 24, 40, 0.06);\r\n  overflow: hidden;\r\n  padding: 16px;\r\n`;\r\nconst FloatingButton = styled.button`\r\n  font-family: 'Inter', sans-serif;\r\n  position: fixed;\r\n  bottom: 20px;\r\n  right: 20px;\r\n  background-color: #000;\r\n  color: #fff;\r\n  border: none;\r\n  border-radius: 50%;\r\n  width: 50px;\r\n  height: 50px;\r\n  font-size: 24px;\r\n  cursor: pointer;\r\n  box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 999;\r\n`;\r\nconst ModalContainer = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.7); \r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\nconst ModalContent = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 15px;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  gap: 10px;\r\n  border-radius: 12px;\r\n  background: #fff;\r\n  border: 1px solid #eceef0;\r\n  boxShadow:\r\n    0px 1px 3px rgba(16, 24, 40, 0.1), 0px 1px 2px rgba(16, 24, 40, 0.06);\r\n  overflow: hidden;\r\n  padding: 16px;\r\n`;\r\nconst uiKitComponents = {\r\n  button: Button,\r\n  body: Body,\r\n  navigationBar: NavigationBar,\r\n  profileTab: ProfileTab,\r\n};\r\n\r\nconst routes = {\r\n  moduleA: \"vlmoon.near/widget/BOSModuleA\",\r\n  moduleB: \"vlmoon.near/widget/BOSModuleB\",\r\n  moduleC: \"vlmoon.near/widget/BOSModuleC\",\r\n  moduleD: \"vlmoon.near/widget/BOSModuleD\",\r\n};\r\nfunction navigateToModule(moduleRoute) {\r\n  State.update({\r\n    currentRoute: moduleRoute,\r\n  });\r\n}\r\nconst routesNavigator = {\r\n  myInfoPage: () => navigateToModule(\"myInfoPage\"),\r\n  studentsPage: () => navigateToModule(\"studentsPage\"),\r\n  myTeachersPage: () => navigateToModule(\"myTeachersPage\"),\r\n  myEventsPage: () => navigateToModule(\"myEventsPage\"),\r\n  myTasksPage: () => navigateToModule(\"myTasksPage\"),\r\n};\r\n\r\nfunction getModuleDependencies(moduleRoute) {\r\n  if (moduleRoute === \"myInfoPage\") {\r\n    return [\"myInfoPage\"];\r\n  } else if (moduleRoute === \"studentsPage\") {\r\n    return [\"studentsPage\"];\r\n  } else if (moduleRoute === \"myTeachersPage\") {\r\n    return [\"myTeachersPage\"];\r\n  } else if (moduleRoute === \"myEventsPage\") {\r\n    return [\"myEventsPage\"];\r\n  } else if (moduleRoute === \"myTasksPage\") {\r\n    return [\"myTasksPage\"];\r\n  }\r\n}\r\nconst dependencies = getModuleDependencies(state.currentRoute);\r\n\r\n//Pages\r\nconst pages = {\r\n  myInfoPage: (\r\n    <ProfileTab>\r\n      <h1>My Information</h1>\r\n      <Card>\r\n        <Widget src=\"near/widget/AccountProfile\" />\r\n      </Card>\r\n    </ProfileTab>\r\n  ),\r\n\r\n  studentsPage: (\r\n    <>\r\n      <h1>My Students</h1>\r\n\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder=\"Find student\"\r\n          onBlur={(e) => State.update({ idFindStudent: e.target.value })}\r\n        />\r\n\r\n        <Button\r\n          onClick={() => {\r\n            TecherPossibilities.findStudentByID(state.idFindStudent);\r\n          }}\r\n        >\r\n          Find\r\n        </Button>\r\n      </div>\r\n      {state.vrifyOurStudent && (\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            margin: \"15px\",\r\n            justifyContent: \"space-around\",\r\n          }}\r\n        >\r\n          <div>\r\n            <Widget\r\n              src=\"near/widget/AccountProfile\"\r\n              props={{ accountId: state.vrifyOurStudent }}\r\n            />\r\n          </div>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Edit description\"\r\n            onBlur={(e) => State.update({ editDescription: e.target.value })}\r\n          />\r\n          <div>\r\n            <h4>{descriptionForStudent(state.vrifyOurStudent)}</h4>\r\n          </div>\r\n          <div>\r\n            <Button\r\n              onClick={() => {\r\n                TecherPossibilities.deleteStudent(state.vrifyOurStudent);\r\n              }}\r\n            >\r\n              Delete\r\n            </Button>\r\n            <Button\r\n              onClick={() => {\r\n                TecherPossibilities.updateDiscription(state.vrifyOurStudent);\r\n              }}\r\n            >\r\n              Edit\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      )}\r\n      <div style={{ display: \"flex\", margin: \"15px\", flexDirection: \"column\" }}>\r\n        {state.studentArray.map((student) => (\r\n          <Card key={student} style={{ marginBottom: \"10px\" }}>\r\n            <div>\r\n              <Widget\r\n                src=\"near/widget/AccountProfile\"\r\n                props={{ accountId: student }}\r\n              />\r\n            </div>\r\n            <div>\r\n              {state.selectedStudent === student ? (\r\n                <div>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Edit description\"\r\n                    onBlur={(e) =>\r\n                      State.update({ editDescription: e.target.value })\r\n                    }\r\n                  />\r\n                  <div>\r\n                    <h4>{descriptionForStudent(student)}</h4>\r\n                  </div>\r\n                  <div>\r\n                    <Button\r\n                      onClick={() => {\r\n                        TecherPossibilities.deleteStudent(student);\r\n                      }}\r\n                    >\r\n                      Delete\r\n                    </Button>\r\n                    <Button\r\n                      onClick={() => {\r\n                        TecherPossibilities.updateDiscription(student);\r\n                      }}\r\n                    >\r\n                      Edit\r\n                    </Button>\r\n                  </div>\r\n                  <Button\r\n                    onClick={() => State.update({ selectedStudent: null })}\r\n                  >\r\n                    Back\r\n                  </Button>\r\n                </div>\r\n              ) : (\r\n                <Button\r\n                  onClick={() => State.update({ selectedStudent: student })}\r\n                >\r\n                  More Info\r\n                </Button>\r\n              )}\r\n            </div>\r\n          </Card>\r\n        ))}\r\n      </div>\r\n      <FloatingActionButton onClick={openModal} />\r\n      {state.isModalOpen && (\r\n        <Modal closeModal={() => State.update({ isModalOpen: false })} />\r\n      )}\r\n    </>\r\n  ),\r\n  myTeachersPage: (\r\n    <>\r\n      <h1>My Teachers</h1>\r\n    </>\r\n  ),\r\n  myEventsPage: (\r\n    <ProfileTab>\r\n      <h1>My Events</h1>\r\n    </ProfileTab>\r\n  ),\r\n  myTasksPage: (\r\n    <ProfileTab>\r\n      <h1>My Tasks</h1>\r\n    </ProfileTab>\r\n  ),\r\n};\r\n//\r\n\r\nif (!state.profileName && !state.profileDiscription) {\r\n  return (\r\n    <>\r\n      <uiKitComponents.body>\r\n        <h1>Mentor HUB</h1>\r\n        <h2>\r\n          You don't have a profile, if you want to continue, you have to create\r\n          a profile\r\n        </h2>\r\n        <h3>Input your name:</h3>\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            onBlur={(e) => State.update({ creatProfileName: e.target.value })}\r\n          />\r\n        </div>\r\n        <h2>Hello, {state.creatProfileName}</h2>\r\n        <h3>Input your discription</h3>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          onBlur={(e) =>\r\n            State.update({ creatProfileDiscription: e.target.value })\r\n          }\r\n        />\r\n        <h2>Your discriprional: {state.creatProfileDiscription}</h2>\r\n        <div\r\n          style={{\r\n            display: flex,\r\n            margin: \"0px 10px\",\r\n            alignItems: center,\r\n          }}\r\n        >\r\n          <Button onClick={TecherPossibilities.initProfile}>Save change</Button>\r\n        </div>\r\n      </uiKitComponents.body>\r\n    </>\r\n  );\r\n}\r\n\r\nif (!state.profileName) {\r\n  return (\r\n    <>\r\n      <uiKitComponents.body>\r\n        <h1>Mentor HUB</h1>\r\n        <h2>\r\n          You don't have a name of profile, if you want to continue, you have to\r\n          create a name.\r\n        </h2>\r\n        <h3>Input your name:</h3>\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            onBlur={(e) => State.update({ creatProfileName: e.target.value })}\r\n          />\r\n        </div>\r\n        <h2>Hello, {state.creatProfileName}</h2>\r\n        <div\r\n          style={{\r\n            display: flex,\r\n            margin: \"0px 10px\",\r\n            alignItems: center,\r\n          }}\r\n        >\r\n          <Button onClick={TecherPossibilities.initNameProfile}>\r\n            Save change\r\n          </Button>\r\n        </div>\r\n      </uiKitComponents.body>\r\n    </>\r\n  );\r\n}\r\nif (!state.profileDiscription) {\r\n  return (\r\n    <>\r\n      <uiKitComponents.body>\r\n        <h1>Mentor HUB</h1>\r\n        <h2>\r\n          You don't have a description, if you want to continue, you have to\r\n          create a description\r\n        </h2>\r\n        <h3>Write your description</h3>\r\n        <br />\r\n\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder=\"Description\"\r\n          onBlur={(e) =>\r\n            State.update({ creatProfileDiscription: e.target.value })\r\n          }\r\n        />\r\n        <br />\r\n        <h2>Description: {state.creatProfileDiscription}</h2>\r\n        <div\r\n          style={{\r\n            display: flex,\r\n            margin: \"0px 10px\",\r\n            alignItems: center,\r\n          }}\r\n        >\r\n          <Button\r\n            style={{\r\n              backgroundColor: \"black\",\r\n            }}\r\n            onClick={TecherPossibilities.initDiscriptionProfile}\r\n          >\r\n            Confirm\r\n          </Button>\r\n        </div>\r\n      </uiKitComponents.body>\r\n    </>\r\n  );\r\n}\r\n//if (!state.TecherPossibilities.addStudent) {\r\n//return (\r\n// <>\r\n// <uiKitComponents.body>\r\n//  <h1>Mentor HUB</h1>\r\n//<h2>\r\n//    You have been added to the list of students\r\n//    Please confirm your registration for the training on MentorHub\r\n//</h2>\r\n//  <h3>If you agree, click approve</h3>\r\n//  <br />\r\n//    <Button\r\n//     style={{\r\n//      backgroundColor: \"black\",\r\n//    }}\r\n//    onClick={}\r\n//   >\r\n//    Approve\r\n//  </Button>\r\n//</uiKitComponents.body>\r\n//</>\r\n//);\r\n//}\r\nreturn (\r\n  <GlobalContainer>\r\n    <uiKitComponents.profileTab>\r\n      <h3>Mentor HUB</h3>\r\n\r\n      <h4>Make the world around you the better place</h4>\r\n      <Widget\r\n        src=\"mob.near/widget/ProfileImage\"\r\n        props={{\r\n          accountId,\r\n          style: { width: \"7rem\", height: \"7rem\" },\r\n          className: \"mb-2\",\r\n          imageClassName: \"rounded-circle w-100 h-100 img-thumbnail d-block\",\r\n          thumbnail: false,\r\n        }}\r\n      />\r\n      <h4>Hey, {state.profileName}</h4>\r\n    </uiKitComponents.profileTab>\r\n\r\n    <uiKitComponents.body>\r\n      <uiKitComponents.navigationBar>\r\n        <uiKitComponents.button\r\n          className={state.currentRoute === \"myInfoPage\" ? \"active\" : \"\"}\r\n          onClick={routesNavigator.myInfoPage}\r\n        >\r\n          My&Info\r\n        </uiKitComponents.button>\r\n        <uiKitComponents.button\r\n          className={state.currentRoute === \"studentsPage\" ? \"active\" : \"\"}\r\n          onClick={routesNavigator.studentsPage}\r\n        >\r\n          Student\r\n        </uiKitComponents.button>\r\n        <uiKitComponents.button\r\n          className={state.currentRoute === \"myTeachersPage\" ? \"active\" : \"\"}\r\n          onClick={routesNavigator.myTeachersPage}\r\n        >\r\n          Teacher\r\n        </uiKitComponents.button>\r\n        <uiKitComponents.button\r\n          className={state.currentRoute === \"myEventsPage\" ? \"active\" : \"\"}\r\n          onClick={routesNavigator.myEventsPage}\r\n        >\r\n          Event\r\n        </uiKitComponents.button>\r\n        <uiKitComponents.button\r\n          className={state.currentRoute === \"myTasksPage\" ? \"active\" : \"\"}\r\n          onClick={routesNavigator.myTasksPage}\r\n        >\r\n          Task\r\n        </uiKitComponents.button>\r\n      </uiKitComponents.navigationBar>\r\n\r\n      {pages[state.currentRoute]}\r\n    </uiKitComponents.body>\r\n  </GlobalContainer>\r\n);\r\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/vlmoon.near/widget/MentorHub", "fact_widget_deployments_id": "e224fe9fad7e0db4e021584f67abf672", "inserted_timestamp": "2024-04-06T18:51:49.787Z", "modified_timestamp": "2024-04-06T18:51:49.787Z", "__row_index": 3}