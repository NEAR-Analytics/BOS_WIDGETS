{"tx_hash": "8LtNKjfLUNE2EPVn4HieNDDAyLVnDh7mVXjc9mjfFHWG", "action_id_social": "ErWaEv5F7CVMonXT5rxFnjqp3HSiVyRviBvcFXSpjNqA-0-widget", "block_id": 111342898, "block_timestamp": "2024-01-26T07:25:38.501Z", "signer_id": "rodrigos.near", "widget_name": "ImprovementProposals.Proposal.Create.Index", "source_code": "const accountId = props.accountId ?? context.accountId;\nconst authorId = \"rodrigos.near\";\nconst onClose = props.onClose;\nconst edit = props.edit;\nconst mpip_id = props.mpip_id ?? null;\nconst update = props.update;\nconst transactionHashes = props.transactionHashes;\nconst title = props.edit ? \"Edit proposal\" : \"Create Proposal\";\nconst META_VOTE_CONTRACT_ID = \"aaxxii-stake.near\";\nconst contractId = props.contractId || \"ip-aaxxii-test.near\";\nState.init({\n  openModal: false,\n  allVotingPower: null,\n  allVotingPowerIsFetched: false,\n  proposalThresholdReached: false,\n  proposalThresholdReachedIsFetched: false,\n});\nconst yoctoToNear = (amountYocto) =>\n  new Big(amountYocto).div(new Big(10).pow(24)).toFixed(0);\n\nif (transactionHashes) {\n  const statusResult = fetch(\"https://rpc.mainnet.near.org\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      jsonrpc: \"2.0\",\n      id: \"dontcare\",\n      method: \"tx\",\n      params: [transactionHashes, accountId],\n    }),\n  });\n  //check status and open modal\n  console.log(\"status\", statusResult);\n  if (\n    statusResult &&\n    statusResult.ok &&\n    statusResult.body.result.status &&\n    Object.keys(statusResult.body.result.status)[0] == \"SuccessValue\"\n  ) {\n    State.update({ openModal: true });\n    // update({ transactionHashesIsHandled: true });\n  }\n}\n\nif (!state.allVotingPowerIsFetched) {\n  Near.asyncView(\n    META_VOTE_CONTRACT_ID,\n    \"get_all_locking_positions\",\n    { voter_id: context.accountId },\n    \"final\",\n    false\n  ).then((allLockingPositions) => {\n    const voting_power = allLockingPositions.reduce(\n      (accumulator, lockingPosition) =>\n        lockingPosition.is_locked\n          ? accumulator + parseInt(lockingPosition.voting_power)\n          : accumulator,\n      0\n    );\n    const votingPowerYocto = voting_power.toLocaleString(\"fullwide\", {\n      useGrouping: false,\n    });\n    State.update({\n      allVotingPower: yoctoToNear(voting_power),\n      allVotingPowerIsFetched: true,\n      allVotingPowerYocto:\n        yoctoToNear(votingPowerYocto) + \"000000000000000000000000\",\n    });\n  });\n}\n\nif (state.allVotingPowerIsFetched && !state.proposalThresholdReachedIsFetched) {\n  Near.asyncView(\n    contractId,\n    \"check_proposal_threshold\",\n    { voting_power: state.allVotingPowerYocto },\n    \"final\",\n    false\n  ).then((passed) => {\n    State.update({\n      proposalThresholdReached: passed,\n      proposalThresholdReachedIsFetched: true,\n    });\n  });\n}\n\nconst Wrapper = styled.div`\n  margin: 16px auto;\n  width: 100%;\n  max-width: 900px;\n  max-height: 100%;\n  background-color: #fff;\n  border-radius: 16px;\n  padding: 24px;\n  box-shadow: rgba(0, 0, 0, 0.18) 0px 2px 4px;\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n  overflow-y: auto;\n\n  @media (max-width: 600px) {\n    border-radius: 0;\n  }\n\n  p {\n    line-height: 1.4;\n    font-weight: 400;\n    font-size: 15px;\n    color: #868682;\n    margin: 0;\n  }\n\n  h3 {\n    font-weight: 600;\n    font-size: 24px;\n    color: #1b1b18;\n  }\n\n  h5 {\n    font-size: 12px;\n    font-weight: 400;\n    line-height: 1.2;\n    color: #6c757d;\n  }\n`;\n\nconst CloseButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: rgb(27, 27, 24);\n  border-radius: 100px;\n  height: 40px;\n  width: 40px;\n  border: none;\n  margin: 0;\n  font-size: 26px;\n  background-color: rgb(246, 246, 245);\n\n  &:hover {\n    background-color: rgb(243, 243, 242);\n    color: rgb(0, 0, 0);\n  }\n`;\n\nconst FormHeader = styled.h3`\nbox-sizing: border-box;\ndisplay: flex;\nflex-direction: row;\nalign-items: flex-start;\npadding: 0px 0px 0.5em;\nborder-bottom: 1px solid #eceef0;\nfont-style: normal;\nfont-weight: 700;\nfont-size: 1.125em;\nline-height: 1.25em;\ncolor: #000000;\nwidth: 100%;\n`;\n\nif (!state.allVotingPowerIsFetched || !state.proposalThresholdReachedIsFetched)\n  return <>Loading</>;\n\nif (!state.proposalThresholdReached)\n  return (\n    <>Proposal threshold is not reached. You are not able to create proposals</>\n  );\n\nreturn (\n  <Wrapper>\n    <Widget\n      src={`${authorId}/widget/Common.Modal.RedirectModal`}\n      props={{\n        href: `/${authorId}/widget/ImprovementProposals?tab=home`,\n        description: edit\n          ? \"Proposal edited successfully. Going back Home\"\n          : \"Proposal created successfully. Going back Home\",\n        open: state.openModal,\n        accept: () =>\n          update({\n            tab: \"home\",\n          }),\n      }}\n    />\n    <div className=\"d-flex justify-content-between align-items-center\">\n      <FormHeader>{title}</FormHeader>\n    </div>\n    <div className=\"d-flex flex-column gap-2\">\n      <Widget\n        src={`${authorId}/widget/ImprovementProposals.Proposal.Create.Text`}\n        props={{ edit, mpip_id, update }}\n      />\n    </div>\n  </Wrapper>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/rodrigos.near/widget/ImprovementProposals.Proposal.Create.Index", "fact_widget_deployments_id": "7625e53d76b87920bb66b4c91d6a1cc1", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 4}