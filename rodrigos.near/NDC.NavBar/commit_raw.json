{"tx_hash": "7zpa9UL85axRf4hoJ3HXRXGfsxy5z4J3fBS6xSskG3pV", "action_id_social": "5dsGbpiMm6MnvPKaQn9sXGj3NJEJqrPNrmGVg52sQx4W-0-widget", "block_id": 113193937, "block_timestamp": "2024-02-20T02:51:37.220Z", "signer_id": "rodrigos.near", "widget_name": "NDC.NavBar", "source_code": "// NDC.NavBar\n\nconst {\n  handleGoHomeButton,\n  handlePillNavigation,\n  brand,\n  pills,\n  navigationButtons,\n  isTest,\n  displayedTabId,\n  writersWhiteList,\n  handleFilterArticles,\n  filterParameter,\n  handleBackButton,\n  tabs,\n  sbtsNames,\n  widgets,\n} = props;\n\nfunction stateUpdate(obj) {\n  State.update(obj);\n}\n/*\n  ======================================================PILLS EXAMPLE====================================================\n      *Note: the first pill allways has to be the first one displayed*\n      pills: [{\n          id: string,\n          title: string,\n      }]    \n  ============(When modified to be web app we should delete action to replace it with a propper State.update)============\n  \n  ======================================================BRAND EXAMPLE====================================================\n      brand: {\n          homePageId: string,\n          brandName: string,\n          logoHref: string,\n          logoRemWidth: number/string,\n          logoRemHeight: number/string,\n      }\n      \n  ============(When modified to be web app we should delete action to replace it with a propper State.update)============\n  */\n\nconst loggedUserAccountId = context.accountId;\n\n// const canLoggedUserCreateArticle = state.canLoggedUserCreateArticle;\n\nconst logoRemWidth = brand.logoRemWidth\n  ? brand.logoRemWidth + \"rem\"\n  : undefined;\nconst logoRemHeight = brand.logoRemHeight\n  ? brand.logoRemHeight + \"rem\"\n  : undefined;\n\nif (\n  !stateUpdate ||\n  !(displayedTabId + \"\") ||\n  !pills ||\n  (brand && (!brand.logoHref || !(brand.homePageId + \"\")))\n) {\n  const crucialPropMissingMsg = \"The following crucial props are missing:\";\n  return (\n    <div>\n      <h3 className=\"text-danger\">{crucialPropMissingMsg}</h3>\n      <ul>\n        {!stateUpdate && <li className=\"text-danger\">stateUpdate</li>}\n\n        {!(displayedTabId + \"\") && (\n          <li className=\"text-danger\">displayedTabId</li>\n        )}\n\n        {!pills && <li className=\"text-danger\">pills</li>}\n\n        {brand && !brand.logoHref && (\n          <li className=\"text-danger\">brand.logoHref</li>\n        )}\n\n        {brand && !(brand.homePageId + \"\") && (\n          <li className=\"text-danger\">brand.homePageId</li>\n        )}\n      </ul>\n    </div>\n  );\n}\n\n//============================================Styled components==================================================\nconst BrandLogoContainer = styled.div`\n      width: ${logoRemWidth ?? \"4rem\"};\n      height: ${logoRemHeight ?? \"4rem\"};\n      cursor: pointer;\n  `;\n\nconst activeColor = \"#9333EA\";\n\nconst Pill = styled.div`\n      font-family: system-ui;\n      font-weight: 500;\n      font-size: 1.2rem;\n      line-height: 24px;\n      color: black;\n      cursor: pointer;\n      user-select: none;\n  \n      &:hover {\n          color: ${activeColor};\n      }\n  `;\n\nconst StylessATag = styled.a`\n      &:hover {\n          text-decoration: none;\n      }\n  `;\n\nconst BackButton = styled.div`\n    cursor: pointer;\n  `;\n\nconst CallLibrary = styled.div`\n    display: none;\n  `;\n//============================================End styled components==============================================\n\n//=================================================Components====================================================\n\nconst renderButton = (button, i) => {\n  return (\n    <Widget\n      src={widgets.views.standardWidgets.styledComponents}\n      props={{\n        Button: {\n          size: \"big\",\n          onClick: () => {\n            handlePillNavigation(button.id);\n            State.update({\n              selectedButtonIndex: i,\n            });\n          },\n          text: button.title,\n          className:\n            state.selectedButtonIndex == i ? \"primary light\" : \"primary dark\",\n        },\n      }}\n    />\n  );\n};\n//==============================================End components===================================================\n\n//==================================================FUNCTIONS====================================================\n\nfunction realHandleBackButton() {\n  State.update({\n    selectedButtonIndex: undefined,\n  });\n\n  handleBackButton();\n}\n\nfunction realHandleGoHome() {\n  State.update({\n    selectedButtonIndex: undefined,\n  });\n  handleGoHomeButton();\n}\n\n//================================================END FUNCTIONS===================================================\nreturn (\n  <>\n    <div className=\"navbar navbar-expand-md border-bottom mb-3\">\n      <div className=\"container-fluid\">\n        {brand && (\n          <BrandLogoContainer\n            className=\"navbar-brand text-decoration-none\"\n            onClick={handleGoHomeButton}\n          >\n            <Widget\n              src={widgets.views.standardWidgets.navBarImg}\n              props={{\n                // image: metadata.image,\n                className: \"w-100 h-100\",\n                style: {\n                  objectFit: \"cover\",\n                },\n                thumbnail: false,\n                fallbackUrl: brand.logoHref,\n                alt: brand.brandName ?? \"\",\n              }}\n            />\n          </BrandLogoContainer>\n        )}\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-bs-toggle=\"collapse\"\n          data-bs-target=\"#navbarNav\"\n          aria-controls=\"navbarNav\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div\n          className=\"collapse navbar-collapse justify-content-center\"\n          id=\"navbarNav\"\n        >\n          <ul className=\"navbar-nav\">\n            {pills &&\n              pills.map((pill, i) => {\n                return !(pill.id + \"\") || !pill.title ? (\n                  <p className=\"text-danger border\">Pill passed wrong</p>\n                ) : (\n                  <li className=\"nav-item\">\n                    <Pill\n                      style={\n                        pill.id === displayedTabId ? { color: activeColor } : {}\n                      }\n                      onClick={() => {\n                        //First one is set to be de \"Home\" one\n                        if (pill.id == 0) {\n                          const filter = { filterBy: \"\" };\n                          handleFilterArticles(filter);\n                        } else {\n                          handlePillNavigation(pill.id);\n                        }\n                        State.update({\n                          selectedButtonIndex: undefined,\n                        });\n                      }}\n                      className={`nav-link ${\n                        pill.id === displayedTabId\n                          ? \"active text-decoration-underline\"\n                          : \"text-decoration-none\"\n                      } `}\n                    >\n                      {pill.title}\n                    </Pill>\n                  </li>\n                );\n              })}\n            {/*navigationButtons &&\n              loggedUserAccountId &&\n              canLoggedUserCreateArticle &&\n              navigationButtons.map((button, i) => {\n                return !(button.id + \"\") || !button.title ? (\n                  <p className=\"text-danger border\">Button passed wrong</p>\n                ) : (\n                  <div className=\"d-block d-md-none\">\n                    {renderButton(button, i)}\n                  </div>\n                );\n              })*/}\n          </ul>\n        </div>\n        {\n          // navigationButtons &&\n          // loggedUserAccountId &&\n          // canLoggedUserCreateArticle &&\n          // navigationButtons.map((button, i) => {\n          //   return !(button.id + \"\") || !button.title ? (\n          //     <p className=\"text-danger border\">Button passed wrong</p>\n          //   ) : (\n          //     <div className=\"d-none d-md-block\">{renderButton(button, i)}</div>\n          //   );\n          // })\n        }\n      </div>\n    </div>\n\n    {(((filterParameter == \"tag\" || filterParameter == \"author\") &&\n      displayedTabId == tabs.SHOW_ARTICLES_LIST.id) ||\n      displayedTabId == tabs.SHOW_ARTICLE.id ||\n      displayedTabId == tabs.ARTICLE_WORKSHOP.id ||\n      displayedTabId == tabs.SHOW_ARTICLES_LIST_BY_AUTHORS.id) && (\n      <BackButton\n        style={{ cursor: \"pointer\" }}\n        onClick={\n          displayedTabId == tabs.SHOW_ARTICLE.id ||\n          (editArticleData && tabs.ARTICLE_WORKSHOP.id)\n            ? realHandleBackButton\n            : realHandleGoHome\n        }\n        className=\"my-3\"\n      >\n        <i className=\"bi bi-chevron-left mr-2\"></i>\n        Back\n      </BackButton>\n    )}\n  </>\n);\n", "metadata": {"platform": "jutsu.ai"}, "branch": {"draft": null}, "widget_modules_used": null, "widget_url": "https://near.social/#/rodrigos.near/widget/NDC.NavBar", "fact_widget_deployments_id": "73fd15d8f0c0fdcf9cf45434e9161f2f", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 4}