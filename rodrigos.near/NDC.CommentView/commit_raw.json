{"tx_hash": "GVo6g9uhgsCvZWznVtZQVUNb2NNimmPbbEUPHf8Kz7R8", "action_id_social": "Cjeq1tCVmyJoh4ZW6ZP35CGJ8iZHqw8WXRLbpcJRKh5T-0-widget", "block_id": 113194021, "block_timestamp": "2024-02-20T02:53:10.115Z", "signer_id": "rodrigos.near", "widget_name": "NDC.CommentView", "source_code": "// NDC.CommentView\n\nconst {\n  widgets,\n  data,\n  isTest,\n  authorForWidget,\n  isReply,\n  orginalCommentData,\n  canLoggedUserCreateComment,\n  articleSbts,\n  callLibs,\n  baseActions,\n  sharedCommentId,\n  articleToRenderData,\n} = props;\n\nState.init({\n  showModal: false,\n  hasReply: false,\n  functionsToCallByLibrary: {\n    comment: [],\n  },\n});\n\nconst libSrcArray = [widgets.libs.libComment];\n\nfunction stateUpdate(obj) {\n  State.update(obj);\n}\n\nconst CallLibrary = styled.div`\n  display: none;\n`;\n\nconst CommentCard = styled.div`\n    margin-left: ${isReply ? \"2rem\" : \"0\"};\n    display: flex;\n    padding: 14px 16px;\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 12px;\n    border-radius: \"10px\"};\n    background: ${\n      sharedCommentId === data.value.comment.commentId\n        ? \"rgba(194, 205, 255, 0.8)\"\n        : \"#fff\"\n    };\n    width: 100%;\n  `;\n\nconst CommentCardHeader = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    gap: 8px;\n    width: 100%;\n  `;\n\nconst CommentUserContent = styled.div`\n    display: flex;\n    align-items: center;\n    gap: 8px;\n  `;\n\nconst CommentEdition = styled.div`\n    display: flex;\n    align-items: center;\n    gap: 8px;\n  `;\n\nconst ProfileImageComment = styled.img`\n    width: 20px;\n    height: 20px;\n    flex-shrink: 0;\n    border-radius: 20px;\n  `;\n\nconst CommentUser = styled.p`\n    color: #000;\n    font-size: 12px;\n    font-weight: 500;\n    line-height: 120%;\n    margin: 0px;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  `;\n\nconst ReplyCounterDiv = styled.div`\n    display: flex;\n    align-items: center;\n    gap: 4px;\n  `;\n\nconst ReplyIconPurple = styled.img`\n    width: 14px;\n    height: 14px;\n  `;\n\nconst ReplyCounterText = styled.p`\n    color: #000;\n    font-size: 10px;\n    font-weight: 500;\n    margin: 0px;\n  `;\n\nconst CommentCardContent = styled.p`\n    color: #585b5c;\n    font-size: 12px;\n    line-height: 18px;\n    display: flex;\n    flex-direction: column;\n    margin: 0px;\n  `;\n\nconst CommentCardLowerSection = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    gap: 4px;\n    width: 100%;\n  `;\n\nconst TimestampCommentDiv = styled.div`\n    display: flex;\n    align-items: center;\n    gap: 4px;\n    flex: 1 0 0;\n  `;\n\nconst TimestampIconComment = styled.img`\n    width: 12px;\n    height: 12px;\n  `;\n\nconst TimestampTextComment = styled.span`\n    color: #000;\n    font-size: 10px;\n    font-weight: 300;\n    margin: 0px;\n  `;\n\nconst EditedIndication = styled.span`\n    font-size: 12px;\n    margin: 0px;\n`;\n\nconst DeleteCommentButton = styled.button`\n    display: flex;\n    width: 28px;\n    padding: 2px 12px;\n    justify-content: center;\n    align-items: center;\n    gap: 6px;\n    align-self: stretch;\n    border-radius: 4px;\n    border: 1px solid #c23f38;\n    background: #f1d6d5;\n  `;\n\nconst DeleteCommentIcon = styled.img`\n    width: 14px;\n    height: 14px;\n    flex-shrink: 0;\n  `;\n\nconst ShareCommentButton = styled.button`\n    display: flex;\n    width: 28px;\n    height: 28px;\n    padding: 2px 12px;\n    justify-content: center;\n    align-items: center;\n    gap: 6px;\n    border-radius: 4px;\n    border: solid 1px transparent;\n    background-image: linear-gradient(white, white),\n      radial-gradient(circle at top left, #9333ea 0%, #4f46e5 100%);\n    background-origin: border-box;\n    background-clip: padding-box, border-box;\n  `;\n\nconst ShareCommentIcon = styled.img`\n    width: 14px;\n    height: 14px;\n    flex-shrink: 0;\n  `;\n\nconst ReplyCommentButtonDisabled = styled.div`\n    display: flex;\n    padding: 2px 12px;\n    cursor: not-allowed;\n    background: rgb(195, 202, 206);\n    color: rgb(130, 134, 136);\n    border: 0px;\n    align-items: center;\n    gap: 6px;\n    align-self: stretch;\n    border-radius: 4px;\n  `;\n\nconst ReplyCommentButtonActive = styled.div`\n    cursor: pointer;\n    display: flex;\n    padding: 2px 12px;\n    align-items: center;\n    gap: 6px;\n    align-self: stretch;\n    border-radius: 4px;\n    background: var(--buttons-yellow-default, #ffd50d);\n  `;\n\nconst ReplyCommentText = styled.p`\n    color: var(--primary-black, #000);\n    font-size: 12px;\n    font-weight: 500;\n    line-height: 24px;\n    margin: 0px;\n  `;\n\nconst CommentReplySeparator = styled.hr`\n    height: 0px;\n    margin: 16px 0 16px 0;\n    border: 1px solid rgba(208, 214, 217, 1);\n  `;\n\nconst ReplyContainer = styled.div`\n    display: flex;\n    width: 260px;\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 12px;\n    margin: 0 0 0 35px;\n  `;\n\nconst ReplyHeader = styled.div`\n    display: flex;\n    align-items: center;\n    gap: 8px;\n    align-self: stretch;\n  `;\n\nconst ReplyContent = styled.p`\n    color: #828688;\n    font-size: 12px;\n    line-height: 120%;\n    margin: 0px;\n  `;\n\nconst ReplyLowerSection = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    gap: 4px;\n  `;\n\nconst ReplyButtonSection = styled.div`\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    gap: 4px;\n  `;\n\nconst DeleteReplyButton = styled.button`\n    display: flex;\n    padding: 2px 12px;\n    align-items: center;\n    gap: 6px;\n    align-self: stretch;\n    border-radius: 4px;\n    border: 1px solid #c23f38;\n    background: #f1d6d5;\n  `;\n\nconst DeleteReplyText = styled.p`\n    color: #c23f38;\n    font-size: 12px;\n    font-weight: 500;\n    line-height: 24px;\n    margin: 0px;\n  `;\n\nconst AnswerContainer = styled.div`\n    width: 96%;;\n  `;\n\nconst renderDeleteModal = () => {\n  const ModalCard = styled.div`\n    position: fixed;\n    z-index: 1;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background: rgba(0, 0, 0, 0.7);\n  `;\n  const ModalContainer = styled.div`\n    display: flex;\n    width: 400px;\n    padding: 20px;\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 16px;\n    border-radius: 10px;\n    background: #fff;\n    border: 1px solid transparent;\n    margin-left: auto;\n    margin-right: auto;\n    margin-buttom: 50%;\n    @media only screen and (max-width: 480px) {\n      width: 90%;\n    }\n  `;\n  const Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: flex-end;\n    gap: 20px;\n    align-self: stretch;\n  `;\n  const Footer = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: flex-end;\n    justify-content: end;\n    gap: 16px;\n    align-self: stretch;\n  `;\n\n  return (\n    <ModalCard>\n      <ModalContainer>\n        <Container>\n          <h3 className=\"w-100\">Delete this comment?</h3>\n          <Footer>\n            <Widget\n              src={\n                widgets.views.standardWidgets.newStyledComponents.Input.Button\n              }\n              props={{\n                children: \"Yes, delete it\",\n                onClick: deleteCommentListener,\n                variant: \"danger\",\n              }}\n            />\n            <Widget\n              src={\n                widgets.views.standardWidgets.newStyledComponents.Input.Button\n              }\n              props={{\n                children: \"Cancel\",\n                onClick: closeDeleteCommentModal,\n                variant: \"info outline\",\n              }}\n            />\n          </Footer>\n        </Container>\n      </ModalContainer>\n    </ModalCard>\n  );\n};\n\nfunction onCommitDeletArticle() {\n  State.update({\n    showDeleteModal: false,\n  });\n}\n\nfunction closeDeleteCommentModal() {\n  State.update({\n    showDeleteModal: false,\n  });\n}\n\nfunction deleteCommentListener() {\n  //To test without commiting use the next line and comment the rest\n  // onCommit();\n  State.update({ saving: true });\n  const comment = data.value.comment;\n\n  const newLibsCalls = Object.assign({}, state.functionsToCallByLibrary);\n  newLibsCalls.comment.push({\n    functionName: \"deleteComment\",\n    key: \"deletedComment\",\n    props: {\n      comment,\n      articleId: articleToRenderData.id,\n      onCommit: onCommitDeletcomment,\n      onCancel: closeDeleteCommentModal,\n    },\n  });\n\n  State.update({ functionsToCallByLibrary: newLibsCalls });\n}\n\nfunction handleDeleteComment() {\n  State.update({\n    showDeleteModal: true,\n  });\n}\n\nfunction closeModal() {\n  State.update({ showModal: false });\n}\n\nfunction getProperRootId(isEdition) {\n  if (isEdition) {\n    return data.value.comment.rootId;\n  }\n\n  if (data.answers) {\n    return data.value.comment.commentId;\n  } else {\n    return data.value.comment.rootId;\n  }\n}\n\nfunction handleEditComment() {\n  State.update({\n    showModal: true,\n    editionData: data,\n    rootId: getProperRootId(true),\n  });\n}\n\nfunction handleReplyListener() {\n  if (!canLoggedUserCreateComment) {\n    return;\n  }\n\n  State.update({\n    showModal: true,\n    editionData: undefined,\n    rootId: getProperRootId(false),\n  });\n}\n\nreturn (\n  <>\n    {state.showDeleteModal && renderDeleteModal()}\n    <CommentCard id={data.value.comment.commentId}>\n      <CommentCardHeader>\n        <CommentUserContent>\n          <Widget\n            src={widgets.views.standardWidgets.newStyledComponents.Element.User}\n            props={{\n              accountId: data.accountId,\n              options: {\n                showHumanBadge: true,\n                showImage: true,\n                showSocialName: true,\n                shortenLength: 15,\n                size: \"md\",\n              },\n            }}\n          />\n        </CommentUserContent>\n\n        {context.accountId == data.accountId && (\n          <CommentEdition>\n            <Widget\n              src={\n                widgets.views.standardWidgets.newStyledComponents.Input.Button\n              }\n              props={{\n                children: (\n                  <div className=\"d-flex justify-content-center align-items-center\">\n                    <span className=\"mx-2\">Edit</span>\n                    <i className=\"bi bi-pencil\"></i>\n                  </div>\n                ),\n                className: `info outline mt-2`,\n                onClick: () => handleEditComment(),\n              }}\n            />\n            <Widget\n              src={\n                widgets.views.standardWidgets.newStyledComponents.Input.Button\n              }\n              props={{\n                children: (\n                  <div className=\"d-flex justify-content-center align-items-center\">\n                    <i className=\"bi bi-trash\"></i>\n                  </div>\n                ),\n                className: `danger outline mt-2`,\n                onClick: () => handleDeleteComment(),\n              }}\n            />\n          </CommentEdition>\n        )}\n      </CommentCardHeader>\n      <CommentCardContent>\n        <Widget\n          src={widgets.views.standardWidgets.socialMarkdown}\n          props={{\n            text: data.value.comment.text,\n            onHashtag: (hashtag) => (\n              <span\n                key={hashtag}\n                className=\"d-inline-flex\"\n                style={{ fontWeight: 500 }}\n              >\n                <a\n                  href={`https://near.social/${authorForWidget}/widget/${widgets.thisForum}?tagShared=${hashtag}`}\n                  target=\"_blank\"\n                >\n                  #{hashtag}\n                </a>\n              </span>\n            ),\n          }}\n        />\n      </CommentCardContent>\n      <CommentCardLowerSection>\n        <TimestampCommentDiv>\n          <i className=\"bi bi-clock\" />\n          <TimestampTextComment>\n            {new Date(data.value.comment.timestamp).toDateString()}\n          </TimestampTextComment>\n          {data.isEdition && (\n            <EditedIndication className=\"text-muted\">(edited)</EditedIndication>\n          )}\n        </TimestampCommentDiv>\n        <div>\n          {state.showModal && (\n            <Widget\n              src={widgets.views.editableWidgets.addComment}\n              props={{\n                article: articleToRenderData,\n                originalComment: data,\n                widgets,\n                isTest,\n                replyingTo: data.accountId,\n                placement: \"bottom\",\n                onCloseModal: closeModal,\n                callLibs,\n                baseActions,\n                editionData: state.editionData,\n                rootCommentId: state.rootId,\n              }}\n            />\n          )}\n          {articleSbts.length > 0 && (\n            <>\n              <Widget\n                src={\n                  widgets.views.standardWidgets.newStyledComponents.Input.Button\n                }\n                props={{\n                  children: (\n                    <div className=\"d-flex align-items-center justify-content-center\">\n                      <span className=\"mx-1\">Reply</span>\n                      <i className=\"bi bi bi-reply\"></i>\n                    </div>\n                  ),\n                  disabled: !canLoggedUserCreateComment,\n                  size: \"sm\",\n                  className: \"info outline\",\n                  onClick: handleReplyListener,\n                }}\n              />\n            </>\n          )}\n        </div>\n        <Widget\n          src={widgets.views.editableWidgets.reactions}\n          props={{\n            widgets,\n            isTest,\n            authorForWidget,\n            elementReactedId: data.value.comment.commentId,\n            disabled: !canLoggedUserCreateComment,\n            callLibs,\n            baseActions,\n            sbtsNames: articleSbts,\n          }}\n        />\n      </CommentCardLowerSection>\n    </CommentCard>\n    {!isReply && (\n      <>\n        {data.answers.length > 0 && (\n          <i className=\"bi bi-arrow-return-right\"></i>\n        )}\n        {data.answers.map((answer) => {\n          return (\n            <AnswerContainer>\n              <Widget\n                src={widgets.views.editableWidgets.commentView}\n                props={{\n                  widgets,\n                  data: answer,\n                  orginalCommentData: data,\n                  isTest,\n                  authorForWidget,\n                  isReply: true,\n                  canLoggedUserCreateComment,\n                  articleSbts,\n                  callLibs,\n                  baseActions,\n                  sharedCommentId,\n                  articleToRenderData,\n                }}\n              />\n            </AnswerContainer>\n          );\n        })}\n      </>\n    )}\n    <CallLibrary>\n      {libSrcArray.map((src) => {\n        return callLibs(\n          src,\n          stateUpdate,\n          state.functionsToCallByLibrary,\n          { baseAction: baseActions.commentBaseAction },\n          \"NDC.CommentView\"\n        );\n      })}\n    </CallLibrary>\n  </>\n);\n", "metadata": {"platform": "jutsu.ai"}, "branch": {"draft": null}, "widget_modules_used": null, "widget_url": "https://near.social/#/rodrigos.near/widget/NDC.CommentView", "fact_widget_deployments_id": "c64cda447467a1723ab7ad10350e1804", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 3}