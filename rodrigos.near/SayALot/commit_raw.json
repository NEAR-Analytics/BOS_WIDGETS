{"tx_hash": "6E7spCnSb2H5EbqthUzfnLxtQjEunCE3gVL6m7WkG2Jp", "action_id_social": "BPSgUyCzPKbhzMfjTxHB1uZvV4zCndqjcnCkvoDopnUt-0-widget", "block_id": 113194208, "block_timestamp": "2024-02-20T02:56:43.049Z", "signer_id": "rodrigos.near", "widget_name": "SayALot", "source_code": "// SayALot\n\nlet {\n  sharedBlockHeight,\n  tagShared,\n  isTest,\n  accountId,\n  sharedArticleId,\n  sharedCommentId,\n  sharedSearchInputValue,\n  topicShared,\n} = props;\n\nconst initLibsCalls = {\n  SBT: [\n    {\n      functionName: \"getSBTWhiteList\",\n      key: \"sbtWhiteList\",\n      props: {},\n    },\n  ],\n};\n\nState.init({\n  functionsToCallByLibrary: initLibsCalls,\n  usersSBTs: [],\n});\n\nconst usersSBTs = state.usersSBTs;\n\nlet newLibsCalls = state.functionsToCallByLibrary;\n\nState.update({ libsCalls: newLibsCalls });\n\nconst sbtWhiteList = state.sbtWhiteList\n  ? state.sbtWhiteList.map((sbt) => sbt.value)\n  : undefined;\n\nfunction createSbtOptions() {\n  return state.sbtWhiteList;\n}\n\n// const componentsOwner =\n//   \"f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb\";\nconst componentsOwner = \"sayalot.near\";\n\nconst authorForWidget = \"sayalot.near\";\n// const authorForWidget =\n//   \"f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb\";\n// const authorForWidget = \"kenrou-it.near\";\n// const authorForWidget = \"silkking.near\";\n\nconst configWidget = \"SayALot\";\n\nconst widgets = {\n  // thisForum: `${authorForWidget}/widget/${configWidget}`, //////////////////////////////////////////////////////\n  thisForum: `f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb/widget/${configWidget}`, //////////////////////////////////////////////////////\n\n  views: {\n    editableWidgets: {\n      ndcForum: `${componentsOwner}/widget/NDC.Forum`,\n      create: `${componentsOwner}/widget/NDC.Forum.Create`,\n      header: `${componentsOwner}/widget/NDC.NavBar`,\n      showArticlesList: `${componentsOwner}/widget/NDC.Forum.AllArticlesList`,\n      showArticlesListSortedByAuthors: `${componentsOwner}/widget/NDC.AllArticlesSortByAuthors`,\n      articlesByAuthorCard: `${componentsOwner}/widget/NDC.ArticlesByAuthorCard`,\n      generalCard: `${componentsOwner}/widget/NDC.GeneralCard`,\n      articleView: `${componentsOwner}/widget/NDC.ArticleView`,\n      reactions: `${componentsOwner}/widget/NDC.Reactions`,\n      addComment: `${componentsOwner}/widget/NDC.AddComment`,\n      commentView: `${componentsOwner}/widget/NDC.CommentView`,\n      upVoteButton: `${componentsOwner}/widget/NDC.UpVoteButton`,\n      profileShortInlineBlock: `${componentsOwner}/widget/Profile.ShortInlineBlock`,\n      tagsEditor: `${componentsOwner}/widget/TagsEditor`,\n      kanbanBoard: `${componentsOwner}/widget/NDC.KanbanBoard`,\n      compactPost: `${componentsOwner}/widget/NDC.CompactPost`,\n      articleHistory: `${componentsOwner}/widget/NDC.ArticleHistory.Handler`,\n    },\n    standardWidgets: {\n      fasterTextInput: `f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb/widget/fasterTextInput`,\n      markownEditorIframe: `f2bc8abdb8ba64fe5aac9689ded9491ff0e6fdcd7a5c680b7cf364142d1789fb/widget/MarkdownEditorIframe`,\n      styledComponents: \"rubycop.near/widget/NDC.StyledComponents\",\n      newStyledComponents: {\n        Element: {\n          Badge: \"nearui.near/widget/Element.Badge\",\n          User: \"nearui.near/widget/Element.User\",\n        },\n        Feedback: {\n          Spinner: \"nearui.near/widget/Feedback.Spinner\",\n        },\n        Input: {\n          Button: \"nearui.near/widget/Input.Button\",\n          Checkbox: \"nearui.near/widget/Input.Checkbox\",\n          Select: \"nearui.near/widget/Input.Select\",\n        },\n      },\n      socialMarkdown: \"mob.near/widget/SocialMarkdown\",\n      profileOverlayTrigger: \"mob.near/widget/Profile.OverlayTrigger\",\n      profileImage: \"mob.near/widget/ProfileImage\",\n      wikiOnSocialDB_TooltipProfiles: `testwiki.near/widget/WikiOnSocialDB_TooltipProfiles`,\n      navBarImg: \"mob.near/widget/Image\",\n    },\n  },\n\n  libs: {\n    libSBT: `sayalot.near/widget/lib.SBT`,\n    libComment: `sayalot.near/widget/lib.comment`,\n    libArticle: `sayalot.near/widget/lib.article`,\n    libEmojis: `sayalot.near/widget/lib.emojis`,\n    libUpVotes: `sayalot.near/widget/lib.upVotes`,\n    libNotifications: `sayalot.near/widget/lib.notifications`,\n  },\n};\n\nconst libSrcArray = [widgets.libs.libSBT];\n\nconst brand = {\n  brandName: \"Say a lot\",\n  logoHref:\n    \"https://ipfs.near.social/ipfs/bafkreiaqxa4st4vp4rtq2iyobdgqe5tpfg55mmyvfg25upd2qplcxylyfi\",\n  logoRemWidth: 6,\n  logoRemHeight: 6,\n};\n\nconst baseActions = {\n  commentBaseAction: \"sayALotComment\",\n  articlesBaseAction: \"sayALotArticle\",\n  upVoteBaseAction: \"sayALotUpVote\",\n  reactionBaseAction: \"sayALotReaction\",\n};\n\nconst kanbanColumns = [\"Open\", \"Claimed\", \"In Work\", \"Closed\"];\n\nconst kanbanRequiredTags = [];\nconst kanbanExcludedTags = [];\n\nconst CallLibrary = styled.div`\n  display: none;\n`;\n\nfunction mainStateUpdate(obj) {\n  State.update(obj);\n}\n\nfunction callLibs(\n  src,\n  stateUpdate,\n  functionsToCallByLibrary,\n  extraProps,\n  callerWidget\n) {\n  return (\n    <Widget\n      src={src}\n      props={{\n        mainStateUpdate,\n        isTest,\n        stateUpdate,\n        functionsToCallByLibrary,\n        callLibs,\n        widgets,\n        callerWidget,\n        ...extraProps,\n        usersSBTs,\n      }}\n    />\n  );\n}\n\nreturn (\n  <>\n    {sbtWhiteList ? (\n      <Widget\n        src={widgets.views.editableWidgets.ndcForum}\n        props={{\n          sharedBlockHeight,\n          tagShared,\n          isTest,\n          accountId,\n          sbtWhiteList,\n          authorForWidget,\n          widgets,\n          brand,\n          baseActions,\n          createSbtOptions,\n          kanbanColumns,\n          kanbanRequiredLabels,\n          kanbanExcludedLabels,\n          sharedArticleId,\n          sharedCommentId,\n          sharedSearchInputValue,\n          topicShared,\n          callLibs,\n          mainStateUpdate,\n        }}\n      />\n    ) : (\n      <Widget\n        src={widgets.views.standardWidgets.newStyledComponents.Feedback.Spinner}\n      />\n    )}\n    <CallLibrary>\n      {libSrcArray.map((src) => {\n        return callLibs(\n          src,\n          mainStateUpdate,\n          state.functionsToCallByLibrary,\n          { baseAction: baseActions.articlesBaseAction, kanbanColumns },\n          \"SayALot\"\n        );\n      })}\n    </CallLibrary>\n  </>\n);\n", "metadata": {"platform": "jutsu.ai"}, "branch": {"draft": null}, "widget_modules_used": null, "widget_url": "https://near.social/#/rodrigos.near/widget/SayALot", "fact_widget_deployments_id": "642b37ca08df13d6bd9f9d938a1896f7", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 73}