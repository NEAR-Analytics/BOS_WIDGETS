{"tx_hash": "35L7RhpQXwkqng9tHvgTLkptk6PzdqwArv1suZ4YoAy3", "action_id_social": "GobY2QcDRDUpvvUy5Wu4ypcMov4wfBL1egPJheHHCUCT-0-widget", "block_id": 117008240, "block_timestamp": "2024-04-17T02:45:27.724Z", "signer_id": "blueprints.near", "widget_name": "Components.EditModal", "source_code": "const { Button } = VM.require(\"blueprints.near/widget/Components\") || {\n  Button: () => <></>,\n};\nconst accountId = props.accountId;\nconst profile = Social.getr(`${accountId}/profile`);\nconst [theme, setTheme] = useState(\n  profile.profileTheme === \"dark\" ?? props.theme\n);\nconst [profileLayout, setProfileLayout] = useState(\n  props.profileLayout === \"pixel\"\n);\nconst [font, setFont] = useState(profile.profileFont);\nconst [accentFont, setAccentFont] = useState(profile.profileAccentFont);\nconst [backgroundStyle, setBackgroundStyle] = useState(\n  profile.profileBackground ?? \"plain\"\n);\nconst ModalRoot = styled.div`\n  .DialogOverlay {\n    background-color: rgba(15, 15, 15, 0.5);\n    position: fixed;\n    inset: 0;\n    z-index: 5;\n    animation: overlayShow 150ms cubic-bezier(0.16, 1, 0.3, 1);\n  }\n  .DialogContent {\n    background-color: var(--bg);\n    color: var(--color);\n    border-radius: 1rem;\n    box-shadow: hsl(206 22% 7% / 35%) 0px 10px 38px -10px,\n      hsl(206 22% 7% / 20%) 0px 10px 20px -15px;\n    position: fixed;\n    top: 50%;\n    left: 50%;\n    overflow: auto;\n    z-index: 1001;\n    transform: translate(-50%, -50%);\n    width: 90vw;\n    max-width: 450px;\n    max-height: 85vh;\n    padding: 25px;\n    animation: contentShow 150ms cubic-bezier(0.16, 1, 0.3, 1);\n  }\n  .DialogContent:focus {\n    outline: none;\n  }\n  .DialogTitle {\n    margin: 0;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-between;\n    font-weight: 500;\n    font-size: 17px;\n    i {\n      font-size: 22px;\n    }\n  }\n  .DialogDescription {\n    margin: 10px 0 20px;\n    font-size: 15px;\n    line-height: 1.5;\n  }\n  @keyframes overlayShow {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n  @keyframes contentShow {\n    from {\n      opacity: 0;\n      transform: translate(-50%, -48%) scale(0.96);\n    }\n    to {\n      opacity: 1;\n      transform: translate(-50%, -50%) scale(1);\n    }\n  }\n`;\nconst Heading = styled.h3`\n  margin: 0;\n  font-family: InterVariable, sans-serif;\n  font-size: 20px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: 140%; /* 28px */\n`;\nconst DropdownSelect = ({ children, onClick, theme }) => {\n  return (\n    <div\n      onClick={onClick}\n      className=\"d-flex gap-2 align-items-center rounded-2 p-2\"\n      style={{\n        backgroundColor: theme === \"dark\" ? \"#212529\" : \"white\",\n        border: `1px solid ${theme === \"dark\" ? \"#495057\" : \"#dee2e6\"}`,\n        backgroundImage:\n          theme === \"dark\"\n            ? `url(\"data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 16 16%27%3e%3cpath fill=%27none%27 stroke=%27%23dee2e6%27 stroke-linecap=%27round%27 stroke-linejoin=%27round%27 stroke-width=%272%27 d=%27m2 5 6 6 6-6%27/%3e%3c/svg%3e\")`\n            : `url(\"data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 16 16%27%3e%3cpath fill=%27none%27 stroke=%27%23343a40%27 stroke-linecap=%27round%27 stroke-linejoin=%27round%27 stroke-width=%272%27 d=%27m2 5 6 6 6-6%27/%3e%3c/svg%3e\")`,\n        backgroundRepeat: \"no-repeat\",\n        backgroundPosition: \"right .75rem center\",\n        backgroundSize: \"16px 12px\",\n        cursor: \"pointer\",\n      }}\n    >\n      {children}\n    </div>\n  );\n};\nconst colors = [\n  {\n    label: \"Tomato\",\n    value: \"#E54D2E\",\n  },\n  { label: \"Red\", value: \"#E5484D\" },\n  {\n    label: \"Crimson\",\n    value: \"#E93D82\",\n  },\n  {\n    label: \"Pink\",\n    value: \"#D6409F\",\n  },\n  { label: \"Plum\", value: \"#AB4ABA\" },\n  {\n    label: \"Purple\",\n    value: \"#8E4EC6\",\n  },\n  {\n    label: \"Violet\",\n    value: \"#6E56CF\",\n  },\n  {\n    label: \"Indigo\",\n    value: \"#3E63DD\",\n  },\n  {\n    label: \"Blue\",\n    value: \"#0091FF\",\n  },\n  {\n    label: \"Sky\",\n    value: \"#68DDFD\",\n  },\n  {\n    label: \"Cyan\",\n    value: \"#05A2C2\",\n  },\n  {\n    label: \"Teal\",\n    value: \"#12A594\",\n  },\n  {\n    label: \"Green\",\n    value: \"#30A46C\",\n  },\n  {\n    label: \"Grass\",\n    value: \"#46A758\",\n  },\n  {\n    label: \"Mint\",\n    value: \"#70E1C8\",\n  },\n  {\n    label: \"Lime\",\n    value: \"#99D52A\",\n  },\n  {\n    label: \"Yellow\",\n    value: \"#F5D90A\",\n  },\n  {\n    label: \"Amber\",\n    value: \"#FFB224\",\n  },\n  {\n    label: \"Orange\",\n    value: \"#F76808\",\n  },\n  {\n    label: \"Gold\",\n    value: \"#978365\",\n  },\n  {\n    label: \"Bronze\",\n    value: \"#A18072\",\n  },\n  {\n    label: \"Olive\",\n    value: \"#8B918A\",\n  },\n];\nconst [color, setColor] = useState(\n  colors.filter((color) => color.value === props.activeColor)[0] ?? colors[0]\n);\nconst [showColorDropdown, setShowColorDropdown] = useState(false);\nconst [name, setName] = useState(profile.name ?? \"\");\nconst [description, setDescription] = useState(profile.description ?? \"\");\nconst [twitter, setTwitter] = useState(profile.linktree.twitter ?? \"\");\nconst [github, setGithub] = useState(profile.linktree.github ?? \"\");\nconst [telegram, setTelegram] = useState(profile.linktree.telegram ?? \"\");\nconst [website, setWebsite] = useState(profile.linktree.website ?? \"\");\nconst [image, setImage] = useState(profile.image ?? {});\nconst [backgroundImage, setBackgroundImage] = useState(\n  profile.backgroundImage ?? {}\n);\nconst onNameChange = useCallback((e) => {\n  setName(e.target.value);\n}, []);\nconst onDescriptionChange = useCallback((e) => {\n  setDescription(e.target.value);\n}, []);\nconst onTwitterChange = useCallback((e) => {\n  setTwitter(e.target.value);\n}, []);\nconst onGithubChange = useCallback((e) => {\n  setGithub(e.target.value);\n}, []);\nconst onTelegramChange = useCallback((e) => {\n  setTelegram(e.target.value);\n}, []);\nconst onWebsiteChange = useCallback((e) => {\n  setWebsite(e.target.value);\n}, []);\nconst ProfileImageContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 4px;\n  img {\n    width: 64px;\n    height: 64px;\n    object-fit: cover;\n    border-radius: 1rem;\n  }\n  .text-white {\n    color: var(--color) !important;\n    border: 1px solid var(--stroke);\n    padding: 8px 12px;\n    border-radius: 8px;\n    transition: all 300ms;\n    cursor: pointer;\n    &:hover {\n      opacity: 0.8;\n    }\n  }\n`;\nreturn (\n  <ModalRoot>\n    <Dialog.Root>\n      <Dialog.Trigger asChild>\n        {props.trigger ?? <Button>Edit Profile</Button>}\n      </Dialog.Trigger>\n      <Dialog.Overlay className=\"DialogOverlay\" />\n      <Dialog.Content className=\"DialogContent\">\n        <Dialog.Title className=\"DialogTitle\">\n          <Heading>Edit profile</Heading>\n          <Dialog.Close asChild>\n            <Button variant=\"transparent\">\n              <i className=\"bi bi-x\"></i>\n            </Button>\n          </Dialog.Close>\n        </Dialog.Title>\n        <Dialog.Description className=\"DialogDescription\">\n          <p>Make changes to your profile here. Click save when you're done.</p>\n          <ul\n            class=\"nav nav-tabs\"\n            id=\"myTab\"\n            role=\"tablist\"\n            data-bs-theme={props.theme}\n          >\n            <li class=\"nav-item\" role=\"presentation\">\n              <button\n                class=\"nav-link active\"\n                id=\"profile-tab\"\n                data-bs-toggle=\"tab\"\n                data-bs-target=\"#profile-tab-pane\"\n                type=\"button\"\n                role=\"tab\"\n                aria-controls=\"profile-tab-pane\"\n                aria-selected=\"true\"\n              >\n                Profile Info\n              </button>\n            </li>\n            <li class=\"nav-item\" role=\"presentation\">\n              <button\n                class=\"nav-link\"\n                id=\"theme-tab\"\n                data-bs-toggle=\"tab\"\n                data-bs-target=\"#theme-tab-pane\"\n                type=\"button\"\n                role=\"tab\"\n                aria-controls=\"theme-tab-pane\"\n                aria-selected=\"false\"\n              >\n                Theme\n              </button>\n            </li>\n          </ul>\n          <div class=\"tab-content\" id=\"myTabContent\">\n            <div\n              class=\"tab-pane fade show active\"\n              id=\"profile-tab-pane\"\n              role=\"tabpanel\"\n              aria-labelledby=\"profile-tab\"\n              tabindex=\"0\"\n            >\n              <div\n                className=\"d-flex flex-column gap-3 mt-3\"\n                data-bs-theme={props.theme}\n              >\n                <ProfileImageContainer className=\"d-flex flex-column gap-1\">\n                  <label>Profile Image</label>\n                  <div className=\"d-flex align-items-center gap-1\">\n                    <Widget\n                      src=\"buildhub.near/widget/components.profile.ImageUploader\"\n                      loading=\"\"\n                      props={{\n                        image: profile.image,\n                        setImage: setImage,\n                      }}\n                    />\n                  </div>\n                </ProfileImageContainer>\n                <ProfileImageContainer className=\"d-flex flex-column gap-1\">\n                  <label>Background Image</label>\n                  <div className=\"d-flex align-items-center gap-1\">\n                    <Widget\n                      src=\"buildhub.near/widget/components.profile.ImageUploader\"\n                      loading=\"\"\n                      props={{\n                        image: profile.backgroundImage,\n                        setImage: setBackgroundImage,\n                      }}\n                    />\n                  </div>\n                </ProfileImageContainer>\n                <div className=\"form-group\">\n                  <label>Name</label>\n                  <input\n                    type=\"text\"\n                    value={name}\n                    onChange={onNameChange}\n                    placeholder=\"Enter your name\"\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label>Description</label>\n                  <textarea\n                    type=\"text\"\n                    className=\"form-control\"\n                    value={description}\n                    onChange={onDescriptionChange}\n                    placeholder=\"Markdown Supported\"\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label>Twitter</label>\n                  <input\n                    type=\"text\"\n                    value={twitter}\n                    onChange={onTwitterChange}\n                    placeholder=\"Enter your X/Twitter handle\"\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label>GitHub</label>\n                  <input\n                    type=\"text\"\n                    value={github}\n                    onChange={onGithubChange}\n                    placeholder=\"Enter your GitHub handle\"\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label>Telegram</label>\n                  <input\n                    type=\"text\"\n                    value={telegram}\n                    onChange={onTelegramChange}\n                    placeholder=\"Enter your Telegram handle\"\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label>Website</label>\n                  <input\n                    type=\"text\"\n                    value={website}\n                    onChange={onWebsiteChange}\n                    placeholder=\"Enter your website URL\"\n                  />\n                </div>\n              </div>\n            </div>\n            <div\n              class=\"tab-pane fade\"\n              id=\"theme-tab-pane\"\n              role=\"tabpanel\"\n              aria-labelledby=\"theme-tab\"\n              tabindex=\"0\"\n            >\n              <div\n                className=\"form-check form-switch my-3\"\n                data-bs-theme={props.theme}\n              >\n                <input\n                  class=\"form-check-input\"\n                  checked={theme}\n                  onChange={(e) => setTheme(e.target.checked)}\n                  type=\"checkbox\"\n                  id=\"darktheme\"\n                />\n                <label class=\"form-check-label\" for=\"darktheme\">\n                  Dark Theme\n                </label>\n              </div>\n              <div\n                className=\"form-check form-switch mb-3\"\n                data-bs-theme={props.theme}\n              >\n                <input\n                  class=\"form-check-input\"\n                  checked={profileLayout}\n                  onChange={(e) => setProfileLayout(e.target.checked)}\n                  type=\"checkbox\"\n                  id=\"darktheme\"\n                />\n                <label class=\"form-check-label\" for=\"darktheme\">\n                  Pixel Layout\n                </label>\n              </div>\n              {!profileLayout && (\n                <div className=\"form-group mb-3\" data-bs-theme={props.theme}>\n                  <label htmlFor=\"background-style\">Background Style</label>\n                  <select\n                    id=\"background-style\"\n                    name=\"background-style\"\n                    class=\"form-select\"\n                    value={backgroundStyle}\n                    onChange={(e) => setBackgroundStyle(e.target.value)}\n                  >\n                    <option value=\"plain\">Plain</option>\n                    <option value=\"half\">Half gradient</option>\n                    <option value=\"full\">Full gradient</option>\n                  </select>\n                </div>\n              )}\n              <div className=\"d-flex flex-column gap-3 mb-3\">\n                <Heading>Fonts</Heading>\n                <div className=\"form-group\" data-bs-theme={props.theme}>\n                  <label htmlFor=\"primary-font\">Primary</label>\n                  <select\n                    id=\"primary-font\"\n                    name=\"primary-font\"\n                    class=\"form-select\"\n                    style={{ fontFamily: `\"${font}\", sans-serif` }}\n                    value={font}\n                    onChange={(e) => setFont(e.target.value)}\n                  >\n                    <option\n                      value=\"InterVariable\"\n                      style={{ fontFamily: \"InterVariable, sans-serif\" }}\n                    >\n                      Inter\n                    </option>\n                    <option\n                      value=\"Poppins\"\n                      style={{ fontFamily: \"Poppins, sans-serif\" }}\n                    >\n                      Poppins\n                    </option>\n                    <option\n                      value=\"Lato\"\n                      style={{ fontFamily: \"Lato, sans-serif\" }}\n                    >\n                      Lato\n                    </option>\n                    <option\n                      value=\"Raleway\"\n                      style={{ fontFamily: \"Raleway, sans-serif\" }}\n                    >\n                      Raleway\n                    </option>\n                  </select>\n                </div>\n                {profileLayout && (\n                  <div className=\"form-group\" data-bs-theme={props.theme}>\n                    <label htmlFor=\"accent-font\">Accent</label>\n                    <select\n                      style={{ fontFamily: `\"${accentFont}\", sans-serif` }}\n                      id=\"accent-font\"\n                      name=\"accent-font\"\n                      class=\"form-select\"\n                      value={accentFont}\n                      onChange={(e) => setAccentFont(e.target.value)}\n                    >\n                      <option\n                        value=\"Pixelify Sans\"\n                        style={{\n                          fontFamily: \"Pixelify Sans, sans-serif\",\n                        }}\n                      >\n                        Pixelify Sans\n                      </option>\n                      <option\n                        value=\"Press Start 2P\"\n                        style={{ fontFamily: '\"Press Start 2P\", sans-serif' }}\n                      >\n                        Press Start\n                      </option>\n                      <option\n                        value=\"Silkscreen\"\n                        style={{ fontFamily: \"Silkscreen, sans-serif\" }}\n                      >\n                        Silkscreen\n                      </option>\n                    </select>\n                  </div>\n                )}\n              </div>\n              <div className=\"d-flex flex-column gap-3 mb-3\">\n                <Heading>Theme Color</Heading>\n                <div>\n                  <label>Primary Color</label>\n                  <div>\n                    <DropdownSelect\n                      theme={props.theme}\n                      onClick={() => setShowColorDropdown(!showColorDropdown)}\n                    >\n                      <div\n                        style={{\n                          width: 24,\n                          height: 24,\n                          borderRadius: 8,\n                          background: color.value,\n                        }}\n                      ></div>\n                      {color.label}\n                    </DropdownSelect>\n                    {showColorDropdown && (\n                      <div\n                        className=\"d-flex flex-wrap gap-2 rounded-2 p-2 shadow-sm mt-2\"\n                        style={{\n                          border: `1px solid ${\n                            props.theme === \"dark\" ? \"#495057\" : \"#dee2e6\"\n                          }`,\n                          background:\n                            props.theme === \"dark\" ? \"#212529\" : \"#fff\",\n                        }}\n                      >\n                        {colors.map((color) => (\n                          <div\n                            key={color.label}\n                            onClick={() => {\n                              setColor(color);\n                              setShowColorDropdown(!showColorDropdown);\n                            }}\n                            style={{\n                              width: 24,\n                              height: 24,\n                              borderRadius: 8,\n                              background: color.value,\n                              cursor: \"pointer\",\n                              border:\n                                props.activeColor === color.value &&\n                                `2px solid ${\n                                  props.theme === \"dark\" ? \"white\" : \"black\"\n                                }`,\n                            }}\n                          ></div>\n                        ))}\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </Dialog.Description>\n        <Dialog.Close asChild>\n          <Button variant=\"transparent\" className=\"me-1\">\n            Close\n          </Button>\n        </Dialog.Close>\n        <Button\n          variant=\"primary\"\n          onClick={() => {\n            Social.set({\n              profile: {\n                profileTheme: theme ? \"dark\" : \"light\",\n                profileLayout: profileLayout ? \"pixel\" : \"modern\",\n                profileFont: font,\n                profileAccentFont: accentFont,\n                profileActiveColor: color.value,\n                profileBackground: backgroundStyle,\n                name,\n                image: image,\n                backgroundImage: backgroundImage,\n                description,\n                linktree: {\n                  twitter,\n                  github,\n                  telegram,\n                  website,\n                },\n              },\n            });\n          }}\n        >\n          Save Changes\n        </Button>\n      </Dialog.Content>\n    </Dialog.Root>\n  </ModalRoot>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/blueprints.near/widget/Components.EditModal", "fact_widget_deployments_id": "f1aac20e81394c2286eda9c716c54a4d", "inserted_timestamp": "2024-04-17T04:38:04.126Z", "modified_timestamp": "2024-04-17T04:38:04.126Z", "__row_index": 0}