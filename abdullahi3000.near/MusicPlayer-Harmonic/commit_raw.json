{"tx_hash": "BwmNfqf2qjSm5spCTVRjGGodMutwMnp8MHJApCadvKy9", "action_id_social": "CSKvTUn69AxdbfxJ2ckJNRw1ERbkSieP1Hr5T7ZxM1EM-0-widget", "block_id": 115239565, "block_timestamp": "2024-03-22T16:51:54.189Z", "signer_id": "abdullahi3000.near", "widget_name": "MusicPlayer-Harmonic", "source_code": "const accountId = props.accountId || context.accountId;\nconst autoPlay = props.autoPlay || false;\n\nconst data = fetch(\"https://graph.mintbase.xyz\", {\n  method: \"POST\",\n  headers: {\n    \"mb-api-key\": \"omni-site\",\n    \"Content-Type\": \"application/json\",\n    \"x-hasura-role\": \"anonymous\",\n  },\n  body: JSON.stringify({\n    query: `\n     query MyQuery {\n  mb_views_active_listings(\n    order_by: {}\n    where: {nft_contract_id: {_eq: \"daorecords.mintbase1.near\"}}\n    distinct_on: metadata_id\n  ) {\n    listed_by\n    created_at\n    price\n    nft_contract_id\n    token_id\n    metadata_id\n    title\n    reference_blob(path: \"animation_url\")\n  }\n}\n`,\n  }),\n});\n\nconst InnerContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  background: #F8F8F8;\n  border-color: #F5F5F5;\n  border-radius: 0.5rem;\n  //border: 1px solid, // Add a black border\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1), // Add a shadow effect;\n\n  @media (max-width: 400px) {\n    /* Set styles for smaller screens */\n    display: flex;\n    flex-direction: column;\n    background: white;\n  }\n`;\n\n//CSS\nconst styles = {\n  container: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    //justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: \"1rem\",\n    borderRadius: \"0.5rem\",\n  },\n  // innerContainer: {\n  //   display: \"flex\",\n  //   flexDirection: \"row\",\n  //   backgroundColor: \"#F8F8F8\",\n  //   borderColor: \"#F5F5F5\",\n  //   borderRadius: \"0.5rem\",\n  //   //border: \"1px solid\", // Add a black border\n  //   boxShadow: \"0 2px 4px rgba(0, 0, 0, 0.1)\", // Add a shadow effect\n  // },\n  playerContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"\",\n    padding: \"1rem\",\n  },\n  buttonContainer: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    marginTop: \"1rem\",\n  },\n  songListContainer: {\n    width: \"24rem\",\n    height: \"24rem\",\n    overflowY: \"auto\",\n    padding: \"1rem\",\n  },\n  heading: {\n    textAlign: \"center\",\n    fontWeight: \"bold\",\n    margin: \"1.5rem\",\n  },\n  song: {\n    cursor: \"pointer\",\n    padding: \"0.5rem\",\n    borderRadius: \"0.5rem\",\n    marginBottom: \"0.5rem\",\n  },\n  selectedSong: {\n    backgroundColor: \"#60A5FA\",\n  },\n};\n\n// Initialize state\nlet songs = data.body.data.mb_views_active_listings.filter(\n  (listing) => listing.reference_blob !== \"https://near.social/null\"\n);\n\nState.init({\n  currentSongIndex: 0,\n  autoPlay: autoPlay,\n});\n\nconst currentSong = songs[state.currentSongIndex].reference_blob;\nconst audioElem = new Audio(currentSong);\n\nfunction playSong() {\n  audioElem.play();\n}\n\nif (state.autoPlay) {\n  playSong();\n}\n\n// Call this when you want to play the current song\nfunction playCurrentSong() {\n  audioElem.play();\n}\n\n// Call this when you want to pause the current song\nfunction pauseCurrentSong() {\n  audioElem.pause();\n}\n\n// Call this when you want to play the next song\nfunction playNextSong() {\n  audioElem.pause();\n  // Update the current song index\n  let nextSongIndex = (state.currentSongIndex + 1) % songs.length;\n  State.update({\n    currentSongIndex: nextSongIndex,\n    autoPlay: true,\n  });\n}\n\n// Call this when you want to play the previous song\nfunction playPreviousSong() {\n  audioElem.pause();\n  // Calculate the previous song index\n  let previousSongIndex =\n    (state.currentSongIndex - 1 + songs.length) % songs.length;\n  State.update({\n    currentSongIndex: previousSongIndex,\n    autoPlay: true,\n  });\n}\n\n// Call this when you want to select a specific song\nfunction selectSong(index) {\n  State.update({\n    currentSongIndex: index,\n  });\n}\n\n//<h1 style={styles.heading}>Decentralised Music Streaming</h1>\nreturn (\n  <div style={styles.container}>\n    <InnerContainer>\n      <div style={styles.playerContainer}>\n        <Widget\n          src=\"mob.near/widget/NftImage\"\n          props={{\n            nft: {\n              tokenId: songs[state.currentSongIndex].token_id,\n              contractId: songs[state.currentSongIndex].nft_contract_id,\n            },\n            style: {\n              width: 300,\n              height: 300,\n              objectFit: \"cover\",\n              minWidth: size,\n              minHeight: size,\n              maxWidth: size,\n              maxHeight: size,\n              overflowWrap: \"break-word\",\n            },\n            fallbackUrl:\n              \"https://ipfs.near.social/ipfs/bafkreihdiy3ec4epkkx7wc4wevssruen6b7f3oep5ylicnpnyyqzayvcry\",\n          }}\n        />\n\n        <div style={styles.buttonContainer}>\n          <button\n            style={{\n              backgroundColor: \"#4472c4\",\n              color: \"white\",\n              marginRight: \"10px\",\n            }}\n            onClick={playPreviousSong}\n          >\n            Previous\n          </button>\n          <button\n            style={{\n              backgroundColor: \"#4472c4\",\n              color: \"white\",\n              marginRight: \"10px\",\n            }}\n            onClick={pauseCurrentSong}\n          >\n            Pause\n          </button>\n          <button\n            style={{\n              backgroundColor: \"#4472c4\",\n              color: \"white\",\n              marginRight: \"10px\",\n            }}\n            onClick={playCurrentSong}\n          >\n            Play\n          </button>\n          <button\n            style={{\n              backgroundColor: \"#4472c4\",\n              color: \"white\",\n              marginRight: \"10px\",\n            }}\n            onClick={playNextSong}\n          >\n            Next\n          </button>\n        </div>\n      </div>\n      <div style={styles.songListContainer}>\n        <h3\n          className=\"font-bold\"\n          style={{\n            paddingLeft: \"1rem\",\n          }}\n        >\n          Songs\n        </h3>\n        {songs.map((song, i) => (\n          <Widget\n            src=\"efiz.near/widget/MusicPlayer-Harmonic.Track\"\n            props={{\n              styles,\n              selected: state.currentSongIndex === i,\n              selectSong: () => selectSong(i),\n              song,\n            }}\n          />\n        ))}\n      </div>\n    </InnerContainer>\n  </div>\n);\n", "metadata": {"fork_of": "harmonic1.near/widget/MusicPlayer-Harmonic@97767766"}, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/abdullahi3000.near/widget/MusicPlayer-Harmonic", "fact_widget_deployments_id": "c8e1314086e4e0a5cc508585c16000b0", "inserted_timestamp": "2024-03-22T18:33:30.884Z", "modified_timestamp": "2024-03-22T18:33:30.884Z", "__row_index": 4}