{"tx_hash": "4qvohhcpeUBQULHxuHXmfjdNMhj9FpEaiEdoTS4QMmcL", "action_id_social": "5tnmxFUF4EdFuCSoa66gkHbfoKWabG9CVx2cyRaEr3LL-0-widget", "block_id": 116045330, "block_timestamp": "2024-04-03T11:36:21.500Z", "signer_id": "abdullahi3000.near", "widget_name": "create.artist", "source_code": "const data = props.data || {};\nconst type = props.type || \"\";\nconst typeSrc = props.typeSrc || \"every.near\";\nconst buildEdges = props.buildEdges;\nconst template = props.template || \"\";\nconst thingId = props.thingId;\n//const defaultView = props.defaultView || \"CREATE_THING\";\n\nif (type !== \"\") {\n  const parts = type.split(\"/\");\n  typeSrc = parts[0];\n}\n\nState.init({\n  data,\n  config: data,\n  isModalOpen: false,\n  typeSrc: \"harmonic1.near\",\n  selectedType: \"harmonic1.near/type/artist\",\n  view: defaultView,\n  isPreview: false, //\"TEMPLATE\",\n  template: \"harmonic1.near/widget/artist\",\n  templateVal: template,\n  thingId,\n});\n\nconst handleOnChange = (value) => {\n  State.update({ data: { ...state.data, ...value } });\n};\n\nconst handleApply = () => {\n  State.update({\n    config: state.data,\n    isPreview: !state.isPreview,\n    //template: state.templateVal,\n  });\n  // set the props for the main content\n};\n\nconst handleSave = () => {\n  // create the thing\n  State.update({ isModalOpen: false });\n  const thingId = state.data.handle;\n  //state.thingId || Math.random();\n  let edges = [];\n  if (buildEdges) {\n    const newPath = `${context.accountId}/thing/${thingId}`;\n    edges = buildEdges(newPath, state.selectedType);\n  }\n\n  const data = {\n    thing: {\n      artist: {\n        [thingId]: JSON.stringify({\n          data: state.config,\n          template: {\n            src: state.template,\n          },\n          type: state.selectedType,\n        }),\n      },\n    },\n    index: {\n      thing: JSON.stringify({\n        key: thingId,\n        value: {\n          type: state.selectedType,\n        },\n      }),\n    },\n  };\n  if (edges.length) {\n    data.index.edge = JSON.stringify(edges);\n  }\n  Social.set(data, {\n    onCommit: () => {\n      State.update({\n        data: {},\n        isModalOpen: false,\n        config: undefined,\n      });\n    },\n    onCancel: () => {\n      State.update({\n        isModalOpen: false,\n      });\n    },\n  });\n};\n\nconst handleTypeChange = (e) => {\n  State.update({ selectedType: e.target.value, templateVal: \"\", data: {} });\n};\n\nconst handleProfileSave = () => {\n  State.update({\n    config: state.data,\n  });\n  //check if handle is present\n  // in future check if handle is unique\n  if (!state.data.handle) {\n    console.log(\"Needs handle.\");\n    //Alert does not work.\n  } else {\n    //State.update({ isModalOpen: true });\n    handleSave();\n  }\n};\n\n//  <MainContent>\n//       <>\n//         {(state.isPreview && (\n//           <Widget src={state.template} props={{ data: state.config }} />\n//         )) || <CenteredDiv>Click on Preview to see your profile.</CenteredDiv>}\n//       </>\n//     </MainContent>\n\nreturn (\n  <>\n    <div className=\"d-flex flex-column align-items-center justify-content-center vh-100 text-white\">\n      <div className=\"d-flex flex-column flex-lg-row w-100 p-3\">\n        <div\n          className=\"bg-light text-dark p-3 d-flex flex-column gap-2\"\n          style={{\n            minWidth: \"100%\",\n            maxWidth: \"100%\",\n            flexBasis: \"400px\",\n            border: \"1px solid\",\n            borderRadius: \".5rem\",\n          }}\n        >\n          {/* Form Container */}\n          {state.isPreview ? (\n            <Widget src={state.template} props={{ data: state.config }} />\n          ) : (\n            <Widget\n              src=\"abdullahi3000.near/widget/create\"\n              props={{\n                item: {\n                  type: state.selectedType,\n                  value: state.data,\n                },\n                onChange: handleOnChange,\n              }}\n            />\n          )}\n\n          {/* Footer Buttons */}\n          <div className=\"d-flex flex-row gap-2 align-self-start w-100\">\n            <button\n              className=\"btn btn-primary w-100\"\n              onClick={() => handleProfileSave()}\n              disabled={state.config === undefined}\n            >\n              Save\n            </button>\n            <button\n              className=\"btn btn-outline-primary w-100\"\n              onClick={() => handleApply()}\n            >\n              {state.isPreview ? \"Edit\" : \"Preview\"}\n            </button>\n          </div>\n        </div>\n\n        {/* Modal Overlay */}\n        {state.isModalOpen && (\n          <div\n            className=\"position-absolute top-0 start-0 w-100 h-100 d-flex align-items-center justify-content-center\"\n            style={{ backgroundColor: \"rgba(0,0,0,.5)\", zIndex: 100 }}\n          >\n            <div className=\"bg-white p-3 rounded\" style={{ minWidth: \"500px\" }}>\n              <h3>Create Profile</h3>\n              <Widget\n                src=\"efiz.near/widget/Every.Raw.View\"\n                props={{\n                  value: {\n                    data: state.config,\n                    template: { src: state.template },\n                  },\n                }}\n              />\n              <button className=\"btn btn-primary me-2\" onClick={handleSave}>\n                Save\n              </button>\n              <button\n                className=\"btn btn-secondary\"\n                onClick={() => State.update({ isModalOpen: false })}\n              >\n                Cancel\n              </button>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/abdullahi3000.near/widget/create.artist", "fact_widget_deployments_id": "b721612e1ff3ce0e62e312038122ceca", "inserted_timestamp": "2024-04-03T13:39:11.820Z", "modified_timestamp": "2024-04-03T13:39:11.820Z", "__row_index": 3}