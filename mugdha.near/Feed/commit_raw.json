{"tx_hash": "AAR13ZcVr2yyoPo4anuo5oaXz3eq8ysqfXkdeELSTbwY", "action_id_social": "2JcjL7mAKZ3YFLrna937oSYnKHCbUiZ5TGLvv8nRRJxp-0-widget", "block_id": 111742463, "block_timestamp": "2024-01-31T03:50:08.219Z", "signer_id": "mugdha.near", "widget_name": "Feed", "source_code": "const { Feed } = VM.require(\"devs.near/widget/Module.Feed\");\nconst { ButtonLink } = VM.require(\"buildhub.near/widget/components.ButtonLink\");\n\nButtonLink || (ButtonLink = () => <></>);\nFeed = Feed || (() => <></>); // ensure it's defined or set to a default component\n\nconst { type, hashtag } = props;\ntype = hashtag;\nhashtag = type;\n\nconst tab = props.tab || \"resolutions\";\n\nif (!tab) {\n  return \"\";\n}\n\nconst { Post } = VM.require(\"buildhub.near/widget/components\");\nPost = Post || (() => <></>);\n\nfunction formatDate(date) {\n  const options = { year: \"numeric\", month: \"short\", day: \"numeric\" };\n  return date.toLocaleDateString(\"en-US\", options);\n}\n\nconst feeds = {\n  resolutions: {\n    label: \"Resolutions\",\n    icon: \"bi-calendar3\",\n    name: \"resolution\",\n    hashtag: \"nearyearresolutions2024\",\n    template: `### \ud83c\udf89 NEAR YEAR RESOLUTIONS: 2024\n(posted via [Build DAO Gateway](https://nearbuilders.org/feed))\n\n**\ud83c\udf1f REFLECTIONS ON THE PAST YEAR:**\n- [Reflection 1 from the past year]\n- [Reflection 2 from the past year]\n\n**\ud83c\udfaf NEW YEAR'S RESOLUTIONS:**\n- [Resolution 1]\n- [Resolution 2]\n\n**\ud83d\udcca MEASURING SUCCESS:**\n- [Metric 1 for Success]\n- [Metric 2 for Success]\n`,\n  },\n  updates: {\n    label: \"Updates\",\n    icon: \"bi-bell\",\n    name: \"update\",\n    hashtag: \"update\",\n    template: `### BUILDER UPDATE:  ${formatDate(new Date())}\n(posted via [Build DAO Gateway](https://nearbuilders.org/feed?hashtag=update))\n\n**\u2705 DONE**\n- [what'd you do]\n- [link proof]\n\n**\u23e9 NEXT**\n- [what's next?]\n- [what are you thinking about?]\n\n**\ud83d\uded1 BLOCKERS**\n- [what's blocking you?]\n- [how can someone help?]\n`,\n  },\n  documentation: {\n    label: \"Documentation\",\n    icon: \"bi-book\",\n    name: \"documentation\",\n    hashtag: \"documentation\",\n    template: `## TITLE\n(posted via [Build DAO Gateway](https://nearbuilders.org/feed?hashtag=documentation))\n\n**WHAT IS _____?**\n- [context]\n- [why is it important?]\n\n**EXAMPLE**\n- [how can this be demonstrated?]\n- [what is the expected outcome?]\n\n**USAGE**\n- [where is it used?]\n- [how to use it]\n`,\n  },\n  question: {\n    label: \"Question\",\n    icon: \"bi-question-lg\",\n    name: \"question\",\n    hashtag: \"question\",\n    template: `## what is your question?\n(posted via [Build DAO Gateway](https://nearbuilders.org/feed?hashtag=question))\n\n[what are you thinking about?]\n[why are you asking?]\n`,\n  },\n  answer: {\n    label: \"Answer\",\n    icon: \"bi-journal-code\",\n    name: \"answer\",\n    hashtag: \"answer\",\n    template: `## Share an answer\n(posted via [Build DAO Gateway](https://nearbuilders.org/feed?hashtag=answer))\n\n[please restate the question you are answering]\n\n[your answer]\n\n[link to relevant docs, examples, or resources]\n`,\n  },\n  opportunity: {\n    label: \"Opportunity\",\n    icon: \"bi-briefcase\",\n    name: \"opportunity\",\n    hashtag: \"opportunity\",\n    template: `## TITLE\n(posted via [Build DAO Gateway](https://nearbuilders.org/feed?hashtag=opportunity))\n\n[what is the opportunity?]\n\n[explain the motivation or reason]\n\n`,\n  },\n  idea: {\n    label: \"Idea\",\n    icon: \"bi-lightbulb\",\n    name: \"idea\",\n    hashtag: \"idea\",\n    template: ``,\n  },\n  task: {\n    label: \"Task\",\n    icon: \"bi-check-lg\",\n    name: \"task\",\n    hashtag: \"task\",\n    template: `## TASK TITLE\n(posted via [Build DAO Gateway](https://nearbuilders.org/feed?hashtag=task))\n\n**What needs to be done?**\n- [Describe the task or action steps]\n\n**Context or additional information:**\n- [Provide any context or details]\n`,\n  },\n  test: {\n    label: \"Test\",\n    icon: \"bi-tools\",\n    name: \"test\",\n    hashtag: \"test\",\n    template: ``,\n  },\n  bookmarks: {\n    label: \"Bookmarks\",\n    icon: \"bi-bookmark\",\n    name: \"bookmark\",\n  },\n};\n\nconst [activeFeed, setActiveFeed] = useState(tab || \"resolutions\");\nconst [template, setTemplate] = useState(\"What did you have in mind?\");\n\nreturn (\n  <Widget\n    src=\"buildhub.near/widget/components.AsideWithMainContent\"\n    props={{\n      sideContent: Object.keys(feeds || {}).map((route) => {\n        const data = feeds[route];\n        return (\n          <ButtonLink\n            id={route}\n            variant={activeFeed === route ? \"primary\" : \"outline\"}\n            href={`/feed?tab=${route}`}\n            className={\n              \"align-self-stretch flex-shrink-0 justify-content-start fw-medium\"\n            }\n            style={{\n              fontSize: \"14px\",\n              textDecoration: \"none\",\n              cursor: \"pointer\",\n            }}\n          >\n            <i className={`bi ${data.icon} `}></i>\n            {data.label}\n          </ButtonLink>\n        );\n      }),\n      mainContent: (\n        <>\n          {context.accountId ? (\n            activeFeed !== \"bookmarks\" ? (\n              <Widget\n                src=\"buildhub.near/widget/Compose\"\n                props={{\n                  feed: feeds[activeFeed],\n                  template: feeds[activeFeed].template,\n                }}\n              />\n            ) : (\n              <Widget src=\"buildhub.near/widget/Bookmarks\" />\n            )\n          ) : (\n            <Widget\n              src=\"buildhub.near/widget/components.login-now\"\n              props={props}\n            />\n          )}\n          {activeFeed !== \"bookmarks\" && (\n            <Feed\n              index={[\n                {\n                  action: \"hashtag\",\n                  key: feeds[activeFeed].hashtag,\n                  options: {\n                    limit: 10,\n                    order: \"desc\",\n                  },\n                  cacheOptions: {\n                    ignoreCache: true,\n                  },\n                },\n              ]}\n              Item={(p) => (\n                <Post\n                  accountId={p.accountId}\n                  blockHeight={p.blockHeight}\n                  noBorder={true}\n                />\n              )}\n            />\n          )}\n        </>\n      ),\n    }}\n  />\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/mugdha.near/widget/Feed", "fact_widget_deployments_id": "981153bf651ab4aa2369ee6131a7c6cc", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 15}