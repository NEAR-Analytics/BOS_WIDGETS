{"tx_hash": "BrTyE15PUxPM5dTNftBXfHtRxYvT9ZENQWdNmVfzwu7r", "action_id_social": "H7ipLaw1Le6LvkSnmAst7EsKB17zh2NQB6MCZuVKpT2z-0-widget", "block_id": 107577873, "block_timestamp": "2023-12-10T06:27:25.479Z", "signer_id": "yousouf.near", "widget_name": "card", "source_code": "const generateCards = () => {\n  const icons = [\"\ud83c\udf1f\", \"\ud83d\ude80\", \"\ud83c\udf08\", \"\ud83c\udf88\", \"\u2b50\", \"\ud83c\udf3a\", \"\ud83c\udf55\", \"\ud83c\udf89\"];\n  const duplicatedIcons = [...icons, ...icons];\n  return duplicatedIcons.sort(() => Math.random() - 0.5);\n};\n\nconst [cards, setCards] = useState(generateCards());\nconst [flippedIndices, setFlippedIndices] = useState([]);\nconst [matchedPairs, setMatchedPairs] = useState([]);\nconst [score, setScore] = useState(0);\nconst [point, setPoint] = useState(0);\nconst [levelCompleted, setLevelCompleted] = useState(false);\n\nuseEffect(() => {\n  if (flippedIndices.length === 2) {\n    const [firstIndex, secondIndex] = flippedIndices;\n\n    if (cards[firstIndex] === cards[secondIndex]) {\n      setMatchedPairs((prevMatchedPairs) => [\n        ...prevMatchedPairs,\n        cards[firstIndex],\n      ]);\n\n      // Increment the score and check if all cards are matched\n      setScore((prevScore) => {\n        const newScore = prevScore + 1;\n        if (newScore === cards.length / 2) {\n          setLevelCompleted(true);\n\n          // Reset the game for the next level after a delay\n          setTimeout(() => {\n            setCards(generateCards());\n            setFlippedIndices([]);\n            setMatchedPairs([]);\n            setScore(newScore);\n            setLevelCompleted(false);\n          }, 2000);\n        }\n        return newScore;\n      });\n\n      // Reset flipped indices after checking for a match\n      setTimeout(() => setFlippedIndices([]), 1000);\n    } else {\n      // Reset flipped indices after checking for a non-match\n      setTimeout(() => setFlippedIndices([]), 1000);\n    }\n  }\n}, [flippedIndices, cards]);\n\nconst handleClick = (index) => {\n  if (\n    flippedIndices.length === 2 ||\n    flippedIndices.includes(index) ||\n    matchedPairs.includes(cards[index]) ||\n    levelCompleted\n  ) {\n    return;\n  }\n\n  setFlippedIndices((prevFlippedIndices) => [...prevFlippedIndices, index]);\n};\n\nconst cardStyle = {\n  width: \"100px\",\n  height: \"100px\",\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  fontSize: \"24px\",\n  cursor: \"pointer\",\n  backgroundColor: \"#333\",\n  borderRadius: \"8px\",\n  color: \"#fff\",\n  boxShadow: \"0 0 10px rgba(255, 255, 255, 0.3)\",\n  margin: \"5px\",\n  userSelect: \"none\",\n};\n\nconst flippedCardStyle = {\n  ...cardStyle,\n  backgroundColor: \"#555\",\n  transform: \"scale(1.02)\",\n};\n\nconst darkBackground = {\n  display: \"flex\",\n  flexDirection: \"column\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  height: \"100vh\",\n  backgroundColor: \"#1a1a1a\",\n  color: \"#fff\",\n};\n\nreturn (\n  <div style={darkBackground}>\n    <div\n      style={{\n        display: \"grid\",\n        gridTemplateColumns: \"repeat(4, 100px)\",\n        gridGap: \"10px\",\n      }}\n    >\n      {cards.map((card, index) => (\n        <div\n          key={index}\n          onClick={() => handleClick(index)}\n          style={\n            flippedIndices.includes(index) || matchedPairs.includes(card)\n              ? flippedCardStyle\n              : cardStyle\n          }\n        >\n          {flippedIndices.includes(index) || matchedPairs.includes(card)\n            ? card\n            : \"\u2753\"}\n        </div>\n      ))}\n    </div>\n\n    {levelCompleted && (\n      <div style={{ marginTop: \"20px\", fontSize: \"24px\" }}>\n        Level Completed! Next Level Loading...\n      </div>\n    )}\n    {!levelCompleted && (\n      <div style={{ marginTop: \"20px\", fontSize: \"24px\" }}>Points: {score}</div>\n    )}\n    {score >= 16 ? <Widget src={`yousouf.near/widget/nft`} /> : \"\"}\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/yousouf.near/widget/card", "fact_widget_deployments_id": "10248e508d1f2b33bcb2a46a0f1a40d2", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 16}