{"tx_hash": "9HHZjHoFzAXj5ATL7g3yJs3qYws373F5iWQkRFDxiRT2", "action_id_social": "3DZEkG9n1X2Rhm5bnztzj4a7K43qiRgpnEDdsXzGMoqz-0-widget", "block_id": 107202661, "block_timestamp": "2023-12-05T11:18:12.606Z", "signer_id": "yousouf.near", "widget_name": "card", "source_code": "const generateCards = () => {\r\n  const icons = [\"\ud83c\udf1f\", \"\ud83d\ude80\", \"\ud83c\udf08\", \"\ud83c\udf88\", \"\u2b50\", \"\ud83c\udf3a\", \"\ud83c\udf55\", \"\ud83c\udf89\"];\r\n  const duplicatedIcons = [...icons, ...icons];\r\n  return duplicatedIcons.sort(() => Math.random() - 0.5);\r\n};\r\n\r\nconst [cards, setCards] = useState(generateCards());\r\nconst [flippedIndices, setFlippedIndices] = useState([]);\r\nconst [matchedPairs, setMatchedPairs] = useState([]);\r\nconst [score, setScore] = useState(0);\r\nconst [point, setPoint] = useState(0);\r\nconst [levelCompleted, setLevelCompleted] = useState(false);\r\n\r\nuseEffect(() => {\r\n  if (flippedIndices.length === 2) {\r\n    const [firstIndex, secondIndex] = flippedIndices;\r\n\r\n    if (cards[firstIndex] === cards[secondIndex]) {\r\n      setMatchedPairs((prevMatchedPairs) => [\r\n        ...prevMatchedPairs,\r\n        cards[firstIndex],\r\n      ]);\r\n\r\n      // Increment the score and check if all cards are matched\r\n      setScore((prevScore) => {\r\n        const newScore = prevScore + 1;\r\n        if (newScore === cards.length / 2) {\r\n          setLevelCompleted(true);\r\n\r\n          // Reset the game for the next level after a delay\r\n          setTimeout(() => {\r\n            setCards(generateCards());\r\n            setFlippedIndices([]);\r\n            setMatchedPairs([]);\r\n            setScore(newScore);\r\n            setLevelCompleted(false);\r\n          }, 2000);\r\n        }\r\n        return newScore;\r\n      });\r\n\r\n      // Reset flipped indices after checking for a match\r\n      setTimeout(() => setFlippedIndices([]), 1000);\r\n    } else {\r\n      // Reset flipped indices after checking for a non-match\r\n      setTimeout(() => setFlippedIndices([]), 1000);\r\n    }\r\n  }\r\n}, [flippedIndices, cards]);\r\n\r\nconst handleClick = (index) => {\r\n  if (\r\n    flippedIndices.length === 2 ||\r\n    flippedIndices.includes(index) ||\r\n    matchedPairs.includes(cards[index]) ||\r\n    levelCompleted\r\n  ) {\r\n    return;\r\n  }\r\n\r\n  setFlippedIndices((prevFlippedIndices) => [...prevFlippedIndices, index]);\r\n};\r\n\r\nconst cardStyle = {\r\n  width: \"100px\",\r\n  height: \"100px\",\r\n  display: \"flex\",\r\n  justifyContent: \"center\",\r\n  alignItems: \"center\",\r\n  fontSize: \"24px\",\r\n  cursor: \"pointer\",\r\n  backgroundColor: \"#333\",\r\n  borderRadius: \"8px\",\r\n  color: \"#fff\",\r\n  boxShadow: \"0 0 10px rgba(255, 255, 255, 0.3)\",\r\n  margin: \"5px\",\r\n  userSelect: \"none\",\r\n};\r\n\r\nconst flippedCardStyle = {\r\n  ...cardStyle,\r\n  backgroundColor: \"#555\",\r\n  transform: \"scale(1.02)\",\r\n};\r\n\r\nconst darkBackground = {\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  justifyContent: \"center\",\r\n  alignItems: \"center\",\r\n  height: \"100vh\",\r\n  backgroundColor: \"#1a1a1a\",\r\n  color: \"#fff\",\r\n};\r\n\r\nreturn (\r\n  <div style={darkBackground}>\r\n    <h1 style={{ marginBottom: \"20px\", fontSize: \"36px\" }}>\r\n      Card Matching Game\r\n    </h1>\r\n    <div\r\n      style={{\r\n        display: \"grid\",\r\n        gridTemplateColumns: \"repeat(4, 100px)\",\r\n        gridGap: \"10px\",\r\n      }}\r\n    >\r\n      {cards.map((card, index) => (\r\n        <div\r\n          key={index}\r\n          onClick={() => handleClick(index)}\r\n          style={\r\n            flippedIndices.includes(index) || matchedPairs.includes(card)\r\n              ? flippedCardStyle\r\n              : cardStyle\r\n          }\r\n        >\r\n          {flippedIndices.includes(index) || matchedPairs.includes(card)\r\n            ? card\r\n            : \"\u2753\"}\r\n        </div>\r\n      ))}\r\n    </div>\r\n\r\n    {levelCompleted && (\r\n      <div style={{ marginTop: \"20px\", fontSize: \"24px\" }}>\r\n        Level Completed! Next Level Loading...\r\n      </div>\r\n    )}\r\n    {!levelCompleted && (\r\n      <div style={{ marginTop: \"20px\", fontSize: \"24px\" }}>Points: {score}</div>\r\n    )}\r\n  </div>\r\n);\r\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/yousouf.near/widget/card", "fact_widget_deployments_id": "717449dcf44d056fbe5e0b0fc376a4aa", "inserted_timestamp": "2023-12-05T13:27:32.085Z", "modified_timestamp": "2023-12-20T03:22:11.422Z", "__row_index": 11}