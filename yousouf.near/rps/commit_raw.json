{"tx_hash": "A9qmZsoJMebHeWZz4ZoLTWR77EJ33GKUdhtZtvL9dGe8", "action_id_social": "y2xdNxyG1gWueHX23cbDQfJv5Xxpb7uzFoUGuVyQp8A-0-widget", "block_id": 107464556, "block_timestamp": "2023-12-08T21:01:01.726Z", "signer_id": "yousouf.near", "widget_name": "rps", "source_code": "const choices = [\"rock\", \"paper\", \"scissors\"];\n\n// Set initial state using the useState hook\nconst [userChoice, setUserChoice] = useState(null);\nconst [computerChoice, setComputerChoice] = useState(null);\nconst [result, setResult] = useState(null);\nconst [playerScore, setPlayerScore] = useState(0);\nconst [computerScore, setComputerScore] = useState(0);\n\n// Function to handle user choice\nconst handleUserChoice = (choice) => {\n  const computerRandomChoice =\n    choices[Math.floor(Math.random() * choices.length)];\n\n  setUserChoice(choice);\n  setComputerChoice(computerRandomChoice);\n\n  // Determine the winner\n  if (choice === computerRandomChoice) {\n    setResult(\"It's a tie!\");\n  } else if (\n    (choice === \"rock\" && computerRandomChoice === \"scissors\") ||\n    (choice === \"paper\" && computerRandomChoice === \"rock\") ||\n    (choice === \"scissors\" && computerRandomChoice === \"paper\")\n  ) {\n    setResult(\"You win!\");\n    setPlayerScore((prevScore) => prevScore + 1);\n  } else {\n    setResult(\"Computer wins!\");\n    setComputerScore((prevScore) => prevScore + 1);\n  }\n};\n\nconst containerStyles = {\n  backgroundColor: \"#333\",\n  padding: \"20px\",\n  borderRadius: \"10px\",\n  textAlign: \"center\",\n  color: \"#ffe\",\n};\n\nconst buttonStyles = {\n  backgroundColor: \"grey\",\n  color: \"#ffe\",\n  padding: \"10px 20px\",\n  margin: \"5px\",\n  fontSize: \"16px\",\n  cursor: \"pointer\",\n  border: \"none\",\n  borderRadius: \"5px\",\n  transition: \"background-color 0.3s ease-in-out\",\n};\n\nconst resultStyles = {\n  fontSize: \"20px\",\n  fontWeight: \"bold\",\n  marginTop: \"20px\",\n};\n\nreturn (\n  <div style={containerStyles}>\n    <h1 style={{ marginBottom: \"20px\" }}>Rock, Paper, Scissors</h1>\n\n    <hr />\n    <div>\n      <h5>Your Choice : {userChoice}</h5>\n      <h5>Computer's Choice : {computerChoice}</h5>\n      <br />\n      <hr />\n      <p style={resultStyles}>Result {result}</p>\n    </div>\n    <div style={{ marginTop: \"20px\" }}>\n      <h5>Player Score : {playerScore}</h5>\n      <h5>Computer Score : {computerScore}</h5>\n      {choices.map((choice) => (\n        <button\n          key={choice}\n          onClick={() => handleUserChoice(choice)}\n          style={buttonStyles}\n        >\n          {choice}\n        </button>\n      ))}\n    </div>\n    {playerScore == 5 ? <Widget src={`yousouf.near/widget/nft`} /> : \"\"}\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/yousouf.near/widget/rps", "fact_widget_deployments_id": "5ef045ef6e5d6055a40bb80b734ed4d8", "inserted_timestamp": "2023-12-08T22:50:01.655Z", "modified_timestamp": "2023-12-20T03:22:11.422Z", "__row_index": 3}