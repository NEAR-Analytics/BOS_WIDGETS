{"tx_hash": "mSvDuuAvBxi58P3arushYvtJ6uaDGR8xMgV2C3Rmgu2", "action_id_social": "DzRU9pfam1tGpQ6CUc24vAZyURJTFBnnbyGsUWNouJcQ-0-widget", "block_id": 106874972, "block_timestamp": "2023-11-30T15:50:03.290Z", "signer_id": "yousouf.near", "widget_name": "rps", "source_code": "const choices = [\"rock\", \"paper\", \"scissors\"];\r\n\r\n// Set initial state using the useState hook\r\nconst [userChoice, setUserChoice] = useState(null);\r\nconst [computerChoice, setComputerChoice] = useState(null);\r\nconst [result, setResult] = useState(null);\r\n\r\n// Function to handle user choice\r\nconst handleUserChoice = (choice) => {\r\n  const computerRandomChoice =\r\n    choices[Math.floor(Math.random() * choices.length)];\r\n\r\n  setUserChoice(choice);\r\n  setComputerChoice(computerRandomChoice);\r\n\r\n  // Determine the winner\r\n  if (choice === computerRandomChoice) {\r\n    setResult(\"It's a tie!\");\r\n  } else if (\r\n    (choice === \"rock\" && computerRandomChoice === \"scissors\") ||\r\n    (choice === \"paper\" && computerRandomChoice === \"rock\") ||\r\n    (choice === \"scissors\" && computerRandomChoice === \"paper\")\r\n  ) {\r\n    setResult(\"You win!\");\r\n  } else {\r\n    setResult(\"Computer wins!\");\r\n  }\r\n};\r\n\r\n// Inline CSS for styling\r\nconst containerStyles = {\r\n  backgroundColor: \"#f2f2f2\",\r\n  padding: \"20px\",\r\n  borderRadius: \"10px\",\r\n  textAlign: \"center\",\r\n};\r\n\r\nconst buttonStyles = {\r\n  backgroundColor: \"#4CAF50\",\r\n  color: \"white\",\r\n  padding: \"10px 20px\",\r\n  margin: \"5px\",\r\n  fontSize: \"16px\",\r\n  cursor: \"pointer\",\r\n};\r\n\r\nconst resultStyles = {\r\n  fontSize: \"20px\",\r\n  fontWeight: \"bold\",\r\n  marginTop: \"20px\",\r\n};\r\n\r\n// Render the component\r\nreturn (\r\n  <div style={containerStyles}>\r\n    <h1>Rock, Paper, Scissors</h1>\r\n    <div>\r\n      <p>Your Choice: {userChoice}</p>\r\n      <p>Computer's Choice: {computerChoice}</p>\r\n      <p style={resultStyles}>Result: {result}</p>\r\n    </div>\r\n    <div>\r\n      {choices.map((choice) => (\r\n        <button\r\n          key={choice}\r\n          onClick={() => handleUserChoice(choice)}\r\n          style={buttonStyles}\r\n        >\r\n          {choice}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  </div>\r\n);\r\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/yousouf.near/widget/rps", "fact_widget_deployments_id": "5e59f586be2a194f4926ea89b8545218", "inserted_timestamp": "2023-11-30T17:19:57.927Z", "modified_timestamp": "2023-12-20T02:50:47.065Z", "__row_index": 0}