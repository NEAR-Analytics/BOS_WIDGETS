{"tx_hash": "8Vk7GhkNWuX8TABJ2vhFuQFBo3onvE8KjRxE4pj9d18n", "action_id_social": "GeHFrCNYKHvqdM8GMv7jM9ayd6hAUievnayh7putfRLk-0-widget", "block_id": 107464787, "block_timestamp": "2023-12-08T21:05:18.429Z", "signer_id": "yousouf.near", "widget_name": "crossword", "source_code": "const sampleWords = [\n  {\n    word: \"TUKUNYA\",\n    description: \"Abunda ake dafa abinci aciki.\",\n  },\n  {\n    word: \"KANO\",\n    description: \"Wane birni ne cibiyar kasuwanci a Najeriya.\",\n  },\n  {\n    word: \"BOS\",\n    description: \"Takaitaccen harafin Blockchain Operating System.\",\n  },\n  {\n    word: \"ABUJA\",\n    description: \"Ya sunan Babban Birnin Najeriya\",\n  },\n  {\n    word: \"RAMA\",\n    description: \"Abincin Hausawa na gargajiya da ake ci da karago.\",\n  },\n  {\n    word: \"LAKIDIRI\",\n    description: \"Menene sunan bucket da hausa.'\",\n  },\n];\n\nconst getRandomWord = () => {\n  const randomPlace = Math.floor(Math.random() * sampleWords.length);\n  return sampleWords[randomPlace];\n};\n\nconst [wordData, setWordData] = useState(getRandomWord());\nconst [msg, setMsg] = useState(\"\");\nconst [chosenLetters, setChosenLetters] = useState([]);\nconst [hints, setHints] = useState(3);\nconst [displayWord, setDisplayWord] = useState(false);\nconst [gameOver, setGameOver] = useState(false);\nconst [wrongGuesses, setWrongGuesses] = useState(0);\nconst [countdown, setCountdown] = useState(60);\nconst [score, setScore] = useState(0);\n\nuseEffect(() => {\n  if (wrongGuesses >= 3) {\n    setMsg(\"Game Over! You made too many wrong guesses.\");\n  }\n}, [wrongGuesses]);\n\nuseEffect(() => {\n  if (countdown > 0) {\n    const timer = setTimeout(() => {\n      setCountdown(countdown - 1);\n    }, 1000);\n    return () => clearTimeout(timer);\n  } else {\n    setMsg(\"Game Over! Time's up.\");\n  }\n}, [countdown]);\n\nconst letterSelectFunction = (letter) => {\n  if (!chosenLetters.includes(letter)) {\n    setChosenLetters([...chosenLetters, letter]);\n    if (!wordData.word.includes(letter)) {\n      setWrongGuesses(wrongGuesses + 1);\n    }\n  }\n};\n\nconst hintFunction = () => {\n  if (hints > 0) {\n    const hiddenLetterIndex = wordData.word\n      .split(\"\")\n      .findIndex((letter) => !chosenLetters.includes(letter));\n    setChosenLetters([...chosenLetters, wordData.word[hiddenLetterIndex]]);\n    setHints(hints - 1);\n  }\n};\n\nconst removeCharacterFunction = () => {\n  setChosenLetters(chosenLetters.slice(0, -1));\n};\n\nconst displayLettersFunction = () => {\n  const letters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n\n  return Array.from(letters).map((letter, index) => (\n    <button\n      key={index}\n      onClick={() => letterSelectFunction(letter)}\n      disabled={chosenLetters.includes(letter)}\n      style={{\n        padding: \"10px 15px\",\n        margin: \"5px\",\n        fontSize: \"16px\",\n        fontWeight: \"bold\",\n        color: \"#ffe\",\n        backgroundColor: chosenLetters.includes(letter) ? \"#000\" : \"#ccc\",\n        border: \"none\",\n        borderRadius: \"4px\",\n        cursor: \"pointer\",\n        transition: \"background-color 0.2s ease-in-out\",\n      }}\n    >\n      {letter}\n    </button>\n  ));\n};\n\nconst checkWordGuessedFunction = () => {\n  return wordData.word\n    .split(\"\")\n    .every((letter) => chosenLetters.includes(letter));\n};\n\nconst guessFunction = () => {\n  if (checkWordGuessedFunction()) {\n    setMsg(\"Congratulations, you get the word correct !   \ud83d\udd25 \");\n    setScore(score + 1); // Increase the score\n    sleep(2);\n    restartGameFunction();\n  } else {\n    setMsg(\"You fail !. try again!\");\n    setDisplayWord(true);\n  }\n};\n\nconst restartGameFunction = () => {\n  setWordData(getRandomWord());\n  setMsg(\"\");\n  setChosenLetters([]);\n  setHints(3);\n  setDisplayWord(false);\n  setGameOver(false);\n  setWrongGuesses(0);\n  setCountdown(60);\n};\n\nconst sleep = (seconds) => {\n  return new Promise((resolve) => setTimeout(resolve, seconds * 1000));\n};\n\nconst containerStyles = {\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  minHeight: \"100vh\",\n  backgroundColor: \"#333\",\n  color: \"#fff\",\n};\n\nconst buttonStyles = {\n  padding: \"12px 20px\",\n  fontSize: \"16px\",\n  fontWeight: \"bold\",\n  color: \"#ffe\",\n  borderRadius: \"4px\",\n  cursor: \"pointer\",\n  // transition: \"background-color 0.2s ease-in-out\",\n};\n\nconst letterStyles = {\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  width: \"60px\",\n  height: \"60px\",\n  margin: \"0 5px\",\n  borderRadius: \"50%\",\n  fontSize: \"24px\",\n  fontWeight: \"bold\",\n  backgroundColor: \"#ccc\",\n  color: \"#000\",\n  opacity: 0,\n  transition: \"opacity 0.2s ease-in-out\",\n};\n\nconst hintButtonStyles = {\n  padding: \"12px 20px\",\n  fontSize: \"16px\",\n  fontWeight: \"bold\",\n  color: \"#fff\",\n  border: \"none\",\n  borderRadius: \"8px\",\n  cursor: \"pointer\",\n  transition: \"background-color 0.2s ease-in-out\",\n};\n\nreturn (\n  <div style={containerStyles}>\n    <div\n      style={{\n        marginBottom: \"20px\",\n        fontSize: \"20px\",\n        fontWeight: \"bold\",\n        color: \"#ffe\",\n      }}\n    >\n      Score: {score}\n    </div>\n    <h5 style={{ color: \"#ffe\" }}>Time Remaining: {countdown} seconds</h5>\n\n    <div\n      className=\"button-section\"\n      style={{\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        marginBottom: \"30px\",\n        flexWrap: \"wrap\",\n      }}\n    >\n      <div style={{ marginBottom: \"30px\" }}>\n        Hints Remaining: {hints}{\" \"}\n        <button\n          onClick={hintFunction}\n          disabled={hints === 0}\n          style={{\n            ...hintButtonStyles,\n            backgroundColor: hints ? \"#000\" : \"#ccc\",\n            cursor: hints ? \"pointer\" : \"not-allowed\",\n          }}\n        >\n          Get Hint\n        </button>\n        <button\n          onClick={restartGameFunction}\n          style={{\n            ...buttonStyles,\n            border: \"none\",\n            borderRadius: \"8px\",\n            backgroundColor: \"#000\",\n          }}\n        >\n          Next\n        </button>\n        <button\n          onClick={removeCharacterFunction}\n          disabled={!chosenLetters.length}\n          style={{\n            ...buttonStyles,\n            border: \"none\",\n            borderRadius: \"8px\",\n            backgroundColor: chosenLetters.length ? \"#000\" : \"#ccc\",\n            cursor: chosenLetters.length ? \"pointer\" : \"not-allowed\",\n          }}\n        >\n          Remove Letter\n        </button>\n        {!msg && (\n          <button\n            onClick={guessFunction}\n            disabled={!chosenLetters.length}\n            style={{\n              ...buttonStyles,\n              border: \"none\",\n              borderRadius: \"8px\",\n              backgroundColor: chosenLetters.length ? \"#000\" : \"#ccc\",\n              cursor: chosenLetters.length ? \"pointer\" : \"not-allowed\",\n            }}\n          >\n            Guess\n          </button>\n        )}\n      </div>\n    </div>\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        marginBottom: \"50px\",\n      }}\n    >\n      {Array.from(wordData.word).map((letter, index) => (\n        <div\n          key={index}\n          style={{\n            ...letterStyles,\n            opacity: chosenLetters.includes(letter) ? 1 : 0,\n          }}\n        >\n          {chosenLetters.includes(letter) ? letter : \"\"}\n        </div>\n      ))}\n    </div>\n    <p\n      className=\"word-description\"\n      style={{\n        fontSize: \"18px\",\n        fontStyle: \"bold\",\n        color: \"#ffe\",\n        marginBottom: \"20px\",\n      }}\n    >\n      Hint: {wordData.description}\n    </p>\n    {msg && (\n      <div\n        className=\"message\"\n        style={{\n          fontSize: \"24px\",\n          fontWeight: \"bold\",\n          color: \"#ffe\",\n          textAlign: \"center\",\n          marginBottom: \"20px\",\n        }}\n      >\n        <p>{msg}</p>\n        {displayWord && <p>Correct word was: {wordData.word}</p>}\n      </div>\n    )}\n    <div\n      className=\"letter-selection\"\n      style={{\n        color: \"grey\",\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        justifyContent: \"center\",\n        marginBottom: \"30px\",\n      }}\n    >\n      {displayLettersFunction()}\n      {score == 5 ? <Widget src={`yousouf.near/widget/nft`} /> : \"\"}\n    </div>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/yousouf.near/widget/crossword", "fact_widget_deployments_id": "cc589e0a25df8258620b736502cf6898", "inserted_timestamp": "2023-12-08T22:53:46.637Z", "modified_timestamp": "2023-12-20T03:22:11.422Z", "__row_index": 4}