{"tx_hash": "51P457xXfdgdsNPdo9BWnNebdDQxJsBJksM1zCR5nqBH", "action_id_social": "2Hb4NAY5j5ZP1wNpAbDG3CFFBsbv11SgG7TGz8tSYp6A-0-widget", "block_id": 106928804, "block_timestamp": "2023-12-01T12:33:12.376Z", "signer_id": "yousouf.near", "widget_name": "crossword", "source_code": "const sampleWords = [\r\n  {\r\n    word: \"TUKUNYA\",\r\n    description: \"Abunda ake dafa abinci aciki.\",\r\n  },\r\n  {\r\n    word: \"WORLD\",\r\n    description: \"The planet we live on, which is full of land and water.\",\r\n  },\r\n  {\r\n    word: \"JAVASCRIPT\",\r\n    description:\r\n      \"A popular programming language for building interactive websites and provides behavior to applications.\",\r\n  },\r\n  {\r\n    word: \"REACT\",\r\n    description:\r\n      \"A JavaScript library in which we have written this project code\",\r\n  },\r\n  {\r\n    word: \"PROGRAMMING\",\r\n    description:\r\n      \"The process of developing code to assist computers to perform tasks.\",\r\n  },\r\n  {\r\n    word: \"GEEKSFORGEEKS\",\r\n    description: \"An educational website for computer science 'geeks.'\",\r\n  },\r\n];\r\n\r\nconst getRandomWord = () => {\r\n  const randomPlace = Math.floor(Math.random() * sampleWords.length);\r\n  return sampleWords[randomPlace];\r\n};\r\n\r\nconst [wordData, setWordData] = useState(getRandomWord());\r\nconst [msg, setMsg] = useState(\"\");\r\nconst [chosenLetters, setChosenLetters] = useState([]);\r\nconst [hints, setHints] = useState(3);\r\nconst [displayWord, setDisplayWord] = useState(false);\r\nconst [gameOver, setGameOver] = useState(false);\r\nconst [wrongGuesses, setWrongGuesses] = useState(0);\r\nconst [countdown, setCountdown] = useState(60);\r\nconst [score, setScore] = useState(0);\r\n\r\nuseEffect(() => {\r\n  if (wrongGuesses >= 3) {\r\n    setMsg(\"Game Over! You made too many wrong guesses.\");\r\n  }\r\n}, [wrongGuesses]);\r\n\r\nuseEffect(() => {\r\n  if (countdown > 0) {\r\n    const timer = setTimeout(() => {\r\n      setCountdown(countdown - 1);\r\n    }, 1000);\r\n    return () => clearTimeout(timer);\r\n  } else {\r\n    setMsg(\"Game Over! Time's up.\");\r\n  }\r\n}, [countdown]);\r\n\r\nconst letterSelectFunction = (letter) => {\r\n  if (!chosenLetters.includes(letter)) {\r\n    setChosenLetters([...chosenLetters, letter]);\r\n    if (!wordData.word.includes(letter)) {\r\n      setWrongGuesses(wrongGuesses + 1);\r\n    }\r\n  }\r\n};\r\n\r\nconst hintFunction = () => {\r\n  if (hints > 0) {\r\n    const hiddenLetterIndex = wordData.word\r\n      .split(\"\")\r\n      .findIndex((letter) => !chosenLetters.includes(letter));\r\n    setChosenLetters([...chosenLetters, wordData.word[hiddenLetterIndex]]);\r\n    setHints(hints - 1);\r\n  }\r\n};\r\n\r\nconst removeCharacterFunction = () => {\r\n  setChosenLetters(chosenLetters.slice(0, -1));\r\n};\r\n\r\nconst displayLettersFunction = () => {\r\n  const letters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\r\n\r\n  return Array.from(letters).map((letter, index) => (\r\n    <button\r\n      key={index}\r\n      onClick={() => letterSelectFunction(letter)}\r\n      disabled={chosenLetters.includes(letter)}\r\n      style={{\r\n        padding: \"10px 15px\",\r\n        margin: \"5px\",\r\n        fontSize: \"16px\",\r\n        fontWeight: \"bold\",\r\n        color: \"#fff\",\r\n        backgroundColor: chosenLetters.includes(letter) ? \"#1976d2\" : \"#2196f3\",\r\n        border: \"none\",\r\n        borderRadius: \"4px\",\r\n        cursor: \"pointer\",\r\n        transition: \"background-color 0.2s ease-in-out\",\r\n      }}\r\n    >\r\n      {letter}\r\n    </button>\r\n  ));\r\n};\r\n\r\nconst checkWordGuessedFunction = () => {\r\n  return wordData.word\r\n    .split(\"\")\r\n    .every((letter) => chosenLetters.includes(letter));\r\n};\r\n\r\nconst guessFunction = () => {\r\n  if (checkWordGuessedFunction()) {\r\n    setMsg(\"Congratulations, you get the word correct !   \ud83d\udd25 \");\r\n    setScore(score + 1); // Increase the score\r\n    sleep(2);\r\n    restartGameFunction();\r\n  } else {\r\n    setMsg(\"You fail !. try again!\");\r\n    setDisplayWord(true);\r\n  }\r\n};\r\n\r\nconst restartGameFunction = () => {\r\n  setWordData(getRandomWord());\r\n  setMsg(\"\");\r\n  setChosenLetters([]);\r\n  setHints(3);\r\n  setDisplayWord(false);\r\n  setGameOver(false);\r\n  setWrongGuesses(0);\r\n  setCountdown(60);\r\n};\r\n\r\nconst sleep = (seconds) => {\r\n  return new Promise((resolve) => setTimeout(resolve, seconds * 1000));\r\n};\r\n\r\nreturn (\r\n  <div\r\n    style={{\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n      minHeight: \"100vh\",\r\n      backgroundColor: \"#f5f5f5\",\r\n    }}\r\n  >\r\n    <h1\r\n      style={{\r\n        fontSize: \"36px\",\r\n        marginBottom: \"30px\",\r\n        color: \"rgb(21, 228, 2)\",\r\n      }}\r\n    >\r\n      Wasan Kalmomi akan BOS\r\n    </h1>\r\n    <div\r\n      style={{\r\n        marginBottom: \"20px\",\r\n        fontSize: \"20px\",\r\n        fontWeight: \"bold\",\r\n        color: \"#333\",\r\n      }}\r\n    >\r\n      Score: {score}\r\n    </div>\r\n    <h5>Time Remaining: {countdown} seconds</h5>\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        marginBottom: \"50px\",\r\n      }}\r\n    >\r\n      {Array.from(wordData.word).map((letter, index) => (\r\n        <div\r\n          key={index}\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            width: \"60px\",\r\n            height: \"60px\",\r\n            margin: \"0 5px\",\r\n            borderRadius: \"50%\",\r\n            fontSize: \"24px\",\r\n            fontWeight: \"bold\",\r\n            color: \"#fff\",\r\n            backgroundColor: \"#333\",\r\n            opacity: chosenLetters.includes(letter) ? 1 : 0,\r\n            transition: \"opacity 0.2s ease-in-out\",\r\n          }}\r\n        >\r\n          {chosenLetters.includes(letter) ? letter : \"\"}\r\n        </div>\r\n      ))}\r\n    </div>\r\n    <p\r\n      className=\"word-description\"\r\n      style={{\r\n        fontSize: \"18px\",\r\n        fontStyle: \"bold\",\r\n        color: \"rgb(0, 0, 0)\",\r\n        marginBottom: \"20px\",\r\n      }}\r\n    >\r\n      Hint: {wordData.description}\r\n    </p>\r\n    {msg && (\r\n      <div\r\n        className=\"message\"\r\n        style={{\r\n          fontSize: \"24px\",\r\n          fontWeight: \"bold\",\r\n          color: \"#333\",\r\n          textAlign: \"center\",\r\n          marginBottom: \"20px\",\r\n        }}\r\n      >\r\n        <p>{msg}</p>\r\n        {displayWord && <p>Correct word was: {wordData.word}</p>}\r\n      </div>\r\n    )}\r\n\r\n    <div\r\n      className=\"button-section\"\r\n      style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}\r\n    >\r\n      <div style={{ marginBottom: \"30px\" }}>\r\n        <button\r\n          onClick={restartGameFunction}\r\n          style={{\r\n            padding: \"12px 20px\",\r\n            margin: \"0 10px\",\r\n            fontSize: \"16px\",\r\n            fontWeight: \"bold\",\r\n            color: \"#fff\",\r\n            backgroundColor: \"#f44336\",\r\n            border: \"none\",\r\n            borderRadius: \"4px\",\r\n            cursor: \"pointer\",\r\n            transition: \"background-color 0.2s ease-in-out\",\r\n          }}\r\n        >\r\n          Next\r\n        </button>\r\n        <div\r\n          style={{\r\n            marginBottom: \"20px\",\r\n            fontSize: \"20px\",\r\n            fontWeight: \"bold\",\r\n            color: \"#333\",\r\n          }}\r\n        ></div>\r\n\r\n        <button\r\n          onClick={removeCharacterFunction}\r\n          disabled={!chosenLetters.length}\r\n          style={{\r\n            padding: \"12px 20px\",\r\n            fontSize: \"16px\",\r\n            fontWeight: \"bold\",\r\n            color: \"#fff\",\r\n            backgroundColor: chosenLetters.length ? \"#d32f2f\" : \"#ccc\",\r\n            border: \"none\",\r\n            borderRadius: \"4px\",\r\n            cursor: chosenLetters.length ? \"pointer\" : \"not-allowed\",\r\n            transition: \"background-color 0.2s ease-in-out\",\r\n          }}\r\n        >\r\n          Remove Letter\r\n        </button>\r\n      </div>\r\n      <div\r\n        className=\"letter-selection\"\r\n        style={{\r\n          display: \"flex\",\r\n          flexWrap: \"wrap\",\r\n          justifyContent: \"center\",\r\n          marginBottom: \"30px\",\r\n        }}\r\n      >\r\n        {displayLettersFunction()}\r\n      </div>\r\n      <div\r\n        style={{\r\n          marginBottom: \"20px\",\r\n          fontSize: \"20px\",\r\n          fontWeight: \"bold\",\r\n          color: \"#333\",\r\n        }}\r\n      >\r\n        Hints Remaining: {hints}{\" \"}\r\n        <button\r\n          onClick={hintFunction}\r\n          disabled={hints === 0}\r\n          style={{\r\n            padding: \"12px 20px\",\r\n            fontSize: \"16px\",\r\n            fontWeight: \"bold\",\r\n            color: \"#fff\",\r\n            backgroundColor: hints ? \"#4caf50\" : \"#ccc\",\r\n            border: \"none\",\r\n            borderRadius: \"4px\",\r\n            cursor: hints ? \"pointer\" : \"not-allowed\",\r\n            transition: \"background-color 0.2s ease-in-out\",\r\n          }}\r\n        >\r\n          Get Hint\r\n        </button>\r\n      </div>\r\n      {!msg && (\r\n        <button\r\n          onClick={guessFunction}\r\n          disabled={!chosenLetters.length}\r\n          style={{\r\n            padding: \"12px 30px\",\r\n            marginTop: \"20px\",\r\n            fontSize: \"18px\",\r\n            fontWeight: \"bold\",\r\n            color: \"#fff\",\r\n            backgroundColor: chosenLetters.length ? \"#e64a19\" : \"#ccc\",\r\n            border: \"none\",\r\n            borderRadius: \"4px\",\r\n            cursor: chosenLetters.length ? \"pointer\" : \"not-allowed\",\r\n            transition: \"background-color 0.2s ease-in-out\",\r\n          }}\r\n        >\r\n          Guess\r\n        </button>\r\n      )}\r\n    </div>\r\n  </div>\r\n);\r\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/yousouf.near/widget/crossword", "fact_widget_deployments_id": "d5377c2aedd115ff3df8aa490dfa8759", "inserted_timestamp": "2023-12-01T14:34:33.020Z", "modified_timestamp": "2023-12-20T03:02:01.702Z", "__row_index": 5}