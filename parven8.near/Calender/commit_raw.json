{"tx_hash": "EQHLeh9QAwC3uFAX1uLSZttrBRutFXQu4hWjznyyBEVt", "action_id_social": "6cESrjDuo8s5Y1xZE4xohgjcoq3UYJk8uZ7sGguQRAa7-0-widget", "block_id": 118119535, "block_timestamp": "2024-05-02T22:35:06.781Z", "signer_id": "parven8.near", "widget_name": "Calender", "source_code": "const [input, setInput] = useState(\"\");\r\n\r\nconst handleButtonClick = (value) => {\r\n  setInput((prevInput) => prevInput + value);\r\n};\r\n\r\nconst handleClear = () => {\r\n  setInput(\"\");\r\n};\r\n\r\nconst handleCalculate = () => {\r\n  try {\r\n    const result = calculate(input);\r\n    setInput(result);\r\n  } catch (error) {\r\n    setInput(\"Error\");\r\n  }\r\n};\r\n\r\nconst calculate = (expression) => {\r\n  const operators = [\"+\", \"-\", \"*\", \"/\"];\r\n  const tokens = expression.split(/(\\+|-|\\*|\\/)/).map((token) => token.trim());\r\n  let stack = [];\r\n  let currentOperator = null;\r\n\r\n  for (const token of tokens) {\r\n    if (operators.includes(token)) {\r\n      currentOperator = token;\r\n    } else {\r\n      const num = parseFloat(token);\r\n      if (!isNaN(num)) {\r\n        if (currentOperator === null) {\r\n          stack.push(num);\r\n        } else {\r\n          if (currentOperator === \"+\") {\r\n            stack.push(num);\r\n          } else if (currentOperator === \"-\") {\r\n            stack.push(-num);\r\n          } else if (currentOperator === \"*\") {\r\n            const prevNum = stack.pop();\r\n            stack.push(prevNum * num);\r\n          } else if (currentOperator === \"/\") {\r\n            const prevNum = stack.pop();\r\n            stack.push(prevNum / num);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return stack.reduce((acc, num) => acc + num, 0).toString();\r\n};\r\n\r\nconst styles = {\r\n  calculatorStyle: {\r\n    width: \"400px\", // Reduced size of the calculator\r\n    margin: \"0 auto\",\r\n    padding: \"20px\",\r\n    border: \"2px solid #ccc\",\r\n    borderRadius: \"10px\",\r\n    boxShadow: \"0 0 15px rgba(0, 0, 0, 0.1)\",\r\n    background: \"linear-gradient(180deg, #4caf50, #fff)\", // Green to white gradient\r\n    fontFamily: \"Arial, sans-serif\",\r\n    textAlign: \"center\", // Center align the calculator content\r\n  },\r\n  displayStyle: {\r\n    fontSize: \"2em\", // Reduced font size of the display\r\n    textAlign: \"right\",\r\n    padding: \"20px\", // Reduced padding\r\n    border: \"1px solid #ccc\",\r\n    borderRadius: \"10px\",\r\n    marginBottom: \"20px\",\r\n    backgroundColor: \"rgba(0, 128, 0, 0.3)\", // Green with 70% transparency\r\n    color: \"#333\",\r\n    fontWeight: \"bold\", // Bold text\r\n    width: \"100%\", // Set width to 100%\r\n    boxSizing: \"border-box\", // Include padding and border in width calculation\r\n  },\r\n  buttonRow: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\", // Center align buttons horizontally\r\n    marginBottom: \"10px\",\r\n  },\r\n  buttonStyle: {\r\n    flex: \"1\",\r\n    fontSize: \"1.5em\",\r\n    padding: \"15px 0\",\r\n    margin: \"5px\",\r\n    backgroundColor: \"#ff0000\",\r\n    color: \"#333\",\r\n    border: \"5px solid #ccc\",\r\n    borderRadius: \"40%\", // Set border radius to 50% for perfect circle\r\n    cursor: \"pointer\",\r\n    transition: \"background-color 0.3s ease\",\r\n    fontWeight: \"bold\",\r\n    width: \"80px\",\r\n  },\r\n\r\n  buttonStyleRed: {\r\n    backgroundColor: \"#800080\",\r\n    color: \"#fff\",\r\n  },\r\n  buttonStyleOrange: {\r\n    backgroundColor: \"#ff9800\",\r\n    color: \"#fff\",\r\n  },\r\n  buttonStyleGreen: {\r\n    backgroundColor: \"#4caf50\",\r\n    color: \"#fff\",\r\n  },\r\n  buttonStyleBlue: {\r\n    backgroundColor: \"#008000\",\r\n    color: \"#fff\",\r\n  },\r\n  heading: {\r\n    fontSize: \"1.8em\", // Adjusted font size of the heading\r\n    color: \"#333\",\r\n    marginBottom: \"20px\",\r\n  },\r\n  footer: {\r\n    textAlign: \"left\", // Left align footer text\r\n    color: \"#777\",\r\n    fontSize: \"0.9em\",\r\n    fontStyle: \"italic\",\r\n    marginTop: \"20px\", // Added margin top\r\n  },\r\n};\r\n\r\nreturn (\r\n  <div style={styles.calculatorStyle}>\r\n    <div style={{ marginTop: \"0px\", textAlign: \"right\" }}>\r\n      <img\r\n        src=\"https://shard.dog/v3/images/nearindia.jpg\"\r\n        alt=\"Near India\"\r\n        style={{ maxWidth: \"40px\", maxHeight: \"40px\" }}\r\n      />\r\n    </div>\r\n    <h1 style={styles.heading}>\r\n      <strong>CALCULATOR</strong>\r\n    </h1>\r\n    <div style={styles.displayStyle}>{input}</div>\r\n    <div>\r\n      <div style={styles.buttonRow}>\r\n        <button\r\n          style={{ ...styles.buttonStyle, ...styles.buttonStyleRed }}\r\n          onClick={handleClear}\r\n        >\r\n          C\r\n        </button>\r\n        <button\r\n          style={styles.buttonStyle}\r\n          onClick={() => handleButtonClick(\"/\")}\r\n        >\r\n          /\r\n        </button>\r\n      </div>\r\n      <div style={styles.buttonRow}>\r\n        <button\r\n          style={styles.buttonStyle}\r\n          onClick={() => handleButtonClick(\"7\")}\r\n        >\r\n          7\r\n        </button>\r\n        <button\r\n          style={styles.buttonStyle}\r\n          onClick={() => handleButtonClick(\"8\")}\r\n        >\r\n          8\r\n        </button>\r\n        <button\r\n          style={styles.buttonStyle}\r\n          onClick={() => handleButtonClick(\"9\")}\r\n        >\r\n          9\r\n        </button>\r\n        <button\r\n          style={styles.buttonStyle}\r\n          onClick={() => handleButtonClick(\"+\")}\r\n        >\r\n          +\r\n        </button>\r\n      </div>\r\n      <div style={styles.buttonRow}>\r\n        <button\r\n          style={styles.buttonStyle}\r\n          onClick={() => handleButtonClick(\"4\")}\r\n        >\r\n          4\r\n        </button>\r\n        <button\r\n          style={styles.buttonStyle}\r\n          onClick={() => handleButtonClick(\"5\")}\r\n        >\r\n          5\r\n        </button>\r\n        <button\r\n          style={styles.buttonStyle}\r\n          onClick={() => handleButtonClick(\"6\")}\r\n        >\r\n          6\r\n        </button>\r\n        <button\r\n          style={styles.buttonStyle}\r\n          onClick={() => handleButtonClick(\"-\")}\r\n        >\r\n          -\r\n        </button>\r\n      </div>\r\n      <div style={styles.buttonRow}>\r\n        <button\r\n          style={styles.buttonStyle}\r\n          onClick={() => handleButtonClick(\"1\")}\r\n        >\r\n          1\r\n        </button>\r\n        <button\r\n          style={styles.buttonStyle}\r\n          onClick={() => handleButtonClick(\"2\")}\r\n        >\r\n          2\r\n        </button>\r\n        <button\r\n          style={styles.buttonStyle}\r\n          onClick={() => handleButtonClick(\"3\")}\r\n        >\r\n          3\r\n        </button>\r\n        <button\r\n          style={styles.buttonStyle}\r\n          onClick={() => handleButtonClick(\"*\")}\r\n        >\r\n          *\r\n        </button>\r\n      </div>\r\n      <div style={styles.buttonRow}>\r\n        <button\r\n          style={styles.buttonStyle}\r\n          onClick={() => handleButtonClick(\"0\")}\r\n        >\r\n          0\r\n        </button>\r\n        <button\r\n          style={styles.buttonStyle}\r\n          onClick={() => handleButtonClick(\".\")}\r\n        >\r\n          .\r\n        </button>\r\n        <button\r\n          style={{ ...styles.buttonStyle, ...styles.buttonStyleBlue }}\r\n          onClick={handleCalculate}\r\n        >\r\n          =\r\n        </button>\r\n      </div>\r\n      <p style={{ textAlign: \"right\" }}>\r\n        <strong>parven8.near</strong>{\" \"}\r\n      </p>\r\n    </div>\r\n  </div>\r\n);\r\n", "metadata": {"description": "best calculator ever made ", "image": {"ipfs_cid": "bafkreiejmf5snrhjkya5ximvrnixubsr6v7b32mg3gype732ilsyflpwaa"}, "name": "claculator", "tags": {"calculator": ""}}, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/parven8.near/widget/Calender", "fact_widget_deployments_id": "911d201d7253d22b6631f2782dbacee9", "inserted_timestamp": "2024-05-03T00:55:48.889Z", "modified_timestamp": "2024-05-03T00:55:48.889Z", "__row_index": 0}