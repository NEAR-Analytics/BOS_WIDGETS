{"tx_hash": "HjUwhmSiH9SFZT3A7VvrZanHa3RkAiJrYDuS8Udsm6R1", "action_id_social": "5Y5p3WNVLg1wPPXeZCxK2zMR7xnW1xxiXkAc7RwJYTnj-0-widget", "block_id": 116053601, "block_timestamp": "2024-04-03T14:38:13.894Z", "signer_id": "adnansiddiqui.near", "widget_name": "00-basicForm-IntegrityVault", "source_code": "const accountId = context.accountId; // Set account ID from context\nconst fileAccept = props.fileAccept || \"*\"; // Which file extensions are accepted\nconst fileIcon = props.fileIcon || \"bi-file\"; // File icon class\nconst buttonText = props.buttonText || \"Upload a file\"; // File button upload text\n\n// Exit if user is not signed \nif (!accountId) {\n  return \"Please sign in with NEAR wallet to add a new blog entry\";\n}\n\n// Init State\ninitState({\n  title: \"\",\n  context: \"\",\n  uploading: false,\n  cid: null,\n  filename: null,\n  fileURL: null,\n  observationError: null,\n  titleError: null,\n});\n\nconst timestamp = Date.now(); // Get current time in unix epoch\nconst applicationId = \"IntegrityVault\"; // Set the application name\nconst ipfsUrl = (cid) => `https://ipfs.near.social/ipfs/${cid}`; // Function to concat cid\n\n// Container style (backgroud gradient)\nconst Container = styled.div`\n  width: 100%;\n  display: flex;\n  padding: 2rem 3rem;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 2rem;\n  border-radius: 0.5rem;\n  border: 1px solid var(--ui-elements-light, #eceef0);\n  background: rgb(128,125,176);\n  background: linear-gradient(180deg, rgba(128,125,176,1) 0%, rgba(255,255,255,1) 58%);\n`;\n\n// Style for component Title\nconst TitlePage = styled.h3`\n  text-transform: uppercase;\n  font-size: 3.75rem;\n  font-weight: 700;\n  margin: 20px 0 20px 0;\n`;\n\n// Corruption proof\nconst entry = {\n  id: timestamp,\n  applicationName: applicationId,\n  data: {\n    title: state.title,\n    context: state.context,\n    cid: state.cid,\n    fileURL: state.fileURL,\n  },\n};\n\n// Form\nreturn (\n  <Container>\n    <div className=\"row\">\n      {/* Component title */}\n      <div className=\"mb-2\">\n        <TitlePage>Fight the corruption</TitlePage>\n      </div>\n\n      {/* Input text widget - Evidence title name */}\n      <Widget\n        src={\"contribut3.near/widget/Inputs.Text\"}\n        props={{\n          label: \"Evidence Title\",\n          placeholder: \"Give a name for your evidence\",\n          value: state.title,\n          onChange: (title) => State.update({ title }),\n          validate: () => {\n            if (state.title.length > 50) {\n              State.update({\n                titleError: \"The URL must be less than 50 characters\",\n              });\n              return;\n            }\n\n            State.update({ titleError: \"\" });\n          },\n        }}\n      />\n\n      {/* Textarea widget - Evidence observations */}\n      <Widget\n        src={\"contribut3.near/widget/Inputs.TextArea\"}\n        props={{\n          label: \"Evidence observations\",\n          placeholder: \"Give a short description of your evidence\",\n          value: state.context,\n          onChange: (context) => State.update({ context }),\n          validate: () => {\n            if (state.context.length > 500) {\n              State.update({\n                observationError:\n                  \"Observations must be less than 500 characters\",\n              });\n              return;\n            }\n\n            State.update({ descriptionError: \"\" });\n          },\n          error: state.observationError,\n        }}\n      />\n\n      {/* Div to upload a file */}\n      <div\n        style={{\n          padding: \"1rem 0 1rem 0\",\n        }}\n      >\n        {/* If the document was uploaded, show the IPS URL */}\n        {state.cid ? (\n          <a href={ipfsUrl(state.cid)} download>\n            {state.filename}\n          </a>\n        ) : (\n          <></>\n        )}\n\n        {/* Button to upload a file */}\n        <Files\n          multiple={false}\n          accepts={[\"image/*\", \"video/*\", \".pdf\"]}\n          minFileSize={1}\n          clickable\n          className=\"btn btn-outline-primary\"\n          style={{\n            border: \"2px solid rgb(128,125,176)\",\n            borderRadius: \"5px\",\n            backgroundColor: \"#ffffff\",\n            color: \"rgb(128,125,176)\",\n          }}\n          onChange={(files) => {\n            if (!files || !files.length) return;\n            const [body] = files;\n            State.update({ uploading: true, cid: null });\n            /* Upload file to ipfs on NEAR */\n            asyncFetch(\"https://ipfs.near.social/add\", {\n              method: \"POST\",\n              headers: { Accept: \"application/json\" },\n              body,\n            }).then(({ body: { cid } }) => {\n              State.update({\n                cid,\n                filename: body.name,\n                uploading: false,\n                fileURL: ipfsUrl(cid),\n              });\n            });\n          }}\n        >\n          {state.uploading ? \"Uploading\" : state.cid ? \"Replace\" : buttonText}\n        </Files>\n      </div>\n\n      {/* Button to upload data to SocialDB */}\n      <CommitButton\n        data={{ postEvidenceData: entry }}\n        style={{\n          border: \"2px solid rgb(128,125,176)\",\n          borderRadius: \"5px\",\n          backgroundColor: \"rgb(128,125,176)\",\n          color: \"#ffffff\",\n        }}\n      >\n        Post evidence\n      </CommitButton>\n    </div>\n\n    {/* Link to IntegrityVault Viwer */}\n    <div\n      style={{\n        marginLeft: \"auto\",\n        marginRight: \"0\",\n      }}\n    >\n      <a href=\"https://near.social/systemctl.near/widget/01-ListVaultContent-IntegrityVault\">\n        View your last posted evidence\n      </a>\n    </div>\n  </Container>\n);\n", "metadata": {"tags": {}}, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/adnansiddiqui.near/widget/00-basicForm-IntegrityVault", "fact_widget_deployments_id": "fd7e04eb5a390b48003126e8c20d1b0d", "inserted_timestamp": "2024-04-03T16:44:46.828Z", "modified_timestamp": "2024-04-03T16:44:46.828Z", "__row_index": 2}