{"tx_hash": "59wpyAE3Sx9ATLdtXQnGmYgkuHSqx392tCciCnkshpJ2", "action_id_social": "12aEcqEUGvy1FfoWFvY3VNHjL7RYe7J2buDjEZbSaFiA-0-widget", "block_id": 116056978, "block_timestamp": "2024-04-03T15:54:22.812Z", "signer_id": "adnansiddiqui.near", "widget_name": "Uniswap", "source_code": null, "metadata": {"description": "** This component is about interacting with a smart contract deployed by Lido. **\n\nLido is an Ethereum 2.0 liquid staking protocol that allows users to deposit their ether into Lido smart contracts and receive stETH, a tokenized version of their staked ether, in return.\nInitializing Contract Addresses. This declares the (immutable) addresses of the Lido contract on different Ethereum networks:\n\n```\nconst lidoContract = \"0xae7ab96520de3a18e5e111b5eaab095312d7fe84\";\nconst mainnetLidoContract = \"0xae7ab96520de3a18e5e111b5eaab095312d7fe84\";\nconst rinkebyLidoContract = \"0xF4242f9d78DB7218Ad72Ee3aE14469DBDE8731eD\";\nconst kovanLidoContract = \"0x4b7FCBC11BB45075b9A1F953128C09bC97D6a0D7\";\nconst gorliLidoContract = \"0x1643E812aE58766192Cf7D2Cf9567dF2C37e9B7F\";\n```\n\n`tokenDecimals` represents the decimal precision used by the token:\n\n```\nconst tokenDecimals = 18;\n```\n\nSelecting A Contract Based On Network:\n\n```\nconst network = \"gorli\";\n```\n\nThe application can work on different Ethereum networks. It determines the contract address to use based on the `network` value:\n\n```\nswitch (network) {\n  case \"kovan\":\n    lidoContract = kovanLidoContract;\n    break;\n  //...other switches\n}\n```\n\nFetching The Lido Contract ABI:\n\n```\nconst lidoAbi = fetch(\n  \"https://raw.githubusercontent.com/lidofinance/lido-subgraph/master/abis/Lido.json\"\n);\n```\n\nFetching the APR for staking on Lido from an API endpoint:\n\n```\nconst apr = fetch(\n  \"https://api.allorigins.win/get?url=https://stake.lido.fi/api/sma-steth-apr\"\n);\n```\n\nHelper Functions/Conditions:\n\n - `getStakedBalance`: retrieves the staked balance of a user or receiver.\n\n```\nconst getStakedBalance = (receiver) => { /*...*/ };\n```\n\n - `submitEthers`: initiates the staking (submitting ethers function) on the contract.\n\n```\nconst submitEthers = (strEther, _referral) => { /*...*/ };\n```\n\n - Detect Sender And Fetch Balance\n\n```\nif (state.sender === undefined) { /*...*/ }\nif (state.balance === undefined && state.sender) { /*...*/ }\n```\n\n - Fetches the estimated transaction cost for the transaction. It does so by calculating gas fees in Ethereum and converting it to USD.\n\n```\nif (state.txCost === undefined) { /*...*/ }\n```\n\n - Fetching Stylesheets\n\n```\nconst cssFont = fetch(/*...*/);\nconst css = fetch(/*...*/);\n```\n\nReturning the JSX syntax is used to render the user interface.\n\n```\nreturn (\n    // JSX codes\n);\n```"}, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/adnansiddiqui.near/widget/Uniswap", "fact_widget_deployments_id": "4d53746f1ff65579c2385bdf49300ba3", "inserted_timestamp": "2024-04-03T17:40:04.451Z", "modified_timestamp": "2024-04-03T17:40:04.451Z", "__row_index": 3}