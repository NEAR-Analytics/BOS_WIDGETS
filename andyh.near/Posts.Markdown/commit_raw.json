{"tx_hash": "9aySW6daPdXQs2fo15xC1ccQado5amD8r6Jbzb4JBYXX", "action_id_social": "QJK15Zkyz8HsgwPYDTGbgRDW4wKo8nfDs6Xzt2E46DG-0-widget", "block_id": 106885447, "block_timestamp": "2023-11-30T19:49:41.244Z", "signer_id": "andyh.near", "widget_name": "Posts.Markdown", "source_code": "// ! This component uses a package imported from a cdn which is not\n// ! yet officially supported by BOS Web Engine. It is meant for\n// ! demonstration purposes only and will likely change in the future.\n\n// Originally tried to use the `marked-react` package but custom React\n// components (e.g. <Markdown />) do not function under BWE. Ideally\n// that would be a valid approach eventually.\n\n// };\nconst [markdown, setMarkdown] = useState(null);\nconst importMarkdown = async () => {\n  try {\n    // ! This will kick of an individual net request for every instance of\n    // ! this component rendered to the page since iframes do not share\n    // ! cached resources\n    const markdownDyn = await import(\"https://esm.sh/markdown-to-jsx@7.3.2\");\n    console.log(\"markdown imported\");\n    setMarkdown(markdownDyn);\n  } catch (err) {\n    console.log(\"markdown import error\", err);\n  }\n};\n\nuseEffect(() => {\n  importMarkdown();\n}, []);\n\nconst [rendered, setRendered] = useState(null);\n\nuseEffect(() => {\n  if (!markdown) return;\n\n  setRendered(\n    markdown.compiler(props.content, {\n      forceBlock: true,\n      enforceAtxHeadings: true,\n    })\n  );\n}, [markdown]);\n\nreturn markdown ? <div>{rendered}</div> : <div>Loading</div>;\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/andyh.near/widget/Posts.Markdown", "fact_widget_deployments_id": "a15c9e3ed940148c85b7cb747e122dc1", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 1}