{"tx_hash": "2ERrTPxfgntBy6YuZEYSZwmsbpCHDetBz8XRV7vkVnAs", "action_id_social": "2Yyuwec5fVps2HeGtXi7xrGrKXdcxjdgyQ6fBkzPZTJF-0-widget", "block_id": 103013642, "block_timestamp": "2023-10-10T00:04:35.508Z", "signer_id": "andyh.near", "widget_name": "HooksDemo", "source_code": "const [value, setValue] = useState(0);\nconst [text, setText] = useState(\"\");\nconst [isInit, setIsInit] = useState(false);\n// const [value, setValue] = [4, console.log];\nconst textRef = useRef(null);\n\nuseEffect(() => {\n  console.log({ isInit });\n  if (!isInit) {\n    setTimeout(() => setValue(500), 5000);\n    setIsInit(true);\n  }\n}, [isInit]);\nuseEffect(() => {\n  textRef.current?.focus();\n}, [textRef]);\n\nreturn (\n  <>\n    <span>{isInit.toString()}</span>\n    <span>{value.toString()}</span>\n    <button className=\"btn\" onClick={() => setValue(value + 1)}>\n      Increment Value\n    </button>\n    <br />\n    <h2>{text}</h2>\n    <input\n      ref={textRef}\n      type=\"text\"\n      onChange={(e) => setText(e.target.value)}\n    />\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/andyh.near/widget/HooksDemo", "fact_widget_deployments_id": "b8a7550f1ad6b79295f9419057d8daa9", "inserted_timestamp": "2023-10-10T01:54:56.168Z", "modified_timestamp": "2023-10-10T01:54:56.168Z", "__row_index": 40}