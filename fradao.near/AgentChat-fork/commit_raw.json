{"tx_hash": "DcLQVdeq3hmiWosoay6GNXbgVoT8sQsGGCeLbhkvuzr1", "action_id_social": "FEA17z8qBSAxxhbH44X9X3xKjuVGf1CyUBUcntzzQMFA-0-widget", "block_id": 106937343, "block_timestamp": "2023-12-01T15:52:22.895Z", "signer_id": "fradao.near", "widget_name": "AgentChat-fork", "source_code": "const [accountId, unused, agentName] = props.src.split(\"/\") ?? [null, null, null];\nconst blockHeight = props.blockHeight ?? \"final\";\n\nconst data = Social.getr(`${accountId}/agent/${agentName}`, blockHeight);\n\nif (!data) return \"Agent doesn't exist\";\n\nconst [question, setQuestion] = useState(\"\");\nconst [prompt, setPrompt] = useState(\"\");\nconst [loading, setLoading] = useState(false);\nconst [response, setResponse] = useState(\"\");\nconst [messages, setMessages] = useState([]);\n\nuseEffect(() => {\n    if (messages.length === 0 || messages[messages.length - 1].role !== \"user\") {\n        return;\n    }\n    console.log(messages);\n    setLoading(true);\n    asyncFetch(`https://ai.near.social/api`, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n        responseType: \"json\",\n        body: JSON.stringify([\n            { role: \"system\", content: data.prompt },\n            ...messages.slice(-1),\n        ]),\n    })\n        .then(({ body }) => {\n            setMessages([...messages, { role: \"system\", content: body.response }]);\n        })\n        .finally(() => {\n            setLoading(false);\n        });\n}, [messages]);\n\nconst submitQuestion = () => {\n    setMessages([...messages, { role: \"user\", content: question }]);\n    setQuestion(\"\");\n};\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 48px;\n`;\n\nreturn (<Wrapper>\n    <div>\n        <div>Name: { data.name }</div>\n        <div>Prompt: <pre>{data.prompt}</pre></div>\n\n        <div className=\"mb-3\">\n            <div className=\"input-group\">\n                <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    style={{\n                        borderTopLeftRadius: \"2rem\",\n                        borderBottomLeftRadius: \"2rem\",\n                    }}\n                    value={question}\n                    onChange={(e) => setQuestion(e.target.value)}\n                    onKeyPress={(e) => {\n                        if (e.key === \"Enter\") {\n                            submitQuestion();\n                        }\n                    }}\n                    placeholder=\"What's your question?\"\n                    autoFocus\n                />\n                <button\n                    className=\"btn btn-primary\"\n                    style={{\n                        borderTopRightRadius: \"2rem\",\n                        borderBottomRightRadius: \"2rem\",\n                    }}\n                    onClick={() => submitQuestion()}\n                >\n                    Submit\n                </button>\n            </div>\n        </div>\n        <div className=\"d-flex flex-column-reverse\">\n            {messages.map(({ role, content }, i) => {\n                return (\n                    <div key={i} className={`message ${role}`}>\n                        {role === \"user\" && (\n                            <Widget\n                                src=\"mob.near/widget/N.ProfileLine\"\n                                props={{ accountId: context.accountId }}\n                            />\n                        )}\n                        <Markdown text={content} />\n                    </div>\n                );\n            })}\n            {loading && (\n                <div key=\"loading\" className={`message system`}>\n                    <div>\n                        <span\n                            className=\"spinner-grow spinner-grow-sm me-1\"\n                            role=\"status\"\n                            aria-hidden=\"true\"\n                        />\n                    </div>\n                </div>\n            )}\n        </div>        \n    </div>\n</Wrapper>);", "metadata": {"fork_of": "root.near/widget/AgentChat@106569007"}, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/fradao.near/widget/AgentChat-fork", "fact_widget_deployments_id": "0c908b7deecc43490b0231a550889568", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}