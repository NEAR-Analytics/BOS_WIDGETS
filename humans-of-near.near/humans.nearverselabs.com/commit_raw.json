{"tx_hash": "Bffv2mGEmosLAt6RbQfXkpE4uG6jWSZTa1G9F5RNqWD2", "action_id_social": "64EsKYvFw8XfVbHrCafUZ2XqnqwzwGHruBgizGKf8RjL-0-widget", "block_id": 104819615, "block_timestamp": "2023-11-03T06:22:04.527Z", "signer_id": "humans-of-near.near", "widget_name": "humans.nearverselabs.com", "source_code": "const Owner = \"humans-of-near.near\";\nconst API_URL = \"https://humans.nearverselabs.com/api\";\nconst MAP_STYLE = \"mapbox://styles/mapbox/dark-v10\";\nconst MAP_TOKEN =\n  \"pk.eyJ1IjoidGVqMDEiLCJhIjoiY2xqcHZ2dGpkMDB5azNsbzQ0bmMwNjRjaCJ9.FVv2zRPaLwzZMgagbI2YZw\";\n\nconst center = [0, 30];\nconst zoom = 1.7;\nconst accountId = context.accountId;\n\nState.init({\n  profileModal: false,\n  filtersModal: false,\n  edit: false,\n  user: {\n    name: \"\",\n    social: \"\",\n    twitter: \"\",\n    bio: \"\",\n    role: \"\",\n    community: \"\",\n  },\n  filters: {\n    role: \"developer\",\n    community: [],\n  },\n  locations: [],\n  humanAlert: true,\n  openInfo: false,\n  loaded: false,\n});\n\n//Styles\n\nconst Wrapper = styled.div`\n  display: flex;\n  width: 100%;\n  height: calc(100vh - 190px);\n  align-items: stretch;\n  flex-direction: column;\n  background: black;\n  overflow: auto;\n  position: relative;\n`;\n\nconst Header = styled.div`\n  display: flex;\n  width: 100%;\n  flex-direction: column;\n  position: absolute;\n`;\n\nconst Sidebar = styled.div`\n  position: absolute;\n  right: 40px; \n  height: 100%; \n  width: 62px; \n  padding-top:32px;\n  padding-bottom:32px;\n`;\n\nconst SidebarContent = styled.div`\n  padding: 40px 16px;\n  display: flex;\n  height: 100%;\n  background: #22272B;\n  color: white;\n  border-radius: 6px;\n  border: 1px solid #FFF;\n`;\n\nconst Profile = styled.button`\n  background: #191a1a;\n  right: 50px;\n  top: 30px;\n  padding: 10px 22px;\n  @media (max-width: 510px) {\n    padding: 6px 15px;\n    right: 15px;\n    top: 15px;\n  }\n`;\n\nconst Location = styled.button`\n  background: unset;\n  bottom: 50px;\n  padding: 10px 22px;\n  @media (max-width: 510px) {\n    padding: 6px 15px;\n    bottom: 15px;\n  }\n`;\n\nconst BtnStyle = {\n  borderRadius: \"6px\",\n  border: \"1px solid rgb(255, 255, 255)\",\n  color: \"white\",\n  position: \"absolute\",\n  zIndex: 1,\n};\n\nconst BtnStyle2 = {\n  background: \"white\",\n  borderRadius: \"6px\",\n  border: \"1px solid rgb(255, 255, 255)\",\n  color: \"#191a1a\",\n  position: \"absolute\",\n  zIndex: 1,\n};\n\nconst getFirstSBTToken = () => {\n  const view = Near.view(\"registry.i-am-human.near\", \"sbt_tokens_by_owner\", {\n    account: `${context.accountId}`,\n    issuer: \"fractal.i-am-human.near\",\n  });\n  return view?.[0]?.[1]?.[0];\n};\n\nconst hasSBTToken = getFirstSBTToken() !== undefined;\n\nconst getMyData = () => {\n  return asyncFetch(API_URL + `/auth/account?accountId=${accountId}`).then(\n    (res) => {\n      if (res.ok) {\n        return res.body.user;\n      }\n    }\n  );\n};\n\nconst getLocations = () => {\n  return asyncFetch(API_URL + `/location`).then((res) => {\n    if (res.ok) {\n      return res.body;\n    }\n  });\n};\n\nconst getMyInfor = async () => {\n  getMyData().then((user) => {\n    State.update({\n      user,\n      loaded: true,\n    });\n  });\n};\n\nconst getLocationsData = async () => {\n  getLocations().then((data) => {\n    State.update({\n      locations: data,\n      loaded: true,\n    });\n  });\n};\n\nconst onProfileClose = () => {\n  State.update({ profileModal: false });\n};\n\nconst onFiltersClose = () => {\n  State.update({ filtersModal: false });\n};\n\nconst onHumanClose = () => {\n  State.update({ humanAlert: false });\n};\n\nconst onFilter = () => {\n  const { locations, filters } = state;\n  const result = locations.filter((row) => {\n    if (row.user.role === filters.role) {\n      if (filters.community.length) {\n        const state = !!filters.community.find(\n          (_row) => _row === row.user.community\n        );\n        if (state) return true;\n      } else return true;\n    }\n    return false;\n  });\n  State.update({\n    ...state,\n    locations: result,\n  });\n};\n\nconst handleSaveLocation = () => {\n  asyncFetch(`${API_URL}/location/bos`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ accountId }),\n  }).then((res) => {\n    State.update({ edit: !state.edit });\n  });\n};\n\nconst setOpenInfo = () => {\n  State.update({\n    openInfo: !state.openInfo,\n  });\n};\n\nif (!state.loaded) {\n  getMyInfor();\n  getLocationsData();\n}\n\nconst firstLoad = Storage.privateGet(\"load\", \"0\");\nif (firstLoad === \"0\") {\n  State.update({\n    ...state,\n    openInfo: true,\n  });\n  Storage.privateSet(\"load\", \"1\");\n}\n\nreturn (\n  <Wrapper>\n    <Header>\n      <Widget src={`${Owner}/widget/Header`} />\n    </Header>\n    {accountId && hasSBTToken && (\n      <Widget\n        src={`${Owner}/widget/Human-sidebar`}\n        props={{\n          humans: state.locations.length,\n          profileModal: state.profileModal,\n          filtersModal: state.filtersModal,\n          showProfile: () => {\n            State.update({ filtersModal: false, profileModal: true });\n          },\n          showFilters: () => {\n            State.update({ filtersModal: true, profileModal: false });\n          },\n        }}\n      />\n    )}\n\n    {accountId && hasSBTToken && (\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <Location\n          class=\"btn\"\n          style={state.edit ? BtnStyle2 : BtnStyle}\n          onClick={handleSaveLocation}\n        >\n          {`${!state.edit ? \"Edit\" : \"Save\"} location`}\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"24\"\n            height=\"24\"\n            viewBox=\"0 0 24 24\"\n          >\n            <g\n              fill=\"none\"\n              stroke=\"currentColor\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"2\"\n            >\n              <path d=\"M13 9a1 1 0 1 1-2 0a1 1 0 0 1 2 0Z\" />\n              <path d=\"M17.5 9.5c0 3.038-2 6.5-5.5 10.5c-3.5-4-5.5-7.462-5.5-10.5a5.5 5.5 0 1 1 11 0Z\" />\n            </g>\n          </svg>\n        </Location>\n      </div>\n    )}\n\n    {accountId && hasSBTToken && state.profileModal && (\n      <Widget\n        src={`${Owner}/widget/Human-Profile-Modal`}\n        props={{\n          onClose: onProfileClose,\n          API_URL,\n          user: state.user,\n          getMyInfor,\n        }}\n      />\n    )}\n\n    {accountId && hasSBTToken && state.filtersModal && (\n      <Widget\n        src={`${Owner}/widget/Human-Filters-Modal`}\n        props={{\n          onClose: onFiltersClose,\n          API_URL,\n          user: state.user,\n          role: state.filters.role,\n          community: state.filters.community,\n          changeRole: (id) => {\n            State.update({ ...state, filters: { ...state.filters, role: id } });\n          },\n          changeCommunity: (id) => {\n            const array = state.filters.community;\n            const index = array.indexOf(id);\n            if (index > -1) array.splice(index, 1);\n            else array.push(id);\n\n            State.update({\n              ...state,\n              filters: { ...state.filters, community: array },\n            });\n          },\n          onFilter,\n        }}\n      />\n    )}\n\n    {accountId && !hasSBTToken && state.humanAlert && (\n      <Widget\n        src={`${Owner}/widget/HumanAlert`}\n        props={{ onClose: onHumanClose }}\n      />\n    )}\n\n    <Widget\n      src={`${Owner}/widget/Mapbox`}\n      props={{\n        API_URL,\n        accessToken: MAP_TOKEN,\n        styleUrl: MAP_STYLE,\n        center,\n        zoom,\n        markers: state.locations,\n        edit: state.edit,\n      }}\n    />\n\n    <div className=\"position-absolute\" style={{ bottom: 20, left: 20 }}>\n      <button className=\"btn\" onClick={setOpenInfo}>\n        <svg\n          width=\"40\"\n          height=\"40\"\n          viewBox=\"0 0 40 40\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path\n            d=\"M20 2.5C24.6416 2.5 29.0932 4.34388 32.3753 7.626C35.6574 10.9081 37.5013 15.3596 37.5013 20.0012C37.5013 24.6429 35.6574 29.0944 32.3753 32.3765C29.0932 35.6586 24.6416 37.5025 20 37.5025C15.3584 37.5025 10.9069 35.6586 7.62478 32.3765C4.34266 29.0944 2.49878 24.6429 2.49878 20.0012C2.49878 15.3596 4.34266 10.9081 7.62478 7.626C10.9069 4.34388 15.3584 2.5 20 2.5ZM22.625 13.245C23.925 13.245 24.98 12.3425 24.98 11.005C24.98 9.6675 23.9225 8.765 22.625 8.765C21.325 8.765 20.275 9.6675 20.275 11.005C20.275 12.3425 21.325 13.245 22.625 13.245ZM23.0825 27.3125C23.0825 27.045 23.175 26.35 23.1225 25.955L21.0675 28.32C20.6425 28.7675 20.11 29.0775 19.86 28.995C19.7466 28.9533 19.6518 28.8724 19.5927 28.767C19.5336 28.6616 19.514 28.5385 19.5375 28.42L22.9625 17.6C23.2425 16.2275 22.4725 14.975 20.84 14.815C19.1175 14.815 16.5825 16.5625 15.04 18.78C15.04 19.045 14.99 19.705 15.0425 20.1L17.095 17.7325C17.52 17.29 18.015 16.9775 18.265 17.0625C18.3882 17.1067 18.4891 17.1974 18.5462 17.3152C18.6032 17.433 18.6117 17.5685 18.57 17.6925L15.175 28.46C14.7825 29.72 15.525 30.955 17.325 31.235C19.975 31.235 21.54 29.53 23.085 27.3125H23.0825Z\"\n            fill=\"#E8E8E8\"\n          />\n        </svg>\n      </button>\n    </div>\n\n    {state.openInfo && (\n      <Widget\n        src={`${Owner}/widget/Human-Information`}\n        props={{ onClose: setOpenInfo }}\n      />\n    )}\n  </Wrapper>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/humans-of-near.near/widget/humans.nearverselabs.com", "fact_widget_deployments_id": "7d63b5d214083788781c47aec9c6960c", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 15}