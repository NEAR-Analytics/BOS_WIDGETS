{"tx_hash": "CrjxHxVWoNqYsrzDFJDDMX8nvxtXLkpmZA81RbeAEQVr", "action_id_social": "5EuoNf9XtgkDhmCrKPjTxhHETs1hbJehc1LAdxSLjzxz-0-widget", "block_id": 115715740, "block_timestamp": "2024-03-29T11:49:00.363Z", "signer_id": "socializer.near", "widget_name": "NewCampaign", "source_code": "const accountId = context.accountId;\nconst Owner = \"socializer.near\";\nconst profile = Social.getr(`${accountId}/profile`);\nconst API_URL = props?.API_URL || \"https://e2e.nearverselabs.com/\";\n\nconst changePage = props?.changePage || (() => {});\nconst page = props?.page || \"\";\n\nconst requirementsOptions = [\n  { name: \"Follow\", value: \"follow\" },\n  { name: \"Like\", value: \"like\" },\n  { name: \"Repost\", value: \"repost\" },\n  { name: \"Comment\", value: \"comment\" },\n  { name: \"I-Am-Human Verified\", value: \"human\" },\n];\n\nconst hrOption = [\n  { text: \"00\", value: \"00\" },\n  { text: \"06\", value: \"06\" },\n  { text: \"12\", value: \"12\" },\n  { text: \"18\", value: \"18\" },\n  { text: \"24\", value: \"24\" },\n  { text: \"48\", value: \"48\" },\n  { text: \"72\", value: \"72\" },\n];\nconst minOption = [];\n\nfor (let i = 0; i <= 50; i++) {\n  let hr = i + 12;\n  let min = i * 10;\n  if (min == 0) min = \"00\";\n  if (i <= 5) minOption.push({ text: min.toString(), value: min.toString() });\n  //   hrOption.push({ text: hr.toString(), value: hr.toString() });\n}\n\nState.init({\n  requirements: [],\n  username: \"\",\n  post_link: \"\",\n  amount: 0.1,\n  token: \"NEAR\",\n  winners: 1,\n  total_reward: \"\",\n  duration_hr: \"12\",\n  duration_min: \"00\",\n  tokens: [],\n  error: \"\",\n  balance: 0,\n  minimum: 0,\n  loading: false,\n  notification: \"\",\n});\n\nconst Wrapper = styled.div`\n    display: flex;\n    width: 100%;\n    height: 100%;\n    position: relative;\n    background: #FAFAFA;\n    flex-direction: column;\n    padding: 18px;\n\n    input::-webkit-outer-spin-button,\n    input::-webkit-inner-spin-button {\n        -webkit-appearance: none;\n    }\n`;\n\nconst HeadComponent = styled.div`\n  display: flex;\n  width: 100%;\n  flex-direction: row;\n  padding: 16px 14px;\n  justify-content: space-between;\n  border-bottom: 1px solid #B3B3B3;\n`;\n\nconst MainComponent = styled.div`\n    display: flex;\n    width: 100%;\n    flex-direction: column;\n    padding: 16px 14px;\n    gap: 10px;\n    & p {\n        margin : 0\n    }\n\n    @media (max-width: 620px) {\n        .form-group {\n            gap: 0px !important;\n            flex-direction: column;\n            \n            .form-label, .form-value, .form-input {\n                width: 100% !important;\n            }\n\n            .form-reward {\n                gap: 5px !important;\n                flex-direction: column;\n            }\n        }\n\n    }\n  \n`;\n\nconst Input = styled.input`\n  padding: 12px 20px;\n  font-size: 12px;\n  color: #595959;\n  font-weight: 600;\n  line-height: normal;\n  letter-spacing: -0.36px;\n  border-radius: 4px;\n  border: 1px solid var(--light_70, #B3B3B3);\n\n`;\n\nconst Button = styled.button`\n  display: inline-flex;\n  padding: 12px 24px;\n  align-items: flex-start;\n  gap: 10px;\n  border-radius: 6px;\n  background: var(--Dark, #121212); \n  color: var(--light_95, #F3F3F3);\n  text-align: center;\n  font-size: 12px;\n  font-weight: 600;\n  text-transform: capitalize;\n  line-height: normal;\n`;\n\nconst getTokenData = () => {\n  return asyncFetch(API_URL + `/api/token?accountId=${accountId}`).then(\n    (res) => {\n      if (res.ok) {\n        let balance = 0;\n        const tokens = res.body.token.map((item) => {\n          if (item.id === \"NEAR\") balance = item.balance;\n          return {\n            ...item,\n            value: item.id,\n            text: item.id,\n          };\n        });\n\n        State.update({\n          tokens,\n          balance,\n          minimum: tokens[0][\"minimum\"] ?? 0,\n        });\n      }\n    }\n  );\n};\n\nif (!state.tokens.length) getTokenData();\n\nconst changeRequirement = (label) => {\n  State.update({\n    requirements: label,\n  });\n};\n\nconst changePostLink = (link) => {\n  State.update({ error: \"\", post_link: link, loading: true });\n  asyncFetch(API_URL + `/api/campaign`, {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ post_link: link }),\n  }).then((res) => {\n    if (res.ok) {\n      const { error, accountId } = res.body;\n      console.log(res.body, \"-==>data\");\n      if (error) State.update({ ...state, error, loading: false });\n      else if (accountId) {\n        State.update({\n          ...state,\n          loading: false,\n          username: accountId,\n        });\n      }\n    } else {\n      State.update({ ...state, error: res.error, loading: false });\n    }\n  });\n};\n\nconst createCampaign = () => {\n  const {\n    requirements,\n    username,\n    post_link,\n    amount,\n    token,\n    winners,\n    total_reward,\n    duration_hr,\n    duration_min,\n    minimum,\n  } = state;\n  console.log(state);\n\n  if (\n    !requirements.length ||\n    !username ||\n    !post_link ||\n    !amount ||\n    !token ||\n    !winners ||\n    !total_reward ||\n    (duration_hr == \"00\" && duration_min == \"00\")\n  )\n    return State.update({ error: \"Please fill out all form fields\" });\n\n  if (amount < minimum)\n    return State.update({ error: \"Amount must be greater than \" + minimum });\n\n  if (amount < state.minimum)\n    return State.update({ error: `Minimun amount ${minimum}` });\n  if (winners < 1 || winners > 20)\n    return State.update({ error: \" 1 <= Winners <= 20\" });\n\n  State.update({ error: \"\", loading: true });\n  asyncFetch(API_URL + `/api/campaign`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ ...state, accountId }),\n  }).then((res) => {\n    if (res.ok) {\n      const { error, data } = res.body;\n      if (error) State.update({ error, loading: false });\n      else if (data && data === \"success\") {\n        State.update({ loading: false, notification: \"Campaign created!\" });\n        setTimeout(() => {\n          changePage(\"dashboard\");\n        }, 2000);\n      }\n    } else {\n      State.update({ loading: false });\n    }\n  });\n};\n\nreturn (\n  <Wrapper>\n    <div className=\"d-flex\">\n      <p\n        className=\"m-0 position-relative\"\n        style={{ color: \"#B3B3B3\", cursor: \"pointer\", top: 5 }}\n        onClick={() => {\n          changePage(\"dashboard\");\n        }}\n      >\n        {\"< GoBack\"}\n      </p>\n    </div>\n\n    <HeadComponent>\n      <div\n        style={{\n          position: \"relative\",\n          flexDirection: \"column\",\n          display: \"flex\",\n          gap: 7,\n        }}\n      >\n        <h4 style={{ margin: 0 }}>{\"Create New Campaign\"}</h4>\n        <p style={{ fontSize: 14, margin: 0 }}>\n          {\"Fill the form to start a new campaign\"}\n        </p>\n        {state.error && (\n          <p style={{ fontSize: 14, margin: 0, color: \"red\" }}>{state.error}</p>\n        )}\n      </div>\n    </HeadComponent>\n\n    <MainComponent>\n      <div className=\"d-flex form-group\" style={{ gap: 20 }}>\n        <div\n          className=\"d-flex form-label\"\n          style={{ gap: 8, flexDirection: \"column\", width: 240 }}\n        >\n          <p style={{ fontWeight: 600 }}>{\"Project /Username*\"}</p>\n          <p style={{ fontSize: 14, color: \"#595959\" }}>\n            {\"Your Social  Username\"}\n          </p>\n        </div>\n        <div className=\"d-flex align-items-center col-lg-6 form-value\">\n          <Input\n            className=\"col-lg-12 form-input\"\n            placeholder=\"Near Degens || neardegens.near\"\n            value={state.username}\n            readOnly\n          />\n        </div>\n      </div>\n\n      <div className=\"d-flex form-group\" style={{ gap: 20 }}>\n        <div\n          className=\"d-flex form-label\"\n          style={{ gap: 8, flexDirection: \"column\", width: 240 }}\n        >\n          <p style={{ fontWeight: 600 }}>{\"Post  Link*\"}</p>\n          <p style={{ fontSize: 14, color: \"#595959\" }}>\n            {\"Paste the  link of your Near Social Post\"}\n          </p>\n        </div>\n        <div className=\"d-flex align-items-center col-lg-6  form-value\">\n          <Input\n            className=\"col-lg-12 form-input\"\n            value={state.post_link}\n            placeholder=\"https://near.social/\"\n            onChange={(e) => {\n              changePostLink(e.target.value);\n            }}\n          />\n        </div>\n      </div>\n\n      <div className=\"d-flex form-group\" style={{ gap: 20 }}>\n        <div\n          className=\"d-flex form-label\"\n          style={{ gap: 8, flexDirection: \"column\", width: 240 }}\n        >\n          <p style={{ fontWeight: 600 }}>{\"Requirements *\"}</p>\n          <p style={{ fontSize: 14, color: \"#595959\" }}>\n            {\"Participation requirements for this campaign\"}\n          </p>\n        </div>\n        <div className=\"d-flex align-items-center col-lg-6  form-value\">\n          <Typeahead\n            multiple\n            labelKey=\"name\"\n            className=\"col-lg-12  form-input\"\n            onChange={changeRequirement}\n            options={requirementsOptions}\n            placeholder=\"\"\n            selected={state.requirements}\n            positionFixed\n          />\n        </div>\n      </div>\n\n      <div className=\"d-flex form-group\" style={{ gap: 20 }}>\n        <div\n          className=\"d-flex form-label\"\n          style={{ gap: 8, flexDirection: \"column\", width: 240 }}\n        >\n          <p style={{ fontWeight: 600 }}>{\"Reward  Per Winner*\"}</p>\n          <p style={{ fontSize: 14, color: \"#595959\" }}>\n            {\"Amount and Token Type \"}\n          </p>\n        </div>\n        <div className=\"d-flex align-items-center col-lg-8 gap-4  form-value form-reward\">\n          <div className=\"form-value\">\n            <p>{`Amount`}</p>\n            <Input\n              value={state.amount}\n              className=\"form-input\"\n              onChange={(e) => {\n                const amount = e.target.value ? Number(e.target.value) : 0;\n                const total_reward = `${Number(\n                  (amount * state.winners).toFixed(4)\n                )} ${state.token}`;\n                State.update({\n                  amount: amount ? amount : \"\",\n                  total_reward,\n                });\n              }}\n            />\n            <p style={{ fontSize: 12 }}>{`Minimun amount ${state.minimum}`}</p>\n          </div>\n          <div\n            className=\"d-flex flex-column align-items-center form-value \"\n            style={{ gap: 0 }}\n          >\n            <Widget\n              props={{\n                label: \"Token\",\n                value: { value: state.token },\n                placeholder: \"Select Token\",\n                options: state.tokens,\n                onChange: (e) => {\n                  const token = e.value;\n                  const total_reward = `${Number(\n                    (state.amount * state.winners).toFixed(4)\n                  )} ${token}`;\n                  State.update({\n                    token: e.value,\n                    total_reward,\n                    balance: e.balance,\n                    minimum: e.minimum,\n                  });\n                },\n              }}\n              src={`${Owner}/widget/Select`}\n            />\n            <p\n              style={{ fontSize: 12 }}\n            >{`Available Balance = ${state.balance} ${state.token}`}</p>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"d-flex form-group\" style={{ gap: 20 }}>\n        <div\n          className=\"d-flex form-label\"\n          style={{ gap: 8, flexDirection: \"column\", width: 240 }}\n        >\n          <p style={{ fontWeight: 600 }}>{\"Winners*\"}</p>\n          <p style={{ fontSize: 14, color: \"#595959\" }}>\n            {\"No of Winners  <=20\"}\n          </p>\n        </div>\n        <div className=\"d-flex align-items-center col-lg-6  form-value\">\n          <Input\n            type=\"number\"\n            min=\"1\"\n            max=\"20\"\n            step=\"1\"\n            value={state.winners}\n            onChange={(e) => {\n              const winners = e.target.value ? parseInt(e.target.value) : 0;\n              const total_reward = `${Number(\n                (state.amount * winners).toFixed(4)\n              )} ${state.token}`;\n              State.update({\n                winners: winners ? winners : \"\",\n                total_reward,\n              });\n            }}\n            className=\"col-lg-12  form-input\"\n          />\n        </div>\n      </div>\n\n      <div className=\"d-flex form-group\" style={{ gap: 20, marginTop: 10 }}>\n        <div\n          className=\"d-flex form-label\"\n          style={{ gap: 8, flexDirection: \"column\", width: 240 }}\n        >\n          <p style={{ fontWeight: 600 }}>{\"Total Rewards*\"}</p>\n          <p style={{ fontSize: 14, color: \"#595959\" }}>\n            {\"Total = Reward x  No of Winners\"}\n          </p>\n        </div>\n        <div className=\"d-flex align-items-center col-lg-6  form-value\">\n          <Input\n            className=\"col-lg-12  form-input\"\n            value={state.total_reward}\n            readOnly\n          />\n        </div>\n      </div>\n\n      <div className=\"d-flex form-group\" style={{ gap: 20 }}>\n        <div\n          className=\"d-flex form-label\"\n          style={{ gap: 8, flexDirection: \"column\", width: 240 }}\n        >\n          <p style={{ fontWeight: 600 }}>{\"Duration*\"}</p>\n          <p style={{ fontSize: 14, color: \"#595959\" }}>\n            {\"Campaign duration in HH:MM\"}\n          </p>\n        </div>\n        <div className=\"d-flex align-items-center col-lg-6 gap-4  form-value form-duration\">\n          <Widget\n            props={{\n              noLabel: true,\n              width: 100,\n              value: { value: state.duration_hr },\n              options: hrOption,\n              onChange: (e) => {\n                State.update({\n                  duration_hr: e.value,\n                });\n              },\n            }}\n            src={`${Owner}/widget/Select`}\n          />\n          <Widget\n            props={{\n              noLabel: true,\n              width: 100,\n              value: { value: state.duration_min },\n              options: minOption,\n              onChange: (e) => {\n                State.update({\n                  duration_min: e.value,\n                });\n              },\n            }}\n            src={`${Owner}/widget/Select`}\n          />\n        </div>\n      </div>\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"end\",\n          gap: 21,\n        }}\n      >\n        <Button disabled={state.loading} onClick={createCampaign}>\n          {state.loading ? \"Loading...\" : \"Submit\"}\n        </Button>\n      </div>\n    </MainComponent>\n    {state.notification && (\n      <div\n        className=\"d-flex justify-content-end position-absolute\"\n        style={{ right: 10 }}\n      >\n        <Widget\n          props={{\n            text: state.notification,\n          }}\n          src={`${Owner}/widget/Alert`}\n        />\n      </div>\n    )}\n  </Wrapper>\n);\n", "metadata": {"fork_of": "socializer.near/widget/NewCampaign@115654595"}, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/socializer.near/widget/NewCampaign", "fact_widget_deployments_id": "13180a87ec4c8c6009cde32ddec7c8d5", "inserted_timestamp": "2024-03-29T13:29:16.475Z", "modified_timestamp": "2024-03-29T13:29:16.475Z", "__row_index": 39}