{"tx_hash": "6cXvCCvKGjaSQ62MfnPpcd6RR7rGfZu3MnfGPsHPgTCM", "action_id_social": "3uXRNigsoGTjEexB3vXoUZ53WZqWq4Ny8ogXAqQAUrJD-0-widget", "block_id": 101255358, "block_timestamp": "2023-09-16T13:18:23.154Z", "signer_id": "socializer.near", "widget_name": "NewCampaign", "source_code": "const accountId = context.accountId;\nconst Owner = \"socializer.near\";\nconst profile = Social.getr(`${accountId}/profile`);\nconst API_URL = \"http://localhost:3000/api\";\n\nconst changePage = props?.changePage || (() => {});\nconst page = props?.page || \"\";\n\nconst requirementsOptions = [\n  { name: \"Follow\", value: \"1\" },\n  { name: \"Like\", value: \"3\" },\n  { name: \"Repost\", value: \"3\" },\n  { name: \"Comment\", value: \"4\" },\n  { name: \"Minimum Follower Count\", value: \"5\" },\n];\n\nconst tokenOptions = [\n  {\n    text: \"NEAR\",\n    value: \"Near\",\n  },\n  {\n    text: \"NVRS\",\n    value: \"Nvrs\",\n  },\n  {\n    text: \"NEKO\",\n    value: \"Neko\",\n  },\n];\n\nconst hrOption = [];\nconst minOption = [];\n\nfor (let i = 0; i <= 50; i++) {\n  let hr = i + 12;\n  let min = i * 10;\n  if (min == 0) min = \"00\";\n  if (i <= 5) minOption.push({ text: min, value: min });\n  hrOption.push({ text: hr, value: hr });\n}\n\nState.init({\n  requirements: [],\n  username: profile.name ? profile.name : accountId,\n  post_link: \"\",\n  amount: 0,\n  token: \"Near\",\n  winners: 0,\n  total_reward: \"\",\n  duration_hr: 12,\n  duration_min: \"00\",\n});\n\nconst Wrapper = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100%;\n  position: relative;\n  background: #FAFAFA;\n  flex-direction: column;\n  padding: 18px;\n`;\n\nconst HeadComponent = styled.div`\n  display: flex;\n  width: 100%;\n  flex-direction: row;\n  padding: 32px 14px;\n  justify-content: space-between;\n  border-bottom: 1px solid #B3B3B3;\n`;\n\nconst MainComponent = styled.div`\n  display: flex;\n  width: 100%;\n  flex-direction: column;\n  padding: 32px 14px;\n  gap: 24px;\n  & p {\n    margin : 0\n  }\n`;\n\nconst Input = styled.input`\n  padding: 12px 20px;\n  font-size: 12px;\n  color: #595959;\n  font-weight: 600;\n  line-height: normal;\n  letter-spacing: -0.36px;\n  border-radius: 4px;\n  border: 1px solid var(--light_70, #B3B3B3);\n\n`;\n\nconst Button = styled.button`\n  display: inline-flex;\n  padding: 12px 24px;\n  align-items: flex-start;\n  gap: 10px;\n  border-radius: 6px;\n  background: var(--Dark, #121212); \n  color: var(--light_95, #F3F3F3);\n  text-align: center;\n  font-size: 12px;\n  font-weight: 600;\n  text-transform: capitalize;\n  line-height: normal;\n`;\n\nconst getTokenData = () => {\n  return asyncFetch(API_URL + `/token?accountId=${accountId}`).then((res) => {\n    if (res.ok) {\n      State.update({\n        tokens: res.body,\n      });\n    }\n  });\n};\n\nconst changeRequirement = (label) => {\n  console.log(label);\n  State.update({\n    requirements: label,\n  });\n};\n\nreturn (\n  <Wrapper>\n    <div className=\"d-flex\">\n      <p\n        style={{ color: \"#B3B3B3\", cursor: \"pointer\" }}\n        onClick={() => {\n          changePage(\"dashboard\");\n        }}\n      >\n        {\"< GoBack\"}\n      </p>\n    </div>\n    <HeadComponent>\n      <div\n        style={{\n          position: \"relative\",\n          flexDirection: \"column\",\n          display: \"flex\",\n          gap: 14,\n        }}\n      >\n        <h4 style={{ margin: 0 }}>{\"Create New Campaign\"}</h4>\n        <p style={{ fontSize: 14, margin: 0 }}>\n          {\"Fill the form to start a new campaign\"}\n        </p>\n      </div>\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          gap: 21,\n        }}\n      >\n        <Button onClick={() => {}}>{\"Create New Campaigns\"}</Button>\n      </div>\n    </HeadComponent>\n\n    <MainComponent>\n      <div className=\"d-flex\" style={{ gap: 20 }}>\n        <div\n          className=\"d-flex\"\n          style={{ gap: 8, flexDirection: \"column\", width: 240 }}\n        >\n          <p style={{ fontWeight: 600 }}>{\"Project /Username*\"}</p>\n          <p style={{ fontSize: 14, color: \"#595959\" }}>\n            {\"Your Social  Username\"}\n          </p>\n        </div>\n        <div className=\"d-flex align-items-center col-lg-6\">\n          <Input\n            className=\"col-lg-12\"\n            placeholder=\"Near Degens || neardegens.near\"\n            value={state.username}\n            readOnly\n          />\n        </div>\n      </div>\n\n      <div className=\"d-flex\" style={{ gap: 20 }}>\n        <div\n          className=\"d-flex\"\n          style={{ gap: 8, flexDirection: \"column\", width: 240 }}\n        >\n          <p style={{ fontWeight: 600 }}>{\"Post  Link*\"}</p>\n          <p style={{ fontSize: 14, color: \"#595959\" }}>\n            {\"Paste the  link of your Near Social Post\"}\n          </p>\n        </div>\n        <div className=\"d-flex align-items-center col-lg-6\">\n          <Input\n            className=\"col-lg-12\"\n            value={state.post_link}\n            placeholder=\"https://near.social/\"\n            onChange={(e) => {\n              State.update({\n                post_link: e.target.value,\n              });\n            }}\n          />\n        </div>\n      </div>\n\n      <div className=\"d-flex\" style={{ gap: 20 }}>\n        <div\n          className=\"d-flex\"\n          style={{ gap: 8, flexDirection: \"column\", width: 240 }}\n        >\n          <p style={{ fontWeight: 600 }}>{\"Requirements *\"}</p>\n          <p style={{ fontSize: 14, color: \"#595959\" }}>\n            {\"Participation requirements for this campaign\"}\n          </p>\n        </div>\n        <div className=\"d-flex align-items-center col-lg-6\">\n          <Typeahead\n            multiple\n            labelKey=\"name\"\n            className=\"col-lg-12\"\n            // onInputChange={checkLabel}\n            onChange={changeRequirement}\n            options={requirementsOptions}\n            placeholder=\"\"\n            selected={state.requirements}\n            positionFixed\n            // allowNew={(results, props) => {\n            //   return (\n            //     !existingLabelSet.has(props.text) &&\n            //     props.selected.filter(\n            //       (selected) => selected.name === props.text\n            //     ).length == 0 &&\n            //     Near.view(\n            //       nearDevGovGigsContractAccountId,\n            //       \"is_allowed_to_use_labels\",\n            //       { editor: context.accountId, labels: [props.text] }\n            //     )\n            //   );\n            // }}\n          />\n        </div>\n      </div>\n\n      <div className=\"d-flex\" style={{ gap: 20 }}>\n        <div\n          className=\"d-flex\"\n          style={{ gap: 8, flexDirection: \"column\", width: 240 }}\n        >\n          <p style={{ fontWeight: 600 }}>{\"Reward  Per Winner*\"}</p>\n          <p style={{ fontSize: 14, color: \"#595959\" }}>\n            {\"Amount and Token Type \"}\n          </p>\n        </div>\n        <div className=\"d-flex align-items-center col-lg-6 gap-4\">\n          <div>\n            <p>{`Amount`}</p>\n            <Input\n              type=\"number\"\n              value={state.amount}\n              onChange={(e) => {\n                const amount = Number(e.target.value);\n                const total_reward = `${amount * state.winners} ${state.token}`;\n                State.update({\n                  amount,\n                  total_reward,\n                });\n              }}\n            />\n          </div>\n          <div>\n            <Widget\n              props={{\n                label: \"Token\",\n                value: { value: state.token },\n                placeholder: \"Select Token\",\n                options: tokenOptions,\n                onChange: (e) => {\n                  const token = e.value;\n                  const total_reward = `${\n                    state.amount * state.winners\n                  } ${token}`;\n                  State.update({\n                    token: e.value,\n                    total_reward,\n                  });\n                },\n              }}\n              src={`${Owner}/widget/Select`}\n            />\n          </div>\n        </div>\n      </div>\n\n      <div className=\"d-flex\" style={{ gap: 20 }}>\n        <div\n          className=\"d-flex\"\n          style={{ gap: 8, flexDirection: \"column\", width: 240 }}\n        >\n          <p style={{ fontWeight: 600 }}>{\"Winners*\"}</p>\n          <p style={{ fontSize: 14, color: \"#595959\" }}>\n            {\"No of Winners  <=20\"}\n          </p>\n        </div>\n        <div className=\"d-flex align-items-center col-lg-6\">\n          <Input\n            type=\"number\"\n            value={state.winners}\n            onChange={(e) => {\n              const winners = Number(e.target.value);\n              const total_reward = `${winners * state.amount} ${state.token}`;\n              State.update({\n                winners,\n                total_reward,\n              });\n            }}\n            className=\"col-lg-12\"\n          />\n        </div>\n      </div>\n\n      <div className=\"d-flex\" style={{ gap: 20 }}>\n        <div\n          className=\"d-flex\"\n          style={{ gap: 8, flexDirection: \"column\", width: 240 }}\n        >\n          <p style={{ fontWeight: 600 }}>{\"Total Rewards*\"}</p>\n          <p style={{ fontSize: 14, color: \"#595959\" }}>\n            {\"Total = Reward x  No of Winners\"}\n          </p>\n        </div>\n        <div className=\"d-flex align-items-center col-lg-6\">\n          <Input className=\"col-lg-12\" value={state.total_reward} readOnly />\n        </div>\n      </div>\n\n      <div className=\"d-flex\" style={{ gap: 20 }}>\n        <div\n          className=\"d-flex\"\n          style={{ gap: 8, flexDirection: \"column\", width: 240 }}\n        >\n          <p style={{ fontWeight: 600 }}>{\"Duration*\"}</p>\n          <p style={{ fontSize: 14, color: \"#595959\" }}>\n            {\"Campaign duration in HH:MM\"}\n          </p>\n        </div>\n        <div className=\"d-flex align-items-center col-lg-6 gap-4\">\n          <Widget\n            props={{\n              noLabel: true,\n              width: 100,\n              value: { value: state.duration_hr },\n              options: hrOption,\n              onChange: (e) => {\n                State.update({\n                  duration_hr: e.value,\n                });\n              },\n            }}\n            src={`${Owner}/widget/Select`}\n          />\n          <Widget\n            props={{\n              noLabel: true,\n              width: 100,\n              value: { value: state.duration_min },\n              options: minOption,\n              onChange: (e) => {\n                State.update({\n                  duration_min: e.value,\n                });\n              },\n            }}\n            src={`${Owner}/widget/Select`}\n          />\n        </div>\n      </div>\n    </MainComponent>\n  </Wrapper>\n);\n", "metadata": {"platform": "jutsu.ai"}, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/socializer.near/widget/NewCampaign", "fact_widget_deployments_id": "935de70d16c68f5c5462c37c5553a8db", "inserted_timestamp": "2023-09-16T15:23:12.752Z", "modified_timestamp": "2023-09-16T15:23:12.752Z", "__row_index": 16}