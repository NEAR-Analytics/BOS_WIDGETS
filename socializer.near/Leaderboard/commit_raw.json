{"tx_hash": "5jUsiDG1oHj3sTSnwZoDUGawWvPycNiEX3BM4KXenWth", "action_id_social": "3f1FWTXXDNUhgCnvocYHyAScdXqfSSGAZNazLfz7zMfQ-0-widget", "block_id": 116538338, "block_timestamp": "2024-04-10T12:01:00.358Z", "signer_id": "socializer.near", "widget_name": "Leaderboard", "source_code": "const Owner = \"socializer.near\";\nconst accountId = context.accountId;\nconst API_URL = props?.API_URL || \"https://e2e.nearverselabs.com/\";\n\nconst Wrapper = styled.div`\n    width: 600px;\n    @media (max-width: 620px) {\n        width: 100%;\n    }\n`;\n\nconst HeadContent = styled.div`\n    gap: 20px;\n    display: flex;\n    justify-content: space-between;\n    @media (max-width: 620px) {\n        margin-top: 43px;\n        flex-direction: column;\n        \n        .form-group {\n            width: 100% !important;\n            flex-direction: row !important;\n        }\n\n        .form-select-wrapper {\n            width: 100% !important;\n        }    \n    }\n`;\n\nconst UserOptions = [\n  {\n    text: \"Users\",\n    value: \"users\",\n  },\n  {\n    text: \"Creators\",\n    value: \"creators\",\n  },\n];\n\nconst TimeOptions = [\n  {\n    text: \"Monthly\",\n    value: \"monthly\",\n  },\n  {\n    text: \"Weekly\",\n    value: \"weekly\",\n  },\n  {\n    text: \"All-Time\",\n    value: \"all\",\n  },\n];\n\nState.init({\n  menu: { value: \"users\" },\n  time: \"monthly\",\n  list: [],\n  loaded: false,\n  error: \"\",\n});\n\nconst columns = {\n  users: [\n    {\n      title: \"No\",\n      key: \"no\",\n      description: \"No\",\n      width: 5,\n    },\n    {\n      title: \"User\",\n      key: \"accountId\",\n      description: \"Campaign Id\",\n      width: 5,\n      project: true,\n    },\n    {\n      title: \"Campaigns Participated\",\n      key: \"participated\",\n      description: \"Campaigns Participated\",\n      width: 5,\n    },\n    {\n      title: \"Transactions Made\",\n      key: \"txs\",\n      description: \"Transactions Made\",\n      width: 5,\n    },\n  ],\n  creators: [\n    {\n      title: \"No\",\n      key: \"no\",\n      description: \"No\",\n      width: 5,\n    },\n    {\n      title: \"Project/Username\",\n      key: \"accountId\",\n      description: \"Campaign Id\",\n      width: 16,\n      project: true,\n    },\n    {\n      title: \"Participants\",\n      key: \"participants\",\n      description: \"Participants\",\n      width: 16,\n    },\n    {\n      title: \"Campaigns Created\",\n      key: \"created\",\n      description: \"Campaigns Created\",\n      width: 16,\n    },\n  ],\n};\n\nconst selectMenu = (data, key) => {\n  State.update({ [key]: data, loaded: false });\n};\n\nconst getListData = () => {\n  return asyncFetch(\n    API_URL + `/api/campaign/leader?type=${state.menu.value}&time=${state.time}`\n  ).then((res) => {\n    if (res.ok) {\n      const { error, data } = res.body;\n      const listData = data.map((obj) => {\n        if (obj.accountId.length > 30) {\n          const firstPart = obj.accountId.substring(0, 5);\n          const remainingPart = obj.accountId.substring(5);\n          obj.accountId = `${firstPart} ... ${remainingPart}`;\n        }\n        return obj;\n      });\n      if (error) return State.update({ error, loaded: true });\n      State.update({\n        list: listData,\n        loaded: true,\n      });\n    } else {\n      State.update({ error: res.error, loaded: true });\n    }\n  });\n};\n\nif (!state.loaded) getListData();\n\nif (!state.loaded) return <Widget src={`${Owner}/widget/preload`} />;\n\nif (state.error) return <p style={{ color: \"red\" }}>{state.error}</p>;\n\nreturn (\n  <div style={{ width: \"100%\" }}>\n    <Wrapper>\n      <HeadContent>\n        <h3>Leader Board : </h3>\n        <div className=\"d-flex flex-column gap-2 form-group mb-2 align-items-end\">\n          <Widget\n            props={{\n              API_URL,\n              noLabel: true,\n              options: UserOptions,\n              value: state.menu,\n              onChange: (data) => selectMenu(data, \"menu\"),\n            }}\n            src={`${Owner}/widget/Select`}\n          />\n          <div className=\"d-flex gap-2\">\n            {TimeOptions.map((row) => (\n              <button\n                key={row.value}\n                className={`btn btn-${\n                  state.time === row.value ? \"primary\" : \"default\"\n                }`}\n                style={{ border: \"1px solid\" }}\n                onClick={() => selectMenu(row.value, \"time\")}\n              >\n                {row.text}\n              </button>\n            ))}\n          </div>\n        </div>\n      </HeadContent>\n      <div>\n        {state.list.length !== 0 &&\n        state.menu.value &&\n        state.loaded === true ? (\n          <Widget\n            src={`${Owner}/widget/table-pagination`}\n            props={{\n              API_URL,\n              data: state.list,\n              columns: columns[state.menu.value],\n              rowsCount: 10,\n              pagination: false,\n            }}\n          />\n        ) : (\n          \"Data is not exists\"\n        )}\n      </div>\n    </Wrapper>\n  </div>\n);\n", "metadata": {"fork_of": "socializer.near/widget/Leaderboard@116538239"}, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/socializer.near/widget/Leaderboard", "fact_widget_deployments_id": "31c8b7555fe4e6b18e32ade62b91de64", "inserted_timestamp": "2024-04-10T13:40:59.984Z", "modified_timestamp": "2024-04-10T13:40:59.984Z", "__row_index": 8}