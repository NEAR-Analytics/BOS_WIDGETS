{"tx_hash": "DPj9AGaHZq5pptn5YiB5TqqkQNtCmH8TvSpg8Lf8crJs", "action_id_social": "HTTXnjYPUCQ6dyEbMh59EAZmmQQRQyhEG81xQHCKEVd9-0-widget", "block_id": 111298966, "block_timestamp": "2024-01-25T18:04:36.122Z", "signer_id": "socializer.near", "widget_name": "Leaderboard", "source_code": "const Owner = \"socializer.near\";\nconst accountId = context.accountId;\nconst API_URL = props?.API_URL || \"http://localhost:3000\";\n\nconst UserOptions = [\n  {\n    text: \"users\",\n    value: \"users\",\n  },\n  {\n    text: \"Creators\",\n    value: \"creators\",\n  },\n];\n\nconst TimeOptions = [\n  {\n    text: \"Monthly\",\n    value: \"monthly\",\n  },\n  {\n    text: \"Weekly\",\n    value: \"weekly\",\n  },\n  {\n    text: \"All-Time\",\n    value: \"all\",\n  },\n];\n\nState.init({\n  menu: { value: \"users\" },\n  time: { value: \"monthly\" },\n  list: [],\n  load: false,\n  error: \"\",\n});\n\nconst columns = {\n  users: [\n    {\n      title: \"No\",\n      key: \"no\",\n      description: \"No\",\n      width: 5,\n    },\n    {\n      title: \"User\",\n      key: \"accountId\",\n      description: \"Campaign Id\",\n      width: 5,\n      project: true,\n    },\n    {\n      title: \"Campaigns Participated\",\n      key: \"participated\",\n      description: \"Campaigns Participated\",\n      width: 5,\n    },\n    {\n      title: \"Transactions Made\",\n      key: \"txs\",\n      description: \"Transactions Made\",\n      width: 5,\n    },\n  ],\n  creators: [\n    {\n      title: \"No\",\n      key: \"no\",\n      description: \"No\",\n      width: 5,\n    },\n    {\n      title: \"Project/Username\",\n      key: \"accountId\",\n      description: \"Campaign Id\",\n      width: 16,\n      project: true,\n    },\n    {\n      title: \"Participants\",\n      key: \"participants\",\n      description: \"Participants\",\n      width: 16,\n    },\n    {\n      title: \"Campaigns Created\",\n      key: \"created\",\n      description: \"Campaigns Created\",\n      width: 16,\n    },\n  ],\n};\n\nconst selectMenu = (data, key) => {\n  State.update({ [key]: data, load: false });\n};\n\nconst getListData = () => {\n  State.update({\n    load: true,\n  });\n  return asyncFetch(\n    API_URL +\n      `/api/campaign/leader?type=${state.menu.value}&time=${state.time.value}`\n  ).then((res) => {\n    if (res.ok) {\n      const { error, data } = res.body;\n      if (error) return State.update({ error });\n      State.update({\n        list: data,\n      });\n    }\n  });\n};\n\nif (!state.load) getListData();\nif (state.error) return <p style={{ color: \"red\" }}>{state.error}</p>;\nconsole.log(state.list, \"==>state.list\");\nreturn (\n  <div style={{ width: 400 }}>\n    <div className=\"d-flex justify-content-between\" style={{ gap: 20 }}>\n      <h3>Leader Board : </h3>\n      <Widget\n        props={{\n          API_URL,\n          noLabel: true,\n          options: UserOptions,\n          value: state.menu,\n          onChange: (data) => selectMenu(data, \"menu\"),\n        }}\n        src={`${Owner}/widget/Select`}\n      />\n    </div>\n    <div className=\"d-flex justify-content-end\" style={{ marginTop: 10 }}>\n      <Widget\n        props={{\n          API_URL,\n          noLabel: true,\n          options: TimeOptions,\n          value: state.time,\n          onChange: (data) => selectMenu(data, \"time\"),\n        }}\n        src={`${Owner}/widget/Select`}\n      />\n    </div>\n    <div>\n      {state.list.length !== 0 ? (\n        <Widget\n          src={`${Owner}/widget/table-pagination`}\n          props={{\n            API_URL,\n            data: state.list,\n            columns: columns[state.menu.value],\n            rowsCount: 10,\n            pagination: false,\n          }}\n        />\n      ) : (\n        \"Data is not exists\"\n      )}\n    </div>\n  </div>\n);\n", "metadata": {"fork_of": "socializer.near/widget/Leaderboard@111298491"}, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/socializer.near/widget/Leaderboard", "fact_widget_deployments_id": "51e8b3b1ef2e5be5d964b36692f381ea", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 4}