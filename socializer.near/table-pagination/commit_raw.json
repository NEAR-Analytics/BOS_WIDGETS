{"tx_hash": "2kkkWVZcjw6yv3V4Rce4hihBPSDYs4GkSTubiwoVC2rn", "action_id_social": "7WBuNAVZyaw7SGFvqZmP6rzsxjn5m3d2nYgG8xrn8hDK-0-widget", "block_id": 101623402, "block_timestamp": "2023-09-21T12:00:29.586Z", "signer_id": "socializer.near", "widget_name": "table-pagination", "source_code": "if (!props.data || !props.columns) {\n  return \"column and data props are required.\";\n}\n\nconst { data, columns, searchValue } = props;\n\nState.init({ currentPage: 1 });\n\nconst rowsCount = props.rowsCount || 5;\nconst themeColor = props.themeColor;\n\nconst handlePagination = () => {\n  if (!rowsCount) return { table: data };\n  const currentPage = state.currentPage;\n  const totalPages = Math.ceil(data.length / rowsCount);\n  const currentTableData = data.slice(\n    (currentPage - 1) * rowsCount,\n    rowsCount * currentPage\n  );\n  const buttons = Array(totalPages).fill(0);\n  buttons[currentPage - 1] = 1;\n  return { buttons, table: currentTableData };\n};\nconst Table = styled.table`\n  --bs-table-color: ${themeColor?.table_pagination?.table_color};\n  --bs-table-bg: ${themeColor?.table_pagination?.table_bg};\n  --bs-table-border-color: ${themeColor?.table_pagination?.table_border_color};\n  --bs-table-accent-bg: ${themeColor?.table_pagination?.table_accent_bg};\n  --bs-table-striped-color: ${themeColor?.table_pagination?.table_striped_color};\n  --bs-table-striped-bg: ${themeColor?.table_pagination?.table_striped_bg};\n  --bs-table-hover-color: ${themeColor?.table_pagination?.table_hover_color};\n  --bs-table-hover-bg:${themeColor?.table_pagination?.table_hover_bg};\n  --bs-table-hover-bg:${themeColor?.table_pagination?.columntextcolor};\n  border-radius: 8px;\n  background: #F5F1F1;\n  margin: 0;\n`;\n\nconst Button = styled.button`\n  padding: 4px 16px;\n  border-radius: 6px;\n  background: var(--Dark, #121212);\n  text-transform: capitalize;\n  font-weight: 600;\n  font-size: 12px;\n  color: #FFF;\n`;\n\nconst onHandelId = (id) => {\n  let customId = \"\";\n  if (id.length > 15) {\n    customId += id.substring(0, 3);\n    customId += \"...\";\n    customId += id.substring(id.length - 3);\n    return customId;\n  } else {\n    return id;\n  }\n};\n\nreturn (\n  <div className=\"table-responsive\" style={{ backgroundColor: \"#FAFAFA\" }}>\n    <div style={{ borderRadius: 8, border: \"1px solid #AAA\" }}>\n      <Table\n        className={`table table-hover table-striped table-borderless ${props.className}`}\n      >\n        <thead>\n          <tr>\n            {columns.map((th) => (\n              <th\n                key={th.title}\n                className=\"col-1\"\n                style={{\n                  fontSize: 12,\n                  width: `${th.width}%`,\n                  verticalAlign: \"middle\",\n                }}\n                scope=\"col\"\n              >\n                <div>\n                  {th.description ? (\n                    <OverlayTrigger\n                      placement={th.position || \"top\"}\n                      overlay={<Tooltip>{th.description}</Tooltip>}\n                    >\n                      <span>{th.title}</span>\n                    </OverlayTrigger>\n                  ) : (\n                    <span>{th.title}</span>\n                  )}\n                </div>\n              </th>\n            ))}\n          </tr>\n        </thead>\n      </Table>\n    </div>\n\n    {!rowsCount ? (\n      \"\"\n    ) : (\n      <div className=\"d-flex justify-content-end\">\n        <div>\n          <ul\n            className=\"pagination pagination-sm gap-2 mb-0 \"\n            style={{ height: 56, backgroundColor: \"white\", padding: 12 }}\n          >\n            <li className=\"page-item\">\n              <button\n                onClick={() => {\n                  const page = state.currentPage - 1;\n                  if (page > 0) State.update({ currentPage: page });\n                }}\n                className=\"page-link btn\"\n                style={{\n                  width: 32,\n                  height: 32,\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                  borderRadius: 8,\n                  color: themeColor?.table_pagination?.btn_color ?? \"#000\",\n                }}\n              >\n                <svg\n                  width=\"17\"\n                  height=\"16\"\n                  viewBox=\"0 0 17 16\"\n                  fill=\"none\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    d=\"M10.3292 12L11.2692 11.06L8.21589 8L11.2692 4.94L10.3292 4L6.32923 8L10.3292 12Z\"\n                    fill=\"black\"\n                  />\n                </svg>\n              </button>\n            </li>\n            {data.length > 0 &&\n              handlePagination().buttons.map((btn, i) => {\n                return (\n                  <li key={i} className=\"page-item\">\n                    <button\n                      onClick={() => State.update({ currentPage: i + 1 })}\n                      className=\"page-link btn\"\n                      style={{\n                        width: 32,\n                        height: 32,\n                        padding: 6,\n                        borderRadius: 8,\n                        background:\n                          state.currentPage === i + 1 ? \"#121212\" : \"#fff\",\n                        borderColor:\n                          themeColor?.table_pagination?.btn_border ?? \"#000\",\n                        color: state.currentPage === i + 1 ? \"#fff\" : \"#000\",\n                      }}\n                    >\n                      {i + 1}\n                    </button>\n                  </li>\n                );\n              })}\n            <li className=\"page-item\">\n              <button\n                onClick={() => {\n                  const page = state.currentPage + 1;\n                  if (handlePagination().buttons.length >= page)\n                    State.update({ currentPage: page });\n                }}\n                className=\"page-link btn\"\n                style={{\n                  width: 32,\n                  height: 32,\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                  borderRadius: 8,\n                  color: themeColor?.table_pagination?.btn_color ?? \"#000\",\n                }}\n              >\n                <svg\n                  width=\"17\"\n                  height=\"16\"\n                  viewBox=\"0 0 17 16\"\n                  fill=\"none\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    d=\"M6.20923 4L5.26923 4.94L8.32256 8L5.26923 11.06L6.20923 12L10.2092 8L6.20923 4Z\"\n                    fill=\"black\"\n                  />\n                </svg>\n              </button>\n            </li>\n          </ul>\n        </div>\n      </div>\n    )}\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/socializer.near/widget/table-pagination", "fact_widget_deployments_id": "4cab629e8461a155249b62edb7b17936", "inserted_timestamp": "2023-09-21T13:50:34.533Z", "modified_timestamp": "2023-09-21T13:50:34.533Z", "__row_index": 106}