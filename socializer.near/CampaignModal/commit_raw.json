{"tx_hash": "9KFRkzu7bvcoNU675iZ6GntZCoj7VjbW6kPrivdAnXec", "action_id_social": "3oE2BoEDRggoNLEUZoy1F9amkokQhGYo5ubJGsJzf938-0-widget", "block_id": 116054125, "block_timestamp": "2024-04-03T14:49:58.952Z", "signer_id": "socializer.near", "widget_name": "CampaignModal", "source_code": "const accountId = context.accountId;\r\nif (!accountId) return;\r\n\r\nconst API_URL = props.API_URL || \"http://localhost:3000\";\r\n\r\nconst { onClose, data } = props;\r\nconst link = data.post_link.split(\"?\")[1].split(\"&\");\r\nconst posterId = link[0].split(\"=\")[1];\r\n\r\nState.init({\r\n    posterAvatar: `https://i.near.social/magic/large/https://near.social/magic/img/account/${posterId}`,\r\n    error: \"\",\r\n    like: false,\r\n    follow: false,\r\n    repost: false,\r\n    comment: false,\r\n    human: false,\r\n    loaded: false,\r\n    loading: false,\r\n    notification=== \"\" ? 1213131 : \"\",\r\n});\r\n\r\nconst ModalOverlay = styled.div`\r\n  background: white;\r\n  position: absolute;\r\n  bottom: 0px;\r\n  right: 0px;\r\n  border-radius: 3px;\r\n  border: 1px solid;\r\n  display: flex;\r\n  flex-direction: column;\r\n  z-index: 100;\r\n  width: 400px;\r\n  height: 100%;\r\n  overflow: auto;\r\n  @media (max-width: 510px) {\r\n    right: 10px;\r\n    top: 54px;\r\n    width: 96%;\r\n  }\r\n`;\r\n\r\nconst ModalContent = styled.div`\r\n  padding: 20px;\r\n  width: 100%;\r\n  color: black;\r\n  border-radius: 4px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap:1px;\r\n  & p{\r\n    margin: 0\r\n  }\r\n`;\r\n\r\nconst ModalAction = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 15px 40px;\r\n`;\r\n\r\nconst ModalTitle = styled.h4`\r\n  color: black;\r\n  font-weight: 700;\r\n  line-height: 27px;\r\n  margin: 0\r\n`;\r\n\r\nconst Button = styled.button`\r\n  padding: 8px 20px;\r\n  background-color:#121212;\r\n  color: white;\r\n  border-radius: 6px;\r\n  font-size: 12px;\r\n  font-weight: 600;\r\n  width: 150px;\r\n  &:hover {\r\n    background-color: grey;\r\n    color: #191a1a;\r\n  }\r\n  &:active {\r\n    background-color: grey;\r\n    color: #191a1a;\r\n  }\r\n`;\r\n\r\nconst PostLink = styled.a`\r\n  padding: 8px 20px;\r\n  background-color:#121212;\r\n  color: white;\r\n  border-radius: 6px;\r\n  font-size: 12px;\r\n  font-weight: 600;\r\n  width: 150px;\r\n  &:hover {\r\n    background-color: grey;\r\n    color: #191a1a;\r\n  }\r\n  &:active {\r\n    background-color: grey;\r\n    color: #191a1a;\r\n  }\r\n`;\r\n\r\nconst TextField = styled.input`\r\npadding: 10px 15px;\r\nfont-size: 16px;\r\nborder-radius: 6px;\r\nborder: 2px solid rgb(255, 255, 255);\r\nbackground-color: #191a1a;\r\n`;\r\n\r\nconst getVerifyState = () => {\r\n    State.update({ error: \"\", loading: true });\r\n    asyncFetch(\r\n        API_URL + `/api/campaign/verify?accountId=${accountId}&id=${data._id}`\r\n    ).then((res) => {\r\n        if (res.ok) {\r\n            const { error, data } = res.body;\r\n            if (error) State.update({ error, loading: false });\r\n            else if (data) {\r\n                const { like, follow, repost, comment, human, finished } = data;\r\n                State.update({\r\n                    like,\r\n                    follow,\r\n                    repost,\r\n                    comment,\r\n                    human,\r\n                    error: finished ? \"\" : \"Please complete all tasks\",\r\n                    loaded: true,\r\n                    loading: false,\r\n                });\r\n            }\r\n        }\r\n    });\r\n};\r\n\r\nif (!state.loaded) getVerifyState();\r\n\r\nconst verifyEnter = () => {\r\n    State.update({ error: \"\", loading: true });\r\n    asyncFetch(API_URL + `/api/campaign/verify`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ accountId, id: data._id }),\r\n    }).then((res) => {\r\n        if (res.ok) {\r\n            const { error, data } = res.body;\r\n            if (error) State.update({ error, loading: false });\r\n            else if (data) {\r\n                const { like, follow, repost, comment, human, finished } = data;\r\n                State.update({\r\n                    like,\r\n                    follow,\r\n                    repost,\r\n                    comment,\r\n                    error: finished ? \"\" : \"Please complete all tasks\",\r\n                    notification=== \"\" ? 1213131 : finished ? \"Participation Successful\" : \"\",\r\n                    human,\r\n                    loading: false,\r\n        });\r\n}\r\n    }\r\n  });\r\n};\r\n\r\nreturn (\r\n    <ModalOverlay>\r\n        <ModalContent>\r\n            <button\r\n                style={{\r\n                    width: 40,\r\n                    position: \"absolute\",\r\n                    right: 19,\r\n                    background: \"unset\",\r\n                    borderColor: \"white\",\r\n                    color: \"black\",\r\n                }}\r\n                onClick={onClose}\r\n            >\r\n                X\r\n            </button>\r\n            <ModalTitle>{`NEAR DEGENS`}</ModalTitle>\r\n            <h4>{`Camaign Details`}</h4>\r\n            <img\r\n                style={{ width: \"100%\", height: 250 }}\r\n                src={state.posterAvatar}\r\n                onError={() => {\r\n                    State.update({\r\n                        myAvatar:\r\n                            \"https://ipfs.near.social/ipfs/bafkreibmiy4ozblcgv3fm3gc6q62s55em33vconbavfd2ekkuliznaq3zm\",\r\n                    });\r\n                }}\r\n            />\r\n\r\n            <div\r\n                className=\"d-flex\"\r\n                style={{ flexDirection: \"column\", gap: 25, padding: 20 }}\r\n            >\r\n                <p>\r\n                    {`Please ensure you do the tasks below before clicking on Verify & Enter:`}\r\n                </p>\r\n                <p>{`Campaign Id: ${data.id}`}</p>\r\n                {data?.requirements.map((row, index) => (\r\n                    <div className=\"d-flex justify-content-between align-items-center\">\r\n                        <p>\r\n                            <b>{`${index + 1})`}</b>\r\n                            <span>{row.name}</span>\r\n                        </p>\r\n\r\n                        {state[row.value] ? (\r\n                            <svg\r\n                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                                width=\"20\"\r\n                                height=\"20\"\r\n                                viewBox=\"0 0 15 15\"\r\n                            >\r\n                                <path\r\n                                    fill=\"#038d2e\"\r\n                                    fill-rule=\"evenodd\"\r\n                                    d=\"M0 7.5a7.5 7.5 0 1 1 15 0a7.5 7.5 0 0 1-15 0Zm7.072 3.21l4.318-5.398l-.78-.624l-3.682 4.601L4.32 7.116l-.64.768l3.392 2.827Z\"\r\n                                    clip-rule=\"evenodd\"\r\n                                />\r\n                            </svg>\r\n                        ) : (\r\n                            <svg\r\n                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                                width=\"24\"\r\n                                height=\"24\"\r\n                                viewBox=\"0 0 24 24\"\r\n                            >\r\n                                <path\r\n                                    fill=\"red\"\r\n                                    d=\"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10s10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17L12 13.41L8.41 17L7 15.59L10.59 12L7 8.41L8.41 7L12 10.59L15.59 7L17 8.41L13.41 12L17 15.59z\"\r\n                                />\r\n                            </svg>\r\n                        )}\r\n                    </div>\r\n                ))}\r\n                {state.error && (\r\n                    <p style={{ fontSize: 14, margin: 0, color: \"red\" }}>{state.error}</p>\r\n                )}\r\n            </div>\r\n        </ModalContent>\r\n        <ModalAction>\r\n            <PostLink className=\"btn\" target=\"_blank\" href={data.post_link}>\r\n                {`Goto Post`}\r\n                <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    width=\"24\"\r\n                    height=\"24\"\r\n                    viewBox=\"0 0 24 24\"\r\n                >\r\n                    <path\r\n                        fill=\"#3c7eff\"\r\n                        d=\"M9.043 5.793L2.836 12l6.207 6.207l1.414-1.414L5.664 12l4.793-4.793l-1.414-1.414Zm5.914 12.414L21.164 12l-6.207-6.207l-1.414 1.414L18.336 12l-4.793 4.793l1.414 1.414Z\"\r\n                    />\r\n                </svg>\r\n            </PostLink>\r\n            <Button\r\n                className=\"btn\"\r\n                onClick={verifyEnter}\r\n                disabled={state.loading}\r\n            >{`Verify & Enter`}</Button>\r\n        </ModalAction>\r\n        <div\r\n            className=\"d-flex justify-content-end position-absolute\"\r\n            style={{ right: 10 }}\r\n        >\r\n            <Widget\r\n                props={{\r\n                    text: state.notification === \"\" ? 1213131 : state.notification,\r\n                }}\r\n                src={`${Owner}/widget/Alert`}\r\n            />\r\n        </div>\r\n    </ModalOverlay>\r\n);\r\n", "metadata": {"fork_of": "socializer.near/widget/CampaignModal@116053953"}, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/socializer.near/widget/CampaignModal", "fact_widget_deployments_id": "85fff53299e3467585c0477437f7bf81", "inserted_timestamp": "2024-04-03T16:44:46.828Z", "modified_timestamp": "2024-04-03T16:44:46.828Z", "__row_index": 4}