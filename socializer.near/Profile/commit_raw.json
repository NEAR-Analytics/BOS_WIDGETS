{"tx_hash": "7NPxXF8h2MaRSnA1sfQvfFKMFrBUN191NXrhsdggdPEF", "action_id_social": "4Jo1PD1LhTywwE5HWQgQvvdFs76vB6bF8TKBtgqXrwSr-0-widget", "block_id": 101473202, "block_timestamp": "2023-09-19T11:59:52.863Z", "signer_id": "socializer.near", "widget_name": "Profile", "source_code": "const accountId = context.accountId;\nconst Owner = \"socializer.near\";\nconst Admin = \"humans-of-near.near\";\nconst profile = Social.getr(`${accountId}/profile`);\nconst widgets = Social.getr(`${accountId}/widget`) ?? {};\n\nconst API_URL = props?.API_URL || \"http://localhost:3000\";\n\nState.init({\n  myAvatar: `https://i.near.social/magic/large/https://near.social/magic/img/account/${accountId}`,\n  tokens: [],\n  loaded: false,\n  error: \"\",\n  loading: false,\n});\n\nconst columns = [\n  {\n    title: \"Token Name\",\n    key: \"name\",\n    width: 25,\n    align: \"left\",\n  },\n  {\n    title: \"Token Contract Address\",\n    key: \"contract\",\n    width: 25,\n    align: \"center\",\n  },\n  {\n    title: \"Token Deposited\",\n    key: \"balance\",\n    width: 25,\n    align: \"center\",\n  },\n  {\n    title: \"\",\n    key: \"action\",\n    width: 25,\n    align: \"center\",\n    action: true,\n  },\n];\n\nconst Wrapper = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100%;\n  position: relative;\n  background: #FAFAFA;\n  flex-direction: column;\n  padding: 18px;\n  gap: 18px;\n`;\n\nconst WalletComponent = styled.div`\n  display: flex;\n  width: 100%;\n  background: #F3F3F3;\n  flex-direction: column;\n  padding: 24px;\n  border-radius: 8px;\n  border: 1px solid var(--light_90, #E6E6E6);\n  gap: 20px;\n`;\n\nconst TokenComponent = styled.div`\n  display: flex;\n  width: 100%;\n  background: #F3F3F3;\n  flex-direction: column;\n  padding: 6px 24px;\n  border-radius: 8px;\n  border: 1px solid var(--light_90, #E6E6E6);\n  gap: 20px;\n  margin-top: 50px;\n`;\n\nconst Avatar = styled.img`\n  display: flex;\n  width: 100px;\n  height: 100px;\n  border-radius: 100px;\n`;\n\nconst Button = styled.button`\n  width: 100%;\n  padding: 8px 9px 8px 28px;\n  display: flex;\n  gap: 7px;\n  border-radius: 6px;\n  border: 1px solid var(--light_90, #E6E6E6);\n  background: var(--Dark, #121212);\n  text-align: center;\n  color: var(--light_95, #F3F3F3);\n  font-size: 12px;\n  font-weight: 600;\n  text-transform: capitalize;\n  margin: auto;\n`;\n\nconst Table = styled.table`\n  border-radius: 8px;\n  background: #F5F1F1;\n  margin: 0;\n`;\n\nconst Input = styled.input`\n  width: 80px;\n`;\n\nconst getTokenData = () => {\n  return asyncFetch(API_URL + `/api/token?accountId=${accountId}`).then(\n    (res) => {\n      if (res.ok) {\n        State.update({\n          tokens: res.body,\n          loaded: true,\n        });\n      }\n    }\n  );\n};\n\nif (!state.loaded) getTokenData();\n\nconst toFixed = (x) => {\n  if (Math.abs(x) < 1.0) {\n    var e = parseInt(x.toString().split(\"e-\")[1]);\n    if (e) {\n      x *= Math.pow(10, e - 1);\n      x = \"0.\" + new Array(e).join(\"0\") + x.toString().substring(2);\n    }\n  } else {\n    var e = parseInt(x.toString().split(\"+\")[1]);\n    if (e) {\n      e -= 20;\n      x /= Math.pow(10, e);\n      x += new Array(e + 1).join(\"0\");\n    }\n  }\n  return x.toString();\n};\n\nconst deposit = async (item) => {\n  const amount = Number(state[item.id]);\n  let oneTeraGas = 100000000000000;\n  let oneNEARInYoctoNEAR = Number(item.yocto_near);\n\n  if (!amount || amount <= 0) return;\n  if (item.id === \"NEAR\") {\n    Near.call(\n      item.contract,\n      item.method,\n      Admin,\n      oneTeraGas,\n      amount * oneNEARInYoctoNEAR\n    );\n  } else {\n    let amt = toFixed((amount + 0.00001) * oneNEARInYoctoNEAR);\n    console.log(\"==>amt\", amt);\n    const data = {\n      receiver_id: Admin,\n      amount: amt,\n      memo: \"Token transfer\",\n    };\n    Near.call(item.contract, item.method, data, oneTeraGas, 1);\n  }\n};\n\nconst withdraw = async (item) => {\n  const amount = Number(state[item.id]);\n\n  if (!amount || amount <= 0) return;\n  let data = {\n    accountId,\n    amount,\n    token: item._id,\n  };\n\n  State.update({ error: \"\" });\n  asyncFetch(API_URL + `/api/balance/withdraw`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  }).then((res) => {\n    if (res.ok) {\n      const { error, data } = res.body;\n      if (error) State.update({ error });\n      else if (data && data === \"success\") {\n        State.update({\n          loaded: false,\n        });\n      }\n    }\n  });\n};\n\nreturn (\n  <Wrapper>\n    <div className=\"d-flex align-items-center\" style={{ gap: 24 }}>\n      <Avatar\n        src={state.myAvatar}\n        onError={() => {\n          State.update({\n            myAvatar:\n              \"https://ipfs.near.social/ipfs/bafkreibmiy4ozblcgv3fm3gc6q62s55em33vconbavfd2ekkuliznaq3zm\",\n          });\n        }}\n      />\n      <h4>Hi, {profile.name ? profile.name : accountId}</h4>\n    </div>\n    <WalletComponent>\n      <div className=\"d-flex \" style={{ borderBottom: \"1px solid #808080\" }}>\n        <h5 style={{ fontWeight: 700, fontSize: 18, lineHeight: \"150%\" }}>\n          {\"Near Wallet\"}\n        </h5>\n      </div>\n      <div className=\"d-flex \">\n        <h5 style={{ fontWeight: 600, fontSize: 18 }}>{accountId}</h5>\n      </div>\n    </WalletComponent>\n    <TokenComponent>\n      <div\n        className=\"d-flex justify-content-between\"\n        style={{\n          borderBottom: \"1px solid #808080\",\n          gap: 12,\n        }}\n      >\n        <div\n          className=\"d-flex\"\n          style={{\n            gap: 12,\n            flexDirection: \"column\",\n          }}\n        >\n          <h5 style={{ fontWeight: 700, fontSize: 18, lineHeight: \"150%\" }}>\n            {\"Token Balances\"}\n          </h5>\n          <p style={{ fontSize: 12 }}>\n            {\n              \"These NEP Tokens Can be allocated as bounty for users that engage with your tweets. These can be withdrawn to you wallet at any time\"\n            }\n          </p>\n          {state.error && (\n            <p style={{ fontSize: 12, color: \"red\" }}>{state.error}</p>\n          )}\n        </div>\n        <div className=\"d-flex\" style={{ minWidth: 150 }}>\n          <Button>\n            {\"Select Token\"}\n            <span style={{ height: 18 }}>\n              <svg\n                width=\"30\"\n                height=\"26\"\n                viewBox=\"0 0 30 26\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <g filter=\"url(#filter0_d_58_4394)\">\n                  <rect\n                    x=\"4\"\n                    y=\"18\"\n                    width=\"18\"\n                    height=\"22\"\n                    rx=\"8\"\n                    transform=\"rotate(-90 4 18)\"\n                    fill=\"#141522\"\n                    shape-rendering=\"crispEdges\"\n                  />\n                  <path\n                    d=\"M19 5.27337L18.06 4.33337L15 7.38671L11.94 4.33337L11 5.27337L15 9.27337L19 5.27337Z\"\n                    fill=\"white\"\n                  />\n                  <path\n                    d=\"M19 9.66668L18.06 8.72668L15 11.78L11.94 8.72669L11 9.66669L15 13.6667L19 9.66668Z\"\n                    fill=\"white\"\n                  />\n                  <rect\n                    x=\"4.5\"\n                    y=\"17.5\"\n                    width=\"17\"\n                    height=\"21\"\n                    rx=\"7.5\"\n                    transform=\"rotate(-90 4.5 17.5)\"\n                    stroke=\"#141522\"\n                    shape-rendering=\"crispEdges\"\n                  />\n                </g>\n              </svg>\n            </span>\n          </Button>\n        </div>\n      </div>\n\n      <div className=\"d-flex \">\n        <Table\n          className={`table table-hover table-striped table-borderless ${props.className}`}\n        >\n          <thead>\n            <tr>\n              {columns.map((th) => (\n                <th\n                  key={th.title}\n                  className=\"col-1\"\n                  style={{\n                    fontSize: 16,\n                    width: `${th.width}%`,\n                    verticalAlign: \"middle\",\n                    textAlign: th.align,\n                  }}\n                  scope=\"col\"\n                >\n                  <div>\n                    <span>{th.title}</span>\n                  </div>\n                </th>\n              ))}\n            </tr>\n          </thead>\n\n          <tbody>\n            {state.tokens.length > 0 &&\n              state.tokens.map((row, i) => {\n                return (\n                  <tr key={row.key}>\n                    {columns.map((td) => {\n                      const key = td.key ? row[td.key] : i + 1;\n                      return (\n                        <td\n                          style={{\n                            color:\n                              td.colors ||\n                              themeColor?.table_pagination?.columntextcolor,\n                            fontSize: 16,\n                            textAlign: td.align,\n                            verticalAlign: \"middle\",\n                          }}\n                        >\n                          {td.action ? (\n                            <div\n                              style={{\n                                display: \"flex\",\n                                gap: 10,\n                                alignItems: \"center\",\n                              }}\n                            >\n                              <Input\n                                type=\"number\"\n                                min=\"0\"\n                                value={state[row.id] ?? 0}\n                                onChange={(e) => {\n                                  State.update({\n                                    [row.id]: e.target.value,\n                                  });\n                                }}\n                              />\n                              <a\n                                href=\"#\"\n                                onClick={() => deposit(row)}\n                                className=\"text-decoration-underline\"\n                              >\n                                Deposit\n                              </a>\n                              <a\n                                href=\"#\"\n                                onClick={() => withdraw(row)}\n                                className=\"text-decoration-underline\"\n                              >\n                                Withdraw\n                              </a>\n                            </div>\n                          ) : (\n                            key\n                          )}\n                        </td>\n                      );\n                    })}\n                  </tr>\n                );\n              })}\n          </tbody>\n        </Table>\n      </div>\n    </TokenComponent>\n  </Wrapper>\n);\n", "metadata": {}, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/socializer.near/widget/Profile", "fact_widget_deployments_id": "c05852098ef27279387bf8ca7deaed45", "inserted_timestamp": "2023-09-19T13:50:51.180Z", "modified_timestamp": "2023-09-19T13:50:51.180Z", "__row_index": 29}