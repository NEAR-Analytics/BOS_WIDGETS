{"tx_hash": "BQnaSkjZKbJz3R17HDqj12LRWQKP3Bvwwffmj4bSjvBD", "action_id_social": "8yDtT5WfDsn1FWrUeymjP9txG1F9Zf8DLsLVC6zg7Kiz-0-widget", "block_id": 116757458, "block_timestamp": "2024-04-13T12:54:47.615Z", "signer_id": "v1.wireframes.near", "widget_name": "Components.Learning.PropsDescriptionCard", "source_code": "/* -------------------------------------------------------------------------- */\n/*\n __        ___           __                               \n \\ \\      / (_)_ __ ___ / _|_ __ __ _ _ __ ___   ___  ___ \n  \\ \\ /\\ / /| | '__/ _ \\ |_| '__/ _` | '_ ` _ \\ / _ \\/ __|\n   \\ V  V / | | | |  __/  _| | | (_| | | | | | |  __/\\__ \\\n    \\_/\\_/  |_|_|  \\___|_| |_|  \\__,_|_| |_| |_|\\___||___/\n\n  =========================================================\n  * Wireframes - v1.0.0\n  =========================================================\n  * Product Page: https://wireframes.design\n  =========================================================\n  * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n                                                                                 */\n/* -------------------------------------------------------------------------- */\nconst StyledPre = styled.pre`\n  page-break-inside: avoid;\n  font-family: monospace;\n  font-size: 12px;\n  line-height: 1.6;\n  margin-bottom: 0.6em;\n  max-width: 100%;\n  display: flex;\n  word-wrap: break-word;\n  height: 50vh;\n  max-width: 80vw;\n  margin: auto;\n  max-height: 80vh;\n  min-height: 20vh;\n  position: relative;\n`;\n\nconst StyleContainer = styled.div`\n  margin-right: auto;\n  margin-left: auto;\n  padding-right: 15px;\n  padding-left: 15px;\n\n  /* Responsive container */\n  @media (min-width: 576px) {\n    max-width: 540px;\n  }\n  @media (min-width: 768px) {\n    max-width: 720px;\n  }\n  @media (min-width: 992px) {\n    max-width: 960px;\n  }\n  @media (min-width: 1200px) {\n    max-width: 1140px;\n  }\n`;\n\nconst PreComponent = ({ children }) => {\n  return <StyledPre>{children}</StyledPre>;\n};\nconst explanation = props;\nconst componentType = props.componentType;\nconst Explanation = `<!DOCTYPE html>\n\n  <html>\n    <head>\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n      <link rel=\"stylesheet\" href=\"https://prismjs.com/themes/prism-okaidia.css\" />\n\n      <style>\n        /* Style the scrollbar */\n        ::-webkit-scrollbar {\n          width: 3px;\n        }\n  \n        /* Handle on hover */\n        ::-webkit-scrollbar-thumb:hover {\n          background: #a4adb3;\n        }\n  \n        /* Handle */\n        ::-webkit-scrollbar-thumb {\n          background: #a4adb3;\n          border-radius: 4px;\n        }\n  \n        /* Track */\n        ::-webkit-scrollbar-track {\n          background: #f1f1f1;\n        }\n  \n        .accordion {\n          background-color: #f7f8f9;\n          color: #007bff;\n          cursor: pointer;\n          padding: 18px;\n          width: 100%;\n          border: none;\n          border-bottom: 1px solid #dcdfe1;\n          border-radius: 5px;\n          text-align: left;\n          outline: none;\n          font-size: 15px;\n          transition: 0.4s;\n        }\n  \n        .main-accordion {\n          margin-bottom: 10px;\n        }\n  \n        .sub-accordion {\n          margin-left: 20px;\n          margin-bottom: 10px;\n        }\n  \n        .active,\n        .accordion:hover {\n          background-color: #eef0f1;\n          color: #004a99;\n        }\n  \n        .accordion:after {\n          content: \"+\";\n          color: #b7bec2;\n          font-weight: bold;\n          float: right;\n          margin-left: 5px;\n        }\n  \n        .accordion:after:hover {\n          background-color: #a4adb3;\n        }\n  \n        .active:after {\n          content: \"-\";\n        }\n  \n        .panel {\n          padding: 0 18px;\n          background-color: white;\n          max-height: 0;\n          overflow: hidden;\n          transition: max-height 0.2s ease-out;\n        }\n  \n        .panel-spacing {\n          margin-bottom: 50px;\n        }\n  \n        .code {\n          background-color: #272822;\n          padding: 20px;\n          border-radius: 10px;\n          box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);\n          margin: 10px;\n          position: relative;\n        }\n        \n      </style>\n    </head>\n    <body>\n      <h2>Props</h2>\n      <p>More Props of the ${componentType} component are also available.</p>\n  \n      <!-- Container for accordion items -->\n      <div id=\"accordionContainer\"></div>\n  \n      <script>\n        // Define accordion items\n        const accordionItems = ${JSON.stringify(explanation)};\n        console.log(accordionItems);\n        // Function to dynamically create accordion elements\n        function createAccordionItem(\n          title,\n          required, \n          content,\n          code,\n          children,\n          accordionContainer\n        ) {\n  \n          // Create accordion button\n          const accordionButton = document.createElement(\"button\");\n          accordionButton.className = \"accordion main-accordion\";\n  \n          if (required == \"true\") {\n            accordionButton.textContent = title + \" (* required)\";\n          } else {\n            accordionButton.textContent = title;\n          }\n  \n          // Create accordion panel\n          const accordionPanel = document.createElement(\"div\");\n          accordionPanel.className = \"panel\";\n          const panelContent = document.createElement(\"p\");\n          panelContent.textContent = content;\n  \n          if (code && code.length > 0) {\n            const codeDiv = document.createElement(\"div\");\n            codeDiv.className = \"code\";\n  \n            const preTag = document.createElement(\"pre\");\n  \n            const codeContent = document.createElement(\"code\");\n            codeContent.className = \"language-js\";\n            codeContent.textContent = code;\n  \n            preTag.appendChild(codeContent);\n  \n            codeDiv.appendChild(preTag);\n  \n            accordionPanel.appendChild(panelContent);\n  \n            accordionPanel.appendChild(preTag);\n          } else {\n            accordionPanel.appendChild(panelContent);\n          }\n  \n          // Append button and panel to container\n          accordionContainer.appendChild(accordionButton);\n          accordionContainer.appendChild(accordionPanel);\n  \n          // Add click event listener to toggle visibility\n          accordionButton.addEventListener(\"click\", function () {\n            this.classList.toggle(\"active\");\n            if (accordionPanel.style.maxHeight) {\n              accordionPanel.style.maxHeight = null;\n            } else {\n              accordionPanel.style.maxHeight = \"100%\";\n            }\n          });\n  \n          // Create child accordions recursively\n          if (children && children.length > 0) {\n            const childContainer = document.createElement(\"div\");\n            accordionPanel.appendChild(childContainer);\n  \n            children.forEach((child) => {\n              createAccordionItem(\n                child.title,\n                child.required,\n                child.content,\n                child.code,\n                child.children,\n                childContainer\n              );\n            });\n          }\n        }\n  \n        // Create accordion items dynamically\n        accordionItems.forEach((item) => {\n          createAccordionItem(\n            item.title,\n            item.required,\n            item.content,\n            item.code,\n            item.children,\n            document.getElementById(\"accordionContainer\")\n          );\n        });\n      </script>\n  \n      <script src=\"https://prismjs.com/components/prism-core.min.js\"></script>\n      <script>\n  document.addEventListener('DOMContentLoaded', function () {\n    Prism.highlightAll();\n  });\n</script>\n      <script src=\"https://prismjs.com/plugins/autoloader/prism-autoloader.min.js\"></script>\n    </body>\n  </html>\n  \n  `;\n\nreturn (\n  <>\n    <div className=\"card\">\n      <StyleContainer>\n        <PreComponent>\n          <iframe\n            srcDoc={Explanation}\n            style={{\n              width: \"100vw\",\n              top: \"0\",\n              zIndex: 1,\n            }}\n          />\n        </PreComponent>\n      </StyleContainer>\n    </div>\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/v1.wireframes.near/widget/Components.Learning.PropsDescriptionCard", "fact_widget_deployments_id": "93e396fcc0c95b9bfd874b1445d4c015", "inserted_timestamp": "2024-04-13T14:37:28.463Z", "modified_timestamp": "2024-04-13T14:37:28.463Z", "__row_index": 1}