{"tx_hash": "BQnaSkjZKbJz3R17HDqj12LRWQKP3Bvwwffmj4bSjvBD", "action_id_social": "8yDtT5WfDsn1FWrUeymjP9txG1F9Zf8DLsLVC6zg7Kiz-0-widget", "block_id": 116757458, "block_timestamp": "2024-04-13T12:54:47.615Z", "signer_id": "v1.wireframes.near", "widget_name": "Components.Carousel.CarouselDetail.AutoSlideCarouselDetail", "source_code": "/* -------------------------------------------------------------------------- */\n/*\n __        ___           __                               \n \\ \\      / (_)_ __ ___ / _|_ __ __ _ _ __ ___   ___  ___ \n  \\ \\ /\\ / /| | '__/ _ \\ |_| '__/ _` | '_ ` _ \\ / _ \\/ __|\n   \\ V  V / | | | |  __/  _| | | (_| | | | | | |  __/\\__ \\\n    \\_/\\_/  |_|_|  \\___|_| |_|  \\__,_|_| |_| |_|\\___||___/\n\n  =========================================================\n  * Wireframes - v1.0.0\n  =========================================================\n  * Product Page: https://wireframes.design\n  =========================================================\n  * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n                                                                                 */\n/* -------------------------------------------------------------------------- */\n\nconst leftArrow = (\n  <Widget\n    src={`v1.wireframes.near/widget/Components.Icon.BootstrapIcons`}\n    props={{\n      iconName: \"arrow-left-circle\",\n      iconSize: \"25px\",\n      iconColor: \"#fff\",\n    }}\n  />\n);\nconst rightArrow = (\n  <Widget\n    src={`v1.wireframes.near/widget/Components.Icon.BootstrapIcons`}\n    props={{\n      iconName: \"arrow-right-circle\",\n      iconSize: \"25px\",\n      iconColor: \"#fff\",\n    }}\n  />\n);\nconst carouselProps = {\n  arrowLeft: leftArrow,\n  arrowRight: rightArrow,\n  slidesData: [\n    {\n      id: 1,\n      image: \"https://wireframes.design/slider1.jpeg\",\n      imageAlt: \"Slide 1\",\n    },\n    {\n      id: 2,\n      image: \"https://wireframes.design/slider2.jpeg\",\n      imageAlt: \"Slide 2\",\n    },\n    {\n      id: 3,\n      image: \"https://wireframes.design/slider3.jpeg\",\n      imageAlt: \"Slide 3\",\n    },\n  ],\n};\n\nconst detail = `\nconst leftArrow = (\n  <Widget\n    src=\"v1.wireframes.near/widget/Components.Icon.BootstrapIcons\"\n    props={{\n      iconName: \"arrow-left-circle\",\n      iconSize: \"25px\",\n      iconColor: \"#fff\",\n    }}\n  />\n);\nconst rightArrow = (\n  <Widget\n    src=\"v1.wireframes.near/widget/Components.Icon.BootstrapIcons\"\n    props={{\n      iconName: \"arrow-right-circle\",\n      iconSize: \"25px\",\n      iconColor: \"#fff\",\n    }}\n  />\n);\n\nconst carouselProps ={\n  arrowLeft: leftArrow,\n  arrowRight: rightArrow,\n  slidesData: [\n    {\n      id: 1,\n      image:\n        \"https://wireframes.design/slider1.jpeg\",\n      imageAlt: \"Slide 1\",\n    },\n    {\n      id: 2,\n      image:\n        \"https://wireframes.design/slider2.jpeg\",\n      imageAlt: \"Slide 2\",\n    },\n  ],\n};\nreturn(\n<Widget src=\"v1.wireframes.near/widget/Components.Carousel.AutoSlideCarousel\" props={carouselProps}/>\n);`;\nconst explanation =\n  \"An 'Auto Slide Carousel' is a type of carousel or slideshow component commonly used to automatically transition between slides at regular intervals without requiring user interaction. It provides a dynamic way to showcase content such as images, products, or featured articles.\";\n\nconst propsExplanation = [\n  {\n    title: \"arrowLeft\",\n    content:\n      \"The 'arrowLeft' simply be a variable name used to hold a reference to an arrow icon or some other representation of a left arrow. e.g.\",\n    code: `const carouselProps = {\n      arrowLeft: leftArrow,\n    };`,\n  },\n  {\n    title: \"arrowRight\",\n    content:\n      \"The 'arrowRight' simply be a variable name used to hold a reference to an arrow icon or some other representation of a left arrow. e.g.\",\n    code: `const carouselProps = {\n      arrowRight: rightArrow,\n    };`,\n  },\n  {\n    title: \"slidesData\",\n    required: \"true\",\n    content:\n      \"You can create an object array as like 'slidesData' to represents a slide with properties like 'id', 'image', and 'imageAlt'. e.g.\",\n    code: `const carouselProps = {\n        slidesData:[\n          {\n            id: 1,\n            image:\n              \"https://wireframes.design/slider1.jpeg\",\n            imageAlt: \"Slide 1\",\n          },\n          {\n            id: 2,\n            image:\n              \"https://wireframes.design/slider2.jpeg\",\n            imageAlt: \"Slide 2\",\n          },\n        ],\n      };`,\n    children: [\n      {\n        title: \"id\",\n        content:\n          \"The 'id' property with a value of '1' likely serves as a unique identifier for a specific item or entity within a system or dataset. e.g.\",\n        code: `const carouselProps = {\n          slidesData:[\n            {\n              id: 1,\n            },\n          ]\n        };`,\n      },\n      {\n        title: \"image\",\n        content:\n          \"The image property is used to specify the URL of an image that will be displayed in a slideshow, carousel, or any other component that renders images dynamically on a webpage.  e.g.\",\n        code: `const carouselProps = {\n          slidesData:[\n            {\n              image: \"https://wireframes.design/slider2.jpeg\",\n            },\n          ]\n        };`,\n      },\n      {\n        title: \"imageAlt\",\n        content:\n          \"The imageAlt property is used to provide alternative text (often abbreviated as 'alt text') for an image within a webpage. e.g.\",\n        code: `const carouselProps = {\n          slidesData:[\n            {\n              imageAlt: \"Slide 1\",\n            },\n          ]\n        };`,\n      },\n    ],\n  },\n  {\n    title: \"carouselWrapperStyle\",\n    content:\n      \"You can use 'carouselWrapperStyle' props to customize or apply the additional CSS to the carousel wrapper. e.g.\",\n    code: `const carouselProps = {\n      carouselWrapperStyle:{\n        border: \"none\",\n      },\n    };`,\n  },\n  {\n    title: \"carouselItemStyle\",\n    content:\n      \"You can use 'carouselItemStyle' props to customize or apply the additional CSS to the carousel image wrapper. e.g.\",\n    code: `const carouselProps = {\n      carouselItemStyle: {\n        border: \"none\",\n      },\n    };`,\n  },\n  {\n    title: \"carouselImageStyle\",\n    content:\n      \"You can use 'carouselImageStyle' props to customize or apply the additional CSS to the carousel images. e.g.\",\n    code: `const carouselProps = {\n      carouselImageStyle: {\n        border: \"none\",\n      },\n    };`,\n  },\n  {\n    title: \"carouselIButtonStyle\",\n    content:\n      \"You can use 'carouselIButtonStyle' props to customize or apply the additional CSS to the carousel buttons. e.g.\",\n    code: `const carouselProps = {\n      carouselIButtonStyle: {\n        margin: \"0px 0px 0px 0px\",\n      },\n    };`,\n  },\n  {\n    title: \"style\",\n    content:\n      \"You can use the style attribute to apply styles to components. e.g.\",\n    code: `const carouselProps = {\n        style:{ \n          itemWidth: \"100%\",\n          itemHeight: \"600px\",\n        },\n      };`,\n    children: [\n      {\n        title: \"itemWidth\",\n        content:\n          \"The props itemWidth typically refers to the width of individual slides in a slideshow or carousel component.You can use various units, such as pixels (px), percentages (%), em units (em), or other length units. e.g.\",\n        code: `const carouselProps = {\n          style:{ \n            itemWidth: '100%',\n          }, \n        };`,\n      },\n      {\n        title: \"itemHeight\",\n        content:\n          \"The props itemHeight typically refers to the height of individual slides in a slideshow or carousel component. e.g.\",\n        code: `const carouselProps = {\n          style:{ \n            itemHeight: '600px',\n          }, \n        };`,\n      },\n      {\n        title: \"imageWidth\",\n        content:\n          \"The props imageWidth typically refers to the width of images within individual slides in a slideshow or carousel component. e.g.\",\n        code: `const carouselProps = {\n          style:{ \n            imageWidth: '100%',\n          }, \n        };`,\n      },\n      {\n        title: \"imageHeight\",\n        content:\n          \"The props imageHeight typically refers to the height of images within individual slides in a slideshow or carousel component. e.g.\",\n        code: `const carouselProps = {\n          style:{ \n            imageHeight: '100%',\n          }, \n        };`,\n      },\n      {\n        title: \"imageObjectFit\",\n        content:\n          \"The props imageObjectFit refers to a configuration option used to specify how images within individual slides in a slideshow or carousel component should be resized and fitted within their container. e.g.\",\n        code: `const carouselProps = {\n          style:{ \n            imageObjectFit: 'cover',\n          }, \n        };`,\n      },\n      {\n        title: \"btnBackgroundColor\",\n        content:\n          \"The props btnBackgroundColor is used for specifying the background color of a button. t allows you to define the color that fills the background area of a button element. e.g.\",\n        code: `const carouselProps = {\n          style:{ \n            btnBackgroundColor: 'transparent',\n          }, \n        };`,\n      },\n      {\n        title: \"btnBorder\",\n        content:\n          \"The btnBorder props is used for specifying the border style, width, and color of a button. e.g.\",\n        code: `const carouselProps = {\n          style:{ \n            btnBorder: 'none',\n          }, \n        };`,\n      },\n      {\n        title: \"btnBorderRadius\",\n        content:\n          \"The props btnBorderRadius is used to define the radius of the border corners of a button. It allows you to create buttons with rounded corners. e.g.\",\n        code: `const carouselProps = {\n          style:{ \n            btnBorderRadius: '9999px',\n          }, \n        };`,\n      },\n      {\n        title: \"btnFontColor\",\n        content:\n          \"The props btnColor is used for specifying the color of a button. e.g.\",\n        code: `const carouselProps = {\n          style:{ \n            btnColor: '#fff',\n          }, \n        };`,\n      },\n      {\n        title: \"btnPadding\",\n        content:\n          \"The props btnPadding is used to define the padding (spacing) between the content (text or icon) and the edges of a button. e.g.\",\n        code: `const carouselProps = {\n          style:{ \n            btnPadding: '4px 12px',\n          }, \n        };`,\n      },\n      {\n        title: \"btnPosition\",\n        content:\n          \"The props btnPosition is used to the positioning of a button element within a layout or container. e.g.\",\n        code: `const carouselProps = {\n          style:{ \n            btnPosition: 'absolute',\n          }, \n        };`,\n      },\n      {\n        title: \"btnTop\",\n        content:\n          \"The props btnTop is used to control the vertical position of a button element within a layout or container. e.g.\",\n        code: `const carouselProps = {\n          style:{ \n            btnTop: '50%',\n          }, \n        };`,\n      },\n    ],\n  },\n];\n\nconst props = {\n  copyBtn: detail,\n  component: (\n    <div className=\"row\">\n      <div className=\"p-2\">\n        <Widget\n          src=\"v1.wireframes.near/widget/Components.Carousel.AutoSlideCarousel\"\n          props={carouselProps}\n        />\n      </div>\n    </div>\n  ),\n  text: detail,\n  explanation: explanation,\n  propsExplanation: propsExplanation,\n};\n\nreturn (\n  <>\n    <Widget\n      src={`v1.wireframes.near/widget/Components.Learning.LearningCard`}\n      props={props}\n    />\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/v1.wireframes.near/widget/Components.Carousel.CarouselDetail.AutoSlideCarouselDetail", "fact_widget_deployments_id": "a5960bf33cd1820ba166c31bdf0987ea", "inserted_timestamp": "2024-04-13T14:37:28.463Z", "modified_timestamp": "2024-04-13T14:37:28.463Z", "__row_index": 0}