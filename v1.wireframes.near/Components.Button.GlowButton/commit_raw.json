{"tx_hash": "EATHPMYVpSvmR4DEJ7cGLQnN1FhTx732xedteMg3SuCn", "action_id_social": "4udE56f69r3dqYbgZ2V844ke2m3WwMPPudCid2w4UPxo-0-widget", "block_id": 113626595, "block_timestamp": "2024-02-26T15:27:12.923Z", "signer_id": "v1.wireframes.near", "widget_name": "Components.Button.GlowButton", "source_code": "/* -------------------------------------------------------------------------- */\n/*\n __        ___           __                               \n \\ \\      / (_)_ __ ___ / _|_ __ __ _ _ __ ___   ___  ___ \n  \\ \\ /\\ / /| | '__/ _ \\ |_| '__/ _` | '_ ` _ \\ / _ \\/ __|\n   \\ V  V / | | | |  __/  _| | | (_| | | | | | |  __/\\__ \\\n    \\_/\\_/  |_|_|  \\___|_| |_|  \\__,_|_| |_| |_|\\___||___/\n\n  =========================================================\n  * Wireframes - v1.0.0\n  =========================================================\n  * Product Page: https://wireframes.design\n  =========================================================\n  * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n                                                                                 */\n\n/* -------------------------------------------------------------------------- */\nconst GlowButton = styled.button`\n  height: ${(props) => props.height || \"3em\"};\n  width: ${(props) => props.width || \"8em\"};\n  border: ${(props) => props.border || \"none\"};\n  outline: ${(props) => props.outline || \"none\"};\n  color: ${(props) => props.fontColor || \"#fff\"};\n  background: ${(props) => props.backgroundColor || \"#000\"};\n  cursor: pointer;\n  position: relative;\n  z-index: 0;\n  border-radius: ${(props) => props.borderRadius || \"10px\"};\n  font-size: ${(props) => props.fontSize || \"16px\"};\n  font-weight: ${(props) => props.fontWeight || \"600\"};\n  font-family: ${(props) =>\n    props.fontFamily ||\n    \"system-ui,-apple-system,system-ui,Helvetica Neue,Helvetica,Arial,sans-serif\"};\n\n  &:before {\n    content: \"\";\n    background-image: ${(props) =>\n      props.beforeBackgroundColor ||\n      \"linear-gradient(45deg, #5ec5c3, #177396, #1c80d5, #8a1351, #104a7b, #002bff, #7a00ff, #9422a8, #36ffea)\"};\n    position: absolute;\n    top: -2px;\n    left: -2px;\n    background-size: ${(props) => props.backgroundSize || \"400%\"};\n    z-index: -1;\n    filter: ${(props) => props.filter || \"blur(5px)\"};\n    width: ${(props) => props.beforeWidth || \"calc(100% + 4px)\"};\n    height: ${(props) => props.beforeHeight || \"calc(100% + 4px)\"};\n    animation: glowing 20s linear infinite;\n    opacity: 0;\n    transition: opacity 0.3s ease-in-out;\n    border-radius: ${(props) => props.beforeBorderRadius || \"10px\"};\n  }\n\n  &:active {\n    color: ${(props) => props.afterFontColor || \"#fff\"};\n  }\n\n  &:active:after {\n    background: transparent;\n  }\n\n  &:hover:before {\n    opacity: 1;\n  }\n\n  &:after {\n    z-index: -1;\n    content: \"\";\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    background: ${(props) => props.afterBackgroundColor || \"#111\"};\n    left: 0;\n    top: 0;\n    border-radius: 10px;\n  }\n\n  @keyframes glowing {\n    0% {\n      background-position: 0 0;\n    }\n    50% {\n      background-position: 400% 0;\n    }\n    100% {\n      background-position: 0 0;\n    }\n  }\n`;\n\nconst Label = styled.div`\n  display: ${(props) => props.lableDisplay || \"flex\"};\n  align-items: ${(props) => props.lableAlignItems || \"center\"};\n  height: ${(props) => props.lableHeight || \"100%\"};\n  justify-content: ${(props) => props.lableJustifyContent || \"center\"};\n  text-decoration: \"none\";\n`;\n\nconst label = props.buttonTitle ?? \"Title\";\nconst type = props.style.type ?? \"button\";\nconst isDisable = props.isDisable ?? false;\n\nconst width = props.style.width;\nconst border = props.style.border;\nconst fontSize = props.style.fontSize;\nconst fontColor = props.style.fontColor;\nconst fontFamily = props.style.fontFamily;\nconst fontWeight = props.style.fontWeight;\nconst borderRadius = props.style.borderRadius;\nconst beforeBorderRadius = props.style.beforeBorderRadius;\nconst height = props.style.height;\nconst outline = props.style.outline;\nconst backgroundColor = props.style.backgroundColor;\nconst backgroundSize = props.style.backgroundSize;\nconst filter = props.style.filter;\nconst afterFontColor = props.style.afterFontColor;\nconst afterBackgroundColor = props.style.afterBackgroundColor;\nconst beforeBackgroundColor = props.style.beforeBackgroundColor;\nconst beforeWidth = props.style.beforeWidth;\nconst beforeHeight = props.style.beforeHeight;\n\nconst inlineStyle = props.inlineStyle;\nconst onClick = props.onClick ?? (() => {});\n\nconst lableDisplay = props.style.lableDisplay;\nconst lableAlignItems = props.style.lableAlignItems;\nconst lableHeight = props.style.lableHeight;\nconst lableJustifyContent = props.style.lableJustifyContent;\n\nconst buttonHref = props.buttonHref ?? \"\";\nconst buttonAnchor = props.buttonAnchor ?? \"a\";\nconst isLoading = props.isLoading ?? false;\nconst loaderStyle = {\n  marginRight: props.style.loaderMarginRight ?? \"10px\",\n  height: props.style.loaderHeight ?? \"30px\",\n  width: props.style.loaderWidth ?? \"30px\",\n};\nreturn (\n  <>\n    {buttonHref == \"\" ? (\n      <GlowButton\n        width={width}\n        height={height}\n        fontSize={fontSize}\n        fontWeight={fontWeight}\n        fontFamily={fontFamily}\n        backgroundColor={backgroundColor}\n        backgroundSize={backgroundSize}\n        beforeBackgroundColor={beforeBackgroundColor}\n        afterBackgroundColor={afterBackgroundColor}\n        afterFontColor={afterFontColor}\n        border={border}\n        beforeWidth={beforeWidth}\n        beforeHeight={beforeHeight}\n        outline={outline}\n        filter={filter}\n        fontColor={fontColor}\n        borderRadius={borderRadius}\n        beforeBorderRadius={beforeBorderRadius}\n        hoverColor={hoverColor}\n        style={inlineStyle}\n        onClick={onClick}\n        type={type}\n        disabled={isDisable}\n      >\n        <Label\n          lableHeight={lableHeight}\n          lableDisplay={lableDisplay}\n          lableAlignItems={lableAlignItems}\n          lableJustifyContent={lableJustifyContent}\n        >\n          {\" \"}\n          {isLoading ? (\n            <>\n              <div\n                className=\"spinner-border text-light\"\n                style={loaderStyle}\n                role=\"status\"\n              >\n                <span className=\"visually-hidden\">Loading...</span>\n              </div>\n            </>\n          ) : (\n            <>{label}</>\n          )}\n        </Label>\n      </GlowButton>\n    ) : (\n      <GlowButton\n        width={width}\n        height={height}\n        fontSize={fontSize}\n        fontWeight={fontWeight}\n        fontFamily={fontFamily}\n        backgroundColor={backgroundColor}\n        backgroundSize={backgroundSize}\n        beforeBackgroundColor={beforeBackgroundColor}\n        afterBackgroundColor={afterBackgroundColor}\n        afterFontColor={afterFontColor}\n        border={border}\n        beforeWidth={beforeWidth}\n        beforeHeight={beforeHeight}\n        outline={outline}\n        filter={filter}\n        fontColor={fontColor}\n        borderRadius={borderRadius}\n        beforeBorderRadius={beforeBorderRadius}\n        hoverColor={hoverColor}\n        style={inlineStyle}\n        onClick={onClick}\n        type={type}\n        disabled={isDisable}\n        as={buttonAnchor}\n        href={buttonHref}\n      >\n        <Label\n          lableHeight={lableHeight}\n          lableDisplay={lableDisplay}\n          lableAlignItems={lableAlignItems}\n          lableJustifyContent={lableJustifyContent}\n        >\n          {\" \"}\n          {isLoading ? (\n            <>\n              <div\n                className=\"spinner-border text-light\"\n                style={loaderStyle}\n                role=\"status\"\n              >\n                <span className=\"visually-hidden\">Loading...</span>\n              </div>\n            </>\n          ) : (\n            <>{label}</>\n          )}\n        </Label>\n      </GlowButton>\n    )}\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/v1.wireframes.near/widget/Components.Button.GlowButton", "fact_widget_deployments_id": "0e439eccaf4f526ea625fa010e39e2d4", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 1}