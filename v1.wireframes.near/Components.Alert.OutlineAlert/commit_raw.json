{"tx_hash": "BQnaSkjZKbJz3R17HDqj12LRWQKP3Bvwwffmj4bSjvBD", "action_id_social": "8yDtT5WfDsn1FWrUeymjP9txG1F9Zf8DLsLVC6zg7Kiz-0-widget", "block_id": 116757458, "block_timestamp": "2024-04-13T12:54:47.615Z", "signer_id": "v1.wireframes.near", "widget_name": "Components.Alert.OutlineAlert", "source_code": "/* -------------------------------------------------------------------------- */\n/*\n __        ___           __                               \n \\ \\      / (_)_ __ ___ / _|_ __ __ _ _ __ ___   ___  ___ \n  \\ \\ /\\ / /| | '__/ _ \\ |_| '__/ _` | '_ ` _ \\ / _ \\/ __|\n   \\ V  V / | | | |  __/  _| | | (_| | | | | | |  __/\\__ \\\n    \\_/\\_/  |_|_|  \\___|_| |_|  \\__,_|_| |_| |_|\\___||___/\n\n  =========================================================\n  * Wireframes - v1.0.0\n  =========================================================\n  * Product Page: https://wireframes.design\n  =========================================================\n  * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n                                                                                 */\n/* -------------------------------------------------------------------------- */\n\nconst label = props.alertTitle ?? \"An Outline Alert!\";\nconst isDisable = props.isDisable ?? false;\nconst inlineStyle = props.inlineStyle;\n\nconst padding = props.style.padding;\nconst fontSize = props.style.fontSize;\nconst fontFamily = props.style.fontFamily;\nconst fontWeight = props.style.fontWeight;\nconst backgroundColor = props.style.backgroundColor;\nconst border = props.style.border;\nconst fontColor = props.style.fontColor;\nconst borderRadius = props.style.borderRadius;\nconst width = props.style.width;\nconst height = props.style.height;\n\nconst containerDisplay = props.style.containerDisplay ?? \"flex\";\n\nconst iconMargin = props.style.iconMargin ?? \"0 5px 0\";\n\nconst innerContainerWidth = props.style.innerContainerWidth;\nconst innerContainerDisplay = props.style.innerContainerDisplay;\nconst innerContainerJustifyContent = props.style.innerContainerJustifyContent;\n\nconst contentWidth = props.style.contentWidth;\nconst contentDisplay = props.style.contentDisplay;\nconst contentAlignItems = props.style.contentAlignItems;\n\nconst iconCloseDisplay = props.style.iconCloseDisplay;\nconst iconCloseAlignItems = props.style.iconCloseAlignItems;\n\nconst icon = props.icon ?? \"exclamation-triangle-fill\";\nconst isIcon = props.isIcon ?? false;\nconst iconClose = props.iconClose ?? false;\nconst iconSize = props.iconSize ?? \"20px\";\nconst iconColor = props.iconColor ?? \"#0d6efd\";\nconst iconMarginRight = props.iconMarginRight ?? \"5px\";\nconst iconMarginLeft = props.iconMarginLeft ?? \"0px\";\n\nconst closeBtnBackground = props.style.closeBtnBackground ?? \"none\";\nconst closeBtnBorder = props.style.closeBtnBorder ?? \"none\";\nconst closeBtnBorderRadius = props.style.closeBtnBorderRadius ?? \"10px\";\n\nconst cancelIconName = props.cancelIconName ?? \"x-lg\";\nconst cancelIconSize = props.cancelIconSize ?? \"20px\";\nconst cancelIconColor = props.cancelIconColor ?? \"#000\";\n\nconst OutlineAlert = styled.div`\n  height: ${(props) => props.height || \"auto\"};\n  background-color: ${(props) => props.backgroundColor || \"transparent\"};\n  color: ${(props) => props.fontColor || \"#fff\"};\n  width: ${(props) => props.width || \"100%\"};\n  padding: ${(props) => props.padding || \"1rem\"};\n  border-radius: ${(props) => props.borderRadius || \"5px\"};\n  border: ${(props) => props.border || \"none\"};\n  font-size: ${(props) => props.fontSize || \"16px\"};\n  font-weight: ${(props) => props.fontWeight || \"600\"};\n  font-family: ${(props) =>\n    props.fontFamily ||\n    \"system-ui,-apple-system,system-ui,Helvetica Neue,Helvetica,Arial,sans-serif\"};\n`;\n\nconst Container = styled.div`\n  display: ${containerDisplay};\n`;\n\nconst Icon = styled.span`\n    margin: ${iconMargin};\n`;\n\nconst InnerContainer = styled.div`\n  width: ${(props) => props.innerContainerWidth || \"100%\"};\n  display: ${(props) => props.innerContainerDisplay || \"flex\"};\n  justify-content: ${(props) => props.innerContainerJustifyContent || \"space-between\"};\n`;\n\nconst Content = styled.span`\n  width: ${(props) => props.contentWidth || \"100%\"};\n  display: ${(props) => props.contentDisplay || \"flex\"};\n  align-items: ${(props) => props.contentAlignItems || \"center\"};\n`;\nconst IconClose = styled.span`\n  display: ${(props) => props.iconCloseDisplay || \"flex\"};\n  align-items: ${(props) => props.iconCloseAlignItems || \"start\"};\n`;\n\nconst CloseButton = styled.button`\n  cursor: pointer;\n  background: ${closeBtnBackground};\n  border: ${closeBtnBorder};\n  border-radius: ${closeBtnBorderRadius};\n`;\n\nreturn (\n  <>\n    <OutlineAlert\n      width={width}\n      height={height}\n      border={border}\n      padding={padding}\n      fontSize={fontSize}\n      fontColor={fontColor}\n      fontWeight={fontWeight}\n      fontFamily={fontFamily}\n      borderRadius={borderRadius}\n      backgroundColor={backgroundColor}\n      isDisable={isDisable}\n      style={inlineStyle}\n    >\n      {isIcon == true ? (\n        <Container>\n          <Icon>\n            <Widget\n              src={`v1.wireframes.near/widget/Components.Icon.BootstrapIcons`}\n              props={{\n                iconName: icon,\n                iconSize: iconSize,\n                iconColor: iconColor,\n              }}\n            />\n          </Icon>\n          <InnerContainer\n            innerContainerWidth={innerContainerWidth}\n            innerContainerDisplay={innerContainerDisplay}\n            innerContainerJustifyContent={innerContainerJustifyContent}\n          >\n            <Content\n              contentWidth={contentWidth}\n              contentDisplay={contentDisplay}\n              contentAlignItems={contentAlignItems}\n            >\n              {label}\n            </Content>\n            {iconClose == true ? (\n              <>\n                <IconClose\n                  iconCloseDisplay={iconCloseDisplay}\n                  iconCloseAlignItems={iconCloseAlignItems}\n                >\n                  <CloseButton type=\"button\" onClick={onClick}>\n                    <Widget\n                      src={`v1.wireframes.near/widget/Components.Icon.BootstrapIcons`}\n                      props={{\n                        iconName: cancelIconName,\n                        iconSize: cancelIconSize,\n                        iconColor: cancelIconColor,\n                      }}\n                    />\n                  </CloseButton>\n                </IconClose>\n              </>\n            ) : (\n              <></>\n            )}\n          </InnerContainer>\n        </Container>\n      ) : (\n        <>\n          <InnerContainer\n            innerContainerWidth={innerContainerWidth}\n            innerContainerDisplay={innerContainerDisplay}\n            innerContainerJustifyContent={innerContainerJustifyContent}\n          >\n            <Content\n              contentWidth={contentWidth}\n              contentDisplay={contentDisplay}\n              contentAlignItems={contentAlignItems}\n            >\n              {label}\n            </Content>\n            {iconClose == true ? (\n              <>\n                <IconClose\n                  iconCloseDisplay={iconCloseDisplay}\n                  iconCloseAlignItems={iconCloseAlignItems}\n                >\n                  <CloseButton type=\"button\" onClick={onClick}>\n                    <Widget\n                      src={`v1.wireframes.near/widget/Components.Icon.BootstrapIcons`}\n                      props={{\n                        iconName: cancelIconName,\n                        iconSize: cancelIconSize,\n                        iconColor: cancelIconColor,\n                      }}\n                    />\n                  </CloseButton>\n                </IconClose>\n              </>\n            ) : (\n              <></>\n            )}\n          </InnerContainer>\n        </>\n      )}\n    </OutlineAlert>\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/v1.wireframes.near/widget/Components.Alert.OutlineAlert", "fact_widget_deployments_id": "02aae05f040e9cf11ab238a6b2e90a50", "inserted_timestamp": "2024-04-13T14:37:28.463Z", "modified_timestamp": "2024-04-13T14:37:28.463Z", "__row_index": 0}