{"tx_hash": "BQnaSkjZKbJz3R17HDqj12LRWQKP3Bvwwffmj4bSjvBD", "action_id_social": "8yDtT5WfDsn1FWrUeymjP9txG1F9Zf8DLsLVC6zg7Kiz-0-widget", "block_id": 116757458, "block_timestamp": "2024-04-13T12:54:47.615Z", "signer_id": "v1.wireframes.near", "widget_name": "Components.Input.Toggle", "source_code": "/* -------------------------------------------------------------------------- */\n/*\n __        ___           __                               \n \\ \\      / (_)_ __ ___ / _|_ __ __ _ _ __ ___   ___  ___ \n  \\ \\ /\\ / /| | '__/ _ \\ |_| '__/ _` | '_ ` _ \\ / _ \\/ __|\n   \\ V  V / | | | |  __/  _| | | (_| | | | | | |  __/\\__ \\\n    \\_/\\_/  |_|_|  \\___|_| |_|  \\__,_|_| |_| |_|\\___||___/\n\n  =========================================================\n  * Wireframes - v1.0.0\n  =========================================================\n  * Product Page: https://wireframes.design\n  =========================================================\n  * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n                                                                                 */\n\n/* -------------------------------------------------------------------------- */\n\nconst label = props.toggleTitle ?? \"Title\";\nconst labelSide = props.labelSide ?? \"start\";\nconst isDisable = props.isDisable ?? false;\nconst required = props.required ?? false;\n\nconst labelFontWeight = props.style.labelFontWeight;\nconst labelFontSize = props.style.labelFontSize;\nconst labelMarginLeft = props.style.labelMarginLeft;\nconst labelMarginRight = props.style.labelMarginRight;\nconst labelLineHeight = props.style.labelLineHeight;\nconst labelFontColor = props.style.labelFontColor;\n\nconst display = props.style.display;\nconst justifyContent = props.style.justifyContent;\nconst alignItems = props.style.alignItems;\nconst width = props.style.width;\nconst borderWidth = props.style.borderWidth;\nconst backgroundColor = props.style.backgroundColor;\n\nconst switchWidth = props.style.switchWidth;\nconst switchHeight = props.style.switchHeight;\nconst switchPadding = props.style.switchPadding;\nconst switchPosition = props.style.switchPosition;\nconst switchBoxShadow = props.style.switchBoxShadow;\nconst switchBorderWidth = props.style.switchBorderWidth;\nconst switchBorderRadius = props.style.switchBorderRadius;\nconst switchBackgroundColor = props.style.switchBackgroundColor;\n\nconst thumbWidth = props.style.thumbWidth;\nconst thumbHeight = props.style.thumbHeight;\nconst thumbDisplay = props.style.thumbDisplay;\nconst thumbBoxShadow = props.style.thumbBoxShadow;\nconst thumbBorderWidth = props.style.thumbBorderWidth;\nconst thumbBorderRadius = props.style.thumbBorderRadius;\nconst thumbBackgroundColor = props.style.thumbBackgroundColor;\n\nconst Box = styled.div`\n  display: ${(props) => props.display || \"flex\"};\n  flex-direction: row;\n  justify-content: ${(props) => props.justifyContent || \"flex-start\"};\n  align-items: ${(props) => props.alignItems || \"center\"};\n  gap: 0.5em;\n  width: ${(props) => props.width || \"fit-content\"};\n  border-width: ${(props) => props.borderWidth || \"0px\"};\n\n  .switch[data-state=\"checked\"] {\n    border-width: 0px;\n    background-color: ${(props) => props.backgroundColor || \"#49a3fd\"};\n  }\n\n  .switch {\n    width: ${(props) => props.switchWidth || \"50px\"};\n    height: ${(props) => props.switchHeight || \"25px\"};\n    border-width: ${(props) => props.switchBorderWidth || \"0px\"};\n    padding: ${(props) => props.switchPadding || \"0px\"};\n    background-color: ${(props) => props.switchBackgroundColor || \"gray\"};\n    border-radius: ${(props) => props.switchBorderRadius || \"9999px\"};\n    position: ${(props) => props.switchPosition || \"relative\"};\n    box-shadow: ${(props) =>\n      props.switchBoxShadow || \"0 2px 10px var(--blackA7)\"};\n    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n  }\n\n  .thumb {\n    display: ${(props) => props.thumbDisplay || \"block\"};\n    width: ${(props) => props.thumbWidth || \"21px\"};\n    height: ${(props) => props.thumbHeight || \"21px\"};\n    transform: scale(1.5);\n    border-width: ${(props) => props.thumbBorderWidth || \"0px\"};\n    background-color: ${(props) => props.thumbBackgroundColor || \"#fff\"};\n    border-radius: ${(props) => props.thumbBorderRadius || \"9999px\"};\n    box-shadow: ${(props) =>\n      props.thumbBoxShadow || \"0 2px 2px var(--blackA7)\"};\n    transition: transform 100ms;\n    transform: translateX(2px);\n    will-change: transform;\n  }\n  .thumb[data-state=\"checked\"] {\n    transform: translateX(28px);\n  }\n`;\n\nconst Label = styled.label`\n  font-style: normal;\n  font-weight: ${(props) => props.labelFontWeight || \"400\"};\n  font-size: ${(props) => props.labelFontSize || \"16px\"};\n  margin-left: ${(props) => props.labelMarginLeft || \"10px\"};\n  margin-right: ${(props) => props.labelMarginRight || \"10px\"};\n  line-height: ${(props) => props.labelLineHeight || \"1em\"};\n  color: ${(props) => props.labelFontColor || \"gray\"};\n`;\n\nreturn (\n  <Box\n    width={width}\n    display={display}\n    alignItems={alignItems}\n    borderWidth={borderWidth}\n    justifyContent={justifyContent}\n    backgroundColor={backgroundColor}\n    switchWidth={switchWidth}\n    switchHeight={switchHeight}\n    switchPadding={switchPadding}\n    switchPosition={switchPosition}\n    switchBoxShadow={switchBoxShadow}\n    switchBorderWidth={switchBorderWidth}\n    switchBorderRadius={switchBorderRadius}\n    switchBackgroundColor={switchBackgroundColor}\n    thumbWidth={thumbWidth}\n    thumbHeight={thumbHeight}\n    thumbDisplay={thumbDisplay}\n    thumbBoxShadow={thumbBoxShadow}\n    thumbBorderWidth={thumbBorderWidth}\n    thumbBorderRadius={thumbBorderRadius}\n    thumbBackgroundColor={thumbBackgroundColor}\n  >\n    {labelSide == \"end\" ? (\n      <>\n        <Switch.Root\n          checked={props.value}\n          onCheckedChange={props.onChange}\n          id={props.id}\n          className=\"switch\"\n          isDisable={isDisable}\n          required={required}\n        >\n          <Switch.Thumb className=\"thumb\" />\n        </Switch.Root>\n        <Label\n          labelFontSize={labelFontSize}\n          labelFontColor={labelFontColor}\n          labelLineHeight={labelLineHeight}\n          labelFontWeight={labelFontWeight}\n          labelMarginLeft={labelMarginLeft}\n          labelMarginRight={labelMarginRight}\n        >\n          {label}\n        </Label>\n      </>\n    ) : (\n      <>\n        <Label\n          labelFontSize={labelFontSize}\n          labelFontColor={labelFontColor}\n          labelLineHeight={labelLineHeight}\n          labelFontWeight={labelFontWeight}\n          labelMarginLeft={labelMarginLeft}\n          labelMarginRight={labelMarginRight}\n        >\n          {label}\n        </Label>\n        <Switch.Root\n          checked={props.value}\n          onCheckedChange={props.onChange}\n          id={props.id}\n          className=\"switch\"\n          isDisable={isDisable}\n          required={required}\n        >\n          <Switch.Thumb className=\"thumb\" />\n        </Switch.Root>\n      </>\n    )}\n  </Box>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/v1.wireframes.near/widget/Components.Input.Toggle", "fact_widget_deployments_id": "4a5a1df4fec8416ad578b2ef3ade268c", "inserted_timestamp": "2024-04-13T14:37:28.463Z", "modified_timestamp": "2024-04-13T14:37:28.463Z", "__row_index": 0}