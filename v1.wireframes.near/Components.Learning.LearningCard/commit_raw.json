{"tx_hash": "BQnaSkjZKbJz3R17HDqj12LRWQKP3Bvwwffmj4bSjvBD", "action_id_social": "8yDtT5WfDsn1FWrUeymjP9txG1F9Zf8DLsLVC6zg7Kiz-0-widget", "block_id": 116757458, "block_timestamp": "2024-04-13T12:54:47.615Z", "signer_id": "v1.wireframes.near", "widget_name": "Components.Learning.LearningCard", "source_code": "/* -------------------------------------------------------------------------- */\n/*\n __        ___           __                               \n \\ \\      / (_)_ __ ___ / _|_ __ __ _ _ __ ___   ___  ___ \n  \\ \\ /\\ / /| | '__/ _ \\ |_| '__/ _` | '_ ` _ \\ / _ \\/ __|\n   \\ V  V / | | | |  __/  _| | | (_| | | | | | |  __/\\__ \\\n    \\_/\\_/  |_|_|  \\___|_| |_|  \\__,_|_| |_| |_|\\___||___/\n\n  =========================================================\n  * Wireframes - v1.0.0\n  =========================================================\n  * Product Page: https://wireframes.design\n  =========================================================\n  * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n                                                                                 */\n/* -------------------------------------------------------------------------- */\nconst CardStyle = {\n  height: \"100%\",\n  width: \"100vw\",\n};\n\nState.init({\n  show: false,\n  showProp: false,\n  script: null,\n  scripts: [],\n});\n\nconst openScript = (script) => {\n  State.update({\n    script: {\n      ...script,\n    },\n  });\n};\n\nconst StyleContainer = styled.div`\n  margin-right: auto;\n  margin-left: auto;\n  padding-right: 15px;\n  padding-left: 15px;\n\n  /* Responsive container */\n  @media (min-width: 576px) {\n    max-width: 540px;\n  }\n  @media (min-width: 768px) {\n    max-width: 720px;\n  }\n  @media (min-width: 992px) {\n    max-width: 960px;\n  }\n  @media (min-width: 1200px) {\n    max-width: 1140px;\n  }\n`;\n\nconst copyBtn = props.copyBtn || \"Copy Button\";\nconst component = props.component || \"\";\nconst componentType = props.componentType || \"Button\";\nconst text = props.text || \"\";\nconst explanation = props.explanation || \"\";\nconst propsExplanation = props.propsExplanation || \"\";\nconst displayLearningCard = props.displayLearningCard || \"\";\n\nconst TerminalProps = {\n  text: text,\n  script: script,\n  openScript: openScript,\n};\n\nconst StyledPre = styled.pre`\n  page-break-inside: avoid;\n  font-family: monospace;\n  font-size: 12px;\n  line-height: 1.6;\n  margin-bottom: 0.6em;\n  max-width: 100%;\n  overflow: auto;\n\n  display: flex;\n  word-wrap: break-word;\n  height: 50vh;\n  max-width: 100vw;\n  margin: auto;\n  max-height: 100%;\n  min-height: 20vh;\n  position: relative;\n`;\n\nconst TerminalCard = {\n  position: \"relative\",\n  width: \"100%\",\n  maxHeight: \"80vh\",\n  minHeight: \"40vh\",\n  padding: \"2px\",\n  backgroundColor: \"rgb(30 30 30)\",\n  borderRadius: \"0.375rem\",\n  boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.2)\",\n  color: \"#abb2bf\",\n  borderTopLeftRadius: \"0px\",\n  borderTopRightRadius: \"0px\",\n};\nconst CopyButton = styled.button`\n  position: absolute;\n  top: 10px;\n  right: 2%;\n  padding: 4px;\n  background-color: #f8f9fa;\n  color: #313030;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  z-index: 3;\n`;\n\nconst PreComponent = ({ children }) => {\n  return <StyledPre>{children}</StyledPre>;\n};\n\nconst StyledButton = styled.button`\n  background-color: ${(props) => (props.show ? \"#5cb85c\" : \"#007bff\")};\n  color: #fff;\n  border: none;\n  border-radius: 3px;\n  cursor: pointer;\n`;\nconst cardStyles = {\n  borderTopLeftRadius: \"0px\",\n  borderTopRightRadius: \"0px\",\n  borderBottomLeftRadius: state.show ? \"0px\" : \"\", // Set to 0px if state.show is true, otherwise 5px\n  borderBottomRightRadius: state.show ? \"0px\" : \"\", // Set to 0px if state.show is true, otherwise 5px\n};\n\nreturn (\n  <>\n    {explanation != \"\" && explanation != \" \" && (\n      <p\n        style={{\n          width: \"80vw\",\n          overflow: \"hidden\",\n          whiteSpace: \"break-spaces\",\n          textOverflow: \"clip\",\n        }}\n      >\n        {explanation}\n      </p>\n    )}\n    <div className=\"\">\n      <div\n        className=\"card\"\n        style={{\n          borderBottomLeftRadius: \"0px\",\n          borderBottomRightRadius: \"0px\",\n          padding: \"3%\",\n          textWrap: \"wrap\",\n        }}\n      >\n        {displayLearningCard == \"full\" ? (\n          <div style={{ textWrap: \"wrap\" }}>{component}</div>\n        ) : (\n          <div className=\"p-2 d-flex justify-content-center\">{component}</div>\n        )}\n      </div>\n\n      <div className=\"card p-2\" style={cardStyles}>\n        <div className=\"row\">\n          <div className=\"col-md-4\"></div>\n          <div className=\"col-md-4\"></div>\n          <div\n            className=\"col-md-4 d-flex\"\n            style={{ justifyContent: \"flex-end\" }}\n          >\n            <div className=\"p-2\">\n              <Widget\n                src=\"v1.wireframes.near/widget/Components.Button.IconButton\"\n                props={{\n                  label: \"Code\",\n                  icon: \"code\",\n                  iconColor: \"#fff\",\n                  style: {\n                    border: \"1px solid #0d6efd\",\n                    borderRadius: \"0\",\n                    fontColor: \"white\",\n                    backgroundColor: \"black\",\n                  },\n                  iconSize: \"15px\",\n                  onClick: () => {\n                    State.update({ show: !state.show, showProp: false });\n                  },\n                  type: \"button\",\n                }}\n              />\n            </div>\n            <div className=\"p-2\">\n              <Widget\n                src=\"v1.wireframes.near/widget/Components.Button.IconButton\"\n                props={{\n                  label: \"Code\",\n                  icon: \"info-lg\",\n                  iconColor: \"#fff\",\n                  style: {\n                    border: \"1px solid #0d6efd\",\n                    borderRadius: \"0\",\n                    fontColor: \"white\",\n                    backgroundColor: \"black\",\n                  },\n                  iconSize: \"15px\",\n                  onClick: () => {\n                    State.update({ showProp: !state.showProp, show: false });\n                  },\n                  type: \"button\",\n                }}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      {state.show && (\n        <div className=\"card\" style={TerminalCard}>\n          <CopyButton\n            placement=\"auto\"\n            overlay={\n              <Tooltip>\n                {state.copied ? \"Copied!\" : \"Copy to clipboard\"}\n              </Tooltip>\n            }\n          >\n            <div\n              onClick={() => {\n                clipboard.writeText(copyBtn).then(() => {\n                  State.update({ copied: true });\n                  if (props.onCopy) {\n                    props.onCopy(copyBtn);\n                  }\n                });\n              }}\n            >\n              {state.copied ? (\n                <>\n                  {props.copiedIcon ?? (\n                    <Widget\n                      src=\"v1.wireframes.near/widget/Components.Button.IconButton\"\n                      props={{\n                        icon: \"clipboard2-check-fill\",\n                        iconColor: \"black\",\n                      }}\n                    />\n                  )}{\" \"}\n                  {props.copiedLabel ?? props.label}\n                </>\n              ) : (\n                <>\n                  {props.clipboardIcon ?? (\n                    <Widget\n                      src=\"v1.wireframes.near/widget/Components.Button.IconButton\"\n                      props={{\n                        icon: \"clipboard\",\n                        iconColor: \"black\",\n                      }}\n                    />\n                  )}{\" \"}\n                  {props.label}\n                </>\n              )}\n            </div>\n          </CopyButton>\n          <div className=\"m-2\">\n            <Widget\n              src=\"v1.wireframes.near/widget/Components.Learning.TerminalCard\"\n              props={TerminalProps}\n            />\n          </div>\n        </div>\n      )}\n\n      {state.showProp && (\n        <Widget\n          src=\"v1.wireframes.near/widget/Components.Learning.PropsDescriptionCard\"\n          props={propsExplanation}\n        />\n      )}\n    </div>\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/v1.wireframes.near/widget/Components.Learning.LearningCard", "fact_widget_deployments_id": "db131c12d4bfeab9086a7ae9ae55d473", "inserted_timestamp": "2024-04-13T14:37:28.463Z", "modified_timestamp": "2024-04-13T14:37:28.463Z", "__row_index": 0}