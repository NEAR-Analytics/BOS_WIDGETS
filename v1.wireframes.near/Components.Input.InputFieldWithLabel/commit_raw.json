{"tx_hash": "BQnaSkjZKbJz3R17HDqj12LRWQKP3Bvwwffmj4bSjvBD", "action_id_social": "8yDtT5WfDsn1FWrUeymjP9txG1F9Zf8DLsLVC6zg7Kiz-0-widget", "block_id": 116757458, "block_timestamp": "2024-04-13T12:54:47.615Z", "signer_id": "v1.wireframes.near", "widget_name": "Components.Input.InputFieldWithLabel", "source_code": "/* -------------------------------------------------------------------------- */\n/*\n __        ___           __                               \n \\ \\      / (_)_ __ ___ / _|_ __ __ _ _ __ ___   ___  ___ \n  \\ \\ /\\ / /| | '__/ _ \\ |_| '__/ _` | '_ ` _ \\ / _ \\/ __|\n   \\ V  V / | | | |  __/  _| | | (_| | | | | | |  __/\\__ \\\n    \\_/\\_/  |_|_|  \\___|_| |_|  \\__,_|_| |_| |_|\\___||___/\n\n  =========================================================\n  * Wireframes - v1.0.0\n  =========================================================\n  * Product Page: https://wireframes.design\n  =========================================================\n  * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n                                                                                 */\n\n/* -------------------------------------------------------------------------- */\n\nconst name = props.name ?? \"inputField\";\nconst label = props.inputTitle ?? \"\";\nconst type = props.type ?? \"text\";\nconst value = props.value ?? \"\";\nconst onChange = props.onChange ?? (() => {});\nconst validate = props.validate ?? (() => {});\nconst autofocus = props.autofocus ?? false;\nconst placeholder = props.placeholder;\nconst required = props.required ?? false;\nconst isDisable = props.isDisable ?? false;\nconst error = props.error ?? \"\";\n\nconst width = props.style.width;\nconst padding = props.style.padding;\nconst border = props.style.border;\nconst fontSize = props.style.fontSize;\nconst fontColor = props.style.fontColor;\nconst borderRadius = props.style.borderRadius;\nconst borderShadow = props.style.borderShadow;\n\nconst inlineStyle = props.inlineStyle;\n\nconst errorFontWeight = props.style.errorFontWeight;\nconst errorFontSize = props.style.errorFontSize;\nconst errorLineHeight = props.style.errorLineHeight;\nconst errorFontColor = props.style.errorFontColor;\nconst errorHeight = props.style.errorHeight;\nconst errorShowHeight = props.style.errorShowHeight;\n\nconst labelFontSize = props.style.labelFontSize;\nconst labelFontWeight = props.style.labelFontWeight;\nconst labelLineHeight = props.style.labelLineHeight;\nconst labelMinWidth = props.style.labelMinWidth;\nconst labelFontColor = props.style.labelFontColor;\n\nconst labelSide = props.labelSide ?? \"\";\n\nconst style = props.style ?? Input;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: flex-start;\n  padding: 0px;\n  gap: 0.45em;\n  width: 100%;\n`;\nconst MainContainer = styled.div`\n  display: flex;\n  align-items: baseline;\n  justify-content: flex-start;\n  padding: 0px;\n  gap: 0.45em;\n  width: 100%;\n`;\n\nconst Label = styled.label`\n  font-style: normal;\n  font-weight: ${(props) => props.labelFontWeight || \"600\"};\n  font-size: ${(props) => props.labelFontSize || \"0.95em\"};\n  line-height: ${(props) => props.labelLineHeight || \"1.25\"};\n  min-width: ${(props) => props.labelMinWidth || \"18%\"};\n  color: ${(props) => props.labelFontColor || \"#000\"};\n`;\n\nconst Error = styled.span`\n  display: inline-block;\n  font-style: normal;\n  font-weight: ${(props) => props.errorFontWeight || \"400\"};\n  font-size: ${(props) => props.errorFontSize || \"0.75em\"};\n  line-height: ${(props) => props.errorLineHeight || \"1.25em\"};\n  color: ${(props) => props.errorFontColor || \"#ff4d4f\"};\n  height: ${(props) => props.errorHeight || \"0px\"};\n  overflow: hidden;\n  transition: height 0.3s ease-in-out;\n\n  &.show {\n    height: ${(props) => props.errorShowHeight || \"auto\"};\n  }\n`;\n\nif (props.type == \"number\") {\n  const min = props.min;\n  const max = props.max;\n  const pattern = props.pattern;\n} else {\n  const min = props.min ?? \"\";\n  const max = props.max ?? \"\";\n  const pattern = props.pattern ?? \"\";\n}\n\nconst Input = {\n  boxSizing: \"border-box\",\n  display: \"flex\",\n  flexDirection: \"row\",\n  alignItems: \"center\",\n  padding: padding ?? \"0.5em 0.75em\",\n  gap: \"0.5em\",\n  textDecoration: \"none\",\n  border: border ?? \"1px solid #d0d5dd\",\n  boxShadow: borderShadow ?? \"0px 1px 2px rgba(16, 24, 40, 0.05)\",\n  borderRadius: borderRadius ?? \"4px\",\n  fontColor: fontColor ?? \"#000\",\n  width: width ?? \"100%\",\n  fontSize: fontSize ?? \"16px\",\n};\n\nconst [inputValue, setInputValue] = useState(value);\nconst [debouncedInputValue, setDebouncedInputValue] = useState(value);\n\nconst handleInputChange = (event) => {\n  setInputValue(event.target.value);\n};\n\nuseEffect(() => {\n  const timeoutId = setTimeout(() => {\n    onChange(inputValue);\n  }, 900);\n  return () => clearTimeout(timeoutId);\n}, [inputValue, 1000]);\n\nreturn (\n  <div>\n    {labelSide == \"start\" ? (\n      <>\n        <MainContainer>\n          <Label\n            labelFontSize={labelFontSize}\n            labelFontColor={labelFontColor}\n            labelFontWeight={labelFontWeight}\n            labelLineHeight={labelLineHeight}\n            labelMinWidth={labelMinWidth}\n          >\n            {label} {required && <Error className=\"show\">*Required</Error>}\n          </Label>\n          <div className=\"row\">\n            <input\n              type={type}\n              name={name}\n              autoComplete=\"off\"\n              autofocus={autofocus}\n              placeholder={placeholder}\n              onBlur={() => validate()}\n              value={inputValue}\n              onChange={handleInputChange}\n              required={required}\n              readOnly={isDisable}\n              style={style}\n            />\n            <Error\n              className={error ? \"show\" : \"\"}\n              errorFontSize={errorFontSize}\n              errorFontWeight={errorFontWeight}\n              errorFontColor={errorFontColor}\n              errorLineHeight={errorLineHeight}\n              errorHeight={errorHeight}\n              errorShowHeight={errorShowHeight}\n            >\n              {error}\n            </Error>\n          </div>\n        </MainContainer>\n      </>\n    ) : (\n      <Container>\n        <Label\n          labelFontSize={labelFontSize}\n          labelFontColor={labelFontColor}\n          labelFontWeight={labelFontWeight}\n          labelLineHeight={labelLineHeight}\n          labelMinWidth={labelMinWidth}\n        >\n          {label} {required && <Error className=\"show\">*Required</Error>}\n        </Label>\n        <input\n          type={type}\n          name={name}\n          autoComplete=\"off\"\n          autofocus={autofocus}\n          placeholder={placeholder}\n          onBlur={() => validate()}\n          value={inputValue}\n          onChange={handleInputChange}\n          required={required}\n          readOnly={isDisable}\n          style={style}\n        />\n\n        <Error\n          className={error ? \"show\" : \"\"}\n          errorFontSize={errorFontSize}\n          errorFontWeight={errorFontWeight}\n          errorFontColor={errorFontColor}\n          errorLineHeight={errorLineHeight}\n          errorHeight={errorHeight}\n          errorShowHeight={errorShowHeight}\n        >\n          {error}\n        </Error>\n      </Container>\n    )}\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/v1.wireframes.near/widget/Components.Input.InputFieldWithLabel", "fact_widget_deployments_id": "08f7d8f2a40c183abe97956c90b73326", "inserted_timestamp": "2024-04-13T14:37:28.463Z", "modified_timestamp": "2024-04-13T14:37:28.463Z", "__row_index": 0}