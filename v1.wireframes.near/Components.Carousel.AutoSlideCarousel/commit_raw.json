{"tx_hash": "BQnaSkjZKbJz3R17HDqj12LRWQKP3Bvwwffmj4bSjvBD", "action_id_social": "8yDtT5WfDsn1FWrUeymjP9txG1F9Zf8DLsLVC6zg7Kiz-0-widget", "block_id": 116757458, "block_timestamp": "2024-04-13T12:54:47.615Z", "signer_id": "v1.wireframes.near", "widget_name": "Components.Carousel.AutoSlideCarousel", "source_code": "/* -------------------------------------------------------------------------- */\n/*\n __        ___           __                               \n \\ \\      / (_)_ __ ___ / _|_ __ __ _ _ __ ___   ___  ___ \n  \\ \\ /\\ / /| | '__/ _ \\ |_| '__/ _` | '_ ` _ \\ / _ \\/ __|\n   \\ V  V / | | | |  __/  _| | | (_| | | | | | |  __/\\__ \\\n    \\_/\\_/  |_|_|  \\___|_| |_|  \\__,_|_| |_| |_|\\___||___/\n\n  =========================================================\n  * Wireframes - v1.0.0\n  =========================================================\n  * Product Page: https://wireframes.design\n  =========================================================\n  * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n                                                                                 */\n/* -------------------------------------------------------------------------- */\n\nconst itemWidth = props.style.itemWidth ?? \"100%\";\nconst itemHeight = props.style.itemHeight ?? \"600px\";\n\nconst imageWidth = props.style.imageWidth ?? \"100%\";\nconst imageHeight = props.style.imageHeight ?? \"100%\";\nconst imageObjectFit = props.style.imageObjectFit ?? \"cover\";\n\nconst btnBackgroundColor = props.style.btnBackgroundColor ?? \"transparent\";\nconst btnBorder = props.style.btnBorder ?? \"none\";\nconst btnBorderRadius = props.style.btnBorderRadius ?? \"9999px\";\nconst btnFontColor = props.style.btnFontColor ?? \"#fff\";\nconst btnPadding = props.style.btnPadding ?? \"4px 12px\";\nconst btnPosition = props.style.btnPosition ?? \"absolute\";\nconst btnTop = props.style.btnTop ?? \"50%\";\n\n/* ------------------------------ InlineStyles ------------------------------ */\nconst carouselWrapperStyle = props.carouselWrapperStyle;\nconst carouselItemStyle = props.carouselItemStyle;\nconst carouselImageStyle = props.carouselImageStyle;\nconst carouselButtonStyle = props.carouselButtonStyle;\n/* ------------------------------ InlineStyles ------------------------------ */\n\nconst CarouselWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n  position: relative;\n`;\n\nconst CarouselInner = styled.div`\n  display: flex;\n  transition: transform 0.5s ease;\n`;\n\nconst CarouselItem = styled.div`\n  width: ${itemWidth};\n  height: ${itemHeight};\n  flex-shrink: 0;\n`;\n\nconst CarouselImage = styled.img`\n  width: ${imageWidth};\n  height: ${imageHeight};\n  object-fit: ${imageObjectFit};\n`;\n\nconst CarouselButton = styled.button`\n  background-color: ${btnBackgroundColor};\n  border: ${btnBorder};\n  border-radius: ${btnBorderRadius};\n  color: ${btnFontColor};\n  padding: ${btnPadding};\n  position: ${btnPosition};\n  top: ${btnTop};\n  transform: translateY(-50%);\n  cursor: pointer;\n  ${({ direction }) => (direction === \"left\" ? \"left: 0;\" : \"right: 0;\")}\n`;\n\nconst leftIcon = props.arrowLeft;\nconst rigthIcon = props.arrowRight;\n\nconst slides = props.slidesData;\nconst totalSlides = slides.length;\n\nconst [currentIndex, setCurrentIndex] = useState(0);\nconst nextSlide = () => {\n  setCurrentIndex((prevIndex) =>\n    prevIndex === totalSlides - 1 ? 0 : prevIndex + 1\n  );\n};\n\nconst prevSlide = () => {\n  setCurrentIndex((prevIndex) => (prevIndex === 0 ? prevIndex : prevIndex - 1));\n};\n\nuseEffect(() => {\n  const interval = setInterval(() => {\n    nextSlide();\n  }, 4000);\n\n  return () => clearInterval(interval);\n}, [totalSlides]); /* -------Re-run effect when currentIndex changes ------ */\n\nreturn (\n  <>\n    <CarouselWrapper style={carouselWrapperStyle}>\n      <CarouselInner\n        style={{ transform: `translateX(-${currentIndex * 100}%)` }}\n      >\n        {slides.map((slide, index) => (\n          <CarouselItem key={index} style={carouselItemStyle}>\n            <CarouselImage\n              src={slide.image}\n              alt={slide.imageAlt}\n              style={carouselImageStyle}\n            />\n          </CarouselItem>\n        ))}\n      </CarouselInner>\n      <CarouselButton\n        direction=\"left\"\n        onClick={prevSlide}\n        style={carouselButtonStyle}\n      >\n        {leftIcon}\n      </CarouselButton>\n      <CarouselButton\n        direction=\"right\"\n        onClick={nextSlide}\n        style={carouselButtonStyle}\n      >\n        {rigthIcon}\n      </CarouselButton>\n    </CarouselWrapper>\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/v1.wireframes.near/widget/Components.Carousel.AutoSlideCarousel", "fact_widget_deployments_id": "8c2820785a734f904b0f2237509f619a", "inserted_timestamp": "2024-04-13T14:37:28.463Z", "modified_timestamp": "2024-04-13T14:37:28.463Z", "__row_index": 0}