{"tx_hash": "BQnaSkjZKbJz3R17HDqj12LRWQKP3Bvwwffmj4bSjvBD", "action_id_social": "8yDtT5WfDsn1FWrUeymjP9txG1F9Zf8DLsLVC6zg7Kiz-0-widget", "block_id": 116757458, "block_timestamp": "2024-04-13T12:54:47.615Z", "signer_id": "v1.wireframes.near", "widget_name": "Components.Input.InputFieldWithIcon", "source_code": "/* -------------------------------------------------------------------------- */\n/*\n __        ___           __                               \n \\ \\      / (_)_ __ ___ / _|_ __ __ _ _ __ ___   ___  ___ \n  \\ \\ /\\ / /| | '__/ _ \\ |_| '__/ _` | '_ ` _ \\ / _ \\/ __|\n   \\ V  V / | | | |  __/  _| | | (_| | | | | | |  __/\\__ \\\n    \\_/\\_/  |_|_|  \\___|_| |_|  \\__,_|_| |_| |_|\\___||___/\n\n  =========================================================\n  * Wireframes - v1.0.0\n  =========================================================\n  * Product Page: https://wireframes.design\n  =========================================================\n  * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n                                                                                 */\n\n/* -------------------------------------------------------------------------- */\n\nconst name = props.name ?? \"inputField\";\nconst label = props.inputTitle ?? \"Title\";\nconst type = props.type ?? \"text\";\nconst value = props.value ?? \"\";\nconst onChange = props.onChange ?? (() => {});\nconst validate = props.validate ?? (() => {});\nconst autofocus = props.autofocus ?? false;\nconst placeholder = props.placeholder ?? \"Placeholder\";\nconst required = props.required ?? false;\nconst isDisable = props.isDisable ?? false;\nconst error = props.error ?? \"\";\n\nconst width = props.style.width;\nconst height = props.style.height;\nconst padding = props.style.padding;\nconst fontSize = props.style.fontSize;\nconst fontColor = props.style.fontColor;\n\nconst backgroundColor = props.style.backgroundColor;\nconst border = props.style.border;\nconst borderRadius = props.style.borderRadius;\nconst boxShadow = props.style.boxShadow;\n/* ---------------------------------- error --------------------------------- */\nconst errorFontWeight = props.style.errorFontWeight;\nconst errorFontSize = props.style.errorFontSize;\nconst errorLineHeight = props.style.errorLineHeight;\nconst errorFontColor = props.style.errorFontColor;\nconst errorHeight = props.style.errorHeight;\nconst errorShowHeight = props.style.errorShowHeight;\n/* ---------------------------------- error --------------------------------- */\n\n/* ---------------------------------- label --------------------------------- */\nconst labelFontColor = props.style.labelFontColor;\nconst labelFontSize = props.style.labelFontSize;\nconst labelFontWeight = props.style.labelFontWeight;\nconst labelLineHeight = props.style.labelLineHeight;\nconst labelMinWidth = props.style.labelMinWidth;\n/* ---------------------------------- label --------------------------------- */\n\n/* ---------------------------------- Input --------------------------------- */\nconst borderTopLeftRadius = props.borderTopLeftRadius;\nconst borderBottomLeftRadius = props.borderBottomLeftRadius ?? \"0\";\nconst borderLeft = props.borderLeft ?? \"none\";\n/* ---------------------------------- Input --------------------------------- */\n\n/* ---------------------------------- Addon --------------------------------- */\nconst borderTopRightRadius = props.borderTopRightRadius;\nconst borderBottomRightRadius = props.borderBottomRightRadius;\n\nconst addonBorderTopLeftRadius = props.addonBorderTopLeftRadius;\nconst addonBorderBottomLeftRadius = props.addonBorderBottomLeftRadius;\n\nconst addonBorder = props.style.addonBorder;\nconst addonBorderRadius = props.style.addonBorderRadius;\nconst addonBackground = props.style.addonBackground;\nconst addonPadding = props.style.addonPadding;\nconst addonJustifyContent = props.style.addonJustifyContent;\nconst addonWidth = props.style.addonWidth;\nconst addonHeight = props.style.addonHeight;\nconst addonMinHeight = props.style.addonMinHeight;\nconst addonFocusBorder = props.style.addonFocusBorder;\n/* ---------------------------------- Addon --------------------------------- */\n\nconst labelSide = props.labelSide ?? \"\";\n\nconst iconSize = props.iconSize ?? \"16px\";\nconst iconColor = props.iconColor ?? \"#0d6efd\";\nconst iconSide = props.iconSide ?? \"\";\nconst icon = props.icon ?? \"exclamation-circle-fill\";\n\nconst inlineStyle = props.inlineStyle;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: flex-start;\n  padding: 0px;\n  gap: 0.45em;\n  width: 100%;\n`;\n\nconst MainContainer = styled.div`\n  display: flex;\n  align-items: baseline;\n  justify-content: flex-start;\n  padding: 0px;\n  gap: 0.45em;\n  width: 100%;\n`;\n\nconst Label = styled.label`\n  font-style: normal;\n  font-weight: ${(props) => props.labelFontWeight || \"600\"};\n  font-size: ${(props) => props.labelFontSize || \"0.95em\"};\n  line-height: ${(props) => props.labelLineHeight || \"1.25\"};\n  min-width: ${(props) => props.labelMinWidth || \"18%\"};\n  color: ${(props) => props.labelFontColor || \"#000\"};\n`;\n\nconst Error = styled.span`\n  display: inline-block;\n  font-style: normal;\n  font-weight: ${(props) => props.errorFontWeight || \"400\"};\n  font-size: ${(props) => props.errorFontSize || \"0.75em\"};\n  line-height: ${(props) => props.errorLineHeight || \"1.25em\"};\n  color: ${(props) => props.errorFontColor || \"#ff4d4f\"};\n  height: ${(props) => props.errorHeight || \"0px\"};\n  overflow: hidden;\n  transition: height 0.3s ease-in-out;\n\n  &.show {\n    height: ${(props) => props.errorShowHeight || \"auto\"};\n  }\n`;\n\nconst InputGroup = styled.div`\n  display: flex;\n  flex-wrap: nowrap;\n`;\n\nconst Addon = styled.span`\n  border: ${(props) => props.addonBorder || \"1.5px solid #e2e2e2\"};\n  border-radius: ${(props) => props.addonBorderRadius || \"5px\"};\n  background: ${(props) => props.addonBackground || \"none\"};\n  padding: ${(props) => props.addonPadding || \"0.5em 0.75em\"};\n  display: flex;\n  justify-content: ${(props) => props.addonJustifyContent || \"center\"};\n  width: ${(props) => props.addonWidth || \"18%\"};\n  height: ${(props) => props.addonHeight || \"100%\"};\n  min-height: ${(props) => props.addonMinHeight || \"38px\"};\n  border-top-right-radius: ${(props) => props.borderTopRightRadius || \"0\"};\n  border-bottom-right-radius: ${(props) =>\n    props.borderBottomRightRadius || \"0\"};\n  border-top-left-radius: ${(props) => props.addonBorderTopLeftRadius || \"\"};\n  border-bottom-left-radius: ${(props) =>\n    props.addonBorderBottomLeftRadius || \"\"};\n\n  &:focus {\n    outline: none;\n    border: ${(props) => props.addonFocusBorder || \"1.5px solid #1a73e8\"};\n  }\n`;\n\nconst Input = {\n  boxSizing: \"border-box\",\n  display: \"flex\",\n  flexDirection: \"row\",\n  alignItems: \"center\",\n  padding: padding ?? \"0.5em 0.75em\",\n  gap: \"0.5em\",\n  textDecoration: \"none\",\n  border: border ?? \"1px solid #d0d5dd\",\n  boxShadow: boxShadow ?? \"0px 1px 2px rgba(16, 24, 40, 0.05)\",\n  color: fontColor ?? \"#101828\",\n  width: width ?? \"100%\",\n\n  borderRadius: borderRadius ?? \"0px\",\n};\n\nconst [inputValue, setInputValue] = useState(value);\nconst [debouncedInputValue, setDebouncedInputValue] = useState(value);\n\nconst handleInputChange = (event) => {\n  setInputValue(event.target.value);\n};\n\nuseEffect(() => {\n  const timeoutId = setTimeout(() => {\n    onChange(inputValue);\n  }, 900);\n  return () => clearTimeout(timeoutId);\n}, [inputValue, 1000]);\n\nreturn (\n  <div>\n    {labelSide == \"start\" ? (\n      <>\n        <MainContainer>\n          <Label\n            labelFontColor={labelFontColor}\n            labelFontSize={labelFontSize}\n            labelFontWeight={labelFontWeight}\n            labelLineHeight={labelLineHeight}\n            labelMinWidth={labelMinWidth}\n          >\n            {label} {required && <Error className=\"show\">*Required</Error>}\n          </Label>\n          <div className=\"row\">\n            <InputGroup>\n              {iconSide == \"end\" ? (\n                <>\n                  <input\n                    type={type}\n                    name={name}\n                    autoComplete=\"off\"\n                    autofocus={autofocus}\n                    placeholder={placeholder}\n                    onBlur={() => validate()}\n                    value={inputValue}\n                    onChange={handleInputChange}\n                    required={required}\n                    readOnly={isDisable}\n                    height={height}\n                    style={Input}\n                  />\n                  <Addon\n                    borderBottomRightRadius=\"5px\"\n                    borderTopRightRadius=\"5px\"\n                    addonBorderBottomLeftRadius=\"0\"\n                    addonBorderTopLeftRadius=\"0\"\n                    addonBorder={addonBorder}\n                    addonBorderRadius={addonBorderRadius}\n                    addonBackground={addonBackground}\n                    addonPadding={addonPadding}\n                    addonJustifyContent={addonJustifyContent}\n                    addonWidth={addonWidth}\n                    addonHeight={addonHeight}\n                    addonMinHeight={addonMinHeight}\n                    addonFocusBorder={addonFocusBorder}\n                  >\n                    <Widget\n                      src={`v1.wireframes.near/widget/Components.Icon.BootstrapIcons`}\n                      props={{\n                        iconName: icon,\n                        iconSize: iconSize,\n                        iconColor: iconColor,\n                      }}\n                    />\n                  </Addon>\n                </>\n              ) : (\n                <>\n                  <Addon\n                    addonBorder={addonBorder}\n                    addonBorderRadius={addonBorderRadius}\n                    addonBackground={addonBackground}\n                    addonPadding={addonPadding}\n                    addonJustifyContent={addonJustifyContent}\n                    addonWidth={addonWidth}\n                    addonHeight={addonHeight}\n                    addonMinHeight={addonMinHeight}\n                    addonFocusBorder={addonFocusBorder}\n                  >\n                    <Widget\n                      src={`v1.wireframes.near/widget/Components.Icon.BootstrapIcons`}\n                      props={{\n                        iconName: icon,\n                        iconSize: iconSize,\n                        iconColor: iconColor,\n                      }}\n                    />\n                  </Addon>\n                  <input\n                    type={type}\n                    name={name}\n                    autoComplete=\"off\"\n                    autofocus={autofocus}\n                    placeholder={placeholder}\n                    onBlur={() => validate()}\n                    value={inputValue}\n                    onChange={handleInputChange}\n                    required={required}\n                    readOnly={isDisable}\n                    height={height}\n                    style={Input}\n                  />\n                </>\n              )}\n            </InputGroup>\n            <Error\n              className={error ? \"show\" : \"\"}\n              errorFontSize={errorFontSize}\n              errorFontWeight={errorFontWeight}\n              errorFontColor={errorFontColor}\n              errorLineHeight={errorLineHeight}\n              errorHeight={errorHeight}\n              errorShowHeight={errorShowHeight}\n            >\n              {error}\n            </Error>\n          </div>\n        </MainContainer>\n      </>\n    ) : (\n      <>\n        <Container>\n          <Label\n            labelFontColor={labelFontColor}\n            labelFontSize={labelFontSize}\n            labelFontWeight={labelFontWeight}\n            labelLineHeight={labelLineHeight}\n            labelMinWidth={labelMinWidth}\n          >\n            {label} {required && <Error className=\"show\">*Required</Error>}\n          </Label>\n          <div className=\"row\">\n            <InputGroup>\n              {iconSide == \"end\" ? (\n                <>\n                  <input\n                    type={type}\n                    name={name}\n                    autoComplete=\"off\"\n                    autofocus={autofocus}\n                    placeholder={placeholder}\n                    onBlur={() => validate()}\n                    value={inputValue}\n                    onChange={handleInputChange}\n                    required={required}\n                    readOnly={isDisable}\n                    height={height}\n                    style={Input}\n                  />\n                  <Addon\n                    borderBottomRightRadius=\"5px\"\n                    borderTopRightRadius=\"5px\"\n                    addonBorderBottomLeftRadius=\"0\"\n                    addonBorderTopLeftRadius=\"0\"\n                    addonBorder={addonBorder}\n                    addonBorderRadius={addonBorderRadius}\n                    addonBackground={addonBackground}\n                    addonPadding={addonPadding}\n                    addonJustifyContent={addonJustifyContent}\n                    addonWidth={addonWidth}\n                    addonHeight={addonHeight}\n                    addonMinHeight={addonMinHeight}\n                    addonFocusBorder={addonFocusBorder}\n                  >\n                    <Widget\n                      src={`v1.wireframes.near/widget/Components.Icon.BootstrapIcons`}\n                      props={{\n                        iconName: icon,\n                        iconSize: iconSize,\n                        iconColor: iconColor,\n                      }}\n                    />\n                  </Addon>\n                </>\n              ) : (\n                <>\n                  <Addon\n                    addonBorder={addonBorder}\n                    addonBorderRadius={addonBorderRadius}\n                    addonBackground={addonBackground}\n                    addonPadding={addonPadding}\n                    addonJustifyContent={addonJustifyContent}\n                    addonWidth={addonWidth}\n                    addonHeight={addonHeight}\n                    addonMinHeight={addonMinHeight}\n                    addonFocusBorder={addonFocusBorder}\n                  >\n                    <Widget\n                      src={`v1.wireframes.near/widget/Components.Icon.BootstrapIcons`}\n                      props={{\n                        iconName: icon,\n                        iconSize: iconSize,\n                        iconColor: iconColor,\n                      }}\n                    />\n                  </Addon>\n                  <input\n                    type={type}\n                    name={name}\n                    autoComplete=\"off\"\n                    autofocus={autofocus}\n                    placeholder={placeholder}\n                    onBlur={() => validate()}\n                    value={inputValue}\n                    onChange={handleInputChange}\n                    required={required}\n                    readOnly={isDisable}\n                    height={height}\n                    style={Input}\n                  />\n                </>\n              )}\n            </InputGroup>\n          </div>\n          <Error\n            className={error ? \"show\" : \"\"}\n            errorFontSize={errorFontSize}\n            errorFontWeight={errorFontWeight}\n            errorFontColor={errorFontColor}\n            errorLineHeight={errorLineHeight}\n            errorHeight={errorHeight}\n            errorShowHeight={errorShowHeight}\n          >\n            {error}\n          </Error>\n        </Container>\n      </>\n    )}\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/v1.wireframes.near/widget/Components.Input.InputFieldWithIcon", "fact_widget_deployments_id": "bd18927b9371ec55848b658fbf1e73f9", "inserted_timestamp": "2024-04-13T14:37:28.463Z", "modified_timestamp": "2024-04-13T14:37:28.463Z", "__row_index": 0}