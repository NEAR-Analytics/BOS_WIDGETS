{"tx_hash": "BQnaSkjZKbJz3R17HDqj12LRWQKP3Bvwwffmj4bSjvBD", "action_id_social": "8yDtT5WfDsn1FWrUeymjP9txG1F9Zf8DLsLVC6zg7Kiz-0-widget", "block_id": 116757458, "block_timestamp": "2024-04-13T12:54:47.615Z", "signer_id": "v1.wireframes.near", "widget_name": "Components.Navigations.SideNavbarWithIcons", "source_code": "/* -------------------------------------------------------------------------- */\n/*\n __        ___           __                               \n \\ \\      / (_)_ __ ___ / _|_ __ __ _ _ __ ___   ___  ___ \n  \\ \\ /\\ / /| | '__/ _ \\ |_| '__/ _` | '_ ` _ \\ / _ \\/ __|\n   \\ V  V / | | | |  __/  _| | | (_| | | | | | |  __/\\__ \\\n    \\_/\\_/  |_|_|  \\___|_| |_|  \\__,_|_| |_| |_|\\___||___/\n\n  =========================================================\n  * Wireframes - v1.0.0\n  =========================================================\n  * Product Page: https://wireframes.design\n  =========================================================\n  * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n                                                                                 */\n/* -------------------------------------------------------------------------- */\n\nconst mainContainerMinWidth = props.style.mainContainerMinWidth ?? \"85px\";\n\nconst navPosition = props.style.navPosition ?? \"relative\";\nconst navPadding = props.style.navPadding ?? \"0.5em\";\nconst navMargin = props.style.navMargin ?? \"0.25em 0\";\nconst navFontStyle = props.style.navFontStyle ?? \"normal\";\nconst navFontWeight = props.style.navFontWeight ?? \"600\";\nconst navFontSize = props.style.navFontSize ?? \"0.8em\";\nconst navLineHeight = props.style.navLineHeight ?? \"1em\";\nconst navFontColor = props.style.navFontColor ?? \"#3a3f42\";\nconst navBorderRadius = props.style.navBorderRadius ?? \"5px\";\nconst navDisplay = props.style.navDisplay ?? \"flex\";\nconst navJustifyContent = props.style.navJustifyContent ?? \"center\";\nconst navAlignItems = props.style.navAlignItems ?? \"center\";\nconst navGap = props.style.navGap ?? \"0.75em\";\n\nconst navTabletWidth = props.style.navTabletWidth ?? \"100%\";\nconst navTabletBackgroundColor =\n  props.style.navTabletBackgroundColor ?? \"#f2f1ea\";\nconst navTabletBorderRadius = props.style.navTabletBorderRadius ?? \"0px\";\nconst navTabletDisplay = props.style.navTabletDisplay ?? \"flex\";\nconst navTabletJustifyContent =\n  props.style.navTabletJustifyContent ?? \"flex-start\";\nconst navTabletMinHeight = props.style.navTabletMinHeight ?? \"60px\";\nconst navTabletMargin = props.style.navTabletMargin ?? \"0px\";\nconst navTabletBorderBottom =\n  props.style.navTabletBorderBottom ?? \"1px #dbdbd7 solid\";\n\nconst navHoverFontColor = props.style.navHoverFontColor ?? \"#667085\";\nconst navHoverBackgroundColor =\n  props.style.navHoverBackgroundColor ?? \"#f9fafb\";\n\nconst navSpanDisplay = props.style.navSpanDisplay ?? \"flex\";\nconst navSpanAlignItems = props.style.navSpanAlignItems ?? \"center\";\nconst navSpanJustifyContent = props.style.navSpanJustifyContent ?? \"center\";\nconst navSpanTextAlign = props.style.navSpanTextAlign ?? \"center\";\n\nconst containerDisplay = props.style.containerDisplay ?? \"flex\";\nconst containerMarginRight = props.style.containerMarginRight ?? \"2.5em\";\nconst containerGap = props.style.containerGap ?? \"0.8em\";\nconst containerMaxHeight = props.style.containerMaxHeight ?? \"90vh\";\nconst containerPadding = props.style.containerPadding ?? \"0px 0px 100px 0px\";\nconst containerTop = props.style.containerTop ?? \"120px\";\n\nconst containerTabletWidth = props.style.containerTabletWidth ?? \"90%\";\nconst containerTabletZIndex = props.style.containerTabletZIndex ?? \"1\";\nconst containerTabletMarginLeft =\n  props.style.containerTabletMarginLeft ?? \"5px\";\nconst containerTabletMarginRight =\n  props.style.containerTabletMarginRight ?? \"0px\";\nconst containerTabletMarginBottom =\n  props.style.containerTabletMarginBottom ?? \"2.5em\";\nconst containerTabletBorderTopRightRadius =\n  props.style.containerTabletBorderTopRightRadius ?? \"5px\";\nconst containerTabletBorderTopLeftRadius =\n  props.style.containerTabletBorderTopLeftRadius ?? \"5px\";\nconst containerTabletGap = props.style.containerTabletGap ?? \"0px\";\nconst containerTabletBackgroundColor =\n  props.style.containerTabletBackgroundColor ?? \"#f2f1ea\";\n\nconst containerStyle = props.containerStyle;\nconst navContainerStyle = props.navContainerStyle;\n\nconst navLinks = props.linksData;\n\nconst NavItem = styled.div`\n  position: ${navPosition};\n  cursor: pointer;\n  padding: ${navPadding};\n  margin: ${navMargin};\n  font-style: ${navFontStyle};\n  font-weight: ${navFontWeight};\n  font-size: ${navFontSize};\n  line-height: ${navLineHeight};\n  color: ${navFontColor};\n  border-radius: ${navBorderRadius};\n  text-decoration: none;\n  transition: background-color 0.2s ease-in-out;\n  display: ${navDisplay};\n  flex-direction: column;\n  justify-content: ${navJustifyContent};\n  align-items: ${navAlignItems};\n  gap: ${navGap};\n\n  @media screen and (max-width: 768px) {\n    width: ${navTabletWidth};\n    flex-direction: row;\n    background-color: ${navTabletBackgroundColor};\n    border-radius: ${navTabletBorderRadius};\n    display: ${navTabletDisplay};\n    justify-content: ${navTabletJustifyContent};\n    min-height: ${navTabletMinHeight};\n    margin: ${navTabletMargin};\n    border-bottom: ${navTabletBorderBottom};\n  }\n\n  &:hover {\n    color: ${navHoverFontColor};\n    text-decoration: none;\n    background-color: ${navHoverBackgroundColor};\n  }\n\n  span {\n    display: ${navSpanDisplay};\n    align-items: ${navSpanAlignItems};\n    justify-content: ${navSpanJustifyContent};\n    text-align: ${navSpanTextAlign};\n  }\n`;\n\nconst navItem = ({ text, icon, id, iconSelected }) => (\n  <Link to={`/${id}`} style={{ textDecoration: \"none\" }}>\n    <NavItem\n      onClick={() => {\n        props.update({\n          tab: id,\n          collapsible: true,\n        });\n      }}\n    >\n      {id === props.tab ? iconSelected : icon}\n      <span>{text}</span>\n    </NavItem>\n  </Link>\n);\n\nconst MainContainer = styled.div`\n  min-width: ${mainContainerMinWidth};\n`;\n\nconst NavContainer = styled.div`\n  display: ${containerDisplay};\n  flex-direction: column;\n  margin-right: ${containerMarginRight};\n  gap: ${containerGap};\n  max-height: ${containerMaxHeight};\n  padding: ${containerPadding};\n  overflow: auto;\n  -ms-overflow-style: none;\n  scrollbar-width: none;\n  ::-webkit-scrollbar {\n    display: none;\n  }\n  top: ${containerTop};\n\n  @media screen and (max-width: 768px) {\n    width: ${containerTabletWidth};\n    z-index: ${containerTabletZIndex};\n    margin-left: ${containerTabletMarginLeft};\n    margin-right: ${containerTabletMarginRight};\n    margin-bottom: ${containerTabletMarginBottom};\n    border-top-right-radius: ${containerTabletBorderTopRightRadius};\n    border-top-left-radius: ${containerTabletBorderTopLeftRadius};\n    gap: ${containerTabletGap};\n    background-color: ${containerTabletBackgroundColor};\n  }\n`;\n\nconst content = (\n  <MainContainer style={containerStyle}>\n    <NavContainer style={navContainerStyle}>\n      {navLinks?.map((link, index) => {\n        return navItem({\n          text: link.text,\n          id: link.id,\n          icon: link.icon,\n          iconSelected: link.iconSelected,\n        });\n      })}\n    </NavContainer>\n  </MainContainer>\n);\n\nif (!props.collapsible) {\n  return content;\n}\n\nreturn <div />;\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/v1.wireframes.near/widget/Components.Navigations.SideNavbarWithIcons", "fact_widget_deployments_id": "4fea76da2aefc91f71a7702850333602", "inserted_timestamp": "2024-04-13T14:37:28.463Z", "modified_timestamp": "2024-04-13T14:37:28.463Z", "__row_index": 0}