{"tx_hash": "9oxaNnxt1LvTcspVSHxfbVGZvh9eDav4w91hoCh1oedd", "action_id_social": "7zNcaZtjeMwRTEZRJDY9kf9aTPAL1eqEhAnWGiey8gwH-0-widget", "block_id": 101528550, "block_timestamp": "2023-09-20T05:28:35.562Z", "signer_id": "gr8h.near", "widget_name": "LensProfileController", "source_code": "const LENS_API_URL = props.testnet\n  ? \"https://api-mumbai.lens.dev\"\n  : \"https://api.lens.dev\";\n\nconst DEV_USER = props.testnet ? \"gr8h.testnet\" : \"gr8h.testnet\";\n\nState.init({\n  authenticated: null,\n  account: null,\n  isProfileCalled: false,\n  profile: null,\n  error: \"\",\n  sdk: null,\n});\n\n// Get profile by handle\nfunction getProfile() {\n  if (isProfileCalled) return;\n\n  State.update({ isProfileCalled: true });\n\n  return props.handle\n    ? state.sdk.getProfileByHandle(props.handle).then((result) => {\n        if (result.status !== 200) {\n          State.update({\n            error: `getProfileByHandle result error: ${result.status}`,\n          });\n          return;\n        }\n\n        if (result.body.data.profile) {\n          State.update({ profile: result.body.data.profile });\n        } else {\n          State.update({\n            error: `getProfileByHandle No profile found.`,\n          });\n        }\n      })\n    : state.sdk\n        .getProfileByEthereumAddress(props.ethereumAddress)\n        .then((result) => {\n          if (result.status !== 200) {\n            State.update({\n              error: `getProfileByEthereumAddress result error: ${result.status}`,\n            });\n            return;\n          }\n\n          const items = result.body?.data?.profiles?.items;\n\n          if (items.length > 0) {\n            getProfileByHandle(items[0].handle);\n          } else {\n            State.update({\n              error: \"getProfileByEthereumAddress No profile found.\",\n            });\n          }\n        });\n}\n\n// Get ethereum account\nfunction getEthereumAccount() {\n  if (state.authenticated === null && !state.account) {\n    const accounts = Ethers.send(\"eth_requestAccounts\", []);\n    if (accounts.length) {\n      State.update({ authenticated: true, account: accounts[0] });\n    } else {\n      State.update({\n        authenticated: false,\n        error: \"getEthereumAccount Not authenticated\",\n      });\n    }\n  }\n}\n\n// Initialize Lens SDK\nfunction init(sdk) {\n  State.update({ sdk: sdk });\n  if (state.sdk) {\n    getProfile();\n    getEthereumAccount();\n  }\n}\n\n// console.log(\"props controller\", props);\n// console.log(\"state controller\", state);\n\nreturn (\n  <>\n    <Widget\n      src={`${DEV_USER}/widget/LensSDK`}\n      props={{\n        onLoad: (sdk) => init(sdk),\n        onRefresh: (sdk) => State.update({ sdk: sdk }),\n        loaded: !!state.sdk,\n        testnet: props.testnet ?? false,\n      }}\n    />\n\n    {state.sdk ? (\n      state.isProfileCalled && !state.profile ? (\n        <Widget\n          src={`${DEV_USER}/widget/LensProfileCreate`}\n          props={{\n            ...state,\n            lensUrl: LENS_API_URL,\n          }}\n        />\n      ) : (\n        <Widget\n          src={`${DEV_USER}/widget/LensProfileView`}\n          props={{\n            ...state,\n            lensUrl: LENS_API_URL,\n          }}\n        />\n      )\n    ) : (\n      <div>loading...</div>\n    )}\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/gr8h.near/widget/LensProfileController", "fact_widget_deployments_id": "aec3b2a222c91c0d79b2fe82a83410c4", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}