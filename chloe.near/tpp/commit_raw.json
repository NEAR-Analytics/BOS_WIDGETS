{"tx_hash": "HpeXJqWFY72FwsbagjBUSWbLT27gvEHCvYyXw4CvQfkS", "action_id_social": "FXAnuJYmmxM3Ru3xrayCT8sbAjKwG3yD7FAXJuw9zTbz-0-widget", "block_id": 101762717, "block_timestamp": "2023-09-23T09:05:17.792Z", "signer_id": "chloe.near", "widget_name": "tpp", "source_code": "const accountId = props.accountId || context.accountId;\n\nconst GameButton = styled.button`\n  background: palevioletred;\n  color: white;\n  font-size: 1em;\n  margin: 10px;\n  padding: 0.5em 1em;\n  border: 2px solid palevioletred;\n  border-radius: 10px;\n  &:hover {\n    background: white;\n    color: palevioletred;\n  }\n`;\n\nif (!accountId) {\n  return (\n    <div>\n      <p>Please connect your NEAR wallet or create a new one:</p>\n      <a href=\"https://near.org/signup\" target=\"_blank\" rel=\"noreferrer\">\n        <GameButton>Create NEAR Wallet</GameButton>\n      </a>\n    </div>\n  );\n}\n\n// This state variable holds the current chainId\nconst [chainId, setChainId] = useState(null);\n\n// Styling for the Wrapper\nconst Wrapper = styled.div`\n  font-family: Arial, sans-serif;\n  text-align: center;\n  margin: 20px;\n  padding: 20px;\n  border: 1px solid #ccc;\n  border-radius: 8px;\n`;\n\n// Function to fetch and set the current chainId from the network\nconst getCurrentChainId = () => {\n  Ethers.provider()\n    .getNetwork()\n    .then(({ chainId }) => {\n      setChainId(chainId);\n    })\n    .catch((error) => {\n      console.error(\"Failed to get chainId:\", error);\n    });\n};\n\n// Function to switch to zkEVM testnet\nconst switchToTestnet = () => {\n  Ethers.send(\"wallet_switchEthereumChain\", [{ chainId: \"0x5a2\" }])\n    .then(() => {\n      // Update the chain ID using State.update\n      State.update({ chainId: 1442, isChainSupported: true });\n    })\n    .catch((error) => {\n      console.error(\"Failed to switch to testnet:\", error);\n    });\n};\n\n// Function to switch to zkEVM mainnet\nconst switchToMainnet = () => {\n  Ethers.send(\"wallet_switchEthereumChain\", [{ chainId: \"0x44D\" }])\n    .then(() => {\n      // Update the chain ID using State.update\n      State.update({ chainId: 1101, isChainSupported: true });\n    })\n    .catch((error) => {\n      console.error(\"Failed to switch to mainnet:\", error);\n    });\n};\n\n// Assuming Ethers and State are correctly initialized\nif (\n  state.chainId === undefined &&\n  ethers !== undefined &&\n  Ethers.send(\"eth_requestAccounts\", [])[0]\n) {\n  Ethers.provider()\n    .getNetwork()\n    .then((data) => {\n      const chainId = data?.chainId;\n      State.update({ chainId, isChainSupported: true });\n    })\n    .catch((error) => {\n      console.error(\"Failed to get network:\", error);\n    });\n}\n\n// Call the function to set the current chainId\ngetCurrentChainId();\n\nreturn (\n  <Wrapper>\n    <div>\n      <h2>Welcome to The Peoples Place</h2>\n      <p style={{ whiteSpace: \"pre-line\" }}>{accountId}</p>\n      <h1>Current Chain ID: {chainId}</h1>\n      {chainId === 1101 ? (\n        <div>\n          <p>On Polygon zkEVM Mainnet</p>\n          <button onClick={switchToTestnet}>Switch to zkEVM Testnet</button>\n        </div>\n      ) : (\n        <div>\n          {chainId === 1442 ? (\n            <div>\n              <p>On Polygon zkEVM Testnet</p>\n              <button onClick={switchToMainnet}>Switch to zkEVM Mainnet</button>\n            </div>\n          ) : (\n            <div>\n              <p>Please switch to Polygon zkEVM</p>\n              <button onClick={switchToTestnet}>Switch to zkEVM Testnet</button>\n              <button onClick={switchToMainnet}>Switch to zkEVM Mainnet</button>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  </Wrapper>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/chloe.near/widget/tpp", "fact_widget_deployments_id": "a985c9d19dfe867203ebeccd1f428c80", "inserted_timestamp": "2023-09-23T11:16:47.485Z", "modified_timestamp": "2023-09-23T11:16:47.485Z", "__row_index": 7}