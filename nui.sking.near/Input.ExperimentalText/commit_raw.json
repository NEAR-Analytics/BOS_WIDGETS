{"tx_hash": "HcCRzeYyuVE46xNsA5vStiet9sjuFFNbo7DNUhouutGv", "action_id_social": "7i9vpwBXYaDRXC5WnDnDE5zRmX69Lr4mc7osp7U3mRtr-0-widget", "block_id": 97968259, "block_timestamp": "2023-08-03T07:57:13.299Z", "signer_id": "nui.sking.near", "widget_name": "Input.ExperimentalText", "source_code": "// Uses some hacks to make it lag less\n\nconst label = props.label;\nconst placeholder = props.placeholder ?? \"Placeholder\";\nconst value = props.value;\nconst onChange = props.onChange ?? (() => {});\nconst validate = props.validate ?? (() => {});\nconst error = props.error;\nconst textarea = props.textarea ?? false;\nconst inputProps = props.inputProps ?? {};\nconst disabled = props.disabled;\nconst icon = props.icon;\nconst size = props.size ?? \"md\"; // sm, md, lg\nconst className = props.className ?? \"\";\nconst useTimeout = props.useTimeout ?? false; // Uses a timeout beween typing event and calling onChange\n\nif (!state) {\n  State.init({\n    value: value,\n\n    Container: styled.div`\n      display: flex;\n      flex-direction: column;\n      align-items: flex-start;\n      padding: 0px;\n      gap: 0.45em;\n      width: max-content;\n      flex: 1;\n      min-width: 140px;\n      width: 100%;\n    `,\n\n    Label: styled.label`\n      font-style: normal;\n      font-weight: 600;\n      font-size: ${({ size }) =>\n        size === \"sm\" ? \"0.8em\" : size === \"lg\" ? \"1.1em\" : \"0.95em\"};\n      line-height: 1.25em;\n      color: #344054;\n    `,\n\n    Error: styled.span`\n      display: inline-block;\n      font-style: normal;\n      font-weight: 400;\n      font-size: ${({ size }) =>\n        size === \"sm\" ? \"0.65em\" : size === \"lg\" ? \"0.85em\" : \"0.75em\"};\n      line-height: 1.25em;\n      color: #ff4d4f;\n      height: 0;\n      overflow: hidden;\n      transition: height 0.3s ease-in-out;\n\n      &.show {\n        height: 1.25em;\n      }\n    `,\n\n    InputContainer: styled.div`\n      box-sizing: border-box;\n      display: flex;\n      flex-direction: row;\n      align-items: center;\n      gap: 0.5em;\n      background: #ffffff;\n      border: 1px solid #d0d5dd;\n      box-shadow: 0px 1px 2px rgba(16, 24, 40, 0.05);\n      color: #101828;\n      background: #fff;\n      position: relative;\n      width: 100%;\n\n      font-size: ${({ size }) =>\n        size === \"sm\" ? \"12px\" : size === \"lg\" ? \"16px\" : \"14px\"};\n      border-radius: ${({ size }) =>\n        size === \"sm\" ? \"8px\" : size === \"lg\" ? \"12px\" : \"10px\"};\n\n      &.disabled {\n        background: #f5f5f5;\n        opacity: 0.7;\n      }\n\n      &.rounded {\n        border-radius: 50px !important;\n      }\n\n      .icon {\n        position: absolute;\n        left: 1em;\n        top: 50%;\n        transform: translateY(-50%);\n        color: #999;\n        font-size: inherit;\n      }\n    `,\n\n    Input: styled[textarea ? \"textarea\" : \"input\"]`\n      border: none;\n      background: transparent;\n      font-size: inherit;\n      color: inherit;\n      font-family: inherit;\n      font-weight: 500;\n      width: 100%;\n      border-radius: inherit;\n      line-height: 24px;\n      padding: ${({ size }) =>\n        size === \"sm\" ? \"4px 15px\" : size === \"lg\" ? \"8px 23px\" : \"6px 18px\"};\n\n      ${({ hasIcon }) => (hasIcon ? \"padding-left: 2.8em\" : \"\")};\n    `,\n    timeout: null,\n  });\n\n  return \"\";\n}\n\nconst { Container, Label, InputContainer, Input, Error } = state;\n\nreturn (\n  <Container>\n    {label && <Label size={size}>{label}</Label>}\n    <InputContainer\n      className={`${disabled ? \"disabled\" : \"\"} ${className}`}\n      size={size}\n    >\n      <div className=\"icon\">{icon}</div>\n      <Input\n        type={inputProps.type ?? \"text\"}\n        placeholder={placeholder}\n        value={value ?? state.value}\n        onChange={(e) => {\n          if (useTimeout) {\n            clearTimeout(state.timeout);\n            const newTimeout = setTimeout(\n              () => {\n                onChange(state.value);\n                console.log(\n                  \"Input.ExperimentalText: Called input onChange because of timeout with the id:\",\n                  newTimeout\n                );\n              },\n              typeof useTimeout === \"number\" ? useTimeout : 300\n            );\n            State.update({\n              value: e.target.value,\n              timeout: newTimeout,\n            });\n          } else {\n            State.update({\n              value: e.target.value,\n            });\n            onChange(state.value);\n          }\n        }}\n        onBlur={() => validate()}\n        disabled={disabled}\n        size={size}\n        className={className}\n        hasIcon={!!icon}\n        {...inputProps}\n      />\n    </InputContainer>\n    {error && (\n      <Error className={error ? \"show\" : \"\"} size={size}>\n        {error}\n      </Error>\n    )}\n  </Container>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/nui.sking.near/widget/Input.ExperimentalText", "fact_widget_deployments_id": "3682156051d7b1f46f27a90745e0b839", "inserted_timestamp": "2023-08-03T09:19:00.484Z", "modified_timestamp": "2023-08-03T09:19:00.484Z", "__row_index": 0}