{"tx_hash": "B8L3XEymvrxj6z7DrpJSBHVZwnBVABpNzzXhzGfZepJM", "action_id_social": "8g6fQuVMot9WzvgP9r1zEbY3dWYGWVHkbLeCz1gBmK4m-0-widget", "block_id": 101780144, "block_timestamp": "2023-09-23T14:40:52.550Z", "signer_id": "weige.near", "widget_name": "TransferButton", "source_code": "const { amount, balance, inputToken, config, chainId, sender, callback } =\n  props;\n\nconst fromL2toL1 = chainId === config.chains.l2.id;\n\nconst address =\n  chainId === config.chains.l1.id ? inputToken.addressL1 : inputToken.addressL2;\n\nconst gateWayAddress = props.l1TokenGateway;\n\nconst buttonText =\n  chainId === config.chains.l1.id\n    ? `Deposit to ${config.chains.l2.name}`\n    : `Withdraw from ${config.chains.l2.name}`;\n\nconst TransferButton = styled.button`\n  width: 100%;\n  outline: none;\n  padding: 8px;\n  border-radius: 12px;\n  :disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n`;\n\nconst getAllowance = () => {\n  if (address === config.eth.addressL1 || fromL2toL1) {\n    State.update({\n      isApproved: true,\n    });\n\n    return;\n  }\n\n  const TokenContract = new ethers.Contract(\n    address,\n    [\n      {\n        constant: true,\n        inputs: [\n          {\n            name: \"_owner\",\n            type: \"address\",\n          },\n          {\n            name: \"_spender\",\n            type: \"address\",\n          },\n        ],\n        name: \"allowance\",\n        outputs: [\n          {\n            name: \"\",\n            type: \"uint256\",\n          },\n        ],\n        payable: false,\n        stateMutability: \"view\",\n        type: \"function\",\n      },\n    ],\n    Ethers.provider().getSigner()\n  );\n\n  if (!gateWayAddress) return;\n\n  TokenContract.allowance(sender, gateWayAddress).then((allowanceRaw) => {\n    State.update({\n      isApproved: !Big(\n        ethers.utils.formatUnits(allowanceRaw._hex, inputToken.decimals)\n      ).lt(amount),\n    });\n  });\n};\n\nconst handleApprove = () => {\n  State.update({\n    approving: true,\n  });\n  const TokenContract = new ethers.Contract(\n    address,\n    [\n      {\n        inputs: [\n          {\n            internalType: \"address\",\n            name: \"spender\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"amount\",\n            type: \"uint256\",\n          },\n        ],\n        name: \"approve\",\n        outputs: [\n          {\n            internalType: \"bool\",\n            name: \"\",\n            type: \"bool\",\n          },\n        ],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n      },\n    ],\n    Ethers.provider().getSigner()\n  );\n\n  TokenContract.approve(\n    gateWayAddress,\n    ethers.utils.parseUnits(amount, inputToken.decimals),\n    {\n      gasLimit: 100000,\n    }\n  )\n    .then((tx) => {\n      tx.wait().then((res) => {\n        const { status } = res;\n        State.update({\n          isApproved: status === 1,\n          approving: false,\n        });\n      });\n    })\n    .catch((e) => {\n      State.update({\n        approving: false,\n      });\n    });\n};\n\nif (\n  Big(amount || 0).gt(balance || 0) ||\n  Big(balance || 0).eq(0) ||\n  Big(amount || 0).eq(0)\n) {\n  return (\n    <TransferButton disabled className=\"flex-row-center-center\">\n      {buttonText}\n    </TransferButton>\n  );\n}\n\ngetAllowance();\n\nif (!state.isApproved) {\n  return (\n    <TransferButton\n      onClick={() => {\n        handleApprove();\n      }}\n      className=\"flex-row-center-center\"\n    >\n      Approve {inputToken.symbol}\n    </TransferButton>\n  );\n}\n\nreturn (\n  <>\n    <TransferButton\n      onClick={() =>\n        State.update({\n          actionOn: true,\n        })\n      }\n      className=\"flex-row-center-center\"\n    >\n      {buttonText}\n    </TransferButton>\n\n    <Widget\n      src=\"weige.near/widget/transfer-action\"\n      props={{\n        ...props,\n        actionOn: state.actionOn,\n        cb: () => State.update({ actionOn: false }),\n      }}\n    />\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/weige.near/widget/TransferButton", "fact_widget_deployments_id": "a4c5d6a95c6ebc230e17c514fa2f0ec6", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}