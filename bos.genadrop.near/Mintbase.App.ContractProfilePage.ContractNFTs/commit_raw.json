{"tx_hash": "J5bBs6HWX2qEvR27mJqqtkgbicZU8nKT1iDMuUoM82Jz", "action_id_social": "93eBjvZjA4jfBa8QCX5URdYwK5eCUTruPyBekFJpz2fk-0-widget", "block_id": 117673696, "block_timestamp": "2024-04-26T15:34:31.747Z", "signer_id": "bos.genadrop.near", "widget_name": "Mintbase.App.ContractProfilePage.ContractNFTs", "source_code": "const { contractId, isDarkModeOn } = props;\nconst { Pagination } = VM.require(\"buildhub.near/widget/components\") || {\n  Pagination: () => <></>,\n};\nconst { getStoreNFTs } = VM.require(\n  \"bos.genadrop.near/widget/Mintbase.utils.sdk\"\n);\nconst Card = styled.div`\n  padding: 1em;\n  border: 1px solid #e5e8eb;\n  gap: 2em;\n  margin: 10px auto;\n  border-radius: 0.7em;\n  & input {\n    display: block;\n    padding: 0.5em;\n    width: 100%;\n    border: 1px solid #e5e8eb;\n    border-radius: 10px;\n    outline: none;\n    background: #f4f5f6;\n    color: #525c76;\n    :focus {\n      box-shadow: none;\n      border: 1px solid #0d99ff;\n    }\n    &::placeholder {\n      color: palevioletred;\n    }\n  }\n  .soulbound {\n    display: flex;\n    justify-content: space-between;\n    width: 100%;\n  }\n  img {\n    width: 100%;\n    height: 200px;\n    object-fit: cover;\n  }\n`;\nconst Cards = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  grid-gap: 24px;\n  border-radius: 0.7em;\n  width: 100%;\n  margin-top: 1em;\n`;\nconst perPage = 50;\nconst [nftData, setNftData] = useState([]);\nconst [loading, setLoading] = useState(true);\nconst [countNFTs, setCountNFTs] = useState(0);\nconst [pageNumber, setPageNumber] = useState(1);\nconst [showListed, setShowListed] = useState(false);\nconst YoctoToNear = (offer_priceYocto) => {\n  return new Big(offer_priceYocto || 0)\n    .div(new Big(10).pow(24))\n    .toFixed(2)\n    .toString();\n};\nuseEffect(() => {\n  getStoreNFTs({\n    offset: (pageNumber - 1) * perPage,\n    id: contractId,\n    limit: perPage,\n  })\n    .then(({ data, errors }) => {\n      if (errors) {\n        // handle those errors like a pro\n        console.error(errors);\n      }\n      // do something great with this precious data\n      console.log({ Nfts: data });\n      setCountNFTs(data.count.aggregate.count);\n      setLoading(false);\n      setNftData(data.tokens);\n    })\n    .catch((error) => {\n      // handle errors from fetch itself\n      console.error(error);\n    });\n}, [limit, offset, pageNumber, showListed]);\nconst listedToggleHandler = () => {\n  setShowListed((prev) => !prev);\n};\nconst WrapCards = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  width: 100%;\n  gap: 20px;\n  .count {\n    text-transform: uppercase;\n    font-weight: 400;\n    font-size: 16px;\n    color: ${isDarkModeOn ? \"#B3B5BD\" : \"#525c76\"};\n  }\n  .pagination_container {\n    width: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    align-content: center;\n  }\n`;\nconst LeftFilter = styled.div`\n  background: ${isDarkModeOn ? \"rgba(30, 32, 48, 1)\" : \"#fff\"};\n  width: 22%;\n  height: 100%;\n  padding: 15px;\n  border-radius: 4px;\n  transition: all 500ms cubic-bezier(0.4, 0, 0.2, 1);\n  display: flex;\n  gap: 24px;\n  flex-flow: column nowrap;\n  h2 {\n    font-size: 14px;\n    font-weight: bold;\n  }\n  .switch {\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n  }\n`;\nconst MainContent = styled.div`\n  flex: 1;\n`;\nconst s = countNFTs > 1 ? \"s\" : \"\";\nreturn (\n  <WrapCards>\n    {showFilters && (\n      <LeftFilter>\n        <h2>Status</h2>\n        <div className=\"switch\">\n          <Widget\n            src={`bos.genadrop.near/widget/Mintbase.MbSwitch`}\n            props={{\n              id: \"showListed\",\n              label: \"Show only Listed\",\n              onChange: listedToggleHandler,\n              isDarkModeOn,\n            }}\n          />\n        </div>\n      </LeftFilter>\n    )}\n    <MainContent>\n      <div className=\"count\">{`${countNFTs} Result${s}`}</div>\n      {countNFTs > 0 ? (\n        <>\n          <Cards>\n            {nftData &&\n              nftData.map((data, index) => (\n                <div key={index}>\n                  <Widget\n                    src=\"bos.genadrop.near/widget/Mintbase.NFT.Index\"\n                    props={{ data, isDarkModeOn, isConnected }}\n                  />\n                </div>\n              ))}\n          </Cards>\n          <div className=\"pagination_container\">\n            <p className=\"w-100 px-4\">\n              <Widget\n                src=\"bos.genadrop.near/widget/Mintbase.TablePagination\"\n                props={{\n                  totalItems: countNFTs,\n                  isDarkModeOn,\n                  itemsPerPage: perPage,\n                  currentPage: pageNumber,\n                  onPageChange: (pageNumber) => setPageNumber(pageNumber),\n                }}\n              />\n            </p>\n          </div>\n        </>\n      ) : (\n        <h5>The user does not own anything yet.</h5>\n      )}\n    </MainContent>\n  </WrapCards>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bos.genadrop.near/widget/Mintbase.App.ContractProfilePage.ContractNFTs", "fact_widget_deployments_id": "8e93a86d00b80d502cbb3360596fc120", "inserted_timestamp": "2024-04-26T16:43:06.224Z", "modified_timestamp": "2024-04-26T16:43:06.224Z", "__row_index": 1}