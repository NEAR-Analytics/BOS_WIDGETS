{"tx_hash": "5fyYftmmp7tU4TFJuyMR28gwMw29MfL2iTLPuyQtyHwV", "action_id_social": "Hdnm6DvEvS7BAfXizBC4QrS7uxUBHGVZc24hEt6ZLyYa-0-widget", "block_id": 116101512, "block_timestamp": "2024-04-04T08:12:40.138Z", "signer_id": "bos.genadrop.near", "widget_name": "Mintbase.TablePagination", "source_code": "const onPageChange = props?.onPageChange;\nconst currentPage = props?.currentPage;\nconst itemsPerPage = props?.itemsPerPage;\nconst totalItems = props.totalItems;\nconst hasLabel = props.hasLabel;\n\nconst mode = props.mode || Storage.get(\"mode\");\nconst isDarkModeOn = mode === \"dark\";\n\nconst DOTS = \"...\";\n\nconst range = (start, end) => {\n  const length = end - start + 1;\n\n  return Array.from({ length }, (_, idx) => idx + start);\n};\n\nconst [paginationRange, setPaginationRange] = useState([]);\nconst totalPageCount = Math.ceil(totalItems / itemsPerPage);\n\nuseMemo(() => {\n  const totalPageNumbers = 6;\n\n  if (totalPageNumbers >= totalPageCount) {\n    setPaginationRange(range(1, totalPageCount));\n  }\n\n  if (totalPageCount <= 5) return;\n\n  const leftSiblingIndex = Math.max(currentPage - 1, 1);\n  const rightSiblingIndex = Math.min(currentPage + 1, totalPageCount);\n\n  const shouldShowLeftDots = leftSiblingIndex > 1;\n  const shouldShowRightDots = rightSiblingIndex < totalPageCount - 1;\n\n  const firstPageIndex = 1;\n  const lastPageIndex = totalPageCount;\n\n  if (!shouldShowLeftDots && shouldShowRightDots) {\n    const leftItemCount = 3;\n    const leftRange = range(1, leftItemCount);\n\n    setPaginationRange([...leftRange, DOTS, totalPageCount]);\n  }\n\n  if (shouldShowLeftDots && !shouldShowRightDots) {\n    const rightItemCount = 3;\n    const rightRange = range(\n      totalPageCount - rightItemCount + 1,\n      totalPageCount\n    );\n    setPaginationRange([firstPageIndex, DOTS, ...rightRange]);\n  }\n\n  if (shouldShowLeftDots && shouldShowRightDots) {\n    const middleRange = range(leftSiblingIndex, rightSiblingIndex);\n    setPaginationRange([\n      firstPageIndex,\n      DOTS,\n      ...middleRange,\n      DOTS,\n      lastPageIndex,\n    ]);\n  }\n}, [totalItems, itemsPerPage, currentPage]);\n\nif (paginationRange) {\n  if (currentPage === 0 || paginationRange.length < 1) {\n    return null;\n  }\n}\n\nconst nextPage = () => {\n  if (currentPage === totalPageCount) return;\n  onPageChange(currentPage + 1);\n};\n\nconst previousPage = () => {\n  if (currentPage === 1) return;\n  onPageChange(currentPage - 1);\n};\n\nconst showingCount =\n  props.totalItems > props.itemsPerPage ? props.itemsPerPage : props.totalItems;\n\nconst PaginationRoot = styled.div`\n  display: flex;\n  flex-direction: column;\n  .previous {\n    display: flex;\n    align-items: center;\n    cursor: ${currentPage === 1 ? \"not-allowed\" : \"pointer\"};\n  }\n  .forward {\n    display: flex;\n    align-items: center;\n    cursor: ${currentPage === totalPageCount ? \"not-allowed\" : \"pointer\"};\n  }\n  .list {\n    display: flex;\n    padding-left: 1rem;\n    padding-right: 1rem;\n    justify-content: center;\n    align-items: center;\n    color: #93c5fd;\n    margin-bottom: 0;\n    @media (max-width: 768px) {\n      padding-left: 6rem;\n      padding-right: 6rem;\n      margin-left: 3rem;\n    }\n  }\n  .pagination {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n  }\n  .page-number {\n    flex: 1;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border-radius: 0.25rem;\n    width: 2rem;\n    height: 2rem;\n    border: 1px solid transparent;\n    color: ${isDarkModeOn ? \"#9CA3AF\" : \"#93C5FD\"};\n    background-color: ${isDarkModeOn ? \"#1F2937\" : \"#EFF6FF\"};\n    transition-property: all;\n    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n    transition-duration: 300ms;\n    transition-duration: 500ms;\n    cursor: pointer;\n\n    &:hover {\n      background-color: ${isDarkModeOn ? \"#374151\" : \"#DBEAFE\"};\n    }\n\n    &:focus {\n      outline: none;\n      box-shadow: 0 0 0 2px ${isDarkModeOn ? \"#93C5FD\" : \"#3B82F6\"};\n    }\n    &.active {\n      background-color: ${isDarkModeOn ? \"#B91C1C\" : \"#F87171\"};\n      color: ${isDarkModeOn ? \"#FFF\" : \"#FFF\"};\n      border: 1px solid transparent;\n      box-shadow: none;\n    }\n  }\n  .showingCount {\n    padding-top: 1rem;\n    text-align: center;\n    color: ${isDarkModeOn ? \"#374151\" : \"#eeeee\"};\n  }\n`;\n\n  return (\n    <PaginationRoot>\n      <div className=\"pagination\">\n        <div className=\"previous\" onClick={previousPage}>\n          <Widget\n            src=\"bos.genadrop.near/widget/Mintbase.MbIcon\"\n            props={{\n              color: `${currentPage === 1 ? \"gray-400\" : \"blue-300\"}`,\n              size: \"24px\",\n              name: \"arrow_back_small\",\n            }}\n          />\n        </div>\n        {paginationRange && (\n          <ul className=\"list\">\n            {paginationRange.map((pageNumber, index) => {\n              if (pageNumber === DOTS) {\n                return (\n                  <li\n                    className=\"page-number p-small-90 md:p-med-90\"\n                    onClick={() => {\n                      if (index > 1) {\n                        onPageChange(currentPage + 2);\n                      } else {\n                        onPageChange(currentPage - 2);\n                      }\n                    }}\n                    key={index}\n                  >\n                    {DOTS}\n                  </li>\n                );\n              }\n              return (\n                <li\n                  className={`page-number p-med-90 ${\n                    pageNumber === currentPage ? \"active\" : \"\"\n                  }`}\n                  onClick={() => onPageChange(pageNumber)}\n                  key={index}\n                >\n                  {pageNumber}\n                </li>\n              );\n            })}\n          </ul>\n        )}\n        <div className=\"forward\" onClick={nextPage}>\n          <Widget\n            src=\"bos.genadrop.near/widget/Mintbase.MbIcon\"\n            props={{\n              color: `${\n                currentPage === totalPageCount ? \"gray-400\" : \"blue-300\"\n              }`,\n              size: \"24px\",\n              name: \"arrow_forward_small\",\n            }}\n          />\n        </div>\n      </div>\n      {hasLabel && (\n        <div className=\"showingCount\">\n          Showing {showingCount} of {props.totalItems}\n        </div>\n      )}\n    </PaginationRoot>\n  );\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bos.genadrop.near/widget/Mintbase.TablePagination", "fact_widget_deployments_id": "b1ca94899a1f5f19edcb2257683432db", "inserted_timestamp": "2024-04-04T09:39:22.424Z", "modified_timestamp": "2024-04-04T09:39:22.424Z", "__row_index": 0}