{"tx_hash": "Hjhkdp8pSJQzajuwpipTd93fSheZE1U7vBdGNgvcKdiH", "action_id_social": "HMHSZ8Sm29zxE59CHaafaf8Zz68P2dxjB2RqTVKCE4aR-0-widget", "block_id": 108426211, "block_timestamp": "2023-12-20T19:15:48.425Z", "signer_id": "bos.genadrop.near", "widget_name": "CPlanet.DropsFund.Contest.Card", "source_code": "const redFlag = (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"17\" viewBox=\"0 0 16 17\" fill=\"none\">\n  <rect x=\"0.5\" y=\"1\" width=\"15\" height=\"15\" rx=\"7.5\" fill=\"#FF7777\"/>\n  <rect x=\"0.5\" y=\"1\" width=\"15\" height=\"15\" rx=\"7.5\" stroke=\"#FF7777\"/>\n  <path d=\"M9.69231 13.125C9.69231 14.1589 8.86412 15 7.84615 15C6.82818 15 6 14.1589 6 13.125C6 12.0911 6.82818 11.25 7.84615 11.25C8.86412 11.25 9.69231 12.0911 9.69231 13.125ZM6.21369 3.5906L6.52754 9.9656C6.54228 10.265 6.78556 10.5 7.08069 10.5H8.61162C8.90675 10.5 9.15002 10.265 9.16477 9.9656L9.47862 3.5906C9.49442 3.2693 9.24222 3 8.92546 3H6.76685C6.45009 3 6.19788 3.2693 6.21369 3.5906Z\" fill=\"#FFEEEE\"/>\n</svg>\n)\n\nconst nearGreen = (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"14\"\n    height=\"14\"\n    viewBox=\"0 0 14 14\"\n    fill=\"none\"\n  >\n    <circle\n      cx=\"7\"\n      cy=\"7\"\n      r=\"11.533\"\n      fill=\"#3BD07F\"\n      stroke=\"#3BD07F\"\n      stroke-width=\"0.933953\"\n    />\n  </svg>\n);\n\nconst Root = styled.div`\n  height: 196px;\n  max-width: 932px;\n  display: flex;\n  padding: 16px;\n  background: ${(p) => (p.selected ? \"#E4FFF0\" : p.notOwner ? \"#FFF8F8\" : \"#fff\")};\n  border: 1px solid ${(p) => (p.selected ? \"#3BD07F\" : p.notOwner ? \"#F777\" :  \"#eaeaea\")};\n  @media (max-width: 500px) {\n    width: 90% !important;\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: 20px;\n    flex-wrap: wrap;\n    height: 100%;\n  }\n`;\n\nconst Image = styled.div`\n  width: 144px;\n  height: 144px;\n  flex-shrink: 0;\n  margin-right: 5px;\n  background: rgba(160, 160, 160, 0.2);\n  margin-right: 20px;\n  img {\n    width: 100%;\n    border-radius: 6px;\n    height: 100%;\n    object-fit: cover;\n  }\n  @media (max-width: 500px) {\n    width: 250px;\n    height: 250px;\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: 20px;\n  }\n`;\n\nconst Header = styled.div`  \n  .headerName {\n    display: flex;\n    align-items: center;\n  }\n  .dots {\n    width: 7px;\n    height: 7px;\n    margin-bottom: 13px;\n    margin-right: 5px;\n    margin-left: 5px;\n    background: #b0b0b0;\n    border-radius: 50%;\n  }\n  h1 {\n    color: #000;\n    leading-trim: both;\n    text-edge: cap;\n    font-family: Helvetica Neue;\n    font-size: 24px;\n    font-style: normal;\n    font-weight: 500;\n    line-height: normal;\n  }\n  p {\n    color: #b0b0b0;\n    font-family: Helvetica Neue;\n    display: flex;\n    align-item: center;\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 500;\n    line-height: normal\n    span {\n      color: ${(p) => (p.selected ? \"#3BD07F\" : \"#b0b0b0\")};\n      font-weight: ${(p) => (p.selected ? \"700\" : \"500\")};\n    }\n  }\n  img {\n    width: 16px !important;\n    height: 16px !important;\n    margin: 5px 3px 0 5px;\n    object-fit: cover;\n    border-radius: 50%;\n  }\n`;\n\nconst NoProfile = styled.div`\n  margin-top: 5px;\n  margin: 5px 3px 0 5px;\n  width: 16px;\n  height: 16px;\n  border-radius: 50%;\n  background: #808080;\n`\n\nconst CardBody = styled.div`\n  display: flex;\n  width: 70%;\n  .desc {\n    min-width: 600px;\n  }\n  p {\n    overflow: hidden;\n    color: #b0b0b0;\n    font-family: Helvetica Neue;\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 500;\n    line-height: 148%; /* 23.68px */\n  }\n  @media (max-width: 500px) {\n    .desc {\n      min-width: 100%;\n    }\n  }\n`;\nconst StartedButton = styled.div`\n  margin-top: 30px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  .bannedUser {\n    display: flex;\n    margin-top: 5px;\n    align-items: center: !important;\n    svg {\n      margin-right: 7px;\n      width: 25px;\n    }\n    p {\n      color: #F77;\n      leading-trim: both;\n      text-edge: cap;\n      font-family: Helvetica Neue;\n      font-size: 12px;\n      font-style: normal;\n      font-weight: 500;\n      line-height: normal;\n    }\n\n  }\n  .vote {\n    gap: 8px;\n    padding: 12px 30px;\n    border-radius: 32px;\n    border: 0.357px solid #000;\n    background: #000;\n    color: #fff;\n    text-align: center;\n    font-family: Helvetica Neue;\n    font-size: 16px;\n    font-weight: 500;\n    :disabled {\n      background: #b0b0b0;\n      cursor: not-allowed;\n    }\n  }\n  .banned {\n    gap: 8px;\n    padding: 12px 30px;\n    border-radius: 32px;\n    border: 0.357px solid #F77;\n    background: #F77;\n    color: #fff;\n    text-align: center;\n\n    font-family: Helvetica Neue;\n    font-size: 16px;\n    font-weight: 500;\n    cursor: not-allowed;\n  }\n  .won {\n    display: flex;\n    width: max-content;\n    padding: 8px 20px;\n    border-radius: 32px;\n    border: 1px solid #3bd07f;\n    background: #e4fff0;\n    gap: 8px;\n    color: #3bd07f;\n    font-family: Helvetica Neue;\n    font-size: 16px;\n    margin-right: 40px;\n    font-weight: 700;\n  }\n  .disabled {\n    height: 48px;\n    gap: 8px;\n    width: max-content;\n    color: #b0b0b0;\n    font-size: 12px;\n    font-style: normal;\n    font-weight: 500;\n    border: 2px solid #b0b0b0;\n    background: none;\n    border-radius: 32px;\n    text-transform: uppercase;\n    font-family: Helvetica Neue;\n    margin-bottom: 40px;\n  }\n  .disabled:hover {\n    background: none;\n    border-color: #b0b0b0;\n    color: #b0b0b0;\n  }\n  @media (max-width: 500px) {\n    display: block;\n  }\n`;\n\nconst handleVoteClick = () => {\n  Near.call(\n    \"fund-v1.genadrop.near\",\n    \"vote\",\n    {\n      submission_owner: props.owner,\n      contest_id: Number(props.contestId),\n    },\n    \"300000000000000\",\n    \"10000000000000000000000\"\n  );\n};\n\nconst [isAccountConnected, setIsAccountConnected] = useState(!context.accountId)\nconst [nftData, setNftData] = useState({})\n\nconst formatTime = (time) => {\n  const timestamp = time * 1000; // Convert seconds to milliseconds\n  const date = new Date(timestamp);\n\n  // Format the date to \"Month day, year\" (e.g., \"Oct 31, 2023\")\n  const options = { month: \"short\", day: \"numeric\", year: \"numeric\" };\n  const formattedDate = date.toLocaleDateString(\"en-US\", options);\n\n  return formattedDate;\n};\n\nconst winnerDetails = Near.view(\n  \"fund-v1.genadrop.near\",\n  \"get_winner_payout_info\",\n  {\n    subscribe: true,\n    contest_id: Number(props.contestId),\n    winner: props.owner,\n  }\n);\n\nconst totalUsersVoted = Near.view(\n  \"fund-v1.genadrop.near\",\n  \"get_all_user_voted\",\n  {\n    subscribe: true,\n    contest_id: Number(props.contestId),\n  }\n);\n\nconst handleOnMouseEnter = () => {\n  setIsAccountConnected(true)\n};\nconst handleOnMouseLeave = () => {\n  setIsAccountConnected(false)\n};\n\n\nconst profileImage = Social.getr(`${props?.owner}/profile`)\n\nconst overlay = (\n  <div\n    className='border m-3 p-3 rounded-4 bg-white shadow'\n    style={{ maxWidth: \"24em\", zIndex: 1070 }}\n    onMouseEnter={handleOnMouseEnter}\n    onMouseLeave={handleOnMouseLeave}\n  >\n    Please connect to a Near Wallet to vote\n  </div>\n);\n\nfunction fetchNFTDetails() {\n  asyncFetch(\"https://graph.mintbase.xyz/mainnet\", {\n    method: \"POST\",\n    headers: {\n      \"mb-api-key\": \"omni-site\",\n      \"Content-Type\": \"application/json\",\n      \"x-hasura-role\": \"anonymous\",\n    },\n    body: JSON.stringify({\n      query: `\n      query MyQuery {\n        mb_views_nft_tokens(\n          where: {nft_contract_id: {_eq: \"${props?.content?.contract_id}\"}, token_id: {_eq: \"${props?.content?.token_id}\"}}\n          limit: 30\n          order_by: {last_transfer_timestamp: desc}\n        ) {\n          nft_contract_id\n          title\n          description\n          media\n          owner\n          last_transfer_receipt_id\n        }\n      }\n      \n      `,\n    }),\n  }).then((data) => {\n    if(data.body.data?.mb_views_nft_tokens?.length) {\n      setNftData(data.body.data?.mb_views_nft_tokens[0])\n    }\n  });\n}\n\nfetchNFTDetails()\n\nfunction makeDescriptionShorter(desc) {\n  if (desc.length > 200) {\n    return desc.slice(0, 200) + \"...\";\n  }\n  return desc;\n}\n\n\n\nreturn (\n  <Root\n    selected={\n      props.winners ? props.winners?.some((data) => data === props.owner) : \"\"\n    }\n    notOwner={props?.owner !== nftData?.owner ? true: false}\n  >\n    <Image>\n      <img src={props?.content?.image_url} alt=\"\" />\n    </Image>\n    <div className=\"cardContent\">\n      <Header\n        selected={\n          props.winners\n            ? props.winners?.some((data) => data === props.owner)\n            : \"\"\n        }\n      >\n        <h1>{props?.content?.title}</h1>\n        <div className=\"headerName\">\n        <a\n         href={`#/bos.genadrop.near/widget/GenaDrop.Profile.Main?accountId=${props.owner}`}\n        >\n        <p>\n          NFT by {profileImage?.image?.ipfs_cid ? <img src={`https://ipfs.near.social/ipfs/${profileImage?.image?.ipfs_cid}`} /> : <NoProfile />} <span>{props?.owner}</span>\n        </p>\n        </a>\n        <span className=\"dots\"></span>\n        <p>\n          {formatTime(props?.content?.timestamp)}\n        </p>\n        </div>\n      </Header>\n      <CardBody>\n        <div className=\"desc\">\n          <p>{makeDescriptionShorter(nftData?.description ?? \"\")}</p>\n        </div>\n      </CardBody>\n    </div>\n    <StartedButton>\n      {!props.isClosed && !props.isOpen ? (\n        <OverlayTrigger \n        show={isAccountConnected || !context.accountId} \n        trigger={['hover']} \n        delay={{ show: 250, hide: 300 }}\n        overlay={overlay}\n        placement='auto'\n       \n        >\n        <button disabled={isAccountConnected || !context.accountId || props?.owner !== nftData?.owner} onClick={handleVoteClick} \n        className={props?.owner !== nftData?.owner ? \"banned\": \"vote\"}>\n          {props?.owner !== nftData?.owner ? \"Banned\": \"Vote\"}\n        </button>\n        </OverlayTrigger>\n      ) : props.winners?.some((data) => data === props.owner) ? (\n        <button className=\"won\">\n          <img\n            src=\"https://ipfs.near.social/ipfs/bafkreiawfm4tx4xxmqyzify4lmp45mfbqqxn4jkfwqdkg3zzkvlek5fjoi\"\n            alt=\"\"\n          />\n          {winnerDetails?.amount} Won\n        </button>\n      ) : (\n        <button className=\"disabled\">\n          {props.isOpen ? \"Not Started\" : \"Contest Ended\"}\n        </button>\n      )}\n      {props?.owner !== nftData?.owner ? (\n        <div className=\"bannedUser\">\n          {redFlag}\n           <p className=\"\">Owner no longer owns the NFT</p>\n        </div>\n      ): \"\"}\n       <p>{props?.content?.votes} Vote(s)</p>\n    </StartedButton>\n  </Root>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bos.genadrop.near/widget/CPlanet.DropsFund.Contest.Card", "fact_widget_deployments_id": "41932fb31f47916be2c515cf880bd310", "inserted_timestamp": "2023-12-20T21:24:44.207Z", "modified_timestamp": "2023-12-20T22:24:35.560Z", "__row_index": 2}