{"tx_hash": "DfxdWCtL9VJX1Arr4fTbD5eanA2iNKzzunGKxgLbEYj7", "action_id_social": "H397UEciVfstQKERjHgzwVGsCD8C13sZnXkx1L5rsFCS-0-widget", "block_id": 109391182, "block_timestamp": "2024-01-02T08:54:09.550Z", "signer_id": "bos.genadrop.near", "widget_name": "CPlanet.DropsFund.Explore.Card", "source_code": "const checkSvg = (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"16\"\n    height=\"12\"\n    viewBox=\"0 0 16 12\"\n    fill=\"none\"\n  >\n    <rect width=\"16\" height=\"12\" rx=\"6\" fill=\"#B0B0B0\" />\n    <path\n      d=\"M5 6.19231L7 8.5L11 3.5\"\n      stroke=\"white\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    />\n  </svg>\n);\n\nconst CardRoot = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  border-radius: 4px;\n  border: 1px solid #efefef;\n  width: 392px;\n  height: 250px;\n  gap: 12px;\n  background: #fff;\n  box-shadow: 0px 0px 24px 0px rgba(0, 0, 0, 0.05);\n  .card-title {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 8px 16px;\n    width: 100%;\n    a {\n      color: #b0b0b0;\n    }\n    h1 {\n      color: #000;\n      text-align: flex-start;\n      font-family: Helvetica Neue;\n      font-size: 24px;\n      font-style: normal;\n      margin-bottom: 0;\n      font-weight: 700;\n      line-height: normal;\n      @media (max-width: 500px) {\n        font-size: 20px !important;\n      }\n    }\n    .not {\n      color: white;\n      text-align: center;\n      font-family: Helvetica Neue;\n      font-size: 8px;\n      text-transform: uppercase;\n      font-style: normal;\n      font-weight: 700;\n      line-height: 150%; /* 12px */\n      border-radius: 50px;\n      border: 1px solid #b0b0b0;\n      background: #b0b0b0;\n      box-shadow: 0px 0px 4px 0px rgba(0, 0, 0, 0);\n      display: inline-flex;\n      padding: 2px 10px;\n      justify-content: center;\n      align-items: center;\n      gap: 8px;\n    }\n    .voting {\n      color: #3bd07f;\n      text-align: center;\n      font-family: Helvetica Neue;\n      font-size: 8px;\n      text-transform: uppercase;\n      font-style: normal;\n      font-weight: 700;\n      line-height: 150%; /* 12px */\n      border-radius: 50px;\n      border: 1px solid #3bd07f;\n      background: #e4fff0;\n      box-shadow: 0px 0px 4px 0px rgba(0, 0, 0, 0);\n      display: inline-flex;\n      padding: 2px 10px;\n      justify-content: center;\n      align-items: center;\n      gap: 8px;\n    }\n  }\n  .description {\n    padding: 0 15px;\n    height: 100px;\n    p {\n      color: #808080;\n      font-family: Helvetica Neue;\n      font-size: 12px;\n      font-style: normal;\n      margin: 0;\n      font-weight: 500;\n      line-height: 132.423%; /* 15.891px */\n    }\n  }\n  .card-footer {\n    width: 100%;\n    border-top: 1px solid #efefef;\n    display: flex;\n    margin-top: 20px;\n    align-items: center;\n    justify-content: space-between;\n    .one-sec {\n      padding: 0 12px;\n      .prize {\n        color: #b0b0b0;\n        font-family: Helvetica Neue;\n        font-size: 8px;\n        font-style: normal;\n        font-weight: 500;\n        line-height: normal;\n        text-transform: uppercase;\n      }\n      .amount {\n        display: flex;\n        align-items: flex-end;\n        img {\n          height: 18px;\n          width: 18px;\n          margin-right: 3px;\n        }\n        p {\n          color: #000;\n          font-family: Helvetica Neue;\n          font-size: 16px;\n          font-style: normal;\n          font-weight: 700;\n          margin: 0;\n          line-height: normal;\n          text-transform: uppercase;\n        }\n        span {\n          color: #000;\n          font-family: Helvetica Neue;\n          font-size: 10px;\n          font-style: normal;\n          font-weight: 400;\n          padding-left: 5px;\n          line-height: normal;\n          text-transform: uppercase;\n        }\n      }\n    }\n  }\n  .card-button {\n    width: 100%;\n    background: #000;\n    color: #fff;\n    height: 32px;\n    text-align: center;\n    color: #fff;\n    padding-top: 5px;\n    text-align: center;\n    font-family: Helvetica Neue;\n    font-size: 12px;\n    border: none;\n    font-style: normal;\n    font-weight: 500;\n    line-height: 150%; /* 18px */\n    text-decoration: none;\n    color: white;\n  }\n`;\n\nconst data = props?.data;\nconst [isSubmissionTime, setIsSubmissionTime] = useState(null);\nconst [isVotingTime, setIsVotingTime] = useState(null);\n\nconst convertTime = (time) => {\n  const timestamp = time * 1000; // Convert seconds to milliseconds\n  const date = new Date(timestamp);\n\n  // Get the current date\n  const currentDate = new Date();\n\n  // Calculate the difference in milliseconds\n  const differenceMilliseconds = date - currentDate;\n\n  // Calculate the difference in days\n  const differenceDays = Math.floor(\n    differenceMilliseconds / (24 * 60 * 60 * 1000)\n  );\n\n  if (differenceDays < 0) {\n    return <p>0</p>;\n  }\n\n  // Check if it's the present day\n  const differenceHours = Math.floor(differenceMilliseconds / (60 * 60 * 1000));\n\n  if (differenceDays === 0) {\n    // Calculate the difference in hours\n    return (\n      <>\n        <p>{differenceHours}</p> <span>HOURS</span>\n      </>\n    );\n  } else {\n    return (\n      <>\n        <p>{differenceDays}</p>\n        <span>DAY{differenceDays !== 1 ? \"S\" : \"\"}</span>\n      </>\n    );\n  }\n};\n\nuseEffect(() => {\n  const currentTimestamp = Date.now() / 1000;\n\n  setIsSubmissionTime(false);\n  if (data?.submission_end_time < currentTimestamp) {\n    // Submission time is over\n    setIsVotingTime(data?.voting_end_time < currentTimestamp);\n  } else {\n    // Calculate submission time remaining\n    const submissionTimeRemaining = convertTime(data?.submission_end_time);\n    setIsSubmissionTime(submissionTimeRemaining <= 0);\n    setIsVotingTime(false);\n  }\n}, [data]);\n\nfunction makeAccountIdShorter(accountId) {\n  if (accountId.length > 20) {\n    return accountId.slice(0, 17) + \"...\";\n  }\n  return accountId;\n}\n\nconst getUsdValue = (price) => {\n  const res = fetch(\n    `https://api.coingecko.com/api/v3/simple/price?ids=near&vs_currencies=usd`\n  );\n  if (res.ok) {\n    const multiplyBy = Object.values(res?.body)[0]?.usd;\n    const value = multiplyBy * price.toFixed(2);\n    return value.toFixed(4) !== \"NaN\" ? `$${value.toFixed(2)}` : 0;\n  }\n};\n\nreturn (\n  <CardRoot>\n    <div className=\"card-title\">\n      <div className=\"name\">\n      <h1>{makeAccountIdShorter(data?.title) ?? \"Lorem Ipsum Contest\"}</h1>\n      <a href={`#/bos.genadrop.near/widget/CPlanet.DAO.Index?daoId=${props?.data?.dao_id}`}>{props?.data?.dao_id}{checkSvg}</a>\n      </div>\n      <p\n        className={\n          !props?.isVotingEnded\n            ? \"not\"\n            : data?.winners?.length === 0\n            ? \"voting\"\n            : \"not\"\n        }\n      >\n        {props.isSubmissionOpen\n          ? \"Submission Open\"\n          : !props?.isVotingEnded\n          ? \"Voting Closed\"\n          : \"Voting Open\"}\n      </p>\n    </div>\n    <div className=\"description\">\n      <p>{props?.data?.description?.substring(0, 120) ?? \"No description\"}</p>\n    </div>\n    <div className=\"card-footer\">\n      <div className=\"one-sec\">\n        <span className=\"prize\">Prize per winner</span>\n        <div className=\"amount\">\n        <img\n          src=\"https://ipfs.near.social/ipfs/bafkreierjvmroeb6tnfu3ckrfmet7wpx7k3ubjnc6gcdzauwqkxobnu57e\"\n          alt=\"\"\n              />\n          <p>{props?.data?.prize}</p>\n          <span>{getUsdValue(props?.data?.prize)}</span>\n        </div>\n      </div>\n      <div className=\"one-sec\">\n        <span className=\"prize\">Winners</span>\n        <div className=\"amount\">\n          <p>{data?.winners?.length ?? 0}</p>\n        </div>\n      </div>\n      <div className=\"one-sec\">\n        <span className=\"prize\">\n          {props.isSubmissionOpen\n            ? \"Submit Before\"\n            : !props.isVotingEnded\n            ? \"Voting Ended\"\n            : \"Voting Ends In\"}\n        </span>\n        <div className=\"amount\">\n          {props.isSubmissionOpen\n            ? convertTime(data?.submission_end_time)\n            : convertTime(data?.voting_end_time)}\n        </div>\n      </div>\n      <div className=\"one-sec\">\n        <span className=\"prize\">Entries</span>\n        <div className=\"amount\">\n          <p>{data?.submissions ?? 0}</p>\n        </div>\n      </div>\n    </div>\n    <a\n      onClick={() => props.update({ tab: \"singleContest\" })}\n      href={\n        props.isGateway\n          ? `#/bos.genadrop.near/widget/CPlanet.DropsFund.Contest.Single?&contestId=${props.id}`\n          : `#/bos.genadrop.near/widget/CPlanet.Index?tab=singleContest&contestId=${props.id}`\n      }\n      className=\"card-button\"\n    >\n      View Contest\n    </a>\n  </CardRoot>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bos.genadrop.near/widget/CPlanet.DropsFund.Explore.Card", "fact_widget_deployments_id": "3c4032cfac21c9687336e3024677f2f0", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 6}