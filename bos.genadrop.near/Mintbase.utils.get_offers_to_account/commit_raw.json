{"tx_hash": "3t96h1uYoHMgn9jc9n47EQtz6gnVTfEGqNifEKEfXyoR", "action_id_social": "CBzRbo8PRnMDbtczsKnmXbVqYW4FD4G4VnDGjaUKJT8z-0-widget", "block_id": 117657323, "block_timestamp": "2024-04-26T10:09:01.207Z", "signer_id": "bos.genadrop.near", "widget_name": "Mintbase.utils.get_offers_to_account", "source_code": "function fetchGraphQL(operationsDoc, operationName, variables) {\n  return asyncFetch(\n    `https://graph.mintbase.xyz/${\n      variables.account && variables.account.endsWith(\".testnet\")\n        ? \"testnet\"\n        : \"mainnet\"\n    }`,\n    {\n      method: \"POST\",\n      headers: {\n        \"mb-api-key\": \"anon\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        query: operationsDoc,\n        variables: variables,\n        operationName: operationName,\n      }),\n    }\n  ).then((result) => result.body);\n}\nconst operationsDoc = `\n    query GetOffersToAccount($account: String!, $limit: Int!, $offset: Int!) {\n      mb_views_auctions_with_offer(\n        where: {listed_by: {_eq: $account}, offer_id: {_is_null: false}}\n        limit: $limit\n        offset: $offset\n        order_by: {offered_at: desc}\n      ) {\n        offered_by\n        offer_price\n        offered_at\n        receipt_id: offer_receipt_id\n        nft_contract_id\n        expires_at: offer_expires_at\n        token_id\n        offer_id\n        currency\n        unlisted_at\n        invalidated_at: listing_invalidated_at\n        withdrawn_at: offer_withdrawn_at\n        accepted_at: offer_accepted_at\n        listed_by\n        metadata_id\n        media\n        base_uri\n        title\n        __typename\n      }\n      mb_views_auctions_with_offer_aggregate(\n        where: {listed_by: {_eq: $account}, offer_id: {_is_null: false}}\n      ) {\n        aggregate {\n          count\n          __typename\n        }\n        __typename\n      }\n    }\n  `;\nfunction getOffersToAccount({ account, limit, offset }) {\n  return fetchGraphQL(operationsDoc, \"GetOffersToAccount\", {\n    account: account,\n    limit: limit ?? 100,\n    offset: offset ?? 0,\n  });\n}\nreturn { getOffersToAccount };\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bos.genadrop.near/widget/Mintbase.utils.get_offers_to_account", "fact_widget_deployments_id": "5675b3cdb908d4f10737bd9db55c540f", "inserted_timestamp": "2024-04-26T11:43:20.585Z", "modified_timestamp": "2024-04-26T11:43:20.585Z", "__row_index": 0}