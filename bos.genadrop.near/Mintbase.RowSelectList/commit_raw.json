{"tx_hash": "Gkh2L5HDESqijUWXQyFy3spZzyR7MpcKZ6tKwg2v9qW1", "action_id_social": "G5iqrzLGMt8G4uqSEzx34i2P6dD2Yjpr7Kj1eqvZJC7B-0-widget", "block_id": 112887946, "block_timestamp": "2024-02-15T15:00:20.696Z", "signer_id": "bos.genadrop.near", "widget_name": "Mintbase.RowSelectList", "source_code": "const elements = props.elements;\nconst deleteRow = props.deleteRow;\nconst addMinter = props.addMinter;\nconst removeMinters = props.removeMinters;\n\nconst mode = props.mode || Storage.get(\"mode\");\nconst isDarkModeOn = mode === \"dark\";\n\nconst RowRoot = styled.div`\n  overflow-y: scroll;\n  padding: 0.5rem;\n  width: 100%;\n  .selectedElement {\n    background-color: rgba(66, 153, 225, 0.15);\n  }\n  .disabledCheckbox {\n    display: flex;\n    gap: 1rem;\n    align-items: center;\n  }\n  .footerSection {\n    display: flex;\n    padding-top: 2rem;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    border-top-width: 1px;\n    text-align: center;\n    border-color: ${isDarkModeOn ? \"#374151\" : \"#F3F4F6\"};\n  }\n  @media (max-width: 1024px) {\n    position: relative;\n    flex-direction: row;\n  }\n`;\n\nconst MbTable = styled.div`\n  background: ${isDarkModeOn ? \"var(--gray-850)\" : \"white\"};\n  table {\n    width: 100%;\n  }\n  thead {\n    border-bottom-width: 2px;\n    border-color: #e5e7eb;\n    text-align: left;\n    color: #374151;\n    width: 100%;\n  }\n  td {\n    padding-top: 1rem;\n    padding-bottom: 1rem;\n    padding-left: 3rem;\n  }\n  tr {\n    border-bottom-width: 1px;\n    border-color: ${isDarkModeOn ? \"#1F2937\" : \"#E5E7EB\"};\n  }\n  td {\n    padding-top: 1rem;\n    padding-bottom: 1rem;\n    padding-left: 3rem;\n    padding-right: 3rem;\n    color: ${isDarkModeOn ? \"#FFF\" : \"#000\"};\n  }\n  tbody {\n    color: ${isDarkModeOn ? \"#FFF\" : \"#000\"};\n    .animate-pulse {\n      animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;\n      @keyframes pulse {\n        0%,\n        100% {\n          opacity: 1;\n        }\n        50% {\n          opacity: 0.5;\n        }\n      }\n    }\n    .bodyContent {\n      border-radius: 0.25rem;\n      width: 9rem;\n      height: 1rem;\n      background-color: #6b7280;\n      @media (max-width: 950px) {\n        width: auto;\n      }\n    }\n  }\n`;\n\nconst Footer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  gap: 24px;\n  justify-items: center;\n  width: 100%;\n  padding: 0 24px 24px 24px;\n\n  @media (min-width: 768px) {\n    grid-template-columns: repeat(2, 1fr);\n    justify-content: space-between;\n  }\n  .leftSection {\n    display: flex;\n    flex-wrap: wrap;\n    gap: 1rem;\n    text-align: left;\n    width: 100%;\n    @media (max-width: 500px) {\n      justify-content: center;\n    }\n    .box {\n      padding: 0.5rem;\n      border-radius: 0.25rem;\n      min-width: 290px;\n      background-color: ${!isDarkModeOn ? \"#F9FAFB\" : \"#272a3a\"};\n      span {\n        color: ${!isDarkModeOn ? \"#374151\" : \"#D1D5DB\"};\n      }\n      p {\n        color: ${!isDarkModeOn ? \"#374151\" : \"#D1D5DB\"};\n      }\n    }\n  }\n  .rightSection {\n    display: flex;\n    gap: 6rem;\n    justify-content: center;\n    align-items: center;\n\n    @media (min-width: 768px) {\n      justify-content: flex-end;\n    }\n  }\n`;\n\nconst [checkedList, setCheckedList] = useState([]);\n\nconst isElementSelected = (id) => {\n  return checkedList.includes(id);\n};\n\nreturn (\n  <RowRoot>\n    <MbTable>\n      <table>\n        <thead>\n          <tr>\n            <td>Account</td>\n          </tr>\n        </thead>\n        <tbody>\n          {elements &&\n            elements.map((element) => {\n              const { id, content, isDisabled } = element;\n              return (\n                <tr\n                  key={id}\n                  className={`${\n                    isElementSelected(id) ? \"selectedElement\" : \"\"\n                  }`}\n                >\n                  <td>\n                    <div className=\"disabledCheckbox\">\n                      {!isDisabled && (\n                        <Widget\n                          src=\"bos.genadrop.near/widget/Mintbase.MbCheckbox\"\n                          props={{\n                            checked: isElementSelected(id),\n                            onChange: (e) => {\n                              if (isElementSelected(id)) {\n                                setCheckedList(\n                                  checkedList.filter((elm) => elm !== id)\n                                );\n                                return;\n                              }\n                              setCheckedList([...checkedList, id]);\n                            },\n                          }}\n                        />\n                      )}\n\n                      {content}\n                    </div>\n                  </td>\n                  {isDisabled ? (\n                    <></>\n                  ) : (\n                    checkedList.length < 1 && (\n                      <td>\n                        <div className=\"flex justify-end w-auto\">\n                          <span\n                            className=\"cursor-pointer\"\n                            onClick={() => deleteRow(id)}\n                          >\n                            <Widget\n                              src=\"bos.genadrop.near/widget/Mintbase.MbIcon\"\n                              props={{\n                                color: `${\n                                  isDarkModeOn ? \"blue-300\" : \"blue-100\"\n                                }`,\n                                size: \"16px\",\n                                name: \"delete\",\n                              }}\n                            />\n                          </span>\n                        </div>\n                      </td>\n                    )\n                  )}\n                </tr>\n              );\n            })}\n        </tbody>\n      </table>\n    </MbTable>\n    <div className=\"footerSection\">\n      <Footer>\n        <div className=\"leftSection\">\n          <div className=\"box\">\n            <span>Accounts</span>\n            <p>{elements?.length}</p>\n          </div>\n          {checkedList.length > 0 && (\n            <div className=\"box\">\n              <span>Selected Accounts</span>\n              <p>{checkedList?.length}</p>\n            </div>\n          )}\n        </div>\n        <div className=\"rightSection\">\n          {checkedList.length > 0 && (\n            <Widget\n              src=\"bos.genadrop.near/widget/Mintbase.MbAction\"\n              props={{\n                children: <div>Clear Selection</div>,\n                onClick: () => setCheckedList([]),\n              }}\n            />\n          )}\n\n          {checkedList.length > 0 ? (\n            <Widget\n              src=\"bos.genadrop.near/widgetMintbase//MbButton\"\n              props={{\n                label: \"Remove\",\n                state: \"caution\",\n                btnType: \"primary\",\n                // dropDownItems: props.dropDownItems,\n                onClick: () => props.removeMinters(checkedList),\n              }}\n            />\n          ) : (\n            <Widget\n              src=\"bos.genadrop.near/widget/Mintbase.MbButton\"\n              props={{\n                label: \"Add Minters\",\n                state: \"active\",\n                btnType: \"primary\",\n                // dropDownItems: props.dropDownItems,\n                onClick: () => props.addMinter(),\n              }}\n            />\n          )}\n        </div>\n      </Footer>\n    </div>\n  </RowRoot>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bos.genadrop.near/widget/Mintbase.RowSelectList", "fact_widget_deployments_id": "1f55ca52600d948beea62224b0e25b09", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}