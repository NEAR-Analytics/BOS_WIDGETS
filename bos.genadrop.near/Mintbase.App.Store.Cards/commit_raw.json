{"tx_hash": "A9gUdjtqYGgAx7mzZMrCWfHzoX7mWABH7mLFwZhiUyQA", "action_id_social": "A2coecr48byEFfzhpnpacByM6NU3Sa1N9EXqBwYuPFTr-0-widget", "block_id": 116102608, "block_timestamp": "2024-04-04T08:36:32.081Z", "signer_id": "bos.genadrop.near", "widget_name": "Mintbase.App.Store.Cards", "source_code": "const Root = styled.div`\n  display: flex;\n  flex-flow: column nowrap;\n  width: 100%;\n  .count {\n    text-transform: uppercase;\n    font-weight: 400;\n    font-size: 16px;\n    color: ${isDarkModeOn ? \"#B3B5BD\" : \"#525c76\"};\n  }\n  .pagination_container {\n    width: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    align-content: center;\n  }\n`;\n\nconst MainCardsGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(400px, 1fr));\n  grid-gap: 20px;\n  border-radius: 0.7em;\n  width: 100%;\n  margin-top: 1em;\n`;\n\nconst { isDarkModeOn } = props;\n\nconst [data, setData] = useState(null);\n\nconst fetchMyStores = (id) => {\n  const data = asyncFetch(\"https://graph.mintbase.xyz\", {\n    method: \"POST\",\n    headers: {\n      \"mb-api-key\": \"anon\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      query: `query GetStoreDataById @cached {\n        count: mb_store_minters_aggregate(where: {minter_id: {_eq: \"${id}\"}}) {\n          aggregate {\n            count\n          }\n        }\n        count2: nft_contracts_aggregate(where: {owner_id: {_eq: \"${id}\"}}) {\n          aggregate {\n            count\n          }\n        }\n        stores: mb_store_minters(where: {minter_id: {_eq: \"${id}\"}}) {\n          owner: minter_id\n          id: nft_contract_id\n          nft_contract{\n            name\n            icon\n          }\n        }\n        stores2: nft_contracts(where: {owner_id: {_eq: \"${id}\"}}) {\n          id\n          owner: owner_id\n        }\n      }\n  `,\n    }),\n  });\n  return data;\n};\n\nuseEffect(() => {\n  fetchMyStores(props.accountId || \"nate.near\").then((data) => {\n    setData(data);\n  });\n  console.log(\"data in stores: \", data);\n}, []);\nconst stores = data?.body?.data?.stores;\nif (!stores) return \"Loading ...\";\n\nconst countNFTs = data?.body?.data?.count?.aggregate?.count || 0;\n\nconst s = countNFTs > 1 ? \"s\" : \"\";\n\nreturn (\n  <Root className=\"mx-24 md:mx-64\">\n    <div className=\"count\">{`${countNFTs} Result${s}`}</div>\n    <MainCardsGrid>\n      {stores.length ? (\n        stores.map((store) => (\n          <Widget\n            src={`bos.genadrop.near/widget/Mintbase.App.Store.Card`}\n            props={{\n              isDarkModeOn,\n              contract: store,\n            }}\n          />\n        ))\n      ) : (\n        <h5>This user does not own a contract yet.</h5>\n      )}\n    </MainCardsGrid>\n  </Root>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bos.genadrop.near/widget/Mintbase.App.Store.Cards", "fact_widget_deployments_id": "033ae62b998c78ab82381f36f2757b74", "inserted_timestamp": "2024-04-04T10:37:54.677Z", "modified_timestamp": "2024-04-04T10:37:54.677Z", "__row_index": 1}