{"tx_hash": "Bsb4tzb1Ur7WDAxBgU12ezus3Et43w9c2WJnVTu7uJSV", "action_id_social": "DSNUTGHDabgbELHW3xgwxTq5hx9LYJdCp4oepU5rTNqA-0-widget", "block_id": 117544274, "block_timestamp": "2024-04-24T20:37:16.014Z", "signer_id": "bos.genadrop.near", "widget_name": "DropFlow.MetadataEditor", "source_code": "const initialMetadata = props.initialMetadata ?? {};\nconst onChange = props.onChange;\nconst options = props.options;\nState.init({\n  initialMetadata,\n  metadata: initialMetadata,\n  reportedMetadata: initialMetadata,\n  linktree: initialMetadata.linktree ?? {},\n  image: initialMetadata.image,\n  backgroundImage: initialMetadata.backgroundImage,\n  screenshots: initialMetadata.screenshots ?? {},\n  disabled: false,\n});\nconst metadata = {\n  name: options.name ? state.metadata.name : undefined,\n  description: options.name ? state.metadata.description : undefined,\n  linktree:\n    options.linktree && Object.keys(state.linktree).length > 0\n      ? state.linktree\n      : undefined,\n  image:\n    options.image && state.image && Object.keys(state.image).length > 0\n      ? state.image\n      : undefined,\n  backgroundImage:\n    options.backgroundImage &&\n    state.backgroundImage &&\n    Object.keys(state.backgroundImage).length > 0\n      ? state.backgroundImage\n      : undefined,\n  tags: options.tags ? state.metadata.tags : undefined,\n  feed: options.feed ? state.metadata.feed : undefined,\n  screenshots: options.screenshots ? state.metadata.screenshots : undefined,\n};\nif (\n  onChange &&\n  JSON.stringify(state.reportedMetadata) !== JSON.stringify(metadata)\n) {\n  State.update({\n    reportedMetadata: metadata,\n  });\n  onChange(metadata);\n}\nconst debounce = (func, wait) => {\n  const pause = wait || 350;\n  let timeout;\n  return (args) => {\n    const later = () => {\n      clearTimeout(timeout);\n      func(args);\n    };\n    clearTimeout(timeout);\n    timeout = setTimeout(later, pause);\n  };\n};\nconst onNameChange = debounce((e) => {\n  State.update({\n    metadata: {\n      ...state.metadata,\n      name: e.target.value,\n    },\n  });\n});\nconst onDescriptionChange = debounce((e) => {\n  State.update({\n    metadata: {\n      ...state.metadata,\n      description: e.target.value,\n    },\n  });\n});\nconst onLinkTreeChange = debounce((e) => {\n  State.update({\n    linktree: {\n      ...state.linktree,\n      [e.target.id]: e.target.value,\n    },\n  });\n});\nfunction onChangeDisabled() {\n  State.update({\n    disabled: !state.disabled,\n  });\n  console.log(state.disabled);\n}\nreturn (\n  <>\n    {options.name && (\n      <div className=\"mb-2\">\n        <h4>{options.name.label ?? \"Name\"}</h4>\n        <input\n          type=\"text\"\n          defaultValue={state.metadata.name}\n          onChange={onNameChange}\n        />\n      </div>\n    )}\n    {options.image && (\n      <div className=\"mb-2\">\n        <h4>{options.image.label ?? \"Image\"}</h4>\n        <Widget\n          src=\"jgodwill.near/widget/ImageEditorTabs\"\n          props={{\n            image: state.image,\n            onChange: (image) => State.update({ image }),\n          }}\n        />\n      </div>\n    )}\n    {options.backgroundImage && (\n      <div className=\"mb-2\">\n        <h4>{options.backgroundImage.label ?? \"Background image\"}</h4>\n        <Widget\n          src=\"jgodwill.near/widget/ImageEditorTabs\"\n          props={{\n            image: state.backgroundImage,\n            onChange: (backgroundImage) => State.update({ backgroundImage }),\n            debounce,\n          }}\n        />\n      </div>\n    )}\n    {options.description && (\n      <div className=\"mb-2\">\n        <h4>{options.description.label ?? \"Description\"}</h4>\n        <span className=\"text-secondary\"> (supports markdown)</span>\n        <textarea\n          className=\"form-control\"\n          rows={5}\n          defaultValue={state.metadata.description}\n          onChange={onDescriptionChange}\n        />\n      </div>\n    )}\n    {options.tags && (\n      <div className=\"mb-2\">\n        <h4>{options.tags.label ?? \"Tags\"}</h4>\n        <Widget\n          src=\"mob.near/widget/TagsEditor\"\n          props={{\n            initialTagsObject: metadata.tags,\n            tagsPattern: options.tags.pattern,\n            placeholder:\n              options.tags.placeholder ??\n              \"rust, engineer, artist, humanguild, nft, learner, founder\",\n            setTagsObject: (tags) => {\n              state.metadata.tags = tags;\n              State.update();\n            },\n          }}\n        />\n      </div>\n    )}\n    {options.linktree &&\n      (options.linktree.links ?? []).map((link) => (\n        <div className=\"mb-2\">\n          {link.label}\n          <div className=\"input-group\">\n            <span className=\"input-group-text\">{link.prefix}</span>\n            <input\n              type=\"text\"\n              id={link.name}\n              defaultValue={state.linktree[link.name]}\n              onChange={onLinkTreeChange}\n            />\n          </div>\n        </div>\n      ))}\n    {options.feed && (\n      <div className=\"mb-2 feed\">\n        <h4>Your Feed</h4>\n        <div class=\"form-check ds-check\">\n          <input\n            class=\"form-check-input rounded-circle\"\n            type=\"checkbox\"\n            value=\"\"\n            id=\"flexCheckDefault\"\n            onChange={onChangeDisabled}\n          />\n          <label class=\"form-check-label\" for=\"flexCheckDefault\">\n            Display The Default Feed\n          </label>\n        </div>\n        <h6>{options.feed.label ?? \"Accounts To Display\"}</h6>\n        <Widget\n          src=\"jgodwill.near/widget/PageFeedsEditor\"\n          props={{\n            initialPageFeedsObject: metadata.feed,\n            pageFeedPattern: options.feed.pageFeedPattern,\n            placeholder:\n              options.feed.placeholder ??\n              \"Enter the usernames to display on your feed e.g. mob.near, jodwill.near, agwaze.near, etc\",\n            setPageFeedsObject: (feed) => {\n              state.metadata.feed = feed;\n              State.update();\n            },\n            disabled: state.disabled,\n          }}\n        />\n      </div>\n    )}\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bos.genadrop.near/widget/DropFlow.MetadataEditor", "fact_widget_deployments_id": "a4e68afeacb226493c43c8f19c6cac14", "inserted_timestamp": "2024-04-24T23:05:50.652Z", "modified_timestamp": "2024-04-24T23:05:50.652Z", "__row_index": 0}