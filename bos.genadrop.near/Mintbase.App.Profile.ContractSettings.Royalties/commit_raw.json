{"tx_hash": "GMSZ9QHBdLKNm7frMYEXt5eFTBwuPezehk1j6tvLVNJH", "action_id_social": "3eRGWMgettYgF619B3dqAAkD3tWW9RPTeDLCBkp5WXw1-0-widget", "block_id": 119980355, "block_timestamp": "2024-05-29T07:36:24.337Z", "signer_id": "bos.genadrop.near", "widget_name": "Mintbase.App.Profile.ContractSettings.Royalties", "source_code": "const cancelSvg = (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    height=\"24px\"\n    viewBox=\"0 0 24 24\"\n    width=\"24px\"\n  >\n    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"></path>\n    <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12 19 6.41z\"></path>\n  </svg>\n);\nconst Royalty = styled.div`\n  background: #fff;\n  padding: 16px;\n  margin: 40px 0;\n  &.dark {\n    background: #1e2030;\n    h2 {\n      color: #fff;\n    }\n  }\n`;\nconst RoyaltiesCards = styled.div`\n  height: 250px;\n  overflow-y: scroll;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  margin: 30px 0;\n  .dark {\n    svg {\n      color: #fff !important;\n    }\n    .count {\n      color: #fff;\n      background: #3e4352;\n    }\n    .account,\n    .count {\n      color: #fff;\n      background-color: #111222;\n      &:focus {\n        border: 1px solid var(--bs-primary-border-subtle);\n        outline: none;\n      }\n    }\n  }\n  .light {\n    svg {\n      color: #000 !important;\n    }\n    .count {\n      color: #000;\n      background: #d0d5d9;\n    }\n    .account,\n    .count {\n      color: \"#000\";\n      background-color: #f2f5f8;\n      &:focus {\n        border: 1px solid var(--bs-primary-border-subtle);\n        outline: none;\n      }\n    }\n  }\n  .accountCard {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    gap: 10px;\n    border: none;\n    margin-bottom: 11px;\n    padding: 0 20px;\n    .count {\n      width: 70px;\n      height: 45px;\n      border: none;\n      border-radius: 4px;\n      padding: 0 10px;\n    }\n    .account {\n      flex: 1;\n      padding: 0 10px;\n      border-radius: 4px;\n      border: transparent;\n      transition: 0.3s ease-in-out;\n      height: 45px;\n    }\n  }\n  .add-dark {\n    padding: 30px;\n    color: #c3cefd;\n    cursor: pointer;\n    width: max-content;\n  }\n  .add-light {\n    width: max-content;\n    padding: 30px;\n    color: #4f58a3;\n    cursor: pointer;\n  }\n`;\nconst Bottom = styled.div`\n  display: flex;\n  margin-top: 40px;\n  align-items: center;\n  justify-content: space-between;\n  padding: 20px;\n  div {\n    display: flex;\n    gap: 10px;\n  }\n  .token {\n    min-width: 126px;\n    height: 72px;\n    background: ${(props) => (props.isDarkModeOn ? \"#262a3b\" : \"#f8f8f8\")};\n    padding: 8px;\n    display: flex;\n    flex-direction: column;\n    color: ${(props) => (props.isDarkModeOn ? \"#fff\" : \"#000\")};\n    span {\n      font-size: 12px;\n    }\n  }\n  .clear {\n    display: flex;\n    align-items: center;\n    p {\n      margin: 0;\n      padding: 5px 10px;\n      border-radius: 0.25rem;\n      transition: 0.3s;\n      background: ${(props) =>\n        props.isDarkModeOn ? \"#c5d0ff\" : \"transparent\"};\n      color: #4f58a3;\n      cursor: pointer;\n      &:hover {\n        background: ${(props) =>\n          props.isDarkModeOn ? \"#c5d0ff\" : \"rgba(59, 130, 246, 0.5)\"};\n      }\n    }\n    button {\n      background: #000;\n      border: none;\n      &:disabled {\n        background: #d0d5d9;\n        cursor: not-allowed;\n        color: #000;\n      }\n    }\n  }\n`;\nconst Royalties = ({ isDarkModeOn, isMintPage, handleRoyalties }) => {\n  const [royalties, setRoyalties] = useState([\n    {\n      accountId: \"\",\n      percent: \"\",\n    },\n  ]);\n  const [totalPercent, setTotalPercent] = useState(0);\n  const addAccounts = () => {\n    setRoyalties([\n      ...royalties,\n      {\n        percent: \"\",\n        accountId: \"\",\n      },\n    ]);\n  };\n  useEffect(() => {\n    handleRoyalties(royalties);\n    const totalRoyaltiesPercent = royalties.reduce((acc, curr) => {\n      return acc + (Number(curr.percent) || 0);\n    }, 0);\n    setTotalPercent(totalRoyaltiesPercent);\n  }, [royalties, royalties.map((item) => item.percent)]);\n  const handleAccountName = (e, index, name) => {\n    const newFields = royalties;\n    newFields[index][name] = e.target.value;\n    setRoyalties(newFields);\n  };\n  const handleRemoveCard = (id) => {\n    const existingFields = royalties?.filter((_, index) => index !== id);\n    setRoyalties(existingFields);\n  };\n  return (\n    <>\n      <Royalty className={isDarkModeOn ? \"dark\" : \"light\"}>\n        <h2>Default Royalties</h2>\n        <div className=\"text\">\n          <p>Add NEAR Accounts to split royalties when minting</p>\n          <span>\n            Royalties are perpetual and can represent up to 50% of the total\n            sale. You can add up to 25 wallet addresses, including yours.\n          </span>\n        </div>\n        <RoyaltiesCards>\n          <div className={isDarkModeOn ? \"dark\" : \"light\"}>\n            {royalties.map((data, index) => (\n              <div key={index} className=\"accountCard\">\n                <input\n                  className=\"count\"\n                  type=\"number\"\n                  maxLength={2}\n                  placeholder=\"%\"\n                  max={tokens?.length - data?.amount}\n                  onChange={(e) => handleAccountName(e, index, \"percent\")}\n                  value={data?.percent}\n                />\n                <input\n                  value={data?.accountId}\n                  onChange={(e) => handleAccountName(e, index, \"accountId\")}\n                  className=\"account\"\n                  placeholder=\"account.near\"\n                />\n                <div\n                  style={{ cursor: \"pointer\" }}\n                  onClick={() =>\n                    royalties.length > 1 ? handleRemoveCard(index) : {}\n                  }\n                >\n                  {cancelSvg}\n                </div>\n              </div>\n            ))}\n            <div\n              onClick={addAccounts}\n              className={isDarkModeOn ? \"add-dark\" : \"add-light\"}\n            >\n              Add Another Account\n            </div>\n          </div>\n        </RoyaltiesCards>\n        <Bottom isDarkModeOn={isDarkModeOn}>\n          <div>\n            <div className=\"token\">\n              <span style={{ color: totalPercent > 50 ? \"red\" : \"\" }}>\n                Used Percentage\n              </span>\n              <p style={{ color: totalPercent > 50 ? \"red\" : \"\" }}>\n                {totalPercent}\n              </p>\n            </div>\n            <div className=\"token\">\n              <span>Available Percentage</span>\n              <p>50%</p>\n            </div>\n          </div>\n          <div className=\"clear\">\n            <p\n              onClick={() =>\n                setRoyalties([\n                  {\n                    accountId: \"\",\n                    percent: \"\",\n                  },\n                ])\n              }\n            >\n              Clear all\n            </p>\n            {!isMintPage && (\n              <button\n                disabled={royalties.some(\n                  (data) => data.accountId === \"\" || data.percent === \"\"\n                )}\n              >\n                {\" \"}\n                Save\n              </button>\n            )}\n          </div>\n        </Bottom>\n      </Royalty>\n    </>\n  );\n};\nreturn <Royalties {...props} />;\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bos.genadrop.near/widget/Mintbase.App.Profile.ContractSettings.Royalties", "fact_widget_deployments_id": "7125be075edaa0177595dfd066054a10", "inserted_timestamp": "2024-05-29T09:53:13.277Z", "modified_timestamp": "2024-05-29T09:53:13.277Z", "__row_index": 0}