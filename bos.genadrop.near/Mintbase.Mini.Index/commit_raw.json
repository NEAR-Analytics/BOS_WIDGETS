{"tx_hash": "95mgV1X4EV9MF2VNcTeRnWoXcLtJabRWWL8Cq57naHPP", "action_id_social": "3tkTNxGKW692QdJmBJtiFbLNJ53KGYU3E2KeGikgvj1m-0-widget", "block_id": 121989126, "block_timestamp": "2024-06-25T21:03:12.324Z", "signer_id": "bos.genadrop.near", "widget_name": "Mintbase.Mini.Index", "source_code": "const data = fetch(`https://httpbin.org/headers`);\nconst gatewayURL = data?.body?.headers?.Origin ?? \"\";\nconst currentMode = Storage.get(\"mode\");\nconst [mode, setMode] = useState(currentMode || \"light\");\nconst [showOwnedFilters, setShowOwnedFilters] = useState(true);\nconst [storeAddress, setStoreAddress] = useState(\"nft.genadrop.near\");\nconst isDarkModeOn = mode === \"dark\";\nconst Root =\n  gatewayURL.includes(\"near.org\") || gatewayURL.includes(\"everything.dev\")\n    ? styled.div`\n        width: 100%;\n      `\n    : styled.div`\n        position: fixed;\n        inset: 73px 0px 0px;\n        width: 100%;\n        overflow-y: scroll;\n      `;\nconst accountId = context.accountId;\nconst { getInputLabelFontType } = VM.require(\n  \"bos.genadrop.near/widget/Mintbase.components\"\n);\nconst { MbInputField } = VM.require(\n  \"bos.genadrop.near/widget/Mintbase.MbInput\"\n) || {\n  MbInputField: () => <></>,\n};\nconst tabProps = {\n  tabLabels: [\n    \"My Owned NFTs\",\n    \"My Minted NFTs\",\n    \"My Stores\",\n    \"Mint NFT\",\n    \"Store NFTs\",\n    \"Deploy Store\",\n    \"My Activity\",\n  ],\n};\nconst [selectedTab, setSelectedTab] = useState(props.tab ?? \"my-owned-nfts\");\nconst switchChangeHandler = () => {\n  if (!isDarkModeOn) {\n    setMode(\"dark\");\n    Storage.set(\"mode\", \"dark\");\n  } else {\n    setMode(\"light\");\n    Storage.set(\"mode\", \"light\");\n  }\n};\nconst Toggle = styled.div`\n  position: fixed;\n  bottom: 1rem;\n  right: 1rem;\n  padding: 0.5rem;\n  background-color: ${!isDarkModeOn ? \"#1f2937\" : \"#D2D4DA\"};\n  border-radius: 9999px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  z-index: 100000;\n  width: 2rem;\n  height: 2rem;\n`;\nconst AppContent = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n  margin-top: 15px;\n  .head {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    margin-bottom: 48px;\n    justify-content: center;\n    ${getInputLabelFontType(\"big\")}\n    h2 {\n      color: #8c4fe5;\n      font-size: 16px;\n      font-weight: bold;\n    }\n    h1 {\n      font-weight: bold;\n      font-size: 29px;\n      color: ${isDarkModeOn ? \"#fff\" : \"#000\"};\n    }\n    p {\n      font-size: 18px;\n      color: ${isDarkModeOn ? \"#8a8c96\" : \"#000\"};\n      font-weight: 600;\n    }\n  }\n  .audit {\n    p {\n      color: ${isDarkModeOn ? \"#fff\" : \"#000\"};\n    }\n  }\n  .templateButton {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    button {\n      border-radius: 0;\n      padding: 6px 40px;\n      border-color: ${isDarkModeOn ? \"#fff\" : \"#000\"};\n      background: transparent;\n      color: ${isDarkModeOn ? \"#8a8c96\" : \"#000\"};\n      transition: 0.5s ease-in-out;\n      &:hover {\n        opacity: 0.5;\n      }\n    }\n  }\n  @media (max-width: 500px) {\n    margin: 0 10px;\n    .head {\n      h2 {\n        font-size: 14px;\n      }\n      h1 {\n        font-size: 24px;\n        text-align: center;\n      }\n      p {\n        font-size: 16px;\n      }\n    }\n  }\n`;\nconst ContractSection = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  width: 100%;\n  justify-content: space-evenly;\n  ${getInputLabelFontType(\"big\")}\n  a {\n    color: #4f5fa3;\n    text-decoration: none;\n    svg {\n      color: #4f5fa3;\n    }\n  }\n  svg {\n    color: #8c4fe5;\n  }\n  .leftText {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    max-width: 50%;\n    .sec {\n      display: flex;\n      flex-direction: column;\n      align-items: flex-start;\n      margin-bottom: 20px;\n      p {\n        font-size: 16px;\n        margin-top: 15px;\n        color: ${isDarkModeOn ? \"#8a8c96\" : \"#000\"};\n      }\n      div {\n        ${getInputLabelFontType(\"big\")}\n        display: flex;\n        align-items: center;\n        h1 {\n          font-size: 20px;\n          font-weight: bold;\n          color: ${isDarkModeOn ? \"#fff\" : \"#000\"};\n          margin-left: 12px;\n          margin-bottom: 0;\n        }\n      }\n    }\n  }\n  button {\n    background: black;\n    color: ${isDarkModeOn ? \"#fff\" : \"#000\"};\n    align-self: center;\n    border: 1px solid #000;\n    transition: 0.5s ease-in-out;\n    &:hover {\n      opacity: 0.8;\n    }\n    &:disabled {\n      background: ${isDarkModeOn ? \"#3e4253\" : \"#d1d4d9\"};\n      cursor: not-allowed;\n      color: ${isDarkModeOn ? \"#fff\" : \"#000\"};\n      font-weight: 600;\n      border: none;\n    }\n  }\n  @media (max-width: 600px) {\n    .leftText {\n      max-width: 100%;\n      .sec {\n        p {\n          font-size: 14px;\n        }\n        div {\n          h1 {\n            font-size: 17px;\n          }\n        }\n      }\n    }\n  }\n`;\nconst FormSection = styled.div`\n  width: 50%;\n  display: flex;\n  position: relative;\n  flex-direction: column;\n  height: fit-content;\n  & > p > .down-arr {\n    padding: 0;\n    margin: 0;\n    transform: rotateY(180deg);\n  }\n  & > p {\n    display: flex;\n    align-items: center;\n    gap: 5px;\n    color: ${isDarkModeOn\n      ? \"var(--gray-300, #B3B5BD)\"\n      : \"var(--gray-700, #404252)\"};\n  }\n  .form-main {\n    background-color: ${isDarkModeOn ? \"#1e2030\" : \"#fff\"};\n    border-radius: 4px;\n    height: 340px;\n    overflow: hidden;\n    .top {\n      color: ${isDarkModeOn ? \"#fff\" : \"#000\"};\n      border-bottom: 1px solid\n        ${isDarkModeOn ? \"rgba(40, 42, 58, 1)\" : \"rgba(210, 212, 218, 1)\"};\n      padding: 24px;\n      p {\n        margin: 0;\n        font-size: 16px;\n        font-weight: 600;\n      }\n    }\n    .form-content {\n      padding: 24px;\n      height: 230px;\n      background-color: ${isDarkModeOn ? \"#1e2030\" : \"#fff\"};\n    }\n  }\n  @media (max-width: 500px) {\n    width: 100%;\n    margin-top: 60px;\n  }\n`;\nconst handleTabClick = (tab) => {\n  setSelectedTab(tab);\n};\nconst PageContent = () => {\n  switch (selectedTab) {\n    case \"my-stores\":\n      return (\n        <Widget\n          src={`bos.genadrop.near/widget/Mintbase.App.Store.Cards`}\n          props={{\n            isDarkModeOn,\n            accountId,\n          }}\n        />\n      );\n    case \"mint-nft\":\n      return (\n        <Widget\n          src=\"bos.genadrop.near/widget/Mintbase.App.ContractProfilePage.Mint.Index\"\n          props={{ contractId: accountId, isDarkModeOn }}\n        />\n      );\n    case \"deploy-store\":\n      return (\n        <AppContent>\n          <div className=\"head\">\n            <h2>SMART CONTRACT</h2>\n            <h1>Deploy your Own Smart Contract with a few clicks</h1>\n            <p>Assets Can be Worth $0.0001 or $10M</p>\n          </div>\n          <ContractSection>\n            <div className=\"leftText\">\n              <div className=\"sec\">\n                <div>\n                  {mintSvg}\n                  <h1>Mint NFTs Collection</h1>\n                </div>\n                <p>\n                  Easily Mint, Sell, Transfer and Burn NFTs on your contract\n                </p>\n              </div>\n              <div className=\"sec\">\n                <div>\n                  {addMinterSvg}\n                  <h1>Add Minters</h1>\n                </div>\n                <p>Your Contract is your own DAO</p>\n              </div>\n              <div className=\"sec\">\n                <div>\n                  {badgeSvg}\n                  <h1>Safe and Audited</h1>\n                </div>\n                <p>\n                  Enjoy the safety of your contracts with a stamp of approval\n                  from credible auditors\n                </p>\n              </div>\n              <div className=\"audit\">\n                <p>\n                  AUDITED BY\n                  <img\n                    src=\"https://www.mintbase.xyz/images/ottersec.svg\"\n                    alt=\"\"\n                  />\n                </p>\n              </div>\n              <a\n                target=\"_blank\"\n                href=\"https://llyh4t73eduhn2i3j4gs523hnndpb24ynlrnsglgque46drcisxa.arweave.net/WvB-T_sg6HbpG08NLutna0bw65hq4tkZZoUJzw4iRK4\"\n              >\n                View Report {upArrow}\n              </a>\n            </div>\n            <FormSection>\n              <p>\n                <span>Try it out, it's that simple</span>\n                <p className=\"down-arr\">\n                  <i class=\"bi bi-arrow-90deg-down\"></i>\n                </p>\n              </p>\n              <div className=\"form-main\">\n                <div className=\"top\">\n                  <p>New Contract</p>\n                </div>\n                <div className=\"form-content\">\n                  <Widget\n                    src={`bos.genadrop.near/widget/Mintbase.App.Store.CreateForm`}\n                    props={{\n                      isDarkModeOn,\n                      isInModal: false,\n                      accountId,\n                    }}\n                  />\n                </div>\n              </div>\n            </FormSection>\n          </ContractSection>\n        </AppContent>\n      );\n    case \"my-owned-nfts\":\n      return (\n        <Widget\n          src={`bos.genadrop.near/widget/Mintbase.App.Tokens.Owned`}\n          props={{\n            isDarkModeOn,\n            ownerId: accountId,\n            isConnected,\n            showFilters: showOwnedFilters,\n            onCreateStore,\n          }}\n        />\n      );\n    case \"my-minted-nfts\":\n      return (\n        <Widget\n          src={`bos.genadrop.near/widget/Mintbase.App.Tokens.Minted`}\n          props={{\n            isDarkModeOn,\n            minterId: accountId,\n            isConnected,\n            showFilters: showOwnedFilters,\n            onCreateStore,\n          }}\n        />\n      );\n    case \"store-nfts\":\n      return (\n        <Widget\n          src=\"bos.genadrop.near/widget/Mintbase.App.ContractProfilePage.ContractNFTs\"\n          props={{ contractId: storeAddress, isDarkModeOn }}\n        />\n      );\n    case \"my-activity\":\n      return (\n        <Widget\n          src={`bos.genadrop.near/widget/Mintbase.App.Profile.Activity`}\n          props={{ isDarkModeOn, accountId }}\n        />\n      );\n    default:\n      return null;\n  }\n};\nconst [count, setCount] = useState(0);\nif (!context.accountId) {\n  return (\n    <p\n      className=\"text-center\"\n      style={{\n        color: isDarkModeOn ? \"white\" : \"black\",\n        padding: \"20px 0\",\n      }}\n    >\n      Please Sign In\n    </p>\n  );\n}\nconst Card = styled.div`\n  width: 100%;\n  border-radius: 0;\n  background-color: #f9fafb;\n  color: black;\n  margin: 0;\n  padding: 12px 0;\n  .top-desc {\n    padding: 20px 0;\n  }\n  .input {\n    margin: 0 auto;\n    width: 70%;\n    padding: 20px 0;\n  }\n  pre {\n    margin: 0;\n    padding: 0;\n  }\n  &.dark {\n    background-color: var(--bg-gray-900, #101223);\n    color: white;\n  }\n  .content_main {\n    margin: 48px 44px 48px 44px;\n  }\n  .stripe-data {\n    display: flex;\n    flex-direction: row;\n    gap: 32px;\n    img {\n      max-width: 500px;\n      width: 100%;\n      height: auto;\n    }\n    .stripe-image {\n      width: 45%;\n    }\n    padding: 32px;\n    .stripe-text {\n      display: flex;\n      flex-direction: column;\n      gap: 5px;\n      margin-top: 32px;\n      width: 45%;\n      max-width: 500px;\n      .paras {\n        display: flex;\n        flex-direction: column;\n        gap: 2px;\n      }\n    }\n    @media only screen and (max-width: 800px) {\n      flex-direction: column;\n      .stripe-text {\n        margin-top: 0;\n        padding: 0;\n        text-align: center;\n        width: 100%;\n        .paras {\n          display: flex;\n          flex-direction: column;\n          gap: 2px;\n        }\n      }\n      .stripe-image {\n        width: 100%;\n      }\n    }\n  }\n`;\nconst queryInOwnedToggleHandler = () => {\n  setShowOwnedFilters((prev) => !prev);\n};\nconst onStoreAddressChange = (e) => {\n  setStoreAddress(e.target.value);\n};\nconst Index = ({}) => (\n  <Root>\n    <Card className={isDarkModeOn ? \"dark\" : \"\"}>\n      <div\n        className=\"top-desc\"\n        style={{ background: isDarkModeOn ? \"#1e2030\" : \"#fff\" }}\n      >\n        <h4 className=\"text-center\">Hi {accountId}, I'm Mintbos Mini!</h4>\n        <div className=\"input\">\n          <MbInputField\n            id=\"contractAddress\"\n            placeholder=\"nft.genadrop.near\"\n            type=\"text\"\n            label=\"Store Address\"\n            // error={storeAddress.length > 3}\n            className=\"input-field\"\n            // value={storeAddress}\n            isDarkModeOn={isDarkModeOn}\n            onChange={onStoreAddressChange}\n          />\n        </div>\n        <Widget\n          src={`bos.genadrop.near/widget/Mintbase.MbTabs`}\n          props={{\n            ...tabProps,\n            activeTab: selectedTab,\n            onTabChange: handleTabClick,\n            isDarkModeOn,\n            hasQueryToggle:\n              selectedTab === \"my-owned-nfts\" ||\n              selectedTab === \"my-minted-owned\",\n            onQueryToggle: queryInOwnedToggleHandler,\n          }}\n        />\n      </div>\n      <div className=\"d-flex flex-column align-items-center content_main\">\n        <PageContent />\n      </div>\n      <Toggle onClick={switchChangeHandler} title=\"Toggle Theme\">\n        <Widget\n          src={\"bos.genadrop.near/widget/Mintbase.MbIcon\"}\n          props={{\n            name: !isDarkModeOn ? \"moon\" : \"sun\",\n            size: \"22px\",\n            isDarkModeOn,\n            color: !isDarkModeOn ? \"mb-white\" : \"mb-black\",\n          }}\n        />\n      </Toggle>\n    </Card>\n  </Root>\n);\nreturn <Index {...props} />;\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bos.genadrop.near/widget/Mintbase.Mini.Index", "fact_widget_deployments_id": "4efa6fbac9b104df165fad0626f86ff4", "inserted_timestamp": "2024-06-25T21:54:15.533Z", "modified_timestamp": "2024-06-25T21:54:15.533Z", "__row_index": 1}