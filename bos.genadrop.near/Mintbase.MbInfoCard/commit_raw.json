{"tx_hash": "3RskuyG6GY6Y2RW4t9MdXhn2a1ZGC53FbPVBhJjdtSsx", "action_id_social": "EQKB3iQBgB8ppcKRVzbsNJNsYGbpqzbTCnaQQrwzEoUf-0-widget", "block_id": 112946203, "block_timestamp": "2024-02-16T10:59:48.386Z", "signer_id": "bos.genadrop.near", "widget_name": "Mintbase.MbInfoCard", "source_code": "const { typographyClasses } = VM.require(\n  \"bos.genadrop.near/widget/Mintbase.Theme\"\n);\n\nconst LoadingInfoBox = ({ size }) => {\n  return (\n    <Container>\n      <div className={`info-card ${size}`}>\n        <div className={`title-wrapper ${size}`}>\n          <TitleLoader />\n        </div>\n        <RightLoader>\n          <div></div>\n        </RightLoader>\n      </div>\n    </Container>\n  );\n};\n\nconst {\n  title,\n  titleIcon,\n  description,\n  descriptionImage,\n  upperIcon,\n  isNumber,\n  lowerLeftText,\n  isLink,\n} = props;\nconst descriptionIcon = props.descriptionIcon || \"none\";\nconst size = props.size || \"medium\";\nconst loading = props.loading || false;\nconst isBigDescription = props.isBigDescription || true;\n\nconst mode = props.mode || Storage.get(\"mode\");\n\nconst IsDarkModeOn = mode === \"dark\";\n\nif (loading) return <LoadingInfoBox size={size} />;\n\nconst getDescriptionFont = () => {\n  if (size === \"small\") {\n    return isBigDescription && isNumber ? \"p-big-90\" : \"p-small-90\";\n  }\n  return isBigDescription && isNumber ? \"p-sub-90\" : \"p-big-90\";\n};\n\nconst getTitleFont = () => {\n  if (size === \"small\") {\n    return \"cap-big-90\";\n  }\n  return \"p-small-90\";\n};\n\nconst linkStyle = `\n \n`;\nconst Container = styled.div`\n  .info-card {\n    border-radius: 0.25rem;\n    background: ${IsDarkModeOn ? \"var(--gray-800)\" : \"var(--gray-50)\"};\n    &.small,\n    &.medium,\n    &.big {\n      padding: 8px;\n      min-height: 46px;\n      @media (min-width: 480px) {\n        min-height: 72px;\n        padding: 12px;\n      }\n    }\n    @media (min-width: 976px) {\n      .info-card.small {\n        min-width: 160px;\n      }\n    }\n    .title-wrapper {\n      display: flex;\n      position: relative;\n      align-items: center;\n      ${titleIcon ? \"gap: 12px;\" : \"justify-content: space-between;\"}\n    }\n    .loading-info {\n      animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;\n      justify-content: space-between;\n      @keyframes pulse {\n        0%,\n        100% {\n          opacity: 1;\n        }\n        50% {\n          opacity: 0.5;\n        }\n      }\n    }\n    .title-wrapper.medium,\n    .title-wrapper.big {\n      padding-bottom: 12px;\n    }\n    .title-wrapper.small {\n      padding-bottom: 8px;\n    }\n  }\n\n  &.link {\n    transition-property: background-color, border-color, color, fill, stroke,\n      opacity, box-shadow, transform;\n    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n    transition-duration: 300ms;\n    transition-duration: 500ms;\n    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n    cursor: pointer;\n    :hover {\n      background: ${IsDarkModeOn ? \"var(--blue-100-15)\" : \"var(--blue-300-15)\"};\n    }\n  }\n`;\nconst Title = styled.div`\n  color: ${IsDarkModeOn ? \"var(--gray-300)\" : \"var(--gray-700)\"};\n  ${typographyClasses[getTitleFont()]}\n`;\nconst UpperIcon = styled.div`\n  position: absolute;\n  right: 0;\n  margin-top: 4px;\n`;\nconst DescriptionWrapper = styled.div`\n  display: flex;\n  align-items: center;\n`;\nconst DescriptionImage = styled.div`\n  overflow: hidden;\n  border-radius: 50%;\n  width: 1.5rem;\n  height: 1.5rem;\n  .img {\n    object-fit: cover;\n    width: 100%;\n    height: 100%;\n  }\n`;\nconst Description = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  align-items: baseline;\n  width: 100%;\n  margin-left: 12px;\n\n  .description-rt {\n    display: flex;\n    ${lowerLeftText ? \"\" : \"width: 100%;\"}\n    >div {\n      vertical-align: middle;\n      ${typographyClasses[getDescriptionFont()]}\n      ${isLink\n        ? `color: ${IsDarkModeOn ? \"var(--blue-100)\" : \"var(--blue-300)\"};\n           cursor: pointer;`\n        : `color: ${IsDarkModeOn ? \"white\" : \"black\"};`} \n        \n      ${lowerLeftText\n        ? \"display: inline-flex;\"\n        : `\n          overflow: hidden;\n          text-overflow: ellipsis;\n          white-space: nowrap; \n      `}\n    }\n  }\n`;\nconst LowerLeftText = styled.div`\n  ${typographyClasses[\"p-med-90\"]}\n  color: ${IsDarkModeOn ? \"var(--gray-300)\" : \"var(--gray-700)\"};\n`;\n\nconst TitleLoader = styled.div`\n  border-radius: 0.25rem;\n  width: 4rem;\n  height: 1rem;\n  background-color: var(--gray-600);\n`;\nconst RightLoader = styled.div`\n  display: flex;\n  margin: 0 12px;\n  align-items: center;\n  animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;\n  @keyframes pulse {\n    0%,\n    100% {\n      opacity: 1;\n    }\n    50% {\n      opacity: 0.5;\n    }\n  }\n  > div {\n    border-radius: 0.25rem;\n    width: 66.666667%;\n    height: 1.5rem;\n    background-color: var(--gray-600);\n  }\n`;\n\nconst MbInfoCard = () => {\n  return (\n    <Container>\n      <div className={`info-card ${size} ${isLink ? \"link\" : \"\"}`}>\n        <div className={`title-wrapper ${size}`}>\n          {titleIcon && titleIcon}\n          <Title>{title}</Title>\n\n          {upperIcon && <UpperIcon>{upperIcon}</UpperIcon>}\n        </div>\n        <DescriptionWrapper>\n          {descriptionIcon !== \"none\" && !descriptionImage && (\n            <Widget\n              src=\"bos.genadrop.near/widget/Mintbase.MbIcon\"\n              props={{\n                name: descriptionIcon,\n                size: \"24px\",\n                color: \"blue-300\",\n                darkColor: \"blue-100\",\n              }}\n            />\n          )}\n          {descriptionImage && descriptionIcon === \"none\" && (\n            <div>\n              <DescriptionImage>\n                <img src={descriptionImage} />\n              </DescriptionImage>\n            </div>\n          )}\n\n          <Description>\n            {description && (\n              <div className=\"description-rt\">\n                <div>{description}</div>\n              </div>\n            )}\n            {lowerLeftText && <LowerLeftText>{lowerLeftText}</LowerLeftText>}\n          </Description>\n        </DescriptionWrapper>\n      </div>\n    </Container>\n  );\n};\n\nreturn { MbInfoCard };\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bos.genadrop.near/widget/Mintbase.MbInfoCard", "fact_widget_deployments_id": "39d1d806aceccefb2218180a1198d11c", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 1}