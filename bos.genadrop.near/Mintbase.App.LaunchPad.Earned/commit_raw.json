{"tx_hash": "ANAE6tt34MGwHey9fq6c49Cn12ud4Wgk4frsvobWZQiw", "action_id_social": "311c1kyj8rRGWskn6DdSSFx39CwaXBFkzGA7j181kJJQ-0-widget", "block_id": 117436302, "block_timestamp": "2024-04-23T07:26:49.644Z", "signer_id": "bos.genadrop.near", "widget_name": "Mintbase.App.LaunchPad.Earned", "source_code": "const { getUserEarnings } = VM.require(\n  \"bos.genadrop.near/widget/Mintbase.utils.sdk\"\n) || {\n  getUserEarnings: () => <></>,\n};\n\nconst perPage = props.perPage || 50; // need to be less than 50\n\nconst nearLogo =\n  \"https://ipfs.near.social/ipfs/bafkreib2cfbayerbbnoya6z4qcywnizqrbkzt5lbqe32whm2lubw3sywr4\";\nconst [page, setPage] = useState(0);\nconst [data, setData] = useState(null);\nconst [showTable, setShowTable] = useState(true);\n\nconst _address = (address, _limit) => {\n  const limit = _limit || 20;\n  if (address.length > limit) return address.slice(0, 10) + \"...\";\n  else return address;\n};\nconst YoctoToNear = (amountYocto) => {\n  return new Big(amountYocto || 0).div(new Big(10).pow(24)).toString();\n};\n\nconst { getTimePassed } = VM.require(\n  \"bos.genadrop.near/widget/Mintbase.utils.sdk\"\n);\n\nuseEffect(() => {\n  getUserEarnings({\n    account: \"jgodwill.near\",\n    currency: \"near\",\n    limit: perPage,\n    offset: 0,\n  })\n    .then(({ data, errors }) => {\n      if (errors) {\n        // handle those errors like a pro\n        console.error(errors);\n      }\n      // do something great with this precious data\n      console.log(\"data\", data);\n      setData(data);\n    })\n    .catch((error) => {\n      // handle errors from fetch itself\n      console.error(error);\n    });\n}, [limit, offset]);\nconst Earned = ({ isDarkModeOn }) => {\n  const earnings = data && data.earnings;\n\n  if (!earnings) return \"Loading ...\";\n\n  const Root = styled.div`\n    width: 100%;\n    overflow: hidden;\n  `;\n\n  const Container = styled.div`\n    background: ${isDarkModeOn ? \"#1f2031\" : \"#fff\"};\n    display: flex;\n    flex-direction: column;\n    overflow-x: scroll; /* Prevent horizontal overflow */\n    margin: 10px;\n    border-radius: 4px;\n\n    @media (max-width: 500px) {\n      width: 100vw;\n      font-size: 12px;\n    }\n\n    .topic_line {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 2rem;\n      color: ${isDarkModeOn ? \"#fff\" : \"#000\"};\n      ${\"\" /* margin-bottom: 1rem; */}\n      border-bottom: 1px solid\n        ${showTable && isDarkModeOn ? \"#D2D4DA3a\" : \"#282A3A3a\"};\n      cursor: pointer;\n      i {\n        transition: all 300ms;\n        font-size: 1.5rem;\n      }\n      p {\n        margin: 0;\n        font-size: 16px;\n        font-weight: 600;\n      }\n    }\n\n    .header {\n      display: grid;\n      grid-template-columns: repeat(4, minmax(0, 1fr));\n      align-items: center;\n      justify-content: space-between;\n      padding: 0.5rem 0;\n      color: ${isDarkModeOn ? \"#B3B5BD\" : \"#404252\"};\n      margin-bottom: 1rem;\n\n      font-weight: 500px;\n      div {\n        padding-bottom: 1rem;\n        text-align: center;\n        border-bottom: 2px solid ${isDarkModeOn ? \"#374151\" : \"#E5E7EB\"};\n      }\n      ${cursomStyle}\n    }\n\n    .trx-row {\n      display: grid;\n      grid-template-columns: repeat(4, minmax(0, 3fr));\n      width: 100%;\n      justify-content: space-between;\n      gap: 1rem;\n      padding: 1rem 0;\n      border-bottom: 1px solid ${color}5a;\n      &:last-of-type {\n        border-bottom-color: transparent;\n      }\n\n      a {\n        text-decoration: none;\n      }\n      div,\n      a,\n      span {\n        text-align: center;\n        margin: auto;\n      }\n      div:first-child {\n        margin: unset;\n        margin: auto auto auto 24px;\n      }\n      .address {\n        color: ${isDarkModeOn ? \"#c2cdfd\" : \"#4e58a2\"};\n        height: 40px;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        padding: 10px;\n        border-radius: 2px;\n        transition: all 200ms;\n        :hover {\n          background: ${color};\n          color: white;\n        }\n      }\n      .title {\n        display: flex;\n        align-items: center;\n        text-decoration: none;\n        gap: 10px;\n        div {\n          white-space: nowrap;\n          height: 40px;\n          display: flex;\n          color: ${isDarkModeOn ? \"#c2cdfd\" : \"#4e58a2\"};\n          align-items: center;\n          justify-content: center;\n          padding: 10px;\n          border-radius: 2px;\n          transition: all 200ms;\n          :hover {\n            background: ${color};\n            color: white;\n          }\n        }\n        img {\n          object-fit: cover;\n          width: 40px;\n          height: 40px;\n        }\n      }\n      .kind {\n        width: fit-content;\n        height: fit-content;\n        font-size: 12px;\n        font-weight: bold;\n        letter-spacing: 0.9;\n        padding: 4px;\n        border-radius: 2px;\n        text-transform: uppercase;\n      }\n\n      .time {\n        display: flex;\n        align-items: center;\n        gap: 1rem;\n        color: ${isDarkModeOn ? \"#c2cdfd\" : \"#4e58a2\"};\n        svg {\n          box-sizing: content-box;\n          height: 14px;\n          color: ${isDarkModeOn ? \"#c2cdfd\" : \"#4e58a2\"};\n          cursor: pointer;\n          padding: 10px;\n          border-radius: 2px;\n          transition: all 200ms ease 0s;\n          :hover {\n            fill: white;\n            background: ${color};\n          }\n        }\n      }\n    }\n\n    .price {\n      display: flex;\n      gap: 4px;\n      align-items: center;\n      font-weight: 600;\n      color: ${isDarkModeOn ? \"#c2cdfd\" : \"#4e58a2\"};\n      img {\n        width: 14px;\n        filter: invert(${isDarkModeOn ? 1 : 0});\n      }\n    }\n\n    @media (max-width: 500px) {\n      .header,\n      .trx-row {\n        grid-template-columns: repeat(6, 150px);\n      }\n    }\n  `;\n\n  const tableToggleHander = () => {\n    setShowTable((prev) => !prev);\n  };\n  return (\n    <Root>\n      <Container>\n        <div className=\"topic_line\" onClick={tableToggleHander}>\n          <p>Trading History</p>\n          <i className={`bi bi-chevron-${showTable ? \"up\" : \"down\"}`}></i>\n        </div>\n        {showTable && (\n          <>\n            <div className=\"header\">\n              <div>NFT</div>\n              <div>Earned</div>\n              <div>From</div>\n              <div>Settled</div>\n            </div>\n            <div>\n              {earnings ? (\n                earnings\n                  .slice(page * perPage, (page + 1) * perPage)\n                  .map((earning) => {\n                    const hashData = fetch(\n                      \"https://api.nearblocks.io/v1/search?keyword=\" +\n                        earning.offer_id\n                    );\n                    const regex = /https?:\\/\\/[^ ]+/;\n                    const found = regex.test(earning.nft_token.media);\n                    const imageUrl = found\n                      ? earning.nft_token.media\n                      : `${earning.nft_token.base_uri}/${earning.nft_token.media}`;\n                    return (\n                      <div className=\"trx-row\" key={earning.offer_id}>\n                        <a\n                          href={\n                            earning.token.metadata_id\n                              ? `https://mintbase.xyz/meta/${earning?.token.metadata_id?.replace(\n                                  \":\",\n                                  \"%3A\"\n                                )}`\n                              : \"#\"\n                          }\n                          target=\"_blank\"\n                          className=\"title\"\n                        >\n                          {\" \"}\n                          <img\n                            src={\n                              \"https://image-cache-service-z3w7d7dnea-ew.a.run.app/media?url=\" +\n                              imageUrl\n                            }\n                            alt={earning.title}\n                          />\n                          {earning?.nft_token.title ? (\n                            <div>\n                              {earning.nft_token.title.length > 7\n                                ? `${earning.nft_token.title.substring(\n                                    0,\n                                    6\n                                  )}...`\n                                : earning.nft_token.title}\n                            </div>\n                          ) : (\n                            <div>No Title</div>\n                          )}\n                        </a>\n\n                        <div>\n                          {\" \"}\n                          {earning.amount ? (\n                            <div className=\"price\">\n                              {YoctoToNear(earning.amount)}\n                              <img src={nearLogo} alt=\"NEAR\" />\n                            </div>\n                          ) : (\n                            <div className=\"price\">-</div>\n                          )}{\" \"}\n                        </div>\n                        <Widget\n                          src=\"near/widget/AccountProfileOverlay\"\n                          props={{\n                            accountId: earning.offer.offered_by,\n                            children: (\n                              <a\n                                href={\n                                  \"https://near.org/near/widget/ProfilePage?accountId=\" +\n                                  earning.offer.offered_by\n                                }\n                                className=\"address\"\n                                target=\"_blank\"\n                              >\n                                {_address(earning.offer.offered_by)}{\" \"}\n                              </a>\n                            ),\n                          }}\n                        />\n                        <div className=\"time\">\n                          {getTimePassed(earning.timestamp)}\n                          {hashData.body.receipts[0]\n                            ?.originated_from_transaction_hash && (\n                            <a\n                              href={\n                                \"https://nearblocks.io/txns/\" +\n                                hashData.body.receipts[0]\n                                  ?.originated_from_transaction_hash\n                              }\n                              target=\"_blank\"\n                            >\n                              <svg\n                                viewBox=\"0 0 512 512\"\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                              >\n                                <path d=\"m432 320h-32a16 16 0 0 0 -16 16v112h-320v-320h144a16 16 0 0 0 16-16v-32a16 16 0 0 0 -16-16h-160a48 48 0 0 0 -48 48v352a48 48 0 0 0 48 48h352a48 48 0 0 0 48-48v-128a16 16 0 0 0 -16-16zm56-320h-128c-21.37 0-32.05 25.91-17 41l35.73 35.73-243.73 243.64a24 24 0 0 0 0 34l22.67 22.63a24 24 0 0 0 34 0l243.61-243.68 35.72 35.68c15 15 41 4.5 41-17v-128a24 24 0 0 0 -24-24z\" />\n                              </svg>\n                            </a>\n                          )}\n                        </div>\n                      </div>\n                    );\n                  })\n              ) : (\n                <p>No Earnings</p>\n              )}\n            </div>\n          </>\n        )}\n      </Container>\n    </Root>\n  );\n};\n\nreturn <Earned {...props} />;\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bos.genadrop.near/widget/Mintbase.App.LaunchPad.Earned", "fact_widget_deployments_id": "6d42487db2577bbeb40bd10224dd6610", "inserted_timestamp": "2024-04-23T09:44:05.024Z", "modified_timestamp": "2024-04-23T09:44:05.024Z", "__row_index": 0}