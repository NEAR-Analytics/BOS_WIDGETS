{"tx_hash": "3t96h1uYoHMgn9jc9n47EQtz6gnVTfEGqNifEKEfXyoR", "action_id_social": "CBzRbo8PRnMDbtczsKnmXbVqYW4FD4G4VnDGjaUKJT8z-0-widget", "block_id": 117657323, "block_timestamp": "2024-04-26T10:09:01.207Z", "signer_id": "bos.genadrop.near", "widget_name": "Mintbase.App.LaunchPad.Earned", "source_code": "const { getUserEarnings, getTimePassed } = VM.require(\n  \"bos.genadrop.near/widget/Mintbase.utils.sdk\"\n) || {\n  getUserEarnings: () => <></>,\n  getTimePassed: () => <></>,\n};\nconst accountId = props.accountId ?? context.accountId;\nconst perPage = 50;\nconst nearLogo =\n  \"https://ipfs.near.social/ipfs/bafkreib2cfbayerbbnoya6z4qcywnizqrbkzt5lbqe32whm2lubw3sywr4\";\nconst [page, setPage] = useState(1);\nconst [data, setData] = useState(null);\nconst [showTable, setShowTable] = useState(true);\nconst _address = (address, _limit) => {\n  const limit = _limit || 20;\n  if (address.length > limit) return address.slice(0, 10) + \"...\";\n  else return address;\n};\nconst YoctoToNear = (amountYocto) => {\n  return new Big(amountYocto || 0)\n    .div(new Big(10).pow(24))\n    .toFixed(2)\n    .toString();\n};\nuseEffect(() => {\n  getUserEarnings({\n    account: accountId,\n    currency: \"near\",\n    limit: perPage,\n    offset: (page - 1) * perPage,\n  })\n    .then(({ data, errors }) => {\n      if (errors) {\n        // handle those errors like a pro\n        console.error(errors);\n      }\n      // do something great with this precious data\n      console.log(\"data\", data);\n      setData(data);\n    })\n    .catch((error) => {\n      // handle errors from fetch itself\n      console.error(error);\n    });\n}, [limit, offset, page]);\nconst Earned = ({ isDarkModeOn }) => {\n  const earnings = data && data.earnings;\n  const earningsTotal = data && data.earnings_aggregate.aggregate;\n  const totalItems = earningsTotal && earningsTotal.count;\n  const totalEarnings = earningsTotal && earningsTotal.sum.amount;\n  const totalListings = data && data.lists_aggregate.aggregate.count;\n  if (!earnings) return \"Loading ...\";\n  const Root = styled.div`\n    display: flex;\n    flex-flow: row nowrap;\n    width: 100%;\n    gap: 20px;\n    @media only screen and (max-width: 970px) {\n      flex-flow: column nowrap;\n    }\n  `;\n  const LeftFilters = styled.div`\n    width: 22%;\n    height: 100%;\n    display: flex;\n    flex-flow: column nowrap;\n    gap: 24px;\n    @media only screen and (max-width: 970px) {\n      width: 100%;\n      flex-flow: row nowrap;\n      justify-content: space-around;\n    }\n  `;\n  const FilterCard = styled.div`\n    background: ${isDarkModeOn ? \"rgba(40, 42, 58, 1)\" : \"#fff\"};\n    width: 100%;\n    height: 100%;\n    padding: 15px;\n    border-radius: 4px;\n    transition: all 500ms cubic-bezier(0.4, 0, 0.2, 1);\n    display: flex;\n    gap: 5px;\n    flex-flow: column nowrap;\n    p {\n      font-size: 12px;\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      color: ${isDarkModeOn ? \"#D2D4DA\" : \"#000\"};\n      img {\n        width: 16px;\n        height: 16px;\n        filter: invert(${isDarkModeOn ? 1 : 0});\n      }\n    }\n    .count {\n      font-size: 14px;\n      font-weight: 600;\n      color: ${isDarkModeOn ? \"#fff\" : \"#000\"};\n    }\n  `;\n  const Container = styled.div`\n    background: ${isDarkModeOn ? \"#1f2031\" : \"#fff\"};\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    border-radius: 4px;\n    height: fit-content;\n    flex: 1;\n    width: 100%;\n    @media (max-width: 500px) {\n      width: 100vw;\n      min-width: 100vw;\n      font-size: 12px;\n    }\n    .topic_line {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      width: 100%;\n      padding: 1.5rem;\n      color: ${isDarkModeOn ? \"#fff\" : \"#000\"};\n      border-bottom: 1px solid\n        ${showTable\n          ? isDarkModeOn\n            ? \"rgba(40, 42, 58, 1)\"\n            : \"rgba(210, 212, 218, 1)\"\n          : \"transparent\"};\n      cursor: pointer;\n      i {\n        transition: all 300ms;\n        font-size: 1.5rem;\n      }\n      p {\n        margin: 0;\n        font-size: 16px;\n        font-weight: 600;\n      }\n    }\n    .table_main {\n      display: flex;\n      overflow: auto;\n      flex-direction: column;\n      width: 100%;\n      .header {\n        display: grid;\n        grid-template-columns: repeat(4, minmax(150px, 1fr));\n        align-items: center;\n        justify-content: space-between;\n        padding: 0.5rem 0;\n        color: ${isDarkModeOn ? \"#B3B5BD\" : \"#404252\"};\n        margin-bottom: 1rem;\n        font-weight: 500px;\n        div {\n          padding-bottom: 1rem;\n          text-align: center;\n          border-bottom: 2px solid\n            ${isDarkModeOn ? \"rgba(16,18,35,1)\" : \"rgba(210,212,218,1)\"};\n        }\n        & > div:first-child {\n          text-align: left;\n          padding-left: 1.5rem;\n        }\n        ${cursomStyle}\n      }\n      .trx-row {\n        display: grid;\n        grid-template-columns: repeat(4, minmax(150px, 3fr));\n        justify-content: space-between;\n        padding: 1rem 0;\n        border-bottom: 1px solid\n          ${isDarkModeOn ? \"rgba(40, 42, 58, 1)\" : \"rgba(210, 212, 218, 1)\"};\n        div,\n        a,\n        span {\n          text-align: center;\n          margin: auto;\n        }\n        .tab {\n          text-decoration: none;\n          text-align: left;\n          display: flex;\n          align-items: baseline;\n          justify-content: flex-end;\n          text-decoration: none;\n          gap: 0.2rem;\n          border-radius: 0.25rem; /* Assuming default border radius */\n          color: ${isDarkModeOn\n            ? \"#C5D0FF\"\n            : \"#4F58A3\"}; /* Ternary for text color */\n          padding: 8px 12px; /* Assuming Tailwind CSS default spacing unit */\n          font-weight: 500;\n          font-size: 16px;\n          line-height: 18px;\n          transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1); /* Assuming Tailwind CSS default timing function and duration */\n          white-space: nowrap;\n          &:focus {\n            outline: 2px solid transparent; /* Assuming Tailwind CSS default focus outline */\n            outline-offset: 2px; /* Assuming Tailwind CSS default focus outline offset */\n            box-shadow: 0 0 0 2px\n              ${isDarkModeOn\n                ? \"rgba(59, 130, 246, 0.5)\"\n                : \"rgba(66, 153, 225, 0.5)\"}; /* Ternary for box-shadow */\n            background-color: ${isDarkModeOn\n              ? \"rgba(59, 130, 246, 0.35)\"\n              : \"rgba(66, 153, 225, 0.15)\"}; /* Ternary for background-color */\n          }\n          &:hover {\n            background-color: ${isDarkModeOn\n              ? \"rgba(59, 130, 246, 0.15)\"\n              : \"rgba(66, 153, 225, 0.15)\"}; /* Ternary for background-color */\n          }\n          cursor: pointer;\n          @media (max-width: 768px) {\n            padding: 12px;\n            font-size: 12px;\n            line-height: 14px;\n          }\n        }\n        & > div:first-child {\n          margin: unset;\n          margin: auto auto auto 24px;\n        }\n        .title {\n          display: flex;\n          align-items: center;\n          text-decoration: none;\n          gap: 10px;\n          div {\n            white-space: nowrap;\n            height: 40px;\n            display: flex;\n            color: ${isDarkModeOn ? \"#c2cdfd\" : \"#4e58a2\"};\n            align-items: center;\n            justify-content: center;\n            padding: 10px;\n            border-radius: 2px;\n            transition: all 200ms;\n            :hover {\n              background: ${color};\n              color: white;\n            }\n          }\n          img {\n            object-fit: cover;\n            width: 40px;\n            height: 40px;\n          }\n        }\n        .time {\n          display: flex;\n          align-items: center;\n          gap: 0.5rem;\n          color: ${isDarkModeOn ? \"#fff\" : \"#000\"};\n          i {\n            box-sizing: content-box;\n            color: ${isDarkModeOn ? \"#c2cdfd\" : \"#4e58a2\"};\n            cursor: pointer;\n            border-radius: 2px;\n            transition: all 200ms ease 0s;\n            :hover {\n              fill: white;\n              background: ${color};\n            }\n          }\n        }\n      }\n      .price {\n        display: flex;\n        gap: 4px;\n        align-items: center;\n        font-weight: 600;\n        color: ${isDarkModeOn ? \"#fff\" : \"#000\"};\n        img {\n          width: 14px;\n          filter: invert(${isDarkModeOn ? 1 : 0});\n        }\n      }\n      @media (max-width: 500px) {\n        .header,\n        .trx-row {\n          grid-template-columns: repeat(6, 150px);\n        }\n      }\n    }\n  `;\n  const tableToggleHander = () => {\n    setShowTable((prev) => !prev);\n  };\n  console.log(\"page\", page);\n  return (\n    <Root>\n      <LeftFilters>\n        <FilterCard>\n          <p>\n            Total Earned <img src={nearLogo} alt=\"NEAR\" />\n          </p>\n          <div className=\"count\">{YoctoToNear(totalEarnings)}</div>\n        </FilterCard>\n        <FilterCard>\n          <p>Listed Tokens</p>\n          <div className=\"count\">{totalListings}</div>\n        </FilterCard>\n      </LeftFilters>\n      <Container>\n        <div className=\"topic_line\" onClick={tableToggleHander}>\n          <p>Trading History</p>\n          <i\n            className={`bi bi-chevron-${showTable ? \"up\" : \"down\"}`}\n            style={{\n              fontSize: \"1.5rem\",\n            }}\n          ></i>\n        </div>\n        {showTable && (\n          <div className=\"table_main\">\n            <div className=\"header\">\n              <div>NFT</div>\n              <div>Earned</div>\n              <div>From</div>\n              <div>Settled</div>\n            </div>\n            <div>\n              {earnings.map((earning) => {\n                const hashData = fetch(\n                  `https://${\n                    accountId.endsWith(\".testnet\") ? \"api3-testnet\" : \"api3\"\n                  }.nearblocks.io/v1/search?keyword=${earning.offer.receiptId}`\n                );\n                console.log(\"hashData\", hashData);\n                const regex = /https?:\\/\\/[^ ]+/;\n                const found = regex.test(earning.nft_token.media);\n                const imageUrl = found\n                  ? earning.nft_token.media\n                  : `${earning.nft_token.base_uri}/${earning.nft_token.media}`;\n                return (\n                  <div className=\"trx-row\" key={earning.offer_id}>\n                    <div className=\"title\">\n                      {\" \"}\n                      <img\n                        src={\n                          \"https://image-cache-service-z3w7d7dnea-ew.a.run.app/media?url=\" +\n                          imageUrl\n                        }\n                        alt={earning.title}\n                      />\n                      <Link\n                        to={\n                          earning.offer.token.metadata_id\n                            ? `/bos.genadrop.near/widget/Mintbase.App.Index?page=nftDetails&metadataId=${earning?.offer?.token.metadata_id?.replace(\n                                \":\",\n                                \"%3A\"\n                              )}`\n                            : \"#\"\n                        }\n                        target=\"_blank\"\n                        className=\"tab\"\n                      >\n                        {earning.nft_token.title\n                          ? earning.nft_token.title.length > 7\n                            ? `${earning.nft_token.title.substring(0, 6)}...`\n                            : earning.nft_token.title\n                          : \"No Title\"}\n                      </Link>\n                    </div>\n                    <div>\n                      {\" \"}\n                      {earning.amount ? (\n                        <div className=\"price\">\n                          {YoctoToNear(earning.amount)}\n                          <img src={nearLogo} alt=\"NEAR\" />\n                        </div>\n                      ) : (\n                        <div className=\"price\">-</div>\n                      )}{\" \"}\n                    </div>\n                    <Widget\n                      src=\"near/widget/AccountProfileOverlay\"\n                      props={{\n                        accountId: earning.offer.offered_by,\n                        children: (\n                          <a\n                            href={\n                              \"https://near.org/near/widget/ProfilePage?accountId=\" +\n                              earning.offer.offered_by\n                            }\n                            className=\"address tab\"\n                            target=\"_blank\"\n                          >\n                            {_address(earning.offer.offered_by)}{\" \"}\n                          </a>\n                        ),\n                      }}\n                    />\n                    <div className=\"time\">\n                      <span>{getTimePassed(earning.timestamp)}</span>\n                      {hashData.body.receipts[0]\n                        ?.originated_from_transaction_hash && (\n                        <a\n                          href={`https://${\n                            accountId.endsWith(\"testnet\")\n                              ? \"testnet.nearblocks\"\n                              : \"nearblocks\"\n                          }.io/txns/${\n                            hashData.body.receipts[0]\n                              ?.originated_from_transaction_hash\n                          }`}\n                          target=\"_blank\"\n                          className=\"tab\"\n                        >\n                          <i class=\"bi bi-box-arrow-up-right\"></i>\n                        </a>\n                      )}\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n            {!earnings.length && (\n              <p className=\"trx-row\">\n                <div>No earnings yet</div>\n                <div>-</div>\n                <div>-</div>\n                <div>-</div>\n              </p>\n            )}\n          </div>\n        )}\n        {showTable && (\n          <p className=\"w-100 px-4\">\n            <Widget\n              src=\"bos.genadrop.near/widget/Mintbase.TablePagination\"\n              props={{\n                totalItems,\n                isDarkModeOn,\n                itemsPerPage: earnings.length,\n                currentPage: page,\n                onPageChange: (page) => setPage(page),\n              }}\n            />\n          </p>\n        )}\n      </Container>\n    </Root>\n  );\n};\nreturn <Earned {...props} />;\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bos.genadrop.near/widget/Mintbase.App.LaunchPad.Earned", "fact_widget_deployments_id": "fed8389f0838d241e7756f7e13aa6e17", "inserted_timestamp": "2024-04-26T11:43:20.585Z", "modified_timestamp": "2024-04-26T11:43:20.585Z", "__row_index": 1}