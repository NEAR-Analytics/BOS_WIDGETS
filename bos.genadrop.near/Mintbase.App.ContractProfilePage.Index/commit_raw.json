{"tx_hash": "54J85WYqd4phZadoNpVQPCc3ZfDjdyMuK4RtWbEzv4Fy", "action_id_social": "9iDppY7z3MvmXZRKd1QkAndP1K4Yv1K8p7ooqq7An5wg-0-widget", "block_id": 118565729, "block_timestamp": "2024-05-09T09:52:11.179Z", "signer_id": "bos.genadrop.near", "widget_name": "Mintbase.App.ContractProfilePage.Index", "source_code": "const accountId = props.accountId ?? \"secondjiku.mintspace2.testnet\";\nconst { MbModal, LinkTree } = VM.require(\n  \"bos.genadrop.near/widget/Mintbase.components\"\n) || {\n  MbModal: () => <></>,\n  LinkTree: () => <></>,\n};\nconst { MbInputField } = VM.require(\n  \"bos.genadrop.near/widget/Mintbase.MbInput\"\n) || {\n  MbInputField: () => <></>,\n};\nconst { getCombinedStoreData } = VM.require(\n  \"bos.genadrop.near/widget/Mintbase.utils.sdk\"\n) || {\n  getCombinedStoreData: () => {},\n};\nconst actualTabs = {\n  tabLabels: [\n    { id: 0, title: \"NFTs\" },\n    { id: 1, title: \"_About\", hidden: !connectedUserIsMinter },\n    // { id: 2, title: \"_Mint NFTS\" },\n    // { id: 3, title: \"_User Settings\", hidden: !connectedUserIsMinter },\n    { id: 7, title: \"Contract Settings\" },\n    { id: 4, title: \"Activity\" },\n    { id: 5, title: \"Analytics\" },\n  ],\n};\nconst hiddenTabs = actualTabs.tabLabels\n  .filter((tab) => !tab.hidden)\n  .map((tab) => tab.title);\nconst tabProps = { tabLabels: hiddenTabs };\nconst [selectedTab, setSelectedTab] = useState(props.tab ?? \"nfts\");\nconst [open, setOpen] = useState(false);\nconst [showOwnedFilters, setShowOwnedFilters] = useState(true);\nconst [storeData, setStoreData] = useState(null);\nconst [profile, setProfile] = useState({});\nconst isDarkModeOn = props.isDarkModeOn ?? false;\nconst handleTabClick = (index) => {\n  setSelectedTab(index);\n};\nconst Card = styled.div`\n  width: 100%;\n  border-radius: 0;\n  background-color: #f9fafb;\n  color: black;\n  &.dark {\n    color: white;\n  }\n  .content_main {\n    padding: 24px 48px;\n  }\n`;\nconst ImageSection = styled.div`\n  height: 254px;\n  background: #eceef0;\n  position: relative;\n  width: 100%;\n  img {\n    width: 126px;\n    height: 126px;\n    position: absolute;\n    bottom: -24px;\n    border: 4px solid ${isDarkModeOn ? \"#1e2030\" : \"#fff\"};\n    left: 48px;\n    background: #aa4747;\n    z-index: 1;\n    margin: 0 auto;\n    @media (max-width: 768px) {\n      width: 80px;\n      height: 80px;\n      bottom: -20px;\n      left: 50%;\n      transform: translateX(-50%);\n    }\n  }\n  @media (max-width: 1024px) {\n    margin-top: calc(var(--body-top-padding) * -1) -12px 0;\n  }\n  @media (max-width: 768px) {\n    height: 125px;\n  }\n`;\nconst TopContent = styled.div`\n  margin-top: 40px;\n  margin-bottom: 40px;\n  h1 {\n    font-size: 20px;\n  }\n  .contents {\n    display: flex;\n    flex-direction: column;\n    margin: 0;\n    .content {\n      margin: 0;\n      display: flex;\n      gap: 20px;\n      p {\n        margin: 0;\n      }\n    }\n  }\n`;\nconst Details = styled.div`\n  display: flex;\n  gap: 30px;\n  margin-top: 20px;\n  flex-wrap: wrap;\n  .detail {\n    display: flex;\n    flex-direction: column;\n    width: 112px;\n    height: 56px;\n    align-items: flex-start;\n    border-radius: 4px;\n    padding: 10px;\n    background: ${isDarkModeOn ? \"#282A3A\" : \"#f9f9f9\"};\n    span {\n      font-size: 12px;\n      font-weight: 500;\n      color: ${isDarkModeOn ? \"#B3B5BD\" : \"#404252\"};\n    }\n    p {\n      font-size: 14px;\n      font-weight: 500;\n    }\n  }\n`;\nconst Profiles = styled.div`\n  display: flex;\n  gap: 10px;\n  margin-top: 20px;\n  .bos_share {\n    display: flex;\n    gap: 10px;\n    .profile {\n      display: flex;\n      text-decoration: none;\n      color: black;\n      align-items: center;\n      width: max-content;\n      cursor: pointer;\n      font-size: 12px;\n      padding: 4px 6px;\n      border-radius: 4px;\n      border: 1px solid #b0b0b0;\n      i {\n        color: ${isDarkModeOn ? \"#fff\" : \"#000\"} !important;\n      }\n      span {\n        color: ${isDarkModeOn ? \"#fff\" : \"#000\"};\n      }\n    }\n  }\n  @media (max-width: 768px) {\n    flex-wrap: wrap;\n    flex-direction: column-reverse;\n  }\n`;\nconst queryInOwnedToggleHandler = () => {\n  setShowOwnedFilters((prev) => !prev);\n};\nconst AboutOwner = styled.div`\n  background: ${isDarkModeOn ? \"#1E2030\" : \"#FFF\"};\n  overflow: hidden;\n  .owner-details-main {\n    margin-left: 48px;\n    margin-bottom: 24px;\n  }\n  .connected-tab {\n    text-decoration: none;\n    text-align: left;\n    display: flex;\n    align-items: baseline;\n    justify-content: flex-end;\n    text-decoration: none;\n    text-transform: uppercase;\n    gap: 0.2rem;\n    border-radius: 0.25rem; /* Assuming default border radius */\n    color: ${isDarkModeOn ? \"#9FED8F\" : \"#0A7D6C\"}; /* Ternary for text color */\n    background-color: ${isDarkModeOn\n      ? \"#9FED8F33\"\n      : \"#0A7D6C1A\"}; /* Ternary for background color */\n    padding: 6px; /* Assuming Tailwind CSS default spacing unit */\n    font-weight: 700;\n    font-size: 12px;\n    line-height: 18px;\n    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1); /* Assuming Tailwind CSS default timing function and duration */\n    white-space: nowrap;\n    @media (max-width: 768px) {\n      padding: 5px;\n      font-size: 10px;\n      line-height: 14px;\n    }\n  }\n`;\nconst createStoreHandler = () => {\n  // console.log(\"createStoreHandler\");\n  setOpen(true);\n};\nuseEffect(() => {\n  getCombinedStoreData({ id: accountId, limit, offset })\n    .then(({ data, errors }) => {\n      if (errors) {\n        // handle those errors like a pro\n        console.error(errors);\n      }\n      // do something great with this precious data\n      console.log({ storeData: data });\n      setStoreData(data);\n    })\n    .catch((error) => {\n      // handle errors from fetch itself\n      console.error(error);\n    });\n  asyncFetch(`https://api.mintbase.xyz/accounts/${accountId}`, {\n    method: \"GET\",\n    headers: {\n      \"mb-api-key\": \"omni-site\",\n      \"Content-Type\": \"application/json\",\n      \"x-hasura-role\": \"anonymous\",\n    },\n  }).then((data) => {\n    if (data.body) {\n      const parseData = data.body;\n      setProfile(parseData);\n    }\n  });\n}, []);\nconst minters =\n  storeData && storeData.mb_store_minters.map((minter) => minter.minter_id);\nconst connectedUserIsMinter = minters && minters?.includes(context.accountId);\nconsole.log(\"connectedUserIsMinter\", connectedUserIsMinter);\nconst connectedUser =\n  connectedUserIsMinter &&\n  context.accountId === storeData.nft_contracts[0].owner_id\n    ? \"Owner\"\n    : \"Minter\";\nconst details = [\n  { name: \"Tokens\", value: \"1075\" },\n  { name: \"Listed Tokens\", value: \"109\" },\n  { name: \"Bought\", value: \"161.18N\" },\n  { name: \"Sales\", value: \"189.41N\" },\n  { name: \"Transactions\", value: \"1776\" },\n  { name: \"Last Activity\", value: \"3 hours ago\" },\n];\nconsole.log(\"profile\", profile);\nconst PageContent = () => {\n  switch (selectedTab) {\n    case \"nfts\":\n      return (\n        <Widget\n          src=\"bos.genadrop.near/widget/Mintbase.App.ContractProfilePage.ContractNFTs\"\n          props={{ contractId: accountId, isDarkModeOn }}\n        />\n      );\n    case \"about\":\n      return (\n        <div>\n          <h2>About User</h2> <p>Nothing to show yet</p>\n        </div>\n      );\n    case \"contract-settings\":\n      return (\n        <Widget\n          src=\"bos.genadrop.near/widget/Mintbase.App.Profile.ContractSettings.Index\"\n          props={{ contractId: accountId, isDarkModeOn }}\n        />\n      );\n    case \"activity\":\n      return (\n        <Widget\n          src={`bos.genadrop.near/widget/Mintbase.App.ContractProfilePage.Activity`}\n          props={{ isDarkModeOn, contract: accountId }}\n        />\n      );\n    case \"analytics\":\n      return (\n        <Widget\n          src={`bos.genadrop.near/widget/Mintbase.App.ContractProfilePage.Analytics`}\n          props={{ isDarkModeOn, contract: accountId }}\n        />\n      );\n    case \"user-settings\":\n      return (\n        <div>\n          <h2>User Settings</h2>\n          <div className=\"user-settings\">\n            <div className=\"user-settings__item\">\n              <h3>Profile</h3>\n              <Widget\n                src={`bos.genadrop.near/widget/Mintbase.App.Profile`}\n                props={{\n                  accountId,\n                  isDarkModeOn,\n                }}\n              />\n            </div>\n            <div className=\"user-settings__item\">\n              <h3>Notifications</h3>\n              <Widget\n                src={`bos.genadrop.near/widget/Mintbase.App.Notifications`}\n                props={{\n                  accountId,\n                  isDarkModeOn,\n                }}\n              />\n            </div>\n            <div className=\"user-settings__item\">\n              <h3>Security</h3>\n              <Widget\n                src={`bos.genadrop.near/widget/Mintbase.App.Security`}\n                props={{\n                  accountId,\n                  isDarkModeOn,\n                }}\n              />\n            </div>\n          </div>\n        </div>\n      );\n    default:\n      return null;\n  }\n};\nconst [count, setCount] = useState(0);\nconst verifiedBatch = (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    enable-background=\"new 0 0 24 24\"\n    height=\"18px\"\n    viewBox=\"0 0 24 24\"\n    width=\"18px\"\n    fill={isDarkModeOn ? \"#fff\" : \"#000000\"}\n    class=\"fill-current text-blue-300 dark:text-blue-100\"\n  >\n    <g>\n      <rect fill=\"none\" height=\"24\" width=\"24\"></rect>\n    </g>\n    <g>\n      <path d=\"M23,12l-2.44-2.79l0.34-3.69l-3.61-0.82L15.4,1.5L12,2.96L8.6,1.5L6.71,4.69L3.1,5.5L3.44,9.2L1,12l2.44,2.79l-0.34,3.7 l3.61,0.82L8.6,22.5l3.4-1.47l3.4,1.46l1.89-3.19l3.61-0.82l-0.34-3.69L23,12z M10.09,16.72l-3.8-3.81l1.48-1.48l2.32,2.33 l5.85-5.87l1.48,1.48L10.09,16.72z\"></path>\n    </g>\n  </svg>\n);\nconst nearLogo =\n  \"https://ipfs.near.social/ipfs/bafkreib2cfbayerbbnoya6z4qcywnizqrbkzt5lbqe32whm2lubw3sywr4\";\nconst background = profile.backgroundImage\n  ? profile.headerImage ??\n    `https://ipfs.near.social/ipfs/${profile.backgroundImage.ipfs_cid}`\n  : \"https://ipfs.near.social/ipfs/bafkreiajgp5bmkidwesy2d6tsbdkhyfzjtom2wse2sjcwii227lt5audvq\";\nreturn (\n  <Card className={isDarkModeOn ? \"dark\" : \"\"}>\n    <AboutOwner>\n      <ImageSection\n        style={{\n          backgroundImage: `url(${background})`,\n          backgroundSize: \"cover\",\n          backgroundPosition: \"center\",\n          backgroundRepeat: \"no-repeat\",\n        }}\n      >\n        <img\n          loading=\"lazy\"\n          decoding=\"async\"\n          data-nimg=\"fill\"\n          src={\n            profile.image\n              ? profile.profileImage ??\n                `https://ipfs.near.social/ipfs/${profile.image.ipfs_cid}`\n              : \"https://ipfs.near.social/ipfs/bafkreiajgp5bmkidwesy2d6tsbdkhyfzjtom2wse2sjcwii227lt5audvq\"\n          }\n          alt={`${profile.displayName || profile.name} profile image`}\n        />\n      </ImageSection>\n      <div className=\"owner-details-main\">\n        <TopContent>\n          <h1>\n            {storeData.nft_contracts[0].name || accountId || \"Store Name\"}\n            {/* {verifiedBatch} */}\n          </h1>\n          <div className=\"contents\">\n            <div className=\"content\">\n              <p>Address</p>\n              <Widget\n                src={`bos.genadrop.near/widget/Mintbase.MbActionText`}\n                props={{\n                  text: accountId,\n                  size: \"medium\",\n                  copyText: accountId,\n                  link: `https://nearblocks.io/address/${accountId}`,\n                  iconTab: false,\n                  showCopyIcon: true,\n                  isDarkModeOn: isDarkModeOn,\n                }}\n              />\n            </div>\n          </div>\n        </TopContent>\n        <Details>\n          {details.map((data, key) => (\n            <div className=\"detail\" key={key}>\n              <span>{data.name}</span>\n              <p>{data.value}</p>\n            </div>\n          ))}\n        </Details>\n        <Profiles>\n          <LinkTree links={profile.linktree} isDarkModeOn={isDarkModeOn} />\n          <div className=\"bos_share\">\n            <a\n              href={`https://${accountId}.social`}\n              target=\"_blank\"\n              className=\"profile\"\n            >\n              <Widget\n                src=\"bos.genadrop.near/widget/Mintbase.MbIcon\"\n                props={{\n                  name: \"near\",\n                  color: isDarkModeOn ? \"mb-white\" : \"mb-black\",\n                  size: \"16px\",\n                }}\n              />\n              <span>BOS</span>\n            </a>\n            <div key={index} className=\"profile\">\n              <i className=\"bi bi-box-arrow-up\"></i>\n              <span>Share</span>\n            </div>\n          </div>\n          {connectedUserIsMinter && (\n            <div className=\"connected-tab\">{connectedUser} CONNECTED</div>\n          )}\n        </Profiles>\n      </div>\n    </AboutOwner>\n    <Widget\n      src={`bos.genadrop.near/widget/Mintbase.MbTabs`}\n      props={{\n        ...tabProps,\n        activeTab: selectedTab,\n        onTabChange: handleTabClick,\n        isDarkModeOn,\n        hasQueryToggle: selectedTab === \"owned\" || selectedTab === \"minted\",\n        onQueryToggle: queryInOwnedToggleHandler,\n      }}\n    />\n    <div\n      className=\"d-flex flex-column align-items-center content_main\"\n      style={{\n        backgroundColor: `${isDarkModeOn ? \"#101223\" : \"#F9F9F9\"}`,\n      }}\n    >\n      <PageContent />\n    </div>\n    <MbModal\n      open={modalIsOpen}\n      setOpen={setModalIsOpen}\n      topElement={\n        <h4 style={{ marginRight: \"8px\" }}>Let's Create Your Store</h4>\n      }\n      isDarkModeOn={isDarkModeOn}\n      onClose={null}\n      topElementFirst={true}\n    >\n      <Widget\n        src={`bos.genadrop.near/widget/Mintbase.App.Store.CreateForm`}\n        props={{\n          isDarkModeOn,\n          onCancel: () => setModalIsOpen(false),\n          setModalOpen: setModalIsOpen,\n        }}\n      />\n    </MbModal>\n  </Card>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bos.genadrop.near/widget/Mintbase.App.ContractProfilePage.Index", "fact_widget_deployments_id": "efcf59328ef7932db5e114b4165354d6", "inserted_timestamp": "2024-05-09T11:43:16.695Z", "modified_timestamp": "2024-05-09T11:43:16.695Z", "__row_index": 2}