{"tx_hash": "3t96h1uYoHMgn9jc9n47EQtz6gnVTfEGqNifEKEfXyoR", "action_id_social": "CBzRbo8PRnMDbtczsKnmXbVqYW4FD4G4VnDGjaUKJT8z-0-widget", "block_id": 117657323, "block_timestamp": "2024-04-26T10:09:01.207Z", "signer_id": "bos.genadrop.near", "widget_name": "Mintbase.utils.get_open_offers_by_account", "source_code": "function fetchGraphQL(operationsDoc, operationName, variables) {\n  return asyncFetch(\n    `https://graph.mintbase.xyz/${\n      variables.account && variables.account.endsWith(\".testnet\")\n        ? \"testnet\"\n        : \"mainnet\"\n    }`,\n    {\n      method: \"POST\",\n      headers: {\n        \"mb-api-key\": \"anon\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        query: operationsDoc,\n        variables: variables,\n        operationName: operationName,\n      }),\n    }\n  ).then((result) => result.body);\n}\nconst operationsDoc = `\n      query GetOpenOffersByAccount($account: String!, $limit: Int!, $offset: Int!) {\n        nft_offers(\n          where: {offered_by: {_eq: $account}, listing: {kind: {_eq: \"auction\"}}}\n          order_by: {offered_at: desc}\n          limit: $limit\n          offset: $offset\n        ) {\n          offered_by\n          offer_price\n          offered_at\n          invalidated_at\n          expires_at\n          receipt_id\n          withdrawn_at\n          nft_contract_id\n          token_id\n          market_id\n          accepted_at\n          currency\n          listing {\n            listed_by\n            unlisted_at\n            accepted_at\n            invalidated_at\n            approval_id\n            currency\n            token_id\n            offers {\n              invalidated_at\n              __typename\n            }\n            __typename\n          }\n          token {\n            metadata_id\n            __typename\n          }\n          nft_token {\n            media\n            base_uri\n            title\n            __typename\n          }\n          __typename\n        }\n        nft_offers_aggregate(\n          where: {offered_by: {_eq: $account}, listing: {kind: {_eq: \"auction\"}}}\n        ) {\n          aggregate {\n            count\n            __typename\n          }\n          __typename\n        }\n      }\n    `;\nfunction getOpenOffersByAccount({ account, limit, offset }) {\n  return fetchGraphQL(operationsDoc, \"GetOpenOffersByAccount\", {\n    account: account,\n    limit: limit ?? 10,\n    offset: offset ?? 0,\n  });\n}\nreturn { getOpenOffersByAccount };\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bos.genadrop.near/widget/Mintbase.utils.get_open_offers_by_account", "fact_widget_deployments_id": "1752b62e6d638ecedf77530aa94be173", "inserted_timestamp": "2024-04-26T11:43:20.585Z", "modified_timestamp": "2024-04-26T11:43:20.585Z", "__row_index": 0}