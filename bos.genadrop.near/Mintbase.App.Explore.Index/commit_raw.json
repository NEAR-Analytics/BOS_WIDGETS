{"tx_hash": "9uAg65rE9PvAZfhDrKUf2Gp7QvUrBDivBjRhVXpC2ohE", "action_id_social": "85YY2vXFQGcoWMkuBEjbWR2RzfgNNXXEVPYiQ92Xieen-0-widget", "block_id": 114750016, "block_timestamp": "2024-03-15T10:19:18.121Z", "signer_id": "bos.genadrop.near", "widget_name": "Mintbase.App.Explore.Index", "source_code": "const { isDarkModeOn, tab } = props;\n\nconst rightArrow = (\n  <svg\n    width=\"24px\"\n    height=\"24px\"\n    viewBox=\"0 0 24 24\"\n    fill=\"currentColor\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    class=\"fill-current text-white dark:text-black\"\n  >\n    <g clip-path=\"url(#clip0_2025_39245)\">\n      <path\n        d=\"M12.0001 4.00003L10.5901 5.41003L16.1701 11L4.00006 11L4.00006 13L16.1701 13L10.5801 18.58L12.0001 20L20.0001 12L12.0001 4.00003Z\"\n        fill=\"currentColor\"\n      ></path>\n    </g>\n    <defs>\n      <clipPath id=\"clip0_2025_39245\">\n        <rect\n          width=\"24\"\n          height=\"24\"\n          fill=\"white\"\n          transform=\"translate(24) rotate(90)\"\n        ></rect>\n      </clipPath>\n    </defs>\n  </svg>\n);\n\nconst ExplorePage = styled.div`\n  background: #f3f4f8;\n  padding: 24px;\n`;\n\nconst Routes = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: flex-start;\n  width: 100%;\n  gap: 40px;\n  p {\n    text-decoration: none;\n    padding: 10px;\n    border-radius: 8px;\n    transition: 0.5s ease-in-out;\n    font-weight: 500;\n    cursor: pointer;\n    color: #4f58a3;\n    &:hover {\n      background-color: #90cdf4;\n    }\n  }\n  .active {\n    background-color: ${isDarkModeOn ? \"#3a1c28\" : \"#fedfde\"};\n    color: #ff5c5c;\n  }\n  .active:hover {\n    background-color: ${isDarkModeOn ? \"#3a1c28\" : \"#fedfde\"};\n  }\n  @media (max-width: 500px) {\n    overflow-x: scroll;\n  }\n`;\n\nconst FeaturedCardContainer = styled.div`\n  margin-top: 30px;\n  position: relative;\n  height: 300px;\n`;\n\nconst FeaturedCard = styled.div`\n  width: 600px;\n  height: 299px;\n  background: ${isDarkModeOn ? \"#1f2130\" : \"#fff\"};\n  display: flex;\n  flex-direction: column;\n  .image {\n    width: 100%;\n    height: 145px !important;\n\n    img {\n      width: 100%;\n      height: 145px !important;\n      object-fit: cover;\n    }\n  }\n  .content {\n    height: 100px;\n    position: relative;\n    display: flex;\n    h1 {\n      font-size: 20px;\n      align-self: center;\n      margin-top: 5px;\n      font-weight: bold;\n      color: ${isDarkModeOn ? \"#fff\" : \"#000\"};\n      margin-left: 150px;\n    }\n    .topImage {\n      position: absolute;\n      bottom: 40%;\n      left: 4%;\n      img {\n        width: 106px;\n        height: 106px;\n        border: 1px solid ${isDarkModeOn ? \"#1f2130\" : \"#fff\"};\n        object-fit: cover;\n      }\n    }\n  }\n`;\n\nconst Gallery = styled.div`\n  position: absolute;\n  top: 0;\n  max-width: 1300px;\n  display: flex;\n  margin: 1rem auto;\n  align-items: center;\n  .arrow-l {\n    rotate: 180deg;\n  }\n  .arrow-r,\n  .arrow-l {\n    cursor: pointer;\n    border-radius: 50%;\n    padding: 8px 10px 10px 10px;\n    border: 1px solid black;\n    background: black;\n    svg {\n      padding: 0;\n      margin: 0;\n    }\n  }\n  .slider-display {\n    position: relative;\n    width: 210rem;\n    height: 357px;\n    overflow: hidden;\n    @media only screen and (max-width: 927px) {\n      width: 32rem;\n    }\n    @media only screen and (max-width: 627px) {\n      width: 20rem;\n    }\n  }\n  .slider-track {\n    transition: all 300ms ease;\n    position: absolute;\n    display: flex;\n    gap: 2rem;\n    justify-content: center;\n    .nft-card {\n      width: 15rem;\n      height: 15rem;\n      border-radius: 10px;\n      overflow: hidden;\n      img {\n        transition: all 300ms ease-in-out;\n      }\n      :hover img {\n        scale: 1.1;\n      }\n    }\n  }\n  @media (max-width: 500px) {\n    top: 100%;\n  }\n`;\n\nconst CardContainers = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  align-items: center;\n  gap: 5px;\n  margin-top: 40px;\n`;\n\nconst pageRoutes = {\n  AI: {\n    name: \"AI\",\n    link: \"\",\n  },\n  Art: {\n    name: \"Arts\",\n    link: \"\",\n  },\n  DAOs: {\n    name: \"DAOs\",\n    link: \"\",\n  },\n  Gaming: {\n    name: \"Gaming\",\n    link: \"\",\n  },\n  Music: {\n    name: \"Music\",\n    link: \"\",\n  },\n  PFPs: {\n    name: \"PFPs\",\n    link: \"\",\n  },\n  Philanthropy: {\n    name: \"Philanthropy\",\n    link: \"\",\n  },\n  Utility: {\n    name: \"Utility\",\n    link: \"\",\n  },\n  newListings: {\n    name: \"New Listings\",\n    link: \"\",\n  },\n};\n\nconst MarketPage = ({ isDarkModeOn, tab }) => {\n  const [activeTab, setActiveTab] = useState(-1);\n  const [currentTab, setCurrentTab] = useState(tab || \"Featured\");\n  const [filteredData, setFilteredData] = useState([]);\n  const [page, setPage] = useState(1);\n\n  const handleTabClick = (index) => {\n    const fieldName = Object.keys(pageRoutes)[index];\n    setActiveTab(index);\n    setCurrentTab(pageRoutes[fieldName].name);\n    setPage(1);\n  };\n\n  const fetchExploreData = useCallback(() => {\n    asyncFetch(\"https://api.mintbase.xyz/explore\", {\n      method: \"GET\",\n      headers: {\n        \"mb-api-key\": \"omni-site\",\n        \"Content-Type\": \"application/json\",\n        \"x-hasura-role\": \"anonymous\",\n      },\n    }).then((data) => {\n      if (data.body) {\n        const parseData = JSON.parse(data.body);\n        setFilteredData(\n          Object.values(\n            parseData[currentTab === \"Arts\" ? \"Art\" : currentTab]\n          )?.map((data) => ({\n            id: data?.storeData?.contract,\n            title: data?.storeData?.displayName ?? data?.storeData?.contract,\n            totalMinted: data?.totalMinted,\n            totalOwners: data?.uniqueOwners,\n            image: data?.storeData?.profileImage,\n            displayImage: data?.storeData?.headerImage,\n            listings: data?.listings,\n          }))\n        );\n      }\n    });\n  }, [currentTab, activeTab]);\n\n  useEffect(() => {\n    fetchExploreData();\n  }, [activeTab]);\n\n  useEffect(() => {\n    if (tab) {\n      setCurrentTab(tab);\n      const index = Object.keys(pageRoutes).findIndex((key) => key === tab);\n      setActiveTab(index);\n    }\n  }, [tab]);\n\n  const HandleUpSlide = () => {\n    if (page < filteredData?.length - 1) {\n      setPage(page + 1);\n    } else {\n      setPage(0);\n    }\n  };\n  const HandleDownSlide = () => {\n    if (page > 0) {\n      setPage(page - 1);\n    } else {\n      setPage(filteredData?.length - 1);\n    }\n  };\n\n  return (\n    <ExplorePage>\n      <Routes>\n        {Object.values(pageRoutes).map((data, index) => (\n          <p\n            className={activeTab === index ? \"active\" : \"\"}\n            onClick={() => handleTabClick(index)}\n          >\n            <div>{data.name}</div>\n          </p>\n        ))}\n      </Routes>\n      <FeaturedCardContainer>\n        <Gallery>\n          <div onClick={HandleDownSlide} className=\"arrow-l\">\n            {rightArrow}\n          </div>\n          <div className=\"slider-display\">\n            <div\n              className=\"slider-track\"\n              style={{\n                transform: `translateX(-${12 * page}rem)`,\n              }}\n            >\n              {filteredData.length > 0 &&\n                filteredData?.map((data, index) => (\n                  <FeaturedCard key={index}>\n                    <div className=\"image\">\n                      <img\n                        src={\n                          data?.image ||\n                          \"https://www.mintbase.xyz/images/store-header-light.png\"\n                        }\n                        alt=\"image\"\n                      />\n                    </div>\n                    <div className=\"content\">\n                      <div className=\"topImage\">\n                        <img\n                          src={\n                            data?.profileImage ||\n                            \"https://www.mintbase.xyz/images/store-light.png\"\n                          }\n                        />\n                      </div>\n                      <h1>{data?.id || \"mutart.mintbase1.near\"}</h1>\n                    </div>\n                  </FeaturedCard>\n                ))}\n            </div>\n          </div>\n          <div onClick={HandleUpSlide} className=\"arrow-r\">\n            {rightArrow}\n          </div>\n        </Gallery>\n      </FeaturedCardContainer>\n      <CardContainers>\n        {filteredData.length > 0 &&\n          filteredData?.map(\n            (\n              {\n                title,\n                totalMinted,\n                totalOwners,\n                image,\n                displayImage,\n                listings,\n              },\n              index\n            ) => (\n              <Widget\n                key={index}\n                src={`bos.genadrop.near/widget/Mintbase.MbFeaturedCard`}\n                props={{\n                  title,\n                  totalMinted,\n                  totalOwners,\n                  image,\n                  displayImage,\n                  listings,\n                }}\n              />\n            )\n          )}\n      </CardContainers>\n    </ExplorePage>\n  );\n};\n\nreturn <MarketPage isDarkModeOn={props?.isDarkModeOn} tab={props.tab} />;\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bos.genadrop.near/widget/Mintbase.App.Explore.Index", "fact_widget_deployments_id": "a06bdd3da40b12d12866b47fe10b5afd", "inserted_timestamp": "2024-03-15T11:25:32.474Z", "modified_timestamp": "2024-03-15T12:29:14.311Z", "__row_index": 2}