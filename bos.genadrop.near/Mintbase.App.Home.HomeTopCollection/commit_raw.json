{"tx_hash": "FKrB7nx7qERb4yM1fgr915ZVaEAgmKkCvpV4VEfzPT39", "action_id_social": "2CsQgPNzrq1nkH1MhgGMGTZL3YMVVfG6fBezeu9xn11u-0-widget", "block_id": 114148011, "block_timestamp": "2024-03-05T14:55:50.137Z", "signer_id": "bos.genadrop.near", "widget_name": "Mintbase.App.Home.HomeTopCollection", "source_code": "const { getInputLabelFontType } = VM.require(\n  \"bos.genadrop.near/widget/Mintbase.components\"\n);\n\nconst color = props.color || \"#c2cdfd\";\nconst mode = props?.mode;\nconst isDarkModeOn = mode === \"dark\";\n\nconst [sliceIndex, setSliceIndex] = useState(6);\n\nconst data = fetch(\"https://api.mintbase.xyz/stores/top-stores\", {\n  method: \"GET\",\n  headers: {\n    \"mb-api-key\": \"anon\",\n    \"Content-Type\": \"application/json\",\n  },\n});\n\nconst tableData = JSON.parse(data?.body);\n\nif (!tableData) return <div>No Data Available</div>;\n\nconst App = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst Container = styled.div`\n  background: ${isDarkModeOn ? \"#1f2031\" : \"#fff\"};\n  display: flex;\n  flex-direction: column;\n  overflow-x: scroll;\n  width: 50%;\n  @media (max-width: 1000px) {\n    display: ${(props) => {\n      return props.hide ? \"none\" : \"block\";\n    }};\n    width: 100%;\n  }\n  @media (max-width: 500px) {\n    font-size: 12px;\n    .number {\n      grid-column: span 1 !important;\n    }\n  }\n  .header {\n    display: grid;\n    grid-template-columns: repeat(4, minmax(0, 1fr));\n    align-items: flex-end;\n    justify-content: space-between;\n    padding: 1rem 0;\n    gap: 1rem;\n    border-bottom: 2px solid ${isDarkModeOn ? \"#374151\" : \"#E5E7EB\"};\n    color: ${isDarkModeOn ? \"#4B5563\" : \"black\"};\n    margin-bottom: 1rem;\n    font-weight: 500px;\n    div {\n      text-align: center;\n    }\n  }\n  @media (max-width: 500px) {\n    .header {\n      grid-template-columns: repeat(3, minmax(0, 1fr));\n    }\n\n    .header > *:nth-child(4) {\n      display: none;\n    }\n  }\n  .trx-row {\n    display: grid;\n    grid-template-columns: repeat(4, minmax(0, 1fr));\n    width: 100%;\n    justify-content: space-between;\n    gap: 1rem;\n    padding: 1rem 0;\n    border-bottom: 1px solid ${color}5a;\n    &:last-of-type {\n      border-bottom-color: transparent;\n    }\n    a {\n      text-decoration: none;\n    }\n    div,\n    a,\n    span {\n      text-align: center;\n      margin: auto;\n    }\n    .title {\n      display: flex;\n      align-items: flex-start;\n      flex: 1;\n      text-decoration: none;\n      width: 100%;\n      gap: 10px;\n      div {\n        white-space: nowrap;\n        height: 40px;\n        color: ${isDarkModeOn ? \"#c2cdfd\" : \"#4e58a2\"};\n        padding: 10px;\n        margin: 0;\n        margin-right: 200px;\n        text-align: left !important;\n        border-radius: 2px;\n        transition: all 200ms;\n\n        :hover {\n          background: ${color};\n          color: white;\n        }\n        @media (max-width: 500px) {\n          font-size: 12px;\n        }\n      }\n      img {\n        object-fit: cover;\n        width: 40px;\n        height: 40px;\n      }\n    }\n  }\n  @media (max-width: 500px) {\n    .trx-row {\n      grid-template-columns: repeat(3, minmax(0, 1fr));\n    }\n    .trx-row > *:nth-child(4) {\n      display: none;\n    }\n  }\n  .price {\n    display: flex;\n    gap: 4px;\n    align-items: center;\n    font-weight: 600;\n    color: ${isDarkModeOn ? \"#c2cdfd\" : \"#4e58a2\"};\n    img {\n      width: 14px;\n    }\n  }\n`;\n\nconst Button = styled.div`\n  color: black;\n  border: 1px solid #000;\n  border-radius: 6px;\n  padding: 5px 10px;\n`;\n\nconst Trx = styled.div``;\nconst kindColor = {\n  list: \"#8c4fe5\",\n  unlist: \"#8c4fe5\",\n  sale: \"#0a7d6c\",\n  transfer: \"#4f58a3\",\n  make_offer: \"#4f58a3\",\n  mint: \"#000000\",\n};\n\nreturn (\n  <App>\n    <Container>\n      <div className=\"header\">\n        <div></div>\n        <div>Store</div>\n        <div>Transactions</div>\n        <div>Owners</div>\n      </div>\n      <div>\n        {tableData.slice(0, sliceIndex).map((activity, index) => {\n          return (\n            <div className=\"trx-row\" key={activity.id}>\n              <div className=\"number\">{index + 1}</div>\n              <a target=\"_blank\" className=\"title\" href={activity.websiteUrl}>\n                <img\n                  src={activity.icon || activity.profileImage || activity.media}\n                  alt={activity.name}\n                />\n                {activity?.name && <div>{activity.name}</div>}\n              </a>\n\n              <div>\n                {\" \"}\n                {activity.transactions ? (\n                  <div className=\"price\">{activity.transactions}</div>\n                ) : (\n                  <div className=\"price\">-</div>\n                )}{\" \"}\n              </div>\n              <div className=\"price\">{activity?.totalOwners}</div>\n            </div>\n          );\n        })}\n      </div>\n    </Container>\n    <Container hide={true}>\n      <div className=\"header\">\n        <div></div>\n        <div>Store</div>\n        <div>Transactions</div>\n        <div>Owners</div>\n      </div>\n      <div>\n        {tableData.slice(6).map((activity, index) => {\n          return (\n            <div className=\"trx-row\" key={activity.id}>\n              <div>{7 + index}</div>\n              <a target=\"_blank\" className=\"title\" href={activity.websiteUrl}>\n                <img\n                  src={activity.icon || activity.profileImage || activity.media}\n                  alt={activity.name}\n                />\n                {activity?.name && <div>{activity.name}</div>}\n              </a>\n\n              <div>\n                {\" \"}\n                {activity.transactions ? (\n                  <div className=\"price\">{activity.transactions}</div>\n                ) : (\n                  <div className=\"price\">-</div>\n                )}{\" \"}\n              </div>\n              <div className=\"price\">{activity?.totalOwners}</div>\n            </div>\n          );\n        })}\n      </div>\n    </Container>\n  </App>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bos.genadrop.near/widget/Mintbase.App.Home.HomeTopCollection", "fact_widget_deployments_id": "e3c8f0388033d3999dfab6eb342f39eb", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 1}