{"tx_hash": "A9gUdjtqYGgAx7mzZMrCWfHzoX7mWABH7mLFwZhiUyQA", "action_id_social": "A2coecr48byEFfzhpnpacByM6NU3Sa1N9EXqBwYuPFTr-0-widget", "block_id": 116102608, "block_timestamp": "2024-04-04T08:36:32.081Z", "signer_id": "bos.genadrop.near", "widget_name": "Mintbase.App.Hero.Index", "source_code": "const accountId = props.accountId ?? \"bos.genadrop.near\";\nconst { getInputLabelFontType } = VM.require(\n  \"bos.genadrop.near/widget/Mintbase.components\"\n);\n\nconst { isDarkModeOn } = props;\n\nconst { href } = VM.require(\"buildhub.near/widget/lib.url\") || {\n  href: () => {},\n};\n\nconst NearIcon = (\n  <svg\n    width=\"20px\"\n    height=\"20px\"\n    viewBox=\"0 0 18 18\"\n    fill=\"currentColor\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    class=\"fill-current text-white dark:text-undefined\"\n  >\n    <path\n      d=\"M5.10976 4.05615C5.47596 4.05615 5.81596 4.24601 6.00779 4.55812L8.07455 7.62657C8.14188 7.7277 8.11455 7.86404 8.01343 7.93136C7.93145 7.98601 7.823 7.97925 7.74835 7.91502L5.71399 6.15052C5.68019 6.1201 5.62807 6.12319 5.59765 6.157C5.58385 6.17249 5.57652 6.19249 5.57652 6.21305V11.7376C5.57652 11.7832 5.61343 11.8198 5.65906 11.8198C5.68357 11.8198 5.70667 11.8091 5.72216 11.7902L11.8717 4.42911C12.072 4.19277 12.3661 4.05643 12.6757 4.05615H12.8906C13.4723 4.05615 13.9438 4.5277 13.9438 5.10939V12.8902C13.9438 13.4719 13.4723 13.9435 12.8906 13.9435C12.5244 13.9435 12.1844 13.7536 11.9926 13.4415L9.92582 10.3731C9.8585 10.2719 9.88582 10.1356 9.98695 10.0683C10.0689 10.0136 10.1774 10.0204 10.252 10.0846L12.2864 11.8491C12.3202 11.8795 12.3723 11.8764 12.4027 11.8426C12.4165 11.8271 12.4238 11.8071 12.4236 11.7866V6.26066C12.4236 6.21503 12.3867 6.17841 12.341 6.17841C12.3168 6.17841 12.2934 6.18911 12.2779 6.20798L6.1292 13.5705C5.92892 13.8069 5.63483 13.9432 5.32526 13.9435H5.11033C4.52864 13.9438 4.05681 13.4725 4.05624 12.8908V5.10939C4.05624 4.5277 4.52779 4.05615 5.10948 4.05615H5.10976Z\"\n      fill=\"currentColor\"\n    ></path>\n  </svg>\n);\n\nconst rightArrow = (\n  <svg\n    width=\"24px\"\n    height=\"24px\"\n    viewBox=\"0 0 24 24\"\n    fill=\"currentColor\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    class=\"fill-current text-white dark:text-black\"\n  >\n    <g clip-path=\"url(#clip0_2025_39245)\">\n      <path\n        d=\"M12.0001 4.00003L10.5901 5.41003L16.1701 11L4.00006 11L4.00006 13L16.1701 13L10.5801 18.58L12.0001 20L20.0001 12L12.0001 4.00003Z\"\n        fill=\"currentColor\"\n      ></path>\n    </g>\n    <defs>\n      <clipPath id=\"clip0_2025_39245\">\n        <rect\n          width=\"24\"\n          height=\"24\"\n          fill=\"white\"\n          transform=\"translate(24) rotate(90)\"\n        ></rect>\n      </clipPath>\n    </defs>\n  </svg>\n);\n\nconst Home = styled.div``;\n\nconst Hero = styled.div`\n  display: flex; /* flex */\n  flex-direction: column;\n  position: relative;\n  width: 100%; /* w-full */\n  justify-content: center;\n  height: ${context.accountId ? \"\" : \"75vh\"};\n  align-items: center;\n  @media (min-width: 768px) {\n    padding-bottom: 7rem; /* md:pb-28 */\n  }\n  @media (min-width: 1280px) {\n  }\n  @media (min-width: 1600px) {\n  }\n  justify-content: center; /* justify-center */\n\n  .hero {\n    display: flex; /* flex */\n    flex-direction: column; /* flex-col */\n    z-index: 30; /* z-30 */\n    gap: 24px; /* gap-24 */\n    align-items: center; /* items-center */\n    text-align: center; /* text-center */\n    padding: 16px; /* p-16 */\n    width: 100%;\n    h1 {\n      color: #e087ff;\n      font-size: 48px;\n      line-height: 50px;\n    }\n    .subText {\n      font-size: 24px; /* h2-90 */\n      color: #cad0d8;\n      font-weight: bold;\n      text-align: center; /* text-center */\n      max-width: 976px; /* max-w-screen-lg */\n      z-index: 10; /* z-10 */\n    }\n  }\n  .card {\n    height: 100%; /* h-full */\n    cursor: pointer; /* cursor-pointer */\n    padding: 16px; /* p-24 */\n    color: #d1d5db; /* text-purple-100 */\n    background-color: rgba(12, 18, 33, 0.6); /* bg-opacity-50 */\n    min-width: 169px;\n    z-index: 30; /* z-30 */\n    transition: 0.5s ease-in-out;\n    border-radius: 8px; /* rounded */\n    color: #e087ff;\n\n    &:hover {\n      background-color: rgb(12, 18, 33); /* hover:bg-mb-blackblue */\n    }\n    .innerCard {\n      text-align: center; /* text-center */\n      word-break: break-word; /* break-words */\n      vertical-align: middle; /* align-middle */\n      backdrop-filter: blur(50px);\n\n      text-align: center; /* align-text-center */\n      .cardText {\n        ${getInputLabelFontType(\"big\")}\n        font-weight: bold;\n        padding-right: 24px; /* pr-24 */\n        padding-left: 24px; /* pl-24 */\n      }\n    }\n  }\n  .cards {\n    display: grid;\n    grid-template-columns: repeat(4, 200px);\n    grid-gap: 10px;\n    margin-top: 20px;\n    margin-bottom: 70px;\n    a {\n      text-decoration: none;\n    }\n  }\n  .featuredCards {\n    position: absolute;\n    top: 80%;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    width: 100%;\n  }\n  @media (max-width: 500px) {\n    .hero {\n      h1 {\n        font-size: 35px;\n      }\n      .subText {\n        font-size: 20px;\n      }\n    }\n    .cards {\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n    }\n  }\n`;\n\nconst Routes = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  gap: 40px;\n  .route {\n    text-decoration: none;\n    color: #4f59a2;\n    height: max-content !important;\n    padding: 10px;\n    border-radius: 8px;\n    transition: 0.5s ease-in-out;\n    &:hover {\n      background: #fff;\n    }\n  }\n  @media (max-width: 500px) {\n    overflow-x: scroll;\n  }\n`;\n\nconst Table = styled.div``;\n\nconst Gallery = styled.div`\n  position: absolute;\n  top: 80%;\n  max-width: 1300px;\n  display: flex;\n  margin: 1rem auto;\n  align-items: center;\n  .arrow-l {\n    rotate: 180deg;\n  }\n  .arrow-r,\n  .arrow-l {\n    cursor: pointer;\n    border-radius: 50%;\n    padding: 8px 10px 10px 10px;\n    border: 1px solid black;\n    background: black;\n    svg {\n      padding: 0;\n      margin: 0;\n    }\n  }\n  .slider-display {\n    position: relative;\n    width: 210rem;\n    height: 357px;\n    overflow: hidden;\n    @media only screen and (max-width: 927px) {\n      width: 32rem;\n    }\n    @media only screen and (max-width: 627px) {\n      width: 20rem;\n    }\n  }\n  .slider-track {\n    transition: all 300ms ease;\n    position: absolute;\n    display: flex;\n    gap: 2rem;\n    justify-content: center;\n    .nft-card {\n      width: 15rem;\n      height: 15rem;\n      border-radius: 10px;\n      overflow: hidden;\n      img {\n        transition: all 300ms ease-in-out;\n      }\n      :hover img {\n        scale: 1.1;\n      }\n    }\n  }\n  @media (max-width: 500px) {\n    top: 100%;\n  }\n`;\n\nconst FeaturedCard = styled.div`\n  border-radius: 0.25rem; /* rounded */\n  background-color: ${isDarkModeOn ? \"#1f2130\" : \"#fff\"};\n  padding: 12px; /* p-12 */\n  max-height: 600px;\n  height: 357px;\n  width: 418px;\n  border: 0 solid;\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n  gap: 30px;\n  @media (min-width: 768px) {\n    padding: 24px; /* md:p-24 */\n  }\n  .head {\n    display: flex;\n    align-items: center;\n    h1 {\n      ${getInputLabelFontType(\"big\")}\n      font-weight: bold;\n      margin-right: 4px;\n      color: ${isDarkModeOn ? \"#fff\" : \"#000\"};\n      font-size: 20px !important;\n    }\n    img {\n      width: 50px;\n      height: 60px;\n      object-fit: cover;\n      margin-right: 10px;\n      border-radius: 4px;\n    }\n  }\n  .stats {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    .stat {\n      padding: 12px;\n      width: 179px;\n      background-color: ${isDarkModeOn ? \"#272a3a\" : \"#f9f9f9\"};\n      border-radius: 4px;\n      display: flex;\n      flex-direction: column;\n      align-items: flex-start;\n      height: 72px;\n      span {\n        ${getInputLabelFontType(\"medium\")}\n        color: ${isDarkModeOn ? \"#fff\" : \"#000\"};\n      }\n      p {\n        margin-top: 20px;\n        ${getInputLabelFontType(\"big\")}\n        color: ${isDarkModeOn ? \"#fff\" : \"#000\"};\n      }\n    }\n  }\n  .cards {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-between;\n    gap: 20px;\n  }\n  @media (max-width: 500px) {\n    width: 269px;\n    height: 269px;\n    .head {\n      h1 {\n        font-size: 17px !important;\n      }\n    }\n    .cards {\n      gap: 2px !important;\n    }\n  }\n`;\n\nconst NFTCard = styled.div`\n  width: 115px;\n  height: 115px;\n  display: flex;\n  flex-direction: column-reverse;\n  align-items: center;\n  background-image: ${(props) => `url(${props.bgImage})`};\n  background-size: cover;\n  .amount {\n    background: #000;\n    border-radius: 4px;\n    min-width: 50px;\n    text-align: center;\n    padding: 6px;\n    margin-bottom: 7px;\n    span {\n      color: #fff;\n      font-weight: 600;\n      ${getInputLabelFontType(\"big\")}\n    }\n  }\n  @media (max-width: 500px) {\n    width: 73px;\n    height: 73px;\n  }\n`;\n\nconst size = \"100%\";\n\nconst [page, setPage] = useState(0);\nconst [featuredNFTs, setFeaturedNFTs] = useState([]);\n\nfunction fetchNFTDetails() {\n  asyncFetch(\"https://api.mintbase.xyz/explore\", {\n    method: \"GET\",\n    headers: {\n      \"mb-api-key\": \"omni-site\",\n      \"Content-Type\": \"application/json\",\n      \"x-hasura-role\": \"anonymous\",\n    },\n  }).then((data) => {\n    if (data.body) {\n      const parsedData = JSON.parse(data.body);\n      setFeaturedNFTs(Object.values(parsedData?.Featured));\n    }\n  });\n}\n\nfetchNFTDetails();\n\nconst HandleUpSlide = () => {\n  if (page < featuredNFTs.length - 1) {\n    setPage(page + 1);\n  } else {\n    setPage(0);\n  }\n};\nconst HandleDownSlide = () => {\n  if (page > 0) {\n    setPage(page - 1);\n  } else {\n    setPage(featuredNFTs.length - 1);\n  }\n};\n\nconst cardItems = [\n  { name: \"Developers\", link: \"https://templates.mintbase.xyz/\" },\n  { name: \"Creator Drop\", link: \"https://wallet.mintbase.xyz/create-drop\" },\n  { name: \"Market\", tab: \"markets\" },\n  {\n    name: \"Mint with AI\",\n    link: \"https://wallet.mintbase.xyz/create-account?success_url=https://wallet.mintbase.xyz/smart-actions\",\n  },\n];\n\nconst pageRoutes = [\n  {\n    name: \"AI\",\n    link: \"AI\",\n  },\n  {\n    name: \"Arts\",\n    link: \"Art\",\n  },\n  {\n    name: \"DAOs\",\n    link: \"DAOs\",\n  },\n  {\n    name: \"Gaming\",\n    link: \"Gaming\",\n  },\n  {\n    name: \"Music\",\n    link: \"Music\",\n  },\n  {\n    name: \"PFPs\",\n    link: \"PFPs\",\n  },\n  {\n    name: \"Philanthropy\",\n    link: \"Philanthropy\",\n  },\n  {\n    name: \"Utility\",\n    link: \"Utility\",\n  },\n  {\n    name: \"New Listings\",\n    link: \"newListings\",\n  },\n];\nconst YoctoToNear = (amountYocto) => {\n  return new Big(amountYocto || 0).div(new Big(10).pow(24)).toString();\n};\n\nreturn (\n  <Home>\n    <Hero>\n      <div style={{ width: \"100%\" }}>\n        <div className=\"\">\n          {context.accountId ? (\n            <>\n              <Widget\n                src=\"bos.genadrop.near/widget/Mintbase.App.Home.HomeContracts\"\n                props={{ isDarkModeOn, tabs }}\n              />\n            </>\n          ) : (\n            <div className=\"hero\">\n              <h1>The Digital Assets Factory</h1>\n              <div className=\"subText\">\n                Easiest hub for brands, creators, and developers pioneering\n                blockchain and AI\n              </div>\n              <div className=\"cards\">\n                {cardItems.map((data) =>\n                  !data.link ? (\n                    <Link\n                      key={data.name}\n                      to={\n                        data.tab &&\n                        href({\n                          widgetSrc:\n                            \"bos.genadrop.near/widget/Mintbase.App.Index\",\n                          params: {\n                            page: data.tab,\n                          },\n                        })\n                      }\n                    >\n                      <a>\n                        <div className=\"card\">\n                          <div className=\"innerCard\">\n                            <div className=\"cardText\">{data.name}</div>\n                          </div>\n                        </div>\n                      </a>\n                    </Link>\n                  ) : (\n                    <a href={data.link} target={data.link ? \"_blank\" : \"\"}>\n                      <div className=\"card\">\n                        <div className=\"innerCard\">\n                          <div className=\"cardText\">{data.name}</div>\n                        </div>\n                      </div>\n                    </a>\n                  )\n                )}\n              </div>\n              <Routes>\n                {pageRoutes.map((data) => (\n                  <Link\n                    key={data.name}\n                    className=\"route\"\n                    to={href({\n                      widgetSrc:\n                        \"bos.genadrop.near/widget/Mintbase.App.Index\",\n                      params: {\n                        page: \"markets\",\n                        tab: data.link,\n                      },\n                    })}\n                  >\n                    <a>\n                      <div>{data.name}</div>\n                    </a>\n                  </Link>\n                ))}\n              </Routes>\n            </div>\n          )}\n        </div>\n      </div>\n      <Gallery>\n        <div onClick={HandleDownSlide} className=\"arrow-l\">\n          {rightArrow}\n        </div>\n        <div className=\"slider-display\">\n          <div\n            className=\"slider-track\"\n            style={{\n              transform: `translateX(-${12 * page}rem)`,\n            }}\n          >\n            {featuredNFTs.length > 0 &&\n              featuredNFTs?.map((value, key) => (\n                <FeaturedCard key={key}>\n                  <div className=\"head\">\n                    <img src={value.storeData.profileImage} alt=\"\" />\n                    <h1>{value?.storeData?.displayName}</h1>\n                  </div>\n                  <div className=\"stats\">\n                    <div className=\"stat\">\n                      <span>Total Minted</span>\n                      <p>{value?.totalMinted}</p>\n                    </div>\n                    <div className=\"stat\">\n                      <span>Owners</span>\n                      <p>{value?.uniqueOwners}</p>\n                    </div>\n                  </div>\n                  <div className=\"cards\">\n                    {value?.listings?.length > 0 &&\n                      value?.listings?.map((data) => (\n                        <NFTCard\n                          bgImage={`https://image-cache-service-z3w7d7dnea-ew.a.run.app/small?url=${data.media}`}\n                        >\n                          <div className=\"amount\">\n                            <span>{YoctoToNear(data.price)}</span>\n                            {NearIcon}\n                          </div>\n                        </NFTCard>\n                      ))}\n                  </div>\n                </FeaturedCard>\n              ))}\n          </div>\n        </div>\n        <div onClick={HandleUpSlide} className=\"arrow-r\">\n          {rightArrow}\n        </div>\n      </Gallery>\n    </Hero>\n  </Home>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bos.genadrop.near/widget/Mintbase.App.Hero.Index", "fact_widget_deployments_id": "728ac84c9d4ea73cb8ca02401efa5836", "inserted_timestamp": "2024-04-04T10:37:54.677Z", "modified_timestamp": "2024-04-04T10:37:54.677Z", "__row_index": 6}