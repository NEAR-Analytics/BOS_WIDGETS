{"tx_hash": "ANAE6tt34MGwHey9fq6c49Cn12ud4Wgk4frsvobWZQiw", "action_id_social": "311c1kyj8rRGWskn6DdSSFx39CwaXBFkzGA7j181kJJQ-0-widget", "block_id": 117436302, "block_timestamp": "2024-04-23T07:26:49.644Z", "signer_id": "bos.genadrop.near", "widget_name": "Mintbase.App.LaunchPad.Contracts", "source_code": "const { getUserStores } = VM.require(\n  \"bos.genadrop.near/widget/Mintbase.utils.sdk\"\n) || {\n  getUserStores: () => <></>,\n};\n\nconst { MbModal } = VM.require(\n  \"bos.genadrop.near/widget/Mintbase.components\"\n) || {\n  MbModal: () => <></>,\n};\nconst isDarkModeOn = props.isDarkModeOn;\n\nconst Root = styled.div`\n  display: flex;\n  flex-flow: column nowrap;\n  width: 100%;\n  .top {\n    display: flex;\n    justify-content: space-between;\n    .lhs {\n      text-transform: uppercase;\n      font-weight: 600;\n      font-size: 14px;\n      color: ${isDarkModeOn ? \"#B3B5BD\" : \"#525c76\"};\n    }\n    .rhs {\n      display: flex;\n      gap: 10px;\n      margin-left: -12px;\n      .tab {\n        display: flex;\n        align-items: baseline;\n        justify-content: flex-end;\n        text-decoration: none;\n        gap: 0.2rem;\n        border-radius: 0.25rem; /* Assuming default border radius */\n        color: ${isDarkModeOn\n          ? \"#C5D0FF\"\n          : \"#4F58A3\"}; /* Ternary for text color */\n        padding: 8px 12px; /* Assuming Tailwind CSS default spacing unit */\n        font-weight: 500;\n        font-size: 16px;\n        line-height: 18px;\n        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1); /* Assuming Tailwind CSS default timing function and duration */\n        white-space: nowrap;\n\n        &:focus {\n          outline: 2px solid transparent; /* Assuming Tailwind CSS default focus outline */\n          outline-offset: 2px; /* Assuming Tailwind CSS default focus outline offset */\n          box-shadow: 0 0 0 2px\n            ${isDarkModeOn\n              ? \"rgba(59, 130, 246, 0.5)\"\n              : \"rgba(66, 153, 225, 0.5)\"}; /* Ternary for box-shadow */\n          background-color: ${isDarkModeOn\n            ? \"rgba(59, 130, 246, 0.35)\"\n            : \"rgba(66, 153, 225, 0.15)\"}; /* Ternary for background-color */\n        }\n\n        &:hover {\n          background-color: ${isDarkModeOn\n            ? \"rgba(59, 130, 246, 0.15)\"\n            : \"rgba(66, 153, 225, 0.15)\"}; /* Ternary for background-color */\n        }\n\n        cursor: pointer;\n        @media (max-width: 768px) {\n          padding: 12px;\n          font-size: 12px;\n          line-height: 14px;\n        }\n      }\n    }\n  }\n  .pagination_container {\n    width: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    align-content: center;\n  }\n  .create-area {\n    h3 {\n      color: ${isDarkModeOn ? \"#fff\" : \"#000\"};\n      font-weight: 700;\n      @media (max-width: 768px) {\n        font-size: 20px;\n      }\n    }\n    p {\n      max-width: 500px;\n      color: ${isDarkModeOn ? \"#B3B5BD\" : \"#404252\"};\n    }\n  }\n`;\n\nconst MainCardsGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n  grid-gap: 34px;\n  border-radius: 0.7em;\n  width: 100%;\n  margin-top: 1em;\n`;\n\nconst Contracts = () => {\n  const accountId = context.accountId;\n  const [stores, setStores] = useState(null);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n\n  useEffect(() => {\n    getUserStores(accountId)\n      .then(({ data, errors }) => {\n        if (errors) {\n          console.error(errors);\n        }\n        setStores(data.launchpad_contracts);\n      })\n      .catch((error) => {\n        console.error(\"in contracts\", error);\n      });\n  }, [accountId]);\n\n  if (!stores) return \"Loading ...\";\n\n  if (!accountId)\n    return (\n      <div className=\"text-center mx-auto\">\n        Please connect your wallet to view your contracts or create a new one.\n      </div>\n    );\n\n  const createStoreHandler = () => {\n    setModalIsOpen(true);\n  };\n\n  return (\n    <Root>\n      {stores.length ? (\n        <>\n          <div className=\"top\">\n            <div className=\"lhs\">Your Contracts </div>\n            <div className=\"rhs\">\n              <div className=\"tab\">View All</div>\n              <div className=\"tab\" onClick={() => setModalIsOpen(true)}>\n                New Contract\n              </div>\n            </div>\n          </div>\n          <MainCardsGrid>\n            {stores.map(\n              (store) =>\n                store && (\n                  <Widget\n                    src={`bos.genadrop.near/widget/Mintbase.App.Store.Card`}\n                    props={{\n                      isDarkModeOn,\n                      accountId,\n                      contract: store,\n                    }}\n                  />\n                )\n            )}\n          </MainCardsGrid>\n        </>\n      ) : (\n        <div className=\"text-center mx-auto\">\n          <div className=\"d-flex flex-column align-items-center gap-4 create-area\">\n            <div>\n              <h3 className=\"mb-2\">Deploy your own store to mint NFTs from</h3>{\" \"}\n              <p>\n                You don't have any stores yet \u2014 let's create your first one! Or\n                refresh the page if you just deployed (could take up to 5\n                minutes).\n              </p>\n            </div>\n            <Widget\n              src={`bos.genadrop.near/widget/Mintbase.MbButton`}\n              props={{\n                label: \"New Store\",\n                onClick: createStoreHandler,\n                size: \"big\",\n                isDarkModeOn,\n              }}\n            />\n          </div>\n        </div>\n      )}\n      <MbModal\n        open={modalIsOpen}\n        setOpen={setModalIsOpen}\n        topElement={\n          <h4 style={{ marginRight: \"8px\" }}>Let's Create Your Store</h4>\n        }\n        isDarkModeOn={isDarkModeOn}\n        onClose={null}\n        topElementFirst={true}\n      >\n        <Widget\n          src={`bos.genadrop.near/widget/Mintbase.App.Store.CreateForm`}\n          props={{\n            isDarkModeOn,\n            onCancel: () => setModalIsOpen(false),\n            setModalOpen: setModalIsOpen,\n          }}\n        />\n      </MbModal>\n    </Root>\n  );\n};\n\nreturn <Contracts {...props} />;\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bos.genadrop.near/widget/Mintbase.App.LaunchPad.Contracts", "fact_widget_deployments_id": "d226c6dc6ed554f477c6d054a2802506", "inserted_timestamp": "2024-04-23T09:44:05.024Z", "modified_timestamp": "2024-04-23T09:44:05.024Z", "__row_index": 1}