{"tx_hash": "4noDoxcrxdVLqZ9SH9x7VqhLAYrzAsBwnu4SU72fK22S", "action_id_social": "9Ra8K5S1D8A9k4vP5zsrk5JoZh7HWiHGFBgPTBwgKkYH-0-widget", "block_id": 119339143, "block_timestamp": "2024-05-20T10:50:21.709Z", "signer_id": "bos.genadrop.near", "widget_name": "Mintbase.App.LaunchPad.Contracts", "source_code": "const { getUserStores } = VM.require(\n  \"bos.genadrop.near/widget/Mintbase.utils.sdk\"\n) || {\n  getUserStores: () => <></>,\n};\nconst { MbModal } = VM.require(\n  \"bos.genadrop.near/widget/Mintbase.components\"\n) || {\n  MbModal: () => <></>,\n};\nconst isDarkModeOn = props.isDarkModeOn;\nconst isHome = props.isHome;\nconst Root = styled.div`\n  display: flex;\n  flex-flow: column nowrap;\n  width: 100%;\n  .top {\n    display: flex;\n    justify-content: space-between;\n    .lhs {\n      text-transform: uppercase;\n      font-weight: 600;\n      font-size: 14px;\n      color: ${isDarkModeOn ? \"#B3B5BD\" : \"#525c76\"};\n    }\n    .rhs {\n      display: flex;\n      gap: 10px;\n      margin-left: -12px;\n    }\n  }\n  .pagination_container {\n    width: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    align-content: center;\n  }\n  .create-area {\n    h3 {\n      color: ${isDarkModeOn ? \"#fff\" : \"#000\"};\n      font-weight: 700;\n      @media (max-width: 768px) {\n        font-size: 20px;\n      }\n    }\n    p {\n      max-width: 500px;\n      color: ${isDarkModeOn ? \"#B3B5BD\" : \"#404252\"};\n    }\n  }\n  .tab {\n    display: flex;\n    align-items: baseline;\n    justify-content: flex-end;\n    text-decoration: none;\n    gap: 0.2rem;\n    border-radius: 0.25rem; /* Assuming default border radius */\n    color: ${isDarkModeOn ? \"#C5D0FF\" : \"#4F58A3\"}; /* Ternary for text color */\n    padding: 8px 12px; /* Assuming Tailwind CSS default spacing unit */\n    font-weight: 500;\n    font-size: 16px;\n    line-height: 18px;\n    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1); /* Assuming Tailwind CSS default timing function and duration */\n    white-space: nowrap;\n    &:focus {\n      outline: 2px solid transparent; /* Assuming Tailwind CSS default focus outline */\n      outline-offset: 2px; /* Assuming Tailwind CSS default focus outline offset */\n      box-shadow: 0 0 0 2px\n        ${isDarkModeOn ? \"rgba(59, 130, 246, 0.5)\" : \"rgba(66, 153, 225, 0.5)\"}; /* Ternary for box-shadow */\n      background-color: ${isDarkModeOn\n        ? \"rgba(59, 130, 246, 0.35)\"\n        : \"rgba(66, 153, 225, 0.15)\"}; /* Ternary for background-color */\n    }\n    &:hover {\n      background-color: ${isDarkModeOn\n        ? \"rgba(59, 130, 246, 0.15)\"\n        : \"rgba(66, 153, 225, 0.15)\"}; /* Ternary for background-color */\n    }\n    cursor: pointer;\n    @media (max-width: 768px) {\n      padding: 12px;\n      font-size: 12px;\n      line-height: 14px;\n    }\n  }\n`;\nconst MainCardsGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n  grid-gap: 34px;\n  border-radius: 0.7em;\n  width: 100%;\n  margin-top: 1em;\n`;\nconst handsSvg = (\n  <svg\n    width=\"40px\"\n    height=\"40px\"\n    viewBox=\"0 0 16 16\"\n    fill=\"currentColor\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    class=\"fill-current text-blue-300 dark:text-blue-100\"\n  >\n    <path\n      d=\"M8.00562 3.58602C8.03364 3.19799 8.16179 2.82386 8.37756 2.50014C8.59332 2.17643 8.88934 1.91419 9.23671 1.73902C9.58408 1.56386 9.97094 1.48175 10.3595 1.50072C10.7481 1.5197 11.1251 1.6391 11.4537 1.84727C11.4913 1.87185 11.5216 1.9061 11.5414 1.94642C11.5611 1.98674 11.5697 2.03164 11.5661 2.0764C11.5625 2.12116 11.5469 2.16413 11.521 2.2008C11.4951 2.23746 11.4598 2.26647 11.4187 2.28477C10.8474 2.54181 10.3625 2.95833 10.0221 3.48429C9.68172 4.01025 9.50044 4.62328 9.5 5.24977C9.5 5.32289 9.5 5.39602 9.5075 5.46789C9.51095 5.51332 9.50191 5.55883 9.48137 5.5995C9.46084 5.64017 9.42957 5.67445 9.39097 5.69864C9.35236 5.72283 9.30788 5.73602 9.26233 5.73677C9.21677 5.73752 9.17188 5.7258 9.1325 5.70289C8.76417 5.49221 8.46292 5.18166 8.26353 4.8071C8.06414 4.43253 7.97473 4.00922 8.00562 3.58602ZM15 10.0379C15.0009 10.3236 14.9217 10.6038 14.7715 10.8469C14.6213 11.0899 14.406 11.286 14.15 11.4129L14.1225 11.4254L11.6956 12.4591C11.6716 12.4697 11.6467 12.4781 11.6213 12.4841L7.62125 13.4841C7.58163 13.4943 7.54091 13.4996 7.5 13.4998H1C0.734784 13.4998 0.48043 13.3944 0.292893 13.2069C0.105357 13.0193 0 12.765 0 12.4998V9.99977C0 9.73455 0.105357 9.4802 0.292893 9.29266C0.48043 9.10512 0.734784 8.99977 1 8.99977H2.79312L4.20687 7.58539C4.39225 7.39919 4.61269 7.25156 4.85546 7.15104C5.09822 7.05052 5.3585 6.99911 5.62125 6.99977H8.75C9.01411 6.99974 9.2748 7.05949 9.51253 7.17454C9.75026 7.28959 9.95887 7.45696 10.1227 7.6641C10.2866 7.87124 10.4014 8.11278 10.4586 8.37061C10.5158 8.62845 10.514 8.89589 10.4531 9.15289L13.0681 8.55164C13.2958 8.49136 13.5342 8.48415 13.7651 8.53058C13.996 8.577 14.2131 8.67582 14.3998 8.81942C14.5864 8.96302 14.7376 9.14755 14.8417 9.35881C14.9457 9.57006 14.9999 9.80239 15 10.0379ZM14 10.0379C13.9999 9.95522 13.9808 9.87368 13.9441 9.79959C13.9074 9.72551 13.8542 9.66087 13.7885 9.6107C13.7227 9.56053 13.6464 9.52617 13.5652 9.51029C13.4841 9.49441 13.4004 9.49744 13.3206 9.51914L13.3013 9.52414L9.11375 10.4873C9.07702 10.4955 9.03951 10.4997 9.00187 10.4998H7C6.86739 10.4998 6.74021 10.4471 6.64645 10.3533C6.55268 10.2596 6.5 10.1324 6.5 9.99977C6.5 9.86716 6.55268 9.73998 6.64645 9.64621C6.74021 9.55245 6.86739 9.49977 7 9.49977H8.75C8.94891 9.49977 9.13968 9.42075 9.28033 9.2801C9.42098 9.13944 9.5 8.94868 9.5 8.74977C9.5 8.55086 9.42098 8.36009 9.28033 8.21944C9.13968 8.07879 8.94891 7.99977 8.75 7.99977H5.62125C5.48988 7.99935 5.35974 8.02505 5.23839 8.07537C5.11703 8.12569 5.0069 8.19963 4.91437 8.29289L3.5 9.70664V12.4998H7.4375L11.3394 11.5241L13.7144 10.5129C13.8008 10.4673 13.8731 10.399 13.9235 10.3153C13.9738 10.2315 14.0003 10.1356 14 10.0379ZM10.5 5.24977C10.5 5.69478 10.632 6.12979 10.8792 6.4998C11.1264 6.86981 11.4778 7.1582 11.889 7.3285C12.3001 7.49879 12.7525 7.54335 13.189 7.45653C13.6254 7.36972 14.0263 7.15543 14.341 6.84076C14.6557 6.52609 14.87 6.12518 14.9568 5.68872C15.0436 5.25226 14.999 4.79986 14.8287 4.38873C14.6584 3.9776 14.37 3.62619 14 3.37896C13.63 3.13173 13.195 2.99977 12.75 2.99977C12.1533 2.99977 11.581 3.23682 11.159 3.65878C10.7371 4.08073 10.5 4.65303 10.5 5.24977Z\"\n      fill=\"currentColor\"\n    ></path>\n  </svg>\n);\nconst boxSvg = (\n  <svg\n    width=\"40px\"\n    height=\"40px\"\n    viewBox=\"0 0 22 22\"\n    fill=\"currentColor\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    class=\"fill-current text-blue-300 dark:text-blue-100\"\n  >\n    <path d=\"M20.24 0H7.92C7.45322 0 7.00556 0.185428 6.67549 0.515492C6.34543 0.845556 6.16 1.29322 6.16 1.76V6.16H1.76C1.29322 6.16 0.845556 6.34543 0.515492 6.67549C0.185428 7.00556 0 7.45322 0 7.92V20.24C0 20.4711 0.0455238 20.7 0.133972 20.9135C0.22242 21.1271 0.352061 21.3211 0.515492 21.4845C0.678923 21.6479 0.872944 21.7776 1.08648 21.866C1.30001 21.9545 1.52887 22 1.76 22H14.08C14.3111 22 14.54 21.9545 14.7535 21.866C14.9671 21.7776 15.1611 21.6479 15.3245 21.4845C15.4879 21.3211 15.6176 21.1271 15.706 20.9135C15.7945 20.7 15.84 20.4711 15.84 20.24V15.84H20.24C20.7068 15.84 21.1544 15.6546 21.4845 15.3245C21.8146 14.9944 22 14.5468 22 14.08V1.76C22 1.52887 21.9545 1.30001 21.866 1.08648C21.7776 0.872944 21.6479 0.678923 21.4845 0.515492C21.3211 0.352061 21.1271 0.22242 20.9135 0.133972C20.7 0.0455238 20.4711 0 20.24 0ZM14.08 20.24H1.76V7.92H6.16V14.08C6.16 14.5468 6.34543 14.9944 6.67549 15.3245C7.00556 15.6546 7.45322 15.84 7.92 15.84H14.08V20.24ZM20.24 14.08H7.92V1.76H20.24V14.08Z\"></path>\n  </svg>\n);\nconst planeIcon = (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"35\"\n    height=\"35\"\n    fill=\"currentColor\"\n    class=\"bi bi-airplane-fill\"\n    viewBox=\"0 0 16 16\"\n  >\n    <path d=\"M6.428 1.151C6.708.591 7.213 0 8 0s1.292.592 1.572 1.151C9.861 1.73 10 2.431 10 3v3.691l5.17 2.585a1.5 1.5 0 0 1 .83 1.342V12a.5.5 0 0 1-.582.493l-5.507-.918-.375 2.253 1.318 1.318A.5.5 0 0 1 10.5 16h-5a.5.5 0 0 1-.354-.854l1.319-1.318-.376-2.253-5.507.918A.5.5 0 0 1 0 12v-1.382a1.5 1.5 0 0 1 .83-1.342L6 6.691V3c0-.568.14-1.271.428-1.849\" />\n  </svg>\n);\nconst walletSvg = (\n  <svg\n    width=\"40px\"\n    height=\"40px\"\n    viewBox=\"0 0 14 12\"\n    fill=\"currentColor\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    class=\"fill-current text-blue-300 dark:text-blue-100\"\n  >\n    <path\n      d=\"M8.86441 11.1794L6.26186 8.57688L6.96441 7.87433L8.86441 9.75383L12.6439 5.97433L13.3464 6.6974L8.86441 11.1794ZM1.66698 2.60257V4.73073H12.3336V2.60257H1.66698ZM0.666992 1.20513C0.666992 0.868377 0.783659 0.583333 1.01699 0.35C1.25033 0.116667 1.53537 0 1.87213 0H12.1285C12.4652 0 12.7503 0.116667 12.9836 0.35C13.217 0.583333 13.3336 0.868377 13.3336 1.20513V4.73073H12.0042L8.86441 7.8705L6.97466 5.98075L4.37853 8.57688L4.79136 8.99998V9.99997H1.87213C1.53537 9.99997 1.25033 9.8833 1.01699 9.64997C0.783659 9.41663 0.666992 9.13159 0.666992 8.79483V1.20513Z\"\n      fill=\"currentColor\"\n    ></path>\n  </svg>\n);\nconst documentSvg = (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"36\"\n    height=\"36\"\n    fill=\"currentColor\"\n    class=\"bi bi-file-earmark-fill\"\n    viewBox=\"0 0 16 16\"\n  >\n    <path d=\"M4 0h5.293A1 1 0 0 1 10 .293L13.707 4a1 1 0 0 1 .293.707V14a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2m5.5 1.5v2a1 1 0 0 0 1 1h2z\" />\n  </svg>\n);\nconst CardsContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(5, minmax(0, 1fr));\n  gap: 40px;\n  margin-top: 40px;\n  width: 100%;\n  .card {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 239px;\n    padding: 5px;\n    background: transparent;\n    border-radius: 4px;\n    border: 1px dashed ${(props) => (props.isDarkModeOn ? \"#f8f8f8\" : \"#000\")};\n    &:hover {\n      background: ${(props) => (props.isDarkModeOn ? \"#070C2B\" : \"white\")};\n    }\n    i {\n      width: 40px;\n      height: 40px;\n      color: #4e58a2;\n    }\n    svg {\n      color: ${(props) => (props.isDarkModeOn ? \"#c5d1fe\" : \"#4e58a2\")};\n    }\n    a {\n      text-decoration: none;\n    }\n    .button {\n      border: 1px solid #9496a1;\n      transition: 0.3s ease-in-out;\n      color: #000;\n      font-size: 14px;\n      padding: 5px 15px;\n      color: ${(props) => (props.isDarkModeOn ? \"#fff\" : \"#000\")};\n      margin: 10px 0;\n      border-radius: 4px;\n      &:hover {\n        background-color: rgba(59, 130, 246, 0.2);\n        border-color: rgba(59, 130, 246, 0.2);\n      }\n    }\n  }\n  @media (max-width: 500px) {\n    display: flex;\n    flex-direction: column;\n    flex-wrap: wrap;\n  }\n`;\nconst cardsData = [\n  {\n    icon: handsSvg,\n    buttonLink: {\n      uri: \"https://wallet.mintbase.xyz/connect?transactions_data=%5B%7B%22receiverId%22%3A%220.drop.proxy.mintbase.near%22%2C%22actions%22%3A%5B%7B%22type%22%3A%22FunctionCall%22%2C%22params%22%3A%7B%22methodName%22%3A%22mint%22%2C%22args%22%3A%7B%22metadata%22%3A%22%7B%5C%22media%5C%22%3A%5C%22l_GYnLYzrm5_a4RDh0oVXLvAWR5LOwux7ByO_HHqAsc%5C%22%2C%5C%22creatorAddress%5C%22%3A%5C%22nate.near%5C%22%2C%5C%22title%5C%22%3A%5C%22%5C%22%2C%5C%22description%5C%22%3A%5C%22%5C%22%7D%22%2C%22nft_contract_id%22%3A%22drops.mintbase1.near%22%7D%2C%22gas%22%3A%22200000000000000%22%2C%22deposit%22%3A%2213500000000000000000000%22%7D%7D%5D%7D%5D&isDrop=true\",\n      isBlank: true,\n    },\n    buttonName: \"Claim NFT\",\n    learnLink: \"https://docs.mintbase.xyz/wallet/overview\",\n  },\n  {\n    icon: boxSvg,\n    buttonLink: {\n      uri: \"https://wallet.mintbase.xyz/create-drop\",\n      isBlank: true,\n    },\n    buttonName: \"Create Drop\",\n    learnLink: \"https://docs.mintbase.xyz/wallet/overview\",\n  },\n  {\n    icon: walletSvg,\n    buttonLink: {\n      uri: \"/bos.genadrop.near/widget/Mintbase.App.Index?page=manage&tab=stripe-connection\",\n      isBlank: false,\n    },\n    buttonName: \"Connect Stripe\",\n    learnLink: \"https://docs.mintbase.xyz/market/stripe-connection\",\n  },\n  {\n    icon: planeIcon,\n    buttonLink: {\n      uri: \"https://wallet.mintbase.xyz/smart-actions\",\n      isBlank: true,\n    },\n    buttonName: \"Mint with AI\",\n    learnLink: \"https://docs.mintbase.xyz/ai/getting-started\",\n  },\n  {\n    icon: documentSvg,\n    buttonName: \"Deploy NFT Contract\",\n    learnLink:\n      \"https://docs.mintbase.xyz/creator/creating-nfts/deploy-contract\",\n  },\n];\nconst Contracts = () => {\n  const accountId = context.accountId;\n  const [stores, setStores] = useState(null);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  useEffect(() => {\n    getUserStores(accountId)\n      .then(({ data, errors }) => {\n        if (errors) {\n          console.error(errors);\n        }\n        setStores(data.launchpad_contracts);\n      })\n      .catch((error) => {\n        console.error(\"in contracts\", error);\n      });\n  }, [accountId]);\n  if (!stores) return \"Loading ...\";\n  if (!accountId)\n    return (\n      <div className=\"text-center mx-auto\">\n        Please connect your wallet to view your contracts or create a new one.\n      </div>\n    );\n  const createStoreHandler = () => {\n    setModalIsOpen(true);\n  };\n  return (\n    <Root>\n      {!stores.length &&\n        !isHome(\n          <div\n            className=\"text-center mx-auto mt-100\"\n            style={{ padding: \"200px 0\" }}\n          >\n            <div className=\"d-flex flex-column align-items-center gap-4 create-area\">\n              <div>\n                <h3 className=\"mb-2\">\n                  Deploy your own store to mint NFTs from\n                </h3>{\" \"}\n                <p>\n                  You don't have any stores yet \u2014 let's create your first one!\n                  Or refresh the page if you just deployed (could take up to 5\n                  minutes).\n                </p>\n              </div>\n              <Widget\n                src={`bos.genadrop.near/widget/Mintbase.MbButton`}\n                props={{\n                  label: \"New Store\",\n                  onClick: createStoreHandler,\n                  size: \"big\",\n                  isDarkModeOn,\n                }}\n              />\n            </div>\n          </div>\n        )}\n      <>\n        <div className=\"top\">\n          <div className=\"lhs\">Your Contracts </div>\n          <div className=\"rhs\">\n            <div className=\"tab\">View All</div>\n            {stores.length ? (\n              <div className=\"tab\" onClick={() => setModalIsOpen(true)}>\n                New Contract\n              </div>\n            ) : (\n              \"\"\n            )}\n          </div>\n        </div>\n        {stores.length ? (\n          <MainCardsGrid>\n            {stores.map(\n              (store) =>\n                store && (\n                  <Widget\n                    src={`bos.genadrop.near/widget/Mintbase.App.Store.Card`}\n                    props={{\n                      isDarkModeOn,\n                      accountId,\n                      contract: store,\n                    }}\n                  />\n                )\n            )}\n          </MainCardsGrid>\n        ) : (\n          <>\n            <CardsContainer isDarkModeOn={isDarkModeOn}>\n              {cardsData.map((data) => (\n                <div className=\"card\" key={data.buttonName}>\n                  {data.icon ? (\n                    data?.icon\n                  ) : (\n                    <i className=\"bi bi-airplane-fill icon\"></i>\n                  )}\n                  {data.buttonLink ? (\n                    <a\n                      className=\"button\"\n                      href={data.buttonLink.uri}\n                      target={data.buttonLink.isBlank && \"_blank\"}\n                    >\n                      {data.buttonName}\n                    </a>\n                  ) : (\n                    <a\n                      role=\"button\"\n                      className=\"button\"\n                      onClick={createStoreHandler}\n                    >\n                      {data.buttonName}\n                    </a>\n                  )}\n                  <a className=\"tab\" href={data.learnLink} target=\"_blank\">\n                    Learn more\n                  </a>\n                </div>\n              ))}\n            </CardsContainer>\n          </>\n        )}\n      </>\n      <MbModal\n        open={modalIsOpen}\n        setOpen={setModalIsOpen}\n        topElement={\n          <h4 style={{ marginRight: \"8px\" }}>Let's Create Your Store</h4>\n        }\n        isDarkModeOn={isDarkModeOn}\n        onClose={null}\n        topElementFirst={true}\n      >\n        <Widget\n          src={`bos.genadrop.near/widget/Mintbase.App.Store.CreateForm`}\n          props={{\n            isDarkModeOn,\n            onCancel: () => setModalIsOpen(false),\n            setModalOpen: setModalIsOpen,\n          }}\n        />\n      </MbModal>\n    </Root>\n  );\n};\nreturn <Contracts {...props} />;\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bos.genadrop.near/widget/Mintbase.App.LaunchPad.Contracts", "fact_widget_deployments_id": "709469085a7eb8d016fb72f282f63a71", "inserted_timestamp": "2024-05-20T12:58:45.841Z", "modified_timestamp": "2024-05-20T12:58:45.841Z", "__row_index": 1}