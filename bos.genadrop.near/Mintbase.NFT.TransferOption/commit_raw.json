{"tx_hash": "A9gUdjtqYGgAx7mzZMrCWfHzoX7mWABH7mLFwZhiUyQA", "action_id_social": "A2coecr48byEFfzhpnpacByM6NU3Sa1N9EXqBwYuPFTr-0-widget", "block_id": 116102608, "block_timestamp": "2024-04-04T08:36:32.081Z", "signer_id": "bos.genadrop.near", "widget_name": "Mintbase.NFT.TransferOption", "source_code": "const { nftTransfer } = VM.require(\n  \"bos.genadrop.near/widget/Mintbase.NFT.modules\"\n);\n\nconst cancelSvg = (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    height=\"24px\"\n    viewBox=\"0 0 24 24\"\n    width=\"24px\"\n  >\n    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"></path>\n    <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12 19 6.41z\"></path>\n  </svg>\n);\n\nconst TransferContainer = styled.div`\n  width: 600px;\n  height: 542px;\n  background: ${(props) => (props.isDarkModeOn ? \"#1f2031\" : \"#fff\")};\n  padding-top: 15px;\n`;\nconst Top = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 30px;\n  height: 60px;\n\n  border-bottom: 1px solid\n    ${(props) => (props.isDarkModeOn ? \"#3e4352\" : \"#e7ebee\")};\n  p {\n    font-weight: bold;\n    color: ${(props) => (props.isDarkModeOn ? \"#fff\" : \"#000\")};\n  }\n  p:last-child {\n    cursor: pointer;\n  }\n`;\n\nconst Token = styled.div`\n  background: ${(props) => (props.isDarkModeOn ? \"#262a3b\" : \"#f8f8f8\")};\n  display: flex;\n  align-items: center;\n  padding-top: 10px;\n  justify-content: center;\n  p {\n    color: ${(props) => (props.isDarkModeOn ? \"#fff\" : \"#000\")};\n  }\n`;\n\nconst Content = styled.div`\n  height: 228px;\n  overflow-y: scroll;\n  border-bottom: 1px solid #e7ebee;\n\n  .text {\n    padding: 20px;\n    p:first-child {\n      color: ${(props) => (props.isDarkModeOn ? \"#91959f\" : \"#000\")};\n    }\n    p {\n      margin: 0;\n      color: ${(props) => (props.isDarkModeOn ? \"#fff\" : \"#000\")};\n    }\n  }\n`;\n\nconst Cards = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n\n  .accountCard {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    gap: 10px;\n    border: none;\n    svg {\n      color: ${(props) => (props.isDarkModeOn ? \"#fff\" : \"#000\")} !important;\n    }\n    padding: 0 20px;\n    .count {\n      width: 50px;\n      height: 45px;\n      border: none;\n      color: ${(props) => (props.isDarkModeOn ? \"#fff\" : \"#000\")};\n      background-color: ${(props) =>\n        props.isDarkModeOn ? \"#3e4352\" : \"#d0d5d9\"};\n      border-radius: 4px;\n      padding: 0 10px;\n    }\n    .account {\n      flex: 1;\n      padding: 0 10px;\n      border-radius: 4px;\n      border: transparent;\n      transition: 0.3s ease-in-out;\n      height: 45px;\n      color: ${(props) => (props.isDarkModeOn ? \"#fff\" : \"#000\")};\n      background-color: ${(props) =>\n        props.isDarkModeOn ? \"#111222\" : \"#f2f5f8\"};\n      &:focus {\n        border: 1px solid var(--bs-primary-border-subtle);\n        outline: none;\n      }\n    }\n  }\n  .add {\n    padding: 30px;\n    color: ${(props) => (props.isDarkModeOn ? \"#c3cefd\" : \"#4f58a3\")};\n    cursor: pointer;\n  }\n`;\n\nconst Bottom = styled.div`\n  display: flex;\n  margin-top: 40px;\n  align-items: center;\n  justify-content: space-between;\n  padding: 20px;\n  div {\n    display: flex;\n    gap: 10px;\n  }\n  .token {\n    width: 126px;\n    height: 72px;\n    background: ${(props) => (props.isDarkModeOn ? \"#262a3b\" : \"#f8f8f8\")};\n    padding: 8px;\n    display: flex;\n    flex-direction: column;\n    color: ${(props) => (props.isDarkModeOn ? \"#fff\" : \"#000\")};\n    span {\n      font-size: 12px;\n    }\n  }\n  .clear {\n    display: flex;\n    align-items: center;\n    p {\n      margin: 0;\n      padding: 5px 10px;\n      border-radius: 0.25rem;\n      transition: 0.3s;\n      background: ${(props) =>\n        props.isDarkModeOn ? \"#c5d0ff\" : \"transparent\"};\n      color: #4f58a3;\n      cursor: pointer;\n      &:hover {\n        background: ${(props) =>\n          props.isDarkModeOn ? \"#c5d0ff\" : \"rgba(59, 130, 246, 0.5)\"};\n      }\n    }\n    button {\n      background: #000;\n      border: none;\n      &:disabled {\n        background: #d0d5d9;\n        cursor: not-allowed;\n        color: #000;\n      }\n    }\n  }\n`;\n\nconst TransferOption = ({ onClose, data, isDarkModeOn }) => {\n  const [accountIds, setAccountIds] = useState([\n    {\n      accountId: \"\",\n    },\n  ]);\n\n  const handleCheckAccount = () => {\n    fetch(\"https://rpc.mainnet.near.org\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"*/*\",\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Credentials\": true,\n      },\n      body: JSON.stringify({\n        id: \"dontcare2\",\n        jsonrpc: \"2.0\",\n        method: \"query\",\n        params: {\n          request_type: \"view_account\",\n          finality: \"final\",\n          account_id: \"account\",\n        },\n      }),\n    });\n  };\n\n  const addAccounts = () => {\n    setAccountIds([\n      ...accountIds,\n      {\n        tokenAmount: \"\",\n        accountId: \"\",\n      },\n    ]);\n  };\n\n  const handleTransfer = () => {\n    nftTransfer(data?.token_id, accountIds[0].accountId, data?.nft_contract_id);\n  };\n\n  const handleAccountName = (e, index) => {\n    const newFields = accountIds;\n    newFields[index].accountId = e.target.value;\n    // handleCheckAccount(e.target.value);\n    setAccountIds(newFields);\n  };\n\n  return (\n    <TransferContainer isDarkModeOn={isDarkModeOn}>\n      <Top isDarkModeOn={isDarkModeOn}>\n        <p>Transfer</p>\n        <p onClick={onClose}>X</p>\n      </Top>\n      <Token isDarkModeOn={isDarkModeOn}>\n        <p>Token: {data?.token_id}</p>\n      </Token>\n      <Content isDarkModeOn={isDarkModeOn}>\n        <div className=\"text\">\n          <p>Airdrop to multiple accounts</p>\n          <p>Amount of tokens and recipient account</p>\n        </div>\n        <Cards isDarkModeOn={isDarkModeOn}>\n          {accountIds.map((data, index) => (\n            <div key={index} className=\"accountCard\">\n              <input className=\"count\" value={data.tokenAmount} disabled />\n              <input\n                value={data?.accountId}\n                onChange={(e) => handleAccountName(e, index)}\n                className=\"account\"\n                placeholder=\"account.near\"\n              />\n              {cancelSvg}\n            </div>\n          ))}\n          {!data?.token_id && (\n            <div onClick={addAccounts} className=\"add\">\n              Add Another Account\n            </div>\n          )}\n        </Cards>\n      </Content>\n      <Bottom isDarkModeOn={isDarkModeOn}>\n        <div>\n          <div className=\"token\">\n            <span>Available Tokens</span>\n            <p>1</p>\n          </div>\n          <div className=\"token\">\n            <span>Available Tokens</span>\n            <p>1</p>\n          </div>\n        </div>\n        <div className=\"clear\">\n          <p>Clear all</p>\n          <button\n            disabled={!context.accountId || accountIds[0].accountId === \"\"}\n            onClick={handleTransfer}\n          >\n            {\" \"}\n            Continue\n          </button>\n        </div>\n      </Bottom>\n    </TransferContainer>\n  );\n};\n\nreturn <TransferOption {...props} />;\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bos.genadrop.near/widget/Mintbase.NFT.TransferOption", "fact_widget_deployments_id": "313e74355538aba3b4df2e6940faac92", "inserted_timestamp": "2024-04-04T10:37:54.677Z", "modified_timestamp": "2024-04-04T10:37:54.677Z", "__row_index": 0}