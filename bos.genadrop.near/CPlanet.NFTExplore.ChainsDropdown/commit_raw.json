{"tx_hash": "A1dj5BVi5U7PsQLor9Bn972fGjVDVC4AjW5AmfxitExh", "action_id_social": "A1p8TEqz9SYVH4rzxGsdJQPrE5ZhbvtRnwAaFX8shPv4-0-widget", "block_id": 117657192, "block_timestamp": "2024-04-26T10:06:12.377Z", "signer_id": "bos.genadrop.near", "widget_name": "CPlanet.NFTExplore.ChainsDropdown", "source_code": "const defaultProps = [\n  {\n    id: \"0\",\n    name: \"near\",\n    url: \"https://ipfs.near.social/ipfs/bafkreigv55ubnx3tfhbf56toihekuxvgzfqn5c3ndbfjcg3e4uvaeuy5cm\",\n  },\n  {\n    id: \"137\",\n    name: \"polygon\",\n    url: \"https://ipfs.near.social/ipfs/bafkreie5h5oq6suoingcwuzj32m3apv56rl56wpwpaxmevlk5vndlypxze\",\n  },\n];\nconst propsChains = props.chains ?? defaultProps;\nconst chains = {\n  polygon: {\n    name: \"Polygon\",\n    url: \"https://ipfs.near.social/ipfs/bafkreie5h5oq6suoingcwuzj32m3apv56rl56wpwpaxmevlk5vndlypxze\",\n  },\n  aurora: {\n    name: \"Aurora\",\n    url: \"https://ipfs.near.social/ipfs/bafkreiajqik4gjbmkh7z2gylpjzrsuht7simjecpxuoqn6icqfbioswzuy\",\n  },\n  celo: {\n    name: \"Celo\",\n    url: \"https://ipfs.near.social/ipfs/bafkreifu6ufsdf2ivrs5febt7l25wdys6odzfelgjauzod7owrfug56cxe\",\n  },\n  avalanche: {\n    name: \"Avax\",\n    url: \"https://ipfs.near.social/ipfs/bafkreifhu5fytsjcmjluarfnu6kcdhaqz4rgdrbbzf6dlsmggqb7oi3w4e\",\n  },\n  arbitrum: {\n    name: \"Arbitrum\",\n    url: \"https://ipfs.near.social/ipfs/bafkreiffax4lnya337rz5ph75faondeqmpy6xj37yprwvxbru4qc5emsiq\",\n  },\n  near: {\n    name: \"Near\",\n    url: \"https://ipfs.near.social/ipfs/bafkreigv55ubnx3tfhbf56toihekuxvgzfqn5c3ndbfjcg3e4uvaeuy5cm\",\n  },\n};\nState.init({\n  selectIsOpen: false,\n  selectedChain: \"0\",\n});\nconst handleSelectClick = () => {\n  State.update({\n    selectIsOpen: !state.selectIsOpen,\n  });\n};\nconst handleOutsideClick = (e) => {\n  e.preventDefault();\n  if (!!state.selectIsOpen) {\n    State.update({\n      selectIsOpen: false,\n    });\n  }\n};\nconst SelectTag = styled.select`\n  height: fit-content;\n  width: 300px;\n`;\nconst ChainIcon = styled.option`\n  display: flex;\n  height: 130px;\n  padding: 1rem auto;\n  & > img {\n    height: 100px;\n    width: 100px;\n    object-fit: contain;\n  }\n`;\nconst SelectReplicaContainer = styled.div`\n  position: relative;\n  display: inline-block;\n  margin: 0 20px;\n  user-select: none;\n  z-index: 1;\n  & .select-replica__select {\n    position: relative;\n    z-index: 1;\n  }\n  & .select-replica__selected {\n    cursor: pointer;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    border: 1px solid black;\n    gap: 10px;\n    z-index: 1;\n    border-radius: 10px;\n    background-color: transparent;\n    width: 100%;\n    max-width: 350px;\n    padding: 0 10px 0 5px;\n    min-height: 20px;\n    & > img {\n      height: 100%;\n      width: 80px;\n      object-fit: contain;\n    }\n    & > span {\n      opacity: 0.6;\n    }\n  }\n  & .select-replica__options {\n    position: absolute;\n    opacity: 0;\n    top: 110%;\n    left: 0;\n    width: 100%;\n    margin: auto;\n    border-radius: 10px;\n    background-color: transparent;\n    height: auto;\n    box-shadow: 0 10px 20px 10px rgba(0, 0, 0, 0.05);\n    pointer-events: none;\n    transform: translateY(-100px);\n    transition: all 0.2s;\n    max-width: 350px;\n  }\n  & .select-replica__options.open {\n    transition: all 0.2s;\n    transform: translateY(0);\n    opacity: 1;\n    pointer-events: all;\n    width: 100%;\n    max-width: 350px;\n  }\n  & .select-replica__option {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    cursor: pointer;\n    background-color: #fff;\n    padding: 0;\n    border-bottom: 1px solid rgba(0, 0, 0, 0.05);\n  }\n  & .select-replica__option.selected {\n    background-color: #f0f0f0;\n  }\n  & .select-replica__option img {\n    height: 80px;\n    width: 100px;\n    object-fit: contain;\n  }\n`;\nState.update({ chains: propsChains || chains });\nconst handleChainChange = (chain_id, chainName) => {\n  props.updateChain(chainName);\n  try {\n    Ethers.send(\"wallet_switchEthereumChain\", [\n      { chainId: `0x${Number(chain_id).toString(16)}` },\n    ]);\n    State.update({\n      selectedChain: chain_id,\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\nreturn (\n  <>\n    <SelectReplicaContainer>\n      <div\n        className={`select-replica__select ${state.selectIsOpen ? \"open\" : \"\"}`}\n        onClick={handleSelectClick}\n      >\n        <div className=\"select-replica__selected\">\n          {state.chains &&\n          state.chains.filter(\n            (chain) => chain?.id === state?.selectedChain?.toString()\n          ) ? (\n            <img\n              src={state.chains\n                .filter((chain) => chain.id === state.selectedChain.toString())\n                .map((c) => c.url)}\n              alt={state.chains\n                .filter((chain) => chain.id === state.selectedChain.toString())\n                .map((c) => c.name)}\n            />\n          ) : (\n            \"Select an option\"\n          )}\n          <span>\u25bc</span>\n        </div>\n        <div\n          className={`select-replica__options ${\n            state.selectIsOpen ? \"open\" : \"\"\n          }`}\n        >\n          {state.chains &&\n            state.chains.map((chain) =>\n              chain.id !== state.selectedChain.toString() ? (\n                <div\n                  key={chain.id}\n                  className={`select-replica__option ${\n                    selectedOption === chain.name ? \"selected\" : \"\"\n                  }`}\n                  onClick={() => handleChainChange(chain.id, chain.name)}\n                >\n                  <img src={chain.url} alt={chain.name} />\n                </div>\n              ) : (\n                \"\"\n              )\n            )}\n        </div>\n      </div>\n    </SelectReplicaContainer>\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bos.genadrop.near/widget/CPlanet.NFTExplore.ChainsDropdown", "fact_widget_deployments_id": "06903f1e8ef30153d51c04a4cfaec2fa", "inserted_timestamp": "2024-04-26T11:43:20.585Z", "modified_timestamp": "2024-04-26T11:43:20.585Z", "__row_index": 0}