{"tx_hash": "FKrB7nx7qERb4yM1fgr915ZVaEAgmKkCvpV4VEfzPT39", "action_id_social": "2CsQgPNzrq1nkH1MhgGMGTZL3YMVVfG6fBezeu9xn11u-0-widget", "block_id": 114148011, "block_timestamp": "2024-03-05T14:55:50.137Z", "signer_id": "bos.genadrop.near", "widget_name": "Mintbase.App.Store.Mine", "source_code": "const accountId = props.accountId || \"bos.genadrop.near\";\n// const { MbMetaCard, MbInputField } = VM.require(\n//   \"bos.genadrop.near/widget/Mintbase.components\"\n// ) || {\n//   MbMetaCard: () => <></>,\n//   MbInputField: () => <></>,\n// };\n\nconst tabProps = {\n  tabLabels: [\n    \"My Contracts\",\n    \"Earned\",\n    \"Offered to Me\",\n    \"My Offers\",\n    \"Stripe Beta\",\n  ],\n};\n\nconst [selectedTabIndex, setSelectedTabIndex] = useState(0);\nconst [switchOn, setSwitchOn] = useState(false);\nconst [open, setOpen] = useState(false);\nconst [sdk, setSDK] = useState(false);\nconst [storeName, setStoreName] = useState(\"\");\nconst [storeSymbol, setStoreSymbol] = useState(\"\");\nconst mode = switchOn ? \"dark\" : \"light\";\nconst btnType = !switchOn ? \"secondary\" : \"primary\";\nconst isDarkModeOn = mode === \"dark\";\n\nconst handleTabClick = (index) => {\n  setSelectedTabIndex(index);\n  // console.log(\"selectedTabIndex from Mine: \", selectedTabIndex);\n};\n\nconst switchChangeHandler = useCallback(() => {\n  setSwitchOn((prev) => !prev);\n}, []);\n\nconst onStoreNameChange = useCallback((e) => {\n  console.log(\"onStoreNameChange\", e.target.value);\n  setStoreName(e.target.value);\n}, []);\n\nconst handleDeploy = () => {\n  console.log(\"handleDeploy\", storeName, storeSymbol);\n  // console.log(\"sdk\", sdk);\n  sdk.deployStore(storeName, storeSymbol);\n};\n\n// console.log(\"tabProps\", tabProps);\n\nconst Card = styled.div`\n  background-color: ${isDarkModeOn ? \"#1F2937\" : \"#F9FAFB\"};\n  padding: 1.5rem; /* 24px */\n  border-radius: 0;\n  color: ${isDarkModeOn ? \"white\" : \"black\"};\n`;\n\nconst Toggle = styled.div`\n  ${\n    \"\" /* round black button, that is fixed on the right bottom with some padding */\n  }\n  position: fixed;\n  bottom: 1rem;\n  right: 1rem;\n  padding: 0.5rem;\n  background-color: black;\n  border-radius: 9999px;\n  cursor: pointer;\n  z-index: 100000;\n  &:hover {\n    background-color: #1f2937;\n  }\n  width: 2rem;\n  height: 2rem;\n  color: black;\n`;\n\nconst createStoreHandler = useCallback(() => {\n  // console.log(\"createStoreHandler\");\n  setOpen(true);\n}, []);\n\nconst PageContent = () => {\n  switch (selectedTabIndex) {\n    case 0:\n      return (\n        <div className=\"d-flex flex-column align-items-center\">\n          <h2>Deploy your own store to mint NFTs from</h2>{\" \"}\n          <p>\n            You don't have any stores yet \u2014 let's create your first one! Or\n            refresh the page if you just deployed (could take up to 5 minutes).\n          </p>\n          <Widget\n            src={`${accountId}/widget/Mintbase.MbButton`}\n            props={{\n              label: \"New Store\",\n              onClick: createStoreHandler,\n              size: \"big\",\n              mode,\n            }}\n          />\n        </div>\n      );\n    case 1:\n      return (\n        <div>\n          <h2>Nothing Earned yet</h2>{\" \"}\n          <p>\n            You haven't earned any NFTs yet. Once you do, they will appear here.\n          </p>\n        </div>\n      );\n    case 2:\n      return (\n        <div>\n          <h2>Nothing Offered yet</h2>{\" \"}\n          <p>\n            You haven't been offered any NFTs yet. Once you do, they will appear\n            here.\n          </p>\n        </div>\n      );\n    case 3:\n      return (\n        <div>\n          <h2>No offers yet</h2>{\" \"}\n          <p>\n            You haven't offered any NFTs yet. Once you do, they will appear\n            here.\n          </p>\n        </div>\n      );\n    case 4:\n      return (\n        <div>\n          <h2>StripeBeta</h2>{\" \"}\n          <p>\n            You haven't offered any\n            <Widget\n              src={`${accountId}/widget/Mintbase.MbIcon`}\n              props={{ name: \"stripe\" }}\n            />\n          </p>\n        </div>\n      );\n    default:\n      return null;\n  }\n};\n\nconst CreateStore = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  height: 100%;\n  .form {\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n  }\n  .bottom-buttons {\n    display: flex;\n    position: absolute;\n    bottom: 48px;\n    right: 24px;\n    width: calc(100% - 48px);\n    justify-content: space-between;\n    align-items: center;\n  }\n`;\n\nconst modalContent = (\n  <CreateStore>\n    <div className=\"form\">\n      <div className=\"input\">\n        <Widget\n          src={`${accountId}/widget/Mintbase.MbInput`}\n          props={{\n            id: \"storename\",\n            required: true,\n            placeholder: \"myfirststore\",\n            label: \"Store Name\",\n            defaultValue: storeName,\n            onChange: onStoreNameChange,\n            type: \"text\",\n            hasIcon: false,\n            mode,\n          }}\n        />\n      </div>\n      <div className=\"input\">\n        <Widget\n          src={`${accountId}/widget/Mintbase.MbInput`}\n          props={{\n            id: \"storesymbol\",\n            required: true,\n            placeholder: \"MFS\",\n            label: \"Symbol (max 3 letters)\",\n            defaultValue: storeSymbol,\n            onChange: (e) => setStoreSymbol(e.target.value),\n            type: \"text\",\n            mode,\n          }}\n        />\n      </div>\n    </div>\n    <div className=\"bottom-buttons\">\n      <div>\n        <Widget\n          src={`${accountId}/widget/Mintbase.MbButton`}\n          props={{\n            label: \"Cancel\",\n            btnType: \"secondary\",\n            size: \"medium\",\n            onClick: () => setOpen(false),\n            mode,\n          }}\n        />\n      </div>\n      <div>\n        <Widget\n          src={`${accountId}/widget/Mintbase.MbButton`}\n          props={{\n            label: \"Create Store\",\n            btnType: \"primary\",\n            // disabled: true,\n            size: \"medium\",\n            onClick: () => handleDeploy(),\n            mode,\n          }}\n        />\n      </div>\n    </div>\n  </CreateStore>\n);\n\nreturn (\n  <Card>\n    <Widget\n      src=\"bos.genadrop.near/widget/Mintbase.SDK\"\n      props={{\n        mainnet: false,\n        contractName: \"mintspace2.testnet\",\n        loaded: sdk,\n        onLoad: (sdk) => setSDK(sdk),\n        onRefresh: (sdk) => setSDK(sdk),\n      }}\n    />\n    <Toggle onClick={switchChangeHandler} title=\"Toggle Theme\" />\n    <Widget\n      src={`${accountId}/widget/Mintbase.MbTabs`}\n      props={{\n        ...tabProps,\n        activeIndex: selectedTabIndex,\n        onTabChange: handleTabClick,\n        mode,\n      }}\n    />\n    <div className=\"d-flex flex-column align-items-center\">\n      <PageContent />\n    </div>\n    {/* <MbMetaCard loading={false} /> */}\n    <Widget\n      src={`${accountId}/widget/Mintbase.MbModal`}\n      props={{\n        open,\n        setOpen,\n        onClose: null,\n        children: modalContent,\n        topElement: (\n          <h4 style={{ marginRight: \"8px\" }}>Let's Create Your Store</h4>\n        ),\n        topElementFirst: true,\n        mode,\n      }}\n    />\n    <Widget\n      src={`bos.genadrop.near/widget/Mintbase.App.Store.Card`}\n      props={{\n        mode,\n      }}\n    />\n  </Card>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bos.genadrop.near/widget/Mintbase.App.Store.Mine", "fact_widget_deployments_id": "9b78c65a8b58679557390273ac065ab3", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}