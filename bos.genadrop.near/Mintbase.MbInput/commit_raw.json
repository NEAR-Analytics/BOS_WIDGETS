{"tx_hash": "3RskuyG6GY6Y2RW4t9MdXhn2a1ZGC53FbPVBhJjdtSsx", "action_id_social": "EQKB3iQBgB8ppcKRVzbsNJNsYGbpqzbTCnaQQrwzEoUf-0-widget", "block_id": 112946203, "block_timestamp": "2024-02-16T10:59:48.386Z", "signer_id": "bos.genadrop.near", "widget_name": "Mintbase.MbInput", "source_code": "const { getInputLabelFontType, getFontType } = VM.require(\n  \"bos.genadrop.near/widget/Mintbase.Theme\"\n);\n\nconst EControlStatus = {\n  NORMAL: \"normal\",\n  VALID: \"valid\",\n  INVALID: \"invalid\",\n};\n\nconst {\n  id,\n  required,\n  disabled,\n  customStyle,\n  placeholder,\n  label, //string\n  hasPercentageLabel,\n  value,\n  type,\n  hasIcon, //boolean\n  maxChars, // number\n  defaultValue, // number | undefined\n  onChange,\n  customIcon, // JSX.Element\n  ...props\n} = props;\n\nconst inputSize = props.inputSize || \"medium\";\nconst controlStatus = props.controlStatus || \"normal\";\nconst initialCounter = props.initialCounter || 0;\nconst mode = props.mode || Storage.get(\"mode\");\n\nconst IsDarkModeOn = mode === \"dark\";\n\nconst [count, setCount] = useState(initialCounter);\n\nconst getIconSize = () => {\n  return inputSize === \"big\" ? \"24px\" : \"20px\";\n};\n\nconst Label = styled.div`\n  display: block;\n  margin-bottom: 8px;\n  ${IsDarkModeOn ? \"color: white;\" : \"\"}\n  ${getInputLabelFontType(inputSize)}\n`;\n\nconst Asterisk = styled.span`\n  color: ${IsDarkModeOn ? \"var(--error-100)\" : \"var(--error-300)\"};\n`;\n\nconst Container = styled.div`\n  .main-input {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    border-radius: 0.25rem;\n    ${customStyle}\n    &.disabled {\n      background: ${IsDarkModeOn ? \"var(--gray-700)\" : \"var(--gray-200)\"};\n    }\n    &.default {\n      /* @apply   focus-within:ring-1 transition-all duration-500; */\n      transition-property: all;\n      transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n      transition-duration: 500ms;\n      background: ${IsDarkModeOn ? \"var(--gray-900)\" : \"var(--gray-100)\"};\n      :hover {\n        background: ${IsDarkModeOn\n          ? \"var(--mb-blackblue)\"\n          : \"var(--blue-300-15)\"};\n      }\n      :focus-within {\n        --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0\n          var(--tw-ring-offset-width) var(--tw-ring-offset-color);\n        --tw-ring-shadow: var(--tw-ring-inset) 0 0 0\n          calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);\n        box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow),\n          var(--tw-shadow, 0 0 #0000);\n      }\n    }\n    &.empty:focus-within {\n      ${IsDarkModeOn\n        ? ` --tw-ring-opacity: 1;\n            --tw-ring-color: var(--blue-100-35);`\n        : `\n            --tw-ring-opacity: 1;\n            --tw-ring-color:  var(--blue-300-35);\n        `}\n    }\n    &.valid {\n      --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0\n        var(--tw-ring-offset-width) var(--tw-ring-offset-color);\n      --tw-ring-shadow: var(--tw-ring-inset) 0 0 0\n        calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);\n      ${IsDarkModeOn\n        ? ` --tw-ring-opacity: 1;\n            --tw-ring-color: var(--success-100);`\n        : `\n            --tw-ring-opacity: 1;\n            --tw-ring-color: var(--success-300);\n        `}\n      box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow),\n        var(--tw-shadow, 0 0 #0000);\n    }\n    &.invalid {\n      ${IsDarkModeOn\n        ? ` --tw-ring-opacity: 1;\n            --tw-ring-color: var(--error-100);`\n        : `\n            --tw-ring-opacity: 1;\n            --tw-ring-color: var(--error-300);\n        `}\n      box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow),\n        var(--tw-shadow, 0 0 #0000);\n    }\n  }\n  .input-wrapper.big {\n    padding: 12px;\n    max-height: 40px;\n    @media (min-width: 480px) {\n      padding: 16px;\n      max-height: 48px;\n    }\n  }\n  .input-wrapper.medium {\n    padding: 10px;\n    max-height: 34px;\n    @media (min-width: 480px) {\n      padding: 12px;\n      max-height: 40px;\n    }\n  }\n  .input-wrapper.small {\n    padding: 10px;\n    max-height: 34px;\n  }\n  .input-wrapper {\n    width: 100%;\n  }\n`;\n\nconst InputField = styled.div`\n  display: flex;\n  width: 100%;\n  .input-field {\n    outline: none;\n    border: none;\n    background: transparent;\n    color: black;\n    width: 100%;\n    ${getFontType(inputSize)}\n    :focus {\n      outline: 2px solid transparent;\n      outline-offset: 2px;\n    }\n    ::placeholder {\n      color: ${isDarkModeOn ? \"white\" : \"var(--gray-500)\"};\n    }\n  }\n  .percentage-label {\n    ${getFontType(inputSize)}\n    color: var(--gray-500);\n  }\n`;\n\nconst handleChange = (e) => {\n  if (maxChars) {\n    setCount(e.target.value.length);\n  }\n  if (!onChange) return;\n  console.log(e);\n\n  onChange(e);\n};\n\nconst MbInput = () => {\n  return (\n    <Container>\n      {label && (\n        <Label>\n          {label}\n          {required && <Asterisk> *</Asterisk>}\n        </Label>\n      )}\n      <div\n        className={`main-input input-wrapper ${inputSize} ${\n          disabled ? \"disabled\" : \"default\"\n        } ${controlStatus}`}\n      >\n        <InputField>\n          <input\n            disabled={disabled}\n            placeholder={placeholder}\n            type=\"text\"\n            // value={value}\n            maxLength={maxChars}\n            required={required}\n            defaultValue={defaultValue}\n            className=\"input-field\"\n            onWheel={(e) => {\n              if (type !== \"number\") return;\n              e.currentTarget.blur();\n            }}\n            onChange={handleChange}\n            {...props}\n          />\n          {hasPercentageLabel && <span className=\"percentage-label\">%</span>}\n        </InputField>\n\n        {hasIcon && (\n          <div className=\"flex\">\n            {controlStatus === EControlStatus.VALID ? (\n              <Widget\n                src=\"bos.genadrop.near/widget/Mintbase.MbIcon\"\n                props={{\n                  name: \"success\",\n                  size: getIconSize(),\n                  color: \"success-300\",\n                  darkColor: \"success-100\",\n                }}\n              />\n            ) : controlStatus === EControlStatus.INVALID ? (\n              <Widget\n                src=\"bos.genadrop.near/widget/Mintbase.MbIcon\"\n                props={{\n                  name: \"error\",\n                  size: getIconSize(),\n                  color: \"error-300\",\n                  darkColor: \"error-100\",\n                }}\n              />\n            ) : (\n              <Widget\n                src=\"bos.genadrop.near/widget/Mintbase.MbIcon\"\n                props={{\n                  name: \"info\",\n                  size: getIconSize(),\n                  color: \"blue-300\",\n                  darkColor: \"blue-100\",\n                }}\n              />\n            )}\n          </div>\n        )}\n        {!!customIcon && !hasIcon && customIcon}\n      </div>\n      {maxChars ? (\n        <Widget\n          src=\"bos.genadrop.near/widget/Mintbase.MbCharCounter\"\n          props={{\n            counter: count,\n            inputSize: inputSize,\n            maxChars: maxChars,\n          }}\n        />\n      ) : (\n        <></>\n      )}\n    </Container>\n  );\n};\n\nreturn { MbInput };\n\n/* <Widget\n          src=\"bos.genadrop.near/widget/MbInputField\"\n          props={{\n            id: id,\n            disabled: disabled,\n            placeholder: placeholder,\n            type: \"text\",\n            value: count,\n            maxLength: maxChars,\n            required: required,\n            defaultValue: defaultValue,\n            className: \"input-field\",\n            onWheel: (e) => {\n              if (type != \"number\") return;\n              e.currentTarget.blur();\n            },\n            onChange: handleChange,\n            ...props,\n          }}\n        /> */\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bos.genadrop.near/widget/Mintbase.MbInput", "fact_widget_deployments_id": "5ad0a9f318b51803449a61bfbf56448a", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 1}