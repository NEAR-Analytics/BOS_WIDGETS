{"tx_hash": "3t96h1uYoHMgn9jc9n47EQtz6gnVTfEGqNifEKEfXyoR", "action_id_social": "CBzRbo8PRnMDbtczsKnmXbVqYW4FD4G4VnDGjaUKJT8z-0-widget", "block_id": 117657323, "block_timestamp": "2024-04-26T10:09:01.207Z", "signer_id": "bos.genadrop.near", "widget_name": "Mintbase.App.Store.Card", "source_code": "const accountId = props.accountId ?? context.accountId;\nconst { contract, isDarkModeOn } = props;\nconst isConnected = contract.owner_id === accountId;\nconst [storeProfileImage, setStoreProfileImage] = useState(\"\");\nconst [storeHeaderImage, setStoreHeaderImage] = useState(\"\");\nconst StoreCard = styled.div`\n  box-shadow: 2px 2px 12px 0px rgba(0, 0, 0, 0.05);\n  gap: 2em;\n  margin: 10px auto;\n  width: 100%;\n  background: #fff;\n  color: #000;\n  &.dark-store-card {\n    background: #1e2030;\n    color: #fff;\n    :hover {\n      background: #282a3a;\n    }\n  }\n  max-width: 800px;\n  border-radius: 4px;\n  overflow: hidden;\n  transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    transform: scale(1.02);\n    background: #f9f9f9;\n    cursor: pointer;\n  }\n  * {\n    font-family: \"AUTHENTIC Sans 90\", sans-serif;\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n  }\n  .icon_area {\n    width: 110px;\n    border-radius: 4px;\n    height: 110px;\n    border-width: 3px;\n    border-style: solid;\n    border-color: #fff;\n    display: flex;\n    overflow: hidden;\n    position: absolute;\n    margin-top: -50px;\n    background: #c74c4c;\n    img {\n      object-fit: cover;\n      width: 100%;\n      height: 100%;\n    }\n    &.dark-icon_area {\n      border-color: #1e2030;\n    }\n  }\n  .contract_owner {\n    margin-top: 10px;\n    h3 {\n      font-weight: bold;\n      font-size: 20px;\n      font-weight: 600;\n      margin: 0;\n      /*  don't wrap the text*/\n      white-space: nowrap;\n    }\n    p {\n      font-size: 12px;\n      margin: 0;\n      font-weight: 400;\n      color: #404252;\n      &.dark_role {\n        color: #b3b5bd;\n      }\n    }\n  }\n  .middle {\n    padding: 0px 24px;\n    position: relative;\n    .content {\n      position: relative;\n      display: flex;\n      gap: 20px;\n      .contract_owner {\n        margin-left: 128px;\n      }\n    }\n  }\n  .top {\n    height: 145px;\n    background: #c74c4c;\n    overflow: hidden;\n    img {\n      width: 100%;\n      height: 100%;\n      object-fit: cover;\n    }\n  }\n  .bottom {\n    padding: 34px 24px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n  .manage-settings {\n    display: flex;\n    gap: 10px;\n    margin-left: -12px;\n    .tab {\n      display: flex;\n      align-items: baseline;\n      justify-content: flex-end;\n      text-decoration: none;\n      gap: 0.2rem;\n      border-radius: 0.25rem; /* Assuming default border radius */\n      color: ${isDarkModeOn\n        ? \"#C5D0FF\"\n        : \"#4F58A3\"}; /* Ternary for text color */\n      padding: 8px 12px; /* Assuming Tailwind CSS default spacing unit */\n      font-size: 14px;\n      line-height: 16px;\n      transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1); /* Assuming Tailwind CSS default timing function and duration */\n      white-space: nowrap;\n      &:focus {\n        outline: 2px solid transparent; /* Assuming Tailwind CSS default focus outline */\n        outline-offset: 2px; /* Assuming Tailwind CSS default focus outline offset */\n        box-shadow: 0 0 0 2px\n          ${isDarkModeOn\n            ? \"rgba(59, 130, 246, 0.5)\"\n            : \"rgba(66, 153, 225, 0.5)\"}; /* Ternary for box-shadow */\n        background-color: ${isDarkModeOn\n          ? \"rgba(59, 130, 246, 0.35)\"\n          : \"rgba(66, 153, 225, 0.15)\"}; /* Ternary for background-color */\n      }\n      &:hover {\n        background-color: ${isDarkModeOn\n          ? \"rgba(59, 130, 246, 0.15)\"\n          : \"rgba(66, 153, 225, 0.15)\"}; /* Ternary for background-color */\n      }\n      cursor: pointer;\n      @media (max-width: 768px) {\n        padding: 12px;\n        font-size: 12px;\n        line-height: 14px;\n      }\n    }\n  }\n`;\nconst role = contract.owner_id === accountId ? \"Owner\" : \"Minter\";\nconsole.log({ owner: contract.owner_id, accountId });\nconst verifiedBatch = (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    enable-background=\"new 0 0 24 24\"\n    height=\"18px\"\n    viewBox=\"0 0 24 24\"\n    width=\"18px\"\n    fill={isDarkModeOn ? \"#fff\" : \"#000000\"}\n    class=\"fill-current text-blue-300 dark:text-blue-100\"\n  >\n    <g>\n      <rect fill=\"none\" height=\"24\" width=\"24\"></rect>\n    </g>\n    <g>\n      <path d=\"M23,12l-2.44-2.79l0.34-3.69l-3.61-0.82L15.4,1.5L12,2.96L8.6,1.5L6.71,4.69L3.1,5.5L3.44,9.2L1,12l2.44,2.79l-0.34,3.7 l3.61,0.82L8.6,22.5l3.4-1.47l3.4,1.46l1.89-3.19l3.61-0.82l-0.34-3.69L23,12z M10.09,16.72l-3.8-3.81l1.48-1.48l2.32,2.33 l5.85-5.87l1.48,1.48L10.09,16.72z\"></path>\n    </g>\n  </svg>\n);\nreturn (\n  <StoreCard className={isDarkModeOn ? \"dark-store-card\" : \"\"}>\n    <a href={`#`} style={{ textDecoration: \"none\", color: \"inherit\" }}>\n      <div className=\"top\">\n        <img\n          loading=\"lazy\"\n          decoding=\"async\"\n          data-nimg=\"fill\"\n          src={\n            storeHeaderImage ||\n            \"https://ipfs.near.social/ipfs/bafkreiajgp5bmkidwesy2d6tsbdkhyfzjtom2wse2sjcwii227lt5audvq\"\n          }\n          className=\"chain_banner\"\n          alt={\n            contract.nft_contract_id.endsWith(\".testnet\")\n              ? contract.nft_contract_id.replace(\".testnet\", \"\") + \" banner\"\n              : contract.nft_contract_id.slice(\n                  0,\n                  contract.nft_contract_id.length - 5\n                ) + \" banner\"\n          }\n        />\n      </div>\n      <div className=\"middle\">\n        <div className=\"content\">\n          <div className={`icon_area ${isDarkModeOn ? \"dark-icon_area\" : \"\"}`}>\n            <img\n              src={\n                storeProfileImage ||\n                \"https://ipfs.near.social/ipfs/bafkreiajgp5bmkidwesy2d6tsbdkhyfzjtom2wse2sjcwii227lt5audvq\"\n              }\n              className=\"chain_icon\"\n              alt={\n                contract.nft_contract_id.endsWith(\".testnet\")\n                  ? contract.nft_contract_id.replace(\".testnet\", \"\") + \" banner\"\n                  : contract.nft_contract_id.slice(\n                      0,\n                      contract.nft_contract_id.length - 5\n                    ) + \" icon\"\n              }\n            />\n          </div>\n          <div className=\"contract_owner\">\n            <h3>\n              {(contract.nft_contract_id.length > 22\n                ? `${contract?.nft_contract_id.substring(0, 20)}...`\n                : contract?.nft_contract_id) || \"contract Name\"}{\" \"}\n              {verifiedBatch}\n            </h3>\n            <p className={isDarkModeOn ? \"dark_role\" : \"\"}>Role: {role}</p>\n          </div>\n        </div>\n      </div>\n    </a>\n    <div className={`bottom ${isDarkModeOn ? \"dark\" : \"\"}`}>\n      <div className=\"d-flex lhs gap-2 w-75\">\n        <div className=\"manage-settings\">\n          <a href=\"#\" className=\"tab\">\n            Manage NFTs\n          </a>\n          {isConnected && (\n            <a href=\"#\" className=\"tab\">\n              Settings\n            </a>\n          )}\n        </div>\n      </div>\n      <div>\n        <Widget\n          src={`bos.genadrop.near/widget/Mintbase.MbButton`}\n          props={{\n            label: \"Mint NFT\",\n            btnType: \"primary\",\n            size: \"medium\",\n            onClick: () => null,\n            isDarkModeOn,\n          }}\n        />\n      </div>\n    </div>\n  </StoreCard>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bos.genadrop.near/widget/Mintbase.App.Store.Card", "fact_widget_deployments_id": "e28d4d19c2e5228fb2843617e1f4ba0c", "inserted_timestamp": "2024-04-26T11:43:20.585Z", "modified_timestamp": "2024-04-26T11:43:20.585Z", "__row_index": 0}