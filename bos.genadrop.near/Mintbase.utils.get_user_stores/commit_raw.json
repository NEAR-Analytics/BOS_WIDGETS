{"tx_hash": "ANAE6tt34MGwHey9fq6c49Cn12ud4Wgk4frsvobWZQiw", "action_id_social": "311c1kyj8rRGWskn6DdSSFx39CwaXBFkzGA7j181kJJQ-0-widget", "block_id": 117436302, "block_timestamp": "2024-04-23T07:26:49.644Z", "signer_id": "bos.genadrop.near", "widget_name": "Mintbase.utils.get_user_stores", "source_code": "function fetchGraphQL(operationsDoc, operationName, variables) {\n  return asyncFetch(\n    `https://graph.mintbase.xyz/${\n      variables.id && variables.id.endsWith(\".testnet\") ? \"testnet\" : \"mainnet\"\n    }`,\n    {\n      method: \"POST\",\n      headers: {\n        \"mb-api-key\": \"anon\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        query: operationsDoc,\n        variables: variables,\n        operationName: operationName,\n      }),\n    }\n  ).then((result) => result.body);\n}\n\nconst operationsDoc = `\n        query GetLaunchpadContracts($id: String!) {\n          launchpad_contracts(args: {minter_id: $id}) {\n            minted_timestamp\n            nft_contract_id\n            owner_id\n            __typename\n          }\n        }\n      `;\n\nfunction getUserStores(id) {\n  if (!id) console.log(\"missing accountId\");\n  return fetchGraphQL(operationsDoc, \"GetLaunchpadContracts\", {\n    id: id || \"\",\n  });\n}\n\nreturn { getUserStores };\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bos.genadrop.near/widget/Mintbase.utils.get_user_stores", "fact_widget_deployments_id": "1d0cbc97e000fe48e621c6d2219d8695", "inserted_timestamp": "2024-04-23T09:44:05.024Z", "modified_timestamp": "2024-04-23T09:44:05.024Z", "__row_index": 1}