{"tx_hash": "Bhdjz2zHisqDy5ZAtNinooEKSFeMPdfJ2TaThZdZXr8W", "action_id_social": "6SXLcpt56tSLMx8KCCo5bcdccT5qUSMTZwNFb8MY651q-0-widget", "block_id": 117666785, "block_timestamp": "2024-04-26T13:18:15.008Z", "signer_id": "bos.genadrop.near", "widget_name": "Mintbase.App.LaunchPad.OffersToAccount", "source_code": "const { getOffersToAccount, getTimePassed } = VM.require(\n  \"bos.genadrop.near/widget/Mintbase.utils.sdk\"\n) || {\n  getOffersToAccount: () => <></>,\n  getTimePassed: () => <></>,\n};\nconst accountId = props.accountId || context.accountId;\nconst perPage = 50;\nconst nearLogo =\n  \"https://ipfs.near.social/ipfs/bafkreib2cfbayerbbnoya6z4qcywnizqrbkzt5lbqe32whm2lubw3sywr4\";\nconst _address = (address, _limit) => {\n  const limit = _limit || 20;\n  if (address.length > limit) return address.slice(0, 10) + \"...\";\n  else return address;\n};\nconst YoctoToNear = (offer_priceYocto) => {\n  return new Big(offer_priceYocto || 0)\n    .div(new Big(10).pow(24))\n    .toFixed(2)\n    .toString();\n};\nconst OffersToAccount = ({ isDarkModeOn }) => {\n  const [page, setPage] = useState(1);\n  const [data, setData] = useState(null);\n  const [showTable, setShowTable] = useState(true);\n  useEffect(() => {\n    getOffersToAccount({\n      account: accountId,\n      limit: perPage,\n      offset: (page - 1) * perPage,\n    })\n      .then(({ data, errors }) => {\n        if (errors) {\n          // handle those errors like a pro\n          console.error(errors);\n        }\n        // do something great with this precious data\n        setData(data);\n      })\n      .catch((error) => {\n        // handle errors from fetch itself\n        console.error(error);\n      });\n  }, [limit, offset, page]);\n  const Container = styled.div`\n    background: ${isDarkModeOn ? \"#1f2031\" : \"#fff\"};\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    border-radius: 4px;\n    height: fit-content;\n    flex: 1;\n    width: 100%;\n    @media (max-width: 500px) {\n      width: 100vw;\n      min-width: 100vw;\n      font-size: 12px;\n    }\n    .topic_line {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      width: 100%;\n      padding: 1.5rem;\n      color: ${isDarkModeOn ? \"#fff\" : \"#000\"};\n      border-bottom: 1px solid\n        ${showTable\n          ? isDarkModeOn\n            ? \"rgba(40, 42, 58, 1)\"\n            : \"rgba(210, 212, 218, 1)\"\n          : \"transparent\"};\n      cursor: pointer;\n      i {\n        transition: all 300ms;\n        font-size: 1.5rem;\n      }\n      p {\n        margin: 0;\n        font-size: 16px;\n        font-weight: 600;\n      }\n    }\n    .table_main {\n      display: flex;\n      overflow: auto;\n      flex-direction: column;\n      width: 100%;\n      .header {\n        display: grid;\n        grid-template-columns: repeat(6, minmax(150px, 1fr));\n        align-items: center;\n        justify-content: space-between;\n        padding: 0.5rem 0;\n        color: ${isDarkModeOn ? \"#B3B5BD\" : \"#404252\"};\n        margin-bottom: 1rem;\n        font-weight: 500px;\n        div {\n          padding-bottom: 1rem;\n          text-align: center;\n          border-bottom: 2px solid\n            ${isDarkModeOn ? \"rgba(16,18,35,1)\" : \"rgba(210,212,218,1)\"};\n        }\n        & > div:first-child {\n          text-align: left;\n          padding-left: 28px;\n        }\n        ${cursomStyle}\n      }\n      .trx-row {\n        display: grid;\n        grid-template-columns: repeat(6, minmax(150px, 3fr));\n        justify-content: space-between;\n        padding: 1rem 0;\n        border-bottom: 1px solid\n          ${isDarkModeOn ? \"rgba(40, 42, 58, 1)\" : \"rgba(210, 212, 218, 1)\"};\n        div,\n        a,\n        span {\n          text-align: center;\n          margin: auto;\n        }\n        .tab {\n          text-decoration: none;\n          text-align: left;\n          display: flex;\n          align-items: baseline;\n          justify-content: flex-end;\n          text-decoration: none;\n          gap: 0.2rem;\n          border-radius: 0.25rem; /* Assuming default border radius */\n          color: ${isDarkModeOn\n            ? \"#C5D0FF\"\n            : \"#4F58A3\"}; /* Ternary for text color */\n          padding: 8px 12px; /* Assuming Tailwind CSS default spacing unit */\n          font-weight: 500;\n          font-size: 16px;\n          line-height: 18px;\n          transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1); /* Assuming Tailwind CSS default timing function and duration */\n          white-space: nowrap;\n          &:focus {\n            outline: 2px solid transparent; /* Assuming Tailwind CSS default focus outline */\n            outline-offset: 2px; /* Assuming Tailwind CSS default focus outline offset */\n            box-shadow: 0 0 0 2px\n              ${isDarkModeOn\n                ? \"rgba(59, 130, 246, 0.5)\"\n                : \"rgba(66, 153, 225, 0.5)\"}; /* Ternary for box-shadow */\n            background-color: ${isDarkModeOn\n              ? \"rgba(59, 130, 246, 0.35)\"\n              : \"rgba(66, 153, 225, 0.15)\"}; /* Ternary for background-color */\n          }\n          &:hover {\n            background-color: ${isDarkModeOn\n              ? \"rgba(59, 130, 246, 0.15)\"\n              : \"rgba(66, 153, 225, 0.15)\"}; /* Ternary for background-color */\n          }\n          cursor: pointer;\n          @media (max-width: 768px) {\n            padding: 12px;\n            font-size: 12px;\n            line-height: 14px;\n          }\n        }\n        & > div:first-child {\n          margin: unset;\n          margin: auto auto auto 24px;\n        }\n        .title {\n          display: flex;\n          align-items: center;\n          text-decoration: none;\n          gap: 10px;\n          div {\n            white-space: nowrap;\n            height: 40px;\n            display: flex;\n            color: ${isDarkModeOn ? \"#c2cdfd\" : \"#4e58a2\"};\n            align-items: center;\n            justify-content: center;\n            padding: 10px;\n            border-radius: 2px;\n            transition: all 200ms;\n            :hover {\n              background: ${color};\n              color: white;\n            }\n          }\n          img {\n            object-fit: cover;\n            width: 40px;\n            height: 40px;\n          }\n        }\n        .time {\n          display: flex;\n          align-items: center;\n          gap: 0.5rem;\n          color: ${isDarkModeOn ? \"#fff\" : \"#000\"};\n          i {\n            box-sizing: content-box;\n            color: ${isDarkModeOn ? \"#c2cdfd\" : \"#4e58a2\"};\n            cursor: pointer;\n            border-radius: 2px;\n            transition: all 200ms ease 0s;\n            :hover {\n              fill: white;\n              background: ${color};\n            }\n          }\n        }\n      }\n      .price {\n        display: flex;\n        gap: 4px;\n        align-items: center;\n        font-weight: 600;\n        color: ${isDarkModeOn ? \"#fff\" : \"#000\"};\n        img {\n          width: 14px;\n          filter: invert(${isDarkModeOn ? 1 : 0});\n        }\n      }\n      @media (max-width: 500px) {\n        .header,\n        .trx-row {\n          grid-template-columns: repeat(6, 150px);\n        }\n      }\n    }\n  `;\n  const tableToggleHander = () => {\n    setShowTable((prev) => !prev);\n  };\n  const acceptAndTransferHandler = () => null;\n  const offers = data.mb_views_auctions_with_offer;\n  const totalItems =\n    data.mb_views_auctions_with_offer_aggregate.aggregate.count;\n  console.log(\"offers\", offers);\n  return (\n    <Container>\n      <div className=\"topic_line\" onClick={tableToggleHander}>\n        <p>Offered To Me</p>\n        <i\n          className={`bi bi-chevron-${showTable ? \"up\" : \"down\"}`}\n          style={{\n            fontSize: \"1.5rem\",\n          }}\n        ></i>\n      </div>\n      {showTable && (\n        <div className=\"table_main\">\n          <div className=\"header\">\n            <div>ID</div>\n            <div>NFT</div>\n            <div>Amount</div>\n            <div>From</div>\n            <div>Action</div>\n            <div>Created</div>\n          </div>\n          <div>\n            {offers &&\n              offers.map((offer) => {\n                const hashData = fetch(\n                  `https://${\n                    accountId.endsWith(\".testnet\") ? \"api3-testnet\" : \"api3\"\n                  }.nearblocks.io/v1/search?keyword=${offer.receipt_id}`\n                );\n                const regex = /https?:\\/\\/[^ ]+/;\n                const found = regex.test(offer.media);\n                const imageUrl = found\n                  ? offer.media\n                  : `${offer.base_uri}/${offer.media}`;\n                return (\n                  <div className=\"trx-row\" key={offer.offer_id}>\n                    <div>\n                      <Link\n                        to={\n                          offer.metadata_id\n                            ? `/bos.genadrop.near/widget/Mintbase.App.Index?page=nftDetails&metadataId=${offer?.metadata_id?.replace(\n                                \":\",\n                                \"%3A\"\n                              )}`\n                            : \"#\"\n                        }\n                        target=\"_blank\"\n                        className=\"title tab\"\n                      >\n                        {offer?.offer_id ? offer.offer_id : \"No ID\"}\n                      </Link>\n                    </div>\n                    <div className=\"title\">\n                      {\" \"}\n                      <img\n                        src={\n                          \"https://image-cache-service-z3w7d7dnea-ew.a.run.app/media?url=\" +\n                          imageUrl\n                        }\n                        alt={offer.title}\n                      />\n                      <Link\n                        to={\n                          offer.metadata_id\n                            ? `/bos.genadrop.near/widget/Mintbase.App.Index?page=nftDetails&metadataId=${offer?.metadata_id?.replace(\n                                \":\",\n                                \"%3A\"\n                              )}`\n                            : \"#\"\n                        }\n                        target=\"_blank\"\n                        className=\"tab\"\n                      >\n                        {offer.title\n                          ? offer.title.length > 7\n                            ? `${offer.title.substring(0, 6)}...`\n                            : offer.title\n                          : \"No Title\"}\n                      </Link>\n                    </div>\n                    <div>\n                      {\" \"}\n                      {offer.offer_price ? (\n                        <div className=\"price\">\n                          {YoctoToNear(offer.offer_price)}\n                          <img src={nearLogo} alt=\"NEAR\" />\n                        </div>\n                      ) : (\n                        <div className=\"price\">-</div>\n                      )}{\" \"}\n                    </div>\n                    <Widget\n                      src=\"near/widget/AccountProfileOverlay\"\n                      props={{\n                        accountId: offer.offered_by,\n                        children: (\n                          <a\n                            href={\n                              \"https://near.org/near/widget/ProfilePage?accountId=\" +\n                              offer.offered_by\n                            }\n                            className=\"address tab\"\n                            target=\"_blank\"\n                          >\n                            {_address(offer.offered_by)}{\" \"}\n                          </a>\n                        ),\n                      }}\n                    />\n                    <div className=\"tab\" onClick={acceptAndTransferHandler}>\n                      Take\n                    </div>\n                    <div className=\"time\">\n                      {getTimePassed(offer.offered_at)}\n                      {hashData.body.receipts[0]\n                        ?.originated_from_transaction_hash && (\n                        <a\n                          href={`https://${\n                            accountId.endsWith(\"testnet\")\n                              ? \"testnet.nearblocks\"\n                              : \"nearblocks\"\n                          }.io/txns/${\n                            hashData.body.receipts[0]\n                              ?.originated_from_transaction_hash\n                          }`}\n                          className=\"tab\"\n                          target=\"_blank\"\n                        >\n                          <i class=\"bi bi-box-arrow-up-right\"></i>\n                        </a>\n                      )}\n                    </div>\n                  </div>\n                );\n              })}\n          </div>\n          {!offers.length && (\n            <p className=\"trx-row\">\n              <div>No offers yet</div>\n              <div>-</div>\n              <div>-</div>\n              <div>-</div>\n              <div>-</div>\n              <div>-</div>\n            </p>\n          )}\n        </div>\n      )}\n      {showTable && (\n        <p className=\"w-100 px-4\">\n          <Widget\n            src=\"bos.genadrop.near/widget/Mintbase.TablePagination\"\n            props={{\n              totalItems,\n              isDarkModeOn,\n              itemsPerPage: offers.length,\n              currentPage: page,\n              onPageChange: (page) => setPage(page),\n            }}\n          />\n        </p>\n      )}\n    </Container>\n  );\n};\nreturn <OffersToAccount {...props} />;\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bos.genadrop.near/widget/Mintbase.App.LaunchPad.OffersToAccount", "fact_widget_deployments_id": "f63bbaa0ce39e291cfdc0a92cd2f683b", "inserted_timestamp": "2024-04-26T14:39:53.028Z", "modified_timestamp": "2024-04-26T14:39:53.028Z", "__row_index": 0}