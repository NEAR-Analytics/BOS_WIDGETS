{"tx_hash": "ANAE6tt34MGwHey9fq6c49Cn12ud4Wgk4frsvobWZQiw", "action_id_social": "311c1kyj8rRGWskn6DdSSFx39CwaXBFkzGA7j181kJJQ-0-widget", "block_id": 117436302, "block_timestamp": "2024-04-23T07:26:49.644Z", "signer_id": "bos.genadrop.near", "widget_name": "Mintbase.App.LaunchPad.OffersToAccount", "source_code": "/*\nThis is an example snippet - you should consider tailoring it\nto your service.\n*/\n\nfunction fetchGraphQL(operationsDoc, operationName, variables) {\n  return fetch(\"https://graph.mintbase.xyz/mainnet\", {\n    method: \"POST\",\n    headers: {\n      \"mb-api-key\": \"anon\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      query: operationsDoc,\n      variables: variables,\n      operationName: operationName,\n    }),\n  }).then((result) => result.json());\n}\n\nconst operationsDoc = `\n    query v2_omnisite_GetOffersToAccount($account: String!, $limit: Int!, $offset: Int!) {\n      mb_views_auctions_with_offer(\n        where: {listed_by: {_eq: $account}, offer_id: {_is_null: false}}\n        limit: $limit\n        offset: $offset\n        order_by: {offered_at: desc}\n      ) {\n        offered_by\n        offer_price\n        offered_at\n        receipt_id: offer_receipt_id\n        nft_contract_id\n        expires_at: offer_expires_at\n        token_id\n        offer_id\n        currency\n        unlisted_at\n        invalidated_at: listing_invalidated_at\n        withdrawn_at: offer_withdrawn_at\n        accepted_at: offer_accepted_at\n        listed_by\n        metadata_id\n        media\n        base_uri\n        title\n        __typename\n      }\n      mb_views_auctions_with_offer_aggregate(\n        where: {listed_by: {_eq: $account}, offer_id: {_is_null: false}}\n      ) {\n        aggregate {\n          count\n          __typename\n        }\n        __typename\n      }\n    }\n  `;\n\nfunction fetchV2_omnisite_GetOffersToAccount(account, limit, offset) {\n  return fetchGraphQL(operationsDoc, \"v2_omnisite_GetOffersToAccount\", {\n    account: account,\n    limit: limit,\n    offset: offset,\n  });\n}\n\nfetchV2_omnisite_GetOffersToAccount(account, limit, offset)\n  .then(({ data, errors }) => {\n    if (errors) {\n      // handle those errors like a pro\n      console.error(errors);\n    }\n    // do something great with this precious data\n    console.log(data);\n  })\n  .catch((error) => {\n    // handle errors from fetch itself\n    console.error(error);\n  });\n\n//   {\n//     \"account\": \"nate.near\",\n//     \"limit\": 52,\n//     \"offset\": 0\n//   }\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bos.genadrop.near/widget/Mintbase.App.LaunchPad.OffersToAccount", "fact_widget_deployments_id": "3d423ae6faeb1ea7ee69f81786e971c0", "inserted_timestamp": "2024-04-23T09:44:05.024Z", "modified_timestamp": "2024-04-23T09:44:05.024Z", "__row_index": 2}