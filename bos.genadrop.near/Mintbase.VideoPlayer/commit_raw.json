{"tx_hash": "3t96h1uYoHMgn9jc9n47EQtz6gnVTfEGqNifEKEfXyoR", "action_id_social": "CBzRbo8PRnMDbtczsKnmXbVqYW4FD4G4VnDGjaUKJT8z-0-widget", "block_id": 117657323, "block_timestamp": "2024-04-26T10:09:01.207Z", "signer_id": "bos.genadrop.near", "widget_name": "Mintbase.VideoPlayer", "source_code": "const UUID = {\n  generate: (template) => {\n    if (typeof template !== \"string\") {\n      template = \"xxxxxxxx-xxxx-xxxx-yxxx-xxxxxxxxxxxx\";\n    }\n    return template.replace(/[xy]/g, (c) => {\n      var r = (Math.random() * 16) | 0;\n      var v = c === \"x\" ? r : (r & 0x3) | 0x8;\n      return v.toString(16);\n    });\n  },\n};\nfunction handleVideoChange(e) {\n  State.update(e.target.files[0]);\n}\nfunction handleAssets(assets) {\n  console.log(\"assets\", assets);\n  State.update({ uploadedVideo: assets[0] });\n}\nfunction handleStatus(status) {\n  console.log(status);\n  State.update({ uploadStatus: status });\n}\nState.init({\n  title: \"\",\n  description: \"\",\n  tags: [],\n  playbackId: \"\",\n  view: \"BROWSE\",\n});\nfunction handleOnChange(video) {\n  State.update({ currentUpload: video });\n}\nfunction handleCreateVideo() {\n  const { playbackId, storage, size, videoSpec, downloadUrl, name, source } =\n    state.uploadedVideo;\n  console.log(state.uploadedVideo);\n  const id = UUID.generate(\"xxxxxxx\");\n  // TODO: Validate against Type\n  Social.set(\n    {\n      thing: {\n        [id]: {\n          \"\": JSON.stringify({\n            playbackId,\n            storage,\n            size,\n            videoSpec,\n            downloadUrl,\n            name,\n            source,\n            poster: \"https://ipfs.near.social/ipfs/\" + state.image.ipfs_cid,\n          }),\n          metadata: {\n            name: state.title,\n            description: state.description,\n            type: \"every.near/type/video\",\n          },\n        },\n      },\n      index: {\n        every: JSON.stringify({\n          key: \"video\",\n          value: { id, type: \"every.near/type/video\" },\n        }),\n      },\n    },\n    {\n      onCommit: () => {\n        State.update({ title: \"\", description: \"\", view: \"SUCCESS\" });\n      },\n    }\n  );\n}\nfunction handleImageUpload(image) {\n  State.update({ image });\n}\nconst ImageUploaderContainer = styled.div`\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 1em;\n  padding: 1em;\n  background: #ffffff;\n  border: 1px solid #eceef0;\n  box-shadow: 0px 1px 3px rgba(16, 24, 40, 0.1),\n    0px 1px 2px rgba(16, 24, 40, 0.06);\n  border-radius: 8px;\n  width: 100%;\n`;\nconst ProcessingOverlay = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(255, 255, 255, 0.8);\n  backdrop-filter: blur(4px);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 9999;\n`;\nconst Main = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100%;\n  .left,\n  .right {\n    width: 50%;\n    padding: 20px;\n    box-sizing: border-box;\n  }\n  input,\n  button {\n    margin-top: 10px;\n  }\n`;\nconst Button = styled.button``;\nreturn (\n  <Main className=\"container\">\n    <div className=\"left\" style={{ position: \"relative\" }}>\n      {state.uploadStatus === \"loading\" && (\n        <ProcessingOverlay>\n          <p>Processing... (this can take a minute)</p>\n        </ProcessingOverlay>\n      )}\n      <h2>Upload to Livepeer</h2>\n      <Widget\n        src={\"efiz.near/widget/Inputs.File\"}\n        props={{\n          label: \"Video\",\n          id: \"livepeer-video\",\n          fileAccept: [\"video/*\"],\n          value: state.vid,\n          UploadButton: (p) => <Button children={p.children} />,\n          handleOnChange,\n        }}\n      />\n      <ImageUploaderContainer>\n        <Widget\n          src=\"every.near/widget/every.image.create\"\n          props={{ onChange: handleImageUpload }}\n        />\n      </ImageUploaderContainer>\n      <input\n        type=\"text\"\n        placeholder=\"Title\"\n        value={state.title}\n        onChange={(e) => State.update({ title: e.target.value })}\n      />\n      <input\n        type=\"text\"\n        placeholder=\"Description\"\n        value={state.description}\n        onChange={(e) => State.update({ description: e.target.value })}\n      />\n      <input\n        type=\"text\"\n        placeholder=\"Tags separated by commas\"\n        value={state.tags.join(\", \")}\n        onChange={(e) => {\n          const v = e.target.value || \"\";\n          State.update({\n            tags: v\n              .split(\",\")\n              .filter((v) => v !== \"\")\n              .map((v) => v.trim()),\n          });\n        }}\n      />\n      <Widget\n        src=\"efiz.near/widget/Livepeer.Creator\"\n        props={{\n          video: state.currentUpload,\n          metadata: { title, description },\n          handleAssets: handleAssets,\n          handleStatus: handleStatus,\n        }}\n      />\n      <Button onClick={handleCreateVideo}>Create Thing</Button>\n    </div>\n    <div className=\"right\">\n      <h2>Play from Livepeer</h2>\n      <input\n        type=\"text\"\n        placeholder=\"Playback ID\"\n        value={state.playbackId}\n        onChange={(e) => State.update({ playbackId: e.target.value })}\n      />\n      {state.playbackId && (\n        <Widget\n          src=\"efiz.near/widget/Livepeer.Player\"\n          props={{\n            playbackId: state.playbackId,\n            title: state.title,\n            PostImage: state.image && (\n              <img\n                src={\"https://ipfs.near.social/ipfs/\" + state.image.ipfs_cid}\n                alt={state.title}\n              />\n            ),\n          }}\n        />\n      )}\n    </div>\n  </Main>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bos.genadrop.near/widget/Mintbase.VideoPlayer", "fact_widget_deployments_id": "0f135e3dc11414a15210517bb84beba2", "inserted_timestamp": "2024-04-26T11:43:20.585Z", "modified_timestamp": "2024-04-26T11:43:20.585Z", "__row_index": 0}