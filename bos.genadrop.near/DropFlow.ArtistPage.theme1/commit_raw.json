{"tx_hash": "FTtPKposHqZAuBj2UNwM5C1aNyrGGrxCdUS2q6dEv8Y4", "action_id_social": "AaXxZTbRxu4QUfW67JkYTHeLxCbWK2V2ZPBnCNJoKFFB-0-widget", "block_id": 112150722, "block_timestamp": "2024-02-05T09:35:27.468Z", "signer_id": "bos.genadrop.near", "widget_name": "DropFlow.ArtistPage.theme1", "source_code": "const accountId = props.accountId ?? context.accountId;\nif (!accountId) {\n  return \"No account ID\";\n}\n\nconst profile = props.profile ?? Social.getr(`${accountId}/profile`);\nconst fast = !profile;\n\nif (profile === null) {\n  return \"Loading\";\n}\n\nconst showThemeButton = props.showThemeButton;\n\nconst [nFTCount, setNFTCount] = useState(0);\n\nconst MiddleContent = styled.div`\n  flex: 0.8;\n  #pills-tab li button {\n    text-transform: uppercase;\n  }\n  @media (max-width: 900px) {\n    width: 100%;\n  }\n`;\n\nconst Contents = styled.div`\n  display: flex;\n  width: 100%;\n  margin-right: auto;\n  margin-left: auto;\n  align-items: flex-start;\n  gap: 20px;\n  @media (max-width: 900px) {\n    flex-direction: column-reverse;\n  }\n`;\n\nconst ImageSection = styled.div`\n  height: 240px;\n  width: 100%;\n  position: relative;\n  overflow: hidden;\n  img {\n    width: 110px;\n    height: 110px;\n    border-radius: 50%;\n    position: absolute;\n    top: 40px;\n    border: 3px solid #fff;\n    right: 20px;\n    margin: 0 auto;\n  }\n  & > .btns {\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    align-items: flex-end;\n    gap: 1rem;\n    height: 160px;\n    width: 100%;\n    position: absolute;\n    bottom: 10px;\n    left: 20px;\n    .btn {\n      text-transform: uppercase;\n      font-size: 15px;\n      letter-spacing: 4px;\n    }\n  }\n  .blurbg {\n    position: absolute;\n    left: 0;\n    bottom: -40px;\n    background: #fff;\n    filter: blur(20px);\n    -webkit-backdrop-filter: blur(70px);\n    height: 160px;\n    width: 100%;\n    flex-shrink: 0;\n  }\n  .titleArea {\n    display: flex;\n    flex-direction: column;\n    tex-align: left;\n    align-items: flex-start !important;\n    justify-content: flex-start;\n    margin: 0 auto;\n    gap: 2px;\n    height: fit-content;\n    position: absolute;\n    top: 40px;\n    left: 20px;\n    .title {\n      color: #000;\n      font-family: Helvetica Neue;\n      font-size: max(3vw, 20px);\n      font-style: normal;\n      font-weight: 700;\n      line-height: normal;\n      text-transform: uppercase;\n      letter-spacing: -2.88px;\n    }\n    .username {\n      overflow: hidden;\n      color: #b0b0b0;\n      text-overflow: ellipsis;\n      font-family: Helvetica Neue;\n      font-size: max(1.5vw, 16px);\n      font-style: normal;\n      font-weight: 500;\n      line-height: normal;\n    }\n  }\n`;\n\nconst LeftProfile = styled.div`\n  // margin-top: 104px;\n  // width: 315px;\n  flex: 0.2;\n  padding: 10px 20px;\n  background: #f8f8f8;\n  height: 100%;\n\n  .title {\n    color: #000;\n    font-family: Helvetica Neue;\n    font-size: 24px;\n    font-style: normal;\n    font-weight: 700;\n    line-height: normal;\n  }\n  .username {\n    overflow: hidden;\n    color: #b0b0b0;\n    text-overflow: ellipsis;\n    font-family: Helvetica Neue;\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 500;\n    line-height: 148%;\n  }\n  .description {\n    color: #000;\n    font-family: Helvetica Neue;\n    font-size: 16px;\n    font-style: normal;\n    margin-top: 7px;\n    font-weight: 400;\n    line-height: 148%;\n  }\n  .buttons {\n    .follow {\n      width: 90%;\n      height: 32px;\n      background: #000;\n      color: white;\n      margin-bottom: 10px;\n    }\n    .following {\n      width: 90%;\n      height: 32px;\n      color: #b0b0b0;\n      border: 1px solid #b0b0b0 !important;\n      margin-bottom: 10px;\n      cursor: not-allowed;\n    }\n    width: 100%;\n  }\n  .joinButton {\n    display: flex;\n    width: 90%;\n    align-items: center;\n    justify-content: space-between;\n    button {\n      background: black;\n      border: 0;\n      border-radius: 0;\n      width: 100%;\n    }\n  }\n  @media (max-width: 900px) {\n    width: 100%;\n    margin-bottom: 40px;\n    margin-left: 15px;\n    .title {\n      font-size: 20px;\n    }\n  }\n`;\n\nconst Tags = styled.div`\n  display: flex;\n  gap: 7px;\n  margin: 10px 0 10px 10px;\n  .tag {\n    color: #fff;\n    font-family: Helvetica Neue;\n    font-size: 24px;\n    font-style: normal;\n    font-weight: 700;\n    line-height: normal;\n    border-radius: 50px;\n    background: #f8f8f8;\n    width: max-content;\n    color: #b0b0b0;\n    text-align: center;\n    font-family: Helvetica Neue;\n    font-size: 10px;\n    font-style: normal;\n    font-weight: 500;\n    line-height: 150%; /* 15px */\n    padding: 3px 10px;\n  }\n`;\n\nconst Root = styled.div`\n  margin-bottom: 50px;\n  .proposeButton {\n    width: 100%;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n    margin-top: 20px;\n    button {\n      background: black;\n      border-radius: 0;\n      width: 250px;\n      border-color: black;\n    }\n  }\n`;\n\nconst AmountSec = styled.div`\n  max-width: 300px;\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  align-items: flex-start;\n  gap: 20px;\n  div {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    span {\n      color: #b0b0b0;\n      font-family: Helvetica Neue;\n      font-size: 8px;\n      font-style: normal;\n      font-weight: 400;\n      line-height: normal;\n      text-transform: uppercase;\n    }\n    img {\n      width: 15px;\n      height: 15px;\n    }\n    p {\n      color: #000;\n      font-family: Helvetica Neue;\n      font-size: 16px;\n      font-style: normal;\n      font-weight: 700;\n      line-height: normal;\n      text-transform: uppercase;\n      display: flex;\n      align-items: center;\n      gap: 5px;\n      span {\n        color: #000;\n        font-family: Helvetica Neue;\n        font-size: 12px;\n        font-style: normal;\n        font-weight: 400;\n        line-height: normal;\n        text-transform: uppercase;\n      }\n    }\n  }\n`;\n\nconst showEditButton = accountId && accountId === context.accountId;\n\nconsole.log(\"edit? \", showEditButton);\n\nfunction followUser(user, isFollowing) {\n  if (isFollowing) return;\n  const dataToSend = {\n    graph: { follow: { [user]: isFollowing ? null : \"\" } },\n    index: {\n      graph: JSON.stringify({\n        key: \"follow\",\n        value: {\n          type,\n          accountId: user,\n        },\n      }),\n      notify: JSON.stringify({\n        key: user,\n        value: {\n          type,\n        },\n      }),\n    },\n  };\n  Social.set(dataToSend, {\n    force: true,\n  });\n}\n\nconst following = Social.keys(`${accountId}/graph/follow/*`, \"final\", {\n  return_type: \"BlockHeight\",\n  values_only: true,\n});\n\nconst followers = Social.keys(`*/graph/follow/${accountId}`, \"final\", {\n  return_type: \"BlockHeight\",\n  values_only: true,\n});\n\nconst numFollowing = following\n  ? Object.keys(following[accountId].graph.follow || {}).length\n  : null;\nconst numFollowers = followers ? Object.keys(followers || {}).length : null;\n\nconst fetchNFTCount = (account) => {\n  const response = fetch(\"https://graph.mintbase.xyz/mainnet\", {\n    method: \"POST\",\n    headers: {\n      \"mb-api-key\": \"anon\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      query: `query NFTCountQuery {\n    nft_tokens_aggregate(where: {owner: {_eq: \"${account}\"}}) {\n          aggregate {\n            count\n          }\n        }\n      }     \n`,\n    }),\n  });\n  let countData = response?.body?.data?.nft_tokens_aggregate;\n  console.log(\"counData: \", countData);\n  return countData;\n};\n\nif (accountId) {\n  let nftCountNew = fetchNFTCount(accountId);\n  setNFTCount(nftCountNew.aggregate.count);\n}\n\nconsole.log(\"nFTCount: \", nFTCount);\n\n// {/* <Widget\n//   src=\"bos.genadrop.near/widget/CPlanet.Profile.Large\"\n// //   props={{\n// //     accountId,\n// //     profile,\n// //     link: true,\n// //     fast,\n// //     showEditButton: !props.profile,\n// //   }}\n// /> */}\nconst background = profile.backgroundImage\n  ? `https://ipfs.near.social/ipfs/${profile.backgroundImage.ipfs_cid}`\n  : \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRub7hFLkStCvZiaSeiUGznP4uzqPPcepghhg&usqp=CAU\";\nreturn (\n  <Root>\n    <ImageSection\n      style={{\n        backgroundImage: `url(${background})`,\n        backgroundSize: \"cover\",\n        backgroundPosition: \"center\",\n        backgroundRepeat: \"no-repeat\",\n      }}\n    >\n      <div className=\"blurbg\"></div>\n      <img\n        src={\n          profile.image\n            ? `https://ipfs.near.social/ipfs/${profile.image.ipfs_cid}`\n            : \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRub7hFLkStCvZiaSeiUGznP4uzqPPcepghhg&usqp=CAU\"\n        }\n      />\n      <div className=\"btns\">\n        {!showEditButton && (\n          <button\n            onClick={() => followUser(accountId, accountFollowsYou)}\n            className={`btn btn-outline-secondary rounded-5 ${\n              accountFollowsYou ? \"following\" : \"follow\"\n            }`}\n          >\n            {accountFollowsYou ? \"Following\" : \"Follow\"}\n          </button>\n        )}\n        {showEditButton && (\n          <div>\n            <Link\n              className=\"btn btn-outline-primary rounded-5\"\n              href={`/bos.genadrop.near/widget/DropFlow.CreatePage.Index?accountId=${accountId}`}\n            >\n              <i class=\"bi bi-arrow-up-right-circle\"></i>\n              {props.createText ?? \"Create Your Page\"}\n            </Link>\n          </div>\n        )}\n        {showEditButton && showThemeButton && (\n          <div>\n            <button\n              className=\"btn btn-outline-primary rounded-5\"\n              onClick={props.onChangeTheme}\n              style={{\n                float: \"right\",\n                position: \"absolute\",\n                right: \"40px\",\n                bottom: \"0\",\n                fontSize: \"12px\",\n              }}\n            >\n              Next Theme\n              <i className=\"bi bi-arrow-right-short\"></i>\n            </button>\n          </div>\n        )}\n      </div>\n      <div className=\"titleArea\">\n        <span className=\"username\">@{accountId ?? \"yourprofile.near\"}</span>\n        <h1 className=\"title\">{profile.name ?? accountId}</h1>\n      </div>\n    </ImageSection>\n    <Contents>\n      <MiddleContent>\n        <Widget\n          src=\"bos.genadrop.near/widget/DropFlow.ArtistPage.Tabs\"\n          props={{ accountId, profile }}\n        />\n      </MiddleContent>\n      <LeftProfile>\n        <h1 className=\"title\">About The Artist</h1>\n        <p className=\"description\">\n          {/* Truncate the description if it's longer than 6 lines */}\n          {profile.description && profile.description.split(\"\\n\").length > 6 ? (\n            <>\n              {profile.description\n                .split(\"\\n\")\n                .slice(0, 6)\n                .map((line) => (\n                  <>\n                    {line}\n                    <br />\n                  </>\n                ))}\n              <span style={{ color: \"#b0b0b0\" }}>...</span>\n            </>\n          ) : (\n            profile.description\n          )}\n        </p>\n        <AmountSec>\n          <div className=\"text-center\">\n            <span>Follower{numFollowers !== 1 && \"s\"}</span>\n            <p className=\"text-center\">\n              {numFollowers !== null ? numFollowers : \"?\"}\n            </p>\n          </div>\n          <div className=\"text-center\">\n            <span>Following</span>\n            <p className=\"text-center\">\n              {numFollowing !== null ? numFollowing : \"?\"}\n            </p>\n          </div>\n          <div className=\"text-center\">\n            <span>Owned NFTs</span>\n            <p className=\"text-center\">{nFTCount ?? \"0\"}</p>\n          </div>\n          <div className=\"text-center\">\n            <span>Total Polls</span>\n            <p className=\"text-center\">{poLlsCount ?? \"0\"}</p>\n          </div>\n        </AmountSec>\n        <Tags>\n          {profile.tags &&\n            Object.keys(profile.tags).length > 0 &&\n            Object.keys(profile.tags)\n              .slice(0, 3)\n              .map((data) => <div className=\"tag\">{data}</div>)}\n        </Tags>\n        <div className=\"buttons\">\n          <button\n            onClick={() => followUser(accountId, accountFollowsYou)}\n            className={accountFollowsYou ? \"following\" : \"follow\"}\n          >\n            {accountFollowsYou ? \"Following\" : \"Follow\"}\n          </button>\n          <div\n            style={{\n              minWidth: \"12rem\",\n              justifyContent: \"flex-end\",\n              width: \"fit-content\",\n            }}\n            className=\"d-flex gap-2\"\n          >\n            <Widget\n              src=\"bos.genadrop.near/widget/DropFlow.LinkTree\"\n              props={{ linktree: profile.linktree }}\n            />\n          </div>\n        </div>\n      </LeftProfile>\n    </Contents>\n  </Root>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bos.genadrop.near/widget/DropFlow.ArtistPage.theme1", "fact_widget_deployments_id": "c4e21a8c26e6be082a712caba571e26b", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 1}