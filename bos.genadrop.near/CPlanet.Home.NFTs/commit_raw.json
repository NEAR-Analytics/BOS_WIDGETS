{"tx_hash": "Y1KiMvitwHf6bUtY4y1V9XJw9e5QKe5bXismikYJxWi", "action_id_social": "6NEipBQGobZXS9zxm7o4bSyfbQJrKWdBaPJp1TYMnpLm-0-widget", "block_id": 109968071, "block_timestamp": "2024-01-09T08:35:19.613Z", "signer_id": "bos.genadrop.near", "widget_name": "CPlanet.Home.NFTs", "source_code": "const Root = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  margin-bottom: 30px;\n  justify-content: center;\n  .head,\n  .community {\n    margin-top: 30px;\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n  }\n  .community {\n    margin-top: 92px;\n  }\n  h1 {\n    color: #000;\n    font-family: Helvetica Neue;\n    font-size: 64px;\n    font-style: normal;\n    font-weight: 500;\n    text-align: center;\n    line-height: normal;\n  }\n  span {\n    color: #b0b0b0;\n    text-align: center;\n    font-family: Helvetica Neue;\n    font-size: 24px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: 131.3%; /* 31.512px */\n  }\n  .nfts {\n    display: flex;\n    align-items: center;\n    gap: 20px;\n    margin-top: 20px;\n    flex-wrap: wrap;\n  }\n  .daos {\n    margin-top: 40px;\n    display: flex;\n    align-items: center;\n    flex-wrap: wrap;\n    justify-content: center;\n    gap: 20px;\n  }\n  .all {\n    color: black;\n    cursor: pointer;\n    text-decoration: none;\n\n    border: 1px solid #000;\n    transition: 0.3s ease-in-out;\n    padding: 6px;\n  }\n  .all:hover {\n    background: black;\n    color: white;\n  }\n  .explore {\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    justify-content: center;\n    align-items: center;\n    .daos {\n      margin-top: 40px;\n      display: flex;\n      align-items: center;\n      flex-wrap: wrap;\n      justify-content: center;\n      gap: 20px;\n    }\n  }\n  @media (max-width: 600px) {\n    h1 {\n      font-size: 35px;\n    }\n    span {\n      font-size: 20px;\n    }\n  }\n`;\n\nconst communities = [\n  \"marmaj.sputnik-dao.near\",\n  \"daorecords.sputnik-dao.near\",\n  \"vibes.sputnik-dao.near\",\n];\n\nState.init({\n  featuredNFTs: [],\n});\n\nconst logo =\n  \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTrJuxjGxj4QmyreE6ix4ygqm5pK9Nn_rdc8Ndw6lmJcd0SSnm2zBIc2xJ_My1V0WmK2zg&usqp=CAU\";\n\nconst fetchStoreFrontData = () => {\n  const response2 = fetch(\"https://graph.mintbase.xyz/mainnet\", {\n    method: \"POST\",\n    headers: {\n      \"mb-api-key\": \"anon\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      query: `query MyQuery {\n  mb_views_nft_tokens(\n    where: {nft_contract: {id: {_eq: \"marmaj.mintbase1.near\"}}}\n    offset: 0\n    limit: 3\n  ) {\n                media \n                owner\n                token_id\n                nft_contract_id\n                description\n                title\n                listings {\n                    price\n                    unlisted_at\n                    listed_by\n \n            }\n      }\n}\n`,\n    }),\n  });\n  if (response2.ok) {\n    State.update({\n      featuredNFTs: response2?.body?.data?.mb_views_nft_tokens,\n    });\n  }\n};\n\nfetchStoreFrontData();\n\nreturn (\n  <Root>\n    <div className=\"head\">\n      <h1>Explore the NFTS</h1>\n      <span>DAOs funded by the Creatives DAO</span>\n    </div>\n    <div className=\"explore\">\n      <div className=\"daos\">\n        {state.featuredNFTs.length ? (\n          state.featuredNFTs.map((data, index) => (\n            <div key={index}>\n              <Widget\n                props={{\n                  title: data.title,\n                  description: data.description,\n                  image: data.media,\n                  owner: data.owner,\n                  chainState: \"near\",\n                  logo,\n                  onButtonClick: () =>\n                    props.update({\n                      tab: \"singleNFT\",\n                      contractId: data.nft_contract_id,\n                      tokenId: data.token_id,\n                      chainState: \"near\",\n                    }),\n                  price: data.listings.length\n                    ? (\n                        data.listings.length / 1000000000000000000000000\n                      ).toFixed(2)\n                    : null,\n                  isListed: data.listings.length ? \"LISTED\" : \"NOT LISTED\",\n                  tokenId: data.token_id,\n                  contractId: data.nft_contract_id,\n                }}\n                src=\"bos.genadrop.near/widget/CPlanet.NFTCard.Index\"\n              />\n            </div>\n          ))\n        ) : (\n          <div className=\"noNfts\">\n            <span>No NFTs to display right now</span>\n          </div>\n        )}\n      </div>\n      <a\n        href=\"#/bos.genadrop.near/widget/CPlanet.Index?tab=explore\"\n        className=\"all\"\n        onClick={() => props.update({ tab: \"explore\" })}\n      >\n        Show All NFTs (50+)\n      </a>\n    </div>\n    <div className=\"community\">\n      <h1>Our Communties</h1>\n      <span>DAOs funded by the Creatives DAO</span>\n    </div>\n    <div className=\"daos\">\n      {communities.map((data, index) => (\n        <div key={index}>\n          <Widget\n            props={{\n              daoId: data,\n              onButtonClick: () =>\n                props.update({ tab: \"daoProfile\", daoId: data }),\n            }}\n            src=\"bos.genadrop.near/widget/CPlanet.DAO.Card\"\n          />\n        </div>\n      ))}\n    </div>\n    <a\n      href=\"#/bos.genadrop.near/widget/CPlanet.Index?tab=community\"\n      className=\"all\"\n      onClick={() => props.update({ tab: \"community\" })}\n    >\n      Show All Communities (59)\n    </a>\n  </Root>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bos.genadrop.near/widget/CPlanet.Home.NFTs", "fact_widget_deployments_id": "e394e230b113c74a43d3f1da522f3865", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 4}