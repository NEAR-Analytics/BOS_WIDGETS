{"tx_hash": "A4hBmVBhE1BnZjyNhvoxVmHRcnurZs8QnZHKJPwsdnAP", "action_id_social": "HDPFz94b88RNR4oVYgUpBmxwXohv1oATt9vmbKe2vxm-0-widget", "block_id": 112336835, "block_timestamp": "2024-02-07T22:08:35.282Z", "signer_id": "bos.genadrop.near", "widget_name": "CPlanet.ChainsDropdown", "source_code": "const defaultProps = [\n    {\n      id: \"0\",\n      name: \"near\",\n      url: \"https://ipfs.near.social/ipfs/bafkreigv55ubnx3tfhbf56toihekuxvgzfqn5c3ndbfjcg3e4uvaeuy5cm\",\n    },\n    {\n      id: \"137\",\n      name: \"polygon\",\n      url: \"https://ipfs.near.social/ipfs/bafkreie5h5oq6suoingcwuzj32m3apv56rl56wpwpaxmevlk5vndlypxze\",\n    },\n  ];\n  \n  const propsChains = props.chains ?? defaultProps;\n  \n  const chains = {\n    polygon: {\n      name: \"Polygon\",\n      url: \"https://ipfs.near.social/ipfs/bafkreie5h5oq6suoingcwuzj32m3apv56rl56wpwpaxmevlk5vndlypxze\",\n    },\n    aurora: {\n      name: \"Aurora\",\n      url: \"https://ipfs.near.social/ipfs/bafkreiajqik4gjbmkh7z2gylpjzrsuht7simjecpxuoqn6icqfbioswzuy\",\n    },\n    celo: {\n      name: \"Celo\",\n      url: \"https://ipfs.near.social/ipfs/bafkreifu6ufsdf2ivrs5febt7l25wdys6odzfelgjauzod7owrfug56cxe\",\n    },\n    avalanche: {\n      name: \"Avax\",\n      url: \"https://ipfs.near.social/ipfs/bafkreifhu5fytsjcmjluarfnu6kcdhaqz4rgdrbbzf6dlsmggqb7oi3w4e\",\n    },\n    arbitrum: {\n      name: \"Arbitrum\",\n      url: \"https://ipfs.near.social/ipfs/bafkreiffax4lnya337rz5ph75faondeqmpy6xj37yprwvxbru4qc5emsiq\",\n    },\n    near: {\n      name: \"Near\",\n      url: \"https://ipfs.near.social/ipfs/bafkreigv55ubnx3tfhbf56toihekuxvgzfqn5c3ndbfjcg3e4uvaeuy5cm\",\n    },\n  };\n  \n  State.init({\n    selectIsOpen: false,\n    selectedChain: \"0\",\n  });\n  const handleSelectClick = () => {\n    State.update({\n      selectIsOpen: !state.selectIsOpen,\n    });\n  };\n  \n  const handleOutsideClick = (e) => {\n    e.preventDefault();\n    if (!!state.selectIsOpen) {\n      State.update({\n        selectIsOpen: false,\n      });\n    }\n  };\n  \n  const SelectTag = styled.select`\n    height: fit-content;\n    width: 300px;\n  `;\n  \n  const ChainIcon = styled.option`\n    display: flex;\n    height: 130px;\n    padding: 1rem auto;\n    &>img{\n      height:100px;\n      width: 100px;\n      object-fit: contain;\n    }\n  `;\n  \n  const SelectReplicaContainer = styled.div`\n    position: relative;\n    display: inline-block;\n    // margin: 0 20px;\n    user-select:none;\n      z-index: 1;\n  \n    & .select-replica__select {\n      position: relative;\n      z-index: 1;\n    }\n  \n    & .select-replica__select.open{\n      span{\n        transform: rotate(180deg)\n      }\n    }\n  \n    & .select-replica__selected {\n      cursor: pointer;\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      border: 4px solid rgba(0, 0, 0, 0.317);\n      gap: 10px;\n      z-index: 1;\n      border-radius: .4rem;\n      background-color: transparent;\n      width:100%;\n      max-width: 350px;\n      padding:0 10px 0 5px;\n      min-height:20px;\n      \n  \n  \n      & > img {\n        height: 100%;\n        width: 80px;\n        object-fit: contain;\n      }\n  \n      & > span {\n          color: #000;\n      }\n  \n    }\n  \n    & .select-replica__options {\n      position: absolute;\n      opacity:0;\n      top: 110%;\n      left: 0;\n      width: 100%;\n      margin:auto;\n      border-radius: 10px;\n      background-color: transparent;\n      height: auto;\n      box-shadow: 0 10px 20px 10px rgba(0,0,0,.05);\n      pointer-events:none;\n      transform:translateY(-100px);\n      transition: all .2s;\n      max-width: 350px;\n    }\n  \n    & .select-replica__options.open {\n      transition: all .2s;\n      transform:translateY(0);\n      opacity:1;\n      pointer-events:all;\n      width: 100%;\n      max-width: 350px;\n    }\n  \n    & .select-replica__option {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      cursor: pointer;\n      background-color: #fff;\n      padding: 0;\n      border-bottom: 1px solid rgba(0,0,0,.05);\n    }\n  \n    & .select-replica__option.selected {\n      background-color: #f0f0f0;\n    }\n  \n    & .select-replica__option img {\n      height: 80px;\n      width: 100px;\n      object-fit: contain;\n    }\n  `;\n  State.update({ chains: propsChains || chains });\n  const handleChainChange = (chain_id, chainName) => {\n    props.updateChain(chainName);\n    try {\n      Ethers.send(\"wallet_switchEthereumChain\", [\n        { chainId: `0x${Number(chain_id).toString(16)}` },\n      ]);\n      State.update({\n        selectedChain: chain_id,\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  \n  return (\n    <>\n      <SelectReplicaContainer>\n        <div\n          className={`select-replica__select ${state.selectIsOpen ? \"open\" : \"\"}`}\n          onClick={handleSelectClick}\n        >\n          <div className=\"select-replica__selected\">\n            {state.chains &&\n              state.chains.filter(\n                (chain) => chain?.id === state?.selectedChain?.toString()\n              ) && (\n                <img\n                  src={state.chains\n                    .filter(\n                      (chain) => chain.id === state.selectedChain.toString()\n                    )\n                    .map((c) => c.url)}\n                  alt={state.chains\n                    .filter(\n                      (chain) => chain.id === state.selectedChain.toString()\n                    )\n                    .map((c) => c.name)}\n                />\n              )}\n            <span>\u25bc</span>\n          </div>\n          <div\n            className={`select-replica__options ${\n              state.selectIsOpen ? \"open\" : \"\"\n            }`}\n          >\n            {state.chains &&\n              state.chains.map((chain) =>\n                chain.id !== state.selectedChain.toString() ? (\n                  <div\n                    key={chain.id}\n                    className={`select-replica__option ${\n                      selectedOption === chain.name ? \"selected\" : \"\"\n                    }`}\n                    onClick={() => handleChainChange(chain.id, chain.name)}\n                  >\n                    <img src={chain.url} alt={chain.name} />\n                  </div>\n                ) : (\n                  \"\"\n                )\n              )}\n          </div>\n        </div>\n      </SelectReplicaContainer>\n    </>\n  );  ", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bos.genadrop.near/widget/CPlanet.ChainsDropdown", "fact_widget_deployments_id": "c55de985dcd7031d380730622b110b32", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}