{"tx_hash": "FKrB7nx7qERb4yM1fgr915ZVaEAgmKkCvpV4VEfzPT39", "action_id_social": "2CsQgPNzrq1nkH1MhgGMGTZL3YMVVfG6fBezeu9xn11u-0-widget", "block_id": 114148011, "block_timestamp": "2024-03-05T14:55:50.137Z", "signer_id": "bos.genadrop.near", "widget_name": "Mintbase.App.Navbar.Index", "source_code": "const { mode } = props;\nconst isDarkModeOn = mode === \"dark\";\n\nconst accountId = props.accountId || \"bos.genadrop.near\";\nconst [isOpen, setIsOpen] = useState(false);\n\nconst {\n  getInputLabelFontType,\n  getFontType,\n  MbDropdownHoverMenu,\n  MbArrowMenu,\n  MbRoutes,\n} = VM.require(\"bos.genadrop.near/widget/Mintbase.components\");\n\nconst MbNavbar = styled.div`\n  width: 100%;\n  border-bottom: 1px solid ${isDarkModeOn ? \"#374151\" : \"#E5E7EB\"};\n  padding: 10px;\n  background: ${isDarkModeOn ? \"\" : \"#fff\"};\n  position: sticky;\n  box-shadow: rgba(0, 0, 0, 0.15) 1.95px 1.95px 2.6px;\n  .nav {\n    position: sticky;\n    top: 0;\n    background-color: ${isDarkModeOn ? \"rgba(0, 0, 0, 0.2)\" : \"#fff\"};\n    z-index: 50;\n    margin-left: 24px; /* mx-24 */\n    margin-right: 24px; /* mx-24 */\n    padding: 0 10px;\n    @media (min-width: 768px) {\n      margin-left: 64px; /* md:mx-64 */\n      margin-right: 64px; /* md:mx-64 */\n    }\n  }\n  .innerNav {\n    display: flex;\n    justify-content: space-between; /* flex justify-between */\n    align-items: center; /* items-center */\n    padding-top: 20px; /* py-20 */\n    @media (max-width: 800px) {\n      flex-direction: column;\n    }\n  }\n  .rightNav {\n    display: flex;\n    justify-content: center; /* flex justify-center */\n    align-items: center; /* items-center */\n    flex: 1; /* flex-1 */\n    gap: 24px; /* gap-24 */\n    margin-right: 24px; /* mr-24 */\n    img {\n      width: 20%;\n    }\n    input {\n      ${getInputLabelFontType(\"big\")}\n      border: none;\n      background: ${mode === \"dark\" ? \"#101223\" : \"rgba(243, 244, 248)\"};\n      color: ${mode === \"dark\" ? \"#71766c\" : \"\"};\n      padding: 12px;\n      &::placeholder {\n        color: ${mode === \"dark\" ? \"#71766c\" : \"\"};\n      }\n    }\n    input:focus {\n      outline: none;\n      border: none;\n    }\n  }\n  .tabs {\n    display: flex;\n    @media (max-width: 800px) {\n      flex-direction: column;\n      display: ${isOpen ? \"flex\" : \"none\"};\n      width: 100%;\n      align-items: flex-start;\n      margin: 20px;\n    }\n  }\n`;\nconst Dropdown = styled.div`\n  display: flex;\n  align-items: center;\n  font-weight: bold;\n  gap: 20px;\n  height: 100%;\n  background: ${mode === \"light\" ? \"\" : \"#1e2030\"};\n  background ${getInputLabelFontType(\"big\")} a {\n    color: #000;\n    text-decoration: none;\n    color: ${isDarkModeOn ? \"#fff\" : \"\"};\n  }\n  ul {\n    display: flex;\n    flex-direction: column;\n    padding: 0;\n    margin: 0;\n    list-style-type: none;\n    li {\n      padding: 0.75rem;\n      border-radius: 9999px;\n      transition: 0.4s ease-in-out;\n      color: ${isDarkModeOn ? \"#fff\" : \"\"};\n    }\n    li:hover {\n      background-color: ${isDarkModeOn\n        ? \"#93C5FD\"\n        : \"#93C5FD\"}; /* hover:bg-blue-300-15 or hover:bg-blue-100-15 */\n    }\n  }\n\n  .left {\n    display: flex;\n    flex-direction: column;\n  }\n  .rightButtons {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-between;\n  }\n  .rightObjects {\n    display: flex;\n  }\n  @media (max-width: 800px) {\n    flex-direction: column;\n    margin-left: 40px;\n  }\n`;\n\nconst RouteButton = styled.a`\n  text-decoration: none;\n  display: flex;\n  padding: 10px; /* p-10 */\n  border-radius: 9999px; /* rounded */\n  color: ${isDarkModeOn ? \"#FFFFFF\" : \"#000000\"}; /* dark:text-white */\n  text-align: center; /* text-center */\n  margin-top: 10px; /* mt-10 */\n  ${getInputLabelFontType(\"big\")}\n  background-color: ${isDarkModeOn\n    ? \"#374151\"\n    : \"#F3F4F6\"}; /* dark:bg-gray-800 or bg-gray-100 */\n  &:hover {\n    background-color: ${isDarkModeOn\n      ? \"#93C5FD\"\n      : \"#93C5FD\"}; /* hover:bg-blue-300-15 or hover:bg-blue-100-15 */\n  }\n  height: 3.5rem; /* h-14 */\n  width: 16rem; /* w-64 */\n  line-height: 1rem; /* leading-4 */\n  justify-content: center; /* justify-center */\n  align-items: center; /* items-center */\n  cursor: pointer; /* cursor-pointer */\n  &:hover {\n    background-color: ${isDarkModeOn\n      ? \"#BFDBFE\"\n      : \"#BFDBFE\"}; /* dark:hover:bg-blue-100-15 or hover:bg-blue-100-15 */\n  }\n  img {\n    height: 20px !important;\n    width: 20px !important;\n  }\n  h1 {\n    margin-left: 0.75rem;\n    ${getInputLabelFontType(\"big\")}\n  }\n`;\n\nconst MobileNavOptions = styled.div`\n  display: none;\n  background-color: ${isOpen ? \"#fff\" : \"transparent\"};\n\n  * {\n    font-family: Helvetica Neue;\n  }\n  @media screen and (max-width: 769px) {\n    display: flex;\n  }\n`;\n\nconst MenuToggle = styled.div`\n  padding: 5px;\n  cursor: pointer;\n  .burger path {\n    stroke: ${props.isHome ? \"#fff\" : \"#000\"};\n  }\n`;\n\nconst menuToggleHandler = () => setIsOpen(!isOpen);\n\nreturn (\n  <MbNavbar>\n    <div className=\"navbar\">\n      <div className=\"innerNav\">\n        <div className=\"rightNav\">\n          <img src=\"https://www.mintbase.xyz/mintbase1.svg\" />\n          <input\n            type=\"search\"\n            placeholder=\"Search for NFTs, Contracts or Users\"\n          />\n          <MobileNavOptions>\n            <MenuToggle onClick={() => menuToggleHandler()}>\n              {!isOpen ? (\n                <svg\n                  width=\"24\"\n                  height=\"24\"\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  className=\"burger\"\n                >\n                  <path\n                    d=\"M22 12H2\"\n                    stroke=\"white\"\n                    stroke-width=\"1.25\"\n                    stroke-linejoin=\"bevel\"\n                  />\n                  <path\n                    d=\"M22 20H2\"\n                    stroke=\"white\"\n                    stroke-width=\"1.25\"\n                    stroke-linejoin=\"bevel\"\n                  />\n                  <path\n                    d=\"M22 4H2\"\n                    stroke=\"white\"\n                    stroke-width=\"1.25\"\n                    stroke-linejoin=\"bevel\"\n                  />\n                </svg>\n              ) : (\n                <svg\n                  width=\"18\"\n                  height=\"18\"\n                  viewBox=\"0 0 18 18\"\n                  fill=\"none\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    d=\"M1 1L9 9M17 17L9 9M9 9L17 1M9 9L1 17\"\n                    stroke=\"black\"\n                    stroke-width=\"1.25\"\n                    stroke-linejoin=\"bevel\"\n                  />\n                </svg>\n              )}\n            </MenuToggle>\n          </MobileNavOptions>\n        </div>\n\n        <div className=\"tabs\">\n          {Object.entries(MbRoutes).map(([key, value]) => (\n            <MbDropdownHoverMenu\n              key={key}\n              dropdownButton={\n                <MbArrowMenu mode={mode} isActive={true} title={key} />\n              }\n              mode={mode}\n            >\n              <Dropdown>\n                <div className=\"left\">\n                  {Array.isArray(value.left) && (\n                    <ul>\n                      {value.left.map((item) => (\n                        <li key={item.link}>\n                          <a\n                            target={item.external ? \"_blank\" : \"\"}\n                            href={`${item.link}`}\n                          >\n                            {item.name}\n                          </a>\n                        </li>\n                      ))}\n                    </ul>\n                  )}\n                </div>\n                <hr className=\"border\"></hr>\n                {Array.isArray(value.right) ? (\n                  <div className=\"rightButtons\">\n                    {value.right.map((element, index) => (\n                      <div className=\"rightButtons\" key={index}>\n                        <RouteButton href={element.route}>\n                          <img\n                            alt=\"\"\n                            src={`https://ipfs.near.social/ipfs/${element.ipfsHash}`}\n                          />\n                          <h1>{element.label}</h1>\n                        </RouteButton>\n                      </div>\n                    ))}\n                  </div>\n                ) : (\n                  <div className=\"rightObjects\">\n                    {Object.values(value.right).map((group, index) => (\n                      <ul key={index}>\n                        {group.map((item) => (\n                          <li key={item.link}>\n                            <a href={`${item.link}`}>{item.name}</a>\n                          </li>\n                        ))}\n                      </ul>\n                    ))}\n                  </div>\n                )}\n              </Dropdown>\n            </MbDropdownHoverMenu>\n          ))}\n        </div>\n      </div>\n    </div>\n  </MbNavbar>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bos.genadrop.near/widget/Mintbase.App.Navbar.Index", "fact_widget_deployments_id": "d83cf417370edaa09ff21c20450aa0ef", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}