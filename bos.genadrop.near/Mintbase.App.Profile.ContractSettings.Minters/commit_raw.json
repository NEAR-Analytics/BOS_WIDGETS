{"tx_hash": "4noDoxcrxdVLqZ9SH9x7VqhLAYrzAsBwnu4SU72fK22S", "action_id_social": "9Ra8K5S1D8A9k4vP5zsrk5JoZh7HWiHGFBgPTBwgKkYH-0-widget", "block_id": 119339143, "block_timestamp": "2024-05-20T10:50:21.709Z", "signer_id": "bos.genadrop.near", "widget_name": "Mintbase.App.Profile.ContractSettings.Minters", "source_code": "const { addAndRemoveMinters, fetchStoreMinters } = VM.require(\n  \"bos.genadrop.near/widget/Mintbase.utils.sdk\"\n);\nconst { MbInputField } = VM.require(\n  \"bos.genadrop.near/widget/Mintbase.MbInput\"\n) || {\n  MbInputField: () => <></>,\n};\nconst deleteIcon = (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    height=\"24px\"\n    viewBox=\"0 0 24 24\"\n    width=\"24px\"\n    fill=\"#000000\"\n    class=\"fill-current text-blue-300 dark:text-blue-100\"\n  >\n    <path d=\"M0 0h24v24H0z\" fill=\"none\"></path>\n    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"></path>\n    <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zm2.46-7.12l1.41-1.41L12 12.59l2.12-2.12 1.41 1.41L13.41 14l2.12 2.12-1.41 1.41L12 15.41l-2.12 2.12-1.41-1.41L10.59 14l-2.13-2.12zM15.5 4l-1-1h-5l-1 1H5v2h14V4z\"></path>\n  </svg>\n);\nconst Root = styled.div`\n  margin: 40px 0;\n  height: 500px;\n  padding: 40px;\n  background: #fff;\n  .topSec {\n    max-height: 300px;\n    overflow-y: scroll;\n    h2 {\n      margin-bottom: 20px;\n    }\n    ul {\n      list-style-type: none;\n      display: flex;\n      width: 100%;\n      justify-content: space-between;\n      border-bottom: 1px solid #e0e3e7;\n      padding-bottom: 10px;\n      li {\n      }\n      svg {\n        fill: #7c83bb;\n        cursor: pointer;\n      }\n    }\n  }\n`;\nconst Bottom = styled.div`\n  display: flex;\n  margin-top: 40px;\n  align-items: center;\n  justify-content: space-between;\n  padding: 20px;\n  div {\n    display: flex;\n    gap: 10px;\n  }\n  .token {\n    width: 126px;\n    height: 72px;\n    background: ${(props) => (props.isDarkModeOn ? \"#262a3b\" : \"#f8f8f8\")};\n    padding: 8px;\n    display: flex;\n    flex-direction: column;\n    color: ${(props) => (props.isDarkModeOn ? \"#fff\" : \"#000\")};\n    span {\n      font-size: 12px;\n    }\n  }\n  .clear {\n    display: flex;\n    align-items: center;\n    p {\n      margin: 0;\n      padding: 5px 10px;\n      border-radius: 0.25rem;\n      transition: 0.3s;\n      background: ${(props) =>\n        props.isDarkModeOn ? \"#c5d0ff\" : \"transparent\"};\n      color: #4f58a3;\n      cursor: pointer;\n      &:hover {\n        background: ${(props) =>\n          props.isDarkModeOn ? \"#c5d0ff\" : \"rgba(59, 130, 246, 0.5)\"};\n      }\n    }\n    button {\n      background: #000;\n      border: none;\n      &:disabled {\n        background: #d0d5d9;\n        cursor: not-allowed;\n        color: #000;\n      }\n    }\n  }\n`;\nconst Top = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 30px;\n  height: 60px;\n  border-bottom: 1px solid\n    ${(props) => (props.isDarkModeOn ? \"#3e4352\" : \"#e7ebee\")};\n  p {\n    font-weight: bold;\n    color: ${(props) => (props.isDarkModeOn ? \"#fff\" : \"#000\")};\n  }\n  p:last-child {\n    cursor: pointer;\n  }\n`;\nconst ModalBg = styled.div`\n  overflow-y: auto;\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  width: 100vw !important;\n  height: 100%;\n  background-color: #000000;\n  opacity: 0.75;\n  z-index: 999;\n`;\nconst Modal = styled.div`\n  justify-content: center;\n  align-items: center;\n  display: flex;\n  overflow-x: hidden;\n  overflow-y: auto;\n  position: fixed;\n  top: 0px;\n  right: 0px;\n  bottom: 0px;\n  left: 0px;\n  outline: 2px solid transparent;\n  outline-offset: 2px;\n  z-index: 999;\n  :focus {\n    outline: 2px solid transparent;\n    outline-offset: 2px;\n  }\n`;\nconst ModalRoot = styled.div`\n  .home-dark {\n    width: 600px;\n    height: 542px;\n    background: #1f2031;\n    padding-top: 15px;\n  }\n  .home-light {\n    width: 600px;\n    height: 542px;\n    background: #fff;\n    padding-top: 15px;\n  }\n  @media (max-width: 500px) {\n    width: 84% !important;\n    .home-dark,\n    .home-light {\n      width: 95%;\n    }\n  }\n`;\nconst Content = styled.div`\n  max-height: 300px;\n  overflow-y: scroll;\n  padding: 15px;\n  h1 {\n    font-weight: 400;\n    font-size: 16px;\n  }\n  .accounts {\n    margin-left: 20px;\n    width: 90%;\n  }\n`;\nconst ModalBottom = styled.div`\n  display: flex;\n  margin-top: 40px;\n  align-items: center;\n  justify-content: space-between;\n  padding: 20px;\n  div {\n    display: flex;\n    gap: 10px;\n  }\n  .token {\n    width: 126px;\n    height: 72px;\n    background: ${(props) => (props.isDarkModeOn ? \"#262a3b\" : \"#f8f8f8\")};\n    padding: 8px;\n    display: flex;\n    flex-direction: column;\n    color: ${(props) => (props.isDarkModeOn ? \"#fff\" : \"#000\")};\n    span {\n      font-size: 12px;\n    }\n  }\n  .clear {\n    display: flex;\n    align-items: center;\n    p {\n      margin: 0;\n      padding: 5px 10px;\n      border-radius: 0.25rem;\n      transition: 0.3s;\n      background: ${(props) =>\n        props.isDarkModeOn ? \"#c5d0ff\" : \"transparent\"};\n      color: #4f58a3;\n      cursor: pointer;\n      &:hover {\n        background: ${(props) =>\n          props.isDarkModeOn ? \"#c5d0ff\" : \"rgba(59, 130, 246, 0.5)\"};\n      }\n    }\n    button {\n      background: #000;\n      border: none;\n      &:disabled {\n        background: #d0d5d9;\n        cursor: not-allowed;\n        color: #000;\n      }\n    }\n  }\n`;\nconst Minters = ({ isDarkModeOn, contractId, isStoreOwner }) => {\n  const [minters, setMinters] = useState([]);\n  const [openAddMintersModal, setOpenAddMintersModal] = useState(false);\n  const [accounts, setAccounts] = useState(new Array(100).fill(\"\"));\n  function fetchNFTDetails() {\n    fetchStoreMinters(contractId).then((data) => setMinters(data));\n  }\n  useEffect(() => {\n    fetchNFTDetails();\n  }, []);\n  function handleRemoveMinter(account) {\n    if (!account.length) return;\n    addAndRemoveMinters(contractId, \"revoke\", [account]);\n  }\n  const handleAccountChange = (event, index) => {\n    const newAccounts = [...accounts];\n    const profile = Social.get(`${event.target.value}/profile/**`, \"final\");\n    console.log(profile);\n    newAccounts[index] = event.target.value;\n    setAccounts(newAccounts);\n  };\n  const handleAddMinters = () => {\n    const filteredAccounts = accounts.filter((data) => data !== \"\");\n    if (!filteredAccounts?.length) return;\n    addAndRemoveMinters(contractId, \"grant\", filteredAccounts);\n  };\n  return (\n    <Root>\n      <div className=\"topSec\">\n        <h2>Account</h2>\n        {minters.map((data) => (\n          <ul key={data?.minter_id}>\n            <li>{data?.minter_id}</li>\n            {data?.minter_id !== data?.nft_contracts?.owner_id && (\n              <span onClick={() => handleRemoveMinter(data?.minter_id)}>\n                {deleteIcon}\n              </span>\n            )}\n          </ul>\n        ))}\n      </div>\n      <Bottom isDarkModeOn={isDarkModeOn}>\n        <div>\n          <div className=\"token\">\n            <span>Accounts</span>\n            {minters?.length}\n          </div>\n        </div>\n        <div className=\"clear\">\n          {isStoreOwner && (\n            <button onClick={() => setOpenAddMintersModal(true)}>\n              Add Minters\n            </button>\n          )}\n        </div>\n      </Bottom>\n      {openAddMintersModal && (\n        <div>\n          <ModalBg />\n          <Modal>\n            <ModalRoot>\n              <div className={isDarkModeOn ? \"home-dark\" : \"home-light\"}>\n                <Top isDarkModeOn={isDarkModeOn}>\n                  <p>Add Minters</p>\n                  <p onClick={() => setOpenAddMintersModal(false)}>X</p>\n                </Top>\n                <Content>\n                  <h1>\n                    Manage NEAR accounts that can mint tokens from this contract\n                  </h1>\n                  <p>Select up to 100 accounts</p>\n                  <div className=\"accounts\">\n                    {accounts.map((account, index) => (\n                      <div style={{ marginBottom: \"10px\" }} key={index}>\n                        <MbInputField\n                          className=\"input-field\"\n                          value={account}\n                          placeholder=\"accounts.near\"\n                          onChange={(e) => handleAccountChange(e, index)}\n                        />\n                      </div>\n                    ))}\n                  </div>\n                </Content>\n                <ModalBottom isDarkModeOn={isDarkModeOn}>\n                  <div>\n                    <div className=\"token\">\n                      <span>Accounts</span>\n                      <p>{accounts.filter((data) => data !== \"\")?.length}</p>\n                    </div>\n                  </div>\n                  <div className=\"clear\">\n                    <p onClick={() => setAccounts(new Array(100).fill(\"\"))}>\n                      Clear all\n                    </p>\n                    <button\n                      disabled={!accounts.filter((data) => data !== \"\")?.length}\n                      onClick={handleAddMinters}\n                    >\n                      {\" \"}\n                      Sign\n                    </button>\n                  </div>\n                </ModalBottom>\n              </div>\n            </ModalRoot>\n          </Modal>\n        </div>\n      )}\n    </Root>\n  );\n};\nreturn <Minters {...props} />;\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bos.genadrop.near/widget/Mintbase.App.Profile.ContractSettings.Minters", "fact_widget_deployments_id": "396b82595db1f0387d3995d600ea1580", "inserted_timestamp": "2024-05-20T12:58:45.841Z", "modified_timestamp": "2024-05-20T12:58:45.841Z", "__row_index": 0}