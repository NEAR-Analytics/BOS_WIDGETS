{"tx_hash": "2Z3JGxEdkYu7HEvzZLTGmnvH2phXW2x5XFkGwmVqTwPf", "action_id_social": "6xc6jnWqgHxEUFn2qr2JJXVTW59XXQsbzhqFadPR7Ykj-0-widget", "block_id": 113352241, "block_timestamp": "2024-02-22T11:54:15.148Z", "signer_id": "bos.genadrop.near", "widget_name": "Mintbase.MbTabs", "source_code": "const { MbDropdownMenu } = VM.require(\n  \"bos.genadrop.near/widget/Mintbase.MbDropdownMenu\"\n);\nconst activeIndex = props?.activeIndex;\nconst filterOptions = props?.filterOptions;\nconst firstElement = props?.firstElement;\nconst onTabChange = props?.onTabChange;\nconst labels = props?.tabLabels;\nconst onOrderByChange = props?.onOrderByChange;\n\nconst mode = props.mode || Storage.get(\"mode\");\nconst isDarkModeOn = mode === \"dark\";\n\nconst Tabs = styled.div`\n  position: relative;\n  width: 100%;\n  .right-tabs {\n    display: flex;\n    margin-left: 1.5rem;\n    align-items: center;\n\n    @media (min-width: 640px) {\n      margin-left: 3rem;\n    }\n  }\n  ul {\n    display: flex;\n    justify-content: space-between;\n    background-color: ${isDarkModeOn ? \"#1F2937\" : \"#F9FAFB\"};\n    padding-left: 1.5rem; /* 24px */\n    padding-right: 1.5rem; /* 24px */\n    overflow-x: scroll;\n    scrollbar-width: none;\n    -ms-overflow-style: none;\n    &::-webkit-scrollbar {\n      display: none;\n    }\n    @media (max-width: 768px) {\n      padding-left: 3rem; /* 48px */\n      padding-right: 3rem; /* 48px */\n    }\n  }\n  li {\n    margin: 0;\n    padding: 0;\n    list-style: none;\n  }\n  .order-by-f {\n    cursor: pointer;\n    position: relative;\n    border-radius: 9999px;\n    transition: all 0.5s ease;\n\n    &.selected {\n      background-color: ${isDarkModeOn ? \"#3a1c28\" : \"#fedfde\"};\n      &:hover {\n        background-color: ${isDarkModeOn ? \"#3a1c28\" : \"#fedfde\"};\n      }\n    }\n\n    &.unselected {\n      &:hover {\n        background-color: #90cdf4;\n      }\n    }\n  }\n  .extraFilter {\n    display: flex;\n    padding: 12px;\n    align-items: center;\n    .selectedFilter {\n      color: #f87171;\n    }\n    .unSelectedFilter {\n      color: ${isDarkModeOn ? \"#DBEAFE\" : \"#93C5FD\"};\n    }\n    @media (max-width: 640px) {\n      padding: 16px;\n    }\n  }\n`;\nconst Dropdown = styled.div`\n  display: flex;\n  align-items: center;\n  margin-right: 1.5rem;\n  margin-left: 1.5rem;\n\n  @media (max-width: 640px) {\n    margin-right: 3rem;\n    margin-left: 3rem;\n  }\n  .order-by {\n    cursor: pointer;\n    position: relative;\n    border-radius: 9999px;\n    transition: all 0.5s ease;\n\n    &.selected {\n      background-color: ${isDarkModeOn ? \"#3a1c28\" : \"#fedfde\"};\n      &:hover {\n        background-color: ${isDarkModeOn ? \"#3a1c28\" : \"#fedfde\"};\n      }\n    }\n\n    &.unselected {\n      &:hover {\n        background-color: #90cdf4;\n      }\n    }\n  }\n  .tab {\n    display: flex;\n    padding: 12px; /* Assuming p-12 */\n    align-items: center;\n\n    @media (max-width: 640px) {\n      padding: 16px; /* Assuming sm:p-16 */\n    }\n  }\n  .order {\n    padding-right: 10px; /* Assuming pr-10 */\n    white-space: nowrap; /* Assuming whitespace-nowrap */\n    color: #ff3130;\n  }\n`;\n\nconst [tab, setTab] = useState(0);\nconst [listening, setListening] = useState(false);\nconst [isOpen, setIsOpen] = useState(false);\nconst [selectedFilter, setSelectedFilter] = useState(false);\nconst [selectedOrder, setSelectedOrder] = useState(\n  filterOptions?.defaultOptionId ?? \"\"\n);\n\nuseEffect(() => {\n  if (!props?.tabsWithFilters) return;\n  console.log(props?.tabsWithFilters);\n  setSelectedFilter(!!props?.tabsWithFilters[tab]?.isExtraFilterSelected);\n}, [tab]);\n\nconst options =\n  filterOptions &&\n  filterOptions?.options.map((filter) => {\n    return {\n      content: <span>{filter.label}</span>,\n      onClick: () => handleOptionSelect(filter.id),\n      selected: selectedOrder === filter.id,\n      icon:\n        selectedOrder === filter.id ? (\n          <Widget\n            src=\"bos.genadrop.near/widget/Mintbase.MbIcon\"\n            props={{\n              color: `${isDarkModeOn ? \"blue-300\" : \"blue-100\"}`,\n              size: \"16px\",\n              name: \"check\",\n            }}\n          />\n        ) : undefined,\n    };\n  });\n\nconst getExtraFiltersIndex = (array) => {\n  const indexes = [];\n  array &&\n    array.map((tab, index) => {\n      if (labels?.includes(tab?.tab) && tab?.extraFilter) {\n        indexes.push(index);\n      }\n    });\n\n  return indexes;\n};\nconst tabsWithExtraFilter = getExtraFiltersIndex(props?.tabsWithFilters);\n\nconst handleOptionSelect = (option) => {\n  setIsOpen(!isOpen);\n  const auxOption = option === selectedOrder ? \"\" : option;\n  setSelectedOrder(auxOption);\n  onOrderByChange(auxOption);\n};\n\nif (!labels.length) return <></>;\n\nreturn (\n  <Tabs>\n    <ul>\n      {labels &&\n        labels.map((data, index) => (\n          <li\n            onClick={() => onTabChange(index) || setTab(index)}\n            key={index}\n          >\n            <Widget\n              src=\"bos.genadrop.near/widget/Mintbase.Tab\"\n              props={{\n                label: data,\n                isActive: index === tab,\n                isExtraFilterSelected: true,\n                extraFilter: \"Show only listed\",\n              }}\n            />\n          </li>\n        ))}\n      {props?.tabsWithFilters ? (\n        <div className=\"right-tabs\">\n          {tabsWithExtraFilter.map((tabIndex) => {\n            const currentTab = props.tabsWithFilters[tab];\n            const { extraFilter, onExtraFilterChange } = currentTab;\n            if (!extraFilter) return;\n            if (tabIndex === tab)\n              return (\n                <li\n                  className={`order-by-f ${\n                    selectedFilter ? \"selected\" : \"unselected\"\n                  }`}\n                  onClick={() => {\n                    if (!onExtraFilterChange) return;\n                    setSelectedFilter(!selectedFilter);\n                    onExtraFilterChange(!selectedFilter);\n                  }}\n                  key={tabIndex}\n                >\n                  <div className=\"extraFilter\">\n                    <div\n                      className={`${\n                        selectedFilter ? \"selectedFilter\" : \"unSelectedFilter\"\n                      } p-med-90 pr-10 whitespace-nowrap`}\n                    >\n                      {extraFilter}\n                    </div>\n                  </div>\n                </li>\n              );\n          })}\n          <Dropdown onClick={() => setIsOpen(!isOpen)}>\n            <li\n              className={`order-by ${\n                selectedOrder ? \"selected\" : \"unselected\"\n              } relative`}\n            >\n              <div className=\"tab\" onClick={() => setIsOpen(!isOpen)}>\n                <div selectedOrder className={`order`}>\n                  {selectedOrder\n                    ? filterOptions.options.filter(\n                        (filter) => filter.id === selectedOrder\n                      )[0].label\n                    : filterOptions.label}\n                </div>\n                <Widget\n                  src=\"bos.genadrop.near/widget/Mintbase.MbIcon\"\n                  props={{\n                    color: `${isDarkModeOn ? \"blue-300\" : \"blue-100\"}`,\n                    size: \"16px\",\n                    name: \"arrow_drop_down\",\n                  }}\n                />\n              </div>\n            </li>\n          </Dropdown>\n        </div>\n      ) : null}\n    </ul>\n    {filterOptions && options && (\n      <Widget\n        src=\"bos.genadrop.near/widget/Mintbase.MbDropdownMenu\"\n        props={{ isOpen, items: options, customStyle: \"right: 0;\" }}\n      />\n      /* <MbDropdownMenu isOpen={true} items={options} customStyle=\"right : 0;\" /> */\n    )}\n  </Tabs>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bos.genadrop.near/widget/Mintbase.MbTabs", "fact_widget_deployments_id": "03923d9cd1c6a8770469cebc88b2cdb5", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 2}