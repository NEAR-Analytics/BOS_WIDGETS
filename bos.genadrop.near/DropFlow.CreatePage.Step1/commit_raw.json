{"tx_hash": "8FdAmPhHcrf4cCNQyREuQWAaQUn2uXKXB9dk89h8hnsR", "action_id_social": "CaGbro4HjcoE9TthVDD5ww1A7AsTXhF4VcD95nY83nY5-0-widget", "block_id": 109488116, "block_timestamp": "2024-01-03T12:27:31.915Z", "signer_id": "bos.genadrop.near", "widget_name": "DropFlow.CreatePage.Step1", "source_code": "const { formState, errors, renderFooter } = props;\nconst accountId = context.accountId;\n\nif (!accountId) {\n  return \"Please sign in with NEAR wallet to edit your profile\";\n}\n\nlet profile = Social.getr(`${accountId}/profile`);\n\nif (profile === null) {\n  return \"Loading\";\n}\n\nState.init({\n  profile,\n});\nconst initialMetadata = profile ?? {};\nconst onChange = props.onChange;\n\nconst initialAnswers = {\n  name: formState.name,\n  soulBoundTokenIssuer: formState.soulBoundTokenIssuer,\n};\n\nState.init({\n  answers: initialAnswers,\n  initialMetadata,\n  metadata: initialMetadata,\n  reportedMetadata: initialMetadata,\n  linktree: initialMetadata.linktree ?? {},\n  image: initialMetadata.image,\n  backgroundImage: initialMetadata.backgroundImage,\n  screenshots: initialMetadata.screenshots ?? {},\n});\n\nconst onValueChange = (key, value) => {\n  State.update({\n    answers: {\n      ...state.answers,\n      [key]: value,\n    },\n  });\n};\n\nconst metadata = {\n  name: options.name ? state.metadata.name : undefined,\n  description: options.name ? state.metadata.description : undefined,\n  linktree:\n    options.linktree && Object.keys(state.linktree).length > 0\n      ? state.linktree\n      : undefined,\n  image:\n    options.image && state.image && Object.keys(state.image).length > 0\n      ? state.image\n      : undefined,\n  backgroundImage:\n    options.backgroundImage &&\n    state.backgroundImage &&\n    Object.keys(state.backgroundImage).length > 0\n      ? state.backgroundImage\n      : undefined,\n  tags: options.tags ? state.metadata.tags : undefined,\n  feed: options.feed ? state.metadata.feed : undefined,\n  screenshots: options.screenshots ? state.metadata.screenshots : undefined,\n};\n\nif (\n  onChange &&\n  JSON.stringify(state.reportedMetadata) !== JSON.stringify(metadata)\n) {\n  State.update({\n    reportedMetadata: metadata,\n  });\n  onChange(metadata);\n}\n\nconst debounce = (func, wait) => {\n  const pause = wait || 350;\n  let timeout;\n\n  return (args) => {\n    const later = () => {\n      clearTimeout(timeout);\n      func(args);\n    };\n\n    clearTimeout(timeout);\n    timeout = setTimeout(later, pause);\n  };\n};\nreturn (\n  <div className=\"mt-4 ndc-card p-4\">\n    <div className=\"d-flex flex-column gap-4\">\n      <h2 className=\"h5 fw-bold\">\n        <span\n          className=\"rounded-circle d-inline-flex align-items-center justify-content-center fw-bolder h5 me-2\"\n          style={{\n            width: \"48px\",\n            height: \"48px\",\n            border: \"1px solid #82E299\",\n          }}\n        >\n          1\n        </span>\n        Customize your Feed\n      </h2>\n\n      <div className=\"mb-2 feed\">\n        <h4>Your Feed</h4>\n        <div class=\"form-check ds-check\">\n          <input\n            class=\"form-check-input rounded-circle\"\n            type=\"checkbox\"\n            value=\"\"\n            id=\"flexCheckDefault\"\n            onChange={onChangeDisabled}\n          />\n          <label class=\"form-check-label\" for=\"flexCheckDefault\">\n            Display The Default Feed\n          </label>\n        </div>\n\n        <h6>{options.feed.label ?? \"Accounts To Display\"}</h6>\n        <Widget\n          src=\"jgodwill.near/widget/PageFeedsEditor\"\n          props={{\n            initialPageFeedsObject: metadata.feed,\n            pageFeedPattern: options.feed.pageFeedPattern,\n            placeholder:\n              options.feed.placeholder ??\n              \"Enter the usernames to display on your feed e.g. mob.near, jodwill.near, agwaze.near, etc\",\n            setPageFeedsObject: (feed) => {\n              state.metadata.feed = feed;\n              State.update();\n            },\n            disabled: state.disabled,\n          }}\n        />\n      </div>\n\n      {/* <Widget\n        src=\"nearui.near/widget/Input.ExperimentalText\"\n        props={{\n          label: <>Accounts To Display</>,\n          placeholder: \"Enter the usernames to display on your feed\",\n          size: \"md\",\n          onChange: (v) => onValueChange(\"soulBoundTokenIssuer\", v),\n          error: errors[\"soulBoundTokenIssuer\"],\n          inputProps: {\n            name: \"soulBoundTokenIssuer\",\n            defaultValue: state.answers.soulBoundTokenIssuer,\n          },\n        }}\n      /> */}\n    </div>\n\n    {renderFooter(state.answers)}\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bos.genadrop.near/widget/DropFlow.CreatePage.Step1", "fact_widget_deployments_id": "9d2340fbe0b72ed97e0c233525249664", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}