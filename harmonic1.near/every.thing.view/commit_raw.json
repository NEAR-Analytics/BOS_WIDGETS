{"tx_hash": "7Pi5SURbGPY2agmzuo16NqqkqSm5ELSNytLuhFeyvnqq", "action_id_social": "5WPj7soGkswUgKwu4BnqVHxsdqEK8UJsbJphKhLKbukV-0-widget", "block_id": 99918806, "block_timestamp": "2023-08-29T09:42:41.668Z", "signer_id": "harmonic1.near", "widget_name": "every.thing.view", "source_code": "const path = props.path; // every piece of data on social contract has a path\nconst blockHeight = props.blockHeight || \"final\"; // and a blockHeight (~version)\nconst options = props.options;\n\n// split the path\nconst parts = path.split(\"/\");\nconst creatorId = parts[0];\n\nlet type;\nif (parts.length === 1) {\n  if (parts[0].charAt(0) === \"#\") {\n    // hashtag\n    type = \"hashtag\";\n  } else {\n    // every root of a path is an account\n    type = \"account\";\n  }\n} else {\n  // otherwise the \"standard\" is the type (widget, post, type, thing...)\n  // for thing, we'll extract the actual \"Type\" later\n  type = parts[1];\n}\n\nState.init({\n  view: \"THING\",\n});\n\nconst Container = styled.div`\n  //border: 1px solid #ccc;\n  height: fit-content;\n`;\n\nconst Header = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  //border-bottom: 1px solid #ccc;\n`;\n\nconst Content = styled.div`\n  padding: 1px;\n  min-height: 300px;\n`;\n\nfunction Thing() {\n  // Renders the path according to type\n  switch (type) {\n    case \"thing\":\n      {\n        // get the thing data\n        const thing = JSON.parse(Social.get(path, blockHeight) || \"null\");\n        type = thing.type || null;\n        // get the type data\n        const typeObj = JSON.parse(Social.get(type, blockHeight) || \"null\");\n        if (typeObj === null) {\n          console.log(\n            `edge case: thing ${path} had an invalid type: ${thingType}`\n          );\n        }\n        // determine the widget to render this thing (is there a default view?)\n        // const widgetSrc =\n        //   options?.templateOverride ||\n        //   thing.template?.src ||\n        //   typeObj?.widgets?.view;\n        // Template\n        //hard code until finding template override prop\n        const widgetSrc = \"harmonic1.near/widget/artist2\";\n        return (\n          <Widget\n            src={widgetSrc}\n            props={{ data: thing.data, path, blockHeight }}\n          />\n        );\n      }\n      // DEFAULT:\n      return <p>The type: {type} is not yet supported.</p>;\n  }\n}\n\n// <ButtonRow>\n// <Modifier />\n// </ButtonRow>\n\nreturn (\n  <Container id={path}>\n    <Content>\n      <Thing />\n    </Content>\n  </Container>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/harmonic1.near/widget/every.thing.view", "fact_widget_deployments_id": "5cccc94970b493f1cbfb00bf98921f59", "inserted_timestamp": "2023-08-29T11:20:28.602Z", "modified_timestamp": "2023-08-29T11:20:28.602Z", "__row_index": 12}