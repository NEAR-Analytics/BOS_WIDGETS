{"tx_hash": "87AQh3NdNpVKFwGADRZMaFPQqVAgAcDwRG6BAoSRHYch", "action_id_social": "AsT7jnD2yExTvMnTGMdQqdoFFNnpLKYtBbPup3gpHRea-0-widget", "block_id": 108261837, "block_timestamp": "2023-12-18T15:59:44.394Z", "signer_id": "donationhubv2.near", "widget_name": "donate", "source_code": "/**\n * Require a project link\n */\nconst donationHubContractAccountId =\n  props.donationHubContractAccountId || \"donationhubv3.near\".split(\"/\", 1)[0];\n\n/* END_INCLUDE: \"core/lib/autocomplete\" */\n\nconst postId = props.postId ?? null;\n\ninitState({\n  seekingFunding: false,\n  selectedElements: [],\n\n  name: props.name ?? \"\",\n  description: props.description ?? \"\",\n  amount: props.amount ?? \"\",\n  token: props.token ?? \"\",\n  supervisor: props.supervisor ?? \"kanapitch.near\",\n  chainPicked: \"\",\n  bitkub_address: props.bitkub_address ?? \"\",\n  jfin_address: props.jfin_address ?? \"\",\n  eth_address: props.eth_address ?? \"\",\n  postId: props.id ?? 0,\n  receiver: \"\",\n});\n\nconst sender = Ethers.send(\"eth_requestAccounts\", [])[0];\n\nconst erc20Abi = fetch(\n  \"https://gist.githubusercontent.com/veox/8800debbf56e24718f9f483e1e40c35c/raw/f853187315486225002ba56e5283c1dba0556e6f/erc20.abi.json\"\n);\nif (!erc20Abi.ok) {\n  return \"erc20Abi not ok\";\n}\n\nif (state.error) {\n  return (\n    <div>\n      Dear user, we regret to inform you that we have received an error callback\n      from the API. Our team is currently investigating the issue and working on\n      resolving it as soon as possible. We apologize for any inconvenience this\n      may have caused and thank you for your patience while we work to address\n      the problem.\n    </div>\n  );\n}\n\nif (!sender) return <Web3Connect connectLabel=\"Please Connect Your Wallet\" />;\n\nif (\n  state.chainId === undefined &&\n  ethers !== undefined &&\n  Ethers.send(\"eth_requestAccounts\", [])[0]\n) {\n  Ethers.provider()\n    .getNetwork()\n    .then((chainIdData) => {\n      if (chainIdData?.chainId) {\n        State.update({ chainId: chainIdData.chainId });\n      }\n    });\n}\n\nif (state.chainId === 1) {\n  State.update({\n    chainPicked: \"ETH\",\n    receiver: state.eth_address,\n  });\n} else if (state.chainId === 96) {\n  State.update({\n    chainPicked: \"KUB\",\n    receiver: state.bitkub_address,\n  });\n} else if (state.chainId === 3501) {\n  State.update({\n    chainPicked: \"JFIN\",\n    receiver: state.jfin_address,\n  });\n} else {\n  return (\n    <div>\n      <h3>\n        Wrong Network - We currently support the Ethereum, Bitkub Chain, and\n        JFIN Chain exclusively. Kindly confirm that you are connected to the\n        intended network before proceeding.\n      </h3>\n    </div>\n  );\n}\n\nconst chainChoice = (\n  <div class=\"d-flex flex-column mb-2\">\n    <div className=\"col-lg-6  mb-2\"></div>\n    Token: <b>{state.chainPicked}</b>\n    <span class=\"text-muted fw-normal\">\n      (You can change the token by changing the network)\n    </span>\n  </div>\n);\n\nconst donateAmount = (\n  <div class=\"d-flex flex-column mb-2\">\n    <div className=\"col-lg-6 mb-2\">\n      Donated amount <span class=\"text-muted fw-normal\">(Numbers Only)</span>\n      <input\n        type=\"number\"\n        step=\"0.000001\"\n        value={state.donate_amount !== null ? state.donate_amount : \"\"}\n        min={0}\n        onChange={(event) => {\n          const newValue = event.target.value;\n          // Ensure the input is a valid number\n          if (/^\\d*\\.?\\d{0,18}$/.test(newValue)) {\n            State.update({\n              donate_amount: newValue,\n            });\n          }\n        }}\n      />\n    </div>\n  </div>\n);\n\nasync function sendTokens() {\n  //   const erc20 = new ethers.Contract(\n  //     \"0x4d224452801ACEd8B2F0aebE155379bb5D594381\",\n  //     erc20Abi.body,\n  //     Ethers.provider().getSigner()\n  //   );\n  let amount = ethers.utils.parseUnits(state.donate_amount, 18);\n  //   console.log(\"hello \" + amount);\n  //   erc20.transfer(state.receiver, amount);\n  Ethers.provider()\n    .getSigner()\n    .sendTransaction({\n      to: state.receiver,\n      value: amount,\n    })\n    .then((tx) => {\n      console.log(\"tx \", tx);\n      if (state.chainId === 1) {\n        State.update({ txHash: \"https://etherscan.io/tx/\" + tx.hash });\n      } else if (state.chainId === 96) {\n        State.update({ txHash: \"https://www.bkcscan.com/tx/\" + tx.hash });\n      } else {\n        State.update({ txHash: \"https://www.exp.jfinchain.com/tx/\" + tx.hash });\n      }\n    })\n    .catch((error) => {\n      console.log(error);\n      //State.update({ error: true });\n      State.update({\n        errorText: \"Can't make the transaction. Kindly check your balance.\",\n      });\n    });\n}\n\nconsole.log(\"eth \" + state.eth_address);\nconsole.log(\"kub \" + bitkub_address);\nconsole.log(\"jfin \" + jfin_address);\n\nreturn (\n  <div class=\"bg-light d-flex flex-column flex-grow-1\">\n    <div class=\"mx-5 mb-5\">\n      {props.transactionHashes ? (\n        <>\n          Succesfull submission. Back to{\" \"}\n          <a\n            style={{\n              color: \"#3252A6\",\n            }}\n            className=\"fw-bold\"\n          >\n            feed\n          </a>\n        </>\n      ) : (\n        <>\n          <p>{state.seekingFunding}</p>\n          <div class=\"card border-light\">\n            <div class=\"card-body\">\n              <h1 class=\"card-title fw-bold fs-1\">Donation</h1>\n\n              {state.warning && (\n                <div\n                  class=\"alert alert-warning alert-dismissible fade show\"\n                  role=\"alert\"\n                >\n                  {state.warning}\n                  <button\n                    type=\"button\"\n                    class=\"btn-close\"\n                    data-bs-dismiss=\"alert\"\n                    aria-label=\"Close\"\n                    onClick={() => State.update({ warning: \"\" })}\n                  ></button>\n                </div>\n              )}\n              <div className=\"row\">\n                {chainChoice}\n                {donateAmount}\n              </div>\n              <div>\n                <b>{state.errorText}</b>\n              </div>\n              <button\n                style={{\n                  width: \"7rem\",\n                  backgroundColor: \"#0C7283\",\n                  color: \"#f3f3f3\",\n                }}\n                className=\"btn btn-light mb-2 p-3\"\n                onClick={sendTokens}\n              >\n                Donate\n              </button>\n            </div>\n          </div>\n        </>\n      )}\n    </div>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/donationhubv2.near/widget/donate", "fact_widget_deployments_id": "a81afe56199e1e2042fe690b579bc1ca", "inserted_timestamp": "2023-12-18T17:51:15.647Z", "modified_timestamp": "2023-12-20T03:22:11.422Z", "__row_index": 5}