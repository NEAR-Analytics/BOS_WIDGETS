{"tx_hash": "Gydru4hpKUsN5XpNTCKRfz7py5nRFq8uXt9wdrqdX7DP", "action_id_social": "2Fk814brAtEt3StJrRzaotJs9EHGcJzvbzeAVR2x6913-0-widget", "block_id": 104666036, "block_timestamp": "2023-11-01T06:08:00.870Z", "signer_id": "discover.near", "widget_name": "Project.ReviewBoard", "source_code": "const { Feed } = VM.require(\"efiz.near/widget/Module.Feed\");\nconst { Card } = VM.require(\"discover.near/widget/Project.Module\");\n\nconsole.log();\n\nif (!Feed) {\n  return <div>Loading modules...</div>;\n}\n\nconst projectRegistry = Social.getr(\n  \"efiz.near/thing/project-registry\",\n  \"final\"\n);\n\nif (!projectRegistry) {\n  return <div>Loading project registry...</div>;\n}\n\nconst featured = JSON.parse(projectRegistry.featured) || [];\nconst hidden = JSON.parse(projectRegistry.hidden) || [];\n\nconst toggleFeatureProject = (projectPath) => {\n  const _featured = JSON.parse(JSON.stringify(featured));\n  if (_featured.includes(projectPath)) {\n    _featured = _featured.filter((p) => p !== projectPath);\n  } else {\n    _featured.push(projectPath);\n  }\n  Social.set({\n    thing: {\n      \"project-registry\": {\n        featured: JSON.stringify(_featured),\n      },\n    },\n  });\n};\nconst toggleHideProject = (projectPath) => {\n  const _hidden = JSON.parse(JSON.stringify(hidden));\n  if (_hidden.includes(projectPath)) {\n    _hidden = _hidden.filter((p) => p !== projectPath);\n  } else {\n    _hidden.push(projectPath);\n    if (featured.includes(projectPath)) {\n      featured = featured.filter((p) => p !== projectPath);\n    }\n  }\n  Social.set({\n    thing: {\n      \"project-registry\": {\n        featured: JSON.stringify(featured),\n        hidden: JSON.stringify(_hidden),\n      },\n    },\n  });\n};\n\nreturn (\n  <div className=\"row\">\n    <div className=\"col\">\n      <h3>All Projects</h3>\n      <Feed\n        index={{\n          action: \"notify\",\n          key: \"discover.near\", // TODO: change to project\n          options: {\n            limit: 10,\n            order: \"desc\",\n            accountId: undefined,\n            subscribe: true,\n          },\n        }}\n        Item={(p) => {\n          if (p.value.type === \"request\" && p.value.data.type === \"featured\") {\n            const projectPath = p.value.data.src;\n            if (projectPath) {\n              return (\n                <div key={p}>\n                  <Widget\n                    src=\"discover.near/widget/Project.Provider\"\n                    props={{\n                      View: Card,\n                      path: projectPath,\n                    }}\n                  />\n                  <div className=\"d-flex gap-2\">\n                    {featured.includes(projectPath) ? (\n                      <button onClick={() => toggleFeatureProject(projectPath)}>\n                        Unfeature\n                      </button>\n                    ) : (\n                      <button onClick={() => toggleFeatureProject(projectPath)}>\n                        Feature\n                      </button>\n                    )}\n\n                    {hidden.includes(projectPath) ? (\n                      <button onClick={() => toggleHideProject(projectPath)}>\n                        Unhide\n                      </button>\n                    ) : (\n                      <button onClick={() => toggleHideProject(projectPath)}>\n                        Hide\n                      </button>\n                    )}\n                  </div>\n                </div>\n              );\n            }\n          }\n        }}\n        Layout={Flex}\n      />\n    </div>\n    <div className=\"col\">\n      <h3>Featured Projects</h3>\n      {featured.map((projectPath) => (\n        <div key={projectPath}>\n          <Widget\n            src=\"discover.near/widget/Project.Provider\"\n            props={{\n              View: Card,\n              path: projectPath,\n            }}\n          />\n          <div className=\"d-flex gap-2\">\n            <button onClick={() => toggleFeatureProject(projectPath)}>\n              Unfeature\n            </button>\n          </div>\n        </div>\n      ))}\n    </div>\n    <div className=\"col\">\n      <h3>Hidden Projects</h3>\n      {hidden.map((projectPath) => (\n        <div key={projectPath}>\n          <Widget\n            src=\"discover.near/widget/Project.Provider\"\n            props={{\n              View: Card,\n              path: projectPath,\n            }}\n          />\n          <div className=\"d-flex gap-2\">\n            <button onClick={() => toggleHideProject(projectPath)}>\n              Unhide\n            </button>\n          </div>\n        </div>\n      ))}\n    </div>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/discover.near/widget/Project.ReviewBoard", "fact_widget_deployments_id": "8356df57faa831f386f1436d903499f1", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 1}