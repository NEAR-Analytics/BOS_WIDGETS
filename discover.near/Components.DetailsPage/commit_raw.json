{"tx_hash": "ErTtXZ831S9rArTQvkcTjM1aW1qwkjXp7geP4G3ADjK3", "action_id_social": "BcHD5om3miKi6o3LUi8k52HJdt3q4uU6nFAL99Yj8h9Z-0-widget", "block_id": 106660360, "block_timestamp": "2023-11-27T14:32:46.570Z", "signer_id": "discover.near", "widget_name": "Components.DetailsPage", "source_code": "const GRAPHQL_ENDPOINT = \"https://near-queryapi.api.pagoda.co\";\n\nState.init({\n  copiedShareUrl: false,\n  selectedTab: props.tab ?? \"source\",\n  isLoadingRpcImpressions: true,\n  componentImpressionsData: {\n    impressions: undefined,\n    weekly_chart_data_config: undefined,\n    executed_at: undefined,\n  },\n  developerSince: undefined,\n  numberOfComponentsPublished: 0,\n});\n\nif (props.tab && props.tab !== state.selectedTab) {\n  State.update({\n    selectedTab: props.tab,\n  });\n}\n\nconst src = props.src;\nconst [accountId, widget, widgetName] = (src || \"\").split(\"/\");\nconst existsData = Social.keys(`${accountId}/widget/${widgetName}`);\nconst exists = !existsData || Object.keys(existsData).length > 0;\nconst code = Social.get(`${accountId}/widget/${widgetName}`);\nconst data = Social.get(`${accountId}/widget/${widgetName}/**`);\nconst metadata = data.metadata;\nconst tags = Object.keys(metadata.tags || {});\nconst detailsUrl = `/near/widget/ComponentDetailsPage?src=${src}`;\nconst shareUrl = `https://near.org${detailsUrl}`;\nconst accountProfileDescription =\n  Social.getr(`${accountId}/profile`).description ?? \"\";\nconst descMaxWords = 15;\nconst componentDescMaxWords = 25;\n\nfunction normalizeMarkdown(text) {\n  // convert headers to normal text (remove # symbols)\n  text = text.replace(/^#+\\s*/gm, \"\");\n  // convert bold and italic to normal text (remove * and _ symbols)\n  text = text.replace(/(\\*\\*|__)(.*?)\\1/g, \"$2\");\n  text = text.replace(/(\\*|_)(.*?)\\1/g, \"$2\");\n  // remove links\n  text = text.replace(/\\[(.*?)\\]\\(.*?\\)/g, \"$1\");\n  // remove images\n  text = text.replace(/!\\[(.*?)\\]\\(.*?\\)/g, \"$1\");\n  return text.trim();\n}\n\nif (accountProfileDescription) {\n  const text = normalizeMarkdown(accountProfileDescription).split(\" \");\n  accountProfileDescription = text.slice(0, descMaxWords);\n  if (text.length >= descMaxWords) {\n    accountProfileDescription.push(\"...\");\n  }\n  accountProfileDescription = accountProfileDescription.join(\" \");\n}\n\nfunction fetchGraphQL(operationsDoc, operationName, variables) {\n  return asyncFetch(`${GRAPHQL_ENDPOINT}/v1/graphql`, {\n    method: \"POST\",\n    headers: { \"x-hasura-role\": \"eduohe_near\" },\n    body: JSON.stringify({\n      query: operationsDoc,\n      variables: variables,\n      operationName: operationName,\n    }),\n  });\n}\n\nconst indexerQueries = `\n  query GetWidgetCount {\n   eduohe_near_nearcon_2023_widget_activity_feed_widget_activity_aggregate(\n      where: {account_id: {_eq: \"${accountId}\"}}\n    ) {\n      aggregate {\n        count(distinct: true, columns: widget_name)\n      }\n    }\n  }\n  query GetDeveloperSince {\n  eduohe_near_nearcon_2023_widget_activity_feed_widget_activity_aggregate(\n      where: {account_id: {_eq: \"${accountId}\"}}\n    ) {\n      aggregate {\n        min {\n          block_timestamp\n        }\n      }\n    }\n  }\n`;\n\nuseEffect(() => {\n  fetchGraphQL(indexerQueries, \"GetWidgetCount\", {}).then((result) => {\n    if (result.status === 200 && result.body) {\n      if (result.body.errors) {\n        console.log(\"error:\", result.body.errors);\n        return;\n      }\n      let data = result.body.data;\n      if (data) {\n        const noComponents =\n          data\n            .eduohe_near_nearcon_2023_widget_activity_feed_widget_activity_aggregate\n            .aggregate.count;\n        State.update({\n          numberOfComponentsPublished: noComponents,\n        });\n      }\n    }\n  });\n}, []);\n\nuseEffect(() => {\n  fetchGraphQL(indexerQueries, \"GetDeveloperSince\", {}).then((result) => {\n    if (result.status === 200 && result.body) {\n      if (result.body.errors) {\n        console.log(\"error:\", result.body.errors);\n        return;\n      }\n      let data = result.body.data;\n      if (\n        data &&\n        data.eduohe_near_nearcon_2023_widget_activity_feed_widget_activity_aggregate\n      ) {\n        const developerSince =\n          data\n            .eduohe_near_nearcon_2023_widget_activity_feed_widget_activity_aggregate\n            .aggregate.min.block_timestamp;\n        State.update({\n          developerSince,\n        });\n      }\n    }\n  });\n}, []);\n\nconst dependencyMatch =\n  code && code.matchAll(/<Widget[\\s\\S]*?src=.*?\"(.+)\"[\\s\\S]*?\\/>/g);\nlet dependencySources = [...(dependencyMatch || [])]\n  .map((r) => r[1])\n  .filter((r) => !!r);\ndependencySources = dependencySources.filter(\n  (r, i) => dependencySources.indexOf(r) === i && r !== \"(.+)\"\n);\n\nconst sourceCode = `\n\\`\\`\\`jsx\n${code}\n\\`\\`\\`\n`;\n\nconst STORE = \"storage.googleapis.com\";\nconst BUCKET = \"databricks-near-query-runner\";\nconst BASE_URL = `https://${STORE}/${BUCKET}/output/near_bos_component_details/component_rpc_loads`;\nconst dataset = `${BASE_URL}/${accountId}/widget/${widgetName}`;\n\nfunction computeWeekLabel(weekDateString) {\n  let startDate = new Date(weekDateString);\n  let endDate = new Date(startDate);\n  endDate.setDate(startDate.getDate() + 6);\n  let label = `${formatDate(startDate)} - ${formatDate(endDate)}`;\n  return label;\n}\n\nfunction formatDate(date) {\n  return date.toISOString().split(\"T\")[0];\n}\n\nconst getComponentImpressions = () => {\n  try {\n    const url = `${dataset}.json`;\n    const res = fetch(url);\n    if (res.ok) {\n      const parsedResults = JSON.parse(res.body);\n      const weekly_chart_data = parsedResults.data.rpc_loads\n        .sort((a, b) => new Date(a.week) - new Date(b.week))\n        .map((row) => ({\n          \"RPC Impressions\": row.number_of_rpc_loads,\n          Week: computeWeekLabel(row.week),\n        }));\n\n      const weekly_chart_data_config = {\n        tooltip: {\n          trigger: \"axis\",\n          confine: true,\n        },\n        grid: {\n          left: \"3%\",\n          right: \"4%\",\n          containLabel: true,\n        },\n        xAxis: {\n          type: \"category\",\n          boundaryGap: false,\n          data: weekly_chart_data.map((r) => r.Week),\n          axisLine: { show: false },\n          axisTick: { show: false },\n          axisLabel: { show: false },\n        },\n        yAxis: {\n          type: \"value\",\n          splitLine: { show: false },\n          axisLine: { show: false },\n          axisTick: { show: false },\n          axisLabel: { show: false },\n        },\n        series: [\n          {\n            name: \"Number of Views\",\n            type: \"line\",\n            smooth: true,\n            data: weekly_chart_data.map((r) => r[\"RPC Impressions\"]),\n            areaStyle: {},\n            color: \"#59e691\",\n            showSymbol: false,\n          },\n        ],\n      };\n\n      State.update({\n        isLoadingRpcImpressions: false,\n        componentImpressionsData: {\n          impressions: parsedResults.data.total_rpc_loads,\n          weekly_chart_data_config,\n          executed_at: parsedResults.executed_at,\n        },\n      });\n    }\n  } catch (error) {\n    console.error(\n      \"Error on fetching component impression data: \",\n      error.message\n    );\n  }\n};\n\nif (state.isLoadingRpcImpressions) {\n  getComponentImpressions();\n}\n\nconst Wrapper = styled.div`\n  padding-bottom: 48px;\n`;\n\nconst SummaryWrapper = styled.div`\n  margin-bottom: 32px;\n`;\n\nconst Tabs = styled.div`\n  display: flex;\n  height: 48px;\n  border-bottom: 1px solid #eceef0;\n  margin-bottom: 32px;\n  overflow: auto;\n  scroll-behavior: smooth;\n\n  @media (max-width: 1024px) {\n    background: #f8f9fa;\n    border-top: 1px solid #eceef0;\n    margin: 0 -12px 48px;\n\n    > * {\n      flex: 1;\n    }\n  }\n`;\n\nconst TabsButton = styled(\"Link\")`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  font-weight: 600;\n  font-size: 12px;\n  padding: 0 12px;\n  position: relative;\n  color: ${(p) => (p.selected ? \"#11181C\" : \"#687076\")};\n  background: none;\n  border: none;\n  outline: none;\n  text-align: center;\n  text-decoration: none !important;\n\n  &:hover {\n    color: #11181c;\n  }\n\n  &::after {\n    content: \"\";\n    display: ${(p) => (p.selected ? \"block\" : \"none\")};\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    height: 3px;\n    background: #59e692;\n  }\n\n  > span {\n    margin-right: 8px;\n  }\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n    align-items: center;\n\n    > span {\n      margin-right: 0;\n      margin-bottom: 8px;\n    }\n  }\n`;\n\nconst Layout = styled.div`\n  display: grid;\n  grid-template-columns: minmax(0, 1fr) 260px;\n  gap: 30px;\n\n  @media (max-width: 1200px) {\n    grid-template-columns: minmax(0, 1fr);\n    gap: 24px;\n  }\n`;\n\nconst Content = styled.div``;\n\nconst Sidebar = styled.div`\n  > div {\n    padding-bottom: 32px;\n    border-bottom: 1px solid #eceef0;\n    margin-bottom: 32px;\n\n    &:last-child {\n      padding-bottom: 0;\n      border-bottom: none;\n      margin-bottom: 0;\n    }\n  }\n\n  @media (max-width: 995px) {\n    grid-row: 1;\n  }\n`;\n\nconst SideBarContainer = styled.div`\n  @media (max-width: 995px) {\n    margin-top: 10px;\n    border-top: 1px solid #eceef0;\n  }\n`;\n\nconst SmallTitle = styled.h3`\n  color: #687076;\n  font-weight: 600;\n  font-size: 12px;\n  line-height: 15px;\n  margin-bottom: 20px;\n  text-transform: uppercase;\n\n  @media (max-width: 770px) {\n    margin-bottom: 16px;\n  }\n`;\n\nconst TextLink = styled(\"Link\")`\n  display: inline-flex;\n  align-items: center;\n  gap: 8px;\n  color: #0091ff;\n  font-weight: 600;\n  font-size: 12px;\n  line-height: 15px;\n`;\n\nconst Text = styled.p`\n  margin: 0;\n  font-size: 14px;\n  line-height: 20px;\n  color: ${(p) => (p.bold ? \"#11181C\" : \"#687076\")};\n  font-weight: ${(p) => (p.bold ? \"600\" : \"400\")};\n  font-size: ${(p) => (p.small ? \"12px\" : \"14px\")};\n\n  i {\n    margin-right: 4px;\n  }\n`;\n\nconst Component = styled.div`\n  margin-bottom: 24px;\n`;\n\nconst Icon = styled.i`\n  font-size: 15px;\n  fill: currentColor;\n  padding-right: 5px;\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 25px;\n  padding-bottom: 25px;\n  border-bottom: 1px solid #eceef0;\n`;\n\nconst Stats = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n\nconst StatsBadge = styled.div`\n  display: flex;\n  align-items: center;\n  margin-right: 20px;\n`;\n\nconst StatsText = styled.p`\n  margin: 0;\n  font-size: 14px;\n  line-height: 20px;\n  color: \"#11181C\";\n  font-weight: ${(p) => (p.bold ? \"600\" : \"400\")};\n  font-size: ${(p) => (p.small ? \"12px\" : \"14px\")};\n  border-radius: 12px;\n`;\n\nconst GraphContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  @media (min-width: 450px) {\n    flex-direction: row;\n  }\n`;\n\nconst Graph = styled.div`\n  display: flex;\n  margin-top: -24px;\n  @media (min-width: 450px) {\n    margin-left: 30px;\n  }\n`;\nconst Bio = styled.div`\n  color: #11181c;\n  font-size: 14px;\n  line-height: 20px;\n  margin-bottom: 15px;\n  margin-top: 20px;\n\n  > *:last-child {\n    margin-bottom: 15 !important;\n  }\n\n  @media (max-width: 900px) {\n    margin-bottom: 15px;\n  }\n`;\n\nif (!exists) {\n  return (\n    <>\n      <Text bold>Error</Text>\n      <Text>Could not find: {src}</Text>\n    </>\n  );\n}\n\nreturn (\n  <Wrapper>\n    <SummaryWrapper>\n      <Widget\n        src=\"discover.near/widget/Components.Summary\"\n        props={{\n          primaryAction: \"open\",\n          size: \"large\",\n          showTags: true,\n          descMaxWords: componentDescMaxWords,\n          src,\n        }}\n      />\n    </SummaryWrapper> \n\n    <Tabs>\n      <TabsButton\n        href={`${detailsUrl}&tab=source`}\n        selected={state.selectedTab === \"source\"}\n      >\n        <Icon className=\"ph ph-code\" />\n        Source & Preview\n      </TabsButton>\n      <TabsButton\n        href={`${detailsUrl}&tab=about`}\n        selected={state.selectedTab === \"about\"}\n      >\n        <Icon className=\"bi bi-file-earmark-text\" />\n        Read.me\n      </TabsButton>\n      <TabsButton\n        href={`${detailsUrl}&tab=discussion`}\n        selected={state.selectedTab === \"discussion\"}\n      >\n        <Icon className=\"bi bi-chat-text\" />\n        Discussion\n      </TabsButton>\n    </Tabs>\n\n    <Layout>\n      {state.selectedTab === \"about\" && (\n        <Content>\n          <div>\n            {metadata.description ? (\n              <Markdown text={metadata.description} />\n            ) : (\n              <Text>This component has no description.</Text>\n            )}\n          </div>\n        </Content>\n      )}\n\n      {state.selectedTab === \"source\" && (\n        <Content>\n          <Widget\n            src=\"near/widget/ComponentHistory\"\n            props={{ widgetPath: src }}\n          />\n        </Content>\n      )}\n\n      {state.selectedTab === \"discussion\" && (\n        <Content>\n          <Widget\n            src=\"near/widget/NestedDiscussions\"\n            props={{\n              identifier: src,\n              notifyAccountId: accountId,\n              parentComponent: \"near/widget/ComponentDetailsPage\",\n              parentParams: { tab: \"discussion\", src },\n              highlightComment: props.highlightComment,\n            }}\n          />\n        </Content>\n      )}\n\n      <Sidebar>\n        <SideBarContainer>\n          <SmallTitle>Developer</SmallTitle>\n\n          <Widget\n            src=\"near/widget/AccountProfile\"\n            props={{\n              accountId: accountId,\n            }}\n          />\n\n          {accountProfileDescription && (\n            <Bio>\n              <Text>{accountProfileDescription}</Text>\n            </Bio>\n          )}\n\n          <Container>\n            <Stats>\n              <StatsBadge>\n                <Icon className=\"ph ph-code\" />\n                <span className=\"badge rounded-pill bg-secondary\">\n                  {state.numberOfComponentsPublished\n                    ? state.numberOfComponentsPublished + \" published\"\n                    : \"...\"}\n                </span>\n              </StatsBadge>\n              <StatsBadge>\n                <Icon className=\"bi bi-calendar\" />\n                <span className=\"badge rounded-pill bg-secondary\">\n                  {state.developerSince ? (\n                    <Widget\n                      key=\"foo\"\n                      src=\"near/widget/TimeAgo\"\n                      props={{\n                        alwaysRelative: true,\n                        blockTimestamp: state.developerSince,\n                      }}\n                    />\n                  ) : (\n                    <span>...</span>\n                  )}\n                </span>\n              </StatsBadge>\n            </Stats>\n          </Container>\n\n          <Container>\n            <SmallTitle>Stats</SmallTitle>\n            <GraphContainer>\n              <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n                <Text small style={{ marginBottom: \"10px\" }}>\n                  Impressions\n                </Text>\n                <Text medium bold style={{ marginBottom: \"10px\" }}>\n                  {state.componentImpressionsData.impressions ?? \"...\"}\n                </Text>\n              </div>\n              {state.componentImpressionsData.weekly_chart_data_config && (\n                <Graph>\n                  <Widget\n                    src=\"near/widget/Chart\"\n                    props={{\n                      definition:\n                        state.componentImpressionsData.weekly_chart_data_config,\n                      width: \"180px\",\n                      height: \"100px\",\n                    }}\n                  />\n                </Graph>\n              )}\n            </GraphContainer>\n            <Text small style={{ marginBottom: \"10px\" }}>\n              Last updated\n            </Text>\n            <Text medium bold style={{ marginBottom: \"10px\" }}>\n              <Widget\n                src=\"mob.near/widget/TimeAgo@97556750\"\n                props={{ keyPath: `${accountId}/widget/${widgetName}` }}\n              />{\" \"}\n              ago.\n            </Text>\n          </Container>\n\n          <Container>\n            <SmallTitle>DEPENDENCIES ({dependencySources.length})</SmallTitle>\n            {dependencySources.length === 0 && (\n              <Text>This component has no dependencies.</Text>\n            )}\n            {dependencySources.map((source) => (\n              <Component key={source}>\n                <Widget\n                  key={source}\n                  src=\"near/widget/ComponentProfile\"\n                  props={{ src: source }}\n                />\n              </Component>\n            ))}\n            {!state.showAllDependencies && dependencySources.length > 5 && (\n              <Widget\n                src=\"near/widget/DIG.Button\"\n                props={{\n                  fill: \"outline\",\n                  variant: \"secondary\",\n                  label: \"Show All\",\n                  size: \"small\",\n                  style: { width: \"30%\" },\n                  onClick: () => {\n                    State.update({ showAllDependencies: true });\n                  },\n                }}\n              />\n            )}\n          </Container>\n        </SideBarContainer>\n      </Sidebar>\n    </Layout>\n  </Wrapper>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/discover.near/widget/Components.DetailsPage", "fact_widget_deployments_id": "8a37b41f024c1ea5789def98d639fff9", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}