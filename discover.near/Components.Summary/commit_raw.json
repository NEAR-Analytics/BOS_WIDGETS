{"tx_hash": "CpDQVejsHX4vbnSCnnrADCSuWiTkxWSFEMnxnuvsNBce", "action_id_social": "71dn4Pi82cg3Qeow2wJSqa7ETxABj5oD4Lgo1NdYHxws-0-widget", "block_id": 106661077, "block_timestamp": "2023-11-27T14:45:04.900Z", "signer_id": "discover.near", "widget_name": "Components.Summary", "source_code": "if (!props.src) return \"\";\n\nState.init({\n  copiedShareUrl: false,\n});\n\nconst src = props.src;\nconst primaryAction = props.primaryAction || \"viewDetails\";\nconst [accountId, widget, widgetName] = src.split(\"/\");\nconst data = Social.get(`${accountId}/widget/${widgetName}/metadata/**`);\nconst metadata = data || {};\nconst tags = Object.keys(metadata.tags || {});\nconst appUrl = `/${src}`;\nconst detailsUrl = `/near/widget/ComponentDetailsPage?src=${src}`;\nconst shareUrl = `https://near.org${detailsUrl}`;\nconst size = props.size || \"large\";\nconst componentDescMaxWords = props.descMaxWords || 30;\n\nif (props.showDesc && metadata.description) {\n  const text = metadata.description.split(\" \");\n  metadata.description = text.slice(0, componentDescMaxWords);\n  if (text.length >= componentDescMaxWords) {\n    metadata.description.push(\"...\");\n  }\n  metadata.description = metadata.description.join(\" \");\n}\n\nconst handleCloseMenu = () => {\n  props.onCloseMenu();\n};\n\nconst primaryActions = {\n  open: {\n    display: \"Open\",\n    url: appUrl,\n  },\n  viewDetails: {\n    display: \"View Details\",\n    url: detailsUrl,\n  },\n};\n\nconst sizes = {\n  medium: {\n    gap: \"16px\",\n    thumbnail: \"56px\",\n    title: \"16px\",\n  },\n  large: {\n    gap: \"16px\",\n    thumbnail: \"100px\",\n    title: \"32px\",\n  },\n};\n\nconst Wrapper = styled.div``;\n\nconst Header = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${(p) => sizes[p.size].gap};\n  margin-bottom: 32px;\n\n  > * {\n    min-width: 0;\n  }\n\n  @media (max-width: 770px) {\n    gap: 16px;\n  }\n`;\n\nconst TagsWrapper = styled.div`\n  margin-bottom: 16px;\n`;\n\nconst Actions = styled.div`\n  display: flex;\n  gap: 12px;\n  flex-wrap: wrap;\n  margin-bottom: 16px;\n`;\n\nconst Title = styled.h1`\n  font-size: ${(p) => sizes[p.size].title};\n  line-height: 1.2em;\n  color: #11181c;\n  margin: 0 0 8px;\n  font-weight: 600;\n\n  @media (max-width: 770px) {\n    font-size: 16px;\n    margin: 0;\n  }\n`;\n\nconst Thumbnail = styled.div`\n  width: ${(p) => sizes[p.size].thumbnail};\n  height: ${(p) => sizes[p.size].thumbnail};\n  flex-shrink: 0;\n  border: 1px solid #eceef0;\n  border-radius: 12px;\n  overflow: hidden;\n  box-shadow: 0px 1px 3px rgba(16, 24, 40, 0.1),\n    0px 1px 2px rgba(16, 24, 40, 0.06);\n\n  img {\n    object-fit: cover;\n    width: 100%;\n    height: 100%;\n  }\n\n  @media (max-width: 770px) {\n    width: 58px;\n    height: 58px;\n  }\n`;\n\nconst sharedButtonStyles = `\n  display: inline-flex;\n  align-items: center;\n  gap: 8px;\n  padding: 8px 16px;\n  height: 32px;\n  border-radius: 50px;\n  font-weight: 600;\n  font-size: 12px;\n  line-height: 15px;\n  text-align: center;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    text-decoration: none;\n    outline: none;\n  }\n\n  i {\n    color: #7E868C;\n  }\n\n  .bi-16 {\n    font-size: 16px;\n  }\n`;\n\nconst Button = styled.button`\n  ${sharedButtonStyles}\n  color: ${(p) => (p.primary ? \"#09342E\" : \"#11181C\")} !important;\n  background: ${(p) => (p.primary ? \"#59E692\" : \"#FBFCFD\")};\n  border: ${(p) => (p.primary ? \"none\" : \"1px solid #D7DBDF\")};\n\n  &:hover,\n  &:focus {\n    background: ${(p) => (p.primary ? \"rgb(112 242 164)\" : \"#ECEDEE\")};\n  }\n`;\n\nconst ButtonLink = styled.a`\n  ${sharedButtonStyles}\n  color: ${(p) => (p.primary ? \"#09342E\" : \"#11181C\")} !important;\n  background: ${(p) => (p.primary ? \"#59E692\" : \"#FBFCFD\")};\n  border: ${(p) => (p.primary ? \"none\" : \"1px solid #D7DBDF\")};\n\n  &:hover,\n  &:focus {\n    background: ${(p) => (p.primary ? \"rgb(112 242 164)\" : \"#ECEDEE\")};\n  }\n`;\n\nconst Text = styled.p`\n  margin: 0;\n  font-size: 14px;\n  line-height: 20px;\n  color: ${(p) => (p.bold ? \"#11181C\" : \"#687076\")};\n  font-weight: ${(p) => (p.bold ? \"600\" : \"400\")};\n  font-size: ${(p) => (p.small ? \"12px\" : \"14px\")};\n  overflow: ${(p) => (p.ellipsis ? \"hidden\" : \"visible\")};\n  text-overflow: ${(p) => (p.ellipsis ? \"ellipsis\" : \"unset\")};\n  white-space: ${(p) => (p.ellipsis ? \"nowrap\" : \"\")};\n\n  i {\n    margin-right: 4px;\n  }\n`;\n\nfunction normalizeMarkdown(text) {\n  // convert headers to normal text (remove # symbols)\n  text = text.replace(/^#+\\s*/gm, \"\");\n  // convert bold and italic to normal text (remove * and _ symbols)\n  text = text.replace(/(\\*\\*|__)(.*?)\\1/g, \"$2\");\n  text = text.replace(/(\\*|_)(.*?)\\1/g, \"$2\");\n  // remove links\n  text = text.replace(/\\[(.*?)\\]\\(.*?\\)/g, \"$1\");\n  // remove images\n  text = text.replace(/!\\[(.*?)\\]\\(.*?\\)/g, \"$1\");\n  return text.trim();\n}\n\nreturn (\n  <Wrapper>\n    <Header size={size}>\n      <Thumbnail size={size}>\n        <Widget\n          src=\"mob.near/widget/Image\"\n          props={{\n            image: metadata.image,\n            fallbackUrl:\n              \"https://ipfs.near.social/ipfs/bafkreifc4burlk35hxom3klq4mysmslfirj7slueenbj7ddwg7pc6ixomu\",\n            alt: metadata.name,\n          }}\n        />\n      </Thumbnail>\n\n      <div>\n        <Title size={size}>{metadata.name || widgetName}</Title>\n        <Text ellipsis>{src}</Text>\n      </div>\n    </Header>\n\n    {props.showDesc && (\n      <div style={{ paddingBottom: \"10px\" }}>\n        {metadata.description ? (\n          <Text>{normalizeMarkdown(metadata.description)}</Text>\n        ) : (\n          <Text>This component has no description.</Text>\n        )}\n      </div>\n    )}\n\n    {props.showTags && tags.length > 0 && (\n      <TagsWrapper>\n        <Widget\n          src=\"near/widget/Tags\"\n          props={{\n            tags,\n          }}\n        />\n      </TagsWrapper>\n    )}\n\n    <Actions>\n      <Link\n        primary\n        to={primaryActions[primaryAction].url}\n        onClick={handleCloseMenu}\n      >\n        <Button primary>{primaryActions[primaryAction].display}</Button>\n      </Link>\n\n      <ButtonLink href={`https://jutsu.ai/editor/${src}`}>\n        {context.accountId === accountId ? (\n          <>\n            <i className=\"bi bi-pencil-fill\"></i> Edit\n          </>\n        ) : (\n          <>\n            <i className=\"bi bi-git\"></i> Fork\n          </>\n        )}\n      </ButtonLink>\n\n      <Widget\n        src=\"near/widget/SocialIndexActionButton\"\n        props={{\n          actionName: \"star\",\n          actionUndoName: \"unstar\",\n          item: {\n            type: \"social\",\n            path: src,\n          },\n          notifyAccountId: accountId,\n          button: (starCount, starIsActive, starOnClick) => (\n            <Button\n              type=\"button\"\n              onClick={starOnClick}\n              aria-label=\"Star this component\"\n            >\n              {starIsActive ? (\n                <i\n                  className=\"bi bi-star-fill\"\n                  style={{ color: \"var(--amber10)\" }}\n                />\n              ) : (\n                <i className=\"bi bi-star\" />\n              )}{\" \"}\n              {starCount}\n            </Button>\n          ),\n        }}\n      />\n      <Link href={`${detailsUrl}&tab=source`}>\n        <Button>\n          <i className=\"bi bi-code-square\"></i>\n          View Source\n        </Button>\n      </Link>\n\n      <OverlayTrigger\n        placement=\"top\"\n        overlay={<Tooltip>Copy URL to clipboard</Tooltip>}\n      >\n        <Button\n          type=\"button\"\n          onMouseLeave={() => {\n            State.update({ copiedShareUrl: false });\n          }}\n          onClick={() => {\n            clipboard.writeText(shareUrl).then(() => {\n              State.update({ copiedShareUrl: true });\n            });\n          }}\n        >\n          {state.copiedShareUrl ? (\n            <i className=\"bi bi-16 bi-check\"></i>\n          ) : (\n            <i className=\"bi bi-16 bi-link-45deg\"></i>\n          )}\n          Share\n        </Button>\n      </OverlayTrigger>\n    </Actions>\n  </Wrapper>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/discover.near/widget/Components.Summary", "fact_widget_deployments_id": "ef078d22f5d74f070549afa643ab0a5a", "inserted_timestamp": "2023-11-27T16:40:22.715Z", "modified_timestamp": "2023-11-27T16:40:22.715Z", "__row_index": 0}