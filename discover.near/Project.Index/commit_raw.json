{"tx_hash": "Gydru4hpKUsN5XpNTCKRfz7py5nRFq8uXt9wdrqdX7DP", "action_id_social": "2Fk814brAtEt3StJrRzaotJs9EHGcJzvbzeAVR2x6913-0-widget", "block_id": 104666036, "block_timestamp": "2023-11-01T06:08:00.870Z", "signer_id": "discover.near", "widget_name": "Project.Index", "source_code": "const projects = Social.keys(\"legacy-awesome.near/project/*\");\n\nif (!projects) {\n  return \"Loading...\";\n}\n\nconst projectsData = Object.keys(projects[\"legacy-awesome.near\"].project).map(\n  (it) => {\n    return {\n      key: it,\n      data: Social.get(`legacy-awesome.near/project/${it}/**`).profile,\n    };\n  }\n);\n\nif (!projectsData) {\n  return \"Loading...\";\n}\n\nconst tempCategories = projectsData\n  .map((el) => Object.keys(el.data.tags))\n  .flat();\n\nconst categories = tempCategories.filter(\n  (it, idx) => tempCategories.indexOf(it) === idx\n);\n\nconst categoriesWithProjects = categories.map((it) => {\n  return {\n    category: it,\n    projects: projectsData\n      .map((project) => {\n        return {\n          projectKey: project.key,\n          ...project.data,\n          tags: Object.keys(project.data.tags),\n        };\n      })\n      .filter((project) => project.tags.includes(it)),\n  };\n});\n\nif (!categoriesWithProjects) {\n  return \"Loading...\";\n}\n\nconst AppTitle = styled.a`\n  font-size: 12px;\n  font-weight: 600;\n`;\n\nconst AppImage = styled.img`\n  width: 3.25rem;\n  height: 3.25rem;\n\n  object-fit: cover;\n  border: 1px solid #f0f0f0;\n  border-radius: 8px;\n`;\n\nfunction toUrl(image) {\n  const fallbackUrl =\n    \"https://ipfs.near.social/ipfs/bafkreifc4burlk35hxom3klq4mysmslfirj7slueenbj7ddwg7pc6ixomu\";\n  return (\n    (image.ipfs_cid\n      ? `https://ipfs.near.social/ipfs/${image.ipfs_cid}`\n      : image.url) || fallbackUrl\n  );\n}\n\nconst [currentCategory, setCurrentCategory] = useState(\"\");\nconst [searchKey, setSearchKey] = useState(\"\");\nlet filteredApps = categoriesWithProjects;\nif (currentCategory !== \"\") {\n  filteredApps = categoriesWithProjects.filter(\n    (it) => it.category === currentCategory\n  );\n}\nif (searchKey !== \"\") {\n  filteredApps = projectsData.filter((project) =>\n    project.data.name.toLowerCase().includes(searchKey.toLowerCase())\n  );\n  filteredApps = [\n    {\n      category: `Searching for \"${searchKey}\"`,\n      projects: filteredApps.map((it) => {\n        return {\n          projectKey: it.key,\n          ...it.data,\n          tags: Object.keys(it.data.tags),\n        };\n      }),\n    },\n  ];\n}\n\nconst SidebarDiv = styled.div`\n  grid-column: span 1 / span 1;\n\n  @media screen and (max-width: 800px) {\n    display: flex;\n    flex-direction: column;\n  }\n`;\n\nconst ResponsiveCategories = styled.div`\n  @media screen and (max-width: 800px) {\n    display: flex;\n    gap: 1rem;\n    overflow: auto;\n\n    background-image: linear-gradient(to right, white, white),\n      linear-gradient(to right, white, white),\n      linear-gradient(to right, rgba(0, 0, 0, 0.25), rgba(255, 255, 255, 0)),\n      linear-gradient(to left, rgba(0, 0, 0, 0.25), rgba(255, 255, 255, 0));\n    background-position: left center, right center, left center, right center;\n    background-repeat: no-repeat;\n    background-color: white;\n    background-size: 20px 100%, 20px 100%, 10px 100%, 10px 100%;\n    background-attachment: local, local, scroll, scroll;\n  }\n`;\n\nconst CategoryItem = styled.div`\n  cursor: pointer;\n  margin: 0.5rem 0;\n\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n\nconst Sidebar = () => {\n  return (\n    <SidebarDiv>\n      <h2>Categories</h2>\n      <ResponsiveCategories>\n        <CategoryItem onClick={() => setCurrentCategory(\"\")}>All</CategoryItem>\n        {categories.map((it) => (\n          <CategoryItem onClick={() => setCurrentCategory(it)}>\n            {it.charAt(0).toUpperCase() + it.slice(1).toLowerCase()}\n          </CategoryItem>\n        ))}\n      </ResponsiveCategories>\n    </SidebarDiv>\n  );\n};\n\nconst ScrollShadow = styled.div`\n  background-image: linear-gradient(to right, white, white),\n    linear-gradient(to right, white, white),\n    linear-gradient(to right, rgba(0, 0, 0, 0.25), rgba(255, 255, 255, 0)),\n    linear-gradient(to left, rgba(0, 0, 0, 0.25), rgba(255, 255, 255, 0));\n  background-position: left center, right center, left center, right center;\n  background-repeat: no-repeat;\n  background-color: white;\n  background-size: 20px 100%, 20px 100%, 10px 100%, 10px 100%;\n  background-attachment: local, local, scroll, scroll;\n`;\n\nconst AppCard = ({ project }) => {\n  const { name, image, tags, projectKey } = project;\n  return (\n    <ScrollShadow className=\"d-flex gap-3 align-items-center overflow-auto mb-2\">\n      <AppImage src={toUrl(image)} />\n      <div className=\"d-flex flex-column justify-content-center\">\n        <AppTitle\n          href={`/discover.near/widget/Project.Page?path=legacy-awesome.near/project/${projectKey}`}\n        >\n          {name}\n        </AppTitle>\n        <div className=\"d-flex gap-1 align-items-center\">\n          {tags.map((it) => (\n            <small\n              onClick={() => setCurrentCategory(it)}\n              className=\"border border-1 border-dark-subtle px-1 rounded-2\"\n              style={{ cursor: \"pointer\" }}\n            >\n              {it}\n            </small>\n          ))}\n        </div>\n      </div>\n    </ScrollShadow>\n  );\n};\n\nconst ProjectBox = styled.div`\n  width: 8rem;\n  height: 8rem;\n  border-radius: 16px;\n\n  position: relative;\n`;\n\nconst ProjectImage = styled.img`\n  position: absolute;\n  width: 8rem;\n  height: 8rem;\n  border-radius: 16px;\n  object-fit: cover;\n\n  top: 0;\n  left: 0;\n`;\nconst ProjectTitle = styled.span`\n  position: absolute;\n  bottom: 0px;\n  left: 0px;\n  right: 0px;\n  padding: 3.5rem 1.25rem 1.25rem;\n  background: linear-gradient(\n    to top,\n    rgba(0, 0, 0, 0.85) 20%,\n    rgba(0, 0, 0, 0)\n  );\n  text-shadow: rgba(0, 0, 0, 0.75) 0px 0px 2px;\n  z-index: 2;\n  color: white;\n  border-radius: 16px;\n  text-align: center;\n`;\n\nconst FeaturedProject = ({ project, projectKey }) => {\n  return (\n    <a\n      href={`/discover.near/widget/Project.Page?path=legacy-awesome.near/project/${projectKey}`}\n    >\n      <ProjectBox>\n        <ProjectTitle>{project.name}</ProjectTitle>\n        <ProjectImage src={toUrl(project.image)} />\n      </ProjectBox>\n    </a>\n  );\n};\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, minmax(0, 1fr));\n\n  @media screen and (max-width: 800px) {\n    display: flex;\n    flex-direction: column;\n    gap: 2rem;\n  }\n`;\n\nconst AppsContainer = styled.div`\n  grid-column: span 3 / span 3;\n`;\n\nconst ResponsiveAppContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, minmax(0, 1fr));\n  gap: 1rem;\n\n  @media screen and (max-width: 768px) {\n    display: block;\n  }\n`;\n\nconst CTA = styled.a`\n  background: #00bf63;\n  color: white;\n  padding: 0.5rem 1rem;\n  font-size: 12px;\n  font-weight: 600;\n  border-radius: 50rem;\n`;\n\nreturn (\n  <Container className=\"container pt-3\">\n    <Sidebar />\n    <AppsContainer>\n      {currentCategory === \"\" && (\n        <div className=\"mb-5\">\n          <div className=\"d-flex align-items-center justify-content-between mb-3\">\n            <h2>Featured Projects</h2>\n            <CTA href=\"/projects-form\">Submit your project</CTA>\n          </div>\n          <div className=\"d-flex flex-wrap gap-3 align-items-center justify-content-center\">\n            {projectsData.slice(0, 10).map((it) => (\n              <FeaturedProject project={it.data} projectKey={it.key} />\n            ))}\n          </div>\n        </div>\n      )}\n      <div className=\"mb-5\">\n        <input\n          type=\"text\"\n          placeholder=\"Search...\"\n          value={searchKey}\n          onChange={(e) => setSearchKey(e.target.value)}\n        />\n      </div>\n      {filteredApps.map((it) => (\n        <div className=\"mb-5\" style={{ maxWidth: \"100%\" }}>\n          <h2>{it.category}</h2>\n          <ResponsiveAppContainer>\n            {it.projects.map((project) => (\n              <AppCard project={project} />\n            ))}\n          </ResponsiveAppContainer>\n        </div>\n      ))}\n    </AppsContainer>\n  </Container>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/discover.near/widget/Project.Index", "fact_widget_deployments_id": "2070fbf4c1b6c1d77793c4aaca2bdfef", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}