{"tx_hash": "36n82m5tFrwuH48cLJEsQQeDZK7ZYivkiixyQDeXxFa1", "action_id_social": "7Kdk4fEwiXKPNwrhcTuu3SDZ8yqswphjy45VuftUWK98-0-widget", "block_id": 116189605, "block_timestamp": "2024-04-05T16:17:09.237Z", "signer_id": "louisdevzz.near", "widget_name": "ref-token-input", "source_code": "const accountId = context.accountId;\n\nconst REF_FI_CONTRACT = \"v2.ref-finance.near\";\n\nconst ArrowDown = (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"14\"\n    height=\"8\"\n    viewBox=\"0 0 14 8\"\n    fill=\"none\"\n  >\n    <path\n      fill-rule=\"evenodd\"\n      clip-rule=\"evenodd\"\n      d=\"M0.231804 0.359841C0.585368 -0.0644363 1.21593 -0.12176 1.64021 0.231804L7.00003 4.69832L12.3598 0.231804C12.7841 -0.12176 13.4147 -0.0644363 13.7682 0.359841C14.1218 0.784118 14.0645 1.41468 13.6402 1.76825L7.00003 7.30173L0.359841 1.76825C-0.0644363 1.41468 -0.12176 0.784118 0.231804 0.359841Z\"\n      fill=\"white\"\n    />\n  </svg>\n);\n\nconst TokenAmount = styled.div`\n  background: #373a53;\n  border-radius: 12px;\n  width: 430px;\n  @media (max-width: 736px) {\n    width: 100%;\n  }\n  padding: 18px 16px;\n  color: white;\n  display: flex;\n  align-items: center;\n`;\n\nconst Input = styled.input`\n  appearance: none;\n  outline: none;\n  width: 100%;\n  background: none;\n  border: none;\n  font-size: 20px;\n  ::placeholder {\n    color: #7c7f96;\n  }\n  color: white;\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n  -moz-appearance: textfield;\n`;\n\nconst TokenWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  color: white;\n  cursor: pointer;\n`;\n\nconst Icon = styled.img`\n  height: 26px;\n  width: 26px;\n  border-radius: 100%;\n`;\n\nconst Symbol = styled.span`\n  margin-right: 8px;\n  margin-left: 8px;\n  font-size: 18px;\n`;\n\nconst account = fetch(\"https://rpc.mainnet.near.org\", {\n  method: \"POST\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n  body: JSON.stringify({\n    jsonrpc: \"2.0\",\n    id: \"dontcare\",\n    method: \"query\",\n    params: {\n      request_type: \"view_account\",\n      finality: \"final\",\n      account_id: accountId,\n    },\n  }),\n});\n\n// \u65b0\u589e\u63a5\u53e3\nconst accountNum = JSON.parse(\n  fetch(\"https://indexer.ref.finance/list-token-price\").body\n);\nconst getBalanceNum = (token_id) => {\n  if (token_id && token_id.toLowerCase() === \"near\") {\n    return accountNum[\"wrap.near\"].price;\n  }\n\n  return accountNum[token_id].price;\n};\n\nconst shrinkToken = (value, decimals) => {\n  return new Big(value || 0).div(new Big(10).pow(decimals)).toFixed();\n};\n\nconst formatToken = (v) => Math.floor(v * 10_000) / 10_000;\n\nconst formatTokenBig = (v, decimals) =>\n  Math.floor(v * Math.pow(10, Math.min(decimals, 8))) /\n  Math.pow(10, Math.min(decimals, 8));\n\nconst getBalance = (token_id) => {\n  let amount;\n\n  if (!accountId) {\n    return \"-\";\n  }\n\n  if (token_id === \"NEAR\") amount = account.body.result.amount;\n  else {\n    amount = Near.view(token_id, \"ft_balance_of\", {\n      account_id: accountId,\n    });\n  }\n\n  return !!amount\n    ? formatToken(shrinkToken(amount, props.token.decimals))\n    : \"-\";\n};\n\nconst { amount, setAmount, handleSelect, disableInput, inputOnChange } = props;\n\nState.init({\n  show: false,\n  balance: getBalance(props.token.id),\n  handleClose: () => {\n    State.update({\n      show: false,\n    });\n  },\n  handleOpen: () => {\n    State.update({\n      show: true,\n    });\n  },\n});\nuseEffect(() => {\n  setInterval(() => {\n    State.update({ balance: getBalance(props.token.id) });\n  }, 5000);\n}, []);\n\nconst BalanceWrapper = styled.div`\n  color: #7c7f96;\n  font-size: 12px;\n  margin-left: 8px;\n  padding-top: 4px;\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst Wrapper = styled.div`\n  position: relative;\n  margin-top: 8px;\n`;\n\nconst SelectToken = (\n  <Widget\n    src={`huunhanz.near/widget/selectToken`}\n    props={{\n      show: state.show || false,\n      handleClose: state.handleClose,\n      handleSelect: (metadata) => {\n        handleSelect(metadata);\n        state.handleClose();\n      },\n    }}\n  />\n);\n\nreturn (\n  <Wrapper>\n    <TokenAmount>\n      <Input\n        class=\"ref-token-inut\"\n        placeholder=\"0.0\"\n        onChange={inputOnChange}\n        value={\n          !!disableInput\n            ? !!amount\n              ? formatTokenBig(amount, props.token.decimals)\n              : \"0\"\n            : amount\n        }\n        disabled={!!disableInput}\n      />\n\n      <TokenWrapper\n        onClick={() => {\n          state.handleOpen();\n        }}\n      >\n        <Icon src={props.token.icon} />\n        <Symbol>{props.token.symbol}</Symbol>\n        {ArrowDown}\n      </TokenWrapper>\n    </TokenAmount>\n    <BalanceWrapper>\n      <div>\n        ~${\" \"}\n        {formatTokenBig(\n          getBalanceNum(props.token.id) * amount,\n          props.token.decimals\n        )}\n      </div>\n      <div>Balance: {state.balance}</div>\n    </BalanceWrapper>\n\n    {SelectToken}\n  </Wrapper>\n);\n", "metadata": {"fork_of": "louisdevzz.near/widget/ref-token-input@116189561"}, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/louisdevzz.near/widget/ref-token-input", "fact_widget_deployments_id": "9fc82f9ef49d8e74ac6c3dafa77299b1", "inserted_timestamp": "2024-04-05T17:41:37.885Z", "modified_timestamp": "2024-04-05T17:41:37.885Z", "__row_index": 32}