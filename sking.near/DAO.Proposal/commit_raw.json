{"tx_hash": "GQATsuC5sDPjNRWSUjp8mfnzc8gA4UHW1247FZv9ooAY", "action_id_social": "AzHZhJg6Rjgd9DsXGiEYsC2dZFP8AQJDE5mWmaudusgy-0-widget", "block_id": 91607593, "block_timestamp": "2023-05-11T12:47:26.456Z", "signer_id": "sking.near", "widget_name": "DAO.Proposal", "source_code": "const daoId = props.daoId ?? \"multi.sputnik-dao.near\";\n\nconst proposal = props.proposal ?? {\n  id: 1,\n  proposer: \"hack.near\",\n  description:\n    \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur ut pharetra orci. Aliquam vitae enim tincidunt sapien fermentum scelerisque.\",\n  kind: { AddMemberToRole: { member_id: \"hack.near\", role: \"community\" } },\n  status: \"Approved\",\n  vote_counts: { council: [1, 0, 0] },\n  votes: { \"infinity.near\": \"Approve\" },\n  submission_time: \"1682527782646393764\",\n};\n\nproposal.type =\n  typeof proposal.kind === \"string\"\n    ? proposal.kind\n    : Object.keys(proposal.kind)[0];\nproposal.type = proposal.type.replace(/([A-Z])/g, \" $1\").trim(); // Add spaces between camelCase\n\nproposal.status = proposal.status.replace(/([A-Z])/g, \" $1\").trim(); // Add spaces between camelCase\n\n// ==============================\n// Styled Components\n// ==============================\n\nconst statusColor =\n  proposal.status === \"Approved\"\n    ? \"#28a930\"\n    : proposal.status === \"In Progress\"\n    ? \"#58a1ff\"\n    : proposal.status === \"Failed\"\n    ? \"#dc3545\"\n    : \"#6c757d\";\n\nconst Wrapper = styled.div`\n  margin: 16px auto;\n  max-width: 900px;\n  background-color: #fff;\n  border-radius: 16px;\n  padding: 24px;\n  box-shadow: rgba(0, 0, 0, 0.18) 0px 2px 4px;\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n\n  p {\n    line-height: 1.4;\n    font-weight: 400;\n    font-size: 15px;\n    color: #868682;\n    margin: 0;\n  }\n\n  h3 {\n    font-weight: 600;\n    font-size: 24px;\n    color: #1b1b18;\n  }\n\n  h5 {\n    font-size: 12px;\n    font-weight: 400;\n    line-height: 1.2;\n    color: #6c757d;\n  }\n\n  .status {\n    font-size: 14px;\n    font-weight: 600;\n    line-height: 1.2;\n    color: ${statusColor};\n  }\n`;\n\n/**\n * Determine the proposal's arguments to show in the UI depending on its kind https://github.com/near-daos/sputnik-dao-contract/blob/2b19edb50e4542e1b8a6769023f2318c70255ee9/sputnikdao2/src/proposals.rs#L62\n */\n\nconst RenderProposalArgs = () => {\n  const proposal_type =\n    typeof proposal.kind === \"string\"\n      ? proposal.kind\n      : Object.keys(proposal.kind)[0];\n  if (proposal_type === \"Vote\") return null;\n\n  if (proposal_type === \"Transfer\")\n    return (\n      <>\n        <div>\n          <h5>Amount</h5>\n          <Widget\n            src=\"sking.near/widget/Common.TokenAmount\"\n            props={{\n              amountWithoutDecimals: proposal.kind.Transfer.amount,\n              address: proposal.kind.Transfer.token_id,\n            }}\n          />\n        </div>\n        <div>\n          <h5>Receiver</h5>\n          <Widget\n            src=\"mob.near/widget/Profile.ShortInlineBlock\"\n            props={{\n              accountId: proposal.kind.Transfer.receiver_id,\n              tooltip: true,\n            }}\n          />\n        </div>\n      </>\n    );\n\n  if (proposal_type === \"FunctionCall\") {\n    return proposal.kind.FunctionCall.actions.reduce(\n      (acc, { method_name, args, deposit }) => {\n        return acc.concat(\n          <div\n            className=\"d-flex flex-wrap align-items-start w-100\"\n            style={{\n              columnGap: \"48px\",\n              rowGap: \"16px\",\n            }}\n          >\n            <div>\n              <h5>Smart Contract Address</h5>\n              <p>{proposal.kind.FunctionCall.receiver_id}</p>\n            </div>\n            <div>\n              <h5>Method Name</h5>\n              <p>{method_name}</p>\n            </div>\n            <div>\n              <h5>Deposit</h5>\n              <Widget\n                src=\"sking.near/widget/Common.TokenAmount\"\n                props={{\n                  amountWithoutDecimals: deposit,\n                  address: \"\",\n                }}\n              />\n            </div>\n            <div className=\"w-100\">\n              <h5>Arguments</h5>\n              <Markdown\n                // Decode the args (Base64) to String then Parse the Json then format it and display it as markdown code\n                text={\n                  \"```json\\n\" +\n                  JSON.stringify(\n                    JSON.parse(Buffer.from(args, \"base64\").toString(\"utf8\")),\n                    null,\n                    2\n                  ) +\n                  \"\\n```\"\n                }\n              />\n            </div>\n          </div>\n        );\n      },\n      []\n    );\n  }\n\n  if (\n    proposal_type === \"AddMemberToRole\" ||\n    proposal_type === \"RemoveMemberFromRole\"\n  )\n    return (\n      <>\n        <div>\n          <h5>Member</h5>\n          <Widget\n            src=\"mob.near/widget/Profile.ShortInlineBlock\"\n            props={{\n              accountId: proposal.kind.AddMemberToRole.member_id,\n              tooltip: true,\n            }}\n          />\n        </div>\n        <div>\n          <h5>Role</h5>\n          <p>{proposal.kind.AddMemberToRole.role}</p>\n        </div>\n      </>\n    );\n\n  if (proposal_type === \"AddBounty\")\n    return (\n      <>\n        <div>\n          <h5>Amount</h5>\n          <Widget\n            src=\"sking.near/widget/Common.TokenAmount\"\n            props={{\n              amountWithoutDecimals: proposal.kind.AddBounty.bounty.amount,\n              address: proposal.kind.AddBounty.bounty.token,\n            }}\n          />\n        </div>\n        <div>\n          <h5>Times</h5>\n          <p>{proposal.kind.AddBounty.bounty.times}</p>\n        </div>\n        <div>\n          <h5>Deadline</h5>\n          <p>\n            {new Date(\n              proposal.kind.AddBounty.bounty.max_deadline\n            ).toLocaleString()}\n          </p>\n        </div>\n        <div>\n          <h5>Bounty Description</h5>\n          <p>{proposal.kind.AddBounty.bounty.description}</p>\n        </div>\n      </>\n    );\n\n  if (proposal_type === \"BountyDone\")\n    return (\n      <>\n        <div>\n          <h5>Receiver</h5>\n          <Widget\n            src=\"mob.near/widget/Profile.ShortInlineBlock\"\n            props={{\n              accountId: proposal.kind.BountyDone.receiver_id,\n              tooltip: true,\n            }}\n          />\n        </div>\n        <div>\n          <h5>Bounty ID</h5>\n          <p>{proposal.kind.BountyDone.bounty_id}</p>\n        </div>\n      </>\n    );\n};\n\nreturn (\n  <Wrapper>\n    <div className=\"d-flex justify-content-between align-items-center\">\n      <div>\n        <h5>Proposal ID: {proposal.id}</h5>\n        <h3>{proposal.type}</h3>\n      </div>\n      <div className=\"d-flex flex-column align-items-end\">\n        <h5>Status</h5>\n        <span className=\"status\">{proposal.status}</span>\n      </div>\n    </div>\n    <div>\n      <h5>Proposer</h5>\n      <Widget\n        src=\"mob.near/widget/Profile.ShortInlineBlock\"\n        props={{ accountId: proposal.proposer, tooltip: true }}\n      />\n    </div>\n    <div>\n      <h5>Description</h5>\n      <p>{proposal.description}</p>\n    </div>\n    <div className=\"d-flex gap-5 flex-wrap align-items-start\">\n      <RenderProposalArgs />\n    </div>\n\n    <div className=\"w-100\">\n      <h5>Votes</h5>\n      <Widget\n        src=\"sking.near/widget/DAO.Proposal.Vote\"\n        props={{\n          daoId: daoId,\n          proposal: proposal,\n        }}\n      />\n    </div>\n  </Wrapper>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/sking.near/widget/DAO.Proposal", "fact_widget_deployments_id": "000585ed659eb706bf3f7af11c20834a", "inserted_timestamp": "2000-01-01T00:00:00.000Z", "modified_timestamp": "2000-01-01T00:00:00.000Z", "__row_index": 7}