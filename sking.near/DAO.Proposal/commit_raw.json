{"tx_hash": "2v5N66JgMyFbUQz7FTg8aW99dg156Th286Vg5qS75nmy", "action_id_social": "Aaj5b4GLHtB4Xq8vgVG61rFrapc4vkewFLPCi5cfEB5x-0-widget", "block_id": 96203806, "block_timestamp": "2023-07-11T06:38:47.653Z", "signer_id": "sking.near", "widget_name": "DAO.Proposal", "source_code": "const daoId = props.daoId ?? \"multi.sputnik-dao.near\";\nconst proposalId = props.proposalId;\n\nlet proposal = props.proposal && JSON.parse(JSON.stringify(props.proposal));\n\n// if proposal is not provided and proposalId and daoId are provided then fetch proposal\nif (!proposal && proposalId && daoId) {\n  let new_proposal = Near.view(daoId, \"get_proposal\", {\n    id: Number(proposalId),\n  });\n  if (new_proposal) {\n    proposal = new_proposal;\n  } else if (new_proposal === null) {\n    return \"Loading...\";\n  } else {\n    return \"Proposal not found, check console for details.\";\n  }\n} else if (!proposal) {\n  return \"Please provide a proposal or proposalId.\";\n}\n\n// --- check user permissions\nfunction toPolicyLabel(proposalKind) {\n  const kindName =\n    typeof proposalKind === \"string\"\n      ? proposalKind\n      : Object.keys(proposalKind)[0];\n  switch (kindName) {\n    case \"ChangeConfig\":\n      return \"config\";\n    case \"ChangePolicy\":\n      return \"policy\";\n    case \"AddMemberToRole\":\n      return \"add_member_to_role\";\n    case \"RemoveMemberFromRole\":\n      return \"remove_member_from_role\";\n    case \"FunctionCall\":\n      return \"call\";\n    case \"UpgradeSelf\":\n      return \"upgrade_self\";\n    case \"UpgradeRemote\":\n      return \"upgrade_remote\";\n    case \"Transfer\":\n      return \"transfer\";\n    case \"SetStakingContract\":\n      return \"set_vote_token\";\n    case \"AddBounty\":\n      return \"add_bounty\";\n    case \"BountyDone\":\n      return \"bounty_done\";\n    case \"Vote\":\n      return \"vote\";\n    case \"FactoryInfoUpdate\":\n      return \"factory_info_update\";\n    case \"ChangePolicyAddOrUpdateRole\":\n      return \"policy_add_or_update_role\";\n    case \"ChangePolicyRemoveRole\":\n      return \"policy_remove_role\";\n    case \"ChangePolicyUpdateDefaultVotePolicy\":\n      return \"policy_update_default_vote_policy\";\n    case \"ChangePolicyUpdateParameters\":\n      return \"policy_update_parameters\";\n    default:\n      return \"\";\n  }\n}\n\nlet roles = Near.view(daoId, \"get_policy\");\nroles = roles === null ? [] : roles.roles;\nconst userRoles = [];\nfor (const role of roles) {\n  if (role.kind === \"Everyone\") {\n    userRoles.push(role);\n    continue;\n  }\n  if (!role.kind.Group) continue;\n  if (\n    context.accountId &&\n    role.kind.Group &&\n    role.kind.Group.includes(context.accountId)\n  ) {\n    userRoles.push(role);\n  }\n}\n\nconst isAllowedTo = (action) => {\n  let allowed = false;\n\n  const allowedRoles = userRoles\n    .filter(({ permissions }) => {\n      const allowedRole =\n        permissions.includes(\n          `${toPolicyLabel(proposal.kind)}:${action.toString()}`\n        ) ||\n        permissions.includes(`${toPolicyLabel(proposal.kind)}:*`) ||\n        permissions.includes(`*:${action.toString()}`) ||\n        permissions.includes(\"*:*\");\n      allowed = allowed || allowedRole;\n      return allowedRole;\n    })\n    .map((role) => role.name);\n\n  return [allowed, allowedRoles];\n};\n\nconst isAllowedToVoteYes = isAllowedTo(\"VoteApprove\")[0];\nconst isAllowedToVoteNo = isAllowedTo(\"VoteReject\")[0];\nconst isAllowedToVoteRemove = isAllowedTo(\"VoteRemove\")[0];\n\nconsole.log(isAllowedToVoteYes, isAllowedToVoteNo, isAllowedToVoteRemove);\n// --- end of check\n\nproposal.type =\n  typeof proposal.kind === \"string\"\n    ? proposal.kind\n    : Object.keys(proposal.kind)[0];\nproposal.type = proposal.type.replace(/([A-Z])/g, \" $1\").trim(); // Add spaces between camelCase\n\nproposal.status = proposal.status.replace(/([A-Z])/g, \" $1\").trim(); // Add spaces between camelCase\n\n// ==============================\n// Styled Components\n// ==============================\n\nconst statusColor =\n  proposal.status === \"Approved\"\n    ? \"#28a930\"\n    : proposal.status === \"In Progress\"\n    ? \"#58a1ff\"\n    : proposal.status === \"Failed\"\n    ? \"#dc3545\"\n    : \"#6c757d\";\n\nconst statusBackgroundColor =\n  proposal.status === \"Approved\"\n    ? \"#ecf7ef\"\n    : proposal.status === \"Failed\" || proposal.status === \"Rejected\"\n    ? \"#fdf4f4\"\n    : \"#fff\";\n\nconst Wrapper = styled.div`\n  background-color: ${statusBackgroundColor};\n  margin: 16px auto;\n  max-width: 900px;\n  border-radius: 16px;\n  padding: 24px;\n  box-shadow: rgba(0, 0, 0, 0.18) 0px 2px 4px;\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n  min-height: 500px;\n\n  p {\n    line-height: 1.4;\n    font-weight: 400;\n    font-size: 15px;\n    color: #868682;\n    margin: 0;\n  }\n\n  h3 {\n    font-weight: 600;\n    font-size: 24px;\n    color: #1b1b18;\n  }\n\n  h5 {\n    font-size: 14px;\n    font-weight: 500;\n    line-height: 1.2;\n    color: #6c757d;\n  }\n\n  .status {\n    font-size: 14px;\n    font-weight: 600;\n    line-height: 1.2;\n    color: ${statusColor};\n  }\n`;\n\nconst MarkdownContainer = styled.div`\n  position: relative;\n  width: 100%;\n  padding: 24px;\n  background-color: #f8f9fa;\n  color: #1b1b18;\n  border-radius: 14px;\n  max-height: 700px;\n  overflow-y: auto;\n  color: #333;\n  line-height: 1.6;\n  box-shadow: rgba(0, 0, 0, 0.05) 0px 0px 0px 1px;\n\n  h1 {\n    font-size: 2em;\n    color: #111;\n    border-bottom: 1px solid #ccc;\n    padding-bottom: 0.3em;\n    margin-bottom: 1em;\n  }\n\n  h2 {\n    font-size: 1.5em;\n    color: #222;\n    margin-bottom: 0.75em;\n  }\n\n  h3 {\n    font-size: 1.3em;\n    color: #333;\n    margin-bottom: 0.6em;\n  }\n\n  h4 {\n    font-size: 1.2em;\n    color: #444;\n    margin-bottom: 0.5em;\n  }\n\n  h5 {\n    font-size: 1.1em;\n    color: #555;\n    margin-bottom: 0.4em;\n  }\n\n  p {\n    font-size: 1em;\n    margin-bottom: 1em;\n  }\n\n  a {\n    color: #0645ad;\n    text-decoration: none;\n  }\n\n  a:hover {\n    text-decoration: underline;\n  }\n`;\n\nfunction deepSortObject(obj) {\n  if (typeof obj !== \"object\" || obj === null) {\n    // Return non-object values as is\n    return obj;\n  }\n\n  if (Array.isArray(obj)) {\n    // If the input is an array, recursively sort each element\n    return obj.map(deepSortObject).sort();\n  }\n\n  const sortedObject = {};\n  const sortedKeys = Object.keys(obj).sort((keyA, keyB) => {\n    // Compare keys in a case-insensitive manner\n    return keyA.toLowerCase().localeCompare(keyB.toLowerCase());\n  });\n\n  for (const key of sortedKeys) {\n    sortedObject[key] = deepSortObject(obj[key]);\n  }\n\n  return sortedObject;\n}\n\nconst RenderProposalArgs = () => {\n  const proposal_type =\n    typeof proposal.kind === \"string\"\n      ? proposal.kind\n      : Object.keys(proposal.kind)[0];\n  if (proposal_type === \"Vote\") return null;\n\n  if (proposal_type === \"Transfer\")\n    return (\n      <>\n        <div>\n          <h5>Amount</h5>\n          <Widget\n            src=\"sking.near/widget/Common.TokenAmount\"\n            props={{\n              amountWithoutDecimals: proposal.kind.Transfer.amount,\n              address: proposal.kind.Transfer.token_id,\n            }}\n          />\n        </div>\n        <div>\n          <h5>Receiver</h5>\n          <Widget\n            src=\"mob.near/widget/Profile.ShortInlineBlock\"\n            props={{\n              accountId: proposal.kind.Transfer.receiver_id,\n              tooltip: true,\n            }}\n          />\n        </div>\n      </>\n    );\n\n  if (proposal_type === \"FunctionCall\") {\n    return proposal.kind.FunctionCall.actions.reduce(\n      (acc, { method_name, args, deposit }) => {\n        return acc.concat(\n          <div\n            className=\"d-flex flex-wrap align-items-start w-100\"\n            style={{\n              columnGap: \"48px\",\n              rowGap: \"16px\",\n            }}\n          >\n            <div>\n              <h5>Smart Contract Address</h5>\n              <p>{proposal.kind.FunctionCall.receiver_id}</p>\n            </div>\n            <div>\n              <h5>Method Name</h5>\n              <p>{method_name}</p>\n            </div>\n            <div>\n              <h5>Deposit</h5>\n              <Widget\n                src=\"sking.near/widget/Common.TokenAmount\"\n                props={{\n                  amountWithoutDecimals: deposit,\n                  address: \"\",\n                }}\n              />\n            </div>\n            <div className=\"w-100\">\n              <h5>Arguments</h5>\n              <Markdown\n                // Decode the args (Base64) to String then Parse the Json then format it and display it as markdown code\n                text={\n                  \"```json\\n\" +\n                  JSON.stringify(\n                    JSON.parse(Buffer.from(args, \"base64\").toString(\"utf8\")),\n                    null,\n                    2\n                  ) +\n                  \"\\n```\"\n                }\n              />\n            </div>\n          </div>\n        );\n      },\n      []\n    );\n  }\n\n  if (\n    proposal_type === \"AddMemberToRole\" ||\n    proposal_type === \"RemoveMemberFromRole\"\n  )\n    return (\n      <>\n        <div>\n          <h5>Member</h5>\n          <Widget\n            src=\"mob.near/widget/Profile.ShortInlineBlock\"\n            props={{\n              accountId: proposal.kind[proposal_type].member_id,\n              tooltip: true,\n            }}\n          />\n        </div>\n        <div>\n          <h5>Role</h5>\n          <p>{proposal.kind[proposal_type].role}</p>\n        </div>\n      </>\n    );\n\n  if (proposal_type === \"AddBounty\")\n    return (\n      <>\n        <div>\n          <h5>Amount</h5>\n          <Widget\n            src=\"sking.near/widget/Common.TokenAmount\"\n            props={{\n              amountWithoutDecimals: proposal.kind.AddBounty.bounty.amount,\n              address: proposal.kind.AddBounty.bounty.token,\n            }}\n          />\n        </div>\n        <div>\n          <h5>Times</h5>\n          <p>{proposal.kind.AddBounty.bounty.times}</p>\n        </div>\n        <div>\n          <h5>Deadline</h5>\n          <p>\n            {new Date(\n              proposal.kind.AddBounty.bounty.max_deadline\n            ).toLocaleString()}\n          </p>\n        </div>\n        <div className=\"w-100\">\n          <h5>Bounty Description</h5>\n          <MarkdownContainer>\n            <Markdown text={proposal.kind.AddBounty.bounty.description} />\n          </MarkdownContainer>\n        </div>\n      </>\n    );\n\n  if (proposal_type === \"BountyDone\")\n    return (\n      <>\n        <div>\n          <h5>Receiver</h5>\n          <Widget\n            src=\"mob.near/widget/Profile.ShortInlineBlock\"\n            props={{\n              accountId: proposal.kind.BountyDone.receiver_id,\n              tooltip: true,\n            }}\n          />\n        </div>\n        <div>\n          <h5>Bounty ID</h5>\n          <p>{proposal.kind.BountyDone.bounty_id}</p>\n        </div>\n      </>\n    );\n\n  // TODO: ChangePolicy component need some UI improvements to be more readable\n  if (proposal_type === \"ChangePolicy\") {\n    const old_policy = Near.view(daoId, \"get_policy\");\n    if (old_policy === null) return null;\n    return (\n      <>\n        <div className=\"w-100\">\n          <h5>Policy Changes</h5>\n          <div\n            className=\"w-100\"\n            style={{\n              maxHeight: \"400px\",\n              overflow: \"auto\",\n            }}\n          >\n            <Widget\n              src=\"bozon.near/widget/CodeDiff\"\n              props={{\n                prevCode: JSON.stringify(deepSortObject(old_policy), null, 2),\n                currentCode: JSON.stringify(\n                  deepSortObject(proposal.kind.ChangePolicy.policy),\n                  null,\n                  2\n                ),\n              }}\n            />\n          </div>\n        </div>\n      </>\n    );\n  }\n};\n\nconst useMarkdownForDescription =\n  proposal.type === \"Vote\" || proposal.type === \"Bounty Done\" ? true : false;\n\nconst proposalURL = `/#/sking.near/widget/DAO.Page?daoId=${daoId}&tab=proposal&proposalId=${proposal.id}`;\nreturn (\n  <Wrapper>\n    <div className=\"d-flex justify-content-between align-items-center\">\n      <div>\n        <h5>Proposal ID: {proposal.id}</h5>\n        <h3>\n          {proposal.type}\n          <a href={proposalURL} target=\"_blank\" rel=\"noreferrer\">\n            <i className=\"bi bi-link-45deg\"></i>\n          </a>\n        </h3>\n      </div>\n      <div className=\"d-flex flex-column align-items-end\">\n        <h5>Status</h5>\n        <span className=\"status\">{proposal.status}</span>\n      </div>\n    </div>\n    <div>\n      <h5>Proposer</h5>\n      <Widget\n        src=\"mob.near/widget/Profile.ShortInlineBlock\"\n        props={{ accountId: proposal.proposer, tooltip: true }}\n      />\n    </div>\n    <div>\n      <h5>Description</h5>\n      {useMarkdownForDescription ? (\n        <MarkdownContainer>\n          <Markdown text={proposal.description} />\n        </MarkdownContainer>\n      ) : (\n        <p>{proposal.description}</p>\n      )}\n    </div>\n    <div\n      className=\"d-flex flex-wrap align-items-start\"\n      style={{\n        rowGap: \"16px\",\n        columnGap: \"48px\",\n      }}\n    >\n      <RenderProposalArgs />\n    </div>\n\n    <div className=\"w-100\">\n      <h5>Votes</h5>\n      <Widget\n        src=\"sking.near/widget/DAO.Proposal.Vote\"\n        props={{\n          daoId: daoId,\n          proposal: proposal,\n          isAllowedToVote: [\n            isAllowedToVoteYes,\n            isAllowedToVoteNo,\n            isAllowedToVoteRemove,\n          ],\n        }}\n      />\n    </div>\n\n    <Widget\n      src=\"sking.near/widget/DAO.Proposal.Additional\"\n      props={{\n        daoId: daoId,\n        proposal: proposal,\n      }}\n    />\n  </Wrapper>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/sking.near/widget/DAO.Proposal", "fact_widget_deployments_id": "9fdd5e907cfa38a9d1a6f0d4b6d9a5b6", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 3}