{"tx_hash": "CbAY1s5ryJVM8J5vDQbDRYuHDktGwae8H1pqtD1zT1mJ", "action_id_social": "2Frx18vipuz5uxTPGR5a7ccir5dWDzypGtXHxPmLw7wQ-0-widget", "block_id": 97383391, "block_timestamp": "2023-07-26T14:49:56.808Z", "signer_id": "sking.near", "widget_name": "DAO.Proposal.Create.FunctionCall", "source_code": "const accountId = props.accountId ?? context.accountId;\nconst contractId = props.contractId;\nconst onClose = props.onClose;\nconst policy = props.policy;\n\nif (!accountId) {\n  return \"Please connect your NEAR wallet :)\";\n}\n\nState.init({\n  contractId: state.contractId,\n  method_name: state.method_name,\n  args: state.args || \"{}\",\n  deposit: state.deposit || \"0\",\n  gas: state.gas,\n  error: undefined,\n});\n\nconst fc_args = Buffer.from(state.args, \"utf-8\").toString(\"base64\");\n\nfunction isNearAddress(address) {\n  const ACCOUNT_ID_REGEX =\n    /^(([a-z\\d]+[-_])*[a-z\\d]+\\.)*([a-z\\d]+[-_])*[a-z\\d]+$/;\n  return (\n    address.length >= 2 &&\n    address.length <= 64 &&\n    ACCOUNT_ID_REGEX.test(address)\n  );\n}\n\nconst handleFunctionCall = () => {\n  if (\n    !state.contractId ||\n    state.contractId === \"\" ||\n    !isNearAddress(state.contractId)\n  ) {\n    State.update({\n      error: \"Please enter a valid contract ID\",\n    });\n    return;\n  }\n  if (!state.method_name || state.method_name === \"\") {\n    State.update({\n      error: \"Please enter a valid method name\",\n    });\n    return;\n  }\n  const is_valid_json = (str) => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  };\n  if (!state.args || state.args === \"\" || !is_valid_json(state.args)) {\n    State.update({\n      error: \"Please enter a valid JSON arguments\",\n    });\n    return;\n  }\n  if (state.deposit < 0) {\n    State.update({\n      error: \"Please enter a valid deposit\",\n    });\n    return;\n  }\n  if (state.gas && state.gas <= 0) {\n    State.update({\n      error: \"Please enter a valid gas\",\n    });\n    return;\n  }\n\n  const deposit = Big(state.deposit).mul(Big(10).pow(24)).toFixed();\n  let totalDeposit = Big(deposit);\n\n  if (policy.proposal_bond) {\n    totalDeposit = totalDeposit.plus(policy.proposal_bond);\n  }\n\n  Near.call([\n    {\n      contractName: state.contractId,\n      methodName: state.method_name,\n      args: {\n        Arguments: fc_args,\n      },\n      deposit: totalDeposit,\n      gas: state.gas ?? \"200000000000000\",\n    },\n  ]);\n};\n\nconst onChangeContract = (contractId) => {\n  State.update({\n    contractId,\n    error: undefined,\n  });\n};\n\nconst onChangeMethod = (method_name) => {\n  State.update({\n    method_name,\n    error: undefined,\n  });\n};\n\nconst onChangeArgs = (args) => {\n  State.update({\n    args,\n    error: undefined,\n  });\n};\n\nconst onChangeGas = (gas) => {\n  State.update({\n    gas,\n    error: undefined,\n  });\n};\n\nconst onChangeDeposit = (deposit) => {\n  State.update({\n    deposit,\n    error: undefined,\n  });\n};\n\nreturn (\n  <>\n    <div className=\"mb-3\">\n      <h5>Contract</h5>\n      <input type=\"text\" onChange={(e) => onChangeContract(e.target.value)} />\n    </div>\n    <div className=\"mb-3\">\n      <h5>Method</h5>\n      <input type=\"text\" onChange={(e) => onChangeMethod(e.target.value)} />\n    </div>\n    <div className=\"mb-3\">\n      <h5>Deposit</h5>\n      <input\n        type=\"number\"\n        onChange={(e) => onChangeDeposit(e.target.value)}\n        defaultValue=\"0\"\n      />\n    </div>\n    <div className=\"mb-3\">\n      <h5>Gas</h5>\n      <input\n        type=\"number\"\n        onChange={(e) => onChangeGas(e.target.value)}\n        defaultValue=\"200000000000000\"\n      />\n    </div>\n    <div className=\"mb-3\">\n      <h5>Arguments (JSON)</h5>\n      <textarea\n        type=\"text\"\n        onChange={(e) => onChangeArgs(e.target.value)}\n        className=\"form-control\"\n        defaultValue={state.args}\n      />\n    </div>\n    {state.error && <div className=\"text-danger\">{state.error}</div>}\n    <div className=\"ms-auto\">\n      <Widget\n        src=\"sking.near/widget/Common.Button\"\n        props={{\n          children: \"Propose Function Call\",\n          onClick: handleFunctionCall,\n          className: \"mt-2\",\n          variant: \"success\",\n        }}\n      />\n      {onClose && (\n        <Widget\n          src=\"sking.near/widget/Common.Button\"\n          props={{\n            children: \"Close\",\n            onClick: onClose,\n            className: \"mt-2\",\n          }}\n        />\n      )}\n    </div>\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/sking.near/widget/DAO.Proposal.Create.FunctionCall", "fact_widget_deployments_id": "b8e4e31def4db2ff026020883e835d35", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 33}