{"tx_hash": "5xeavduraQgf9sHBsexvYHxUa9G6CuTzS4ivcsAH9MNH", "action_id_social": "4eYtEg4rcX7UK9qZxFo6VemwEqRfHnMHWQY8yXBhHUjm-0-widget", "block_id": 97383585, "block_timestamp": "2023-07-26T14:53:33.029Z", "signer_id": "sking.near", "widget_name": "DAO.Proposal.Create.Transfer", "source_code": "const accountId = props.accountId ?? context.accountId;\nconst daoId = props.daoId ?? \"multi.sputnik-dao.near\";\nconst onClose = props.onClose;\nconst policy = props.policy;\n\nif (!accountId) {\n  return \"Please connect your NEAR wallet :)\";\n}\n\nState.init({\n  receiver_id: state.receiver_id,\n  amount: state.amount,\n  tokenAddress: state.tokenAddress || \"\",\n  error: state.error,\n});\n\nfunction isNearAddress(address) {\n  const ACCOUNT_ID_REGEX =\n    /^(([a-z\\d]+[-_])*[a-z\\d]+\\.)*([a-z\\d]+[-_])*[a-z\\d]+$/;\n  return (\n    address.length >= 2 &&\n    address.length <= 64 &&\n    ACCOUNT_ID_REGEX.test(address)\n  );\n}\n\nconst handleProposal = () => {\n  if (!state.amount || state.amount <= 0) {\n    State.update({\n      error: \"Please enter a valid amount\",\n    });\n    return;\n  }\n  if (\n    !state.receiver_id ||\n    receiver_id === \"\" ||\n    !isNearAddress(state.receiver_id)\n  ) {\n    State.update({\n      error: \"Please enter a valid recipient\",\n    });\n    return;\n  }\n  if (state.tokenAddress !== \"\" && !isNearAddress(state.tokenAddress)) {\n    State.update({\n      error: \"Please enter a valid token address\",\n    });\n    return;\n  }\n\n  const gas = 200000000000000;\n  const deposit = 0;\n\n  let totalDeposit = Big(deposit);\n\n  if (policy.proposal_bond) {\n    totalDeposit = totalDeposit.plus(policy.proposal_bond);\n  }\n\n  let ftMetadata = {\n    decimals: 24,\n  };\n  if (state.tokenAddress !== \"\") {\n    ftMetadata = Near.view(address, \"ft_metadata\", {});\n    if (ftMetadata === null) return null;\n  }\n\n  const amountInYocto = Big(state.amount)\n    .mul(Big(10).pow(ftMetadata.decimals))\n    .toFixed();\n\n  Near.call([\n    {\n      contractName: daoId,\n      methodName: \"add_proposal\",\n      args: {\n        proposal: {\n          description: \"transfer proposal\",\n          kind: {\n            Transfer: {\n              token_id: state.tokenAddress,\n              receiver_id: state.receiver_id,\n              amount: amountInYocto,\n            },\n          },\n        },\n      },\n      gas: gas,\n      deposit: totalDeposit,\n    },\n  ]);\n};\n\nconst onChangeRecipient = (receiver_id) => {\n  State.update({\n    receiver_id,\n    error: undefined,\n  });\n};\n\nconst onChangeAmount = (amount) => {\n  State.update({\n    amount,\n    error: undefined,\n  });\n};\n\nconst onChangeToken = (tokenAddress) => {\n  State.update({\n    tokenAddress,\n    error: undefined,\n  });\n};\n\nreturn (\n  <>\n    <div className=\"mb-2\">\n      <h5>Recipient</h5>\n      <input type=\"text\" onChange={(e) => onChangeRecipient(e.target.value)} />\n    </div>\n    <div className=\"mb-3\">\n      <h5>Token Address</h5>\n      <input\n        type=\"text\"\n        onChange={(e) => onChangeToken(e.target.value)}\n        placeholder=\"Leave empty for NEAR\"\n      />\n    </div>\n    <div className=\"mb-3\">\n      <h5>Amount</h5>\n      <input\n        type=\"number\"\n        onChange={(e) => onChangeAmount(e.target.value)}\n        min=\"0\"\n      />\n    </div>\n    {state.error && <div className=\"text-danger\">{state.error}</div>}\n    <div className=\"ms-auto\">\n      <Widget\n        src=\"sking.near/widget/Common.Button\"\n        props={{\n          children: \"Propose Transfer\",\n          onClick: handleProposal,\n          className: \"mt-2\",\n          variant: \"success\",\n        }}\n      />\n      {onClose && (\n        <Widget\n          src=\"sking.near/widget/Common.Button\"\n          props={{\n            children: \"Close\",\n            onClick: onClose,\n            className: \"mt-2\",\n          }}\n        />\n      )}\n    </div>\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/sking.near/widget/DAO.Proposal.Create.Transfer", "fact_widget_deployments_id": "cbefe134ac2063a60e5d698caadd6196", "inserted_timestamp": "2000-01-01T00:00:00.000Z", "modified_timestamp": "2000-01-01T00:00:00.000Z", "__row_index": 0}