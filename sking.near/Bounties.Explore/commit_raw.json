{"tx_hash": "8gWc4qFk8yUpDVJgcFLYUJqBv9Bt1h5B45ck3rS3pYTa", "action_id_social": "FWxUFmb4wkZNknugPWbokazC5vXXD1tSmMtheKbKhPSj-0-widget", "block_id": 91530814, "block_timestamp": "2023-05-10T12:38:06.077Z", "signer_id": "sking.near", "widget_name": "Bounties.Explore", "source_code": "// Config\nconst WIDGET_AUTHOR = \"sking.near\";\nconst WHITELISTED_ACCOUNTS = [\"sking.near\", \"samora.near\"];\nconst UIKingWidgetAuthor = \"sking.near\";\nconst currentUserId = \"sking.near\";\nconst MAIN_DB_KEY = `${WIDGET_AUTHOR}-bounties-vALPHA`;\n\n// State\n\nState.init({\n  filters: {\n    status: \"open\",\n    experienceLevel: [\"beginner\", \"intermediate\", \"advanced\"],\n    skills: [],\n  },\n});\n\n// SocialDB calls\n\nconst bountiesIndex = Social.index(MAIN_DB_KEY, \"bounty\", {\n  order: \"desc\",\n  limit: 100, // TODO: IDK what is the limit before it breaks, need to implement pagination\n});\n\nconst result =\n  bountiesIndex &&\n  bountiesIndex.reduce((res, { accountId, blockHeight, value }) => {\n    // if (!WHITELISTED_ACCOUNTS.includes(accountId)) {\n    //   return res;\n    // }\n    // format data\n    const bounty = Social.getr(\n      `${accountId}/${MAIN_DB_KEY}.Bounties/${value}`,\n      blockHeight\n    );\n    const skills = JSON.parse(bounty.skills);\n    const data = {\n      ...bounty,\n      skills: skills,\n      blockHeight,\n      author: accountId,\n      createdAt: value,\n    };\n    // filter by status\n    if (\n      state.filters.status !== \"all\" &&\n      data.status !== state.filters.status\n    ) {\n      return res;\n    }\n    // filter by experience level\n    if (\n      !state.filters.experienceLevel.includes(data.experienceLevel) &&\n      state.filters.experienceLevel.length !== 3\n    ) {\n      return res;\n    }\n    // filter by skills\n    if (\n      state.filters.skills.length > 0 &&\n      !state.filters.skills.every((skill) => skills.includes(skill))\n    ) {\n      return res;\n    }\n    res.push(data);\n    return res;\n  }, []);\n\n// console.log(\"OUT\", result);\n\n// Styles\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: stretch;\n  justify-content: center;\n  flex-direction: column;\n  max-width: 100%;\n  border-bottom-left-radius: 2rem;\n  border-bottom-right-radius: 2rem;\n  overflow: hidden;\n  background: #fff;\n  margin-bottom: 2rem;\n\n  @media (min-width: 768px) {\n    flex-direction: row;\n  }\n`;\n\nconst SidebarWrapper = styled.div`\n  flex: 1;\n  width: 100%;\n  min-height: 100%;\n\n  @media (min-width: 768px) {\n    max-width: 300px;\n  }\n`;\n\nconst BountiesWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 3;\n  width: 100%;\n  min-height: 100%;\n`;\n\n// Renderer\nreturn (\n  <>\n    <Widget src={`${WIDGET_AUTHOR}/widget/Bounties.Components.Background`} />\n    <Widget\n      src={`${WIDGET_AUTHOR}/widget/Bounties.Components.Header`}\n      props={{\n        widgetAuthor: WIDGET_AUTHOR,\n      }}\n    />\n    <Wrapper>\n      <SidebarWrapper>\n        <Widget\n          src={`${WIDGET_AUTHOR}/widget/Bounties.Components.Sidebar`}\n          props={{\n            widgetAuthor: WIDGET_AUTHOR,\n            onFilterChange: (key, value) => {\n              State.update({\n                ...state,\n                filters: {\n                  ...state.filters,\n                  [key]: value,\n                },\n              });\n            },\n            filters: state.filters,\n          }}\n        />\n      </SidebarWrapper>\n      <BountiesWrapper>\n        {result && result.length === 0 && (\n          <p style={{ textAlign: \"center\" }}>No bounties found</p>\n        )}\n        {result &&\n          result.map((bounty) => (\n            <Widget\n              src={`${WIDGET_AUTHOR}/widget/Bounties.Components.Card`}\n              props={{\n                widgetAuthor: WIDGET_AUTHOR,\n                title: bounty.title,\n                status: bounty.status,\n                creator: bounty.author,\n                createdAt: bounty.createdAt,\n                deadline: bounty.deadline,\n                description: bounty.description,\n                bounty: bounty.reward,\n                skills: bounty.skills,\n                experienceLevel: bounty.experienceLevel,\n                proposals: [\n                  {\n                    authorId: \"achraf.near\",\n                    createdAt: 1683227928,\n                    description: \"I will do it\",\n                    status: \"Waiting\",\n                  },\n                  {\n                    authorId: \"sking.near\",\n                    createdAt: 1683227928,\n                    description: \"I will do it\",\n                    status: \"Waiting\",\n                  },\n                ],\n              }}\n            />\n          ))}\n      </BountiesWrapper>\n    </Wrapper>\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/sking.near/widget/Bounties.Explore", "fact_widget_deployments_id": "ee6bb2bbce250008d9cf859346a2cef8", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 3}