{"tx_hash": "5grcCLfb4xJpcNKWBTUQJQsBRF2RT2XSj5FS18R8xuH4", "action_id_social": "5P49idHsiQnY5kBCQCSDdjDUFDBtv4xnTUp7DUtVxtta-0-widget", "block_id": 95656093, "block_timestamp": "2023-07-04T03:54:53.949Z", "signer_id": "sking.near", "widget_name": "EasyPoll.CreatePoll.Step2", "source_code": "const widgetOwner = \"sking.near\";\nconst onPrev = props.onPrev ?? (() => {});\nconst onSubmit = props.onSubmit ?? (() => {});\nconst initialFormState = props.initialFormState ?? {\n  questions: [\n    {\n      question: {\n        value: \"\",\n        error: null,\n      },\n      questionType: {\n        value: \"0\",\n        error: null,\n      },\n      choicesOptions: { value: [\"\", \"\"], error: null },\n      imageIPFS: {\n        value: \"\",\n        error: null,\n      },\n    },\n  ],\n};\n\nState.init({\n  form: initialFormState,\n});\n\nconst onAddQuestion = () => {\n  State.update({\n    form: {\n      ...state.form,\n      questions: [\n        ...state.form.questions,\n        {\n          question: {\n            value: \"\",\n            error: null,\n          },\n          questionType: {\n            value: \"0\",\n            error: null,\n          },\n          choicesOptions: { value: [\"\", \"\"], error: null },\n          imageIPFS: {\n            value: \"\",\n            error: null,\n          },\n        },\n      ],\n    },\n  });\n};\n\nconst onQuestionFieldChange = (id, field, key, value) => {\n  let new_questions = [...state.form.questions];\n  new_questions[id] = {\n    ...state.form.questions[id],\n    [field]: {\n      ...state.form.questions[id][field],\n      [key]: value,\n    },\n  };\n  State.update({\n    ...state,\n    form: {\n      ...state.form,\n      questions: new_questions,\n    },\n  });\n};\n\nconst onQuestionDelete = () => {\n  if (state.form.questions.length < 2) return;\n  let new_questions = [...state.form.questions];\n  new_questions.splice(i, 1);\n\n  State.update({\n    form: {\n      ...state.form,\n      questions: new_questions,\n    },\n  });\n};\n\nconst onQuestionMoveUp = (id) => {\n  if (id < 1) return;\n\n  let new_questions = [...state.form.questions];\n  let temp = new_questions[id];\n  new_questions[id] = new_questions[id - 1];\n  new_questions[id - 1] = temp;\n\n  State.update({\n    form: {\n      ...state.form,\n      questions: new_questions,\n    },\n  });\n};\n\nconst onQuestionMoveDown = (id) => {\n  if (id >= state.form.questions.length - 1) return;\n\n  let new_questions = [...state.form.questions];\n  let temp = new_questions[id];\n  new_questions[id] = new_questions[id + 1];\n  new_questions[id + 1] = temp;\n\n  State.update({\n    form: {\n      ...state.form,\n      questions: new_questions,\n    },\n  });\n};\n\nconst AddContainer = styled.div`\n  background: #4f46e5;\n  color: #fff;\n  padding: 16px;\n  border-radius: 12px;\n  box-shadow: rgba(0, 0, 0, 0.05) 0px 6px 24px 0px,\n    rgba(0, 0, 0, 0.08) 0px 0px 0px 1px;\n  text-align: center;\n  cursor: pointer;\n`;\n\nreturn (\n  <div\n    style={{\n      display: \"flex\",\n      flexDirection: \"column\",\n      gap: 28,\n    }}\n  >\n    {state.form.questions.map((v, i) => {\n      return (\n        <Widget\n          key={i}\n          src={`${widgetOwner}/widget/EasyPoll.CreatePoll.Step2Question`}\n          props={{\n            hasNext: false,\n            hasPrev: true,\n            hasSubmit: true,\n            onPrev: () => onPrev(state.form),\n            onSubmit: onSubmit,\n            onQuestionFieldChange,\n            id: i,\n            question: state.form.questions[i],\n            onDelete: onQuestionDelete,\n            onMoveUp: () => onQuestionMoveUp(i),\n            onMoveDown: () => onQuestionMoveDown(i),\n          }}\n        />\n      );\n    })}\n    <AddContainer role=\"button\" onClick={onAddQuestion}>\n      <i className=\"bi bi-plus-lg me-2\"></i>\n      Add Question\n    </AddContainer>\n    <Widget\n      src={`${widgetOwner}/widget/EasyPoll.Inputs.Footer`}\n      props={{\n        hasNext: false,\n        hasPrev: true,\n        hasSubmit: true,\n        onPrev: () => onPrev(state.form),\n        onSubmit: () => onSubmit(state.form),\n      }}\n    />\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/sking.near/widget/EasyPoll.CreatePoll.Step2", "fact_widget_deployments_id": "8bcf3e0000afadc0a08eeefa575fd7b0", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 1}