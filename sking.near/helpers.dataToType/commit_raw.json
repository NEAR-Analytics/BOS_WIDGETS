{"tx_hash": "BMNDTVTSxkSpLgZ2ZiFaFxHNenLQ2xSKzaX3MaF6vnCF", "action_id_social": "JBtAyYQNbx4DGpbPVri6jgYtDo5cYMbtNnffzv7pUhLr-0-widget", "block_id": 98074172, "block_timestamp": "2023-08-04T18:09:06.994Z", "signer_id": "sking.near", "widget_name": "helpers.dataToType", "source_code": "function jsonToType(obj) {\n  function getType(value, key) {\n    if (typeof value === \"string\") {\n      return { type: \"string\" };\n    }\n\n    if (typeof value === \"number\") {\n      return { type: \"number\" };\n    }\n\n    if (typeof value === \"boolean\") {\n      return { type: \"boolean\" };\n    }\n\n    if (Array.isArray(value)) {\n      return {\n        type: \"array\",\n        required: true,\n        array: {\n          validation: { min: 1 },\n          type: value.length ? getType(value[0]).type : \"object\", // Unwrap the type here\n        },\n      };\n    }\n\n    if (typeof value === \"object\") {\n      const properties = Object.keys(value).map((innerKey) => ({\n        name: innerKey,\n        ...getType(value[innerKey], innerKey),\n      }));\n      return { type: { properties } }; // Keep the type wrapping here\n    }\n\n    return { type: \"object\" };\n  }\n\n  const properties = Object.keys(obj).map((key) => ({\n    name: key,\n    required: obj[key] !== null,\n    ...getType(obj[key], key),\n  }));\n\n  return { properties };\n}\nconst inputJSON = {\n  src: {\n    contractId: \"caoeunoeanstu\",\n    tokenId: \"213\",\n  },\n  alt: \"This is a description of the image\",\n  fallbackSrc: \"https://www.example.com/image.png\",\n};\nreturn jsonToType(props.input ?? inputJSON);\n", "metadata": null, "branch": {"draft": null}, "widget_modules_used": null, "widget_url": "https://near.social/#/sking.near/widget/helpers.dataToType", "fact_widget_deployments_id": "e5a12ea3ed917bbce4842a1ff0428fe2", "inserted_timestamp": "2023-08-04T19:49:52.146Z", "modified_timestamp": "2023-08-04T19:49:52.146Z", "__row_index": 0}