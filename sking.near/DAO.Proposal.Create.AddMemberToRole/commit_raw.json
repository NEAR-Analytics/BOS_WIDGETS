{"tx_hash": "6LSB3CL4nHm3F9sKdUAGdCXqqpyKUcChVRJ7ghWpcB6G", "action_id_social": "9esUvQsmxSippJy5MxXrrp6ntE4t2w82KQ6BxLBhK8Ro-0-widget", "block_id": 97383780, "block_timestamp": "2023-07-26T14:57:25.180Z", "signer_id": "sking.near", "widget_name": "DAO.Proposal.Create.AddMemberToRole", "source_code": "const accountId = props.accountId ?? context.accountId;\nconst daoId = props.daoId ?? \"multi.sputnik-dao.near\";\nconst onClose = props.onClose;\nconst policy = props.policy;\n\nif (!accountId) {\n  return \"Please connect your NEAR wallet :)\";\n}\n\nif (policy === null) return \"\";\n\nlet allRolesArray;\nif (policy.roles) {\n  allRolesArray = policy?.roles\n    ?.filter((r) => r.kind !== \"Everyone\")\n    ?.map((r) => r.name);\n}\nconsole.log(allRolesArray);\n\nconst roles = State.init({\n  member_id: state.member_id,\n  role: state.role,\n  error: undefined,\n});\n\nfunction isNearAddress(address) {\n  const ACCOUNT_ID_REGEX =\n    /^(([a-z\\d]+[-_])*[a-z\\d]+\\.)*([a-z\\d]+[-_])*[a-z\\d]+$/;\n  return (\n    address.length >= 2 &&\n    address.length <= 64 &&\n    ACCOUNT_ID_REGEX.test(address)\n  );\n}\n\nconst handleProposal = () => {\n  if (\n    !state.member_id ||\n    state.member_id === \"\" ||\n    !isNearAddress(state.member_id)\n  ) {\n    State.update({\n      error: \"Please enter a valid member ID\",\n    });\n    return;\n  }\n  if (!state.role || state.role === \"\") {\n    State.update({\n      error: \"Please enter a valid role\",\n    });\n    return;\n  }\n  if (allRolesArray && !allRolesArray.includes(state.role)) {\n    State.update({\n      error: \"Please enter a valid role: \" + allRolesArray.join(\", \"),\n    });\n    return;\n  }\n\n  const gas = 200000000000000;\n  const deposit = 0;\n\n  let totalDeposit = Big(deposit);\n\n  if (policy.proposal_bond) {\n    totalDeposit = totalDeposit.plus(policy.proposal_bond);\n  } else {\n    totalDeposit = Big(100000000000000000000000);\n  }\n\n  Near.call([\n    {\n      contractName: daoId,\n      methodName: \"add_proposal\",\n      args: {\n        proposal: {\n          description: \"Potential member\",\n          kind: {\n            AddMemberToRole: {\n              member_id: state.member_id ?? accountId,\n              role: state.role ?? \"council\",\n            },\n          },\n        },\n      },\n      gas: gas,\n      deposit: totalDeposit,\n    },\n  ]);\n};\n\nconst onChangeMember = (member_id) => {\n  State.update({\n    member_id,\n    error: undefined,\n  });\n};\n\nconst onChangeRole = (role) => {\n  State.update({\n    role,\n    error: undefined,\n  });\n};\n\nreturn (\n  <>\n    <div className=\"mb-2\">\n      <h5>Account ID</h5>\n      <input type=\"text\" onChange={(e) => onChangeMember(e.target.value)} />\n    </div>\n\n    <div className=\"mb-2\">\n      <h5>Role</h5>\n      {allRolesArray ? (\n        <Typeahead\n          options={allRolesArray}\n          multiple={false}\n          onChange={(v) => onChangeRole(v[0])}\n          placeholder=\"Choose a role...\"\n        />\n      ) : (\n        <input type=\"text\" onChange={(e) => onChangeRole(e.target.value)} />\n      )}\n    </div>\n\n    {state.error && <div className=\"text-danger\">{state.error}</div>}\n    <div className=\"ms-auto\">\n      <Widget\n        src=\"sking.near/widget/Common.Button\"\n        props={{\n          children: \"Propose To Add Member\",\n          onClick: handleProposal,\n          className: \"mt-2\",\n          variant: \"success\",\n        }}\n      />\n      {onClose && (\n        <Widget\n          src=\"sking.near/widget/Common.Button\"\n          props={{\n            children: \"Close\",\n            onClick: onClose,\n            className: \"mt-2\",\n          }}\n        />\n      )}\n    </div>\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/sking.near/widget/DAO.Proposal.Create.AddMemberToRole", "fact_widget_deployments_id": "4f4314bfd80d397ad5e2b22feb1fb472", "inserted_timestamp": "2000-01-01T00:00:00.000Z", "modified_timestamp": "2000-01-01T00:00:00.000Z", "__row_index": 0}