{"tx_hash": "HQfBK4fZjY4y5Pe5en5wuYrQAuakip4DMwHRXa3yV91U", "action_id_social": "GMfGGCFHojer3KsecrJxmh5er96rjVBwsaUuLgVUrAUh-0-widget", "block_id": 91739627, "block_timestamp": "2023-05-13T06:22:02.664Z", "signer_id": "sking.near", "widget_name": "DAO.Proposals", "source_code": "const WIDGET_AUTHOR = \"sking.near\";\nconst daoId = props.daoId ?? \"multi.sputnik-dao.near\";\nconst proposalsPerPage = props.proposalsPerPage ?? 10; // Number of proposals to fetch at a time\n\nState.init({\n  daoId,\n  proposals: [],\n  lastProposalId: null, // To keep track of the last loaded proposal\n  hasMore: true, // Boolean to know if there are more proposals to load\n  showCreateProposal: false,\n});\n\nconst loadProposals = () => {\n  const lastProposalId =\n    state.lastProposalId !== null\n      ? state.lastProposalId\n      : Near.view(daoId, \"get_last_proposal_id\");\n  if (lastProposalId === null) return;\n\n  // Prevents multiple calls to loadProposals() before the first call is finished\n  if (state.proposals.length > 0 && state.proposals[0].id === lastProposalId)\n    return;\n\n  const fromIndex = Math.max(0, lastProposalId - proposalsPerPage + 1); // Ensures fromIndex is never less than 0\n  const limit = fromIndex === 0 ? lastProposalId + 1 : proposalsPerPage; // Ensure we don't fetch the same proposals twice if fromIndex is 0\n\n  const newProposals = Near.view(daoId, \"get_proposals\", {\n    from_index: fromIndex,\n    limit: limit,\n  });\n  if (newProposals === null) return;\n\n  console.log(\"Saving new proposals...\");\n  State.update({\n    ...state,\n    hasMore: fromIndex > 0,\n    proposals: [...state.proposals, ...newProposals.reverse()],\n    lastProposalId: fromIndex - 1,\n    isLoading: false,\n  });\n};\n\nconst onChangeDAO = (newDaoId) => {\n  console.log(\"Changing DAO...\");\n  State.update({\n    daoId: newDaoId,\n    proposals: [],\n    lastProposalId: null,\n    hasMore: true,\n    showCreateProposal: false,\n  });\n};\n\nconst PopupWrapper = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 1000;\n  width: 100vw;\n  height: 100vh;\n  background: rgba(0, 0, 0, 0.7);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  backdrop-filter: blur(6px);\n  padding: 16px;\n\n  @media (max-width: 600px) {\n    padding: 0;\n    & > * {\n      width: 100%;\n      height: 100%;\n      border-radius: 0;\n    }\n  }\n`;\n\nreturn (\n  <>\n    <div>\n      <div className=\"d-flex justify-content-between flex-wrap\">\n        <h3>DAO Proposals</h3>\n        <Widget\n          src=\"sking.near/widget/Common.Button\"\n          props={{\n            children: (\n              <>\n                <i className=\"bi bi-16 bi-plus-lg\"></i>\n                Create Proposal\n              </>\n            ),\n            onClick: () => State.update({ ...state, showCreateProposal: true }),\n            className: \"mt-2\",\n            variant: \"success\",\n          }}\n        />\n      </div>\n\n      <div className=\"mb-2\">\n        <p className=\"m-1\">Sputnik Contract ID:</p>\n        <input\n          type=\"text\"\n          placeholder=\"example.sputnik-dao.near\"\n          onChange={(e) => onChangeDAO(e.target.value)}\n        />\n      </div>\n      <hr />\n\n      <InfiniteScroll loadMore={loadProposals} hasMore={state.hasMore}>\n        {state.proposals.map((proposal, i) => (\n          <Widget\n            key={i}\n            src={WIDGET_AUTHOR + \"/widget/DAO.Proposal\"}\n            props={{ daoId: state.daoId, proposal: proposal }}\n          />\n        ))}\n      </InfiniteScroll>\n    </div>\n\n    {state.showCreateProposal && (\n      <PopupWrapper\n        id=\"create-proposal-popup\"\n        onClick={(e) => {\n          if (e.target.id === \"create-proposal-popup\") {\n            State.update({ ...state, showCreateProposal: false });\n          }\n        }}\n      >\n        <Widget\n          src={WIDGET_AUTHOR + \"/widget/DAO.Proposal.Create\"}\n          props={{\n            daoId: state.daoId,\n            onClose: () =>\n              State.update({ ...state, showCreateProposal: false }),\n          }}\n        />\n      </PopupWrapper>\n    )}\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/sking.near/widget/DAO.Proposals", "fact_widget_deployments_id": "77c383fe22a0791dd5d8887c9b0326b7", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 4}