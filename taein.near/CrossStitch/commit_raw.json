{"tx_hash": "Bu4kbtxDKKrtu3PwFGPax8NTssK6Y4yyoPiShvnk7SP", "action_id_social": "HPtBh62ivkhnMr7Lwe3ectghvB5zpDD7YDBcv5UwBAAT-0-widget", "block_id": 104369399, "block_timestamp": "2023-10-28T06:29:32.886Z", "signer_id": "taein.near", "widget_name": "CrossStitch", "source_code": "const UnFilledButton = styled.button`\n  background: #fff;\n  border: 1px solid #999;\n  float: left;\n  font-size: 24px;\n  font-weight: bold;\n  line-height: 15px;\n  height: 15px;\n  margin-right: -1px;\n  margin-top: -1px;\n  padding: 0;\n  text-align: center;\n  width: 15px;\n`;\n\nconst FilledButton = styled.button`\n  background: #fff;\n  border: 1px solid #999;\n  float: left;\n  font-size: 24px;\n  font-weight: bold;\n  line-height: 15px;\n  height: 15px;\n  margin-right: -1px;\n  margin-top: -1px;\n  padding: 0;\n  text-align: center;\n  width: 15px;\n`;\n\nconst SmallFilled = styled.div`\n  background: #fff;\n  border: 1px solid #999;\n  float: left;\n  font-size: 24px;\n  font-weight: bold;\n  line-height: 5px;\n  height: 5px;\n  margin-right: -1px;\n  margin-top: -1px;\n  padding: 0;\n  text-align: center;\n  width: 5px;\n`;\n\nconst emptyBoard = Array(20).fill(Array(20).fill(\"x\"));\n\nState.init({\n  squares: emptyBoard,\n  selectedColor: \"#FF0000\",\n});\n\nfunction handleSquareClick(x, y) {\n  let sqr = state.squares.map((line) => line.slice());\n  if (sqr[y][x] !== \"x\") {\n    sqr[y][x] = \"x\";\n  } else {\n    sqr[y][x] = state.selectedColor;\n  }\n\n  State.update({\n    squares: sqr,\n    selectedColor: state.selectedColor,\n  });\n}\n\nconst borderRow = {\n  clear: \"both\",\n  content: \"\",\n  display: \"table\",\n};\n\nfunction handleOnClearClick() {\n  State.update({\n    squares: emptyBoard,\n    selectedColor: state.selectedColor,\n  });\n}\n\nfunction handleOnSaveClick() {\n  const time = Date.now();\n  Social.set({\n    cross_stitch_yj3: {\n      [time]: JSON.stringify(state.squares),\n    },\n  });\n}\n\nfunction changeColor(color) {\n  State.update({\n    squares: state.squares,\n    selectedColor: color,\n  });\n}\n\nfunction ColorPicker() {\n  const colors = [\n    \"#000\",\n    \"#FF0000\",\n    \"#00FF00\",\n    \"#0000FF\",\n    \"#FFFF00\",\n    \"#FF00FF\",\n    \"#00FFFF\",\n  ];\n\n  return (\n    <div style={{ display: \"flex\", marginBottom: \"10px\" }}>\n      {colors.map((color) => (\n        <div\n          key={color}\n          onClick={() => changeColor(color)}\n          style={{\n            width: \"20px\",\n            height: \"20px\",\n            backgroundColor: color,\n            border: color === state.selectedColor ? \"3px solid black\" : \"none\",\n            margin: \"2px\",\n          }}\n        />\n      ))}\n    </div>\n  );\n}\n\nfunction getOtherUserDrawing() {\n  const result = Social.keys(\"*/cross_stitch_yj3/*\", \"final\");\n  const accounts = Object.keys(result);\n  const drawings = [];\n  for (let account of accounts) {\n    const keys = Object.keys(result[account][\"cross_stitch_yj3\"]);\n    for (let key of keys) {\n      const data = Social.get(`${account}/cross_stitch_yj3/${key}`);\n      drawings.push(JSON.parse(data));\n    }\n  }\n  return drawings;\n}\n\nfunction showDrawings() {\n  const drawings = getOtherUserDrawing();\n  const result = [];\n  for (const drawing of drawings) {\n    result.push(smallDrawing(drawing));\n  }\n  return result;\n}\n\nfunction smallDrawing(drawing) {\n  return (\n    <div style={{ margin: 10 }}>\n      {drawing.map((line) => (\n        <div style={borderRow}>\n          {line.map((sqr) => (\n            <SmallFilled style={{ backgroundColor: sqr }} />\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nreturn (\n  <>\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n      }}\n    >\n      <div\n        style={{\n          width: \"100%\",\n          height: 1,\n          backgroundColor: \"black\",\n        }}\n      ></div>\n      <div style={{ flex: 0, fontSize: 35, fontWeight: \"600\", marginTop: 20 }}>\n        Cross Stitch\n      </div>\n      <ColorPicker />\n      <div style={{ flex: 0, marginTop: 10 }}>\n        {state.squares.map((line, y) => (\n          <div style={borderRow}>\n            {line.map((sqr, x) => (\n              <>\n                {state.squares[y][x] !== \"x\" ? (\n                  <FilledButton\n                    onClick={() => handleSquareClick(x, y)}\n                    style={{ backgroundColor: state.squares[y][x] }}\n                  ></FilledButton>\n                ) : (\n                  <UnFilledButton\n                    onClick={() => handleSquareClick(x, y)}\n                  ></UnFilledButton>\n                )}\n              </>\n            ))}\n          </div>\n        ))}\n      </div>\n      <div style={{ flex: 0, display: \"flex\" }}>\n        <div\n          style={{ margin: 10, color: \"#008CBA\", cursor: \"pointer\" }}\n          onClick={handleOnClearClick}\n        >\n          Clear\n        </div>\n        <div\n          style={{ margin: 10, color: \"#008CBA\", cursor: \"pointer\" }}\n          onClick={handleOnSaveClick}\n        >\n          Save\n        </div>\n      </div>\n      <div\n        style={{\n          width: \"100%\",\n          height: 1,\n          backgroundColor: \"black\",\n          marginBottom: 20,\n        }}\n      ></div>\n      <div\n        style={{ flex: 0, fontSize: 20, fontWeight: \"600\", marginBottom: 10 }}\n      >\n        Gallery\n      </div>\n      <div style={{ display: \"flex\" }}>\n        <div style={{ display: \"flex\", marginBottom: 40 }}>\n          {showDrawings()}\n        </div>\n      </div>\n    </div>\n  </>\n);\n", "metadata": {"description": "Make your own Cross Stitch and share with people!", "image": {"ipfs_cid": "bafkreie6mnlpg6dxntiflxnnyzs7k3jhfqp2emddpgyy5r3rtg5msbb2vu"}, "name": "Cross Stitch", "tags": {"hack": "", "hackoween": ""}}, "branch": {"draft": null}, "widget_modules_used": null, "widget_url": "https://near.social/#/taein.near/widget/CrossStitch", "fact_widget_deployments_id": "76a53afd0ae28411a6d7115d8ca53b18", "inserted_timestamp": "2023-10-28T08:29:48.294Z", "modified_timestamp": "2023-10-28T08:29:48.294Z", "__row_index": 0}