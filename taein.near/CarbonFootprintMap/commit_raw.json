{"tx_hash": "7ya4Z6tKN963MERVFow5CHwd7XxsV6E1r6XpE4JP5pdd", "action_id_social": "BCDKxJPFan8SmWwLbJQ9CFtR3wqiKq5pKYN17RTmHtE5-0-widget", "block_id": 104373425, "block_timestamp": "2023-10-28T07:50:00.690Z", "signer_id": "taein.near", "widget_name": "CarbonFootprintMap", "source_code": "const data = VM.require(\"ajluc.near/widget/data\");\nconst markers = Social.get(`*/thing/carbonFootprint`, \"final\", {\n  subscribe: \"true\",\n});\n\nconst BG = styled.div`\n  background-color: #fff;\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  z-index: -2;\n`;\n\nconst Card = styled.div`\n  display: flex;\n  flex-direction: column;\n  background: rgba(255, 255, 255, 0.375);\n  box-shadow: 0 0.75rem 2rem 0 rgba(0, 0, 0, 0.1);\n  border-radius: 2rem;\n  border: 1px solid rgba(255, 255, 255, 0.125);\n  position: relative;\n  z-index: 1;\n  margin: 20px auto;\n  width: 100%;\n  height: 75vh;\n`;\n\nconst Switch = styled.div`\n  color: #999;\n  font-size: 15px;\n  font-weight: 800;\n  font-family: 'Mona Sans', sans-serif;\n  display: block;\n  text-align: center;\n  background: white;\n  padding: 1px 6px;\n  border-radius: 15px;\n  margin-top: 15px;\n  position: absolute;\n  left: 50%;\n  -ms-transform: translateX(-50%);\n  transform: translateX(-50%);\n  z-index: 3;\n`;\n\nconst Selected = styled.span`\n  background: linear-gradient(\n    120deg,\n    #ffd50d 0%,\n    #f29bc0 25%,\n    #4f46e5 50%,\n    #f29bc0 75%,\n    #ffd50d 100%\n  );\n  color: #000;\n  background-clip: text;\n  text-fill-color: transparent;\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  animation: shine 50s ease infinite;\n  @keyframes shine {\n    0% {\n      background-position: -1000px;\n    }\n    100% {\n      background-position: 1000px;\n    }\n  }\n`;\n\nconst MAP_STYLE = \"mapbox://styles/mapbox/streets-v12\";\nconst MAP_TOKEN =\n  \"pk.eyJ1IjoidGVqMDEiLCJhIjoiY2xqcHZ2dGpkMDB5azNsbzQ0bmMwNjRjaCJ9.FVv2zRPaLwzZMgagbI2YZw\";\n\nconst center = [-74.00596, 40.71421];\nconst zoom = 10;\nconst accountId = context.accountId;\n\nconst Container = styled.div`\n  display: flex;\n  width: 100%;\n  border-radius: 2rem;\n  margin-top: var(--header-height);\n  height: calc(100vh - 70px);\n  align-items: stretch;\n  flex-direction: column;\n  overflow: auto;\n  position: relative;\n  z-index: 2;\n`;\n\nconst Button = styled.button`\n  background: rgba(25, 26, 26, 0.75);\n  border-radius: 6px;\n  color: white;\n  z-index: 1;\n  padding: 6px 12px;\n`;\n\nconst FormCard = styled.div`\n  background: rgba(25, 26, 26, 0.9);\n  color: #fff;\n  border-radius: 1rem;\n  padding: 12px;\n  width: 360px;\n  max-height: 1000px;\n  position: absolute;\n  left: 200px;\n  top: 200px;\n`;\n\nconst InspectCard = styled.div`\n  background: rgba(25, 26, 26, 0.9);\n  color: #fff;\n  border-radius: 1rem;\n  padding: 12px;\n  width: 360px;\n  max-height: 3600px;\n  position: absolute;\n  left: 0;\n  top: 0;\n`;\n\nconst Location = styled.div`\n  position: absolute;\n  bottom: 50px;\n  @media (max-width: 510px) {\n    padding: 6px 15px;\n    bottom: 15px;\n  }\n`;\n\nconst MagicDot = styled.div`\n  position: fixed;\n  right: 20px;\n  bottom: 20px;\n  z-index: 1000;\n  width: 80px;\n  height: 80px;\n  border-radius: 50%;\n  cursor: pointer;\n  background: radial-gradient(circle at 30% 30%, rgb(74, 73, 73), rgb(0, 0, 0));\n  box-shadow: rgba(0, 0, 0, 0.1) 0px 4px 6px, rgba(0, 0, 0, 0.06) 0px 2px 4px,\n    rgba(0, 0, 0, 0.1) 0px 10px 15px;\n  \n  img {\n    opacity: 0;\n    width: 100%;\n    height: 100%;\n    border-radius: 50%;\n    object-fit: cover;\n    transition: 0.3s;\n  }\n  &:hover img {\n    opacity: 1;\n  }\n`;\n\nconst onMarkerClick = (marker) => {};\n\nconst dataMap = {\n  onMarket: [],\n  offMarket: [],\n};\n\ndata.forEach((building) => {\n  if (building.onMarket) {\n    const markerObj = {\n      ...building,\n      id: building.address,\n      lat: building.latitude,\n      lng: building.longitude,\n    };\n    dataMap.onMarket = [...dataMap.onMarket, markerObj];\n  } else if (!building.onMarket) {\n    const markerObj = {\n      ...building,\n      id: building.address,\n      lat: building.latitude,\n      lng: building.longitude,\n    };\n    dataMap.offMarket = [...dataMap.offMarket, markerObj];\n  }\n});\n\nObject.keys(markers).forEach((accountId) => {\n  if (markers[accountId].thing && markers[accountId].thing.carbonFootprint) {\n    const markerObj = JSON.parse(markers[accountId].thing.carbonFootprint);\n    if (markerObj.onMarket) {\n      dataMap.onMarket = [...dataMap.onMarket, markerObj];\n    }\n\n    dataMap.offMarket = [...dataMap.offMarket, markerObj];\n  }\n});\n\nState.init({\n  edit: false,\n  currentLocation: {},\n  data: {},\n  newMarkers: [], // Added state variable to keep track of new markers\n  carbonFootprints: {},\n  formData: {\n    electricityUsage: 0,\n    gasUsage: 0,\n    waterUsage: 0,\n    wasteProduction: 0,\n    travel: 0,\n    foodConsumption: 0,\n    useRenewableEnergy: false,\n    recycle: false,\n  },\n  carbonFootprint: null,\n});\n\nconst onMagicDotClick = () => {\n  const selected =\n    dataMap.onMarket[Math.floor(Math.random() * dataMap.onMarket.length)];\n  State.update({ focusedMarker: selected, showInspect: true });\n};\n\nconst handleSave = (formData) => {\n  Social.set(\n    {\n      thing: {\n        carbonFootprint: {\n          \"\": JSON.stringify({\n            id: formData.address || \"\",\n            lng: state.currentLocation.lng,\n            lat: state.currentLocation.lat,\n            electricityUsage: formData.electricityUsage,\n            gasUsage: formData.gasUsage,\n            waterUsage: formData.waterUsage,\n            wasteProduction: formData.wasteProduction,\n            travel: formData.travel,\n            foodConsumption: formData.foodConsumption,\n            carbonFootprint: 14303,\n          }),\n        },\n      },\n    },\n    {\n      onCommit: () => {\n        State.update({ edit: false, showForm: false, showInspect: false });\n      },\n      onCancel: () =>\n        State.update({ edit: false, showForm: false, showInspect: false }),\n    }\n  );\n};\n\nconst onMapClick = (e) => {\n  if (state.edit) {\n    const newMarker = {\n      id: new Date().getTime().toString(),\n      lat: e.coordinates.lat,\n      lng: e.coordinates.lng,\n    };\n    State.update((prevState) => ({\n      ...prevState,\n      newMarkers: [...prevState.newMarkers, newMarker],\n      showInspect: false,\n    }));\n  } else {\n    State.update({\n      currentLocation: e.coordinates,\n      showInspect: false,\n    });\n  }\n};\n\nconst calculateCarbonFootprint = (e) => {\n  e.preventDefault(); // Prevent the default behavior\n  State.update({\n    edit: !state.edit,\n    showForm: true,\n    showInspect: false,\n  });\n};\n\nfunction Form() {\n  // Initialize the form state\n  State.init({\n    formData: {\n      electricityUsage: 0,\n      gasUsage: 0,\n      waterUsage: 0,\n      wasteProduction: 0,\n      travel: 0,\n      foodConsumption: 0,\n    },\n  });\n\n  const handleChange = (e) => {\n    const { id, value } = e.target;\n    // Update the form data in the state\n    State.update({\n      formData: {\n        ...state.formData,\n        [id]: value,\n      },\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    handleSave(state.formData);\n  };\n\n  // Calculate the sum of all the form values\n  const sum = Object.values(state.formData).reduce(\n    (acc, val) => acc + parseFloat(val || 0),\n    0\n  );\n\n  return (\n    <FormCard>\n      <div onSubmit={handleSubmit}>\n        <div>\n          <label>Electricity Usage (kWh):</label>\n          <input\n            type=\"number\"\n            id=\"electricityUsage\"\n            value={state.formData.electricityUsage}\n            onChange={handleChange}\n          />\n        </div>\n        <div>\n          <label>Gas Usage (therms):</label>\n          <input\n            type=\"number\"\n            id=\"gasUsage\"\n            value={state.formData.gasUsage}\n            onChange={handleChange}\n          />\n        </div>\n        <div>\n          <label>Water Usage (gallons):</label>\n          <input\n            type=\"number\"\n            id=\"waterUsage\"\n            value={state.formData.waterUsage}\n            onChange={handleChange}\n          />\n        </div>\n        <div>\n          <label>Waste Production (lbs):</label>\n          <input\n            type=\"number\"\n            id=\"wasteProduction\"\n            value={state.formData.wasteProduction}\n            onChange={handleChange}\n          />\n        </div>\n        <div>\n          <label>Travel (miles):</label>\n          <input\n            type=\"number\"\n            id=\"travel\"\n            value={state.formData.travel}\n            onChange={handleChange}\n          />\n        </div>\n        <div>\n          <label>Food Consumption (lbs):</label>\n          <input\n            type=\"number\"\n            id=\"foodConsumption\"\n            value={state.formData.foodConsumption}\n            onChange={handleChange}\n          />\n        </div>\n        <br />\n        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n          <input\n            style={{ width: \"45%\" }}\n            type=\"submit\"\n            value=\"Submit\"\n            onClick={() => handleSave(State.data)}\n          />\n          <input\n            style={{ width: \"45%\" }}\n            type=\"button\"\n            value=\"Cancel\"\n            onClick={() =>\n              State.update({ edit: false, showForm: false, data: {} })\n            }\n          />\n        </div>\n      </div>\n    </FormCard>\n  );\n}\n\nfunction Inspect() {\n  const carbonFootprint = Math.floor(Math.random() * 20000) + 1;\n  return (\n    <InspectCard>\n      Your Neighbor's Carbon Footprint: {carbonFootprint}\n    </InspectCard>\n  );\n}\n\nfunction LocationIcon() {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n    >\n      <g\n        fill=\"none\"\n        stroke=\"currentColor\"\n        strokeLinejoin=\"round\"\n        strokeWidth=\"2\"\n      >\n        <path d=\"M13 9a1 1 0 1 1-2 0a1 1 0 0 1 2 0Z\" />\n        <path d=\"M17.5 9.5c0 3.038-2 6.5-5.5 10.5c-3.5-4-5.5-7.462-5.5-10.5a5.5 5.5 0 1 1 11 0Z\" />\n      </g>\n    </svg>\n  );\n}\n\nreturn (\n  <div className=\"position-relative h-100 w-100 p-1\">\n    <BG />\n    <Card>\n      <Container>\n        {accountId && state.showForm && <Form />}\n\n        {accountId && (\n          <div\n            style={{\n              display: state.edit ? \"none\" : \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n          >\n            <Location>\n              <Button onClick={calculateCarbonFootprint}>\n                Share My Carbon Footprint\n              </Button>\n            </Location>\n          </div>\n        )}\n\n        {state.showInspect && (\n          <Widget\n            src={\"efiz.near/widget/Map.Inspect\"}\n            props={{\n              focusedMarker: state.focusedMarker,\n              children: (p) => <Inspect {...p} />,\n              markers: [\n                ...dataMap.onMarket,\n                ...dataMap.offMarket,\n                ...state.newMarkers, // Include new markers in the markers prop\n              ],\n            }}\n          />\n        )}\n        <Widget\n          src={\"efiz.near/widget/Map.Mapbox\"}\n          props={{\n            API_URL,\n            accessToken: MAP_TOKEN,\n            styleUrl: MAP_STYLE,\n            center,\n            zoom,\n            markerAsset:\n              \"https://www.clker.com//cliparts/G/e/o/0/f/m/map-pin-red-hi.png\",\n            markers: [\n              ...dataMap.onMarket,\n              ...dataMap.offMarket,\n              ...state.newMarkers, // Include new markers in the markers prop\n            ],\n            onMapClick: (e) => {\n              if (state.edit) {\n                const newMarker = {\n                  id: new Date().getTime().toString(),\n                  lat: e.coordinates.lat,\n                  lng: e.coordinates.lng,\n                  // Add any other properties you need for the marker\n                };\n                State.update({\n                  newMarkers: [...state.newMarkers, newMarker],\n                  showInspect: false,\n                });\n              } else {\n                State.update({\n                  currentLocation: e.coordinates,\n                  showInspect: false,\n                });\n              }\n            },\n            onMarkerClick: (e) => {\n              State.update({ focusedMarker: e, showInspect: true });\n            },\n          }}\n        />\n      </Container>\n    </Card>\n\n    <MagicDot onClick={onMagicDotClick}>\n      <img src=\"https://img.freepik.com/free-vector/hand-drawn-flat-halloween-background_23-2149077569.jpg?size=626&ext=jpg\" />\n    </MagicDot>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/taein.near/widget/CarbonFootprintMap", "fact_widget_deployments_id": "8c236ca59b0cb83ee06e827486140efc", "inserted_timestamp": "2023-10-28T09:44:57.695Z", "modified_timestamp": "2023-10-28T09:44:57.695Z", "__row_index": 0}