{"tx_hash": "2qrc3iU2avMwckcj2JQBdFGxre4sV9fAUxFGmiMMfKqD", "action_id_social": "8bCuvs56xXJzHARGt9qHfaLymeAsg4f922MaqMWwQgNu-0-widget", "block_id": 105842835, "block_timestamp": "2023-11-16T17:14:53.608Z", "signer_id": "geforcy.near", "widget_name": "devhub.entity.team.TeamInfo", "source_code": "const { Tile } =\n  VM.require(\"${REPL_DEVHUB}/widget/devhub.components.molecule.Tile\") ||\n  (() => <></>);\n\nconst { getAccessControlInfo, getRootMembers } = VM.require(\n  \"${REPL_DEVHUB}/widget/core.adapter.devhub-contract\"\n);\n\nif (!getAccessControlInfo || !getRootMembers) {\n  return <p>Loading modules...</p>;\n}\n\nconst accessControlInfo = getAccessControlInfo();\nconst rootMembers = getRootMembers();\n\nif (!accessControlInfo || !rootMembers) {\n  return <p>Loading access control info...</p>;\n}\n\nconst { teamName } = props;\nconst label = Object.keys(rootMembers[teamName].permissions)[0] || \"\";\nconst metadata = accessControlInfo.members_list[teamName];\nconst editPost = rootMembers[teamName].permissions[label].includes(\"edit-post\");\nconst useLabels =\n  rootMembers[teamName].permissions[label].includes(\"use-labels\");\n\nconst configuratorData = {\n  teamName: teamName,\n  description: metadata.description, //\n  label: label,\n  members: rootMembers[teamName].children || [],\n  editPost,\n  useLabels,\n};\n\nconst [editMode, setEditMode] = useState(false);\n\nfunction editTeam() {\n  // TODO\n}\n\nreturn editMode ? (\n  <Widget\n    src={\"${REPL_DEVHUB}/widget/devhub.entity.team.Configurator\"}\n    props={{\n      data: configuratorData,\n      onCancel: () => setEditMode(false),\n      onSubmit: () => editTeam(),\n    }}\n  />\n) : (\n  <div className=\"card my-2 attractable\">\n    <div className=\"card-body\">\n      <div class=\"d-flex justify-content-between\">\n        <h3>{teamName.slice(5)}</h3>\n        <Widget\n          src={\"${REPL_DEVHUB}/widget/devhub.components.molecule.Button\"}\n          props={{\n            classNames: { root: \"btn-outline-light text-dark\" },\n            icon: {\n              type: \"bootstrap_icon\",\n              variant: \"bi-gear-wide-connected\",\n            },\n            label: \"Edit team\",\n            onClick: () => setEditMode(true),\n          }}\n        />\n      </div>\n    </div>\n\n    <div className=\"card-body\">\n      {\n        <p class=\"card-text\" key=\"description\">\n          <Widget\n            src={\n              \"${REPL_DEVHUB}/widget/devhub.components.molecule.MarkdownViewer\"\n            }\n            props={{\n              text: metadata.description,\n            }}\n          />\n        </p>\n      }\n      <span>\n        Restricted label:{\" \"}\n        <Widget\n          src={\"${REPL_DEVHUB}/widget/devhub.components.atom.Tag\"}\n          props={{\n            tag: label,\n          }}\n        />\n      </span>\n\n      <div>Permissions associated with that label</div>\n\n      <Widget\n        src=\"${REPL_DEVHUB}/widget/devhub.entity.team.LabelPermissions\"\n        props={{\n          editPost,\n          useLabels,\n          disabled: true,\n        }}\n      />\n\n      <div>Members</div>\n\n      {metadata.children && (\n        <div class=\"vstack\">\n          {metadata.children.length ? (\n            metadata.children.map((child) => (\n              <Tile className=\"w-25 p-3 m-1\" minHeight={10}>\n                <Widget\n                  src={`neardevgov.near/widget/ProfileLine`}\n                  props={{ accountId: child }}\n                />\n              </Tile>\n            ))\n          ) : (\n            <div>No members in this team</div>\n          )}\n        </div>\n      )}\n    </div>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/geforcy.near/widget/devhub.entity.team.TeamInfo", "fact_widget_deployments_id": "ed231f3bef2647f0e1bcef1e5ee3cc3f", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 2}