{"tx_hash": "6WBXmARzcqPWdh3EPHJv5jyaZUvXGAhrGcJvxtUcmY1M", "action_id_social": "kixifr8mN7DusYA66GTTZPRaTr8TeCgpTVRxKmyCenz-0-widget", "block_id": 105842690, "block_timestamp": "2023-11-16T17:12:24.099Z", "signer_id": "geforcy.near", "widget_name": "devhub.entity.team.Configurator", "source_code": "const { Tile } =\n  VM.require(\"${REPL_DEVHUB}/widget/devhub.components.molecule.Tile\") ||\n  (() => <></>);\n\nconst { data, onSubmit, onCancel } = props;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n`;\n\nconst Item = styled.div`\n  padding: 10px;\n  margin: 5px;\n  display: flex;\n  align-items: center;\n  flex-direction: row;\n  gap: 10px;\n`;\n\nconst EditableField = styled.input`\n  flex: 1;\n`;\n\nconst initialData = data.members || [];\nconst [newItem, setNewItem] = useState(\"\");\nconst [teamName, setTeamName] = useState(data.teamName || \"\");\nconst [description, setDescription] = useState(data.description || \"\");\nconst [label, setLabel] = useState(data.label || \"\");\nconst [labelType, setLabelType] = useState(\n  (data.label || \"\").startsWith(\"starts-with:\") ? \"starts-with:\" : \"\"\n);\nconst [editPost, setEditPost] = useState(data.editPost || true);\nconst [useLabels, setUseLabels] = useState(data.useLabels || true);\nconst [members, setMembers] = useState(initialData || []);\n\nconst [showPreview, setShowPreview] = useState(data.showPreview || []);\n\nconst teamModerators = teamName == \"team:moderators\";\nconst moderatorsWarning = teamModerators && (\n  <div class=\"alert alert-warning alert-dismissible fade show\" role=\"alert\">\n    It's only possible to edit the description and members of team moderators\n    through the UI.\n    <button\n      type=\"button\"\n      class=\"btn-close\"\n      data-bs-dismiss=\"alert\"\n      aria-label=\"Close\"\n      onClick={() => State.update({ permissionError: \"\" })}\n    ></button>\n  </div>\n);\n\nconst handleAddItem = () => {\n  if (newItem) {\n    setMembers([...members, newItem]);\n    setNewItem(\"\");\n  }\n};\n\nconst handleDeleteItem = (index) => {\n  const updatedData = [...members];\n  updatedData.splice(index, 1);\n  setMembers(updatedData);\n};\n\nconst handleSubmit = () => {\n  // TODO validate inputs\n\n  onSubmit({\n    teamName,\n    label: labelType + label,\n    editPost,\n    useLabels,\n    members: members.map((member) => member.trim()),\n  });\n};\n\nreturn (\n  <Tile className=\"p-3\">\n    <Container>\n      <h3>{data.teamName ? \"Edit\" : \"Create\"} team</h3>\n      {moderatorsWarning}\n      {!teamModerators && (\n        <div className=\"flex-grow-1\">\n          <span>Team name</span>\n          <Widget\n            src=\"${REPL_DEVHUB}/widget/devhub.components.molecule.Input\"\n            props={{\n              className: \"flex-grow-1\",\n              skipPaddingGap: true,\n              onChange: (e) => setTeamName(e.target.value),\n              value: teamName,\n              placeholder: \"Team name\",\n            }}\n          />\n        </div>\n      )}\n      <div className=\"flex-grow-1\">\n        <span>Team description</span>\n        <Widget\n          src=\"${REPL_DEVHUB}/widget/devhub.components.molecule.MarkdownEditor\"\n          props={{ data: { content: description }, onChange: setDescription }}\n        />\n      </div>\n      {!teamModerators && (\n        <div className=\"flex-grow-1\">\n          <div>\n            Would you like this team to limit their restrictions to a single\n            label, or would you prefer them to restrict it with any label that\n            follows a similar convention?\n          </div>\n          <div className=\"col-lg-6 mb-2\">\n            <select\n              onChange={(event) => setLabelType(event.target.value)}\n              class=\"form-select\"\n              aria-label=\"Select type\"\n              value={labelType}\n            >\n              <option value=\"starts-with:\">\n                Restrict multiple labels with a common prefix\n              </option>\n              <option value=\"\">Restrict a single label</option>\n            </select>\n            <div>What would you like the restricted label to be?</div>\n            <Widget\n              src=\"${REPL_DEVHUB}/widget/devhub.components.molecule.Input\"\n              props={{\n                className: \"flex-grow-1\",\n                onChange: (e) => setLabel(e.target.value),\n                // This is to make it backwards compatible\n                value: label.startsWith(\"starts-with:\")\n                  ? label.slice(12)\n                  : label,\n                skipPaddingGap: true,\n                placeholder: \"label\",\n                inputProps: {\n                  prefix: labelType,\n                },\n              }}\n            />\n            <div>Select label permissions</div>\n            <Widget\n              src=\"${REPL_DEVHUB}/widget/devhub.entity.team.LabelPermissions\"\n              props={{\n                editPost,\n                setEditPost,\n                useLabels,\n                setUseLabels,\n                disabled: false,\n              }}\n            />\n          </div>\n        </div>\n      )}\n      {members.map((item, index) => (\n        <Item key={index}>\n          <div className=\"flex-grow-1\">\n            <Widget\n              src=\"${REPL_DEVHUB}/widget/devhub.components.molecule.Input\"\n              props={{\n                className: \"flex-grow-1\",\n                value: item,\n                skipPaddingGap: true,\n                placeholder: \"member\",\n                inputProps: {\n                  prefix: \"member\",\n                  disabled: true,\n                },\n              }}\n            />\n          </div>\n          <button\n            className=\"btn btn-outline-danger\"\n            onClick={() => handleDeleteItem(index)}\n          >\n            <i className=\"bi bi-trash-fill\" />\n          </button>\n        </Item>\n      ))}\n      <Item>\n        <div className=\"flex-grow-1\">\n          <Widget\n            src=\"${REPL_DEVHUB}/widget/devhub.components.molecule.Input\"\n            props={{\n              className: \"flex-grow-1\",\n              skipPaddingGap: true,\n              onChange: (e) => setNewItem(e.target.value),\n              value: newItem,\n              placeholder: \"member\",\n              inputProps: {\n                prefix: \"member\",\n              },\n            }}\n          />\n        </div>\n        <button\n          className=\"btn btn-success\"\n          onClick={handleAddItem}\n          disabled={newItem === \"\"}\n        >\n          <i className=\"bi bi-plus\" />\n        </button>\n      </Item>\n      <div\n        className={\"d-flex align-items-center justify-content-end gap-3 mt-4\"}\n      >\n        <Widget\n          src={\"${REPL_DEVHUB}/widget/devhub.components.molecule.Button\"}\n          props={{\n            classNames: { root: \"btn-outline-danger shadow-none border-0\" },\n            label: \"Cancel\",\n            onClick: () => onCancel(),\n          }}\n        />\n        <Widget\n          src={\"${REPL_DEVHUB}/widget/devhub.components.molecule.Button\"}\n          props={{\n            classNames: { root: \"btn-success\" },\n            disabled: initialData === members,\n            icon: {\n              type: \"bootstrap_icon\",\n              variant: \"bi-check-circle-fill\",\n            },\n            label: \"Submit\",\n            onClick: handleSubmit,\n          }}\n        />\n      </div>\n    </Container>\n  </Tile>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/geforcy.near/widget/devhub.entity.team.Configurator", "fact_widget_deployments_id": "f15bde176514cc83429ae6d428f85f6e", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 10}