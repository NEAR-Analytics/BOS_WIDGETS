{"tx_hash": "6oW1u3F6rnFrrEwMSvryvPs5X4yhcSrFDCEeUVHJswfe", "action_id_social": "GEVwU6DKNeVjZUyK97hqm4GiNvgDGY5JBQndRzXBGK8z-0-widget", "block_id": 116350384, "block_timestamp": "2024-04-07T22:42:24.921Z", "signer_id": "geforcy.near", "widget_name": "devhub.entity.addon.kanban.post_board", "source_code": "const { getPostsByLabel } = VM.require(\n  \"geforcy.near/widget/core.adapter.devhub-contract\"\n);\nconst { getPost } = VM.require(\n  \"geforcy.near/widget/core.adapter.devhub-contract\"\n);\ngetPost || (getPost = () => {});\ngetPostsByLabel || (getPostsByLabel = () => {});\n\nconst postTagsToIdSet = (tags) => {\n  return new Set(\n    (tags ?? [])?.map((tag) => getPostsByLabel({ label: tag }) ?? []).flat(1)\n  );\n};\n\nconst sortByValues = {\n  descendingAmount: \"descending-amount\",\n  ascendingAmount: \"ascending-amount\",\n  descendingDate: \"descending-date\",\n  ascendingDate: \"ascending-date\",\n  ascendingAuthor: \"ascending-author\",\n  descendingAuthor: \"descending-author\",\n  ascendingSponsor: \"ascending-sponsor\",\n  descendingSponsor: \"descending-sponsor\",\n  descendingLikes: \"descending-likes\",\n  ascendingLikes: \"ascending-likes\",\n};\n\nconst configToColumnData = ({ columns, tags }) =>\n  Object.entries(columns).reduce((registry, [columnId, column]) => {\n    const postIds = (getPostsByLabel({ label: column.tag }) ?? []).reverse();\n    return {\n      ...registry,\n      [columnId]: {\n        ...column,\n        postIds: postIds,\n      },\n    };\n  }, {});\n\nconst basicAlphabeticalComparison = (a, b) => {\n  if (a < b) return -1;\n  if (a > b) return 1;\n  return 0;\n};\n\nconst KanbanPostBoard = ({ metadata, payload }) => {\n  const boardData = Object.entries(configToColumnData(payload) ?? {});\n\n  const view = boardData.map(([columnId, column]) => {\n    const data = [];\n    column.postIds?.map((postId) => {\n      if (postId) {\n        const postData = getPost({\n          post_id: postId ? parseInt(postId) : 0,\n        });\n        data.push(postData);\n      }\n    });\n\n    // sort data by selected sorting mechanism\n    switch (metadata.ticket.sortBy) {\n      case sortByValues.descendingAmount:\n        data.sort((a, b) => b?.snapshot?.amount - a?.snapshot?.amount);\n        break;\n      case sortByValues.ascendingAmount:\n        data.sort((a, b) => a?.snapshot?.amount - b?.snapshot?.amount);\n        break;\n      case sortByValues.descendingDate:\n        data.sort(\n          (a, b) =>\n            parseInt(b?.snapshot?.timestamp) - parseInt(a?.snapshot?.timestamp)\n        );\n        break;\n      case sortByValues.ascendingDate:\n        data.sort(\n          (a, b) =>\n            parseInt(a?.snapshot?.timestamp) - parseInt(b?.snapshot?.timestamp)\n        );\n        break;\n      case sortByValues.ascendingAuthor:\n        data.sort((a, b) =>\n          basicAlphabeticalComparison(a.author_id, b.author_id)\n        );\n        break;\n      case sortByValues.descendingAuthor:\n        data.sort((a, b) =>\n          basicAlphabeticalComparison(b.author_id, a.author_id)\n        );\n        break;\n      case sortByValues.ascendingSponsor:\n        data.sort((a, b) =>\n          basicAlphabeticalComparison(\n            a?.snapshot?.requested_sponsor || a?.snapshot?.supervisor,\n            b?.snapshot?.requested_sponsor || b?.snapshot?.supervisor\n          )\n        );\n        break;\n      case sortByValues.descendingSponsor:\n        data.sort((a, b) =>\n          basicAlphabeticalComparison(\n            b?.snapshot?.requested_sponsor || b?.snapshot?.supervisor,\n            a?.snapshot?.requested_sponsor || a?.snapshot?.supervisor\n          )\n        );\n        break;\n      case sortByValues.descendingLikes:\n        data.sort((a, b) => b.likes.length - a.likes.length);\n        break;\n      case sortByValues.ascendingLikes:\n        data.sort((a, b) => a.likes.length - b.likes.length);\n        break;\n      default:\n        data;\n        break;\n    }\n\n    return (\n      <div\n        className=\"col-3\"\n        style={{ minWidth: \"300px\" }}\n        key={`column-${columnId}-view`}\n      >\n        <div className=\"card rounded-4\">\n          <div\n            className={[\n              \"card-body d-flex flex-column gap-3 p-2\",\n              \"border border-1 rounded-4\",\n            ].join(\" \")}\n            style={{ height: \"75vh\" }}\n          >\n            <span className=\"d-flex flex-column py-1\">\n              <h6 className=\"card-title h6 d-flex align-items-center gap-2 m-0\">\n                {column.title}\n\n                <span className=\"badge rounded-pill bg-secondary\">\n                  {column.postIds.length}\n                </span>\n              </h6>\n\n              <p class=\"text-secondary m-0\">{column.description}</p>\n            </span>\n\n            <div\n              class=\"d-flex flex-column gap-2\"\n              style={{ overflow: \"scroll\" }}\n            >\n              {data.length === column.postIds.length &&\n                data.map((postData) => (\n                  <Widget\n                    src={`geforcy.near/widget/devhub.entity.addon.${metadata.ticket.type}`}\n                    props={{\n                      metadata: { id: postData.postId, ...metadata.ticket },\n\n                      data: postData,\n                    }}\n                    key={postData.postId}\n                  />\n                ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  });\n\n  return (\n    <div>\n      <div className=\"d-flex flex-column align-items-center gap-2 pb-4 w-100\">\n        <h5 className=\"h4 d-inline-flex gap-2 m-0\">\n          <span>{metadata?.title}</span>\n        </h5>\n\n        <p className=\"h6 m-0 py-1 text-secondary text-center\">\n          {metadata?.description}\n        </p>\n      </div>\n      <div className=\"d-flex gap-3 w-100\" style={{ overflow: \"scroll\" }}>\n        <div\n          className={[\n            \"d-flex align-items-center justify-content-center w-100 text-black-50 opacity-50\",\n            columns.length === 0 ? \"\" : \"d-none\",\n          ].join(\" \")}\n          style={{ height: 384 }}\n        >\n          No columns were created so far.\n        </div>\n        <span className={\"d-flex gap-3 w-100\"}>{view}</span>\n      </div>\n    </div>\n  );\n};\n\nreturn KanbanPostBoard(props);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/geforcy.near/widget/devhub.entity.addon.kanban.post_board", "fact_widget_deployments_id": "0562344f89033ffd6c4854837f43ab2e", "inserted_timestamp": "2024-04-08T00:45:59.861Z", "modified_timestamp": "2024-04-08T00:45:59.861Z", "__row_index": 3}