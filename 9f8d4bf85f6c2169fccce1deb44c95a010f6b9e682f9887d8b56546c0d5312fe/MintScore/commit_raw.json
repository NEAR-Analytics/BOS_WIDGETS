{"tx_hash": "D2XwkNY6ssWBKPoiWFssxZpdUVXDQ3356ghZLa8h4tHk", "action_id_social": "BrFPkh4pW5mTAXyxCsfYk7DfTwmr5uxYcy7g4qEwWNiQ-0-widget", "block_id": 97125780, "block_timestamp": "2023-07-23T06:33:13.500Z", "signer_id": "9f8d4bf85f6c2169fccce1deb44c95a010f6b9e682f9887d8b56546c0d5312fe", "widget_name": "MintScore", "source_code": "const sender = Ethers.send(\"eth_requestAccounts\", [])[0];\n\nconst data = fetch(`https://tonft.app/get-scores?recipient=${sender}`);\n\nconst dataParsed = JSON.parse(data.body);\n\nconst priceFeedAddress = \"0x1413D5F91bdf427d6d793dc4E9a65e59A40531bd\";\n\nconst priceFeedABI = [\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"receiver\",\n        type: \"address\",\n      },\n      {\n        components: [\n          {\n            internalType: \"uint160\",\n            name: \"GitcoinScore\",\n            type: \"uint160\",\n          },\n          {\n            internalType: \"uint160\",\n            name: \"WalletData\",\n            type: \"uint160\",\n          },\n          {\n            internalType: \"uint160\",\n            name: \"SpotScore\",\n            type: \"uint160\",\n          },\n          {\n            internalType: \"uint160\",\n            name: \"SocialScore\",\n            type: \"uint160\",\n          },\n          {\n            internalType: \"address\",\n            name: \"owner\",\n            type: \"address\",\n          },\n        ],\n        internalType: \"struct Lock.ScoreParametrs\",\n        name: \"score\",\n        type: \"tuple\",\n      },\n    ],\n    name: \"mint\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nconst Wrapper = styled.div`\n  \n     .Logo {\n      width: 100%;\n     }\n\n    h1 {\n      color: #BDFF00;\n    }\n\n    button {\n      color: black;\n      background-color: #BDFF00;\n      border: 3px white solid;\n      padding: 10px 20px;\n    }\n\n    button:hover {\n      color: white;\n      background-color: black;\n      border: 3px white solid;\n    }\n    \n    background-color: black;\n    align: center;\n    display: flex;\n    justify-content: center;\n    flex-wrap: wrap;\n  \n    * {\n      margin: 20px;\n    }\n  `;\n\nconst CardInfo = styled.div`\n      display: flex;\n      justify-content: center;\n      flex-wrap: wrap;\n      width: 100%;\n      \n      background-color: #2C2C2C;\n      border: 3px white solid;\n      border-radius: 20px;\n\n      .finalScore {\n        width: 100%;\n        display: flex;\n        justify-content: center;\n      }\n\n      .finalScore span {\n        color: white;\n        font-size: 25px;\n        width: 100%;\n        display: flex;\n      }\n\n      .finalScore .green {\n        color: #BDFF00;\n        font-size: 40px;\n      }\n\n      .scoresPassport {\n        width: 100%;\n        color: white;\n        font-size: 20px;\n        display: flex;\n        flex-wrap: wrap;\n        justify-content: center\n      }\n\n      .scoresPassport div {\n        width: 40%;\n      }\n\n      .scoresPassport span {\n        color: #BDFF00;\n      }\n      \n  `;\n\nconst polygon = dataParsed\n  ? fetch(\n      `https://tonft.app/issue-polygon-link?social_score=${Math.floor(\n        dataParsed.scores.social_score * 100\n      )}&degen_score=${Math.floor(\n        dataParsed.scores.degen_score * 100\n      )}&nomis_score_eth=${Math.floor(\n        dataParsed.scores.nomis_score_eth * 100\n      )}&gitcoin_score=${Math.floor(\n        dataParsed.scores.gitcoin_score * 100\n      )}&spot_score=${Math.floor(\n        dataParsed.scores.spot_score * 100\n      )}&wallet_data=${Math.floor(dataParsed.scores.wallet_data * 100)}`\n    )\n  : {};\n\n// const eas = fetch(\n//   `https://tonft.app/issue-eas-attestation?social_score=${Math.floor(\n//     dataParsed.scores.social_score * 100\n//   )}&degen_score=${Math.floor(\n//     dataParsed.scores.degen_score * 100\n//   )}&nomis_score_eth=${Math.floor(\n//     dataParsed.scores.nomis_score_eth * 100\n//   )}&gitcoin_score=${Math.floor(\n//     dataParsed.scores.gitcoin_score * 100\n//   )}&spot_score=${Math.floor(\n//     dataParsed.scores.spot_score * 100\n//   )}&wallet_data=${Math.floor(\n//     dataParsed.scores.wallet_data * 100\n//   )}&recipient=${sender}`\n// );\n\nconsole.log(polygon, \"polygon\");\n\n// console.log(eas, \"eas\");\n\nif (Ethers.provider()) {\n  const priceFeedContract = new ethers.Contract(\n    priceFeedAddress,\n    priceFeedABI,\n    Ethers.provider().getSigner()\n  );\n\n  console.log(priceFeedContract, \"contract\");\n  // console.log(priceFeedContract.tokenURI(0), \"contract\");\n}\n\nreturn (\n  <Wrapper>\n    <div className=\"Logo\">\n      <img src=\"https://ipfs.near.social/ipfs/bafkreiaz22ygeaeyyeylfarvvfnub57ev24q2t23ltqifvgagwjukpid6q\" />\n    </div>\n    <h1>Scores Passport</h1>\n    <CardInfo>\n      <div>\n        <img src=\"https://ipfs.near.social/ipfs/bafkreibr4vg3ovoq6cya47mfzpcm76kx4w3gcyr326aruicn6jdm75rmxy\" />\n      </div>\n      <div className=\"scoresPassport\">\n        <div>\n          Wallet data <span>{dataParsed.scores.wallet_data.toFixed(2)}</span>\n        </div>\n        <div>\n          Social score <span>{dataParsed.scores.social_score.toFixed(2)}</span>\n        </div>\n        <div>\n          SPOT score <span>{dataParsed.scores.spot_score.toFixed(2)}</span>\n        </div>\n        <div>\n          Gitcoin score{\" \"}\n          <span>{dataParsed.scores.gitcoin_score.toFixed(2)}</span>\n        </div>\n      </div>\n      <div className=\"finalScore\">\n        <img src=\"https://ipfs.near.social/ipfs/bafkreigbqojrrt6s3izi45xes3gopt2ko7gjyiaynt4re2nvo5aa35uhi4\" />\n        <div>\n          <span>score</span>\n          <span className=\"green\">\n            {dataParsed.scores.spot_score.toFixed(0)} / 100\n          </span>\n        </div>\n      </div>\n    </CardInfo>\n    <button\n      onClick={() => {\n        const contract = new ethers.Contract(\n          priceFeedAddress,\n          priceFeedABI,\n          Ethers.provider().getSigner()\n        );\n\n        contract.mint(sender, {\n          GitcoinScore: dataParsed.scores.gitcoin_score.toFixed(2) * 100,\n          WalletData: dataParsed.scores.wallet_data.toFixed(2) * 100,\n          SpotScore: dataParsed.scores.spot_score.toFixed(0),\n          SocialScore: dataParsed.scores.gitcoin_score.toFixed(2) * 100,\n          owner: sender,\n        });\n      }}\n    >\n      Mint Score\n    </button>\n    <button>\n      <a\n        href=\"https://issuer-ui.polygonid.me/credentials/scan-link/3bfcd843-87b8-4517-80e4-28838a41bfac\"\n        target=\"_blank\"\n      >\n        Polygon ID\n      </a>\n    </button>\n    <button>\n      <a\n        href=\"https://sepolia.easscan.org/attestation/view/0x3c5ec8917337f1568119eea16f46b8a0eb0336ffacc8db8ac0b4289bc33053b6\"\n        target=\"_blank\"\n      >\n        EAS\n      </a>\n    </button>\n  </Wrapper>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/9f8d4bf85f6c2169fccce1deb44c95a010f6b9e682f9887d8b56546c0d5312fe/widget/MintScore", "fact_widget_deployments_id": "e219f2ba49bcdd0b28fd8d6d6d585a5e", "inserted_timestamp": "2000-01-01T00:00:00.000Z", "modified_timestamp": "2000-01-01T00:00:00.000Z", "__row_index": 0}