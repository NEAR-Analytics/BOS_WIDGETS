{"tx_hash": "b6Rwwgm1tVJMigqBKu4SeHjs9no1ChgUY538GCkkYWZ", "action_id_social": "3TvCq6GNBy8DFWtW7YVMbndJxaV4iyGhTq8VHL9HNG7n-0-widget", "block_id": 109187850, "block_timestamp": "2023-12-30T22:17:55.639Z", "signer_id": "ndcdev.near", "widget_name": "MDAO.Pages.Proposals.Create", "source_code": "let { assets, content } = VM.require(`/ndcdev.near/widget/MDAO.Config`);\n\nassets = assets.home;\ncontent = content.home;\n\nconst Container = styled.div`\n  position: relative;\n  width: 100%;\n  height: max-content;\n  overflow: hidden;\n\n  h3 {\n    font-size: 2rem;\n    font-weight: 400;\n  }\n\n  h4 {\n    font-size: 1.5rem;\n    font-weight: 300;\n  }\n`;\n\nconst FormWrapper = styled.div`\n  width: 75%;\n  padding: 3rem;\n\n  @media screen and (max-width: 786px) {\n    width: 100%;\n    padding: 1rem;\n  }\n\n  label {\n    font-size: 14px;\n    margin-bottom: 5px;\n  }\n\n  .form-control.error {\n    border: 1px solid red;\n  }\n`;\n\nconst form = {\n  report: [\n    {\n      name: \"project_name\",\n      label: \"Project Name\",\n      value: \"\",\n      type: \"text\",\n      required: true,\n    },\n    {\n      name: \"contact\",\n      label: \"Main contact (near.social or Telegram)\",\n      value: \"\",\n      type: \"text\",\n      required: true,\n    },\n    {\n      name: \"metric:audience\",\n      label:\n        \"Audience Metric: how many people did your project reach during this funding period?\",\n      value: \"\",\n      type: \"number\",\n      required: true,\n    },\n    {\n      name: \"metric:growth\",\n      label:\n        \"Growth Metric: how does this month's audience reach compare to previous periods (provide a %)\",\n      value: \"\",\n      type: \"number\",\n      required: true,\n    },\n    {\n      name: \"metric:average_engagement_rate\",\n      label:\n        \"Average Engagement Rate: what is the average engagement rate on your project's primary platform (choose one)? Use the formula (Total Likes, Shares & Comments / Total Followers) X 100 = AER %\",\n      value: \"\",\n      type: \"number\",\n      required: true,\n    },\n    {\n      name: \"performance_statement:answer_1\",\n      label:\n        \"Performance Statement: What is the biggest win (most improved part of project) during this funding period vs. the previous one (if applicable)?\",\n      value: \"\",\n      type: \"textarea\",\n      required: true,\n    },\n    {\n      name: \"performance_statement:answer_2\",\n      label:\n        \"Performance statement: What is the biggest challenge your project is facing? What did not improve during this funding period?\",\n      value: \"\",\n      type: \"textarea\",\n      required: true,\n    },\n    {\n      name: \"attachments\",\n      label: \"Include any attachment(s)\",\n      value: \"\",\n      type: \"file\",\n    },\n  ],\n  proposal: [\n    {\n      name: \"project_name\",\n      label: \"Project Name\",\n      value: \"\",\n      type: \"text\",\n      required: true,\n    },\n    {\n      name: \"description\",\n      label: \"Description\",\n      value: \"# Title\\n## Description\",\n      type: \"textarea\",\n      required: true,\n    },\n    {\n      name: \"requested_amount\",\n      label: \"Requested Amount (NEAR)\",\n      value: \"\",\n      type: \"number\",\n      required: true,\n    },\n    {\n      name: \"tag\",\n      label: \"Tags\",\n      value: \"\",\n      type: \"tag\",\n    },\n  ],\n};\n\nconst [formEls, setFormEls] = useState({\n  accountId: context.accountId,\n  type: \"proposal\",\n});\n\nconst [errors, setErrors] = useState({});\n\nconst handleChange = (el, value) => {\n  const newFormEl = formEls;\n  const newFormElErrors = errors;\n  newFormEl[el.name] = value;\n  newFormElErrors[el.name] = value.length < 1;\n\n  setErrors(newFormElErrors);\n  setFormEls(newFormEl);\n};\n\nconst ProposalButton = () => (\n  <CommitButton\n    disabled={form[formEls.type].some(\n      (el) =>\n        el.required &&\n        (errors[el.name] === true || errors[el.name] === undefined)\n    )}\n    data={{\n      index: {\n        graph: JSON.stringify({\n          key: \"ndc.mdao\",\n          value: formEls,\n        }),\n      },\n    }}\n  >\n    Create proposal\n  </CommitButton>\n);\n\nreturn (\n  <Container>\n    <div className=\"d-flex justify-content-center\">\n      <FormWrapper className=\"my-5 d-flex flex-column gap-3\">\n        <div className=\"d-flex flex-column align-items-center\">\n          <h3>Marketing DAO Report Form</h3>\n          <div className=\"text-center\">\n            <p>\n              <b>Please use this form to report key performance metrics.</b>\n            </p>\n            <p>\n              Questions? Reach out via{\" \"}\n              <a href=\"https://t.me/ndc_marketing\">Telegram</a> or email: <br />\n              <a href=\"mailto:marketingdao@proton.me\">marketingdao@proton.me</a>\n              \ud83d\ude42\n            </p>\n          </div>\n        </div>\n\n        <div\n          onClick={() => {\n            const newFormEl = formEls;\n            newFormEl.type =\n              formEls.type === \"proposal\" ? \"report\" : \"proposal\";\n            setFormEls(newFormEl);\n          }}\n        >\n          <label>Form type: {formEls.type}</label>\n          <Widget src={`ndcdev.near/widget/MDAO.Components.Switch`} />\n        </div>\n\n        {form[formEls.type].map((el) => (\n          <div className=\"form-element\">\n            <label for={el.name}>\n              {el.label}\n              {el.required && \"*\"}\n            </label>\n            {el.type === \"file\" ? (\n              <Widget\n                src={`ndcdev.near/widget/MDAO.Components.FileUploader`}\n                props={{\n                  onChange: (fileUrl) => handleChange(el, fileUrl),\n                }}\n              />\n            ) : el.type === \"textarea\" ? (\n              <Widget\n                src={`ndcdev.near/widget/MDAO.Components.MarkdownEditor`}\n                props={{ element: el, handleChange }}\n              />\n            ) : el.type === \"tag\" ? (\n              <Widget\n                src={\"sayalot.near/widget/TagsEditor\"}\n                props={{\n                  label: \"Tags\",\n                  placeholder: \"Enter tags\",\n                  setTagsObject: (tags) => handleChange(el, Object.keys(tags)),\n                }}\n              />\n            ) : (\n              <input\n                class={`form-control ${error[el.name] && \"error\"}`}\n                type={el.type}\n                name={el.name}\n                value={formEls[el.name] ?? \"\"}\n                onChange={(e) => handleChange(el, e.target.value)}\n              />\n            )}\n          </div>\n        ))}\n        <ProposalButton />\n      </FormWrapper>\n    </div>\n  </Container>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/ndcdev.near/widget/MDAO.Pages.Proposals.Create", "fact_widget_deployments_id": "7575c080607ab96728231c8a62c0cfaf", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 2}