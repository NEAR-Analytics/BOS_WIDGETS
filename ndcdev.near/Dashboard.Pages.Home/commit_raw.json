{"tx_hash": "E3x6qfrB7WuhSWUzxcjkeNUmpJUZZP8v3NkvTpvfdQwD", "action_id_social": "4c1L38jsVhmaF2rpiggqX3FbZ2rZAYtXYGfEeAMPNNAV-0-widget", "block_id": 111040218, "block_timestamp": "2024-01-22T13:55:20.059Z", "signer_id": "ndcdev.near", "widget_name": "Dashboard.Pages.Home", "source_code": "const { ndcDAOs } = VM.require(`ndcdev.near/widget/Dashboard.Config`);\nconst { API } = VM.require(`ndcdev.near/widget/Dashboard.Api.pikespeak`);\nconst { Container, ChartContainer } = VM.require(\n  `ndcdev.near/widget/Dashboard.Pages.styled`,\n);\n\nconst PERIODS = [\"daily\", \"weekly\", \"monthly\"];\nconst defaultDAOOption = \"All DAOs\";\n\nconst dailyTotal = {\n  labels: [],\n  data: [],\n};\n\nconst dailyTotalUsers = {\n  labels: [],\n  data: [],\n};\n\nconst [loading, setLoading] = useState(false);\nconst [totalTx, setTotalTx] = useState(0);\nconst [totalAccounts, setTotalAccounts] = useState(0);\nconst [uniqueAccounts, setUniqueAccounts] = useState(0);\nconst [period, setPeriod] = useState(PERIODS[0]);\nconst [selectedDAOs, setSelectedDAOs] = useState([]);\nconst [dailyTotalTx, setdailyTotalTx] = useState([]);\nconst [uniqueActiveUsers, setUniqueActiveUsers] = useState([]);\n\nconst fetchData = () => {\n  setLoading(true);\n  let _totalTx = 0;\n  let _totalAccounts = 0;\n  let _uniqueAccounts = 0;\n  let _uniqueActiveUsers = [];\n  let _dailyTotalTx = [];\n  const daos = selectedDAOs.length ? selectedDAOs : ndcDAOs;\n\n  daos.map((accountId) => {\n    API.get_total_tx(accountId).then((resp) => {\n      _totalTx += parseInt(resp.body);\n      setTotalTx(_totalTx);\n    });\n    API.get_accounts(accountId).then((resp) => {\n      _totalAccounts += resp.body.length;\n      setTotalAccounts(_totalAccounts);\n    });\n    API.get_unique_accounts_by_period(accountId).then((resp) => {\n      _uniqueAccounts += parseInt(resp.body[period].data.length);\n      _uniqueActiveUsers.push(...resp.body[period].data);\n      setUniqueAccounts(_uniqueAccounts);\n      setUniqueActiveUsers(_uniqueActiveUsers);\n    });\n    API.get_daily_total_tx(accountId).then((res) => {\n      _dailyTotalTx.push(...res.body);\n      setdailyTotalTx(_dailyTotalTx);\n    });\n  });\n\n  setLoading(false);\n};\n\nuseEffect(() => fetchData(), [selectedDAOs, period]);\n\ndailyTotalTx\n  .sort((a, b) => new Date(a.date) - new Date(b.date))\n  .forEach((element) => {\n    dailyTotal.labels.push(element.date);\n    dailyTotal.data.push(element.count);\n  });\n\nuniqueActiveUsers\n  .sort((a, b) => new Date(a.day) - new Date(b.day))\n  .forEach((element) => {\n    dailyTotalUsers.labels.push(element.day);\n    dailyTotalUsers.data.push(element.unique_users);\n  });\n\nreturn (\n  <Container>\n    <div className=\"section\">\n      <div className=\"d-flex w-100 gap-3 justify-content-between\">\n        <div className=\"select-dao\">\n          <Widget\n            src={`ndcdev.near/widget/Dashboard.Components.Select.index`}\n            props={{\n              options: ndcDAOs,\n              defaultValue: defaultDAOOption,\n              isOpen: selectOpen,\n              multiple: true,\n              values: selectedDAOs,\n              containerClass: \"selected-container\",\n              onClear: () => setSelectedDAOs([]),\n              onChange: (value) => {\n                setSelectedDAOs(\n                  value === defaultDAOOption\n                    ? []\n                    : selectedDAOs.includes(value)\n                    ? selectedDAOs.filter(\n                        (dao) => dao !== value && dao !== defaultDAOOption,\n                      )\n                    : [...selectedDAOs, value],\n                );\n              },\n            }}\n          />\n        </div>\n        <div className=\"select-period\">\n          <Widget\n            src={`ndcdev.near/widget/Dashboard.Components.Select.index`}\n            props={{\n              options: PERIODS,\n              isOpen: selectOpen,\n              values: period,\n              onChange: setPeriod,\n              containerClass: \"selected-container\",\n            }}\n          />\n        </div>\n      </div>\n    </div>\n    <Widget\n      src={`ndcdev.near/widget/Dashboard.Components.MetricsDisplay.index`}\n      props={{\n        totalTx,\n        totalAccounts,\n        uniqueAccounts,\n        loading,\n      }}\n    />\n    <ChartContainer>\n      <Widget\n        src={`ndcdev.near/widget/Dashboard.Components.Chart.index`}\n        props={{ title: \"DAILY NUMBER OF TRANSACTIONS\", data: dailyTotal }}\n      />\n      <Widget\n        src={`ndcdev.near/widget/Dashboard.Components.Chart.index`}\n        props={{ title: \"UNIQUE ACTIVE USERS\", data: dailyTotalUsers }}\n      />\n    </ChartContainer>\n    <div className=\"section py-5\">\n      <Widget\n        src={`ndcdev.near/widget/Dashboard.Components.Table.index`}\n        props={{ ndcDAOs }}\n      />\n    </div>\n  </Container>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/ndcdev.near/widget/Dashboard.Pages.Home", "fact_widget_deployments_id": "448e012d8de7b0a64e30cf4860cde606", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 12}