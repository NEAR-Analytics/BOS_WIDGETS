{"tx_hash": "689BE8VC6HxbZmxoQgDNW9WoiNQp94PGxcPzmwE7AQSN", "action_id_social": "87EUu3eBuSx3ZVHJAY1akb7iq7bEaAD24WrRCm4zjSeC-0-widget", "block_id": 113168002, "block_timestamp": "2024-02-19T17:50:33.882Z", "signer_id": "ndcdev.near", "widget_name": "daos.Components.ReplyItem", "source_code": "// Copy of old version of src/Posts/Post.jsx\nlet { socialKey } = VM.require(`ndcdev.near/widget/daos.Config`);\nconst { item, showCreate } = props;\nconst accountId = context.accountId;\n\nif (!socialKey) return <Widget src=\"flashui.near/widget/Loading\" />;\n\nconst Post = styled.div`\n  position: relative;\n  width: 100%;\n\n  &::before {\n    content: \"\";\n    display: ${showCreate ? \"none\" : \"block\"};\n    position: absolute;\n    left: 19px;\n    top: 52px;\n    bottom: 12px;\n    width: 2px;\n    background: #eceef0;\n  }\n`;\n\nconst Header = styled.div`\n  margin-bottom: 0;\n  display: inline-flex;\n  width: 100%;\n`;\n\nconst Body = styled.div`\n  padding-left: ${showCreate ? \"0\" : \"50px\"};\n  padding-bottom: 5px;\n`;\n\nconst Content = styled.div`\n  img {\n    display: block;\n    max-width: 100%;\n    max-height: 80vh;\n    margin: 0 0 12px;\n  }\n`;\n\nconst Text = styled.p`\n  display: block;\n  margin: 0;\n  font-size: 14px;\n  line-height: 20px;\n  font-weight: 400;\n  color: #687076;\n  white-space: nowrap;\n`;\n\nconst Actions = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 15px;\n  margin: -3px 0 10px 0;\n`;\n\nconst Comments = styled.div`\n  > div > div:first-child {\n    padding-top: 12px;\n  }\n`;\n\nconst CommentContent = styled.div`\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  margin-left: auto;\n  height: 40px;\n  width: 180px;\n  padding: 10px;\n  background-color: #a4c2fd1a;\n  border-radius: 18px;\n  color: #686467;\n  span {\n    font-size: 14px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: normal;\n  }\n`;\nconst [showMore, setShowMore] = useState(null);\nconst [liked, setLiked] = useState(false);\nconst [showReply, setShowReply] = useState({ [item.id]: showCreate });\n\nconst comments = Social.index(\"graph\", `${socialKey}.reply`, { order: \"desc\" });\nlet likes = Social.index(\"graph\", `${socialKey}.like`, { order: \"desc\" });\nlikes = likes ? likes.filter((like) => like.value.parentId === item.id) : [];\nconst myLike = likes ? likes.some((like) => like.value[accountId]) : false;\nsetLiked(myLike);\n\nconst [replies, setReplies] = useState([]);\nreplies = comments\n  ? comments.filter((repl) => repl.value.parentId === item.id)\n  : [];\nsetReplies(replies);\n\nconst handleLike = () => {\n  Social.set({\n    index: {\n      graph: JSON.stringify({\n        key: `${socialKey}.like`,\n        value: {\n          parentId: item.id,\n          [accountId]: !myLike,\n        },\n      }),\n    },\n  });\n};\n\nreturn (\n  <Post>\n    {item.text && (\n      <Header>\n        <div className=\"row\" style={{ width: \"100%\" }}>\n          <div>\n            <div className=\"d-flex gap-3 align-items-center justify-content-between\">\n              <Widget\n                src=\"near/widget/AccountProfile\"\n                props={{\n                  accountId: item.accountId,\n                  hideAccountId: true,\n                }}\n              />\n              {!item.isPreview && (\n                <div className=\"d-flex gap-3 align-items-center justify-content-between\">\n                  <small>{new Date(item.id).toLocaleDateString()}</small>\n                  <Widget\n                    src={\"ndcdev.near/widget/daos.Components.Clipboard\"}\n                    props={{\n                      text: `https://near.org/ndcdev.near/widget/daos.App?page=comments&id=${item.id}`,\n                    }}\n                  />\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </Header>\n    )}\n\n    <Body>\n      {item.text && (\n        <Content>\n          <Widget\n            src={\"ndcdev.near/widget/daos.Components.MarkdownViewer\"}\n            props={{ text: item.text }}\n          />\n        </Content>\n      )}\n      {item.text && item.id && (\n        <Actions>\n          <div\n            role=\"button\"\n            className=\"d-flex gap-2 align-items-center\"\n            onClick={handleLike}\n          >\n            <small>{likes.length}</small>\n            <i\n              style={{ color: liked ? \"#EE9CBF\" : \"#303030\" }}\n              className=\"bi bi-heart-fill\"\n            />\n            Like\n          </div>\n          <div\n            role=\"button\"\n            onClick={() => setShowReply({ [item.id]: !showReply[item.id] })}\n          >\n            <i style={{ color: \"black\" }} className=\"bi bi-chat-fill\" />\n            Reply\n          </div>\n          <div onClick={() => setShowReply({ [item.id]: !showReply[item.id] })}>\n            <i className=\"bi bi-chevron-down fs-5 mt-1\" />\n            Expand Replies\n            <small>({replies.length})</small>\n          </div>\n          <CommentContent>\n            <span>Go to Comment</span>\n            <Link\n              to={`/ndcdev.near/widget/daos.App?page=comments&id=${item.id}`}\n            >\n              <i\n                style={{ color: \"#A4C2FD\" }}\n                class={\"bi bi-box-arrow-up-right\"}\n              />\n            </Link>\n          </CommentContent>\n        </Actions>\n      )}\n\n      {showReply[item.id] && (\n        <Widget\n          src=\"ndcdev.near/widget/daos.Components.CreateReply\"\n          props={{ id: item.id }}\n        />\n      )}\n      {comments.length > 0 && showReply[item.id] && (\n        <div>\n          {comments\n            .filter((repl) => repl.value.parentId === item.id)\n            .map((item) => (\n              <Widget\n                src=\"ndcdev.near/widget/daos.Components.ReplyItem\"\n                props={{ item: item.value, showCreate: false }}\n              />\n            ))}\n        </div>\n      )}\n    </Body>\n  </Post>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/ndcdev.near/widget/daos.Components.ReplyItem", "fact_widget_deployments_id": "9243d8670a1fef8fefe970de799f4a62", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}