{"tx_hash": "4TbCAGZS5TTAA561H5FDKHoRQmxjvz52L49LLRgFFPzT", "action_id_social": "D9vR7jaSaHFsuwxyzBrkwMU2tThFVpKH5Gy7x2v6v16V-0-widget", "block_id": 117514626, "block_timestamp": "2024-04-24T10:16:04.017Z", "signer_id": "ndcdev.near", "widget_name": "daos.Pages.Proposals.List", "source_code": "let { contractName } = VM.require(`ndcdev.near/widget/daos.Config`);\n\nif (!contractName || !Near) return <Widget src=\"flashui.near/widget/Loading\" />;\nconst daos = Near.view(contractName, \"get_dao_list\");\n\nlet { dao_id, type, accountId } = props;\n\nlet items = null;\nlet dao = null;\n\nif (dao_id) {\n  dao = Near.view(contractName, \"get_dao_by_handle\", {\n    handle: dao_id,\n  });\n\n  if (!dao) <Widget src=\"flashui.near/widget/Loading\" />;\n\n  items = Near.view(contractName, \"get_dao_posts\", {\n    dao_id: dao.id,\n    page: 0,\n    limit: 100,\n  });\n\n  if (dao.owners.includes(context.accountId)) {\n    const inReviewItems = Near.view(contractName, \"get_dao_posts\", {\n      dao_id: dao.id,\n      page: 0,\n      limit: 100,\n      status: \"InReview\",\n    });\n\n    if (items) {\n      items = [...items, ...inReviewItems];\n    }\n  }\n} else if (accountId) {\n  items = Near.view(contractName, \"get_posts_by_author\", {\n    author: accountId,\n    page: 0,\n    limit: 100,\n  });\n\n  if (items && items.length === 0) {\n    items = Near.view(contractName, \"get_all_posts\", { page: 0, limit: 100 });\n    accountId = null;\n  }\n} else\n  items = Near.view(contractName, \"get_all_posts\", { page: 0, limit: 100 });\n\nif (!items) return <Widget src=\"flashui.near/widget/Loading\" />;\n\nconst Table = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 1rem 0 3rem 0;\n\n  .created {\n    color: #5c656a;\n    font-size: 14px;\n    font-style: normal;\n    font-weight: 500;\n    line-height: normal;\n  }\n\n  .account-link {\n    color: #4855fc;\n  }\n\n  @media screen and (max-width: 768px) {\n    display: none;\n  }\n`;\n\nconst TableHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  background: #f8f8f8;\n  padding: 10px 16px;\n  jusify-content: flex-start;\n`;\n\nconst TableHeaderCell = styled.div`\n  padding: 0 0 0 10px;\n  display: flex;\n  flex: ${(props) => props.flex || 1};\n`;\n\nconst Mobile = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 2rem;\n  width: 100%;\n\n  @media screen and (min-width: 768px) {\n    display: none;\n  }\n`;\n\nconst Select = styled.select`\n  border: none;\n  max-width: 150px;\n  height: 100%;\n  background: #f8f8f8;\n\n  @media screen and (max-width: 768px) {\n    background: unset;\n    min-width: 100%;\n    font-size: 22px;\n  }\n`;\n\nconst MobileHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  gap: 1rem;\n  align-items: center;\n`;\n\nconst FilterButton = styled.div`\n  display: flex;\n  width: 50px;\n  height: 50px;\n  padding: 10px;\n  justify-content: center;\n  align-items: center;\n  border-radius: 95.238px;\n  border: 0.952px solid\n    var(--NEAR-Primary-Colors-Off-White-Variation-1, #f0efe7);\n  background: var(--Primary-Base-White, #fff);\n`;\n\nconst MobileTitle = styled.div`\n  color: var(--NEAR-Primary-Colors-Black-Variation-1, #000);\n  font-family: \"FK Grotesk\";\n  font-size: 20px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n`;\n\nconst FiltersContainer = styled.div`\n  display: flex;\n  height: 768px;\n  width: 100%\n  padding: 64px 16px 48px 16px;\n  flex-direction: column;\n  align-items: center;\n  gap: 32px;\n  flex-shrink: 0;\n  border-radius: 14px 14px 0px 0px;\n  background: var(--Primary-Base-White, #FFF);\n  box-shadow: 0px -305px 85px 0px rgba(0, 0, 0, 0.00), 0px -195px 78px 0px rgba(0, 0, 0, 0.00), 0px -110px 66px 0px rgba(0, 0, 0, 0.01), 0px -49px 49px 0px rgba(0, 0, 0, 0.01), 0px -12px 27px 0px rgba(0, 0, 0, 0.02);\n`;\n\nconst HeaderFilter = styled.div`\n  width: 100%;\n  padding: 1rem;\n`;\n\nconst [filteredDao, useFilteredDao] = useState(false);\nconst [filteredStatus, useFilteredStatus] = useState(false);\n\nconst handleFilterDaoChange = (e) => {\n  if (e.target.value === \"all\") {\n    useFilteredDao(false);\n  } else {\n    useFilteredDao(e.target.value);\n  }\n};\n\nconst handleFilterStatusChange = (e) => {\n  if (e.target.value === \"all\") {\n    useFilteredStatus(false);\n  } else {\n    useFilteredStatus(e.target.value);\n  }\n};\n\nconst [preparedItems, setPreparedItems] = useState(items);\n\nif (items) {\n  setPreparedItems(\n    items\n      .sort((a, b) => b.created_at - a.created_at)\n      .filter((item) => {\n        if (filteredDao) {\n          return item.dao_id === parseInt(filteredDao);\n        }\n        return item;\n      })\n      .filter((item) => {\n        if (filteredStatus) {\n          return item.status === filteredStatus;\n        }\n        return item;\n      }),\n  );\n}\n\nconst statuses = [\n  { key: \"InReview\", value: \"In Review\" },\n  { key: \"New\", value: \"New\" },\n  { key: \"Approved\", value: \"Approved\" },\n  { key: \"Rejected\", value: \"Rejected\" },\n  { key: \"Closed\", value: \"Closed\" },\n];\n\nconst [showMobileFilter, setShowMobileFilter] = useState(false);\n\nconst handleMobileFilter = () => {\n  setShowMobileFilter(!showMobileFilter);\n};\n\nif (!preparedItems) return <Widget src=\"flashui.near/widget/Loading\" />;\n\nreturn (\n  <>\n    <Table>\n      <TableHeader>\n        <TableHeaderCell flex={0.7}>\n          <div className=\"d-flex justify-content-between\">\n            <div>Status</div>\n            <Select value={filteredStatus} onChange={handleFilterStatusChange}>\n              <option value=\"all\">All</option>\n              {statuses.map((status, index) => (\n                <option key={index} value={status.key}>\n                  {status.value}\n                </option>\n              ))}\n            </Select>\n          </div>\n        </TableHeaderCell>\n        <TableHeaderCell flex={2.5}>\n          <div className=\"d-flex justify-content-between\">\n            <div>DAO</div>\n            <Select value={filteredDao} onChange={handleFilterDaoChange}>\n              <option value=\"all\">All</option>\n              {daos.map((dao, index) => (\n                <option key={index} value={dao.id}>\n                  {dao.title}\n                </option>\n              ))}\n            </Select>\n          </div>\n        </TableHeaderCell>\n        <TableHeaderCell flex={2}> Modified </TableHeaderCell>\n        <TableHeaderCell flex={5.5}>Proposals states</TableHeaderCell>\n        <TableHeaderCell></TableHeaderCell>\n        <TableHeaderCell></TableHeaderCell>\n      </TableHeader>\n\n      {preparedItems.length === 0 ? (\n        <div className=\"w-100 my-5 d-flex justify-content-center align-tems-center\">\n          <h1>No active Reports</h1>\n        </div>\n      ) : (\n        preparedItems.map((row, index) => (\n          <div key={row.title}>\n            <Widget\n              src=\"ndcdev.near/widget/daos.Components.Post\"\n              props={{ item: row, index, type, rowId: row.id }}\n            />\n          </div>\n        ))\n      )}\n    </Table>\n    <Mobile>\n      <>\n        <MobileHeader>\n          <MobileTitle>All Proposals</MobileTitle>\n          <FilterButton onClick={handleMobileFilter}>\n            <i class=\"ph ph-funnel\"></i>\n          </FilterButton>\n        </MobileHeader>\n        {showMobileFilter ? (\n          <FiltersContainer>\n            <HeaderFilter className=\"d-flex justify-content-between\">\n              <MobileTitle>Filters</MobileTitle>\n              <MobileTitle\n                onClick={() => setShowMobileFilter(!showMobileFilter)}\n              >\n                <i class=\"ph ph-x\"></i>\n              </MobileTitle>\n            </HeaderFilter>\n            <HeaderFilter>\n              <MobileTitle>Status</MobileTitle>\n              <Select\n                value={filteredStatus}\n                onChange={handleFilterStatusChange}\n              >\n                <option value=\"all\">All</option>\n                {statuses.map((status, index) => (\n                  <option key={index} value={status.key}>\n                    {status.value}\n                  </option>\n                ))}\n              </Select>\n            </HeaderFilter>\n            <HeaderFilter>\n              <MobileTitle>DAO</MobileTitle>\n              <Select value={filteredDao} onChange={handleFilterDaoChange}>\n                <option value=\"all\">All</option>\n                {daos.map((dao, index) => (\n                  <option key={index} value={dao.id}>\n                    {dao.title}\n                  </option>\n                ))}\n              </Select>\n            </HeaderFilter>\n          </FiltersContainer>\n        ) : preparedItems.length === 0 ? (\n          <div className=\"w-100 my-5 d-flex justify-content-center align-tems-center\">\n            <h1>No active Reports</h1>\n          </div>\n        ) : (\n          preparedItems.map((row, index) => (\n            <div key={row.title}>\n              <Widget\n                src=\"ndcdev.near/widget/daos.Components.Post\"\n                props={{\n                  item: row,\n                  index,\n                  type,\n                  rowId: row.id,\n                  isMobile: true,\n                }}\n              />\n            </div>\n          ))\n        )}\n      </>\n    </Mobile>\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/ndcdev.near/widget/daos.Pages.Proposals.List", "fact_widget_deployments_id": "6607dbaaeb42848fb84d1f172c8ecfa5", "inserted_timestamp": "2024-04-24T12:44:16.303Z", "modified_timestamp": "2024-04-24T12:44:16.303Z", "__row_index": 28}