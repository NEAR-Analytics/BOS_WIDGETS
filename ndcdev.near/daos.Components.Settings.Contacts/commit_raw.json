{"tx_hash": "6jMEVPpbhzQPP3n9dhXNi3uo3BuPM2DcjG7XfWnkggxB", "action_id_social": "G85oGhcKJxFFna7gVi8phq7FjvwNhjDZhZmhWge3fLgh-0-widget", "block_id": 117945457, "block_timestamp": "2024-04-30T10:44:40.891Z", "signer_id": "ndcdev.near", "widget_name": "daos.Components.Settings.Contacts", "source_code": "let { content, contractName } = VM.require(\n  `ndcdev.near/widget/daos.Config`\n);\nif (!contractName || !content)\n  return <Widget src=\"flashui.near/widget/Loading\" />;\n\nconst { selectedDao } = props;\n\nconst Form = styled.div`\n  border-radius: 20px;\n  background: white;\n\n  label {\n    font-size: 14px;\n    margin-bottom: 5px;\n  }\n\n  .form-control.error {\n    border: 1px solid red;\n  }\n\n  .header {\n    border-radius: 6px;\n    padding: 8px 14px;\n    border-bottom: 1px solid #e3e3e0;\n  }\n`;\n\nconst Contact = styled.div`\n  display: flex;\n  flex-direction: row;\n\n  .form-element {\n    width: 100%;\n  }\n\n  @media screen and (max-width: 768px) {\n    flex-direction: column;\n  }\n`;\n\nconst POC = styled.div`\n  border-radius: 6px;\n  padding: 8px 14px;\n  border-bottom: 1px solid #e3e3e0;\n  color: \"#000\";\n\n  i {\n    color: #000;\n  }\n`;\n\nconst [daoContactsName, setDaoContactsName] = useState(\"\");\nconst [daoContactsTg, setDaoContactsTg] = useState(\"\");\n\nconst [daoContacts, setDaoContacts] = useState({});\n\nuseEffect(() => {\n  if (selectedDao) {\n    setDaoContacts(\n      selectedDao.metadata.contacts\n        ? JSON.parse(selectedDao.metadata.contacts)\n        : {}\n    );\n  }\n}, [selectedDao]);\n\nconst handleAddPOC = () => {\n  if (daoContactsName === \"\" && daoContactsTg === \"\") return;\n\n  const poc = [\n    ...(daoContacts.poc ?? []),\n    ...[\n      {\n        name: daoContactsName,\n        tg: daoContactsTg,\n      },\n    ],\n  ];\n\n  daoContacts.poc = poc;\n  setDaoContacts(daoContacts);\n  setDaoContactsTg(\"\");\n  setDaoContactsName(\"\");\n};\n\nconst handleSave = () => {\n  Near.call(contractName, \"edit_dao\", {\n    id: selectedDao.id,\n    body: {\n      title: selectedDao.title,\n      handle: selectedDao.handle,\n      dao_type: selectedDao.dao_type,\n      description: selectedDao.description,\n      logo_url: selectedDao.logo_url,\n      banner_url: selectedDao.banner_url,\n      account_id: selectedDao.account_id,\n    },\n    verticals: selectedDao.verticals,\n    metrics: selectedDao.metrics,\n    metadata: {\n      ...selectedDao.metadata,\n      contacts: JSON.stringify(daoContacts),\n    },\n  });\n};\n\nreturn (\n  <Form className=\"d-flex flex-column gap-3\">\n    <div className=\"form-element\">\n      <label className=\"form-label\">Website</label>\n      <input\n        className=\"form-control\"\n        type=\"text\"\n        value={daoContacts.website}\n        onChange={(e) => {\n          daoContacts.website = e.target.value;\n          setDaoContacts(daoContacts);\n        }}\n      />\n    </div>\n\n    <div className=\"form-element\">\n      <label className=\"form-label\">Admin wallet</label>\n      <input\n        className=\"form-control\"\n        type=\"text\"\n        value={daoContacts.admin}\n        onChange={(e) => {\n          daoContacts.admin = e.target.value;\n          setDaoContacts(daoContacts);\n        }}\n      />\n    </div>\n\n    <div className=\"form-element\">\n      <label className=\"form-label\">DAO Telegram</label>\n      <input\n        className=\"form-control\"\n        type=\"text\"\n        value={daoContacts.tg}\n        onChange={(e) => {\n          daoContacts.tg = e.target.value;\n          setDaoContacts(daoContacts);\n        }}\n      />\n    </div>\n\n    <div className=\"form-element\">\n      <label className=\"form-label\">DAO X (Twitter)</label>\n      <input\n        className=\"form-control\"\n        type=\"text\"\n        value={daoContacts.twitter}\n        onChange={(e) => {\n          daoContacts.twitter = e.target.value;\n          setDaoContacts(daoContacts);\n        }}\n      />\n    </div>\n\n    <Widget\n      src=\"ndcdev.near/widget/daos.Components.PageTitle\"\n      props={{ text: \"Point of Contacts\" }}\n    />\n\n    {daoContacts?.poc && daoContacts?.poc.length > 0 && (\n      <div className=\"mb-4 d-flex flex-column\">\n        <div className=\"header d-flex gap-3 justify-content-between align-items-center\">\n          <div className=\"gap-3 d-flex w-100 justify-content-between align-items-center\">\n            <b>Name</b>\n            <b>Telegram</b>\n          </div>\n          <div className=\"w-25 d-flex justify-content-end\">\n            <b>Actions</b>\n          </div>\n        </div>\n        {daoContacts.poc.map((poc) => (\n          <POC>\n            <div className=\"d-flex gap-3 justify-content-between align-items-center\">\n              <div className=\"gap-3 d-flex  w-100 justify-content-between align-items-center\">\n                <span>{poc.name}</span>\n                {poc.tg && (\n                  <a href={`https://t.me/${poc.tg.replace(\"@\", \"\")}`}>\n                    <i className=\"ph ph-telegram-logo\" />\n                    {poc.tg.replace(\"@\", \"\")}\n                  </a>\n                )}\n              </div>\n              <div className=\"w-25 d-flex justify-content-end\">\n                <i\n                  role=\"button\"\n                  className=\"bi bi-x-lg\"\n                  onClick={() =>\n                    setDaoContacts({\n                      ...daoContacts,\n                      poc: daoContacts.poc.filter((p) => p.tg != poc.tg),\n                    })\n                  }\n                />\n              </div>\n            </div>\n          </POC>\n        ))}\n      </div>\n    )}\n    <Contact className=\"w-100 gap-2\">\n      <div className=\"w-100 d-flex gap-2\">\n        <div className=\"form-element\">\n          <label className=\"form-label\">Name</label>\n          <input\n            className=\"form-control\"\n            type=\"text\"\n            value={daoContactsName}\n            onChange={(e) => setDaoContactsName(e.target.value)}\n          />\n        </div>\n        <div className=\"form-element\">\n          <label className=\"form-label\">Telegram handle</label>\n          <input\n            className=\"form-control\"\n            placeholder=\"@tg_handle\"\n            type=\"text\"\n            value={daoContactsTg}\n            onChange={(e) => setDaoContactsTg(e.target.value)}\n          />\n        </div>\n      </div>\n      <div className=\"form-element d-flex align-items-end\">\n        <button\n          className=\"btn btn-secondary\"\n          disabled={daoContactsName === \"\" && daoContactsTg === \"\"}\n          onClick={handleAddPOC}\n        >\n          <i className=\"ph ph-plus fs-5\" />\n          Add POC\n        </button>\n      </div>\n    </Contact>\n\n    <button className=\"btn btn-primary\" onClick={handleSave}>\n      <i className=\"ph ph-pencil-simple fs-5\" />\n      Save\n    </button>\n  </Form>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/ndcdev.near/widget/daos.Components.Settings.Contacts", "fact_widget_deployments_id": "bc71ae531577a57348bdc572936c8144", "inserted_timestamp": "2024-04-30T12:47:49.607Z", "modified_timestamp": "2024-04-30T12:47:49.607Z", "__row_index": 5}