{"tx_hash": "DVNingKJpXmrSzQ45at9bAzJpjZf1TZKDbQgbFNMiTPj", "action_id_social": "Ap3ang8SQ14Zqv8WHw36ER2YmXmFXDaQVy3QNSPw7FZZ-0-widget", "block_id": 116186324, "block_timestamp": "2024-04-05T15:02:25.508Z", "signer_id": "ndcdev.near", "widget_name": "Dashboard.Components.Chart", "source_code": "const { data, key } = props;\n\nconst Card = styled.div`\n  background: ${(props) => (props.isWhiteBackground ? \"#000000\" : \"#fffff\")};\n  width: 100%;\n  text-align: center;\n`;\n\nconst Loading = () => <Widget src=\"flashui.near/widget/Loading\" />;\n\nconst chartData = props.chartData ?? {\n  labels: data.map((item) => item.day),\n  datasets: [\n    {\n      backgroundColor: gradient,\n      data: data.map((item) => item[key]),\n    },\n  ],\n};\n\nconst code = `\n<html>\n<head>\n<script src=\"https://unpkg.com/chart.js@4.3.0/dist/chart.umd.js\"></script>\n<script type=\"text/javascript\" src=\"https://cdnjs.cloudflare.com/ajax/libs/iframe-resizer/4.3.6/iframeResizer.contentWindow.js\"></script>\n</head>\n<body>\n<canvas id=\"myChart\"></canvas>\n</body>\n<script>\n  const ctx = document.getElementById('myChart').getContext('2d');\n  var gradient = ctx.createLinearGradient(0, 0, 0, 400);\n  gradient.addColorStop(0.7, '#A39ACD');\n  gradient.addColorStop(0, '#5398DD');\n\n var formatNumber = (num)  => {\n     if (num >= 1e9) { // For billions\n         return (num % 1e9 === 0 ? (num / 1e9).toFixed(0) : (num / 1e9).toFixed(1)) + 'b';\n     }\n     if (num >= 1e6) { // For millions\n         return (num % 1e6 === 0 ? (num / 1e6).toFixed(0) : (num / 1e6).toFixed(1)) + 'm';\n     }\n     if (num >= 1e3) { // For thousands\n         return (num % 1e3 === 0 ? (num / 1e3).toFixed(0) : (num / 1e3).toFixed(1)) + 'k';\n     }\n     return num.toString(); // For numbers less than 1000\n }\n\n    function createChart(ctx, data, options) {\n        new Chart(ctx, {\n            data: {\n                  labels: data.labels,\n                  datasets: [{\n                        data: data.datasets[0].data,\n                        backgroundColor: gradient,\n                        borderWidth: 0\n                    }]      \n            },\n            type: \"bar\",\n            options: {\n            responsive: true,\n            plugins: {\n              legend: {\n                display: false\n              },\n            },\n            scales: {\n              x: {\n                grid: {\n                  display: false\n                }\n              },\n              y: {\n                beginAtZero: true,\n                ticks: {\n                  callback: function(value, index, values) {\n                             return formatNumber(value);\n                  },\n                  font: {\n                    weight: '750',\n                    size: '15px'\n                  }\n                },\n                grid: {\n                  display: false\n                }\n              }\n            }\n          }\n        });\n    }\n\n    window.addEventListener('message', function(event) {\n    }, false);\n\n    const handleMessage = (m) => {\n        const { data, options } = m;\n        \n        createChart(ctx, data, options);\n    };\n\n    window.iFrameResizer = {\n        onMessage: handleMessage\n    }\n</script>\n</html>\n`;\n\nreturn (\n  <div className=\"section py-5\">\n    <Card>\n      <div>{props.title}</div>\n      {props.loading ? (\n        <div className=\"w-100 py-5 d-flex justify-content-center align-items-center\">\n          <Loading />\n        </div>\n      ) : chartData.datasets[0].data.length ? (\n        <iframe iframeResizer srcDoc={code} message={{ data: chartData }} />\n      ) : (\n        <div\n          className=\"w-100 py-5 d-flex justify-content-center align-items-center\"\n          style={{ fontSize: \"60px\" }}\n        >\n          n/a\n        </div>\n      )}\n    </Card>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/ndcdev.near/widget/Dashboard.Components.Chart", "fact_widget_deployments_id": "ba73c1321171d57bdebc165c49a1b071", "inserted_timestamp": "2024-04-05T16:42:22.548Z", "modified_timestamp": "2024-04-05T16:42:22.548Z", "__row_index": 0}