{"tx_hash": "3HZb85i41gzPJKsfeV79KfBFSZUtLcNf375jH25Fnv9g", "action_id_social": "G9ovbd3k77MdGsRB38KB49pQQejsaj1wzHLLii48M5yo-0-widget", "block_id": 113756545, "block_timestamp": "2024-02-28T14:34:08.956Z", "signer_id": "ndcdev.near", "widget_name": "daos.Components.MetricsDisplay.index", "source_code": "const { daos, totalTreasury, deliverTreasury, typeOfProject } = props;\nconst { Items } = VM.require(\n  `ndcdev.near/widget/daos.Components.MetricsDisplay.styled`,\n);\n\nif (!Items || !daos) return <Widget src=\"flashui.near/widget/Loading\" />;\n\nconst baseUrl = \"https://api.pikespeak.ai\";\n// const [totalTreasury, setTotalTreasury] = useState(null);\nconst [loading, setLoading] = useState(false);\n\n// const getTotalTreasury = async (accountId) => {\n//   try {\n//     return asyncFetch(`${baseUrl}/account/balance/${accountId}`, {\n//       method: \"GET\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//         \"x-api-key\": \"36f2b87a-7ee6-40d8-80b9-5e68e587a5b5\",\n//       },\n//     });\n//   } catch (e) {\n//     console.log(e);\n//   }\n// };\n\n// const fetchDaoFunds = async () => {\n//   const totalDAOTreasuryAmount = 0;\n\n//   const promises = daos.flatMap((dao) =>\n//     getTotalTreasury(dao.account_id).then((resp) => {\n//       if (!resp.body) return;\n\n//       const data = resp.body;\n//       if (data) {\n//         totalDAOTreasuryAmount +=\n//           data.find((d) => d.contract === \"Near\")?.amount ?? 0;\n//       }\n//     }),\n//   );\n\n//   Promise.all(promises).then(() => {\n//     setTotalTreasury(totalDAOTreasuryAmount);\n//     setLoading(false);\n//   });\n// };\n\n// fetchDaoFunds();\n\nreturn (\n  <Items>\n    <Widget\n      src={`ndcdev.near/widget/daos.Components.MetricsDisplay.Item`}\n      props={{ value: totalTreasury, text: props.text.totalTreasury, loading }}\n    />\n    <Widget\n      src={`ndcdev.near/widget/daos.Components.MetricsDisplay.Item`}\n      props={{\n        value: deliverTreasury,\n        text: props.text.deliverTreasury,\n      }}\n    />\n    <Widget\n      src={`ndcdev.near/widget/daos.Components.MetricsDisplay.Item`}\n      props={{\n        value: typeOfProject,\n        text: props.text.typeOfProject,\n        type: \"list\",\n      }}\n    />\n  </Items>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/ndcdev.near/widget/daos.Components.MetricsDisplay.index", "fact_widget_deployments_id": "30c47bbea60a8b53322f5965909fd56f", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 8}