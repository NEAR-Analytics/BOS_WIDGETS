{"tx_hash": "HyJ8ebD2BWsz2BZiHgbseMtdtmswTsW7BAhFowJ1EdWq", "action_id_social": "Dj3LNFm3Yd5ZhBry9RM6HuQgvLPArebt9aPvP8WsLSYr-0-widget", "block_id": 111703763, "block_timestamp": "2024-01-30T16:46:13.220Z", "signer_id": "ndcdev.near", "widget_name": "MDAO.Components.ReplyItem", "source_code": "// Copy of old version of src/Posts/Post.jsx\nconst { item, showCreate } = props;\nconst accountId = context.accountId;\n\nconst Post = styled.div`\n  position: relative;\n\n  &::before {\n    content: \"\";\n    display: ${showCreate ? \"none\" : \"block\"};\n    position: absolute;\n    left: 19px;\n    top: 52px;\n    bottom: 12px;\n    width: 2px;\n    background: #eceef0;\n  }\n`;\n\nconst Header = styled.div`\n  margin-bottom: 0;\n  display: inline-flex;\n`;\n\nconst Body = styled.div`\n  padding-left: ${showCreate ? \"0\" : \"50px\"};\n  padding-bottom: 5px;\n`;\n\nconst Content = styled.div`\n  img {\n    display: block;\n    max-width: 100%;\n    max-height: 80vh;\n    margin: 0 0 12px;\n  }\n`;\n\nconst Text = styled.p`\n  display: block;\n  margin: 0;\n  font-size: 14px;\n  line-height: 20px;\n  font-weight: 400;\n  color: #687076;\n  white-space: nowrap;\n`;\n\nconst Actions = styled.div`\n  display: flex;\n  color: rgb(150 150 150);\n  align-items: center;\n  gap: 15px;\n  margin: -3px 0 10px 0;\n`;\n\nconst Comments = styled.div`\n  > div > div:first-child {\n    padding-top: 12px;\n  }\n`;\n\nconst [showMore, setShowMore] = useState(null);\nconst [liked, setLiked] = useState(false);\nconst [showReply, setShowReply] = useState({ [item.id]: showCreate });\n\nconst comments = Social.index(\"graph\", \"v3.ndc.mdao.reply\", { order: \"desc\" });\nlet likes = Social.index(\"graph\", \"v3.ndc.mdao.like\", { order: \"desc\" });\nlikes = likes ? likes.filter((like) => like.value.parentId === item.id) : [];\nconst myLike = likes ? likes.some((like) => like.value[accountId]) : false;\nsetLiked(myLike);\n\nconst [replies, setReplies] = useState([]);\nreplies = comments\n  ? comments.filter((repl) => repl.value.parentId === item.id)\n  : [];\nsetReplies(replies);\n\nconst handleLike = () => {\n  Social.set({\n    index: {\n      graph: JSON.stringify({\n        key: \"v3.ndc.mdao.like\",\n        value: {\n          parentId: item.id,\n          [accountId]: !myLike,\n        },\n      }),\n    },\n  });\n};\n\nreturn (\n  <Post>\n    {item.text && (\n      <Header>\n        <div className=\"row\">\n          <div className=\"col-auto\">\n            <div className=\"d-flex gap-3 align-items-center\">\n              <Widget\n                src=\"near/widget/AccountProfile\"\n                props={{\n                  accountId: item.accountId,\n                  hideAccountId: true,\n                }}\n              />\n              <div className=\"text-secondary\">\n                <small>\n                  <i className=\"bi bi-clock\" />\n                  {new Date(item.id).toLocaleDateString()}\n                </small>\n              </div>\n            </div>\n          </div>\n        </div>\n      </Header>\n    )}\n\n    <Body>\n      {item.text && (\n        <Content>\n          <Widget\n            src=\"near/widget/SocialMarkdown\"\n            props={{ text: item.text }}\n          />\n        </Content>\n      )}\n      {item.text && item.id && (\n        <Actions>\n          <div\n            role=\"button\"\n            className=\"d-flex gap-2 align-items-center\"\n            onClick={handleLike}\n          >\n            <small>{likes.length}</small>\n            <i className=\"bi bi-heart\" />\n          </div>\n          <div\n            role=\"button\"\n            onClick={() => setShowReply({ [item.id]: !showReply[item.id] })}\n          >\n            <small>{replies.length}</small>\n            <i className=\"bi bi-chat\" />\n          </div>\n          <div>\n            <Link\n              to={`/ndcdev.near/widget/MDAO.App?page=comments&id=${item.id}`}\n            >\n              <i class=\"bi bi-link-45deg fs-5\" />\n            </Link>\n          </div>\n        </Actions>\n      )}\n\n      {showReply[item.id] && (\n        <Widget\n          src=\"ndcdev.near/widget/MDAO.Components.CreateReply\"\n          props={{ id: item.id }}\n        />\n      )}\n      {comments.length > 0 && (\n        <div>\n          {comments\n            .filter((repl) => repl.value.parentId === item.id)\n            .map((item) => (\n              <Widget\n                src=\"ndcdev.near/widget/MDAO.Components.ReplyItem\"\n                props={{ item: item.value, showCreate: false }}\n              />\n            ))}\n        </div>\n      )}\n    </Body>\n  </Post>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/ndcdev.near/widget/MDAO.Components.ReplyItem", "fact_widget_deployments_id": "7086ddc05c1b1d032da61740c37f3bc6", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 4}