{"tx_hash": "DHd3bin2MKyhbBz2b6uVSKuvxo6FjWFj1eKjg5g3Ue64", "action_id_social": "GWfaSVosdARj8mPEaD7vryvYbGNJQLqnXxJ2ZtFgCZfz-0-widget", "block_id": 116681851, "block_timestamp": "2024-04-12T11:46:23.626Z", "signer_id": "ndcdev.near", "widget_name": "daos.Components.Settings.Communities", "source_code": "let { contractName } = VM.require(`ndcdev.near/widget/daos.Config`);\nif (!contractName) return <Widget src=\"flashui.near/widget/Loading\" />;\n\nconst { selectedDao } = props;\n\nconst Form = styled.div`\n  border-radius: 20px;\n  background: white;\n  padding: 3rem;\n\n  label {\n    font-size: 14px;\n    margin-bottom: 5px;\n  }\n\n  .form-control.error {\n    border: 1px solid red;\n  }\n\n  .title {\n    b {\n      font-weight: 600;\n    }\n    font-weight: 300;\n\n    a {\n      text-decoration: underline;\n    }\n  }\n\n  .caret {\n    width: 25px;\n  }\n\n  .header {\n    border-radius: 6px;\n    padding: 8px 14px;\n    border-bottom: 1px solid #e3e3e0;\n  }\n\n  @media screen and (max-width: 768px) {\n    padding: 1rem;\n  }\n`;\n\nconst Project = styled.div`\n  border-radius: 6px;\n  padding: 8px 14px;\n  border-bottom: 1px solid #e3e3e0;\n  color: ${(props) => (props.active ? \"#000\" : \"rgb(125 125 125)\")};\n  background: ${(props) => (props.active ? \"\" : \"#F8F8F8\")};\n\n  i {\n    color: #000;\n  }\n`;\n\nconst AutoComplete = styled.div`\n  margin: 5px 0;\n`;\n\nconst [editedProjectId, setEditedProjectId] = useState(false);\n\nconst [daoProjects, setDAOProjects] = useState([]);\nconst [handle, setHandle] = useState(\"\");\nconst [title, setTitle] = useState(\"\");\nconst [description, setDescription] = useState(\"\");\nconst [logoUrl, setLogoUrl] = useState(\"\");\nconst [bannerUrl, setBannerUrl] = useState(\"\");\nconst [accounts, setAccounts] = useState(\"\");\nconst [owners, setOwners] = useState(\"\");\nconst [verticals, setVerticals] = useState(\"\");\nconst [metadata, setMetadata] = useState({});\n\nconst projects = Near.view(contractName, \"get_dao_communities\", {\n  dao_list: [selectedDao.id],\n});\n\nuseEffect(() => {\n  if (projects && daoProjects.length === 0) setDAOProjects(projects);\n}, [projects]);\n\nfunction handleChange(e) {\n  const value = e.target.value;\n\n  setMemberText(value);\n}\n\nconst handleSave = () => {\n  Near.call(contractName, \"add_community\", {\n    dao_id: selectedDao.id,\n    community_input: {\n      handle,\n      title,\n      description,\n      logo_url: logoUrl,\n      banner_url: bannerUrl,\n      accounts: accounts.length > 0 ? accounts.split(\",\") : [],\n    },\n    owners: owners.length > 0 ? owners.split(\",\") : [],\n    verticals: verticals.length > 0 ? verticals.split(\",\") : [],\n    metadata,\n  });\n};\n\nconst handleEdit = () => {\n  Near.call(contractName, \"edit_community\", {\n    id: editedProjectId,\n    title,\n    description,\n    logo_url: logoUrl,\n    banner_url: bannerUrl,\n    owners: owners.split(\",\"),\n    verticals: verticals.split(\",\"),\n    accounts: accounts.split(\",\"),\n    metadata,\n  });\n};\n\nconst handleChangeStatus = (project) => {\n  Near.call(contractName, \"change_community_status\", {\n    id: project.id,\n    status: project.status === \"Active\" ? \"Inactive\" : \"Active\",\n  });\n};\n\nreturn (\n  <Form className=\"d-flex flex-column gap-3\">\n    <div>\n      <h2>Community List</h2>\n      <small>* inactive projects will be hidden from public view</small>\n    </div>\n    <div className=\"mb-4 d-flex flex-column\">\n      <div className=\"header d-flex justify-content-between align-items-center\">\n        <div className=\"w-75\">\n          <b>Community Name</b>\n        </div>\n        <b>Status</b>\n        <b>Actions</b>\n      </div>\n      {daoProjects.flatMap((project) => (\n        <Project active={project.status === \"Active\"}>\n          <div className=\"d-flex justify-content-between align-items-center\">\n            <div className=\"d-flex gap-2 align-items-center w-75\">\n              <img\n                style={{\n                  width: \"25px\",\n                  height: \"25px\",\n                  borderRadius: \"100%\",\n                }}\n                src={project.logo_url}\n              />\n              <span>{project.title}</span>\n            </div>\n            <div>{project.status}</div>\n            <div className=\"d-flex gap-3 align-items-center\">\n              <i\n                role=\"button\"\n                className=\"ph ph-pencil-simple\"\n                onClick={() => {\n                  setTitle(project.title);\n                  setHandle(project.handle);\n                  setAccounts(project.accounts.join(\",\"));\n                  setDescription(project.description);\n                  setLogoUrl(project.logo_url);\n                  setBannerUrl(project.banner_url);\n                  setOwners(project.owners.join(\",\"));\n                  setVerticals(project.verticals.join(\",\"));\n                  setMetadata(project.metadata);\n                  setEditedProjectId(project.id);\n                }}\n              />\n              <i\n                role=\"button\"\n                className={\n                  project.status === \"Active\" ? \"ph ph-eye\" : \"ph ph-eye-slash\"\n                }\n                onClick={() => handleChangeStatus(project)}\n              />\n            </div>\n          </div>\n        </Project>\n      ))}\n    </div>\n    <div className=\"form-element\">\n      <h3>{editedProjectId ? \"Edit\" : \"Add new\"} Community</h3>\n      <div className=\"d-flex flex-column gap-2\">\n        <div>\n          <label className=\"form-label\">Community Title *</label>\n          <input\n            className=\"form-control\"\n            placeholder=\"Title\"\n            type=\"text\"\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n          />\n        </div>\n        <div>\n          <label className=\"form-label\">Community Handle *</label>\n          <input\n            className=\"form-control\"\n            disabled={editedProjectId}\n            placeholder=\"Handle\"\n            type=\"text\"\n            value={handle}\n            onChange={(e) => setHandle(e.target.value)}\n          />\n        </div>\n        <div>\n          <label className=\"form-label\">Contracts (separated by coma) *</label>\n          <input\n            className=\"form-control\"\n            placeholder=\"Contracts (separated by coma)\"\n            type=\"text\"\n            value={accounts}\n            onChange={(e) => setAccounts(e.target.value)}\n          />\n        </div>\n        <div>\n          <label className=\"form-label\">\n            Community Owners (separated by coma)\n          </label>\n          <input\n            className=\"form-control\"\n            placeholder=\"Community Owners (separated by coma)\"\n            type=\"text\"\n            value={owners}\n            onChange={(e) => setOwners(e.target.value)}\n          />\n        </div>\n        <div>\n          <label className=\"form-label\">Verticals (separated by coma)</label>\n          <input\n            className=\"form-control\"\n            placeholder=\"Verticals (separated by coma)\"\n            type=\"text\"\n            value={verticals}\n            onChange={(e) => setVerticals(e.target.value)}\n          />\n        </div>\n        <div>\n          <label className=\"form-label\">Website</label>\n          <input\n            className=\"form-control\"\n            placeholder=\"Title\"\n            type=\"text\"\n            value={metadata.website}\n            onChange={(e) =>\n              setMetadata({ ...metadata, website: e.target.value })\n            }\n          />\n        </div>\n        <div>\n          <label className=\"form-label\">Description</label>\n          <textarea\n            className=\"form-control\"\n            placeholder=\"Description\"\n            type=\"text\"\n            value={description}\n            onChange={(e) => setDescription(e.target.value)}\n          />\n        </div>\n        <div>\n          <label className=\"form-label\">Logo URL</label>\n          <input\n            className=\"form-control\"\n            placeholder=\"Logo URL\"\n            type=\"text\"\n            value={logoUrl}\n            onChange={(e) => setLogoUrl(e.target.value)}\n          />\n        </div>\n        <div>\n          <label className=\"form-label\">Banner URL</label>\n          <input\n            className=\"form-control\"\n            placeholder=\"Banner URL\"\n            type=\"text\"\n            value={bannerUrl}\n            onChange={(e) => setBannerUrl(e.target.value)}\n          />\n        </div>\n      </div>\n    </div>\n\n    <button\n      className=\"btn btn-primary\"\n      onClick={() => {\n        editedProjectId ? handleEdit() : handleSave();\n      }}\n    >\n      <i className=\"ph ph-pencil-simple fs-5\" />\n      Save\n    </button>\n  </Form>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/ndcdev.near/widget/daos.Components.Settings.Communities", "fact_widget_deployments_id": "f27eebc2ef8c1d24e323be5f714ff7ae", "inserted_timestamp": "2024-04-12T12:36:01.029Z", "modified_timestamp": "2024-04-12T12:36:01.029Z", "__row_index": 4}