{"tx_hash": "2qeWDpY4DyckeRn5suYMnywh4LXBJTeFVshethpH2gkR", "action_id_social": "AwJSKuyNA3HBDuHkoigLjeiuecWX7Tsh5btukdngPi4Y-0-widget", "block_id": 113382498, "block_timestamp": "2024-02-22T23:02:11.850Z", "signer_id": "ndcdev.near", "widget_name": "daos.Components.Item", "source_code": "let { assets, contractName } = VM.require(`ndcdev.near/widget/daos.Config`);\nconst { item, index, showMoreDefault, showCommentsDefault } = props;\n\nif (!item) return <Widget src=\"flashui.near/widget/Loading\" />;\n\nassets = assets.home;\nconst accountId = context.accountId;\n\nconst Container = styled.div`\n  width: 100%;\n  height: max-content;\n  padding: 3rem;\n\n  @media screen and (max-width: 786px) {\n    padding: 1rem;\n  }\n`;\n\nconst Card = styled.div`\n  border-radius: 10px;\n  background: #fff;\n  box-shadow: 0px 30px 80px 0px rgba(0, 0, 0, 0.1);\n  padding: 2rem 3rem;\n\n  h3 {\n    font-size: 24px;\n    font-style: normal;\n    font-weight: 600;\n    margin: 10px 0;\n  }\n\n  p {\n    font-size: 14px;\n  }\n\n  .metric {\n    border-radius: 10px;\n    height: 80px;\n    width: 120px;\n    background: linear-gradient(\n      258deg,\n      rgba(162, 195, 254, 0.5) 0%,\n      rgba(225, 197, 252, 0.5) 28.72%,\n      rgba(241, 220, 210, 0.5) 100%\n    );\n    @media screen and (max-width: 786px) {\n      width: 100%;\n    }\n  }\n\n  .info {\n    display: flex;\n    align-items: center;\n  }\n\n  .actions {\n    gap: 3rem;\n\n    @media screen and (max-width: 786px) {\n      gap: 0;\n      justify-content: space-between;\n    }\n  }\n\n  .tag {\n    border-radius: 50px;\n    background: #a4c2fd;\n    width: max-content;\n    padding: 4px 15px;\n    font-size: 14px;\n    text-align: center;\n    color: white;\n  }\n\n  @media screen and (max-width: 786px) {\n    padding: 1.5rem;\n  }\n\n  :hover {\n    background: #ffffff;\n  }\n`;\n\nconst Status = styled.div`\n  border-radius: 50px;\n  border: 1px solid ${(props) => props.color};\n  width: max-content;\n  padding: 4px 15px;\n  font-size: 14px;\n  text-align: center;\n  color: ${(props) => props.color};\n`;\n\nconst Comments = styled.div`\n  border-top: 1px solid #efefef;\n  padding-top: 1rem;\n`;\n\nconst Button = styled.a`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 1rem;\n  margin-left: auto;\n  height: 40px;\n  padding: 10px 20px;\n  background: #a4c2fd1a;\n  border-radius: 18px;\n  color: #686467;\n  border: 1px solid #a4c2fd1a;\n\n  &:hover {\n    text-decoration: none;\n    border: 1px solid #a4c2fd;\n  }\n`;\n\nconst CardContainer = styled.div`\n  padding: 3px;\n\n  &:hover {\n    position: relative;\n    border-radius: 10px;\n    background: linear-gradient(\n      270deg,\n      #efdcd1 -1.69%,\n      #e0c6f7 43.78%,\n      #adc3fb 99.83%\n    );\n  }\n`;\n\nconst [showMore, setShowMore] = useState(showMoreDefault);\nconst [showComments, setShowComments] = useState(showCommentsDefault);\nconst [copiedShareUrl, setCopiedShareUrl] = useState(false);\nconst pageName = props.type === \"report\" ? \"reports\" : \"proposals\";\n\nconst isLiked = (item) => {\n  return item.likes.find((item) => item.author_id === accountId);\n};\n\nconst handleLike = () => {\n  Near.call(contractName, isLiked(item) ? \"post_unlike\" : \"post_like\", {\n    id: item.id,\n  });\n};\n\nconst colorMap = (status) => {\n  switch (status) {\n    case \"New\":\n      return \"rgb(146 168 210)\";\n    case \"Closed\":\n      return \"rgb(196 196 196)\";\n    case \"InReview\":\n      return \"rgb(223 193 73)\";\n    case \"Approved\":\n      return \"rgb(99 222 100)\";\n    case \"Rejected\":\n      return \"rgb(214 113 113)\";\n    default:\n      break;\n  }\n};\n\nconst CardItem = ({ item, index }) => (\n  <CardContainer>\n    <Card key={index} className=\"d-flex flex-column gap-3\">\n      <div className=\"d-flex justify-content-between\">\n        <Widget\n          src=\"mob.near/widget/Profile\"\n          props={{\n            accountId: item.editor_id,\n            tooltip: true,\n          }}\n        />\n        <div className=\"d-flex gap-3 align-items-center justify-content-between\">\n          <Status color={colorMap(item.status)}>{item.status}</Status>\n        </div>\n      </div>\n      <div className=\"d-flex flex-column gap-2\">\n        <h3>{item.title}</h3>\n        <div className=\"d-flex flex-column gap-1\">\n          <div className=\"info\">\n            <small>\n              <span>Created at:</span>\n              {new Date(item.timestamp / 1000000).toLocaleDateString()}\n            </small>\n          </div>\n          <div className=\"info\">\n            <small style={{ width: \"150px\" }}>Requested sponsor:</small>\n            <div className=\"d-flex align-items-center gap-1\">\n              <small>\n                <Widget\n                  src=\"mob.near/widget/ProfileImage\"\n                  props={{\n                    accountId: item.editor_id,\n                    style: { height: \"20px\", width: \"20px\" },\n                  }}\n                />\n              </small>\n              <small>{item.editor_id}</small>\n            </div>\n          </div>\n        </div>\n      </div>\n      <a\n        role=\"button\"\n        onClick={() => setShowMore(showMore === index ? null : index)}\n      >\n        <b>\n          See More\n          <i\n            className={`bi blue ${\n              showMore === index ? \"bi-eye\" : \"bi-eye-slash\"\n            }`}\n          />\n        </b>\n      </a>\n\n      {showMore === index && (\n        <Widget\n          src=\"ndcdev.near/widget/daos.Components.MarkdownViewer\"\n          props={{ text: item.description }}\n        />\n      )}\n\n      {item.labels?.length > 0 && (\n        <div className=\"d-flex flex-wrap gap-2\">\n          {item.labels?.map((tag) => (\n            <div className=\"tag\"># {tag}</div>\n          ))}\n        </div>\n      )}\n\n      <div className=\"actions d-flex align-items-center justify-content-between\">\n        <div role=\"button\" className=\"d-flex gap-2\" onClick={handleLike}>\n          <span className=\"blue\">{item.likes.length}</span>\n          <i\n            className={`bi blue ${\n              isLiked(item) ? \"bi-heart-fill\" : \"bi-heart\"\n            }`}\n          />\n        </div>\n\n        <div\n          role=\"button\"\n          className=\"d-flex gap-2\"\n          onClick={() => setShowComments(!showComments)}\n        >\n          <span className=\"blue\">{item.comments.length}</span>\n          <i className=\"bi blue bi-chat\" />\n        </div>\n\n        <div role=\"button\" className=\"d-flex gap-2\">\n          <Widget\n            src={\"ndcdev.near/widget/daos.Components.Clipboard\"}\n            props={{\n              text: `https://near.org/ndcdev.near/widget/daos.App?page=${pageName}&id=${item.id}`,\n            }}\n          />\n        </div>\n        <Button\n          href={`/ndcdev.near/widget/daos.App?page=proposals&id=${item.id}`}\n        >\n          {`Open ${item.post_type}`}\n          <i className={\"bi blue bi-box-arrow-up-right\"} />\n        </Button>\n      </div>\n\n      {showComments && (\n        <Comments>\n          <Widget\n            src=\"ndcdev.near/widget/daos.Components.Comments\"\n            props={{\n              postId: item.id,\n              showCreate: true,\n            }}\n          />\n        </Comments>\n      )}\n    </Card>\n  </CardContainer>\n);\n\nreturn <CardItem item={item} index={index} />;\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/ndcdev.near/widget/daos.Components.Item", "fact_widget_deployments_id": "1f010ef9f41de6cca31925d9bb23007e", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 8}