{"tx_hash": "43RkWgAcD9V33ZmJffKq6DFjSrAjeDp7dkWZnRddhQuQ", "action_id_social": "dTR7oDrg368L9SXyjC9qFsRU9xgDdcV6xfkWGJgiMBD-0-widget", "block_id": 107224611, "block_timestamp": "2023-12-05T18:44:02.066Z", "signer_id": "pichtran.near", "widget_name": "CoinPrice", "source_code": "const DATAPrice = (props) => {\n  const keys = props.keys ?? [\n    \"wrap.near\",\n    \"aurora\",\n    \"2260fac5e5542a773aa44fbcfedf7c193bc2c599.factory.bridge.near\",\n    \"aaaaaa20d9e0e2461697782ef11675f668207961.factory.bridge.near\",\n    \"linear-protocol.near\",\n    \"4691937a7508860f876c9c0a2a617e7d9e945d4b.factory.bridge.near\",\n  ];\n\n  const tokenColors = [\n    \"green\",\n    \"#3b0380\",\n    \"orange\",\n    \"red\",\n    \"green\",\n    \"white\",\n    \"blue\",\n  ];\n\n  const checkPriceLink = \"https://www.coingecko.com/en/coins/\";\n\n  const linkToken = [\n    \"near\",\n    \"ethereum\",\n    \"bitcoin\",\n    \"aurora-near\",\n    \"inear-protocol\",\n    \"woo-network\",\n  ];\n\n  const tokenImg = [\n    \"https://ipfs.near.social/ipfs/bafkreigy3uyyaianaeohczuys2bvwvfm6c6wtahbn5mwl6do5bk4w2fnni\",\n    \"https://ipfs.near.social/ipfs/bafkreibddakqw35thdstr7vb2zohixpjth4ff26xciu2otxftjbifhnfpa\",\n    \"https://ipfs.near.social/ipfs/bafkreihyafuo35nm3mifpmzsc546vco5bkj243mti3wmgwuzx663rkv7dy\",\n    \"https://ipfs.near.social/ipfs/bafkreihc7fmdrxhzfozf6es5tujsvyqtgfq4nroctgptufmfyzkhrcuham\",\n    \"https://ipfs.near.social/ipfs/bafkreiht5axwgfoptyf2b7o2omyfvdgxwsdtxg4rie3ivknj752ryjyqqy\",\n    \"https://ipfs.near.social/ipfs/bafkreidggzeg2jomuhw5o7b2vqwf4jsgk6fof5dzgcep6kxpqnt6x45i3i\",\n  ];\n\n  const [prices, setPrices] = useState([]);\n\n  const fetchPrices = () => {\n    let priceData = Near.view(\"priceoracle.near\", \"get_price_data\", {});\n    let assetsData = Near.view(\"oracle-prices.near\", \"get_config\", { keys });\n\n    let priceDataPrepared = [];\n    priceData.prices.map(\n      (data) => (priceDataPrepared[data.asset_id] = data.price)\n    );\n\n    let newPrices = assetsData.map((asset, index) => {\n      let assetAccountId = asset[0];\n      let assetName = asset[1].token_name;\n      let assetDecimals = asset[1].decimals;\n\n      let assetPrice = priceDataPrepared[assetAccountId];\n      let price = new Big(assetPrice.multiplier).div(\n        new Big(10).pow(assetPrice.decimals - assetDecimals)\n      );\n      const Logo = styled.img`\n  border-radius:50%;\n  width: 45px; \n  height: auto;\n  \n`;\n\n      const Div0019 = styled.div`\n    display: inline-block; \n  cursor: pointer;\n  margin: 0 auto;\n  position: relative;\n  text-decoration: none;\n  font-weight: 600;\n  border-radius: 6px;\n  overflow: hidden;\n  padding: 3px;\n  isolation: isolate;\n\n  &::before {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background: linear-gradient(115deg, #4fcf70, #fad648, #a767e5, #12bcfe, #44ce7b);\n    background-size: 200% 100%;\n    animation: gradientMove 1.5s linear infinite;\n    border-radius: 6px;\n  }\n\n  span {\n    position: relative;\n    display: inline-block;\n    padding: 1rem 1.5rem;\n    font-size: 1.1rem;\n    background: #000;\n    border-radius: 3px;\n    height: 100%;\n    z-index: 1;\n    text-decoration: none;\n  }\n  \n  @keyframes gradientMove {\n    0% {\n      background-position: 200% 0;\n    }\n    100% {\n      background-position: -200% 0;\n    }\n  }`;\n\n      const LogoLink = styled.a`\n  top: 20px;\n  left: 20px;\n  background-color: none;\n\n\n   &:hover {\n    & > ${Logo} {\n      animation: tilt 1s ease infinite;\n    }\n  }\n\n  @keyframes tilt {\n    0% { transform: rotateZ(0deg); }\n    25% { transform: rotateZ(-5deg); }\n    50% { transform: rotateZ(5deg); }\n    75% { transform: rotateZ(-5deg); }\n    100% { transform: rotateZ(5deg); }\n  }\n`;\n      return (\n        <div\n          class=\"col\"\n          key={assetAccountId}\n          style={{ color: tokenColors[index] }}\n        >\n          <Div0019>\n            <span>\n              <LogoLink\n                href={`${checkPriceLink}${linkToken[index]}`}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                style={{\n                  textDecoration: \"none\",\n                  color: \"inherit\",\n                  transition: \"background-color 0.3s, transform 0.3s\",\n                  display: \"inline-block\",\n                }}\n                onMouseEnter={(e) => {\n                  e.currentTarget.style.backgroundColor = \"#f0f0f0\";\n                  e.currentTarget.style.transform = \"scale(1.1)\";\n                }}\n                onMouseLeave={(e) => {\n                  e.currentTarget.style.backgroundColor = \"transparent\";\n                  e.currentTarget.style.transform = \"scale(1)\";\n                }}\n              >\n                <Logo\n                  src={tokenImg[index]}\n                  alt={assetName}\n                  style={{ width: \"50px\", height: \"50px\", borderRadius: \"50%\" }}\n                />\n\n                <div>{assetName}</div>\n\n                <div>\n                  ${price.toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, \"$&,\")}\n                </div>\n              </LogoLink>\n            </span>\n          </Div0019>\n        </div>\n      );\n    });\n\n    setPrices(newPrices);\n  };\n\n  useEffect(() => {\n    fetchPrices();\n\n    const intervalId = setInterval(fetchPrices, 10000);\n\n    return () => clearInterval(intervalId);\n  }, []);\n\n  const H5 = styled.h5`\n    font-family: Century Gothic, CenturyGothic, AppleGothic, sans-serif;\n    color: black;\n    \n  `;\n\n  const CoinPrices = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n\n    .col {\n      flex: 1;\n      text-align: center;\n      border-radius: 5px;\n    }\n\n    h5 {\n      font-family: Century Gothic, CenturyGothic, AppleGothic, sans-serif;\n      color: black;\n      text-align: center;\n      margin:10px;\n    }\n\n    @media (max-width: 768px) {\n      /* Adjust styles for smaller screens */\n      .col {\n        flex: 1;\n        margin: 5px;\n        width: 100%; /* Full width on smaller screens */\n      }\n    }\n  `;\n\n  return (\n    <CoinPrices class=\"container\">\n      <div\n        class=\"row\"\n        style={{\n          padding: \"10px\",\n        }}\n      >\n        {prices}\n      </div>\n    </CoinPrices>\n  );\n};\nreturn <DATAPrice />;\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/pichtran.near/widget/CoinPrice", "fact_widget_deployments_id": "26f313dce2093f90fd7e170989b73b3a", "inserted_timestamp": "2023-12-05T20:43:57.168Z", "modified_timestamp": "2023-12-20T03:22:11.422Z", "__row_index": 6}