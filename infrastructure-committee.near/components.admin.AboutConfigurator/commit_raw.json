{"tx_hash": "Hg83JyjniC9bXJxyqcppAPZp6ivDpZxmGEihMaL5xWfY", "action_id_social": "5VapEXqZkngJLZUuiGjRjN9GqMBLKFwySofPUsTBWjsE-0-widget", "block_id": 124163023, "block_timestamp": "2024-07-24T17:38:30.779Z", "signer_id": "infrastructure-committee.near", "widget_name": "components.admin.AboutConfigurator", "source_code": "const { Tile } = VM.require(\n  `devhub.near/widget/devhub.components.molecule.Tile`\n) || { Tile: () => <></> };\nconst item = {\n  path: `infrastructure-committee.near/profile/**`,\n};\nconst profile = Social.get(item.path);\nif (!profile.description) {\n  <div\n    style={{ height: \"50vh\" }}\n    className=\"d-flex justify-content-center align-items-center w-100\"\n  >\n    <Widget src={`devhub.near/widget/devhub.components.molecule.Spinner`} />\n  </div>;\n}\nconst initialData = profile.description;\nconst [content, setContent] = useState(null);\nconst [showCommentToast, setCommentToast] = useState(false);\nconst [handler, setHandler] = useState(null);\nconst [isTxnCreated, setTxnCreated] = useState(false);\nconst Container = styled.div`\n  width: 100%;\n  margin: 0 auto;\n  padding: 20px;\n  text-align: left;\n`;\nconst hasDataChanged = () => {\n  return content !== initialData;\n};\nconst handlePublish = () => {\n  setTxnCreated(true);\n  Near.call([\n    {\n      contractName: \"infrastructure-committee.near\",\n      methodName: \"set_social_db_profile_description\",\n      args: { description: content },\n      gas: 270000000000000,\n    },\n  ]);\n};\nuseEffect(() => {\n  if (isTxnCreated) {\n    const checkForAboutInSocialDB = () => {\n      Near.asyncView(REPL_SOCIAL_CONTRACT, \"get\", {\n        keys: [item.path],\n      }).then((result) => {\n        try {\n          const submittedAboutText = content;\n          const lastAboutTextFromSocialDB =\n            result[\"infrastructure-committee.near\"].profile.description;\n          if (submittedAboutText === lastAboutTextFromSocialDB) {\n            setTxnCreated(false);\n            setCommentToast(true);\n            return;\n          }\n        } catch (e) {}\n        setTimeout(() => checkForAboutInSocialDB(), 2000);\n      });\n    };\n    checkForAboutInSocialDB();\n  }\n}, [isTxnCreated]);\nuseEffect(() => {\n  if (!content && initialData) {\n    setContent(initialData);\n    setHandler(\"update\");\n  }\n}, [initialData]);\nfunction Preview() {\n  return (\n    <Tile className=\"p-3\" style={{ background: \"white\" }}>\n      <Widget\n        src={`infrastructure-committee.near/widget/components.molecule.Markdown`}\n        props={{\n          content: content,\n        }}\n      />\n    </Tile>\n  );\n}\nreturn (\n  <Container>\n    <Widget\n      src={`near/widget/DIG.Toast`}\n      props={{\n        title: \"About page updated successfully\",\n        type: \"success\",\n        open: showCommentToast,\n        onOpenChange: (v) => setCommentToast(v),\n        trigger: <></>,\n        providerProps: { duration: 3000 },\n      }}\n    />\n    <ul className=\"nav nav-tabs\" id=\"editPreviewTabs\" role=\"tablist\">\n      <li className=\"nav-item\" role=\"presentation\">\n        <button\n          className=\"nav-link active\"\n          id=\"edit-tab\"\n          data-bs-toggle=\"tab\"\n          data-bs-target=\"#edit\"\n          type=\"button\"\n          role=\"tab\"\n          aria-controls=\"edit\"\n          aria-selected=\"true\"\n        >\n          Edit\n        </button>\n      </li>\n      <li className=\"nav-item\" role=\"presentation\">\n        <button\n          className=\"nav-link\"\n          id=\"preview-tab\"\n          data-bs-toggle=\"tab\"\n          data-bs-target=\"#preview\"\n          type=\"button\"\n          role=\"tab\"\n          aria-controls=\"preview\"\n          aria-selected=\"false\"\n        >\n          Preview\n        </button>\n      </li>\n    </ul>\n    <div className=\"tab-content\" id=\"editPreviewTabsContent\">\n      <div\n        className=\"tab-pane show active py-4\"\n        id=\"edit\"\n        role=\"tabpanel\"\n        aria-labelledby=\"edit-tab\"\n      >\n        <Widget\n          src={`infrastructure-committee.near/widget/components.molecule.SimpleMDE`}\n          props={{\n            data: { handler: handler, content: content },\n            onChangeKeyup: (v) => {\n              setContent(v);\n            },\n            showAutoComplete: true,\n          }}\n        />\n        <div\n          className={\"d-flex align-items-center justify-content-end gap-3 mt-4\"}\n        >\n          <Widget\n            src={`devhub.near/widget/devhub.components.molecule.Button`}\n            props={{\n              classNames: { root: \"btn-success\" },\n              disabled: !hasDataChanged(),\n              icon: {\n                type: \"bootstrap_icon\",\n                variant: \"bi-check-circle-fill\",\n              },\n              label: \"Publish\",\n              onClick: handlePublish,\n            }}\n          />\n        </div>\n      </div>\n      <div\n        className=\"tab-pane\"\n        id=\"preview\"\n        role=\"tabpanel\"\n        aria-labelledby=\"preview-tab\"\n        style={{ position: \"relative\" }}\n      >\n        <div className=\"w-100 h-100 py-4\">\n          <Preview />\n        </div>\n      </div>\n    </div>\n  </Container>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/infrastructure-committee.near/widget/components.admin.AboutConfigurator", "fact_widget_deployments_id": "25926324dbe97c0346ee6acab7a448d0", "inserted_timestamp": "2024-07-24T18:56:26.724Z", "modified_timestamp": "2024-07-24T18:56:26.724Z", "__row_index": 5}