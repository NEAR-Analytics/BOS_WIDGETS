{"tx_hash": "BvhbqaVLPo8LBNyobbXnqDQfjy1Lg9Lsxd81sB7FJugo", "action_id_social": "GzG2KdYzKLRjmdJuWfTvsDTyvdJEfuomiJrT3dgcYLVk-0-widget", "block_id": 97626926, "block_timestamp": "2023-07-29T18:35:42.876Z", "signer_id": "markuso.near", "widget_name": "confirm-and-sign-proposed-tx", "source_code": "State.init({\r\n  chainId: null,\r\n  baseUrl: \"\",\r\n  safeAddress: null,\r\n  sender: null,\r\n  transactions: [],\r\n  selectedTransaction: null,\r\n});\r\n\r\n// connect account\r\nif (state.sender === null) {\r\n  const accounts = Ethers.send(\"eth_requestAccounts\", []);\r\n  const checksummedAddr = ethers.utils.getAddress(accounts[0]);\r\n  if (accounts.length) {\r\n    State.update({ sender: checksummedAddr });\r\n\r\n    Ethers.provider()\r\n      .getNetwork()\r\n      .then((chainIdData) => {\r\n        if (chainIdData?.chainId == 1) {\r\n          State.update({\r\n            chainId: \"mainnet\",\r\n          });\r\n        } else if (chainIdData?.chainId == 5) {\r\n          State.update({\r\n            chainId: \"goerli\",\r\n          });\r\n        } else if (chainIdData?.chainId == 100) {\r\n          State.update({\r\n            chainId: \"gnosis-chain\",\r\n          });\r\n        }\r\n      });\r\n  }\r\n}\r\n\r\n// detect and set given safe address to state\r\nif (state.safeAddress) {\r\n  const _baseUrl = `https://safe-transaction-${state.chainId}.safe.global/api`;\r\n  State.update({ baseUrl: _baseUrl });\r\n\r\n  // get proposed transactions from the backend\r\n  const url = _baseUrl + `/v1/safes/${state.safeAddress}/all-transactions`;\r\n  const response = fetch(url);\r\n  if (response.ok) {\r\n    const notExecuted = response.body.results.filter(\r\n      (tx) => tx.executionDate === null\r\n    );\r\n    State.update({ transactions: notExecuted });\r\n  }\r\n}\r\n\r\n// choose relevant transaction to sign and confirm\r\nconst selectTransaction = (tx) => {\r\n  State.update({ selectedTransaction: tx });\r\n};\r\n\r\n// sign relevant transaction\r\nconst signTransaction = () => {\r\n  if (state.selectedTransaction) {\r\n    const selectedTxHash = state.selectedTransaction.safeTxHash;\r\n    const signer = Ethers.provider().getSigner();\r\n    signer.signMessage(ethers.utils.arrayify(selectedTxHash)).then((sig) => {\r\n      const setV = ethers.utils.hexDataSlice(sig, 0, 64) + \"1f\";\r\n\r\n      const url =\r\n        state.baseUrl +\r\n        `/v1/multisig-transactions/${selectedTxHash}/confirmations/`;\r\n      const params = JSON.stringify({ signature: setV });\r\n      const options = {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: params,\r\n      };\r\n\r\n      //   post confirmed sig with set V to gnosis API backend\r\n      asyncFetch(url, options).then((res) => {\r\n        console.log(res);\r\n      });\r\n    });\r\n  } else {\r\n    console.log(\"Please select a transaction to sign.\");\r\n  }\r\n};\r\n\r\n// I don't know any CSS so please forgive the following fuckery\r\nconst Selection = styled.button`\r\n  background: ${(tx) =>\r\n    state.selectedTransaction == tx ? \"palevioletred\" : \"white\"};\r\n  color: ${(props) => (props.primary ? \"white\" : \"palevioletred\")};\r\n\r\n  font-size: 1em;\r\n  margin: 1em;\r\n  padding: 0.25em 1em;\r\n  border: 2px solid palevioletred;\r\n  border-radius: 10px;\r\n`;\r\n\r\nreturn (\r\n  <div>\r\n    <input\r\n      value={state.safeAddress}\r\n      onChange={(e) => State.update({ safeAddress: e.target.value })}\r\n      placeholder=\"Enter Safe address to view txs\"\r\n      label=\"SafeAddressInput\"\r\n    />\r\n    <p>Queued transactions:</p>\r\n    <ul>\r\n      {state.transactions.map((tx, index) => (\r\n        <li key={index} onClick={() => selectTransaction(tx)}>\r\n          <Selection>\r\n            <span>\r\n              From Safe Address: {state.safeAddress}\r\n              <br />\r\n              Type:\r\n              {tx.data\r\n                ? `ERC20 ${tx.dataDecoded.method} \r\n                To: ${tx.dataDecoded.parameters[0].value} \r\n                Value: ${tx.dataDecoded.parameters[1].value}`\r\n                : `Native Currency Transfer \r\n                To: ${tx.to} \r\n                Value: ${tx.value} \r\n                `}\r\n              <br />\r\n              {\r\n                state.selectedTransaction.safeTxHash == tx.safeTxHash\r\n                  ? \"!!!!!!THIS ONE IS SELECTED RIGHT NOW!!!!!!\"\r\n                  : \"\" /** Again I don't know css */\r\n              }\r\n            </span>\r\n          </Selection>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n    <button onClick={() => signTransaction()} label=\"SignButton\">\r\n      <span>Sign Selected Transaction</span>\r\n    </button>\r\n    <Web3Connect className=\"web3-connect\" connectLabel=\"Connect Wallet\" />\r\n  </div>\r\n);\r\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/markuso.near/widget/confirm-and-sign-proposed-tx", "fact_widget_deployments_id": "72686d99e20371f1a0891f39cf43c546", "inserted_timestamp": "2000-01-01T00:00:00.000Z", "modified_timestamp": "2000-01-01T00:00:00.000Z", "__row_index": 0}