{"tx_hash": "4fwniguKYYTZH7jL7QexaqU1Ec8ivhv4xVFTBdjLmf7R", "action_id_social": "2qGqaJkDqizAyaXChzLmcsPpKw3WRYZHyqFYy22rtpRu-0-widget", "block_id": 107688058, "block_timestamp": "2023-12-11T15:26:12.890Z", "signer_id": "evietwo.near", "widget_name": "PatientComponent", "source_code": "const [name, setName] = useState(\"\");\nconst [showName, setShowName] = useState(false);\nconst [reminder, setReminder] = useState(false);\nconst [selectedTime, setSelectedTime] = useState([]);\nconst [medication, setMedication] = useState({\n  medicationName: \"\",\n  dose: \"\",\n  duration: \"\",\n  time: \"\",\n});\n\nconst [showTimes, setShowTimes] = useState(false);\n\nconst [pop, setPop] = useState(false);\n\nfunction handlePopBox() {\n  console.log(pop);\n}\n\nfunction handleShowTimes() {\n  setShowName(true);\n  setReminder(false);\n}\n\nfunction changeName(e) {\n  setName(e.target.value);\n}\n\nfunction handleShowName() {\n  setShowName(true);\n}\n\nfunction handleShowReminder() {\n  setReminder(true);\n  setShowName(false);\n}\n\nconst patientStyle = {\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  minHeight: \"100vh\",\n  background: \"#f0f0f0\",\n  padding: \"20px\",\n};\n\nconst componentStyle = {\n  backgroundColor: \"blue\",\n  padding: \"20px\",\n  borderRadius: \"10px\",\n  boxShadow: \"0 0 10px rgba(0, 0, 0, 0.1)\",\n  marginBottom: \"20px\",\n};\n\nconst inputStyle = {\n  margin: \"10px 0\",\n  padding: \"10px\",\n  borderRadius: \"5px\",\n  border: \"1px solid #ccc\",\n  width: \"100%\",\n};\n\nconst buttonStyle = {\n  padding: \"10px 20px\",\n  borderRadius: \"5px\",\n  background: \"#3498db\",\n  color: \"#fff\",\n  border: \"none\",\n  cursor: \"pointer\",\n};\n\nconst reminderFormStyle = {\n  display: \"flex\",\n  flexDirection: \"column\",\n};\n\nconst entryStyle = {\n  display: \"bloc\",\n  padding: \"10px\",\n  margin: \"5px 0\",\n  borderRadius: \"5px\",\n  marginBottom: \"10px\",\n  paddingBottom: \"20px\",\n};\n\nconst iconStyle = {\n  cursor: \"pointer\",\n  color: \"red\", // You can customize the trash icon color\n};\n\nconst timeStyle = {\n  display: \"flex\",\n  justifyContent: \"space-between\",\n  alignItems: \"center\",\n  backgroundColor: \"green\", // Light green background color\n  padding: \"10px\",\n  borderRadius: \"5px\",\n  margin: \"2px 0\",\n};\n\nconst deleteStyle = {\n  cursor: \"pointer\",\n  color: \"red\", // Customize the delete text color\n  fontSize: \"small\",\n  fontStyle: \"italic\",\n};\n\nfunction handleTimeChange(e) {\n  setMedication({\n    ...medication,\n    time: e.target.value,\n  });\n}\n\nfunction handleTimeAdd() {\n  setSelectedTime((prevTimes) => [...prevTimes, medication.time]);\n  setMedication({\n    ...medication,\n    time: \"\",\n  });\n}\n\nconst handleDeleteTime = (timeToDelete) => {\n  const updatedTimes = selectedTime.filter((time) => time !== timeToDelete);\n  setSelectedTime(updatedTimes);\n};\n\nconst formatTime = (inputTime) => {\n  if (!inputTime) return \"\";\n  const [hours, minutes] = inputTime.split(\":\");\n  const ampm = hours >= 12 ? \"PM\" : \"AM\";\n  const formattedHours = hours % 12 || 12; // Convert 0 to 12 for 12-hour format\n  const formattedTime = `${formattedHours}:${minutes} ${ampm}`;\n  return formattedTime;\n};\n\nconst handleChange = (event) => {\n  const { name, value } = event.target;\n  setMedication((prevMedication) => ({\n    ...prevMedication,\n    [name]: value,\n  }));\n};\n\nState.init({\n  popBox: \"\",\n});\n\nuseEffect(() => {\n  const checkNotificationTime = () => {\n    const currentTime = new Date();\n    const nigeriaTime = new Date(\n      currentTime.toLocaleString(\"en-US\", { timeZone: \"Africa/Lagos\" })\n    );\n    for (const time of selectedTime) {\n      // Parse the time from selectedTime\n      const hours = nigeriaTime.getHours();\n      const minutes = nigeriaTime.getMinutes();\n\n      // Format the time as \"hh:mm AM/PM\"\n      const formattedTime = `${hours}:${String(minutes).padStart(2, \"0\")}`;\n      //  console.log(time, formattedTime);\n      if (time == formattedTime) {\n        State.update({ popBox: \"It's Time to take your drugs please!\" });\n      }\n    }\n  };\n\n  // Check every minute (adjust the interval as needed)\n  const intervalId = setInterval(checkNotificationTime, 60000);\n\n  return () => clearInterval(intervalId);\n}, [selectedTime]);\n\nreturn (\n  <div style={patientStyle}>\n    {!showName && !reminder && (\n      <div style={componentStyle}>\n        <h3>Enter your Name to Set Your Reminder</h3>\n        <input\n          type=\"text\"\n          name=\"name\"\n          style={inputStyle}\n          onChange={changeName}\n        />\n        <button type=\"submit\" style={buttonStyle} onClick={handleShowName}>\n          Set Name\n        </button>\n        <div>\n          <h3>{popBox}</h3>\n        </div>\n      </div>\n    )}\n    {showName && !reminder && (\n      <div style={componentStyle}>\n        <div>\n          <h2>Hello {name}</h2>\n          <h3>Your Current Medication Time</h3>\n          <div style={entryStyle}>\n            {selectedTime.map((time) => (\n              <p key={time} style={timeStyle}>\n                <span>{formatTime(time)}</span>\n                <span\n                  onClick={() => handleDeleteTime(time)}\n                  style={deleteStyle}\n                >\n                  Delete\n                </span>\n              </p>\n            ))}\n          </div>\n        </div>\n        <h3>{popBox.state}</h3>\n        <button style={buttonStyle} onClick={handleShowReminder}>\n          Add Reminder\n        </button>\n      </div>\n    )}\n    ;\n    {!showName && reminder && (\n      <div style={componentStyle}>\n        <div style={reminderFormStyle}>\n          <label htmlFor=\"doctorName\">Name of Medication</label>\n          <input\n            type=\"text\"\n            name=\"medicationName\"\n            style={inputStyle}\n            placeholder=\"Type\"\n            required\n          />\n\n          <label htmlFor=\"dose\">Number of Dosage</label>\n          <input\n            type=\"number\"\n            name=\"dose\"\n            style={inputStyle}\n            placeholder=\"Type a Number\"\n            required\n          />\n\n          <label htmlFor=\"duration\">Duration</label>\n          <input\n            type=\"number\"\n            name=\"duration\"\n            style={inputStyle}\n            placeholder=\"Type Number of Days\"\n            required\n          />\n\n          <label htmlFor=\"time\">\n            Time\n            <div className=\"time-input\">\n              <input\n                type=\"time\"\n                name=\"time\"\n                style={inputStyle}\n                value={medication.time}\n                onChange={handleTimeChange}\n              />\n              <button type=\"button\" onClick={handleTimeAdd}>\n                Add\n              </button>\n            </div>\n          </label>\n          <div style={entryStyle}>\n            {selectedTime.map((time) => (\n              <p key={time} style={timeStyle}>\n                <span>{formatTime(time)}</span>\n                <span\n                  onClick={() => handleDeleteTime(time)}\n                  style={deleteStyle}\n                >\n                  Delete\n                </span>\n              </p>\n            ))}\n          </div>\n          <button type=\"button\" style={buttonStyle} onClick={handleShowTimes}>\n            Submit\n          </button>\n        </div>\n      </div>\n    )}\n  </div>\n);\n", "metadata": {"tags": {"bos-gg": ""}}, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/evietwo.near/widget/PatientComponent", "fact_widget_deployments_id": "b60ae34faec7deaa3651369418f1e9fe", "inserted_timestamp": "2023-12-11T17:27:36.908Z", "modified_timestamp": "2023-12-20T03:22:11.422Z", "__row_index": 0}