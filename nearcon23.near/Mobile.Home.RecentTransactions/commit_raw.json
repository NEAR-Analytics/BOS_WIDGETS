{"tx_hash": "6VUyrQ1vk3nAh9ZzRsmHmAoXSwojWAa4WGmDEA4MoSnx", "action_id_social": "GTfckVbR6tMpo69JwyLt43JHdg26pc4C2BvTSWz19X4i-0-widget", "block_id": 104673809, "block_timestamp": "2023-11-01T08:34:16.330Z", "signer_id": "nearcon23.near", "widget_name": "Mobile.Home.RecentTransactions", "source_code": "const { secretkey } = props;\nconst ownerId = \"nearcon23.near\";\nconst baseUrl =\n  \"https://gqqkd7l7mk.execute-api.us-east-1.amazonaws.com/mainnet\";\n\nconst storedSecretKey = Storage.get(\n  \"newPrivateKey\",\n  `${ownerId}/widget/Ticket.Page`\n)\n  ? Storage.get(\"newPrivateKey\", `${ownerId}/widget/Ticket.Page`)\n  : Storage.get(\"newPrivateKey\", `${ownerId}/widget/RegisterMobile.Index`);\n\nconst fetchData = () => {\n  const key = secretkey ? secretkey : storedSecretKey;\n  asyncFetch(`${baseUrl}/api/v1/accounts/auth/${key}`).then(({ body }) => {\n    if (!!storedSecretKey === false) {\n      State.update({\n        redirectToHome: \"redirect\",\n      });\n    }\n    State.update({\n      userData: body,\n    });\n  });\n};\n\nconst fetchTransaction = () => {\n  if (state?.userData?.nearconId) {\n    const apiURL = `${baseUrl}/api/v1/transactions/${state?.userData?.nearconId}`;\n    asyncFetch(apiURL).then(({ body }) => {\n      State.update({ transactions: body });\n    });\n  }\n};\n\nuseEffect(() => {\n  fetchData();\n  fetchTransaction();\n}, [secretkey, storedSecretKey, state.userData]);\n\nfunction convertToReadableDate(dateString) {\n  const date = new Date(dateString);\n\n  // Get the components of the date\n  let hours = date.getUTCHours();\n  const minutes = date.getUTCMinutes();\n  const day = date.getUTCDate();\n  const months = [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ];\n  const month = months[date.getUTCMonth()];\n\n  // Convert to 12-hour format and set AM or PM\n  const ampm = hours >= 12 ? \"PM\" : \"AM\";\n  hours = hours % 12;\n  hours = hours ? hours : 12; // the hour '0' should be '12'\n\n  // Formatting minutes to always be two digits\n  const formattedMinutes = minutes < 10 ? \"0\" + minutes : minutes;\n\n  // Construct the formatted string\n  return `${hours}:${formattedMinutes} ${ampm}  ${day} ${month}`;\n}\n\nreturn (\n  <>\n    <Widget\n      props={{\n        nearconId: state.userData.nearconId,\n        cid: state.userData.cid,\n      }}\n      src={`${ownerId}/widget/Navbar`}\n    />\n    <Widget src={`${ownerId}/widget/Mobile.TransactionsTitleBar`} />\n    {(state.transactions ?? []).map((item) => (\n      <Widget\n        props={{\n          sent: item.senderId === state.userData.nearconId,\n          image:\n            item.senderId === state.userData.nearconId\n              ? item?.receiverCid\n              : item.senderCid,\n          amount: item.amount,\n          accountId:\n            item.senderId === state.userData.nearconId\n              ? item.receiverId\n              : item.senderId,\n          time: convertToReadableDate(item.createdAt),\n        }}\n        src={`${ownerId}/widget/Components.TransactionCard`}\n      />\n    ))}\n  </>\n);\n", "metadata": {"platform": "jutsu.ai"}, "branch": {"draft": null}, "widget_modules_used": null, "widget_url": "https://near.social/#/nearcon23.near/widget/Mobile.Home.RecentTransactions", "fact_widget_deployments_id": "61c7f734c8066b3db03c8ff009971286", "inserted_timestamp": "2023-11-01T10:33:08.791Z", "modified_timestamp": "2023-11-01T10:33:08.791Z", "__row_index": 0}