{"tx_hash": "GrUe23umGqApcdhiJwqtJkZRcrKYfBUBuE6hXrpEm7dM", "action_id_social": "2V6QrDFzWQDvJLdK4rrpYecfCx1zzX8pHLZqP84vpBCR-0-widget", "block_id": 105214876, "block_timestamp": "2023-11-08T10:28:32.264Z", "signer_id": "nearcon23.near", "widget_name": "Nearconomy.Page", "source_code": "const ownerId = \"nearcon23.near\";\nconst apiUrl =\n  \"https://gqqkd7l7mk.execute-api.us-east-1.amazonaws.com/mainnet/api/v1/transactions\";\n\nconst Container = styled.div`\n    background-color:#000000;\n    min-height:100vh;\n    .header {\n        padding:20px;\n        p {\n            font-family:FK Grotesk;\n            color:white;\n            font-size:45px;\n        }\n      .bottomBorderDiv {\n        border: 0px solid #FFFFFF;\n        border-bottom-width: 1px;\n      }\n    };\n    overflow:scroll;\n    .ads {\n      padding:10px;\n      width: 45%;\n      text-align: center;\n    }\n`;\n\nconst fetchTransaction = () => {\n  asyncFetch(apiUrl).then(({ body }) => {\n    State.update(body);\n  });\n};\n\nuseEffect(() => {\n  const interval = setInterval(() => {\n    fetchTransaction();\n  }, 30000);\n  fetchTransaction();\n  return () => {\n    clearInterval(interval);\n  };\n}, []);\n\nfunction convertToReadableDate(dateString) {\n  const date = new Date(dateString);\n\n  // Get the components of the date\n  let hours = date.getUTCHours();\n  const minutes = date.getUTCMinutes();\n  const day = date.getUTCDate();\n  const months = [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ];\n  const month = months[date.getUTCMonth()];\n\n  // Convert to 12-hour format and set AM or PM\n  const ampm = hours >= 12 ? \"PM\" : \"AM\";\n  hours = hours % 12;\n  hours = hours ? hours : 12; // the hour '0' should be '12'\n\n  // Formatting minutes to always be two digits\n  const formattedMinutes = minutes < 10 ? \"0\" + minutes : minutes;\n\n  // Construct the formatted string\n  return `${hours}:${formattedMinutes} ${ampm} ${day} ${month}`;\n}\n\nreturn (\n  <Container>\n    <div style={{ display: \"flex\", width: \"100%\", gap: \"50px\" }}>\n      <div style={{ width: \"70%\" }}>\n        <div className=\"header\">\n          <div\n            style={{\n              display: \"flex\",\n              width: \"690px\",\n              marginTop: -20,\n              height: \"150px\",\n              overflow: \"hidden\",\n              alignItems: \"center\",\n              justifyContent: \"space-between\",\n            }}\n          >\n            <img\n              style={{\n                padding: 20,\n                width: \"380px\",\n                height: \"150px\",\n                transform: \"scale(2)\",\n                marginLeft: 120,\n                objectFit: \"contain\",\n              }}\n              src=\"https://ipfs.near.social/ipfs/bafkreictx7pybi5goa5sfzfgina45nkric3chajfszyekqlufkg4gqhuna\"\n            />\n          </div>\n          <div className=\"bottomBorderDiv\" />\n        </div>\n        {(state?.transactions ?? []).map?.((item) => (\n          <Widget\n            props={{\n              isSend: item.senderId === state.userData.nearconId,\n              amount: item.amount,\n              receiverCid: item?.receiverCid,\n              senderCid: item.senderCid,\n              sendAccount: item.senderId,\n              recieveAccount: item.receiverId,\n              time: convertToReadableDate(item.createdAt),\n            }}\n            src={`${ownerId}/widget/Nearconomy.TransactionCard`}\n          />\n        ))}\n      </div>\n      <div style={{ width: \"30%\", paddingTop: 20, paddingRight: 30 }}>\n        <div\n          style={{\n            display: \"flex\",\n            gap: \"50px\",\n          }}\n        >\n          <div>\n            <h2\n              style={{\n                textAlign: \"center\",\n                marginBottom: 0,\n                fontSize: 76,\n                color: \"white\",\n                fontFamily: \"FK Grotesk\",\n                fontWeight: 400,\n              }}\n            >\n              {state.numberOfTransactions || 0}\n            </h2>\n            <p\n              style={{\n                fontWeight: 400,\n                fontSize: 32,\n                marginTop: -15,\n                color: \"#00EC97\",\n                fontFamily: \"Mona Sans\",\n                textAlign: \"center\",\n              }}\n            >\n              Transactions\n            </p>\n          </div>\n          <div></div>\n          <div>\n            <h2\n              style={{\n                fontWeight: 400,\n                textAlign: \"center\",\n                marginBottom: 0,\n                fontSize: 76,\n                color: \"white\",\n                fontFamily: \"FK Grotesk\",\n              }}\n            >\n              {parseFloat(state.totalNCONTransacted || 0).toFixed(2)}\n            </h2>\n            <p\n              style={{\n                fontWeight: 400,\n                fontSize: 32,\n                marginTop: -15,\n                color: \"#00EC97\",\n                fontFamily: \"Mona Sans\",\n                textAlign: \"center\",\n              }}\n            >\n              NCON transacted\n            </p>\n          </div>\n        </div>\n        <div>\n          <h2\n            style={{\n              color: \"white\",\n              fontSize: 76,\n              fontWeight: 400,\n              fontFamily: \"FK Grotesk\",\n              fontWeight: 400,\n            }}\n          >\n            Top Earners\n          </h2>\n          <p style={{ color: \"#00EC97\", fontSize: 32, marginTop: -20 }}>\n            NCON Leaderboard\n          </p>\n        </div>\n        {state?.leaderboard?.map?.((item, idx) => (\n          <Widget\n            src={`${ownerId}/widget/Nearconomy.TopEarners`}\n            props={{ ...item, idx: idx + 1 }}\n          />\n        ))}\n        <div style={{ padding: 20, width: \"100%\", margin: \"auto\" }}>\n          <img\n            style={{ width: \"100%\" }}\n            src=\"https://ipfs.near.social/ipfs/bafkreidmadn2kmerlxwlcjmu5qwj4mt7pdiqv5obmfwgeb536qowme2dn4\"\n          />\n        </div>\n      </div>\n    </div>\n  </Container>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/nearcon23.near/widget/Nearconomy.Page", "fact_widget_deployments_id": "43bb1a9fade1420909cf29843f9250b1", "inserted_timestamp": "2023-11-08T12:31:52.109Z", "modified_timestamp": "2023-11-08T12:31:52.109Z", "__row_index": 3}