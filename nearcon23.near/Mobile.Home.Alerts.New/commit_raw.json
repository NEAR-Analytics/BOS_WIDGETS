{"tx_hash": "FewREmHjSr8wUEUkm1Y4hfd1Cf9g9GgJhkUy8tSsZDPp", "action_id_social": "6HjxUTLHE3wExaWnXdvT53QYNGYG1PaM9VuNfP4jBiv4-0-widget", "block_id": 103230372, "block_timestamp": "2023-10-12T21:12:49.092Z", "signer_id": "nearcon23.near", "widget_name": "Mobile.Home.Alerts.New", "source_code": "const ownerId = \"nearcon23.near\";\nconst prefix = props.prefix || \"/mobile\";\n\nconst theme = props.theme;\nconst apiUrl = \"http://localhost:8080\";\n\nconst Container = styled.div`\n    width: 100%;\n        padding: 0 20px;\n`;\nconst Content = styled.div`\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    gap: 16px;\n`;\nconst Header = styled.div`\n    width: 100%;\n    padding: 20px 0;\n\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n`;\nconst Button = styled.button`\n    width: 100%;\n    height: 48px;\n    padding: 10px;\n    margin: 0px 0 0 0;\n    border-radius: 100px;\n    border-width: 0px;\n    font-size: 16px;\n    font-weight: 600;\n    background-color: #000000;\n    display:flex;\n    justify-content: center;\n    align-items: center;\n    gap:16px;\n\n    color: #FFFFFF;\n    :hover {\n      background-color: #000000dd;\n    }\n    :active {\n      background-color: #000000aa;\n    }\n`;\nconst GridToggle = styled.div`\n    display:flex;\n    align-items: center;\n    justify-content: center;\n    gap:16px;\n    width: fit-content !important;\n    @media only screen and (max-width: 600px) {\n      font-size:12px;\n      p {\n        transform: translateY(9px);\n      }\n    }\n`;\n\nState.init({\n  message: \"\",\n  showButton: true,\n  buttonLabel: \"\",\n  url: \"\",\n  recipients: \"allTracks\",\n  accountId: context.accountId,\n  loading: false,\n});\n\nconst ShowHideView = styled.div`\n  // display: inline-block;\n  height: 0;\n  overflow: hidden;\n  transition: height 0.3s ease-in-out;\n\n  &.show {\n    height: 170px;\n  }\n`;\n\n// const isValid = () => {\n//   return (\n//     state.message &&\n//     state.messageError === \"\" &&\n//     state.showButton &&\n//     state.showButtonError === \"\" &&\n//     state.buttonLabel &&\n//     state.buttonLabelError === \"\" &&\n//     state.url &&\n//     state.urlError === \"\" &&\n//     state.recipients &&\n//     state.recipientsError === \"\"\n//   );\n// };\n\nconst handleSubmit = async () => {\n  State.update({ loading: true });\n\n  const data = {\n    message: state.message,\n    showButton: state.showButton,\n    buttonLabel: state.buttonLabel,\n    url: state.url,\n    recipients: state.recipients,\n  };\n\n  // const res =\n  asyncFetch(`${apiUrl}/createNotification`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  })\n    .then((res) => {\n      console.log(res);\n\n      State.update({\n        message: \"\",\n        showButton: \"\",\n        buttonLabel: \"\",\n        url: \"\",\n        recipients: \"allTracks\",\n        accountId: context.accountId,\n        loading: false,\n      });\n    })\n    .catch((err) => {\n      console.log(err);\n      State.update({ loading: false });\n    });\n};\n\nreturn (\n  <Container>\n    <Header>\n      <h5>New Alert</h5>\n\n      <Link\n        to={`${prefix}/${ownerId}/widget/Mobile.Home`}\n        style={{ color: theme.textColor }}\n      >\n        <p>Back</p>\n      </Link>\n    </Header>\n    <Content>\n      <Widget\n        src={`${ownerId}/widget/Inputs.TextArea`}\n        props={{\n          label: \"Message\",\n          value: state.message,\n          error: state.messageError,\n          placeholder: \"\",\n          onChange: (message) => State.update({ message }),\n          // validate: () => {\n          //   if (state.message.length < 3) {\n          //     State.update({\n          //       messageError: \"message must be at least 3 characters\",\n          //     });\n          //     return;\n          //   }\n\n          //   if (state.goal.length > 500) {\n          //     State.update({\n          //       goalError: \"Goal must be less than 500 characters\",\n          //     });\n          //     return;\n          //   }\n\n          //   State.update({ goalError: \"\" });\n          // },\n        }}\n      />\n\n      <GridToggle>\n        <Widget\n          src={`${ownerId}/widget/Inputs.Toggle`}\n          props={{\n            value: state.showButton,\n            onChange: (showButton) => State.update({ showButton }),\n          }}\n        />\n        <p style={{ color: theme.textColor, width: \"100%\", margin: 0 }}>\n          Include Call to Action\n        </p>\n      </GridToggle>\n\n      <ShowHideView className={state.showButton ? \"show\" : \"\"}>\n        <Widget\n          src={`${ownerId}/widget/Inputs.Text`}\n          props={{\n            label: \"Button Label\",\n            value: state.buttonLabel,\n            error: state.buttonLabelError,\n            placeholder: \"Enter Button Label\",\n            onChange: (buttonLabel) => State.update({ buttonLabel }),\n            // validate: () => {\n            //   if (state.buttonLabel.length < 3) {\n            //     State.update({\n            //       buttonLabelError:\n            //         \"Button Label must be at least 3 characters\",\n            //     });\n            //     return;\n            //   }\n\n            //   if (state.buttonLabel.length > 100) {\n            //     State.update({\n            //       buttonLabelError:\n            //         \"Button Label must be less than 100 characters\",\n            //     });\n            //     return;\n            //   }\n\n            //   State.update({ buttonLabelError: \"\" });\n            // },\n          }}\n        />\n\n        <div style={{ marginTop: 16 }} />\n\n        <Widget\n          src={`${ownerId}/widget/Inputs.Text`}\n          props={{\n            label: \"URL\",\n            value: state.url,\n            error: state.urlError,\n            placeholder: \"Enter URL Name\",\n            onChange: (url) => State.update({ url }),\n            // validate: () => {\n            //   if (state.url.length < 3) {\n            //     State.update({\n            //       urlError: \"URL name must be at least 3 characters\",\n            //     });\n            //     return;\n            //   }\n\n            //   if (state.url.length > 100) {\n            //     State.update({\n            //       urlError: \"URL name must be less than 100 characters\",\n            //     });\n            //     return;\n            //   }\n\n            //   State.update({ urlError: \"\" });\n            // },\n          }}\n        />\n      </ShowHideView>\n      <Widget\n        src={`${ownerId}/widget/Inputs.Select`}\n        props={{\n          label: \"Recipients\",\n          value: state.persona,\n          error: state.personaError,\n          placeholder: \"Choose...\",\n          options: [\n            { value: \"allTracks\", text: \"All Tracks\" },\n            { value: \"developers\", text: \"Developers\" },\n            { value: \"entrepreneurs\", text: \"Entrepreneurs\" },\n            { value: \"creators\", text: \"Creators\" },\n            { value: \"regulators\", text: \"Regulators\" },\n          ],\n          onChange: (persona) => State.update({ persona }),\n          // validate: () => {\n          //   if (!state.persona) {\n          //     State.update({\n          //       personaError: \"Please select a persona\",\n          //     });\n          //     return;\n          //   }\n\n          //   State.update({ personaError: \"\" });\n          // },\n        }}\n      />\n      <p style={{ fontSize: 12, fontWeight: 400, color: theme.textColor2 }}>\n        By default every NEARCON attendee will receive alerts. You can send\n        alerts to a subset based on track preference.\n      </p>\n      <Button onClick={() => handleSubmit()}>\n        {state.loading && (\n          <div\n            class=\"spinner-border\"\n            role=\"status\"\n            style={{ height: 24, width: 24 }}\n          >\n            <span class=\"visually-hidden\">Loading...</span>\n          </div>\n        )}\n        Send\n        <i class=\"bi bi-arrow-up-right\"></i>\n      </Button>\n    </Content>\n  </Container>\n);\n", "metadata": {"platform": "jutsu.ai"}, "branch": {"draft": null}, "widget_modules_used": null, "widget_url": "https://near.social/#/nearcon23.near/widget/Mobile.Home.Alerts.New", "fact_widget_deployments_id": "4a46aae8abab9d79f64216aa107f0ef6", "inserted_timestamp": "2023-10-12T23:19:42.234Z", "modified_timestamp": "2023-10-12T23:19:42.234Z", "__row_index": 2}