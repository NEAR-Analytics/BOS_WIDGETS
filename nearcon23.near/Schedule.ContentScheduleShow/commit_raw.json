{"tx_hash": "Hfn9t1GiQ3REUphpg11pBrKWG8knc81ccYkUhrHsX1uT", "action_id_social": "Ao3E85vsF1aMR4eXKqn6niHyrvUFWuZVQVtmc7VyXuCZ-0-widget", "block_id": 105085153, "block_timestamp": "2023-11-06T16:45:59.361Z", "signer_id": "nearcon23.near", "widget_name": "Schedule.ContentScheduleShow", "source_code": "const accountId = \"nearcon23.near\";\n\n// border:10px solid black;\nconst BorderDiv = styled.div`\n  background-color: #000000;\n  padding:10px;\n  border-top-width:5px\n  width: 100%;\n  z-index:0;\n  position:relative;\n`;\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: 15% 20% 60%;\n  @media only screen and (max-width: 768px) {\n    grid-template-columns: 20% 5% 65%;\n  }\n  gap: 16px;\n  width: 100%;\n`;\n\nconst HideInMobile = styled.div`\n  @media only screen and (max-width: 768px) {\n    display: none;\n  }\n`;\n\nconst ShowInMobile = styled.div`\n  display: none;\n  @media only screen and (max-width: 768px) {\n    display: block;\n  }\n`;\n\nconst Brick = styled.div`\n  background-color: black;\n  width: 12px;\n  height:100%;\n`;\n\nconst Dot = styled.div`\n  background-color: black;\n  border: 5px solid white;\n  width: 22px;\n  height: 22px;\n  margin-top: -20px;\n  transform: translate(-5px,20px);\n  border-radius: 100px;\n`;\n\nconst PeopleGrid = styled.div`\n  @media only screen and (max-width: 768px) {\n    grid-template-columns: repeat(1,1fr) !important;\n  }\n`;\n\nfunction formatDate(inputDate) {\n  // Parse the input date string to create a Date object\n  const date = new Date(inputDate);\n\n  // Define an array of month abbreviations\n  const months = [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ];\n\n  // Extract the month and day from the date\n  const month = months[date.getMonth()];\n  const day = date.getDate();\n\n  // Return the formatted string\n  return `${month} ${day}`;\n}\n\nconst colorMapping = {\n  developer: \"#7269E1\",\n  entrepreneur: \"#0DAEBB\",\n  creative: \"#04A46E\",\n  regulator: \"#F44738\",\n};\n\nconst filteredData = (props?.dateData ?? [])?.filter((item) => {\n  const { dates, track, venue: venues, search } = props.filter;\n  let allConditions = [];\n  let isDateIncluded = false;\n  let isVenue = false;\n  let isTrackIncluded = false;\n\n  if (search) {\n    const searchExists = item.title\n      ?.toLowerCase()\n      .search(search?.toLowerCase());\n    allConditions.push(searchExists !== -1);\n  } else {\n    allConditions.push(true);\n  }\n  if (venues) {\n    venues.map((venue) => {\n      if (venue?.toLowerCase?.() === item?.location?.toLowerCase?.()) {\n        isVenue = true;\n      }\n    });\n\n    allConditions.push(isVenue);\n  } else {\n    allConditions.push(true);\n  }\n  if (track) {\n    if (item?.track) {\n      const tracklowerCase = track.map((item) => item?.toLowerCase());\n      item?.track?.map((item) => {\n        if (tracklowerCase.includes(item)) {\n          isTrackIncluded = true;\n        }\n      });\n      allConditions.push(isTrackIncluded);\n    } else {\n      allConditions.push(isTrackIncluded);\n    }\n  } else {\n    allConditions.push(true);\n  }\n  if (dates) {\n    const date = formatDate(item.startTime);\n\n    dates.map((item) => {\n      if (item === date) {\n        isDateIncluded = true;\n      }\n    });\n    allConditions.push(isDateIncluded);\n  } else {\n    allConditions.push(true);\n  }\n\n  return [...allConditions.filter((item) => item === false)].length === 0;\n});\n\nreturn filteredData.length !== 0 ? (\n  <>\n    <BorderDiv>\n      <div\n        style={{\n          backgroundColor: \"#FFFFFF\",\n          borderRadius: 8,\n          borderTopWidth: 5,\n          width: \"100%\",\n          zIndex: 0,\n          position: \"relative\",\n        }}\n      >\n        {filteredData?.map((item, idx) => (\n          <>\n            {idx === 0 && (\n              <>\n                <ShowInMobile>\n                  <h3\n                    style={{\n                      fontWeight: \"600\",\n                      width: \"100%\",\n                      textAlign: \"center\",\n                      left: 0,\n                      position: \"absolute\",\n                      marginTop: 30,\n                    }}\n                  >\n                    {formatDate(item.startTime)}\n                  </h3>\n                </ShowInMobile>\n                {props.index !== 0 ? (\n                  <ShowInMobile>\n                    <Grid>\n                      <div></div>\n                      <div\n                        style={{\n                          display: \"flex\",\n                        }}\n                      >\n                        <Brick style={{ height: 70 }} />\n                      </div>\n                      <div></div>\n                    </Grid>\n                  </ShowInMobile>\n                ) : (\n                  <ShowInMobile style={{ marginTop: 80 }} />\n                )}\n              </>\n            )}\n            <div style={{ position: \"relative\" }}>\n              <Grid>\n                <div style={{ paddingTop: idx === 0 ? 25 : 0 }}>\n                  {idx === 0 && (\n                    <HideInMobile>\n                      <h3 style={{ fontWeight: \"600\", textAlign: \"center\" }}>\n                        {formatDate(item.startTime)}\n                      </h3>\n                    </HideInMobile>\n                  )}\n                  <ShowInMobile>\n                    <h6\n                      style={{\n                        fontWeight: \"400\",\n                        fontSize: 10,\n                        padding: 4,\n                        textAlign: \"center\",\n                      }}\n                    >\n                      {item.startTimeFormatted} - {item.endTimeFormatted}\n                    </h6>\n                  </ShowInMobile>\n                </div>\n                <div\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"space-between\",\n                    paddingTop: idx === 0 ? 25 : 0,\n                  }}\n                >\n                  <HideInMobile>\n                    <h6 style={{ marginTop: 8, fontWeight: \"400\" }}>\n                      {item.startTimeFormatted} - {item.endTimeFormatted}\n                    </h6>\n                  </HideInMobile>\n                  <div>\n                    {props.index !== 0 && idx === 0 && (\n                      <Brick\n                        style={{\n                          position: \"absolute\",\n                          top: 0,\n                          height: 30,\n                        }}\n                      />\n                    )}\n                    <Dot\n                      style={\n                        item?.track\n                          ? { backgroundColor: colorMapping[item.track[0]] }\n                          : {}\n                      }\n                    />\n                    <Brick\n                      style={\n                        item?.track\n                          ? { backgroundColor: colorMapping[item.track[0]] }\n                          : {}\n                      }\n                    />\n                  </div>\n                </div>\n                <div\n                  style={{\n                    padding: 10,\n                    paddingLeft: 0,\n                    paddingTop: idx === 0 ? 25 : 0,\n                    display: \"flex\",\n                  }}\n                >\n                  <div style={{ width: \"100%\" }}>\n                    <h5 style={{ fontWeight: \"700\" }}>{item.title}</h5>\n                    <p\n                      style={{\n                        paddingRight: 15,\n                        paddingTop: 10,\n                        paddingBottom: 10,\n                      }}\n                    >\n                      {item.description === \"\ud83d\udcdd\" ? \"\" : item.description}\n                    </p>\n                    {!!item.location && (\n                      <div\n                        style={{\n                          display: \"flex\",\n                          gap: \"6px\",\n                          marginBottom: 10,\n                        }}\n                      >\n                        <Widget src={`${accountId}/widget/Icons.Location`} />\n                        <p style={{ color: \"#90908C\", marginBottom: 0 }}>\n                          {item.location}\n                        </p>\n                      </div>\n                    )}\n                    {item?.confirmedSpeakers &&\n                      item?.confirmedSpeakers?.length !== 0 && (\n                        <PeopleGrid\n                          style={{\n                            display: \"grid\",\n                            gridTemplateColumns: \"repeat(3,1fr)\",\n                            gap: \"13px\",\n                            marginBottom: 30,\n                          }}\n                        >\n                          {(item?.confirmedSpeakers ?? [])?.map((_, idx) => (\n                            <div\n                              style={{\n                                display: \"flex\",\n                                alignItems: \"center\",\n                                gap: \"10px\",\n                              }}\n                              key={_}\n                            >\n                              <div>\n                                <img\n                                  style={{\n                                    width: 40,\n                                    height: 40,\n                                    objectFit: \"cover\",\n                                    borderRadius: 100,\n                                  }}\n                                  src={item.imageIds[idx]}\n                                />\n                                <p\n                                  style={{\n                                    fontWeight: \"600\",\n                                    marginBottom: 0,\n                                    fontSize: 14,\n                                  }}\n                                >\n                                  {_.split(\"-\")[0]}\n                                </p>\n                                <p\n                                  style={{\n                                    marginBottom: 0,\n                                    fontSize: 14,\n                                  }}\n                                >\n                                  {_.split(\"-\")[1]}\n                                </p>\n                              </div>\n                            </div>\n                          ))}\n                        </PeopleGrid>\n                      )}\n                  </div>\n                  <a\n                    href={`http://www.google.com/calendar/event?action=TEMPLATE&text=${\n                      item.title\n                    }%20Event&details=${item.description}&location=${\n                      item.location\n                    }&dates=${new Date(item.startTime)\n                      .toISOString()\n                      .replace(/[-:]/g, \"\")}/${new Date(item.endTime)\n                      .toISOString()\n                      .replace(/[-:]/g, \"\")}`}\n                  >\n                    <Widget src={`${accountId}/widget/Icons.Reminder`} />\n                  </a>\n                </div>\n              </Grid>\n            </div>\n          </>\n        ))}\n      </div>\n    </BorderDiv>\n  </>\n) : (\n  <></>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/nearcon23.near/widget/Schedule.ContentScheduleShow", "fact_widget_deployments_id": "186c8cb66fb7ebc06aaabb6c1eb10947", "inserted_timestamp": "2023-11-06T18:40:32.310Z", "modified_timestamp": "2023-11-06T18:40:32.310Z", "__row_index": 8}