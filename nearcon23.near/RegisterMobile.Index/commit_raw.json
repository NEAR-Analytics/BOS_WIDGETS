{"tx_hash": "FBnXgwX7AxTAc3qoCUhvkC5mTttCd1wdvcV4HuB3sUUX", "action_id_social": "EASjDwELfyGBHSV6gufNRfHXusSG6H55ZRDQWraDegKH-0-widget", "block_id": 104817982, "block_timestamp": "2023-11-03T05:51:49.160Z", "signer_id": "nearcon23.near", "widget_name": "RegisterMobile.Index", "source_code": "const ownerId = \"nearcon23.near\";\nconst apiUrl =\n  \"https://gqqkd7l7mk.execute-api.us-east-1.amazonaws.com/mainnet/api/v1\";\n\nconst Container = styled.div`\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`;\n\nconst Content = styled.div`\n    display: flex;\n    flex-direction: column;\n    position: relative;\n    width: 100%;\n    max-width: 700px;\n    background-color: #00EC97;\n    height: 100%;\n    min-height: 836px;\n    div {\n      width: 100%;\n    }\n`;\n\nconst SubmitButton = styled.button`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  padding: 0.5em 1.5em;\n  margin-bottom: 20px;\n  gap: 0.5em;\n  background: #161615;\n  border-radius: 50px;\n  border: none;\n  color: #ffffff;\n  width: 100%;\n\n  &.disabled {\n    background: #717069 !important;\n  }\n\n  &:hover,\n  &:focus,\n  &:active {\n    background: #161615;\n    text-decoration: none;\n    color: #ffffff;\n  }\n`;\n\nState.init({\n  username: \"\",\n  usernameError: \"\",\n});\n\nconst isValid = () => {\n  return state.username && state.usernameError === \"\";\n};\n\nconst createAccount = () => {\n  State.update({ loading: true });\n\n  asyncFetch(`${apiUrl}/accounts/createAccount`, {\n    body: JSON.stringify({\n      secretKey: props?.secretKey,\n      accountId: `${state.username}.${ownerId}`,\n    }),\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    method: \"POST\",\n  }).then((res) => {\n    const { body } = res;\n    const { newPrivateKey, newPublicKey, accountId } = body;\n    Storage.set(\"newPrivateKey\", newPrivateKey);\n    Storage.set(\"newPublicKey\", newPublicKey);\n    Storage.set(\"accountId\", accountId);\n\n    State.update({ loading: false, redirectToHome: newPrivateKey });\n  });\n};\n\nconst valid = (username, cb) => {\n  const apiURL = `${apiUrl}/accounts/${username}/exists`;\n  asyncFetch(apiURL).then(({ body }) => {\n    cb(!!body?.block_hash);\n  });\n};\n\nif (state.redirectToHome) {\n  return <Redirect to={`/mobile?secretkey=${state.redirectToHome}`} />;\n}\n\nconst validateInput = () => {\n  if (state.username.length < 3) {\n    State.update({\n      usernameError: \"First name must be at least 3 characters\",\n    });\n    return false;\n  }\n  if (state.username.length > 100) {\n    State.update({\n      usernameError: \"First name must be less than 100 characters\",\n    });\n    return false;\n  }\n  return true;\n};\n\nreturn (\n  <Container>\n    <Content>\n      <div\n        style={{\n          display: \"flex\",\n          position: \"absolute\",\n          justifyContnet: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <Widget src={`${ownerId}/widget/Icons.FadedRightArrow`} />\n      </div>\n\n      <div\n        style={{\n          flex: 1,\n          zIndex: 3,\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n\n          margin: 20,\n          width: \"calc(100% - 40px)\",\n        }}\n      >\n        <div>\n          <h1\n            style={{\n              fontSize: 42,\n              fontWeight: 400,\n              lineHeight: 1.5,\n              textAlign: \"center\",\n            }}\n          >\n            Choose your <br /> username\n          </h1>\n          <p\n            style={{\n              fontSize: 12,\n              fontWeight: 400,\n              lineHeight: 1.5,\n              textAlign: \"center\",\n            }}\n          >\n            Choose wisely, you can <br /> only pick once.\n          </p>\n        </div>\n\n        <div style={{ marginBottom: 50 }}>\n          <Widget\n            src={`${ownerId}/widget/Inputs.Text`}\n            props={{\n              label: \"Username\",\n              value: state.username,\n              error: state.usernameError,\n              placeholder: \"johndoe\",\n              success: state.username && !state.usernameError,\n              onChange: (username) => {\n                State.update({ username: username?.toLowerCase().trim() });\n                const data = valid(`${username}.${ownerId}`, (d) => {\n                  const inputValid = validateInput();\n                  if (d) {\n                    State.update({\n                      usernameError: \"Username is already taken\",\n                      usernameExists: true,\n                    });\n                  } else {\n                    if (inputValid) {\n                      State.update({\n                        usernameError: \"\",\n                        usernameExists: false,\n                      });\n                    }\n                  }\n                  validateInput();\n                });\n                validateInput();\n              },\n              validate: () => {\n                validateInput();\n              },\n            }}\n          />\n          <p style={{ marginLeft: 2 }}>\n            {state.username ? `${state.username}.${ownerId}` : \"\"}\n          </p>\n        </div>\n        <SubmitButton\n          onClick={() => {\n            valid(`${state.username}.${ownerId}`, (d) => {\n              if (!d && validateInput() === true) {\n                createAccount();\n              } else {\n                if (d) {\n                  State.update({\n                    usernameError: \"Username is already taken\",\n                    usernameExists: true,\n                  });\n                }\n              }\n            });\n          }}\n          className={isValid() ? \"\" : \"disabled\"}\n        >\n          {state.loading ? (\n            <div\n              style={{ height: 20, width: 40, transform: \"translateY(-10px)\" }}\n            >\n              <svg\n                version=\"1.1\"\n                id=\"L9\"\n                x=\"0px\"\n                y=\"0px\"\n                viewBox=\"0 0 100 100\"\n                enableBackground=\"new 0 0 0 0\"\n              >\n                <path\n                  fill=\"#fff\"\n                  d=\"M73,50c0-12.7-10.3-23-23-23S27,37.3,27,50 M30.9,50c0-10.5,8.5-19.1,19.1-19.1S69.1,39.5,69.1,50\"\n                >\n                  <animateTransform\n                    attributeName=\"transform\"\n                    attributeType=\"XML\"\n                    type=\"rotate\"\n                    dur=\"1s\"\n                    from=\"0 50 50\"\n                    to=\"360 50 50\"\n                    repeatCount=\"indefinite\"\n                  />\n                </path>\n              </svg>\n            </div>\n          ) : (\n            \"Submit\"\n          )}\n        </SubmitButton>\n      </div>\n    </Content>\n  </Container>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/nearcon23.near/widget/RegisterMobile.Index", "fact_widget_deployments_id": "0cc5d01e4e69a2124175e5f1471bfc9b", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}