{"tx_hash": "3wWWkc5BAbKfv34z1iksbzRZmDjyHCyQDG2KcyrPyBFZ", "action_id_social": "7yc1ABuvLc2bZVeD6mhPeeF5LWRMvRX8dihcKaXrGFYW-0-widget", "block_id": 104703409, "block_timestamp": "2023-11-01T17:43:47.760Z", "signer_id": "nearcon23.near", "widget_name": "Ticket.Page", "source_code": "const ownerId = \"nearcon23.near\";\nconst baseUrl =\n  \"https://gqqkd7l7mk.execute-api.us-east-1.amazonaws.com/mainnet/api/v1\";\nconst {\n  props: { contractId, secretKey },\n} = props;\n\nconst [isValidTicket, setValidTicket] = useState(false);\nconst [redirectToMobile, setRedirectToMobile] = useState(false);\nconst [redirectCreateAccount, setRedirectCreateAccount] = useState(false);\n\nconst apiURL = `${baseUrl}/accounts/${secretKey}/validate`;\nconst apiURL2 = `${baseUrl}/accounts/auth/${secretKey}`;\n\nconst redirect = () => {\n  asyncFetch(apiURL)\n    .then(({ body }) => {\n      if (body.redirectTo === \"CREATE_ACCOUNT_PAGE\") {\n        setRedirectCreateAccount(true);\n      } else if (body.redirectTo === \"QR_CODE_PAGE\") {\n        setValidTicket(true);\n      }\n    })\n    .catch((err) => {\n      setValidTicket(false);\n    });\n};\n\nconst checkIfValidAccount = () => {\n  asyncFetch(apiURL2).then(({ body }) => {\n    const { nearconId, newPrivateKey, newPublicKey } = body;\n    if (newPrivateKey) {\n      Storage.set(\"newPrivateKey\", newPrivateKey);\n      Storage.set(\"newPublicKey\", newPublicKey);\n      Storage.set(\"accountId\", nearconId);\n      setRedirectToMobile(true);\n    }\n  });\n};\n\nuseEffect(() => {\n  redirect();\n  checkIfValidAccount();\n  const interval = setInterval(() => redirect(), 5000);\n  return () => {\n    clearInterval(interval);\n  };\n}, []);\n\nif (redirectToMobile) {\n  return <Redirect to=\"/mobile\" />;\n}\n\nreturn redirectCreateAccount ? (\n  <>\n    <Widget\n      props={{\n        secretKey,\n      }}\n      src={`${ownerId}/widget/RegisterMobile.Index`}\n    />\n  </>\n) : (\n  <>\n    <Widget src={`${ownerId}/widget/Ticket.Header`} />\n    <Widget\n      src={`${ownerId}/widget/Ticket.Content`}\n      props={{ isValidTicket, contractId, secretKey }}\n    />\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/nearcon23.near/widget/Ticket.Page", "fact_widget_deployments_id": "2c3174322bf61f7602f54f6e18e43640", "inserted_timestamp": "2023-11-01T19:38:39.061Z", "modified_timestamp": "2023-11-01T19:38:39.061Z", "__row_index": 0}