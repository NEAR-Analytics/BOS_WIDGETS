{"tx_hash": "GPRoPM1JTNZT93n5QVN2owsyMJvLvvLKbqu4PGo5mZW4", "action_id_social": "Dc66UAnJFPUiBM1XakaV34HBvczqpqvvj876QvPDWMjm-0-widget", "block_id": 105106908, "block_timestamp": "2023-11-06T23:22:46.936Z", "signer_id": "nearcon23.near", "widget_name": "Mobile.Home.SendAddress", "source_code": "const ownerId = \"nearcon23.near\";\nconst apiUrl =\n  \"https://gqqkd7l7mk.execute-api.us-east-1.amazonaws.com/mainnet/api/v1\";\n\nconst Container = styled.div`\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`;\n\nconst Content = styled.div`\n    display: flex;\n    flex-direction: column;\n    position: relative;\n    width: 100%;\n    max-width: 500px;\n    background-color: #00EC97;\n    height:100vh;\n    overflow:hidden;\n    div {\n      width: 100%;\n    }\n`;\n\nconst SubmitButton = styled.a`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  padding: 0.5em 1.5em;\n  margin-bottom: 20px;\n  gap: 0.5em;\n  background: #161615;\n  border-radius: 50px;\n  border: none;\n  color: #ffffff;\n  width: 100%;\n  height: 48px;\n\n  &.disabled {\n    background: #717069 !important;\n  }\n\n  &:hover,\n  &:focus,\n  &:active {\n    background: #161615;\n    text-decoration: none;\n    color: #ffffff;\n  }\n`;\n\nconst SubmitDiv = styled.a`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  padding: 0.5em 1.5em;\n  margin-bottom: 20px;\n  gap: 0.5em;\n  background: #161615;\n  border-radius: 50px;\n  border: none;\n  color: #ffffff;\n  width: 100%;\n  height: 48px;\n\n  &.disabled {\n    background: #717069 !important;\n  }\n\n  &:hover,\n  &:focus,\n  &:active {\n    background: #161615;\n    text-decoration: none;\n    color: #ffffff;\n  }\n`;\n\nState.init({\n  username: \"\",\n  usernameError: \"\",\n  lastName: \"\",\n  lastNameError: \"\",\n  email: \"\",\n  emailError: \"\",\n  persona: null,\n  personaError: \"\",\n  accountId: context.accountId,\n  jobTitle: \"\",\n  jobTitleError: \"\",\n  projectOrCompany: \"\",\n  projectOrCompanyError: \"\",\n  country: null,\n  countryError: \"\",\n  age: null,\n  ageError: \"\",\n  goal: \"\",\n  goalError: \"\",\n  twitter: \"\",\n  twitterError: \"\",\n  telegram: \"\",\n  telegramError: \"\",\n  referral: \"\",\n  referralError: \"\",\n});\n\nconst isValid = () => {\n  return state.username && state.usernameError === \"\";\n};\n\nconst SubmitComponent = SubmitButton;\n\nif (state.redirectToSend) {\n  return (\n    <Redirect\n      to={`/${ownerId}/widget/Mobile.Home.Send?receiverId=${state.username}.${ownerId}`}\n    />\n  );\n}\n\nconst valid = (username, cb) => {\n  const apiURL = `${apiUrl}/accounts/${username}/exists`;\n  asyncFetch(apiURL).then(({ body }) => {\n    cb(!!body?.block_hash);\n  });\n};\n\nconst validateInput = () => {\n  function isValid(str) {\n    const regex = /\\.ncon-factory\\.keypom\\.testnet$/;\n    return regex.test(str);\n  }\n  if (state.username.length < 3) {\n    State.update({\n      usernameError: \"First name must be at least 3 characters\",\n    });\n    return;\n  }\n\n  if (state.username.length > 100) {\n    State.update({\n      usernameError: \"First name must be less than 100 characters\",\n    });\n    return;\n  }\n\n  if (!state.usernameExists) {\n    State.update({ usernameError: \"\" });\n  }\n};\n\nconst { secretkey } = props;\nconst storedSecretKey = Storage.get(\n  \"newPrivateKey\",\n  `${ownerId}/widget/Ticket.Page`\n)\n  ? Storage.get(\"newPrivateKey\", `${ownerId}/widget/Ticket.Page`)\n  : Storage.get(\"newPrivateKey\", `${ownerId}/widget/RegisterMobile.Index`);\nconst key = secretkey ? secretkey : storedSecretKey;\nconst fetchData = () => {\n  asyncFetch(`${apiUrl}/accounts/auth/${key}`).then(({ body }) => {\n    State.update({ userData: body });\n  });\n};\n\nuseEffect(() => {\n  fetchData();\n}, [secretkey, storedSecretKey]);\n\nreturn (\n  <>\n    <Widget\n      props={{\n        nearconId: state.userData.nearconId,\n        cid: state.userData.cid,\n      }}\n      src={`${ownerId}/widget/Navbar`}\n    />\n    <Container>\n      <Content>\n        <div\n          style={{\n            display: \"flex\",\n            position: \"absolute\",\n            justifyContnet: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          <Widget src={`${ownerId}/widget/Icons.FadedRightArrow`} />\n        </div>\n\n        <div\n          style={{\n            flex: 1,\n            zIndex: 1,\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n\n            margin: 20,\n            width: \"calc(100% - 40px)\",\n          }}\n        >\n          <div>\n            <h1\n              style={{\n                fontSize: 42,\n                fontWeight: 500,\n                lineHeight: 1.5,\n                textAlign: \"center\",\n              }}\n            >\n              Send NCON\n            </h1>\n          </div>\n\n          <div style={{ marginBottom: 50 }}>\n            <Widget\n              src={`${ownerId}/widget/Inputs.Text`}\n              props={{\n                label: \"Send To\",\n                value: state.username,\n                error: state.usernameError,\n                success: state.username && !state.usernameError,\n                placeholder: \"johndoe\",\n                onChange: (username) => {\n                  State.update({ username: username?.toLowerCase().trim() });\n\n                  valid(`${username}.${ownerId}`, (d) => {\n                    const inputValid = validateInput();\n                    if (d) {\n                      State.update({\n                        usernameError: \"\",\n                        usernameExists: false,\n                      });\n                    } else {\n                      State.update({\n                        usernameError: \"Whoops, this username doesn\u2019t exist\",\n                        usernameExists: true,\n                      });\n                    }\n                    validateInput();\n                  });\n                },\n                validate: validateInput,\n              }}\n            />\n            {!!state.username && (\n              <p>\n                {state.username}.{ownerId}\n              </p>\n            )}\n            <div style={{ marginTop: 8 }}>\n              <SubmitComponent\n                onClick={() => {\n                  if (isValid()) {\n                    valid(`${state.username}.${ownerId}`, (d) => {\n                      if (d) {\n                        State.update({\n                          usernameError: \"\",\n                          usernameExists: false,\n                          redirectToSend: true,\n                        });\n                      } else {\n                        State.update({\n                          usernameError: \"Username is invalid\",\n                          usernameExists: true,\n                        });\n                      }\n                      validateInput();\n                    });\n                  }\n                }}\n                className={isValid() ? \"\" : \"disabled\"}\n              >\n                Continue\n              </SubmitComponent>\n              <SubmitButton\n                href={`/mobile`}\n                style={{ backgroundColor: \"transparent\", color: \"black\" }}\n              >\n                Cancel\n              </SubmitButton>\n            </div>\n          </div>\n          <div />\n        </div>\n      </Content>\n    </Container>\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/nearcon23.near/widget/Mobile.Home.SendAddress", "fact_widget_deployments_id": "15e95baa0a2fe2e1a25528e832c472ee", "inserted_timestamp": "2023-11-07T01:05:47.153Z", "modified_timestamp": "2023-11-07T01:05:47.153Z", "__row_index": 2}