{"tx_hash": "7adWs7UaAKvr6MU6wNf3cnZ48SMPMF8P3b4RZ9DfMy3U", "action_id_social": "CWDejVcL2GURSkBzkTz1FPRLwharBrp2PpvPcvacRyWr-0-widget", "block_id": 103230302, "block_timestamp": "2023-10-12T21:11:30.964Z", "signer_id": "nearcon23.near", "widget_name": "Mobile.Home.Alerts", "source_code": "const Alert = styled.div`\n  width: 100%;\n  border: 0.5px solid lightgray;\n  padding: 20px;\n`;\n\nconst Button = styled.button`\n    background-color: #BABAFC;\n    border-width: 0px;\n    color: #4D3BC2;\n    font-size: 12px;\n    font-weight: 600;\n    padding: 10px;\n    width: 100%;\n    border-radius: 100px;\n`;\n\nconst jutsuApi = \"http://localhost:8000/api/v1/nearcon/notifications\";\n\nconst apiUrl = \"http://localhost:8080\";\nconst socketUrl = \"ws://localhost:8080\";\n\nconst [loading, setLoading] = useState(false);\nconst [notifications, setNotifications] = useState([]);\n\nconst getData = async () => {\n  setLoading(true);\n  asyncFetch(jutsuApi)\n    .then(({ body }) => {\n      console.log(\"RES : \", body);\n      setNotifications(body);\n      setLoading(false);\n    })\n    .catch((err) => {\n      setLoading(false);\n    });\n\n  setLoading(false);\n};\nuseEffect(() => {\n  getData();\n}, []);\n\nuseEffect(() => {\n  const socket = new WebSocket(socketUrl);\n\n  // Listen for messages from the WebSocket server\n  socket.addEventListener(\"message\", (event) => {\n    const data = event?.data && JSON.parse(event?.data);\n    console.log(\"Received message:\", data);\n\n    // Update notifications when a new notification is received\n    setNotifications((prevNotifications) => [data, ...prevNotifications]);\n  });\n\n  // Clean up the WebSocket connection when the component is unmounted\n  return () => {\n    socket.close();\n  };\n}, []);\n\nfunction timeAgo(timestamp) {\n  const currentDate = new Date();\n  const previousDate = new Date(timestamp);\n\n  const seconds = Math.floor((currentDate - previousDate) / 1000);\n\n  const intervals = {\n    year: seconds / (60 * 60 * 24 * 365),\n    month: seconds / (60 * 60 * 24 * 30),\n    week: seconds / (60 * 60 * 24 * 7),\n    day: seconds / (60 * 60 * 24),\n    hour: seconds / (60 * 60),\n    minute: seconds / 60,\n  };\n\n  let result;\n  for (const [unit, value] of Object.entries(intervals)) {\n    if (value >= 1) {\n      result =\n        Math.floor(value) +\n        \" \" +\n        unit +\n        (Math.floor(value) > 1 ? \"s\" : \"\") +\n        \" ago\";\n      break;\n    }\n  }\n\n  return result || \"Just now\";\n}\n\nreturn (\n  <div\n    style={{\n      height: \"100%\",\n      // position: \"relative\",\n    }}\n  >\n    {loading ? (\n      <div\n        style={{\n          height: \"75%\",\n          width: \"100%\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          position: \"relative\",\n        }}\n      >\n        <div class=\"spinner-border\" role=\"status\">\n          <span class=\"visually-hidden\">Loading...</span>\n        </div>\n      </div>\n    ) : (\n      notifications?.map((item, index) => (\n        <Alert key={index}>\n          <div style={{ display: \"flex\", alignItems: \"center\", gap: \"5px\" }}>\n            <i class=\"bi bi-clock\" style={{ color: \"lightgray\" }}></i>\n            <p style={{ marginBottom: 0, color: \"lightgray\" }}>\n              {timeAgo(item?.createdAt || \"\")}\n            </p>\n          </div>\n          <p>{item?.message}</p>\n\n          {item.showButton && (\n            <a href={item.url} target=\"_blank\">\n              <Button>\n                <i\n                  class=\"bi bi-map\"\n                  style={{\n                    width: \"14\",\n                    height: \"14\",\n                    color: \"#7269E1\",\n                  }}\n                ></i>\n                {item.buttonLabel}\n              </Button>\n            </a>\n          )}\n        </Alert>\n      ))\n    )}\n  </div>\n);\n", "metadata": {"platform": "jutsu.ai"}, "branch": {"draft": null}, "widget_modules_used": null, "widget_url": "https://near.social/#/nearcon23.near/widget/Mobile.Home.Alerts", "fact_widget_deployments_id": "727e5cd27368f9181376f28e91f4211d", "inserted_timestamp": "2023-10-12T23:19:25.160Z", "modified_timestamp": "2023-10-12T23:19:25.160Z", "__row_index": 3}