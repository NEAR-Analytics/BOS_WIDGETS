{"tx_hash": "7pRCxid3VcRmRDAwuv7MbUc4ahk4WwfPv23MFw1xDa1r", "action_id_social": "72WPfteeSUZVoQ9T2jDW1dJVRSYgmcEULLk3f1Tpxpm5-0-widget", "block_id": 102430165, "block_timestamp": "2023-10-02T06:35:38.056Z", "signer_id": "nearcon23.near", "widget_name": "Ticket.Content", "source_code": "const ownerId = \"nearcon23.near\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  align-items: flex-start;\n  flex-wrap: nowrap;\n  padding: 3.5em 3.5em 4.5em;\n  gap: 3em;\n  background: #fff;\n\n  @media screen and (max-width: 768px) {\n    flex-direction: column;\n  }\n`;\n\nconst Explainer = styled.div`\n  width: 45%;\n\n  @media screen and (max-width: 768px) {\n    width: 100%;\n  }\n`;\n\nconst Detail = styled.div`\n  width: 55%;\n\n  @media screen and (max-width: 768px) {\n    width: 100%;\n  }\n`;\n\nconst {\n  props: { contractId, secretKey },\n} = props;\n\nState.init({\n  isValidTicket: false,\n});\n\nconst checkTicketValidity = (secretKey) => {\n  asyncFetch(\n    `https://kb73xf6bzk.execute-api.us-east-1.amazonaws.com/production/api/v1/keypom/${secretKey}`\n  ).then((response) => {\n    if (response.ok) {\n      const keyInfo = Near.view(contractId, \"get_key_information\", {\n        key: response.body.publicKey,\n      });\n\n      if (keyInfo) {\n        State.update({ isValidTicket: true });\n      }\n    }\n  });\n};\n\nif (contractId && secretKey) {\n  checkTicketValidity(secretKey);\n}\n\nreturn (\n  <Container>\n    {state.isValidTicket ? (\n      <>\n        <Explainer>\n          <Widget src={`${ownerId}/widget/Ticket.QRCode`} props={props} />\n        </Explainer>\n        <Detail>\n          <Widget src={`${ownerId}/widget/Ticket.Detail`} props={props} />\n        </Detail>\n      </>\n    ) : (\n      <h2>Invalid Ticket.</h2>\n    )}\n  </Container>\n);\n", "metadata": {"platform": "jutsu.ai"}, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/nearcon23.near/widget/Ticket.Content", "fact_widget_deployments_id": "dae913ba379e97016454256609f0c2c9", "inserted_timestamp": "2023-10-02T08:25:19.951Z", "modified_timestamp": "2023-10-02T08:25:19.951Z", "__row_index": 1}