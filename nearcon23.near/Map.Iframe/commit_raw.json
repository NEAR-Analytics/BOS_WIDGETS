{"tx_hash": "6ZjXZX1rkuoP3r7PR9aiehvQHcghnXW5eJvbWh5ezxGh", "action_id_social": "6QzYPvUCP5zvrnkqPGrQP8nq4n8jgweNuqfKwBBD5RD1-0-widget", "block_id": 105114121, "block_timestamp": "2023-11-07T01:36:40.444Z", "signer_id": "nearcon23.near", "widget_name": "Map.Iframe", "source_code": "const generatePopup = (image, heading, subtitle, link) =>\n  `<div id=\"${heading}\" style=\"display:flex;\"><img style=\"height:55px; width:50px; transform:scale(1.5);border-radius:0px;\" src=\"${image}\"/><a href=\"${link}\" target=\"_blank\" style=\"text-decoration:none; color:black;\"><div style=\"padding-left:25px;padding-right:0px;\"><p style=\"font-size:16px; font-weight:600;margin-bottom:-5px; font-family:Mona-Sans, sans-serif;\">${heading}</p> <p style=\"font-size:12px; margin-top:4px;font-family:Mona-Sans, sans-serif;\">${subtitle}</p></div></a></div>`;\n\nconst src = `\n<html>\n<head>\n<meta charset=\"utf-8\">\n<title>Display a popup</title>\n<meta name=\"viewport\" content=\"initial-scale=1,maximum-scale=1,user-scalable=no\">\n<link href=\"https://api.mapbox.com/mapbox-gl-js/v2.14.1/mapbox-gl.css\" rel=\"stylesheet\">\n<script src=\"https://api.mapbox.com/mapbox-gl-js/v2.14.1/mapbox-gl.js\"></script>\n<link href=\"https://fonts.cdnfonts.com/css/mona-sans\" rel=\"stylesheet\"></link>\n<style>\nbody { margin: 0; padding: 0; }\n#map { position: absolute; top: 0; bottom: 0; width: 100%; }\n.mapboxgl-popup-content {padding:0px;border-radius:10px; overflow:hidden;padding-right:16px;font-family: 'Mona-Sans', sans-serif;}\n*:focus {\n    outline: none;\n}\n\n</style>\n<script src=\"https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-directions/v4.1.1/mapbox-gl-directions.js\"></script>\n<link rel=\"stylesheet\" href=\"https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-directions/v4.1.1/mapbox-gl-directions.css\" type=\"text/css\">\n</head>\n<body>\n<div id=\"map\"></div>\n<script>\n\n\tmapboxgl.accessToken = 'pk.eyJ1IjoiMzMzMzMzMzMiLCJhIjoiY2xuYnJvNGQ4MGlueTJqcjdlbng0cWpycCJ9.pVVNrWeRzrqSdWxg2n-lqw';\n    const geojson = {\n        'type': 'FeatureCollection',\n        'features': [\n        {\n        'type': 'Feature',\n        'properties': {\n        'message': 'Foo',\n        'iconSize': [60, 60]\n        },\n        'geometry': {\n        'type': 'Point',\n        'coordinates': [-9.10412980335633, 38.74123958634596]\n        }\n        },\n        {\n        'type': 'Feature',\n        'properties': {\n        'message': 'Bar',\n        'iconSize': [50, 50]\n        },\n        'geometry': {\n        'type': 'Point',\n        'coordinates': [-9.1062259067202, 38.73516922235015]\n        }\n        },\n        {\n        'type': 'Feature',\n        'properties': {\n        'message': 'Baz',\n        'iconSize': [40, 40]\n        },\n        'geometry': {\n        'type': 'Point',\n        'coordinates': [-9.103527750504185, 38.741422291924266]\n        }\n        }\n        ]\n};\nconst map = new mapboxgl.Map({\ncontainer: 'map',\n// Choose from Mapbox's core styles, or make your own style with Mapbox Studio\nstyle: 'mapbox://styles/mapbox/dark-v11',\ncenter: [${props.state.coordinates[0]}, ${props.state.coordinates[1]}],\nzoom: ${props.state.zoom},\n maxBounds: [ \n  [ -9.170036057954437, 38.70129203456352],\n  [-9.078861058284827, 38.801977920823795]\n  ]\n});  \n\nfor (const marker of geojson.features) {\n// Create a DOM element for each marker.\nconst el = document.createElement('div');\nconst width = marker.properties.iconSize[0];\nconst height = marker.properties.iconSize[1];\nel.className = 'marker';\nel.style.width = \"15px\";\nel.style.height = \"15px\";\nel.style.border = '5px solid #fff'\nel.style.borderRadius = '100px';\nel.style.backgroundColor=\"#00ec97\";\nel.style.backgroundSize = '100%';\n \n// Add markers to the map.\nnew mapboxgl.Marker(el)\n.setLngLat(marker.geometry.coordinates)\n.addTo(map);\n}\nconst popup = new mapboxgl.Popup({ closeButton: false,closeOnClick:false,anchor:\"top-left\" })\n.setLngLat([-9.10412980335633, 38.74123958634596])\n.setHTML('${generatePopup(\n  \"https://i.ibb.co/Hr1XRXj/community.png\",\n  \"Community HQ\",\n  \"Garagem Lisboa\",\n  \"https://www.google.com/maps/place/R.+Pereira+Henriques,+Lisboa,+Portugal/@38.7409173,-9.1060679,17z/data=!3m1!4b1!4m6!3m5!1s0xd1933df3bc717d7:0xa6dbc055f9d40a3f!8m2!3d38.7409131!4d-9.103493!16s%2Fg%2F1thhlsmg?entry=ttu\"\n)}')\n.addTo(map);\n\nconst popup2 = new mapboxgl.Popup({ closeButton: false,closeOnClick:false,anchor:\"top\"})\n.setLngLat([-9.1062259067202, 38.73516922235015])\n.setHTML('${generatePopup(\n  \"https://i.ibb.co/WzJYS9V/nearconhq.png\",\n  \"NEARCON HQ\",\n  \"Convento Do Beato\",\n  \"https://www.google.com/maps/place/Convento+do+Beato/@38.7348554,-9.1088421,17z/data=!3m1!4b1!4m6!3m5!1s0xd1933e0e05a00ab:0x1ab47681c49d3234!8m2!3d38.7348512!4d-9.1062672!16s%2Fm%2F0_qdlv1?entry=ttu\"\n)}')\n.addTo(map);\n\nconst popup3 = new mapboxgl.Popup({ closeButton: false,closeOnClick:false, })\n.setLngLat([-9.103527750504185, 38.741422291924266])\n.setHTML('${generatePopup(\n  \"https://i.ibb.co/YBdG3rk/hacker.png\",\n  \"Hacker HQ\",\n  \"Armazem 16\",\n  \"https://www.google.com/maps/place/R.+Pereira+Henriques+16,+1950-242+Lisboa,+Portugal/@38.7410407,-9.1060257,17z/data=!3m1!4b1!4m6!3m5!1s0xd1933df23292a97:0x66ead8aebe385527!8m2!3d38.7410365!4d-9.1034508!16s%2Fg%2F11c1yl_sby?entry=ttu\"\n)}')\n.addTo(map);\n  setTimeout(()=>{\n  document.getElementById(\"NEARCON HQ\").addEventListener('click', () => {\n  window.parent.postMessage(\"NEARCON HQ\", '*');\n  });\n   document.getElementById('Hacker HQ').addEventListener('click', () => {\n  window.parent.postMessage('Hacker HQ', '*');\n  });\n document.getElementById('Community HQ').addEventListener('click', () => {\n  window.parent.postMessage('Community HQ', '*');\n  });\n  },2000);\n\n//   // Request directions between the three points\n// map.on('load', function () {\n//   map.addSource('route', {\n//     'type': 'geojson',\n//     'data': {\n//       'type': 'Feature',\n//       'properties': {},\n//       'geometry': {\n//         'type': 'LineString',\n//         'coordinates': [\n//           [-9.10412980335633, 38.74123958634596],\n//           [-9.1062259067202, 38.73516922235015],\n//           [-9.103527750504185, 38.741422291924266]\n//         ]\n//       }\n//     }\n//   });\n\n//   map.addLayer({\n//     'id': 'route',\n//     'type': 'line',\n//     'source': 'route',\n//     'layout': {\n//       'line-join': 'round',\n//       'line-cap': 'round'\n//     },\n//     'paint': {\n//       'line-color': '#00ec97',\n//       'line-width': 5\n//     }\n//   });\n// });\n\n// \n// \n//\n//\n//\n\n// // Initialize the directions control\n// const directions = new MapboxDirections({\n//   accessToken: mapboxgl.accessToken,\n//   unit: 'metric',\n//   profile: 'mapbox/driving',\n//   interactive: false, // Disable user interactions\n//   zoom: false, // Disable automatic zoom\n//   controls: {\n//     inputs: false, // Show origin and destination input fields\n//     instructions: true, // Show turn-by-turn instructions\n//     profileSwitcher: true, // Allow profile switching (e.g., driving, walking)\n//     geocoder: true, // Enable the geocoder for location search\n//     tripButton: true, // Show \"Plan trip\" button\n//   },\n\n// });\n\n// // Add the directions control to the map\n// map.addControl(directions, 'top-left');\n\n\n// // Define the origin, stop, and endpoint coordinates\n// const originCoords = [-9.10412980335633, 38.74123958634596];\n// const stopCoords = [-9.1062259067202, 38.73516922235015];\n// const endpointCoords = [-9.103527750504185, 38.741422291924266];\n\n// // Set the origin and destination\n// directions.setOrigin(originCoords);\n// directions.setDestination(endpointCoords);\n\n// // Add a stop in between\n// directions.addWaypoint(1, stopCoords); // The '1' specifies the index of the stop\n\n\n</script>\n \n</body>\n</html>\n`;\n\nreturn (\n  <iframe\n    style={{ width: \"100%\", height: \"100vh\" }}\n    onMessage={(data) => {\n      props?.update?.({ location: data });\n    }}\n    srcDoc={src}\n  />\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/nearcon23.near/widget/Map.Iframe", "fact_widget_deployments_id": "2a3fd40879cc597278d4a6e3896a200e", "inserted_timestamp": "2023-11-07T03:21:27.054Z", "modified_timestamp": "2023-11-07T03:21:27.054Z", "__row_index": 2}