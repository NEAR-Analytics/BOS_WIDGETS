{"tx_hash": "GW3MgLAZGtRje8ueaHqQdc6wrKsUueEmmoy8MRJhQiXr", "action_id_social": "G735VxuZjQdACnZ8WWH8tCeCHob9dWBFwJZ1jPWQy3M1-0-widget", "block_id": 98017377, "block_timestamp": "2023-08-04T00:10:07.213Z", "signer_id": "genadrop.near", "widget_name": "GenaDrop.NFT.All", "source_code": "const limit = 20;\n\nState.init({\n  offset: 0,\n  tokens: [],\n  hasMore: true,\n});\n\nfunction fetchTokens() {\n  asyncFetch(\"https://graph.mintbase.xyz/mainnet\", {\n    method: \"POST\",\n    headers: {\n      \"mb-api-key\": \"omni-site\",\n      \"Content-Type\": \"application/json\",\n      \"x-hasura-role\": \"anonymous\",\n    },\n    body: JSON.stringify({\n      query: `\n          query MyQuery {\n            mb_views_nft_tokens(\n                limit: ${limit},\n                offset: ${state.offset}\n              where: { nft_contract_id: { _eq: \"nft.genadrop.near\" }}\n              order_by: {minted_timestamp: desc}\n            ) {\n              media\n              owner\n            }\n          }\n        `,\n    }),\n  }).then((res) => {\n    if (res.ok) {\n      const tokens = res.body.data.mb_views_nft_tokens;\n      if (tokens.length > 0) {\n        State.update({\n          tokens: [...state.tokens, ...tokens],\n          offset: state.offset + limit,\n          hasMore: true,\n        });\n      } else {\n        State.update({\n          hasMore: false,\n        });\n      }\n    }\n  });\n}\n\nfunction Sharddog({ owner, media }) {\n  const size = \"144px\";\n\n  return (\n    <Link to={`/mob.near/widget/ProfilePage?accountId=${owner}`}>\n      <Widget\n        src=\"mob.near/widget/Image\"\n        props={{\n          image: {\n            url: media,\n          },\n          style: {\n            width: size,\n            height: size,\n            objectFit: \"cover\",\n            minWidth: size,\n            minHeight: size,\n            maxWidth: size,\n            maxHeight: size,\n            overflowWrap: \"break-word\",\n          },\n        }}\n      />\n    </Link>\n  );\n}\n\nconst size = \"144px\";\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(143px, 0.1fr));\n\n  @media (hover: none) {\n    grid-template-columns: repeat(auto-fill, minmax(143px, 0.1fr));\n  }\n`;\n\nconst loader = (\n  <div className=\"loader\" key={\"loader\"}>\n    <span\n      className=\"spinner-grow spinner-grow-sm me-1\"\n      role=\"status\"\n      aria-hidden=\"true\"\n    />\n    Loading ...\n  </div>\n);\n\nreturn (\n  <InfiniteScroll\n    pageStart={0}\n    loadMore={fetchTokens}\n    hasMore={state.hasMore}\n    loader={loader}\n  >\n    <Grid>\n      {state.tokens?.map((it) => {\n        return <Sharddog owner={it.owner} media={it.media} />;\n      })}\n    </Grid>\n  </InfiniteScroll>\n);\n", "metadata": {"description": "All GenaDrop NFTs from nft.genadrop.near powered by mintbase", "image": {"ipfs_cid": "bafkreid2f7winbxzk2clihw2cjsq2ycuudt4thzi7br2zi2ph2gqjzdhwq"}, "linktree": {"website": "bos.genadrop.near"}, "name": "GenaDrop NFTs", "platform": "jutsu.ai", "tags": {"app": "", "genadrop": "", "mintbase": "", "nft": ""}}, "branch": {"draft": null}, "widget_modules_used": null, "widget_url": "https://near.social/#/genadrop.near/widget/GenaDrop.NFT.All", "fact_widget_deployments_id": "5cbb70615a816f9e56f8069dd3c12ca1", "inserted_timestamp": "2023-08-04T01:46:55.296Z", "modified_timestamp": "2023-08-04T01:46:55.296Z", "__row_index": 4}