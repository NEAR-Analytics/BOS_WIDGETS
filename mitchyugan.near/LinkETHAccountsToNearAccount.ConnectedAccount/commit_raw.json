{"tx_hash": "E4G5cTAbkBAYPhs6gYSAXh9fRsRhohoDJUbT6F83Kz5g", "action_id_social": "BSixzY5bRNk8ECDT1Cf1VbcszBxNUmWr46XsMFKLE3P2-0-widget", "block_id": 106864319, "block_timestamp": "2023-11-30T11:17:26.873Z", "signer_id": "mitchyugan.near", "widget_name": "LinkETHAccountsToNearAccount.ConnectedAccount", "source_code": "const ConnectedAccount = styled.div`\n  width: 90%;\n`;\n\nconst Header = styled.div`\ndisplay: flex;\njustify-content: space-between;\nwidth: 100%;\nmargin: auto;\nmargin-bottom: 70px;\n\nh1{\n  font-size: 36px;\nfont-style: normal;\nfont-weight: 700;\nline-height: 100%; \n}\np{\n  color: #7C7C7C;\nmargin:'Inter' sans-serif;\nfont-size: 19px;\nfont-style: normal;\nfont-weight: 400;\n}\n\n.welcome{\n\n    .welcomeNearId{\n      color: #000;\n  \n    font-size: 48px;\n    font-style: normal;\n    font-weight: 700;\n    line-height: 120%;\n    }\n    }\n\n    p{\n      color: #7C7C7C;\n    font-size: 24px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: normal;\n    }\n`;\n\nconst Chain = styled.div`\ndisplay:  flex;\nalign-items: center;\ngap: 12px;\n border: 1px solid rgba(0, 0, 0, 0.22);\n  padding: 10px 25px;\n  gap: 24px;\n  border-radius: 12px;\n p{\n  margin: 0;\n  font-size: 36px;\nfont-style: normal;\nfont-weight: 600;\n }\n\n .chainsimages{\n  width: 30px;\n }\n`;\n\nconst Accounts = styled.div`\n    display: flex;\n    flex-direction: column;\n    gap: 15px;\n\n    p{\n        margin-bottom: 0;\n    }\n`;\n\nconst Account = styled.div`\n    display: flex;\n    flex-direction : column;\n    padding: 30.5px 24px;\n    justify-content: center;\n    align-items: flex-start;\n    width: 777px;\n    border-radius: 12px;\n    border: 1px solid rgba(0, 0, 0, 0.22);\n\n    .accountHeader{\n        width: 92%;\n        display: flex;\n        justify-content: space-between;\n        margin-bottom: 10px;\n        align-items: center;\n\n        h4{\n            color: #000;\n            font-size: 36px;\n            font-style: normal;\n            font-weight: 600;\n            line-height: normal;\n        }\n\n        p{\n            color: #1C1B1B;\n            font-size: 20px;\n            font-style: normal;\n            font-weight: 500;\n            line-height: 120%;\n        }\n    }\n\n    .accountId{\n        color: #1C1B1B;\n        font-size: 20px;\n        font-style: normal;\n        font-weight: 400;\n        line-height: 120%;\n    }\n\n    .explorerBtn{\n      margin-top: 20px;\n      display: flex;\n      padding: 10px 28px;\n      justify-content: center;\n      align-items: center;\n      gap: 10px;\n      border-radius: 10px;\n      background: none;\n      color: #0d6efd;\n      border: 1px solid #0d6efd;\n    }\n\n    .explorerBtn:hover{\n      background: #0d6efd;\n      color: white;\n    }\n`;\n\nconst Status = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 10px;\n\n    .disconnectedImg{\n        opacity: 20%;\n    }\n`;\n\nconst userId = context.accountId;\n\nconst [networkName, setNetworkName] = useState(null);\nconst [chainId, setChainId] = useState(null);\nconst [accountId, setAccountId] = useState(null);\nconst [accounts, setAccounts] = useState(null);\nconst [accountDetails, setAccountDetails] = useState(null);\n\n// Shorten String\n// const handleString = (string) => {\n//   return string.slice(0, 6) + \"...\" + string.slice(-4);\n// };\n\nconst bb = {\n  11155111: {\n    name: \"Sepolia\",\n    image:\n      \"https://w7.pngwing.com/pngs/268/1013/png-transparent-ethereum-eth-hd-logo-thumbnail.png\",\n    blockUrl: \"https://sepolia.etherscan.io/address/\",\n  },\n  5: {\n    name: \"Goerli\",\n    image:\n      \"https://w7.pngwing.com/pngs/268/1013/png-transparent-ethereum-eth-hd-logo-thumbnail.png\",\n    blockUrl: \"https://goerli.etherscan.io/address/\",\n  },\n  1: {\n    name: \"Ethereum\",\n    image:\n      \"https://w7.pngwing.com/pngs/268/1013/png-transparent-ethereum-eth-hd-logo-thumbnail.png\",\n    blockUrl: \"https://etherscan.io/address/\",\n  },\n  80001: {\n    name: \"Mumbai\",\n    image:\n      \"https://seeklogo.com/images/P/polygon-matic-logo-1DFDA3A3A8-seeklogo.com.png\",\n    blockUrl: \"https://mumbai.polygonscan.com/address/\",\n  },\n  137: {\n    name: \"Polygon\",\n    image:\n      \"https://seeklogo.com/images/P/polygon-matic-logo-1DFDA3A3A8-seeklogo.com.png\",\n    blockUrl: \"https://polygonscan.com/address/\",\n  },\n  43114: {\n    name: \"Avalanche\",\n    image: \"https://cryptologos.cc/logos/avalanche-avax-logo.png\",\n    blockUrl: \"https://snowtrace.io/address/\",\n  },\n  59144: {\n    name: \"Linea\",\n    image:\n      \"https://images.ctfassets.net/6g6hg01fg28j/2XZ3qN4qlcorV9RJPxwBlO/b15c5985cc31dded61273bbec7f5f696/Infura_Linea-Hero-Image.svg\",\n    blockUrl: \"https://lineascan.build/address/\",\n  },\n  1313161554: {\n    name: \"Aurora\",\n    image: \"https://s2.coinmarketcap.com/static/img/coins/200x200/14803.png\",\n    blockUrl: \"https://explorer.aurora.dev/address/\",\n  },\n  100: {\n    name: \"Gnosis\",\n    image: \"https://i.ibb.co/nPZWrs4/gnosislogo.png\",\n    blockUrl: \"https://gnosisscan.io/address/\",\n  },\n  324: {\n    name: \"Zsync\",\n    image: \"https://lite.zksync.io/images/logo-no-letters.svg\",\n    blockUrl: \"https://explorer.zksync.io/address/\",\n  },\n  42161: {\n    name: \"Arbitrum\",\n    image:\n      \"https://strapi.mewapi.io/uploads/large_arbitrum_shield_3f24102a28.png\",\n    blockUrl: \"https://arbiscan.io/address/\",\n  },\n  56: {\n    name: \"BNB\",\n    image:\n      \"https://seeklogo.com/images/B/binance-coin-bnb-logo-97F9D55608-seeklogo.com.png\",\n    blockUrl: \"https://bscscan.com/address/\",\n  },\n};\n\nuseEffect(() => {\n  setAccounts(JSON.parse(Storage.get(`${userId}`)));\n});\n\nuseEffect(() => {\n  if (networkName) {\n    if (!accounts) {\n      setAccountDetails([\n        {\n          accountId,\n          accountDetails: [\n            { networkName, chainId, accountId, status: \"Connected\" },\n          ],\n        },\n      ]);\n      Storage.set(\n        `${userId}`,\n        JSON.stringify([\n          {\n            accountId,\n            accountDetails: [\n              { networkName, chainId, accountId, status: \"Connected\" },\n            ],\n          },\n        ])\n      );\n    }\n    if (accounts) {\n      let accountExist = false;\n      for (let i = 0; i < accounts.length; i++) {\n        if (accountId == accounts[i].accountId) {\n          accountExist = true;\n          const cA = accounts[i].accountDetails;\n          if (cA.length < 1) {\n            cA = [{ networkName, chainId, accountId, status: \"Connected\" }];\n            accounts[i].accountDetails = cA;\n          } else {\n            let chainExist = false;\n            for (let j = 0; j < accounts[i].accountDetails.length; j++) {\n              if (networkName == accounts[i].accountDetails[j].networkName) {\n                chainExist = true;\n                accounts[i].accountDetails[j].status = \"Connected\";\n                setAccountDetails(accounts[i].accountDetails);\n                Storage.set(`${userId}`, JSON.stringify(accounts));\n              } else if (networkName != accounts[i].networkName) {\n                accounts[i].accountDetails[j].status = \"Disconnected\";\n                setAccountDetails(accounts[i].accountDetails);\n                Storage.set(`${userId}`, JSON.stringify(accounts));\n              }\n            }\n            if (!chainExist) {\n              cA = [\n                ...cA,\n                { networkName, chainId, accountId, status: \"Connected\" },\n              ];\n              accounts[i].accountDetails = cA;\n              setAccountDetails(accounts[i].accountDetails);\n              Storage.set(`${userId}`, JSON.stringify(accounts));\n            }\n          }\n        }\n      }\n      if (!accountExist) {\n        setAccountDetails([\n          {\n            accountId,\n            accountDetails: [\n              { networkName, chainId, accountId, status: \"Connected\" },\n            ],\n          },\n        ]);\n        Storage.set(\n          `${userId}`,\n          JSON.stringify([\n            ...accounts,\n            {\n              accountId,\n              accountDetails: [\n                { networkName, chainId, accountId, status: \"Connected\" },\n              ],\n            },\n          ])\n        );\n      }\n    }\n  }\n}, [networkName, chainId, accountId, accountDetails]);\n\nuseEffect(() => {\n  if (Ethers.provider()) {\n    Ethers.provider()\n      .getNetwork()\n      .then((chainIdData) => {\n        setNetworkName(chainIdData.name);\n      });\n\n    Ethers.provider()\n      .getNetwork()\n      .then((chainIdData) => {\n        setChainId(chainIdData.chainId);\n      });\n\n    Ethers.provider()\n      .getSigner()\n      .getAddress()\n      .then((data) => {\n        setAccountId(data);\n      });\n  }\n}, []);\n\nreturn (\n  <ConnectedAccount>\n    <Header>\n      <div class=\"welcome\">\n        <h2 class=\"welcomeNearId\">Welcome {context.accountId}</h2>\n        <p>Here's your onchain activity history</p>\n      </div>\n      <div>\n        {bb[`${chainId}`] == undefined ? (\n          <Chain>\n            <img\n              class=\"chainsimages\"\n              src=\"https://i.ibb.co/G5BdF6F/notsupportedimg.png\"\n            />\n            <h4>Chain Not Supported</h4>\n          </Chain>\n        ) : (\n          <Chain>\n            <img\n              class=\"chainsimages\"\n              src={bb[`${chainId}`].image}\n              alt=\"matic-logo-1\"\n              border=\"0\"\n            />\n            <h3>{bb[`${chainId}`].name}</h3>\n          </Chain>\n        )}\n      </div>\n    </Header>\n    <Accounts>\n      {accounts &&\n        accounts.map((item, index) => (\n          <div key={index}>\n            <Account>\n              <div class=\"accountHeader\">\n                <h4>Account {index + 1}</h4>\n                <Status>\n                  {item.accountId == accountId ? (\n                    <img src=\"https://i.ibb.co/RypQPsn/Group-3.png\" />\n                  ) : (\n                    <img\n                      class=\"disconnectedImg\"\n                      src=\"https://i.ibb.co/RypQPsn/Group-3.png\"\n                    />\n                  )}\n                  <p>\n                    {item.accountId == accountId\n                      ? \"Connected\"\n                      : \"Not Connected\"}\n                  </p>\n                </Status>\n              </div>\n              <h6 class=\"accountId\">\n                <strong>Account ID: </strong> {item.accountId}\n              </h6>\n              {bb[`${chainId}`] && (\n                <a\n                  class=\"explorerBtn\"\n                  target=\"_blank\"\n                  href={bb[`${chainId}`].blockUrl + item.accountId}\n                >\n                  Explorer URL\n                </a>\n              )}\n            </Account>\n          </div>\n        ))}\n    </Accounts>\n  </ConnectedAccount>\n);\n\n//   <h6>\n//     <strong>Account ID: </strong> {handleString(item.accountId)}\n//   </h6>\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/mitchyugan.near/widget/LinkETHAccountsToNearAccount.ConnectedAccount", "fact_widget_deployments_id": "75102382e30a9d15650827f59d12c7a2", "inserted_timestamp": "2023-11-30T13:21:08.243Z", "modified_timestamp": "2023-12-20T02:50:47.065Z", "__row_index": 7}