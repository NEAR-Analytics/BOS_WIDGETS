{"tx_hash": "yHBM6TEE6Jwzwq5yJpzxtA5wTn5GcmfR8yWQPYtZfSE", "action_id_social": "4Bkt41jvYUtccEhxYCbkfPRGq7MXcBpCrngEQtud3pqN-0-widget", "block_id": 99471886, "block_timestamp": "2023-08-23T12:13:55.253Z", "signer_id": "abhishekanirudhan.near", "widget_name": "NEAR.ATLAS.BDS_NFT_PROJECTS", "source_code": "let rawData = fetch(\n  \"https://api.flipsidecrypto.com/api/v2/queries/4ddb391f-b3ac-4243-ac35-5c0fc9a323a9/data/latest\",\n  {\n    subscribe: true,\n    method: \"GET\",\n    headers: {\n      Accept: \"*/*\",\n    },\n  }\n);\n\nlet Style = styled.div`\n\n          `;\n\nlet nodes = rawData.body || [];\n\nfunction formatPercentNew(text) {\n  let number = parseFloat(text);\n  return <span className=\"text-white\">{number}%</span>;\n}\n\nfunction formatNumber(num) {\n  return (\n    <span className=\"text-white\">\n      {num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\")}\n    </span>\n  );\n}\n\nfunction formatNumberDecimal(text) {\n  let number = parseInt(text);\n  return (\n    <span className=\"text-white\">\n      {number.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\")}\n    </span>\n  );\n}\n\nfunction formatCell(text) {\n  return (\n    <a\n      href={\n        \"https://nearatlas.com/#/abhishekanirudhan.near/widget/NEAR.ATLAS.BDS_NFT_DETAILED_PROJECT_DASHBOARD?project_name=\" +\n        text\n      }\n      className=\"text-warning text-wrap \"\n    >\n      {text}\n    </a>\n  );\n}\n\nfunction formatText(text) {\n  let number = parseFloat(text);\n  if (number < 0) {\n    return <span className=\"text-danger\">{number}%</span>;\n  } else if (number > 0) {\n    return <span className=\"text-success\">{number}%</span>;\n  } else {\n    return <span className=\"text-warning\">{number}%</span>;\n  }\n}\n\nconst data = {\n  nodes: nodes,\n};\n\nconst COLUMNS = [\n  {\n    label: <p className=\"text-center text-white text-wrap\">Project Name</p>,\n    renderCell: (item) => formatCell(item[\"Project Name\"]),\n    sort: { sortKey: \"Project Name\" },\n  },\n  {\n    label: <p className=\"text-center text-white text-wrap \">DAU</p>,\n    renderCell: (item) => formatNumber(item[\"DAU\"]),\n    sort: { sortKey: \"DAU\" },\n  },\n  {\n    label: <p className=\"text-center text-white text-wrap \">MAU</p>,\n    renderCell: (item) => formatNumber(item[\"MAU\"]),\n    sort: { sortKey: \"MAU\" },\n  },\n  {\n    label: (\n      <p className=\"text-center text-white text-wrap \">Accounts Created</p>\n    ),\n    renderCell: (item) => formatNumber(item[\"Accounts Created\"]),\n    sort: { sortKey: \"Accounts Created\" },\n  },\n  {\n    label: (\n      <p className=\"text-center text-white text-wrap \">\n        Accounts Created - Past 30 Days\n      </p>\n    ),\n    renderCell: (item) => formatNumber(item[\"Accounts Created - 30d\"]),\n    sort: { sortKey: \"Accounts Created - 30d\" },\n  },\n  {\n    label: <p className=\"text-center text-white text-wrap \">NFT Mints</p>,\n    renderCell: (item) => formatNumber(item[\"NFT Mints\"]),\n    sort: { sortKey: \"NFT Mints\" },\n  },\n  {\n    label: <p className=\"text-center text-white text-wrap \">Unique Minters</p>,\n    renderCell: (item) => formatNumber(item[\"Unique Minters\"]),\n    sort: { sortKey: \"Unique Minters\" },\n  },\n  {\n    label: (\n      <p className=\"text-center text-white text-wrap \">\n        NFT Mints - Past 30 Days\n      </p>\n    ),\n    renderCell: (item) => formatNumber(item[\"NFT Mints - 30d\"]),\n    sort: { sortKey: \"NFT Mints - 30d\" },\n  },\n  {\n    label: (\n      <p className=\"text-center text-white text-wrap \">\n        Unique Minters - Past 30 Days\n      </p>\n    ),\n    renderCell: (item) => formatNumber(item[\"Unique Minters - 30d\"]),\n    sort: { sortKey: \"Unique Minters - 30d\" },\n  },\n];\nconst sortFns = {\n  ContractAddress: (array) =>\n    array.sort((a, b) => a[\"Project Name\"].localeCompare(b[\"Project Name\"])),\n  DAU: (array) => array.sort((a, b) => a[\"DAU\"] - b[\"DAU\"]),\n  MAU: (array) => array.sort((a, b) => a[\"MAU\"] - b[\"MAU\"]),\n  \"Accounts Created\": (array) =>\n    array.sort((a, b) => a[\"Accounts Created\"] - b[\"Accounts Created\"]),\n  \"Accounts Created - 30d\": (array) =>\n    array.sort(\n      (a, b) => a[\"Accounts Created - 30d\"] - b[\"Accounts Created - 30d\"]\n    ),\n  \"NFT Mints\": (array) => array.sort((a, b) => a[\"NFT Mints\"] - b[\"NFT Mints\"]),\n  \"Unique Minters\": (array) =>\n    array.sort((a, b) => a[\"Unique Minters\"] - b[\"Unique Minters\"]),\n  \"NFT Mints - 30d\": (array) =>\n    array.sort((a, b) => a[\"NFT Mints - 30d\"] - b[\"NFT Mints - 30d\"]),\n  \"Unique Minters - 30d\": (array) =>\n    array.sort((a, b) => a[\"Unique Minters - 30d\"] - b[\"Unique Minters - 30d\"]),\n};\n\nreturn (\n  <div className=\"text-bg-dark rounded-4 mb-12\">\n    {data !== null ? (\n      <div Style={{ \"min-width\": \"780px\" }} className=\"bg-dark\">\n        <BasicTable columns={COLUMNS} data={data} sortFns={sortFns} />\n      </div>\n    ) : (\n      <div>Loading ...</div>\n    )}\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/abhishekanirudhan.near/widget/NEAR.ATLAS.BDS_NFT_PROJECTS", "fact_widget_deployments_id": "f46198a4370638f4a347d16465a4ac10", "inserted_timestamp": "2023-08-23T14:19:46.370Z", "modified_timestamp": "2023-08-23T14:19:46.370Z", "__row_index": 4}