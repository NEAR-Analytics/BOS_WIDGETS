{"tx_hash": "Bj8YMCi2T3H1ss91RUFp9QhKgqWJi2Hb6L9o3Qb12YHN", "action_id_social": "6JG2rfpMN4jHbH61JYrnyqG6vUkb9SUhePQq6Rj3wvPt-0-widget", "block_id": 98857466, "block_timestamp": "2023-08-15T11:26:05.129Z", "signer_id": "chess-game.near", "widget_name": "Notification.Item.ChessGame", "source_code": "const { accountId, value, blockHeight } = props;\n\nconst contractId = \"app.chess-game.near\";\nconst chessProfile = Social.getr(`chess-game.near/profile`);\n\nconst children = (\n  <a\n    href={`#/mob.near/widget/ProfilePage?accountId=${accountId}`}\n    className=\"link-dark text-truncate d-inline-flex\"\n  >\n    <Widget\n      key=\"image\"\n      src=\"mob.near/widget/ProfileImage\"\n      props={{\n        style: { width: \"1.5em\", height: \"1.5em\", marginRight: \"0.1em\" },\n        profile: chessProfile,\n        accountId: \"chess-game.near\",\n        className: \"d-inline-block\",\n        imageClassName: \"rounded w-100 h-100 align-top\",\n      }}\n    />\n    <span key=\"accountId\" className=\"text-muted ms-1\">\n      chess game\n    </span>\n  </a>\n);\nconst chessGameTrigger = (\n  <Widget\n    src=\"mob.near/widget/Profile.OverlayTrigger\"\n    props={{ accountId: \"chess-game.near\", children }}\n  />\n);\n\nlet notifierId = \"chess-game.near\";\nlet L;\nlet R;\nlet profile;\nlet game_id;\nswitch (value.item.type) {\n  case \"challenged\":\n    notifierId = value.item.data.challenger_id;\n    profile = Social.getr(`${notifierId}/profile`);\n    L = (\n      <>\n        {profile.name} challenged you for a {chessGameTrigger}\n      </>\n    );\n    R = (\n      <button\n        onClick={() => {\n          Near.call(contractId, \"accept_challenge\", {\n            challenge_id: value.item.data.challenge_id,\n          });\n        }}\n      >\n        Accept\n      </button>\n    );\n    break;\n  case \"rejected-challenge\":\n    notifierId = value.item.data.challenged_id;\n    profile = Social.getr(`${notifierId}/profile`);\n    L = (\n      <>\n        {profile.name} rejected your {chessGameTrigger} challenge\n      </>\n    );\n    R = \"\ud83d\ude22\";\n    break;\n  case \"accepted-challenge\":\n    notifierId = value.item.data.challenged_id;\n    profile = Social.getr(`${notifierId}/profile`);\n    L = (\n      <>\n        {profile.name} accepted your {chessGameTrigger} challenge\n      </>\n    );\n    R = (\n      <a\n        className=\"btn btn-outline-dark\"\n        href={`#/chess-game.near/widget/ChessGameLobby?game_id=${encodeURIComponent(\n          JSON.stringify(value.item.data.game_id)\n        )}`}\n      >\n        View game\n      </a>\n    );\n    break;\n  case \"your-turn\":\n    game_id = value.item.data.game_id;\n    notifierId = game_id[1] === context.accountId ? game_id[2] : game_id[1];\n    profile = Social.getr(`${notifierId}/profile`);\n    L = (\n      <>\n        It is your {chessGameTrigger} turn against {profile.name}\n      </>\n    );\n    R = (\n      <a\n        className=\"btn btn-outline-dark\"\n        href={`#/chess-game.near/widget/ChessGameLobby?game_id=${encodeURIComponent(\n          JSON.stringify(value.item.data.game_id)\n        )}`}\n      >\n        View game\n      </a>\n    );\n    break;\n  case \"outcome\":\n    game_id = value.item.data.game_id;\n    notifierId = game_id[1] === context.accountId ? game_id[2] : game_id[1];\n    profile = Social.getr(`${notifierId}/profile`);\n    const { outcome } = value.item.data;\n    let winner = null;\n    if (outcome.Victory === \"White\") {\n      winner = game_id[1];\n    } else if (outcome.Victory === \"Black\") {\n      winner = game_id[2];\n    }\n    if (winner != null) {\n      L = (\n        <>\n          You {context.accountId === winner ? \"won\" : \"lost\"} your{\" \"}\n          {chessGameTrigger} against {profile.name}\n        </>\n      );\n    } else {\n      L = (\n        <>\n          There was a draw in your {chessGameTrigger} against {profile.name}\n        </>\n      );\n    }\n    R = (\n      <a\n        className=\"btn btn-outline-dark\"\n        href={`#/chess-game.near/widget/ChessGameLobby?replay_game_id=${encodeURIComponent(\n          JSON.stringify(value.item.data.game_id)\n        )}`}\n      >\n        Show replay\n      </a>\n    );\n    break;\n}\n\nreturn (\n  <div className=\"d-flex justify-content-between\">\n    <div className=\"me-2 text-truncate\">\n      <div className=\"text-truncate\">\n        <Widget\n          src=\"mob.near/widget/ProfileLine\"\n          props={{ accountId: notifierId, tooltip: true }}\n        />\n      </div>\n      <div\n        className=\"text-truncate text-muted\"\n        style={{ paddingLeft: \"1.8em\" }}\n      >\n        {L}\n        <Widget src=\"mob.near/widget/TimeAgo\" props={{ blockHeight }} />\n      </div>\n    </div>\n    <div className=\"text-nowrap\">{R}</div>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/chess-game.near/widget/Notification.Item.ChessGame", "fact_widget_deployments_id": "3d6056b4ce87b7a33463778367a552fe", "inserted_timestamp": "2023-08-15T13:20:03.524Z", "modified_timestamp": "2023-08-15T13:20:03.524Z", "__row_index": 0}