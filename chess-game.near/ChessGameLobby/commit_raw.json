{"tx_hash": "DuB4XHkHQNPvaPdy2CqnsFq5yZG6rqUyHQN8hB3MLQTd", "action_id_social": "6M7gjCytqimj1V8kB36VKisHzNWr3DM2bS2p3BvPEb2D-0-widget", "block_id": 104668309, "block_timestamp": "2023-11-01T06:50:48.727Z", "signer_id": "chess-game.near", "widget_name": "ChessGameLobby", "source_code": "const { accountId } = context;\n\nconst contractId = \"app.chess-game.near\";\nconst buttonWidget = \"chess-game.near/widget/ChessGameButton\";\nconst loadingWidget = \"chess-game.near/widget/ChessGameLoading\";\n\nconst currentLink = \"#/chess-game.near/widget/ChessGameLobby\";\n\nconst LobbyView = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  max-width: 550px;\n  margin: 0 auto;\n  box-sizing: border-box;\n\n  h1 {\n    align-self: center;\n  }\n\n  > * {\n    margin: 1.2rem 0;\n  }\n`;\nconst Disclaimer = styled.div`\n  margin-top: 1rem;\n  font-style: italic;\n  font-size: 1.2rem;\n`;\n\nState.init({\n  tab: props.tab ?? state.tab ?? \"game\",\n  isRegistered: state.isRegistered,\n});\n\nconst updateIsRegistered = () => {\n  Near.asyncView(contractId, \"storage_balance_of\", {\n    account_id: accountId,\n  }).then((res) => {\n    State.update({\n      isRegistered: !!res,\n    });\n  });\n};\n\nconst isHumanInGame = Near.view(contractId, \"is_human\", {\n  account_id: accountId,\n});\n\nif (isHumanInGame == null || isHumanInGame === undefined) {\n  return <Widget src={loadingWidget} />;\n}\n\nif (state.isRegistered === null || state.isRegistered === undefined) {\n  if (!accountId) {\n    State.update({\n      isRegistered: false,\n    });\n  } else {\n    updateIsRegistered();\n  }\n  return <Widget src={loadingWidget} />;\n}\n\nconst userSBTs = Near.view(\"registry.i-am-human.near\", \"is_human\", {\n  account: accountId,\n});\nconst isHuman =\n  userSBTs != null && userSBTs !== undefined && userSBTs.length > 0;\n\nconst registerAccount = () => {\n  Near.call(\n    contractId,\n    \"storage_deposit\",\n    {},\n    undefined,\n    \"50000000000000000000000\"\n  );\n  // TODO wait for tx\n  updateIsRegistered();\n};\n\nconst updateIsHuman = () => {\n  Near.call(\n    contractId,\n    \"update_is_human\",\n    { account_id: accountId },\n    \"50000000000000\"\n  );\n  isHuman = true;\n};\n\nconst navigate = (tab) => {\n  State.update({\n    tab,\n  });\n};\n\nconst pages = [\n  {\n    title: \"Play\",\n    icon: <i className=\"bi-joystick\"></i>,\n    active: state.tab === \"game\",\n    href: currentLink + \"?tab=game\",\n    onClick: () => navigate(\"game\"),\n    widgetName: \"ChessGameTab.Default\",\n  },\n  {\n    title: \"Challenge\",\n    icon: <i className=\"bi-people-fill\"></i>,\n    active: state.tab === \"challenge\",\n    href: currentLink + \"?tab=challenge\",\n    onClick: () => navigate(\"challenge\"),\n    widgetName: \"ChessGameTab.Challenge\",\n  },\n  {\n    title: \"AI\",\n    icon: <i className=\"bi-robot\"></i>,\n    active: state.tab === \"ai\",\n    href: currentLink + \"?tab=ai\",\n    onClick: () => navigate(\"ai\"),\n    widgetName: \"ChessGameTab.AI\",\n  },\n  {\n    title: \"Replay\",\n    icon: <i className=\"bi-collection-play\"></i>,\n    active: state.tab === \"replay\",\n    href: currentLink + \"?tab=replay\",\n    onClick: () => navigate(\"replay\"),\n    widgetName: \"ChessGameTab.Replay\",\n  },\n  [\n    {\n      title: \"Links\",\n      icon: <i className=\"bi-link\"></i>,\n    },\n    {\n      title: \"BOS Profile\",\n      icon: <i className=\"bi-person-fill\"></i>,\n      href: \"#/mob.near/widget/ProfilePage?accountId=chess-game.near\",\n    },\n    {\n      title: \"Github\",\n      icon: <i className=\"bi-github\"></i>,\n      href: \"https://github.com/Protocol-Pawns\",\n    },\n    {\n      title: \"Twitter\",\n      icon: <i className=\"bi-twitter\"></i>,\n      href: \"https://twitter.com/protocolpawns\",\n    },\n    {\n      title: \"Discord\",\n      icon: <i className=\"bi-discord\"></i>,\n      href: \"https://discord.com/invite/wKqEnXjaVH\",\n    },\n  ],\n];\n\nlet activePage = null;\npages.find((page) => {\n  if (page.active) {\n    activePage = page;\n    return true;\n  }\n  return false;\n});\n\nconst pageContent = activePage ? (\n  <Widget\n    src={\"chess-game.near/widget/\" + activePage.widgetName}\n    props={{ isRegistered: state.isRegistered, game_id: props.game_id }}\n  />\n) : (\n  \"404\"\n);\n\nreturn (\n  <div className=\"row\">\n    <Widget\n      src=\"chess-game.near/widget/Common.Layout.Header\"\n      props={{\n        items: pages,\n      }}\n    />\n    <div className=\"col\">\n      <LobbyView>\n        <Disclaimer>\n          Play chess fully on chain powered by Near Protocol and the BOS. If you\n          want to learn more please visit the profile page.\n        </Disclaimer>\n        {!state.isRegistered && accountId && (\n          <>\n            <Disclaimer>\n              You need to pay storage deposit of 0.05N first before being\n              allowed to play Protocol Pawns.\n              <br />\n              If you don't get redirected after registering, please refresh the\n              page.\n            </Disclaimer>\n            <Widget\n              src={buttonWidget}\n              props={{\n                onClick: registerAccount,\n                fontSize: \"1.2rem\",\n                content: \"Register Account\",\n              }}\n            />\n          </>\n        )}\n        {state.isRegistered && accountId && isHuman && !isHumanInGame && (\n          <>\n            <Disclaimer>\n              You own an I-A-HUMAN SBT, but this information is not yet stored\n              in the Protocol Pawns smart contract. You need to sign a\n              transaction once to be eligible to have an ELO rating.\n              <br />\n              Sorry for the inconvenience! In the old version of the contract\n              everyone had an ELO rating, but had to gate it behind IAH SBT.\n            </Disclaimer>\n            <Widget\n              src={buttonWidget}\n              props={{\n                onClick: updateIsHuman,\n                fontSize: \"1.2rem\",\n                content: \"Update humanness\",\n              }}\n            />\n          </>\n        )}\n        {pageContent}\n        <Disclaimer>\n          If you won or lost a game it will no longer be displayed. You can\n          check the most recent transactions status on{\" \"}\n          <a\n            target=\"_blank\"\n            href=\"https://nearblocks.io/address/app.chess-game.near\"\n          >\n            Nearblocks\n          </a>\n          .\n        </Disclaimer>\n      </LobbyView>\n    </div>\n  </div>\n);\n", "metadata": {"description": "_Protocol Pawns_ is your very first turn based fully on chain chess game.\n\nFeatures:\n\n- play against an AI (3 difficulties)\n- PvP", "linktree": {"website": "chess-game.near.social"}, "platform": "jutsu.ai"}, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/chess-game.near/widget/ChessGameLobby", "fact_widget_deployments_id": "47ed5e57d772e2e6902e31245f80837f", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 26}