{"tx_hash": "C3cA5SBDX2LZ4tVFs84XExb1PD6wQEy83WoDHzvuaYk2", "action_id_social": "FSvyWpgo5oyxrSGCLwEeFeDK9okfXfazZ8oqZ2q4aSPd-0-widget", "block_id": 98577213, "block_timestamp": "2023-08-11T16:24:45.521Z", "signer_id": "ciocan.near", "widget_name": "op-bridge-list-withdrawals", "source_code": "const sender = Ethers.send(\"eth_requestAccounts\", [])[0];\n\nconst tokens = props.tokens ?? [];\n\nState.init({\n  ethwithdrawalss: [],\n  ercwithdrawals: [],\n});\n\nconst { chainId } = state;\n\nif (sender) {\n  Ethers.provider()\n    .getNetwork()\n    .then(({ chainId }) => {\n      State.update({ chainId });\n    });\n}\n\nconst isMainnet = chainId === 1 || chainId === 10;\nconst isTestnet = chainId === 5 || chainId === 420;\nconst isCorrectNetwork = isMainnet || isTestnet;\n\nconst OP_BRIDGE_DEPOSIT_CONTRACT = isTestnet\n  ? \"0x636Af16bf2f682dD3109e60102b8E1A089FedAa8\"\n  : \"0x99C9fc46f92E8a1c0deC1b1747d010903E884bE1\";\n\nconst OP_BRIDGE_WITHDRAW_CONTRACT = isTestnet\n  ? \"0x4200000000000000000000000000000000000010\"\n  : \"0x4200000000000000000000000000000000000010\";\n\nconst bridgeAbiDeposit = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"l1Token\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"l2Token\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"bytes\",\n        name: \"extraData\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"ERC20WithdrawalFinalized\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"bytes\",\n        name: \"extraData\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"ETHWithdrawalFinalized\",\n    type: \"event\",\n  },\n];\n\nconst bridgeAbiWithdrawl = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"l1Token\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"l2Token\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"bytes\",\n        name: \"extraData\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"WithdrawalInitiated\",\n    type: \"event\",\n  },\n];\n\nconst bridgeIfaceDeposit = new ethers.utils.Interface(bridgeAbiDeposit);\nconst bridgeContractDeposit = new ethers.Contract(\n  OP_BRIDGE_DEPOSIT_CONTRACT,\n  bridgeAbiDeposit,\n  Ethers.provider().getSigner()\n);\n\nconst bridgeContractWithdrawl = new ethers.Contract(\n  OP_BRIDGE_WITHDRAW_CONTRACT,\n  bridgeAbiWithdrawl,\n  Ethers.provider().getSigner()\n);\n\nfunction getETHWithdrawals() {\n  console.log(\"getETHWithdrawals\");\n  bridgeContractDeposit\n    .queryFilter(bridgeContractDeposit.filters.ETHWithdrawalFinalized(sender))\n    .then((events) => {\n      console.log(\"finalized\", events);\n    });\n\n  bridgeContractWithdrawl\n    .queryFilter(\n      bridgeContractWithdrawl.filters.WithdrawalInitiated(_, _, sender)\n    )\n    .then((events) => {\n      //   console.log(\"initialized\", events);\n      events.forEach((ev) => {\n        ev.getTransactionReceipt().then((tx) => {\n          //   const { value, hash } = tx;\n          console.log(\"tx\", tx);\n        });\n      });\n    });\n}\n\ngetETHWithdrawals();\n\nreturn <div>...</div>;\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/ciocan.near/widget/op-bridge-list-withdrawals", "fact_widget_deployments_id": "3cc8895772582232b3f5aa677289701e", "inserted_timestamp": "2023-08-11T18:18:43.867Z", "modified_timestamp": "2023-08-11T18:18:43.867Z", "__row_index": 5}