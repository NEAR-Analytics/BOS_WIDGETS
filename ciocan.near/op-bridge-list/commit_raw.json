{"tx_hash": "9JAvytX3Ae5bJPTer2ZfTorB9RuBmSCycYowvJ7SNFMo", "action_id_social": "BNV3ouZxsgjKS1HNEeb1TqMPtearNP3ATeLjwX56VgS9-0-widget", "block_id": 98423116, "block_timestamp": "2023-08-09T13:03:20.154Z", "signer_id": "ciocan.near", "widget_name": "op-bridge-list", "source_code": "const provider = Ethers.provider();\nconst sender = Ethers.send(\"eth_requestAccounts\", [])[0];\n\nState.init({\n  deposits: [],\n  withdrawls: [],\n});\n\nconst { chainId, withdrawls } = state;\n\nif (sender) {\n  Ethers.provider()\n    .getNetwork()\n    .then(({ chainId }) => {\n      State.update({ chainId });\n    });\n}\n\nconst isMainnet = chainId === 1 || chainId === 10;\nconst isTestnet = chainId === 5 || chainId === 420;\nconst isCorrectNetwork = isMainnet || isTestnet;\n\nconst OP_BRIDGE_DEPOSIT_CONTRACT = isTestnet\n  ? \"0x636Af16bf2f682dD3109e60102b8E1A089FedAa8\"\n  : \"0x99C9fc46f92E8a1c0deC1b1747d010903E884bE1\";\n\nconst bridgeAbi = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"bytes\",\n        name: \"extraData\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"ETHDepositInitiated\",\n    type: \"event\",\n  },\n];\n\nconst bridgeIface = new ethers.utils.Interface(bridgeAbi);\n\nfunction getDeposits() {\n  // console.log(\"getDeposits\");\n  const bridgeContract = new ethers.Contract(\n    OP_BRIDGE_DEPOSIT_CONTRACT,\n    bridgeAbi,\n    Ethers.provider().getSigner()\n  );\n\n  const deposits = new Map();\n\n  bridgeContract\n    .queryFilter(bridgeContract.filters.ETHDepositInitiated(sender))\n    .then((events) => {\n      // console.log(events);\n      events.forEach((ev) => {\n        const { blockNumber, transactionHash } = ev;\n        deposits.set(transactionHash, { blockNumber });\n\n        ev.getTransaction().then((tx) => {\n          const { value, hash } = tx;\n          // console.log(\"tx\", tx);\n          const amount = ethers.utils.formatUnits(value, 18);\n          deposits.set(hash, {\n            ...deposits.get(hash),\n            amount,\n          });\n        });\n        ev.getTransactionReceipt().then((tx) => {\n          // console.log(\"txr\", tx);\n          const { status, type, transactionHash } = tx;\n          deposits.set(transactionHash, {\n            ...deposits.get(transactionHash),\n            status,\n            type,\n          });\n        });\n        ev.getBlock().then((block) => {\n          //   console.log(transactionHash, \"block\", block);\n          const { timestamp } = block;\n          deposits.set(transactionHash, {\n            ...deposits.get(transactionHash),\n            timestamp,\n          });\n          // State.update({ deposits: [...deposits] });\n        });\n      });\n    })\n    .finally(() => {\n      console.log(\"done\");\n      State.update({ deposits: [...deposits] });\n    });\n}\n\ngetDeposits();\n\nfunction renderDeposit([key, value]) {\n  console.log(\"key\", key, value);\n  //   const { timestamp, amount } = value;\n  //   const date = new Date(timestamp * 1000);\n  const href = `https://${isTestnet ? \"goerli.\" : \"\"}etherscan.io/tx/${key}`;\n  const hash = `${key.substr(0, 6)}...${key.substr(-4)}`;\n  return (\n    <tr>\n      <td>{`date`}</td>\n      <td>Deposit</td>\n      <td>{`amount`}</td>\n      <td>\n        <a href={href} target=\"_blank\">\n          {hash}\n        </a>\n      </td>\n      <td>Complete</td>\n    </tr>\n  );\n}\n\nconsole.log(state.deposits);\n\nreturn (\n  <div>\n    <h6>Deposits</h6>\n    <table>\n      <thead>\n        <tr>\n          <th>Time</th>\n          <th>Type</th>\n          <th>Amount</th>\n          <th>Transaction</th>\n          <th>Status</th>\n        </tr>\n      </thead>\n      <tbody>{[...state.deposits].reverse().map(renderDeposit)}</tbody>\n    </table>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/ciocan.near/widget/op-bridge-list", "fact_widget_deployments_id": "992bd53c00be83f3297070e81b54a19c", "inserted_timestamp": "2023-08-09T14:47:02.166Z", "modified_timestamp": "2023-08-09T14:47:02.166Z", "__row_index": 3}