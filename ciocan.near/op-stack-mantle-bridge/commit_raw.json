{"tx_hash": "4Lvf3ndvsTEqjufauL9XWA17b33D8AWjZoyHm9152YGb", "action_id_social": "AZDagT8CxKfavT1Q3QvPXjVHPhb9GyeMbHUU21pBtNai-0-widget", "block_id": 101454175, "block_timestamp": "2023-09-19T05:53:32.377Z", "signer_id": "ciocan.near", "widget_name": "op-stack-mantle-bridge", "source_code": "const Container = styled.div`\n  display: flex;\n  gap: 8px;\n\n  .side {\n    margin-top: 20px;\n  }\n\n  .w3button button {\n    background-color: #854ce6;\n    color: white;\n    border: none;\n    border-radius: 30px;\n    padding: 12px 15px;\n  }\n`;\n\nconst Layout = styled.div`\n  display: flex;\n  flex-direction: column;\n  .title {\n    margin-left: 20px;\n    color: #666;\n  }\n  .link {\n    margin-top: 1rem;\n    a {\n        color: black;\n    }\n  }\n`;\n\nconst { tokens, ethAbi, erc20Abi } = VM.require(\n  \"ciocan.near/widget/op-stack-module\"\n);\n\nconst l2Network = \"mantle\";\nconst l2TestnetId = 5001;\nconst l2MainnetId = 5000;\nconst l2Networks = {\n  [l2MainnetId]: \"Mantle\",\n  [l2TestnetId]: \"Mantle Testnet\",\n};\nconst l2IconUrl = \"https://token-list.mantle.xyz/data/Mantle/logo.svg\";\n\nState.init({\n  gasLimit: ethers.BigNumber.from(\"300000\"),\n  isToastOpen: false,\n});\n\nconst { chainId, variant, title, description, isToastOpen, gasLimit } = state;\nconst isMainnet = chainId === 1 || chainId === l2MainnetId;\n\nconst onOpenChange = (v) => {\n  State.update({\n    isToastOpen: false,\n  });\n};\n\nconst provider = Ethers.provider();\nconst sender = Ethers.send(\"eth_requestAccounts\", [])[0];\n\nif (sender) {\n  Ethers.provider()\n    .getNetwork()\n    .then(({ chainId }) => {\n      State.update({ chainId });\n    });\n}\n\nfunction showToast({ variant, title, description }) {\n  State.update({\n    isToastOpen: true,\n    variant: variant ?? \"error\",\n    title: title ?? \"Transaction rejected\",\n    description: description ?? \"The transaction was rejected\",\n  });\n}\n\nfunction handleDepositETH(props) {\n  console.log(\"handleDepositETH\", props);\n  const { amount, token } = props;\n  const amountBig = ethers.utils.parseUnits(`${amount}`, 18);\n\n  const bridgeEthIface = new ethers.utils.Interface(ethAbi);\n  const encodedData = bridgeEthIface.encodeFunctionData(\n    \"depositETH(uint32, bytes)\",\n    [200000, 0]\n  );\n\n  Ethers.provider()\n    .getSigner()\n    .sendTransaction({\n      to: token.extensions.optimismBridgeAddress,\n      data: encodedData,\n      value: amountBig,\n      gasLimit,\n    })\n    .then((tx) => {\n      consle.log(\"depositETH ok:\", tx);\n    })\n    .catch((e) => {\n      console.log(\"depositETH error:\", e);\n      if (e.reason) {\n        showToast({ description: e.reason });\n      } else {\n        showToast({\n          variant: \"success\",\n          title: \"SUCCESS\",\n          description: \"ETH deposit ok\",\n        });\n      }\n    });\n}\n\nfunction handleDepositERC20(props) {\n  console.log(\"handleDepositERC20\", props);\n  const MNT_MIN_GAS = `200000`;\n  const ERC20_APPROVE_GAS = `81942`;\n  const ERC20_TRANSFER_GAS = `192460`;\n  const { amount, token } = props;\n\n  const l2ChainId = isMainnet ? l2MainnetId : l2TestnetId;\n  const tokenL2 = tokens\n    .filter((t) => t.symbol === token.symbol)\n    .find((t) => t.chainId === l2ChainId);\n\n  const bridgeErc20Iface = new ethers.utils.Interface(erc20Abi);\n  const erc20Contract = new ethers.Contract(\n    token.address,\n    bridgeErc20Iface,\n    provider.getSigner()\n  );\n  const bridgeContract = new ethers.Contract(\n    token.extensions.optimismBridgeAddress,\n    bridgeErc20Iface,\n    provider.getSigner()\n  );\n\n  const amountBig = ethers.utils.parseUnits(`${amount}`, token.decimals);\n\n  erc20Contract\n    .approve(token.extensions.optimismBridgeAddress, amountBig, {\n      gasLimit: ERC20_APPROVE_GAS,\n    })\n    .then((approveData) => {\n      console.log(\"approve\", approveData);\n\n      bridgeContract\n        .depositERC20(\n          token.address,\n          tokenL2.address,\n          amountBig,\n          MNT_MIN_GAS,\n          [],\n          {\n            gasLimit: ERC20_TRANSFER_GAS,\n          }\n        )\n        .then((tx) => {\n          console.log(\"depositERC20 ok\", tx);\n          showToast({\n            variant: \"success\",\n            title: \"SUCCESS\",\n            description: \"ERC20 deposit ok\",\n          });\n        })\n        .catch((e) => {\n          console.log(\"depositERC20 error:\", e);\n          showToast({ description: e.reason });\n        });\n    })\n    .catch((e) => {\n      console.log(\"approve error:\", e);\n      showToast({ description: e.reason });\n    });\n}\n\nconst onConfirm = (props) => {\n  console.log(\"onConfirm\", props);\n  const { network, token } = props;\n  if (network !== \"ethereum\") {\n    showToast({\n      title: \"Please switch to Ethereum\",\n      description: \"withdrawals are not yet supported\",\n    });\n    return;\n  }\n  if (token.symbol === \"ETH\") {\n    handleDepositETH(props);\n  } else {\n    handleDepositERC20(props);\n  }\n};\n\nconst onChangeAmount = (props) => {\n  console.log(\"onChangeAmount\", props);\n};\n\nconst onUpdateToken = (props) => {\n  console.log(\"onUpdateToken\", props);\n};\n\nif (!sender) {\n  return (\n    <Container>\n      <div className=\"w3button\">\n        <Web3Connect connectLabel=\"Connect to a wallet\" />\n      </div>\n    </Container>\n  );\n}\n\nconst depositsUrl = `https://bridge${\n  isMainnet ? \"\" : \".testnet\"\n}.mantle.xyz/account/deposit`;\n\nreturn (\n  <Layout>\n    <div class=\"title\">\n      <h5>Mantle Bridge</h5>\n    </div>\n    <Container>\n      <Widget\n        src=\"ciocan.near/widget/op-stack-bridge-ui\"\n        props={{\n          onConfirm,\n          onUpdateToken,\n          onChangeAmount,\n          tokens,\n          l2Network,\n          l2TestnetId,\n          l2MainnetId,\n          l2Networks,\n          l2IconUrl,\n          disableNetworkChange: true,\n        }}\n      />\n      <Widget\n        src=\"ciocan.near/widget/toast\"\n        props={{ open: isToastOpen, variant, title, description, onOpenChange }}\n      />\n    </Container>\n    <div class=\"link\">\n      To check the deposit status{\" \"}\n      <a href={depositsUrl} target=\"_blank\">\n        click here\n      </a>\n    </div>\n  </Layout>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/ciocan.near/widget/op-stack-mantle-bridge", "fact_widget_deployments_id": "65ad112c8118de1ec3cd50e7ccd74536", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}