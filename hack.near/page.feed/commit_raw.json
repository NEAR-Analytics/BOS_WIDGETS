{"tx_hash": "2HZyMYyxQYU1xVTrBmu7XhZJrmhcEaFMM83zs6HkqNJ2", "action_id_social": "3bLYkgqXHMUCug962fyT8hSXzVSP9TLP8AJQ8UMLmJD5-0-widget", "block_id": 113162415, "block_timestamp": "2024-02-19T15:46:21.359Z", "signer_id": "hack.near", "widget_name": "page.feed", "source_code": "const { currentPath, page, ...passProps } = props;\n\nconst { Post } = VM.require(\"buildhub.near/widget/components\") || {\n  Post: () => <></>,\n};\n\nfunction formatDate(date) {\n  const options = { year: \"numeric\", month: \"short\", day: \"numeric\" };\n  return date.toLocaleDateString(\"en-US\", options);\n}\n\nconst daoName = \"Build DAO\";\nconst feedLink = \"https://nearbuilders.org/feed\";\n\nconst { routes } = Social.getr(\"hack.near/widget/page.feed/config/routes\") ?? {\n  type: \"app\",\n  routes: {\n    all: {\n      path: \"hack.near/widget/feed\",\n      blockHeight: \"final\",\n      init: {\n        name: \"All\",\n        icon: \"bi-list\",\n        requiredHashtags: [\"build\"],\n      },\n    },\n    updates: {\n      path: \"hack.near/widget/feed\",\n      blockHeight: \"final\",\n      init: {\n        name: \"Updates\",\n        icon: \"bi-bell\",\n        requiredHashtags: [\"build\", \"update\"],\n        template: `### BUILDER UPDATE:  ${formatDate(new Date())}\n(posted via [${daoName} Gateway](${feedLink}?tab=update))\n\n**\u2705 DONE**\n- [what'd you do]\n- [link proof]\n\n**\u23e9 NEXT**\n- [what's next?]\n- [what are you thinking about?]\n\n**\ud83d\uded1 BLOCKERS**\n- [what's blocking you?]\n- [how can someone help?]\n`,\n      },\n    },\n    documentation: {\n      path: \"hack.near/widget/feed\",\n      blockHeight: \"final\",\n      init: {\n        name: \"Documentation\",\n        icon: \"bi-book\",\n        requiredHashtags: [\"build\", \"documentation\"],\n        template: `## TITLE\n(posted via [${daoName} Gateway](${feedLink}?tab=documentation))\n\n**WHAT IS _____?**\n- [context]\n- [why is it important?]\n\n**EXAMPLE**\n- [how can this be demonstrated?]\n- [what is the expected outcome?]\n\n**USAGE**\n- [where is it used?]\n- [how to use it]\n`,\n      },\n    },\n    question: {\n      path: \"hack.near/widget/feed\",\n      blockHeight: \"final\",\n      init: {\n        name: \"Question\",\n        icon: \"bi-question-lg\",\n        requiredHashtags: [\"build\", \"question\"],\n        template: `## what is your question?\n(posted via [${daoName} Gateway](${feedLink}?tab=question))\n\n[what are you thinking about?]\n[why are you asking?]\n`,\n      },\n    },\n    answer: {\n      path: \"hack.near/widget/feed\",\n      blockHeight: \"final\",\n      init: {\n        name: \"Answer\",\n        icon: \"bi-journal-code\",\n        requiredHashtags: [\"build\", \"answer\"],\n        template: `## Share an answer\n(posted via [${daoName} Gateway](${feedLink}?tab=answer))\n\n[please restate the question you are answering]\n\n[your answer]\n\n[link to relevant docs, examples, or resources]\n`,\n      },\n    },\n    opportunity: {\n      path: \"hack.near/widget/feed\",\n      blockHeight: \"final\",\n      init: {\n        name: \"Opportunity\",\n        icon: \"bi-briefcase\",\n        requiredHashtags: [\"build\", \"opportunity\"],\n        template: `## TITLE\n(posted via [${daoName} Gateway](${feedLink}?tab=opportunity))\n\n[what is the opportunity?]\n\n[explain the motivation or reason]\n`,\n      },\n    },\n    idea: {\n      path: \"hack.near/widget/feed\",\n      blockHeight: \"final\",\n      init: {\n        name: \"Idea\",\n        icon: \"bi-lightbulb\",\n        requiredHashtags: [\"build\", \"idea\"],\n        template: `## IDEA TITLE\n(posted via [${daoName} Gateway](${feedLink}?tab=idea))\n\n**What idea are you proposing?**\n- [Describe the idea]\n\n**Context or additional information:**\n- [Provide any context or details]\n`,\n      },\n    },\n    task: {\n      path: \"hack.near/widget/feed\",\n      blockHeight: \"final\",\n      init: {\n        name: \"Task\",\n        icon: \"bi-check-lg\",\n        requiredHashtags: [\"build\", \"task\"],\n        template: `## TASK TITLE\n(posted via [${daoName} Gateway](${feedLink}?tab=task))\n\n**What needs to be done?**\n- [Describe the task or action steps]\n\n**Context or additional information:**\n- [Provide any context or details]\n`,\n      },\n    },\n    feedback: {\n      path: \"hack.near/widget/feed\",\n      blockHeight: \"final\",\n      init: {\n        name: \"Feedback\",\n        icon: \"bi-chat-left-text\",\n        requiredHashtags: [\"build\", \"feedback\"],\n      },\n    },\n    events: {\n      path: \"buildhub.near/widget/events.Calendar\",\n      blockHeight: \"final\",\n      init: {\n        name: \"Events\",\n        icon: \"bi-calendar\",\n      },\n    },\n    bookmarks: {\n      path: \"buildhub.near/widget/OrderedGraphFeed\",\n      blockHeight: \"final\",\n      init: {\n        name: \"Bookmarks\",\n        icon: \"bi-bookmark\",\n        itemType: \"bookmark\",\n        renderItem: (item) => {\n          return (\n            <Post\n              accountId={item.accountId}\n              blockHeight={item.blockHeight}\n              noBorder={true}\n              hideComments={true}\n            />\n          );\n        },\n      },\n    },\n  },\n};\n\nconst { SidebarLayout } = VM.require(\"apps.near/widget/template.sidebar\") || {\n  SidebarLayout: () => <></>,\n};\n\nif (!page) page = Object.keys(routes)[0] || \"main\";\n\nconst Root = styled.div``;\n\nfunction Router({ active, routes }) {\n  const routeParts = active.split(\".\");\n\n  let currentRoute = routes;\n  let src = \"\";\n  let defaultProps = {};\n\n  for (let part of routeParts) {\n    if (currentRoute[part]) {\n      currentRoute = currentRoute[part];\n      src = currentRoute.path;\n\n      if (currentRoute.init) {\n        defaultProps = { ...defaultProps, ...currentRoute.init };\n      }\n    } else {\n      return <p>ERROR: NOTHING FOUND</p>;\n    }\n  }\n\n  return (\n    <div key={active}>\n      <Widget src={src} props={{ ...passProps, ...defaultProps }} />\n    </div>\n  );\n}\n\nconst Container = styled.div`\n  // display: flex;\n  height: 100%;\n`;\n\nconst Content = styled.div`\n  width: 100%;\n  height: 100%;\n`;\n\nreturn (\n  <Root>\n    <Container>\n      <SidebarLayout currentPath={currentPath} page={page} routes={routes}>\n        <Content>\n          <Router active={page} routes={routes} />\n        </Content>\n      </SidebarLayout>\n    </Container>\n  </Root>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/hack.near/widget/page.feed", "fact_widget_deployments_id": "c9893b43eac4ee1a4cb0a46fc349eff6", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 14}