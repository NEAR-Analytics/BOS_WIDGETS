{"tx_hash": "BDzzwdGezBrWR11cP7uZURtJvhZzyK5iQczBk1ozK7Ps", "action_id_social": "DMsVtYxA5FDiZmNaJ8UhGdgRNV4etuFYizh4rHCqUKVK-0-widget", "block_id": 102695119, "block_timestamp": "2023-10-05T19:32:06.342Z", "signer_id": "hack.near", "widget_name": "things", "source_code": "const listId = props?.listId ?? \"everything\";\nconst accountId = props?.accountId ?? context.accountId ?? \"hack.near\";\nconst isCurator = accountId === context.accountId;\n\nState.init({\n  things: [],\n  newThing: \"\",\n});\n\nfunction addThing(newThing) {\n  state.things.push(newThing);\n\n  State.update({\n    things: state.things,\n  });\n}\n\nfunction removeThing(thingKey) {\n  const updatedThings = state.things.filter((thing) => thing !== thingKey);\n\n  State.update({\n    things: updatedThings,\n  });\n}\n\nconst handleSave = () => {\n  const data = {\n    things: {\n      listId: state.things,\n    },\n  };\n\n  Social.set(data, {\n    onCommit: () => {},\n    onCancel: () => {},\n  });\n};\n\nconst path = `${accountId}/things/${listId}`;\nconst things = Social.get(path, \"optimistic\", {\n  subscribe: true,\n});\n\nconst items = things ? JSON.parse(things) : [];\n\nreturn (\n  <div className=\"d-flex flex-column gap-2\">\n    <div>\n      <h3>\n        <strong>id:</strong> {listId}\n      </h3>\n    </div>\n    <h5>\n      <i>curated by {accountId}</i>\n    </h5>\n    <hr />\n    <div>\n      {isCurator ? (\n        <h4 className=\"mb-3\">update list</h4>\n      ) : (\n        <h4 className=\"mb-3\">propose changes</h4>\n      )}\n      <input\n        placeholder=\"input bos path of anything\"\n        onChange={(e) => State.update({ newThing: e.target.value })}\n      />\n      <div className=\"d-flex align-items-center mt-2\">\n        <button\n          className=\"btn btn-primary m-2\"\n          onClick={() => addThing(state.newThing)}\n        >\n          add\n        </button>\n        {Object.keys(state.things).length > 0 && (\n          <div className=\"ml-3\">\n            {JSON.stringify(things) !== JSON.stringify(state.things) && (\n              <button className=\"btn btn-success m-2\" onClick={handleSave}>\n                save\n              </button>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n    <div className=\"m-2\">\n      {state.things.length ? (\n        <div>\n          {state.things.map((thing, i) => {\n            const thingData = Social.get(`${thing}`);\n            return (\n              <div className=\"d-flex m-2 p-2\">\n                <Widget\n                  key={i}\n                  src=\"hack.near/widget/thing.card\"\n                  props={{\n                    data: thingData,\n                  }}\n                />\n                <button\n                  className=\"btn btn-danger m-1\"\n                  onClick={() => removeThing(thing)}\n                >\n                  remove\n                </button>\n              </div>\n            );\n          })}\n        </div>\n      ) : (\n        <div>\n          <i>nothing found</i>\n        </div>\n      )}\n    </div>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/hack.near/widget/things", "fact_widget_deployments_id": "7ad066ff68a1ad80d1fa63935fb1bf08", "inserted_timestamp": "2023-10-05T21:30:46.735Z", "modified_timestamp": "2023-10-05T21:30:46.735Z", "__row_index": 0}