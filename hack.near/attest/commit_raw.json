{"tx_hash": "6QNo3TcCG3Jp2YttgFReNXbCXm3ZG6RGfwtiGbs1zb8C", "action_id_social": "44V6aBYJnv2qnFyTpcBwotRXm3eUnD9s2RuRXsqSMmL3-0-widget", "block_id": 117825881, "block_timestamp": "2024-04-28T17:51:41.911Z", "signer_id": "hack.near", "widget_name": "attest", "source_code": "const accountId = props.accountId || \"every.near\";\nconst graphId = props.graphId || \"commons\";\n\nconst graphEdge = Social.keys(\n  `${context.accountId}/graph/${graphId}/${accountId}`,\n  undefined,\n  {\n    values_only: true,\n  }\n);\n\nconst inverseEdge = Social.keys(\n  `${accountId}/graph/${graphId}/${context.accountId}`,\n  undefined,\n  {\n    values_only: true,\n  }\n);\n\nconst loading = graphEdge === null || inverseEdge === null;\nconst attested = graphEdge && Object.keys(graphEdge).length;\nconst inverse = inverseEdge && Object.keys(inverseEdge).length;\n\nconst type = attested ? \"undo\" : graphId;\n\nconst data = props.data ?? {\n  graph: { [graphId]: { [accountId]: attested ? null : \"\" } },\n};\n\nconst attest = () => {\n  Social.set(data);\n};\n\nreturn (\n  <button\n    disabled={!context.accountId || accountId === context.accountId}\n    className={`btn btn-sm ${attested ? \"btn-secondary\" : \"btn-dark\"}`}\n    onClick={attest}\n  >\n    {loading ? \"+\" : attested ? \"x\" : \"+\"}\n  </button>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/hack.near/widget/attest", "fact_widget_deployments_id": "3fdf10b8d8fd74b938a80f09992b08ea", "inserted_timestamp": "2024-04-28T19:40:27.330Z", "modified_timestamp": "2024-04-28T19:40:27.330Z", "__row_index": 54}