{"tx_hash": "9smdQxrLcobHkL1F2auFuV3LcqwCVRNDQoSeTNZVRemM", "action_id_social": "Bt1wd1JJDqnskWdR5RScC4VS2XoxxkHQfSPp3qu1qmYu-0-widget", "block_id": 118553763, "block_timestamp": "2024-05-09T05:36:22.888Z", "signer_id": "hack.near", "widget_name": "attest", "source_code": "const accountId = props.accountId || \"every.near\";\nconst graphId = props.graphId || \"commons\";\n\nconst graphEdge = Social.keys(\n  `${context.accountId}/graph/${graphId}/${accountId}`,\n  undefined,\n  {\n    values_only: true,\n  }\n);\n\nconst inverseEdge = Social.keys(\n  `${accountId}/graph/${graphId}/${context.accountId}`,\n  undefined,\n  {\n    values_only: true,\n  }\n);\n\nconst loading = graphEdge === null || inverseEdge === null;\nconst attested = graphEdge && Object.keys(graphEdge).length;\nconst inverse = inverseEdge && Object.keys(inverseEdge).length;\n\nconst type = attested ? \"undo\" : graphId;\n\nconst data = props.data ?? {\n  graph: { [graphId]: { [accountId]: attested ? null : \"\" } },\n};\n\nconst attest = () => {\n  Social.set(data);\n};\n\nreturn (\n  <>\n    {context.accountId && (\n      <button\n        disabled={loading}\n        className={`btn btn-sm ${attested ? \"btn-dark\" : \"btn-outline-dark\"}`}\n        onClick={attest}\n      >\n        {attested ? (\n          <i className=\"bi bi-x\"></i>\n        ) : (\n          <i className=\"bi bi-plus\"></i>\n        )}\n      </button>\n    )}\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/hack.near/widget/attest", "fact_widget_deployments_id": "476f5b8909ce372205c32caea4655bea", "inserted_timestamp": "2024-05-09T07:39:53.077Z", "modified_timestamp": "2024-05-09T07:39:53.077Z", "__row_index": 0}