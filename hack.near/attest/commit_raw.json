{"tx_hash": "poP5LqZK67xeD48cvVSTAR2X3WVi3rZwALSgXy3CRtM", "action_id_social": "49tTQqrjkHEkNzV7CrKuwmwSGzVgtH8j37mf343PE6Nx-0-widget", "block_id": 117822299, "block_timestamp": "2024-04-28T16:42:37.942Z", "signer_id": "hack.near", "widget_name": "attest", "source_code": "const accountId = props.accountId || \"every.near\";\nconst graphId = props.graphId || \"commons\";\n\nconst graphEdge = Social.keys(\n  `${context.accountId}/graph/${graphId}/${accountId}`,\n  undefined,\n  {\n    values_only: true,\n  }\n);\n\nconst inverseEdge = Social.keys(\n  `${accountId}/graph/${graphId}/${context.accountId}`,\n  undefined,\n  {\n    values_only: true,\n  }\n);\n\nconst loading = graphEdge === null || inverseEdge === null;\nconst attested = graphEdge && Object.keys(graphEdge).length;\nconst inverse = inverseEdge && Object.keys(inverseEdge).length;\n\nconst type = attested ? \"undo\" : graphId;\n\nconst data = props.data ?? {\n  graph: { [graphId]: { [accountId]: attested ? null : \"\" } },\n};\n\nconst attest = () => {\n  Social.set(data);\n};\n\nreturn (\n  <button\n    disabled={!context.accountId}\n    className={`btn btn-sm ${attested ? \"btn-secondary\" : \"btn-dark\"}`}\n    onClick={attest}\n  >\n    {loading ? \"+\" : attested ? \"x\" : \"+\"}\n  </button>\n);\n", "metadata": {"fork_of": "mob.near/widget/FollowButton@99799065"}, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/hack.near/widget/attest", "fact_widget_deployments_id": "f5da57afe6d703ac03dbdbcc33fc924d", "inserted_timestamp": "2024-04-28T18:40:43.627Z", "modified_timestamp": "2024-04-28T18:40:43.627Z", "__row_index": 6}