{"tx_hash": "BLaBBf2YdahhtVpBh7ywFerYwnk92tisz8Yj2iJtGYY6", "action_id_social": "6VuAjmtVCcAcySj6KZYAb9ahH3256NMPLpv28dwbkjpy-0-widget", "block_id": 107719623, "block_timestamp": "2023-12-12T00:40:08.696Z", "signer_id": "hack.near", "widget_name": "Map.tutorial", "source_code": "const accountId = context.accountId || \"hack.near\";\n\nconst components = [\n  {\n    title: \"Map.index\",\n    category: \"Overview\",\n    authorId: \"efiz.near\",\n    path: \"efiz.near/widget/Map.index\",\n    description:\n      \"This relies on Mapbox.js, embedded into the `Map.Mapbox` component with an iFrame, which contains code for accessing the Mapbox APIs. Builders can leverage `Map.form` to let users add their own markers, and `Map.inspect` to enable viewing details of a location when clicked.\",\n    demoProps: {\n      markers,\n    },\n    requiredProps: {},\n    optionalProps: {\n      markers: \"data\",\n      myMarkers: \"myData\",\n      onMapClick: \"(e) => console.log(`map click`, e)\",\n      onMarkerClick: \"(e) => console.log(`marker click`, e)\",\n      inspect: \"(p) => <Inspect {...p} />\",\n      form: \"(p) => <Form {...p} />\",\n    },\n  },\n  {\n    title: \"1. Custom Data\",\n    category: \"Steps\",\n    authorId: \"efiz.near\",\n    path: \"efiz.near/widget/Map.index\",\n    description: \"Put things on your map.\",\n    demoProps: {},\n    requiredProps: {},\n    optionalProps: {\n      markers: \"data\",\n      myMarkers: \"myData\",\n    },\n  },\n  {\n    title: \"2. Interactive Points\",\n    category: \"Steps\",\n    authorId: \"efiz.near\",\n    path: \"efiz.near/widget/Map.index\",\n    description: \"Make it clickable.\",\n    demoProps: {},\n    requiredProps: {},\n    optionalProps: {\n      markers: \"data\",\n      myMarkers: \"myData\",\n      onMapClick: \"(e) => console.log(`map click`, e)\",\n      onMarkerClick: \"(e) => console.log(`marker click`, e)\",\n    },\n  },\n  {\n    title: \"3. Inspect + Form\",\n    category: \"Steps\",\n    authorId: \"efiz.near\",\n    path: \"efiz.near/widget/Map.index\",\n    description: \"Add functionality.\",\n    demoProps: {},\n    requiredProps: {},\n    optionalProps: {\n      markers: \"data\",\n      myMarkers: \"myData\",\n      onMapClick: \"(e) => console.log(`map click`, e)\",\n      onMarkerClick: \"(e) => console.log(`marker click`, e)\",\n      inspect: \"(p) => <Inspect {...p} />\",\n      form: \"(p) => <Form {...p} />\",\n    },\n  },\n];\n\nconst examples = [\n  {\n    title: \"Humans of NEAR\",\n    category: \"Examples\",\n    authorId: \"humans-of-near.near\",\n    path: \"humans-of-near.near/widget/humans.nearverselabs.com\",\n    description: \"TBD\",\n  },\n  {\n    title: \"Liberty DAO\",\n    category: \"Examples\",\n    authorId: \"libertydao.near\",\n    path: \"libertydao.near/widget/boroughs.index\",\n    description: \"TBD\",\n  },\n  {\n    title: \"AfforDWELL\",\n    category: \"Examples\",\n    authorId: \"raycent.near\",\n    path: \"hack.near/widget/Map.dwell\",\n    description: \"TBD\",\n  },\n  {\n    title: \"NEARBI\",\n    category: \"Examples\",\n    authorId:\n      \"fcff4038fecb38b0e63ee9e865f363886415006ec9413ea70dbae598207f201c\",\n    path: \"fcff4038fecb38b0e63ee9e865f363886415006ec9413ea70dbae598207f201c/widget/NearBi.Mapbox\",\n    description: \"TBD\",\n  },\n  {\n    title: \"NYC Rats\",\n    category: \"Examples\",\n    authorId: \"byalbert.near\",\n    path: \"byalbert.near/widget/RatSightingsUpdated\",\n    description: \"TBD\",\n  },\n];\n\nconst renderProps = (props, optional) => {\n  return Object.entries(props || {}).map(([key, desc]) => {\n    return (\n      <tr key={key}>\n        <td>\n          <span className={`code prop-key${optional ? \" optional\" : \"\"}`}>\n            {key}\n          </span>\n        </td>\n        <td className=\"prop-desc\">\n          <Markdown text={desc} />\n        </td>\n      </tr>\n    );\n  });\n};\n\nconst renderExample = (e, i) => {\n  const id = e.title.toLowerCase().replaceAll(\" \", \"-\");\n  return (\n    <div className=\"component\" key={i}>\n      <div className=\"anchor\" id={id} />\n      <div className=\"d-flex flex-row flex-wrap justify-content-between mb-3\">\n        <a href={`/${e.path}`}>\n          <h3>{e.title}</h3>\n        </a>\n        <div className=\"source\">\n          <a\n            href={`/mob.near/widget/WidgetSource?src=${c.path}`}\n            target=\"_blank\"\n            className=\"btn btn-outline-primary border-0\"\n          >\n            Source\n          </a>\n        </div>\n      </div>\n      <div className=\"preview mb-3\" style={e.previewStyle}>\n        <Widget src={e.path} />\n      </div>\n    </div>\n  );\n};\n\nconst renderComponent = (c, i) => {\n  const embedCode = `<Widget\\n  src=\"${c.path}\"\\n  props={{${JSON.stringify(\n    c.optionalProps,\n    undefined,\n    2\n  )\n    .slice(1, -1)\n    .split(\"\\n\")\n    .map((s) => `  ${s}`)\n    .join(\"\\n\")}}}\\n/>\\n`;\n  const id = c.title.toLowerCase().replaceAll(\" \", \"-\");\n  return (\n    <div className=\"component\" key={i}>\n      <div className=\"anchor\" id={id} />\n      <div className=\"d-flex flex-row flex-wrap justify-content-between mb-3\">\n        <a href={`/${c.path}`}>\n          <h3>{c.title}</h3>\n        </a>\n        <div className=\"source\">\n          <a\n            href={`/mob.near/widget/WidgetSource?src=${c.path}`}\n            target=\"_blank\"\n            className=\"btn btn-outline-primary border-0\"\n          >\n            Source\n          </a>\n        </div>\n      </div>\n      <div className=\"mt-2\">\n        <p>{c.description}</p>\n      </div>\n      {Object.keys(c.demoProps).length > 0 && (\n        <>\n          <label>Demo</label>\n          <div className=\"preview mb-3\" style={c.previewStyle}>\n            <Widget src={c.path} props={c.demoProps} />\n          </div>\n        </>\n      )}\n      {Object.keys(c.requiredProps).length > 0 && (\n        <>\n          <label>Props</label>\n          <table className=\"props table table-bordered mb-3\">\n            <thead>\n              <tr>\n                <th>Key</th>\n                <th>Description</th>\n              </tr>\n            </thead>\n            <tbody>\n              {renderProps(c.requiredProps)}\n              {renderProps(c.optionalProps, true)}\n            </tbody>\n          </table>\n        </>\n      )}\n      <label>Sample</label>\n      <div className=\"embed-code\">\n        <Markdown text={`\\`\\`\\`jsx\\n${embedCode}\\n\\`\\`\\``} />\n        <div className=\"embed-copy\">\n          <Widget\n            src=\"mob.near/widget/CopyButton\"\n            props={{ text: embedCode, className: \"btn btn-outline-light\" }}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst renderMenuItem = (c, i) => {\n  const prev = i ? components[i - 1] : null;\n  const res = [];\n  if (!prev || prev.category !== c.category) {\n    res.push(\n      <h5 className=\"category\" key={c.category}>\n        {c.category}\n      </h5>\n    );\n  }\n  const id = c.title.toLowerCase().replaceAll(\" \", \"-\");\n  res.push(\n    <div className=\"menu-item\" key={i}>\n      <a href={`#${id}`}>{c.title}</a>\n    </div>\n  );\n  return res;\n};\n\nconst renderExamplesItem = (e, i) => {\n  const prev = i ? examples[i - 1] : null;\n  const res = [];\n  if (!prev || prev.category !== e.category) {\n    res.push(\n      <h5 className=\"category\" key={e.category}>\n        {e.category}\n      </h5>\n    );\n  }\n  const id = e.title.toLowerCase().replaceAll(\" \", \"-\");\n  res.push(\n    <div className=\"menu-item\" key={i}>\n      <a href={`#${id}`}>{e.title}</a>\n    </div>\n  );\n  return res;\n};\n\nconst Wrapper = styled.div`\n@media(min-width: 992px) {\n  .b-s {\n    border-left: 1px solid #eee;\n  }\n  .b-e {\n    border-right: 1px solid #eee;\n  }\n}\n.category:not(:first-child) {\n  margin-top: 1em;\n}\n.component {\n  padding: 0.5em 12px;\n  padding-bottom: 0;\n  margin-bottom: 3em;\n  margin: 0 -12px 3em;\n  position: relative;\n\n  &:hover {\n    background: rgba(0, 0, 0, 0.03);\n  }\n\n  .anchor {\n    position: absolute;\n    top: -70px;\n  }\n\n  table {\n    background: white;\n  }\n\n  label {\n    font-size: 20px;\n  }\n\n  .code {\n    display: inline-flex;\n    line-height: normal;\n    border-radius: 0.3em;\n    padding: 0 4px;\n    border: 1px solid #ddd;\n    background: rgba(0, 0, 0, 0.03);\n    font-family: var(--bs-font-monospace);\n  }\n  .path {\n\n  }\n  .preview {\n    background-color: white;\n    padding: 12px;\n    border: 1px solid #eee;\n    border-radius: 12px;\n    pre {\n      margin-bottom: 0;\n    }\n  }\n  .props {\n    .prop-key {\n      font-weight: 600;\n      &.optional {\n        font-weight: normal;\n      }\n    }\n    .prop-desc {\n      p {\n        margin-bottom: 0;\n      }\n    }\n  }\n  .embed-code {\n    position: relative;\n\n    .embed-copy {\n      position: absolute;\n      top: 18px;\n      right: 10px;\n    }\n  }\n}\n`;\n\nreturn (\n  <Wrapper>\n    <div className=\"d-flex justify-content-between\">\n      <div className=\"m-2\">\n        <h2>\n          <b>Map-a-thon</b>\n        </h2>\n        <h3>December 2023</h3>\n      </div>\n      <div className=\"m-3\">\n        <Widget\n          src=\"mob.near/widget/Profile.ShortInlineBlock\"\n          props={{ accountId: \"build.sputnik-dao.near\" }}\n        />\n      </div>\n    </div>\n\n    <div className=\"m-2\">\n      <p>\n        <i>\n          This guide will help you create interactive maps, leveraging the power\n          of open web components. No need to install or download anything. Just\n          fork the <a href=\"/hack.near/widget/Map.demo\">basic template</a> and\n          follow instructions outlined here (and in the code comments).\n        </i>\n      </p>\n    </div>\n    <br />\n    <div className=\"row\">\n      <div className=\"col-lg-3 b-e b-s\">\n        <a className=\"btn btn-success\" href=\"/edit/hack.near/widget/Map.demo\">\n          BEGIN\n        </a>\n        {components.map(renderMenuItem)}\n        {examples.map(renderExamplesItem)}\n      </div>\n      <div className=\"col-lg-9 b-e\">\n        <div>{components.map(renderComponent)}</div>\n        <div>{examples.map(renderExample)}</div>\n      </div>\n    </div>\n  </Wrapper>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/hack.near/widget/Map.tutorial", "fact_widget_deployments_id": "1a9171cdbe9f27b9ed1c6eaf65d59648", "inserted_timestamp": "2023-12-12T02:55:09.552Z", "modified_timestamp": "2023-12-20T03:22:11.422Z", "__row_index": 0}