{"tx_hash": "3BM3w4sTDqrYSSJJFU3KF9McrJR25UQRTzM9KWTy4R6T", "action_id_social": "FPgcwQJuUo7RyvKhH5pSugNAGCzEArHi59bpjCqcbdcp-0-widget", "block_id": 107144462, "block_timestamp": "2023-12-04T15:13:50.111Z", "signer_id": "hack.near", "widget_name": "TagsEditor", "source_code": "const tagsPattern = props.tagsPattern ?? \"*/profile/tags/*\";\nconst placeholder = props.placeholder ?? \"Tags\";\nconst initialTagsObject = props.initialTagsObject || {};\n\nconst tagsObject = Social.keys(tagsPattern, \"final\");\n\nif (tagsObject === null) {\n  return \"Loading\";\n}\n\nconst normalizeTag = (tag) =>\n  tag\n    .replaceAll(/[- \\.]/g, \"_\")\n    .replaceAll(/[^\\w]+/g, \"\")\n    .replaceAll(/_+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\")\n    .toLowerCase()\n    .trim(\"-\");\n\nconst tagsCount = {};\n\nconst processTagsObject = (obj) => {\n  Object.entries(obj).forEach((kv) => {\n    if (typeof kv[1] === \"object\") {\n      processTagsObject(kv[1]);\n    } else {\n      const tag = normalizeTag(kv[0]);\n      tagsCount[tag] = (tagsCount[tag] || 0) + 1;\n    }\n  });\n};\n\nconst getTags = () => {\n  processTagsObject(tagsObject);\n  const tags = Object.entries(tagsCount);\n  tags.sort((a, b) => b[1] - a[1]);\n  return tags.map((t) => ({\n    name: t[0],\n    count: t[1],\n  }));\n};\n\nif (!state.allTags) {\n  initState({\n    allTags: getTags(),\n    tags: Object.keys(initialTagsObject).map((tag) => ({\n      name: normalizeTag(tag),\n    })),\n    originalTags: Object.fromEntries(\n      Object.keys(initialTagsObject).map((tag) => [tag, null])\n    ),\n    id: `tags-selector-${Date.now()}`,\n  });\n}\n\nconst setTags = (tags) => {\n  tags = tags.map((o) => {\n    o.name = normalizeTag(o.name);\n    return o;\n  });\n\n  const newTagsObject = Object.fromEntries(tags.map((tag) => [tag.name, \"\"]));\n  const updatedTagsObject = {\n    ...state.originalTags,\n    ...newTagsObject,\n  };\n\n  State.update({ tags: tags });\n  if (props.setTagsObject) {\n    props.setTagsObject(updatedTagsObject);\n  }\n};\n\nreturn (\n  <>\n    <Typeahead\n      id={state.id}\n      multiple\n      labelKey=\"name\"\n      onChange={setTags}\n      options={state.allTags}\n      placeholder={placeholder}\n      selected={state.tags}\n      positionFixed\n      allowNew\n    />\n    {props.debug && (\n      <div>\n        Debugging tags:\n        <pre>{JSON.stringify(state.tags)}</pre>\n      </div>\n    )}\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/hack.near/widget/TagsEditor", "fact_widget_deployments_id": "4a5f07897ef9a4bbf7c30b23814817b3", "inserted_timestamp": "2023-12-04T17:24:36.998Z", "modified_timestamp": "2023-12-20T03:22:11.422Z", "__row_index": 0}