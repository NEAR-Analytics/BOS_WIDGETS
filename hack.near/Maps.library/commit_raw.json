{"tx_hash": "98KSjfa39BVzxPeFMpg2Zz3MrdW1zU9FvusaTWzQ5ahx", "action_id_social": "MhcmgxQysgi3oSRw8rHhkQgRNhBujJjtybLkLY9V6HK-0-widget", "block_id": 106955786, "block_timestamp": "2023-12-01T22:24:22.875Z", "signer_id": "hack.near", "widget_name": "Maps.library", "source_code": "const accountId = context.accountId || \"mob.near\";\n\nconst itemDescription =\n  'The identifier item. It will be used as a unique identifier of the entity that receives the action. It\\'s also used as a key of the action in the index.\\nThe item should be an object with the following keys: `type`, `path` and optional `blockHeight`.\\n- `type`: If the data is stored in the social DB, then the type is likely `\"social\"`, other types can be defined in the standards.\\n- `path`: The path to the item. For a `\"social\"` type, it\\'s absolute path within SocialDB, e.g. `alice.near/post/main`.\\n- `blockHeight`: An optional paremeter to indicate the block when the data was stored. Since SocialDB data can be overwritten to save storage, the exact data should be referenced by the block height (e.g. for a given post). But if the latest data should be used, then `blockHeight` should be ommited.\\n\\nExamples of `item`:\\n- `{type: \"social\", path: \"mob.near/widget/N.Library\"}`\\n- `{type: \"social\", path: \"mob.near/post/main\", blockHeight: 81101335}`\\n';\n\nconst components = [\n  {\n    title: \"Map.index\",\n    category: \"Map\",\n    authorId: \"efiz.near\",\n    path: \"efiz.near/widget/Map.index\",\n    description:\n      \"This Mapjox.js template helps builders put data on their map.\",\n    demoProps: { markers },\n    requiredProps: {\n      markers: \"data\",\n      onMapClick: \"(e) => console.log(`map click`, e)\",\n      onMarkerClick: \"(e) => console.log(`marker click`, e)\",\n      inspect: \"(p) => <Inspect {...p} />\",\n      form: \"(p) => <Form {...p} />\",\n    },\n    optionalProps: {\n      myMarkers: \"myData\",\n    },\n  },\n  {\n    title: \"Map.Form\",\n    category: \"Map\",\n    authorId: \"efiz.near\",\n    path: \"efiz.near/widget/Map.Form\",\n    description: \"enabling users to put data on your map\",\n    demoProps: { data },\n    requiredProps: {\n      data: \"state.focusedMarker || {}\",\n      children: \"props.form\",\n      handleSave,\n    },\n    optionalProps: {},\n  },\n  {\n    title: \"Map.Inspect\",\n    category: \"Map\",\n    authorId: \"efiz.near\",\n    path: \"efiz.near/widget/Map.Inspect\",\n    description: \"for viewing details of things on your map\",\n    demoProps: { focusedMarker, children },\n    requiredProps: {\n      focusedMarker: \"state.focusedMarker\",\n      children: \"props.inspect\",\n    },\n    optionalProps: {},\n  },\n  {\n    title: \"Map.Mapbox\",\n    category: \"Map\",\n    authorId: \"efiz.near\",\n    path: \"efiz.near/widget/Map.Mapbox\",\n    description: \"core integration with Mapbox.js.\",\n    demoProps: {},\n    requiredProps: {\n      API_URL,\n      accessToken: \"MAP_TOKEN\",\n      styleUrl: \"MAP_STYLE\",\n      center: \"\",\n      zoom: \"\",\n      markerAsset: \"props.markerAsset\",\n      myMarkerAsset: \"props.myMarkerAsset\",\n      markers: \"props.markers, // array of long, lat, id\",\n      myMarkers: \"props.myMarkers\",\n      edit: \"state.edit\",\n      onMapClick:\n        \"(e) => { State.update({ currentLocation: e.coordinates, showInspect: false }) props.onMapClick && props.onMapClick(e); }\",\n      onMarkerClick:\n        \"(e) => { State.update({ focusedMarker: e, showInspect: true }); props.onMarkerClick && props.onMarkerClick(e); }\",\n    },\n    optionalProps: {},\n  },\n  {\n    title: \"Fork This Demo\",\n    category: \"Map\",\n    authorId: \"efiz.near\",\n\n    path: \"efiz.near/widget/Map.demo\",\n    description:\n      \"example / forkable template wrapping the Map.index component and passing necessary props\",\n    demoProps: {},\n    requiredProps: {},\n    optionalProps: {},\n  },\n  {\n    title: \"Events App\",\n    category: \"Events\",\n    authorId: \"itexpert120-contra.near\",\n\n    path: \"itexpert120-contra.near/widget/Events\",\n    description: \"general events app\",\n    demoProps: {},\n    requiredProps: {},\n    optionalProps: {},\n  },\n  {\n    title: \"Event Feed\",\n    category: \"Events\",\n    authorId: \"itexpert120-contra.near\",\n\n    path: \"itexpert120-contra.near/widget/EventFeed\",\n    description: \"list of events\",\n    demoProps: {},\n    requiredProps: {},\n    optionalProps: {},\n  },\n  {\n    title: \"Create Event\",\n    category: \"Events\",\n    authorId: \"itexpert120-contra.near\",\n    path: \"itexpert120-contra.near/widget/CreateEvent\",\n    description: \"reusable component for creating event things\",\n    demoProps: {},\n    requiredProps: {},\n    optionalProps: {},\n  },\n  {\n    title: \"Event Form\",\n    category: \"Events\",\n    authorId: \"itexpert120-contra.near\",\n    path: \"itexpert120-contra.near/widget/EventForm\",\n    description: \"user input form allowing people to create an event\",\n    demoProps: {},\n    requiredProps: {\n      id,\n      title,\n      description,\n      start,\n      startTime,\n      end,\n      endTime,\n      location,\n      link,\n      organizer,\n      isAllDay,\n      category,\n      logo,\n      background,\n      hashTags,\n    },\n    optionalProps: {},\n  },\n  {\n    title: \"Propose Event\",\n    category: \"Events\",\n    authorId: \"itexpert120-contra.near\",\n    path: \"itexpert120-contra.near/widget/EventProposalButton\",\n    description: \"submit an event to a DAO for voting\",\n    demoProps: {},\n    requiredProps: {},\n    optionalProps: {},\n  },\n  {\n    title: \"Event Card\",\n    category: \"Events\",\n    authorId: \"itexpert120-contra.near\",\n\n    path: \"itexpert120-contra.near/widget/EventCard\",\n    description:\n      \"content summarizing an event for a list or grid view of events\",\n    demoProps: {},\n    requiredProps: {},\n    optionalProps: {},\n  },\n  {\n    title: \"Edit Event\",\n    category: \"Events\",\n    authorId: \"itexpert120-contra.near\",\n\n    path: \"itexpert120-contra.near/widget/EditEvent\",\n    description: \"for editing events\",\n    demoProps: {},\n    requiredProps: {},\n    optionalProps: {},\n  },\n  {\n    title: \"Calendar\",\n    category: \"Events\",\n    authorId: \"itexpert120-contra.near\",\n\n    path: \"itexpert120-contra.near/widget/Calendar\",\n    description: \"TBD\",\n    demoProps: {},\n    requiredProps: {},\n    optionalProps: {},\n  },\n  {\n    title: \"MobileCalendar\",\n    category: \"Events\",\n    authorId: \"itexpert120-contra.near\",\n\n    widgetName: \"itexpert120-contra.near/widget/MobileCalendar\",\n    description: \"TBD TODO WRAPPER\",\n    demoProps: {},\n    requiredProps: {},\n    optionalProps: {},\n  },\n  {\n    title: \"Filter Form\",\n    category: \"Filters\",\n    authorId: \"itexpert120-contra.near\",\n    path: \"itexpert120-contra.near/widget/FilterForm\",\n    description: \"TBD\",\n    demoProps: {},\n    requiredProps: {},\n    optionalProps: {},\n  },\n  {\n    title: \"Humans of NEAR\",\n    category: \"Examples\",\n    authorId: \"humans-of-near.near\",\n    widgetName: \"humans-of-near.near/widget/humans.nearverselabs.com\",\n    description: \"TBD\",\n    demoProps: {},\n    requiredProps: {},\n    optionalProps: {},\n  },\n  {\n    title: \"Liberty DAO\",\n    category: \"Examples\",\n    authorId: \"libertydao.near\",\n    widgetName: \"libertydao.near/widget/boroughs.index\",\n    description: \"TBD\",\n    demoProps: {},\n    requiredProps: {},\n    optionalProps: {},\n  },\n  {\n    title: \"AfforDWELL\",\n    category: \"Examples\",\n    authorId: \"raycent.near\",\n    path: \"hack.near/widget/Map.dwell\",\n    description: \"TBD\",\n    demoProps: {},\n    requiredProps: {},\n    optionalProps: {},\n  },\n  {\n    title: \"NEARBI\",\n    category: \"Examples\",\n    authorId:\n      \"fcff4038fecb38b0e63ee9e865f363886415006ec9413ea70dbae598207f201c\",\n    path: \"fcff4038fecb38b0e63ee9e865f363886415006ec9413ea70dbae598207f201c/widget/NearBi.Mapbox\",\n    description: \"TBD\",\n    demoProps: {},\n    requiredProps: {},\n    optionalProps: {},\n  },\n  {\n    title: \"NYC Rats\",\n    category: \"Examples\",\n    authorId: \"byalbert.near\",\n    path: \"byalbert.near/widget/RatSightingsUpdated\",\n    description: \"TBD\",\n    demoProps: {},\n    requiredProps: {},\n    optionalProps: {},\n  },\n];\n\nconst renderProps = (props, optional) => {\n  return Object.entries(props || {}).map(([key, desc]) => {\n    return (\n      <tr key={key}>\n        <td>\n          <span className={`code prop-key${optional ? \" optional\" : \"\"}`}>\n            {key}\n          </span>\n        </td>\n        <td className=\"prop-desc\">\n          <Markdown text={desc} />\n        </td>\n      </tr>\n    );\n  });\n};\n\nconst renderComponent = (c, i) => {\n  const embedCode = `<Widget\\n  src=\"${c.path}\"\\n  props={{${JSON.stringify(\n    c.demoProps,\n    undefined,\n    2\n  )\n    .slice(1, -1)\n    .split(\"\\n\")\n    .map((s) => `  ${s}`)\n    .join(\"\\n\")}}}\\n/>\\n`;\n  const id = c.title.toLowerCase().replaceAll(\" \", \"-\");\n  return (\n    <div className=\"component\" key={i}>\n      <div className=\"anchor\" id={id} />\n      <a href={`/${c.path}`}>\n        <h3>{c.title}</h3>\n      </a>\n      <Widget\n        src=\"miraclx.near/widget/Attribution\"\n        props={{ dep: true, authors: [`${c.authorId}`] }}\n      />{\" \"}\n      <div className=\"mt-3\">\n        <p>{c.description}</p>\n      </div>\n      {c.demoProps.length > 0 && (\n        <>\n          <label>Preview</label>\n          <div className=\"preview mb-3\" style={c.previewStyle}>\n            <Widget src={c.path} props={c.demoProps} />\n          </div>\n        </>\n      )}\n      <label>Component</label>\n      <div className=\"d-flex flex-row flex-wrap justify-content-between mb-3\">\n        <div className=\"path font-monospace\">\n          <Widget\n            src=\"mob.near/widget/CopyButton\"\n            props={{\n              text: c.path,\n              label: c.path,\n            }}\n          />\n        </div>\n        <div className=\"source\">\n          <a\n            href={`/mob.near/widget/WidgetSource?src=${c.path}`}\n            target=\"_blank\"\n            className=\"btn btn-outline-primary border-0\"\n          >\n            Source\n          </a>\n        </div>\n      </div>\n      <label>Props</label>\n      <table className=\"props table table-bordered mb-3\">\n        <thead>\n          <tr>\n            <th>Key</th>\n            <th>Description</th>\n          </tr>\n        </thead>\n        <tbody>\n          {renderProps(c.requiredProps)}\n          {renderProps(c.optionalProps, true)}\n        </tbody>\n      </table>\n      <label>Example</label>\n      <div className=\"embed-code\">\n        <Markdown text={`\\`\\`\\`jsx\\n${embedCode}\\n\\`\\`\\``} />\n        <div className=\"embed-copy\">\n          <Widget\n            src=\"mob.near/widget/CopyButton\"\n            props={{ text: c.path, className: \"btn btn-outline-light\" }}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst renderMenuItem = (c, i) => {\n  const prev = i ? components[i - 1] : null;\n  const res = [];\n  if (!prev || prev.category !== c.category) {\n    res.push(\n      <h5 className=\"category\" key={c.category}>\n        {c.category}\n      </h5>\n    );\n  }\n  const id = c.title.toLowerCase().replaceAll(\" \", \"-\");\n  res.push(\n    <div className=\"menu-item\" key={i}>\n      <a href={`#${id}`}>{c.title}</a>\n    </div>\n  );\n  return res;\n};\n\nconst Wrapper = styled.div`\n@media(min-width: 992px) {\n  .b-s {\n    border-left: 1px solid #eee;\n  }\n  .b-e {\n    border-right: 1px solid #eee;\n  }\n}\n.category:not(:first-child) {\n  margin-top: 1em;\n}\n.component {\n  padding: 0.5em 12px;\n  padding-bottom: 0;\n  margin-bottom: 3em;\n  margin: 0 -12px 3em;\n  position: relative;\n\n  &:hover {\n    background: rgba(0, 0, 0, 0.03);\n  }\n\n  .anchor {\n    position: absolute;\n    top: -70px;\n  }\n\n  table {\n    background: white;\n  }\n\n  label {\n    font-size: 20px;\n  }\n\n  .code {\n    display: inline-flex;\n    line-height: normal;\n    border-radius: 0.3em;\n    padding: 0 4px;\n    border: 1px solid #ddd;\n    background: rgba(0, 0, 0, 0.03);\n    font-family: var(--bs-font-monospace);\n  }\n  .path {\n\n  }\n  .preview {\n    background-color: white;\n    padding: 12px;\n    border: 1px solid #eee;\n    border-radius: 12px;\n    pre {\n      margin-bottom: 0;\n    }\n  }\n  .props {\n    .prop-key {\n      font-weight: 600;\n      &.optional {\n        font-weight: normal;\n      }\n    }\n    .prop-desc {\n      p {\n        margin-bottom: 0;\n      }\n    }\n  }\n  .embed-code {\n    position: relative;\n\n    .embed-copy {\n      position: absolute;\n      top: 18px;\n      right: 10px;\n    }\n  }\n}\n`;\n\nreturn (\n  <Wrapper>\n    <h3>NEAR Maps Library</h3>\n    <div className=\"mb-3\">\n      These docs provide reusable map and event components for builders.\n    </div>\n    <div className=\"row\">\n      <div className=\"col-lg-3 b-e b-s\">{components.map(renderMenuItem)}</div>\n      <div className=\"col-lg-9 b-e\">{components.map(renderComponent)}</div>\n    </div>\n  </Wrapper>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/hack.near/widget/Maps.library", "fact_widget_deployments_id": "f88cd917cb1b7c6df38458420f9cd244", "inserted_timestamp": "2023-12-02T00:31:28.217Z", "modified_timestamp": "2023-12-20T03:02:01.702Z", "__row_index": 4}