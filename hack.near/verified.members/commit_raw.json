{"tx_hash": "HsWNzcLUBoDTCDBbqVVZXp1ji1WngxevHojpzZQzzfGC", "action_id_social": "2psqH2ZPuEaXqyxALsiaRG6o5rar4N5iG5VyunnVN6sV-0-widget", "block_id": 95788466, "block_timestamp": "2023-07-05T21:22:32.615Z", "signer_id": "hack.near", "widget_name": "verified.members", "source_code": "const accountId = context.accountId;\nconst memberId = props.memberId ?? context.accountId;\n\nconst data = Social.keys(\"*/profile\", \"final\");\n\nif (!data) {\n  return \"Loading...\";\n}\n\nState.init({\n  isMember: false,\n});\n\nconst daoId = props.daoId ?? \"rc-dao.sputnik-dao.near\";\nconst groupId = props.groupId ?? \"voter\";\nconst policy = Near.view(daoId, \"get_policy\");\n\nif (!policy) {\n  return \"Loading...\";\n}\n\nconst group = policy.roles\n  .filter((role) => role.name === groupId)\n  .map((role) => role.kind.Group);\n\n// SBT verification\nlet human = false;\nconst userSBTs = Near.view(\"registry.i-am-human.near\", \"sbt_tokens_by_owner\", {\n  account: accountId,\n});\n\nfor (let i = 0; i < userSBTs.length; i++) {\n  if (\"fractal.i-am-human.near\" == userSBTs[i][0]) {\n    human = true;\n  }\n}\n\n// check DAO group membership\nconst groupMembers = group.join(\", \");\n\nconst checkMembership = (groupMembers) => {\n  if (groupMembers.indexOf(memberId) !== -1) {\n    return State.update({ isMember: true });\n  }\n};\n\nconst validMember = checkMembership(groupMembers);\n\nconst handleProposal = () => {\n  const gas = 200000000000000;\n  const deposit = 100000000000000000000000;\n  Near.call([\n    {\n      contractName: daoId,\n      methodName: \"add_proposal\",\n      args: {\n        proposal: {\n          description: \"potential member\",\n          kind: {\n            AddMemberToRole: {\n              member_id: accountId,\n            },\n          },\n        },\n      },\n      gas: gas,\n      deposit: deposit,\n    },\n  ]);\n};\n\nconst Container = styled.div`\n  display: flex;\n  max-width: 1080px;\n  margin: 0 auto;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  padding: 39px;\n\n  @media (max-width: 768px) {\n    padding: 12px;\n  }\n`;\n\nreturn (\n  <>\n    <Container>\n      <Widget src=\"hack.near/widget/progress.members\" />\n      <div className=\"m-2\">\n        {human ? (\n          <Widget src=\"hack.near/widget/continent.join\" />\n        ) : (\n          <Widget\n            src=\"near/widget/DIG.Button\"\n            props={{\n              href: \"https://i-am-human.app/?community=banyan&vertical=regionalcommunities\",\n              label: \"Get Verified\",\n              variant: \"outline-primary\",\n              size: \"large\",\n            }}\n          />\n        )}\n      </div>{\" \"}\n    </Container>\n    <hr />\n    <div>\n      <h3>Voter Profiles</h3>\n      <h5>{group[0].length} Total Members</h5>\n      <div>\n        {group.map((members, i) => (\n          <div key={i}>\n            {members.map((member, j) => (\n              <Widget\n                key={j}\n                src=\"near/widget/AccountProfileCard\"\n                props={{ accountId: member }}\n              />\n            ))}\n          </div>\n        ))}\n      </div>\n    </div>\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/hack.near/widget/verified.members", "fact_widget_deployments_id": "27eb64c334664f45f3a7cfcb753186f8", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 2}