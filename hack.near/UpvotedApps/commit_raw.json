{"tx_hash": "ApLdX5d4xVLEWafYfF4CKR54RwzEkJZywQ8do4xkymjZ", "action_id_social": "9izGhhGLW8txTFLCdjzSiLoU6omf4GS5QBiffoFmHrV2-0-widget", "block_id": 104125671, "block_timestamp": "2023-10-24T19:58:12.032Z", "signer_id": "hack.near", "widget_name": "UpvotedApps", "source_code": "const accountId = props.accountId ?? context.accountId;\n\nconst votes = Social.getr(`${accountId}/graph/vote`, \"final\", {\n  withBlockHeight: true,\n});\n\nconst StorageKey = \"order\";\nconst order = Storage.privateGet(StorageKey);\nconst apps = useMemo(() => {\n  if (votes === null || order === null) {\n    return [];\n  }\n  const upvotedApps = new Map();\n  const path = [];\n\n  const buildSrc = (node) => {\n    if (node.hasOwnProperty(\"\")) {\n      upvotedApps.set(path.join(\"/\"), node[\":block\"]);\n    }\n    Object.entries(node).forEach(([key, value]) => {\n      if (typeof value === \"object\") {\n        path.push(key);\n        buildSrc(value);\n        path.pop();\n      }\n    });\n  };\n\n  buildSrc(votes ?? {}, [], upvotedApps);\n  let apps = [...upvotedApps.entries()];\n  apps.sort((a, b) => b[1] - a[1]);\n  apps = apps.map((a) => a[0]);\n  apps.sort((a, b) => (order?.[a] || 0) - (order?.[b] || 0));\n  Storage.privateSet(\n    StorageKey,\n    Object.fromEntries(apps.map((a, i) => [a, i + 1]))\n  );\n  return apps;\n}, [votes, order]);\n\nconst renderItem = (widgetSrc) => {\n  const [accountId, _, widgetName] = widgetSrc.split(\"/\");\n  return (\n    <a\n      href={`/${widgetSrc}`}\n      className=\"text-decoration-none position-relative\"\n      key={widgetSrc}\n      onClick={() => {\n        order[widgetSrc] = -1;\n        Storage.privateSet(StorageKey, order);\n      }}\n    >\n      {voteFillSvg}\n      <Widget\n        loading={\n          <div\n            className=\"placeholder d-inline-block rounded-3\"\n            style={{ width: \"3em\", height: \"3em\" }}\n          />\n        }\n        src=\"mob.near/widget/WidgetImage\"\n        props={{\n          tooltip: true,\n          accountId,\n          widgetName,\n        }}\n      />\n    </a>\n  );\n};\n\nconst voteFillSvg = (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    fill=\"#FFD700\"\n    stroke=\"#FFD700\"\n    strokeWidth=\"0.5\"\n    viewBox=\"-2 -2 20 20\"\n    style={{\n      width: \"1.25em\",\n      left: \"0.2em\",\n      top: \"0.2em\",\n      position: \"absolute\",\n      translate: \"-50% -50%\",\n    }}\n  >\n    <path d=\"M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.282.95l-3.522 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z\" />\n  </svg>\n);\n\nreturn apps.length > 0 ? (\n  <>\n    <div className=\"mb-2 pb-2\" style={{ borderBottom: \"1px dashed #eee\" }}>\n      <div className=\"d-flex flex-wrap gap-1 placeholder-glow\">\n        {apps\n          .slice(0, props.limit ? parseInt(props.limit) : 24)\n          .map(renderItem)}\n      </div>\n    </div>\n  </>\n) : (\n  \"\"\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/hack.near/widget/UpvotedApps", "fact_widget_deployments_id": "efba0cbd0df850056d8c1af94e121ec0", "inserted_timestamp": "2023-10-24T21:46:54.420Z", "modified_timestamp": "2023-10-24T21:46:54.420Z", "__row_index": 0}