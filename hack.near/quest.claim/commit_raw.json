{"tx_hash": "FFmjARRvZardjTUSiCVRQDJFVuDpyzbNCtvCZrNsxYX1", "action_id_social": "AtxYEA3FT6wc15PDUuieVVceYzVQa7ENcFXrCByTCVjo-0-widget", "block_id": 107452753, "block_timestamp": "2023-12-08T17:27:50.421Z", "signer_id": "hack.near", "widget_name": "quest.claim", "source_code": "const isAvailable = true;\nconst isClaimed = false;\n\nconst accountId = props.accountId ?? context.accountId;\nconst questId = props.questId ?? \"1\";\n\nif (!accountId) {\n  return \"\";\n}\n\nconst data = {\n  [accountId]: {\n    index: {\n      quest: JSON.stringify({\n        key: questId,\n        value: {\n          type,\n          accountId,\n        },\n      }),\n    },\n  },\n};\n\nconst type = isClaimed ? \"disclaim\" : \"claim\";\n\nconst claimQuest = () => {\n  const claimArgs = {\n    quest_id: JSON.parse(questId),\n    signed_claim_receipt: \"yes\",\n  };\n  const transactions = [\n    {\n      contractName: \"social.near\",\n      methodName: \"set\",\n      deposit: \"100000000000000000000000\",\n      args: { data },\n    },\n    {\n      contractName: \"test1.questverse.near\",\n      methodName: \"claim_reward\",\n      args: claimArgs,\n    },\n  ];\n  Near.call(transactions);\n};\n\nreturn (\n  <div className=\"m-3\">\n    <button\n      className={`btn ${\n        isClaimed ? \"btn-outline-secondary\" : \"btn-outline-dark\"\n      }`}\n      onClick={claimQuest}\n    >\n      {isClaimed ? \"claimed\" : \"claim\"}\n    </button>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/hack.near/widget/quest.claim", "fact_widget_deployments_id": "5533709709e544c70364eeec7c375423", "inserted_timestamp": "2023-12-08T19:28:33.400Z", "modified_timestamp": "2023-12-20T03:22:11.422Z", "__row_index": 0}