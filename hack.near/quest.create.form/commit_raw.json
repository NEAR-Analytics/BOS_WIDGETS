{"tx_hash": "9cwnJpkYJ7Wbmw4tsZnnMECCHjKqcCgXmKfR2NRRix1S", "action_id_social": "36UPTgKqaptQJWUUpXcU8VYtPRMqSsM4h1WjC81WAiUm-0-widget", "block_id": 107414429, "block_timestamp": "2023-12-08T05:42:39.666Z", "signer_id": "hack.near", "widget_name": "quest.create.form", "source_code": "const { typeToEmptyData, validateType, types } = props;\n\nconst initialFormState =\n  typeToEmptyData(types[\"hack.near/type/quest\"]) ??\n  \"https://ipfs.near.social/ipfs/bafkreiad5c4r3ngmnm7q6v52joaz4yti7kgsgo6ls5pfbsjzclljpvorsu\";\nconst coverImage =\n  \"https://ipfs.near.social/ipfs/bafkreicd7wmjfizslx72ycmnsmo7m7mnvfsyrw6wghsaseq45ybslbejvy\";\n\nState.init({\n  step: 0,\n  form: initialFormState,\n  errors: null,\n});\n\nconst handleStepComplete = (value) => {\n  const stepValid = true;\n  Object.keys(value).forEach((key) => {\n    const properties = types[\"hack.near/type/quest\"].properties.find(\n      (p) => p.name === key\n    );\n    const validation = validateType(properties.type, value[key], properties);\n    if (validation) {\n      State.update({\n        errors: {\n          ...state.errors,\n          [key]: validation,\n        },\n      });\n      stepValid = false;\n    } else {\n      State.update({\n        errors: {\n          ...state.errors,\n          [key]: null,\n        },\n      });\n    }\n  });\n\n  if (!stepValid) return;\n\n  if (state.step === 5) {\n    const finalAnswers = {\n      ...state.form,\n      ...value,\n    };\n\n    State.update({\n      step: state.step,\n      form: finalAnswers,\n    });\n    handleFormComplete(finalAnswers);\n    return;\n  }\n  State.update({\n    step: state.step + 1,\n    form: {\n      ...state.form,\n      ...value,\n    },\n  });\n};\n\nfunction handleFormComplete(value) {\n  const questArgs = {\n    name: context.accountId,\n    args: {\n      id: \"1\",\n    },\n  };\n\n  Near.call([\n    {\n      contractName: \"questsmock.near\",\n      methodName: \"create_near_quest\",\n      args: questArgs,\n      deposit: \"250000000000000000000000\",\n    },\n  ]);\n}\n\nconst steps = [\n  {\n    title: \"Title & Description\",\n    active: state.step === 0,\n    icon: state.step > 0 ? <i className=\"bi bi-check2\"></i> : undefined,\n    className: state.step > 0 ? \"active-outline\" : undefined,\n  },\n  {\n    title: \"Reward Parameters\",\n    active: state.step === 1,\n    icon: state.step > 1 ? <i className=\"bi bi-check2\"></i> : undefined,\n    className: state.step > 1 ? \"active-outline\" : undefined,\n  },\n  {\n    title: \"Completion Criteria\",\n    active: state.step === 2,\n    icon: state.step > 2 ? <i className=\"bi bi-check2\"></i> : undefined,\n    className: state.step > 2 ? \"active-outline\" : undefined,\n  },\n  {\n    title: \"Timeline\",\n    active: state.step === 3,\n    icon: state.step > 3 ? <i className=\"bi bi-check2\"></i> : undefined,\n    className: state.step > 3 ? \"active-outline\" : undefined,\n  },\n  {\n    title: \"Context\",\n    active: state.step === 4,\n    icon: state.step > 4 ? <i className=\"bi bi-check2\"></i> : undefined,\n    className: state.step > 4 ? \"active-outline\" : undefined,\n  },\n  {\n    title: \"Finalize\",\n    active: state.step === 5,\n    icon: state.step > 5 ? <i className=\"bi bi-check2\"></i> : undefined,\n    className: state.step > 5 ? \"active-outline\" : undefined,\n  },\n];\n\nreturn (\n  <>\n    <h1 className=\"h3 fw-bold mb-4\">Create a Quest</h1>\n    <Widget\n      src={`nearui.near/widget/Navigation.Steps`}\n      props={{\n        steps: steps,\n        onClick: (i) => {\n          if (i > state.step) return;\n          State.update({\n            step: i,\n          });\n        },\n      }}\n    />\n    <Widget\n      src={`hack.near/widget/quest.create.step${state.step + 1}`}\n      props={{\n        formState: state.form,\n        onComplete: handleStepComplete,\n        errors: state.errors,\n        renderFooter: (stepState, otherProps) => (\n          <Widget\n            src={`hack.near/widget/quest.create.footer`}\n            props={{\n              isLast: state.step >= steps.length - 1,\n              hasPrevious: state.step > 0,\n              onNext: () => {\n                handleStepComplete(stepState);\n              },\n              onPrevious: () => {\n                State.update({\n                  step: state.step - 1,\n                });\n              },\n              onReset: () => {\n                State.update({\n                  step: 0,\n                  form: initialFormState,\n                  errors: null,\n                });\n              },\n              ...otherProps,\n            }}\n          />\n        ),\n      }}\n    />\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/hack.near/widget/quest.create.form", "fact_widget_deployments_id": "0f0b0677443bd2c5e8bb44e285860fc9", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}