{"tx_hash": "9V9xPxp7SagUZ6LvMoWDa13ZMz1xnWdsRazmTaeEiRo2", "action_id_social": "6z2a67zAhcu4z8paRg4rS4o7d2zwPf1PJPRf583HM7US-0-widget", "block_id": 98508366, "block_timestamp": "2023-08-10T18:27:34.070Z", "signer_id": "hack.near", "widget_name": "GitBos", "source_code": "const accountId = props.accountId ?? context.accountId;\nconst daoId = props.daoId ?? \"build.sputnik-dao.near\";\n\nconst policy = Near.view(daoId, \"get_policy\");\n\nconst latestProposalId = Near.view(daoId, \"get_last_proposal_id\") - 1;\n\nconst deposit = policy.proposal_bond;\n\nconst initWidgetPath = props.widgetPath ?? `${daoId}/widget/community`;\nconst updatedWidgetPath =\n  props.updatedWidget ?? `${accountId}/widget/community`;\n\nState.init({\n  accountId: accountId ?? \"\",\n  widgetPath: initWidgetPath ?? \"\",\n  updatedWidget: updatedWidgetPath ?? \"\",\n});\n\nconst [ownerId, oldWidget, widgetName] = state.widgetPath.split(\"/\");\n\nconst newCode = Social.get(`${state.updatedWidget}`);\n\nconst oldCode = Social.get(`${state.widgetPath}`);\n\nconst widget_args = JSON.stringify({\n  data: {\n    [daoId]: {\n      widget: {\n        [`${widgetName}`]: {\n          \"\": `${newCode}`,\n        },\n      },\n    },\n  },\n});\n\nconst proposal_args = Buffer.from(widget_args, \"utf-8\").toString(\"base64\");\n\nconst handleProposal = () => {\n  Near.call([\n    {\n      contractName: daoId,\n      methodName: \"add_proposal\",\n      args: {\n        proposal: {\n          description: \"update widget\",\n          kind: {\n            FunctionCall: {\n              receiver_id: \"social.near\",\n              actions: [\n                {\n                  method_name: \"set\",\n                  args: proposal_args,\n                  deposit: \"50000000000000000000000\",\n                  gas: \"30000000000000\",\n                },\n              ],\n            },\n          },\n        },\n      },\n      deposit: deposit,\n      gas: \"219000000000000\",\n    },\n  ]);\n};\n\nconst handleCreate = () =>\n  Social.set({\n    widget: {\n      [`${widgetName}`]: {\n        \"\": `${oldCode}`,\n      },\n    },\n  });\n\nlet CodeWrapper = styled.div`\n  & > pre > div {\n    margin: 0px !important;\n  }\n\n  & > pre {\n    margin: 0px !important;\n    border-radius: 0px 0px 5px 5px;\n  }\n`;\n\nconst setButton = ({ widgetPath, onHide }) => {\n  return (\n    <button\n      className=\"btn btn-primary\"\n      onClick={() => {\n        State.update({ widgetPath });\n        onHide();\n      }}\n    >\n      <i className=\"bi bi-plus-lg\" /> add\n    </button>\n  );\n};\n\nconst updateButton = ({ widgetPath, onHide }) => {\n  return (\n    <button\n      className=\"btn btn-primary\"\n      onClick={() => {\n        State.update({ updatedPath: widgetPath });\n        onHide();\n      }}\n    >\n      <i className=\"bi bi-plus-lg\" /> add\n    </button>\n  );\n};\n\nreturn (\n  <div className=\"d-flex flex-column\">\n    <div className=\"p-1 m-1\">\n      <h2>\n        <b>Request Updates</b>\n      </h2>\n      <div>\n        <Widget\n          src=\"hack.near/widget/dev.proposal\"\n          props={{ accountId, daoId, proposalId: latestProposalId }}\n        />\n      </div>\n    </div>\n    <div className=\"p-1 m-1\">\n      <div className=\"row\">\n        <div className=\"col m-2\">\n          <h5>Base Widget</h5>\n          <div className=\"input-group mb-3\">\n            <input\n              className=\"form-control\"\n              placeholder={initWidgetPath}\n              defaultValue={state.widgetPath || initWidgetPath}\n              onChange={(e) => {\n                State.update({\n                  widgetPath: e.target.value,\n                });\n              }}\n            />\n          </div>\n          <Widget\n            src={`hack.near/widget/widget.inline`}\n            props={{\n              widgetPath: state.widgetPath,\n            }}\n          />\n          <div className=\"m-2\">\n            <a\n              className=\"btn btn-secondary border-0 m-1\"\n              href={`#/edit/${state.widgetPath}`}\n            >\n              <i className=\"bi bi-terminal-plus me-1\"></i>\n              {accountId === daoId ? \"Edit\" : \"Fork\"}\n            </a>\n          </div>\n        </div>\n        <br />\n        <div className=\"col m-2\">\n          <h5>Updated Version</h5>\n          <div className=\"input-group mb-3\">\n            <input\n              className=\"form-control\"\n              placeholder={`${accountId}/widget/${widgetName}`}\n              defaultValue={updatedWidget}\n              onChange={(e) => {\n                State.update({\n                  updatedWidget: e.target.value,\n                });\n              }}\n            />\n          </div>\n          <Widget\n            src={`hack.near/widget/widget.inline`}\n            props={{\n              widgetPath: state.updatedPath || `${accountId}/widget/community`,\n            }}\n          />\n          <div className=\"m-2\">\n            <button\n              disabled={!state.updatedPath}\n              className=\"btn btn-secondary border-0 m-1\"\n              onClick={handleProposal}\n            >\n              <i className=\"bi bi-git me-1\"></i>\n              {accountId === daoId ? \"Update\" : \"Propose Changes\"}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <CodeWrapper>\n      <Widget\n        src={`hack.near/widget/widget.compare`}\n        props={{\n          widgetPath: state.widgetPath,\n          updatedWidget: state.updatedWidget,\n          findUniqueResult: (\n            lineCountDeleted,\n            lineCountInserted,\n            lineCountCurrentCode,\n            lineCountPrevCode,\n            allLineCount\n          ) => {\n            if (\n              state.lineCountDeleted === undefined ||\n              state.lineCountInserted === undefined\n            )\n              State.update({ lineCountDeleted, lineCountInserted });\n          },\n        }}\n      />\n    </CodeWrapper>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/hack.near/widget/GitBos", "fact_widget_deployments_id": "7a8bc0545886887e34839ce943230bec", "inserted_timestamp": "2023-08-10T19:35:39.071Z", "modified_timestamp": "2023-08-10T19:35:39.071Z", "__row_index": 0}