{"tx_hash": "GTd2hY1Kppunw2XiJRD2CGUxubyAFdyzf3y56hrFVYrq", "action_id_social": "DjTXJBUBRia2JugVp1RvhcSv4yyxQMqbdKYhNVoiaDaT-0-widget", "block_id": 118792613, "block_timestamp": "2024-05-12T20:14:54.002Z", "signer_id": "hack.near", "widget_name": "explore.creators", "source_code": "const type = props.type || \"type\";\r\nconst id = props.id || \"*\";\r\n\r\nconst [searchTerm, setSearchTerm] = useState(\"\");\r\nconst [showModal, setShowModal] = useState(false);\r\nconst [selectedPath, setSelectedPath] = useState(\"\");\r\n\r\nconst [object, setObject] = useState(\r\n  Social.get(`*/${type}/${id}`, \"final\") || {}\r\n);\r\nconst [filteredResults, setFilteredResults] = useState([]);\r\n\r\nuseEffect(() => {\r\n  const results = {};\r\n  Object.entries(object).forEach(([creator, detail]) => {\r\n    const entries = detail[type] || {};\r\n    Object.keys(entries).forEach((id) => {\r\n      const path = `${creator}/${type}/${id}`;\r\n      if (path.toLowerCase().includes(searchTerm.toLowerCase())) {\r\n        if (!results[id]) {\r\n          results[id] = { count: 0, accounts: new Set() };\r\n        }\r\n        results[id].count++;\r\n        results[id].accounts.add(creator);\r\n      }\r\n    });\r\n  });\r\n\r\n  setFilteredResults(\r\n    Object.entries(results)\r\n      .sort((a, b) => b[1].count - a[1].count)\r\n      .map(([id, data]) => ({\r\n        id,\r\n        accounts: Array.from(data.accounts),\r\n        count: data.count,\r\n      }))\r\n  );\r\n}, [searchTerm, object]);\r\n\r\nconst handleInputChange = (event) => {\r\n  setSearchTerm(event.target.value);\r\n};\r\n\r\nconst setPath = (path) => {\r\n  setSelectedPath(path);\r\n};\r\n\r\nconst Profiles = styled.a`\r\n    display: inline-block;\r\n    position: relative;\r\n    img {\r\n        object-fit: cover;\r\n        border-radius: 50%;\r\n        width: 100%;\r\n        height: 100%;\r\n        transition: transform 0.3s ease, box-shadow 0.3s ease;\r\n    }\r\n    &:hover img {\r\n        transform: scale(1.1);\r\n        box-shadow: 0 0 8px rgba(0, 0, 0, 0.2);\r\n    }\r\n`;\r\n\r\nreturn (\r\n  <>\r\n    {showModal ? (\r\n      <div className=\"m-3\">\r\n        <div className=\"d-flex flex-row justify-content-between align-items-center\">\r\n          <h5>{selectedPath.split(\"/\").pop()}</h5>\r\n          {filteredResults.map(({ id, accounts, count }) => (\r\n            <div key={id} className=\"m-3 mt-4\">\r\n              <div className=\"d-flex flex-row justify-content-between align-items-center\">\r\n                <h5 className=\"mt-2\">\r\n                  <b>{id}</b>\r\n                </h5>\r\n                <div className=\"mt-3\">\r\n                  {accounts.map((creator) => (\r\n                    <Profiles\r\n                      key={creator}\r\n                      onClick={() => toggleModal(`${creator}/${type}/${id}`)}\r\n                    >\r\n                      <span className=\"d-inline-block\">\r\n                        <Widget\r\n                          src=\"mob.near/widget/ProfileImage\"\r\n                          props={{\r\n                            accountId: creator,\r\n                            imageStyle: {\r\n                              height: \"38px\",\r\n                              width: \"38px\",\r\n                            },\r\n                            imageClassName: \"\",\r\n                            tooltip: true,\r\n                          }}\r\n                        />\r\n                      </span>\r\n                    </Profiles>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n              <hr />\r\n            </div>\r\n          ))}\r\n          <button className=\"m-2 btn-sm\" onClick={() => toggleModal(\"\")}>\r\n            Reset\r\n          </button>\r\n        </div>\r\n        <Widget\r\n          src=\"hack.near/widget/explore.view\"\r\n          props={{ path: selectedPath, showInput: false }}\r\n        />\r\n      </div>\r\n    ) : (\r\n      <div className=\"m-3\">\r\n        {filteredResults.map(({ id, accounts, count }) => (\r\n          <div className=\"d-flex flex-row justify-content-between\">\r\n            <div>\r\n              {accounts.map((creator) => (\r\n                <Profiles\r\n                  key={creator}\r\n                  onClick={() => toggleModal(`${creator}/${type}/${id}`)}\r\n                >\r\n                  <span className=\"d-inline-block\">\r\n                    <Widget\r\n                      src=\"mob.near/widget/ProfileImage\"\r\n                      props={{\r\n                        accountId: creator,\r\n                        imageStyle: {\r\n                          height: \"38px\",\r\n                          width: \"38px\",\r\n                        },\r\n                        imageClassName: \"\",\r\n                        tooltip: true,\r\n                      }}\r\n                    />\r\n                  </span>\r\n                </Profiles>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    )}\r\n  </>\r\n);\r\n", "metadata": {"fork_of": "bozon.near/widget/WidgetHistory.History@86234702"}, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/hack.near/widget/explore.creators", "fact_widget_deployments_id": "9069abfa8c471e4556465e8d4b19f8ec", "inserted_timestamp": "2024-05-12T21:38:55.199Z", "modified_timestamp": "2024-05-12T21:38:55.199Z", "__row_index": 1}