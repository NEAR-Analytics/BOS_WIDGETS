{"tx_hash": "Fx4v5xqt7tAL4acsuUCrhk1siv6MdjWoPprPX8Z8UxQd", "action_id_social": "oGmL9NLmzdapLNH9LXd2iMu1eJFE1zWPjdbr1G5PvZj-0-widget", "block_id": 100191217, "block_timestamp": "2023-09-02T00:17:11.658Z", "signer_id": "hack.near", "widget_name": "NDC.WG.Create", "source_code": "const creatorId = props.creatorId ?? context.accountId;\n\nconst daos = Near.view(\"sputnik-dao.near\", \"get_dao_list\");\n\nif (daos === null) {\n  return \"Loading...\";\n}\n\nconst { handleClose } = props;\n\nconst daoId = props.daoId ?? \"hack.near\";\n\nconst policy = Near.view(daoId, \"get_policy\");\n\nif (policy === null) {\n  return \"Loading...\";\n}\n\nconst deposit = policy.proposal_bond;\n\nconst groups = Social.get(`${daoId}/thing/directory`);\n\nconst groupsArray = JSON.parse(groups);\n\nfunction generateUID() {\n  return (\n    Math.random().toString(16).slice(2) +\n    Date.now().toString(36) +\n    Math.random().toString(16).slice(2)\n  );\n}\n\nconst groupId = props.groupId ?? generateUID();\n\nconst groupMembers = Social.get(`${creatorId}/graph/${groupId}`);\n\nState.init({\n  group,\n  members: { [creatorId]: \"\" },\n  newMember: \"\",\n  isDao: false,\n});\n\nfunction addMember(newMember) {\n  State.update({\n    members: { ...state.members, [newMember]: \"\" },\n  });\n}\n\nfunction removeMember(memberKey) {\n  const updatedMembers = { ...state.members };\n  delete updatedMembers[memberKey];\n\n  State.update({\n    members: updatedMembers,\n  });\n}\n\nfunction isNearAddress(address) {\n  if (typeof address !== \"string\") {\n    return false;\n  }\n  if (!address.endsWith(\".near\")) {\n    return false;\n  }\n  const parts = address.split(\".\");\n  if (parts.length !== 2) {\n    return false;\n  }\n  if (parts[0].length < 2 || parts[0].length > 32) {\n    return false;\n  }\n  if (!/^[a-z0-9_-]+$/i.test(parts[0])) {\n    return false;\n  }\n  return true;\n}\n\nconst memberId = props.memberId ?? state.newMember;\n\nconst isValid = isNearAddress(memberId);\n\nconst checkAddress = (daos) => {\n  if (daos.indexOf(creatorId) !== -1) {\n    return State.update({ isDao: true });\n  }\n};\n\nconst widgets = {\n  styledComponents: \"hack.near/widget/NDC.StyledComponents\",\n};\n\nconst CardStyled = styled.div`\n  width: 100%;\n  height: 100%;\n  background: #f8f8f9;\n  gap: 10px;\n  padding: 25px;\n  margin: 0 auto;\n  border-radius: 10px;\n  overflow-y: scroll;\n`;\n\nconst CardForm = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: auto;\n`;\n\nconst H1 = styled.h1`\n  margin-bottom: 10px;\n  font-style: normal;\n  font-weight: 555;\n  font-size: 23px;\n`;\n\nconst Submitcontainer = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  gap: 8px;\n  margin-bottom: 16px;\n  @media only screen and (max-width: 480px) {\n    margin-top: 10px;\n  }\n`;\n\nconst Modal = styled.div`\n  position: fixed;\n  z-index: 1;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: rgba(0, 0, 0, 0.7);\n`;\n\nconst ComponentWrapper = styled.div`\n  display: flex;\n  width: 80%;\n  height: 80%;\n  flex-direction: column;\n  align-items: flex-start;\n  border-radius: 10px;\n  background: #fff;\n  border: 1px solid transparent;\n  margin: 140px auto auto auto;\n  @media only screen and (max-width: 480px) {\n    width: 90%;\n  }\n`;\n\nconst Hr = styled.div`\n  height: 1px;\n  margin: 15px 0;\n  width: 100%;\n  background: rgba(208, 214, 217, 0.4);\n`;\n\nconst Section = styled.div`\n  margin: 12px 0;\n`;\n\nconst handleCreate = () => {\n  let Group_Payload = {\n    contractName: \"social.near\",\n    methodName: \"set\",\n    args: {\n      data: {\n        [creatorId]: {\n          thing: {\n            [groupId]: {\n              ...state.group,\n              ...state.members,\n            },\n          },\n          graph: {\n            [groupId]: {\n              ...state.members,\n            },\n          },\n          index: {\n            graph: JSON.stringify({\n              key: \"request\",\n              value: {\n                type: \"add\",\n                thing: {\n                  [groupId]: {\n                    ...state.group,\n                    members: groupMembers,\n                    newMember: memberId,\n                  },\n                },\n              },\n            }),\n            notify: JSON.stringify({\n              key: daoId,\n              value: {\n                type: \"request\",\n                template: \"hack.near/widget/notification\",\n                data: {\n                  type: \"add\",\n                  thing: {\n                    [groupId]: {\n                      ...state.group,\n                      members: groupsArray,\n                      newMember: memberId,\n                    },\n                  },\n                },\n              },\n            }),\n          },\n        },\n      },\n    },\n    gas: 300000000000000,\n    deposit: 100000000000000000000000,\n  };\n\n  Near.call(Group_Payload).then(() => handleClose());\n};\n\nreturn (\n  <Modal>\n    <ComponentWrapper>\n      <CardStyled name=\"compose\">\n        <div className=\"d-flex flex-column\">\n          <CardForm>\n            <div className=\"d-flex justify-content-between align-items-center\">\n              <H1>Create Work Group</H1>\n              <Submitcontainer>\n                <Widget\n                  src={widgets.styledComponents}\n                  props={{\n                    Button: {\n                      style: \"danger\",\n                      text: \"Close\",\n                      onClick: handleClose,\n                    },\n                  }}\n                />\n                <Widget\n                  src={widgets.styledComponents}\n                  props={{\n                    Button: {\n                      text: \"Submit\",\n                      onClick: () => handleCreate(),\n                    },\n                  }}\n                />\n              </Submitcontainer>\n            </div>\n            <Hr />\n            <div className=\"row\">\n              <div className=\"col-lg-6 mt-2\">\n                <h5>Details</h5>\n                <Widget\n                  src=\"hack.near/widget/group.card\"\n                  props={{ creatorId, groupId, group: state.group }}\n                />\n                <div className=\"mb-2 mt-3\">\n                  <Widget\n                    src=\"near/widget/MetadataEditor\"\n                    props={{\n                      initialMetadata: group,\n                      onChange: (group) => State.update({ group }),\n                      options: {\n                        name: { label: \"Name\" },\n                        image: { label: \"Logo\" },\n                        description: { label: \"About\" },\n                        tags: {\n                          label: \"Tags\",\n                          tagsPattern: `*/${groupId}/tags/*`,\n                          placeholder:\n                            \"art, gov, edu, dev, com, nft, ai, social\",\n                        },\n                        linktree: {\n                          links: [\n                            {\n                              label: \"Twitter\",\n                              prefix: \"https://twitter.com/\",\n                              name: \"twitter\",\n                            },\n                            {\n                              label: \"Github\",\n                              prefix: \"https://github.com/\",\n                              name: \"github\",\n                            },\n                            {\n                              label: \"Telegram\",\n                              prefix: \"https://t.me/\",\n                              name: \"telegram\",\n                            },\n                            {\n                              label: \"Website\",\n                              prefix: \"https://\",\n                              name: \"website\",\n                            },\n                          ],\n                        },\n                      },\n                    }}\n                  />\n                </div>\n              </div>\n              <div className=\"col-lg-6\">\n                <div>\n                  <h5>Account ID</h5>\n                  <input\n                    placeholder=\"<example>.near\"\n                    onChange={(e) =>\n                      State.update({ newMember: e.target.value })\n                    }\n                  />\n                  <div className=\"d-flex align-items-center mt-2\">\n                    <button\n                      className=\"btn btn-primary m-2\"\n                      disabled={!isValid}\n                      onClick={() => addMember(state.newMember)}\n                    >\n                      add\n                    </button>\n                  </div>\n                </div>\n                <hr />\n                <div>\n                  <h5>Members</h5>\n                  {Object.keys(state.members).map((a) => {\n                    return (\n                      <div className=\"d-flex m-2 p-2 justify-content-between align-items-center\">\n                        <div className=\"d-flex align-items-center\">\n                          <Widget\n                            src=\"mob.near/widget/Profile\"\n                            props={{ accountId: a }}\n                          />\n                        </div>\n                        <button\n                          className=\"btn btn-danger m-1\"\n                          disabled={!isNearAddress(a)}\n                          onClick={() => removeMember(a)}\n                        >\n                          remove\n                        </button>\n                      </div>\n                    );\n                  })}\n                </div>\n              </div>\n            </div>\n          </CardForm>\n        </div>\n      </CardStyled>\n    </ComponentWrapper>\n  </Modal>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/hack.near/widget/NDC.WG.Create", "fact_widget_deployments_id": "2fe7ac2afa77fafe516e718d8cc5bbad", "inserted_timestamp": "2023-09-02T02:23:20.045Z", "modified_timestamp": "2023-09-02T02:23:20.045Z", "__row_index": 16}