{"tx_hash": "83Hy9tjc4ZiRBLZPB1ieCsyN7bqMmjNQsN32czgs7NhC", "action_id_social": "D9YVdqYALAbhJUMR391RXi8KPqLxioKaQDiJEeiZWpCV-0-widget", "block_id": 103067870, "block_timestamp": "2023-10-10T17:57:25.164Z", "signer_id": "hack.near", "widget_name": "Connect", "source_code": "const { handleClose } = props;\n\nconst curatorId = props.curatorId ?? context.accountId;\n\nif (!curatorId) {\n  return \"Please connect your NEAR account :)\";\n}\n\nconst groupId = props.groupId ?? \"526fb256e74eelmf0nw3n5909bc189c13d\";\n\nconst groupData =\n  props.group ?? Social.get(`${curatorId}/thing/${groupId}/**`, \"final\");\n\nif (!groupData) {\n  return \"\";\n}\n\nconst groupKey = Object.keys(groupData)[0];\n\nconst initMembers =\n  props.members ?? Social.get(`${curatorId}/graph/${groupId}/**`, \"final\");\n\nif (!initMembers) {\n  return \"\";\n}\n\nState.init({\n  group: groupData,\n  members: initMembers,\n  newMember: \"\",\n});\n\nfunction addMember(newMember) {\n  State.update({\n    members: { ...state.members, [newMember]: \"\" },\n  });\n}\n\nfunction removeMember(memberKey) {\n  const updatedMembers = { ...state.members };\n  delete updatedMembers[memberKey];\n\n  State.update({\n    members: updatedMembers,\n  });\n}\n\nfunction isNearAddress(address) {\n  if (typeof address !== \"string\") {\n    return false;\n  }\n  if (!address.endsWith(\".near\")) {\n    return false;\n  }\n  const parts = address.split(\".\");\n  if (parts.length !== 2) {\n    return false;\n  }\n  if (parts[0].length < 2 || parts[0].length > 32) {\n    return false;\n  }\n  if (!/^[a-z0-9_-]+$/i.test(parts[0])) {\n    return false;\n  }\n  return true;\n}\n\nconst memberId = props.memberId ?? state.newMember;\n\nconst isValid = isNearAddress(memberId);\n\nconst handleSave = () => {\n  const data = {\n    graph: {\n      [groupId]: {\n        ...state.members,\n      },\n    },\n    index: {\n      graph: JSON.stringify(\n        Object.keys(state.members).map((account) => ({\n          key: groupId,\n          value: {\n            type: \"add\",\n            accountId: account,\n          },\n        }))\n      ),\n    },\n  };\n  const notify = Object.keys(state.members).filter(\n    (it) => it !== context.accountId\n  );\n  if (notify.length > 0) {\n    data.index.notify = JSON.stringify(\n      notify.map((account) => ({\n        key: account,\n        value: {\n          type: \"add\",\n        },\n      }))\n    );\n  }\n  Social.set(data);\n};\n\nconst CardStyled = styled.div`\n  width: 100%;\n  height: 100%;\n  background: #f8f8f9;\n  gap: 10px;\n  padding: 25px;\n  margin: 0 auto;\n  border-radius: 10px;\n  overflow-y: scroll;\n`;\n\nconst CardForm = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: auto;\n`;\n\nconst H1 = styled.h1`\n  margin-bottom: 10px;\n  font-style: normal;\n  font-weight: 555;\n  font-size: 23px;\n`;\n\nconst Submitcontainer = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  gap: 8px;\n  margin-bottom: 16px;\n  @media only screen and (max-width: 480px) {\n    margin-top: 10px;\n  }\n`;\n\nconst Modal = styled.div`\n  position: fixed;\n  z-index: 1;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  background: rgba(0, 0, 0, 0.7);\n`;\n\nconst ComponentWrapper = styled.div`\n  display: flex;\n  width: 80%;\n  height: 80%;\n  flex-direction: column;\n  align-items: flex-start;\n  border-radius: 10px;\n  background: #fff;\n  border: 1px solid transparent;\n  margin: 140px auto auto auto;\n  @media only screen and (max-width: 480px) {\n    width: 90%;\n  }\n`;\n\nconst Label = styled.div`\n  margin-bottom: 8px;\n  font-weight: bold;\n  text-align: left;\n`;\n\nreturn (\n  <Modal>\n    <ComponentWrapper>\n      <CardStyled>\n        <div className=\"d-flex flex-column\">\n          <CardForm>\n            <div className=\"d-flex align-items-center justify-content-between\">\n              <H1>Builders</H1>\n              <Submitcontainer>\n                <button\n                  onClick={handleClose}\n                  className=\"btn btn-secondary me-1\"\n                >\n                  Close\n                </button>\n                <button className=\"btn btn-success m-2\" onClick={handleSave}>\n                  Save\n                </button>\n              </Submitcontainer>\n            </div>\n            <div>\n              <Label>Account ID</Label>\n              <input\n                label=\"input each member's account ID here, then click `add` below\"\n                placeholder=\"<example>.near\"\n                onChange={(e) => State.update({ newMember: e.target.value })}\n              />\n              <div className=\"d-flex mt-2\">\n                <button\n                  className=\"btn btn-primary m-2\"\n                  onClick={() => addMember(state.newMember)}\n                >\n                  Add\n                </button>\n                {JSON.stringify(state.members) !==\n                  JSON.stringify(initMembers) && (\n                  <button\n                    className=\"btn btn-outline-primary m-2\"\n                    onClick={() => State.update({ members: initMembers })}\n                  >\n                    Reset\n                  </button>\n                )}\n              </div>\n            </div>\n            <div>\n              {Object.keys(state.members).map((a) => {\n                return (\n                  <div className=\"d-flex m-2 p-2 justify-content-between\">\n                    <Widget\n                      src=\"mob.near/widget/Profile\"\n                      props={{ accountId: a }}\n                    />\n                    <button\n                      className=\"btn btn-danger m-2\"\n                      onClick={() => removeMember(a)}\n                    >\n                      Remove\n                    </button>\n                  </div>\n                );\n              })}\n            </div>\n          </CardForm>\n        </div>\n      </CardStyled>\n    </ComponentWrapper>\n  </Modal>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/hack.near/widget/Connect", "fact_widget_deployments_id": "14a873c9f6fc5ea430af1858b521bd98", "inserted_timestamp": "2023-10-10T19:47:34.884Z", "modified_timestamp": "2023-10-10T19:47:34.884Z", "__row_index": 0}