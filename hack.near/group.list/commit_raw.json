{"tx_hash": "CQPiC2JrvqoeEizwfgwp2caYrhzRtxR39nDr2FvZpqtn", "action_id_social": "DSCjsWLgEyhvnj6djGkGkKm9r2JK7PhUKi167vkzkSAP-0-widget", "block_id": 99628298, "block_timestamp": "2023-08-25T13:19:45.007Z", "signer_id": "hack.near", "widget_name": "group.list", "source_code": "const creatorId = props.creatorId ?? context.accountId;\nconst groupId = props.groupId;\n\nif (!groupId) {\n  return \"requires `groupId` property\";\n}\n\nlet members = Social.getr(`${creatorId}/graph/${groupId}`, \"final\", {});\n\nif (!members) {\n  return \"group not found\";\n}\n\nState.init({\n  members,\n  inputVal: \"\",\n});\n\nfunction addMember(newMember) {\n  State.update({\n    members: { ...state.members, [newMember]: \"\" },\n  });\n}\n\nfunction removeMember(memberKey) {\n  const updatedMembers = { ...state.members };\n  delete updatedMembers[memberKey];\n\n  State.update({\n    members: updatedMembers,\n  });\n}\n\nfunction generateUID() {\n  return (\n    Math.random().toString(16).slice(2) +\n    Date.now().toString(36) +\n    Math.random().toString(16).slice(2)\n  );\n}\n\nconst type = group ? \"remove\" : \"add\";\n\nconst handleSaveGroup = () => {\n  const groupId = groupId ?? generateUID();\n  const data = {\n    graph: {\n      [groupId]: state.members,\n    },\n    index: {\n      graph: JSON.stringify({\n        key: groupId,\n        value: {\n          type,\n        },\n      }),\n    },\n  };\n\n  Social.set(data, {\n    onCommit: () => {},\n    onCancel: () => {},\n  });\n};\n\nfunction isNearAddress(address) {\n  if (typeof address !== \"string\") {\n    return false;\n  }\n  if (!address.endsWith(\".near\")) {\n    return false;\n  }\n  const parts = address.split(\".\");\n  if (parts.length !== 2) {\n    return false;\n  }\n  if (parts[0].length < 2 || parts[0].length > 32) {\n    return false;\n  }\n  if (!/^[a-z0-9_-]+$/i.test(parts[0])) {\n    return false;\n  }\n  return true;\n}\n\nconst memberId = props.memberId ?? state.inputVal;\n\nconst isValid = isNearAddress(memberId);\n\nreturn (\n  <>\n    <div>\n      <h5>Membership</h5>\n      <input\n        placeholder=\"<example>.near\"\n        onChange={(e) => State.update({ inputVal: e.target.value })}\n      />\n      <div className=\"d-flex align-items-center mt-2\">\n        <button\n          className=\"btn btn-primary m-2\"\n          disabled={!isValid}\n          onClick={() => addMember(state.inputVal)}\n        >\n          add\n        </button>\n      </div>\n    </div>\n    <hr />\n    <div>\n      {Object.keys(state.members).map((a) => {\n        return (\n          <div className=\"d-flex m-2 p-2 justify-content-between align-items-center\">\n            <div className=\"d-flex align-items-center\">\n              <Widget src=\"mob.near/widget/Profile\" props={{ accountId: a }} />\n            </div>\n            <button\n              className=\"btn btn-danger m-1\"\n              disabled={!isNearAddress(a)}\n              onClick={() => removeMember(a)}\n            >\n              remove\n            </button>\n          </div>\n        );\n      })}\n    </div>\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/hack.near/widget/group.list", "fact_widget_deployments_id": "82c561e30cba22fc47839d889c914eae", "inserted_timestamp": "2023-08-25T15:23:44.856Z", "modified_timestamp": "2023-08-25T15:23:44.856Z", "__row_index": 3}