{"tx_hash": "8PFXEY7vofSpxpqmUqnjXz1XQwbtWhCTE3j9k6D1hgnu", "action_id_social": "98xR5xe8v2cSCsT2LL3kctYmdHc5Dti6rHr9tguBcquh-0-widget", "block_id": 96490185, "block_timestamp": "2023-07-15T00:05:54.226Z", "signer_id": "hack.near", "widget_name": "docs", "source_code": "const ownerId = \"hack.near\";\nconst curatedComps = [\n  {\n    category: \"Learn\",\n    id: \"concepts\",\n    icon: \"bi-mortarboard-fill\",\n    components: [\n      {\n        accountId: \"hack.near\",\n        widgetName: \"edu.library\",\n      },\n    ],\n  },\n  {\n    category: \"Quickstart\",\n    icon: \"bi-rocket-takeoff-fill\",\n    id: \"quickstart\",\n    components: [\n      {\n        accountId: \"gagdiez.near\",\n        widgetName: \"Greeter\",\n      },\n    ],\n  },\n  {\n    category: \"Discover\",\n    icon: \"bi-stars\",\n    id: \"social\",\n    components: [\n      {\n        accountId: \"mob.near\",\n        widgetName: \"Explorer\",\n      },\n      {\n        accountId: \"efiz.near\",\n        widgetName: \"Tree\",\n      },\n      {\n        accountId: \"every.near\",\n        widgetName: \"browser\",\n      },\n    ],\n  },\n  {\n    category: \"Examples\",\n    id: \"examples\",\n    icon: \"bi-map-fill\",\n    components: [\n      {\n        accountId: \"gagdiez.near\",\n        widgetName: \"HelloNear\",\n      },\n      {\n        accountId: \"ostolex.near\",\n        widgetName: \"DiceWidgetDemo\",\n      },\n      {\n        accountId: \"dorgon108.near\",\n        widgetName: \"TypeAheadExample\",\n      },\n      {\n        accountId: \"mob.near\",\n        widgetName: \"MarkdownEditorIframe\",\n      },\n    ],\n  },\n  {\n    category: \"Tools\",\n    id: \"tools\",\n    icon: \"bi-tools\",\n    components: [\n      { accountId: \"hack.near\", widgetName: \"docs.cli\" },\n      { accountId: \"mob.near\", widgetName: \"Explorer\" },\n      { accountId: \"dataplatform.near\", widgetName: \"QueryApi.App\" },\n      { accountId: \"bozon.near\", widgetName: \"WidgetHistory\" },\n      { accountId: \"hack.near\", widgetName: \"GitBos\" },\n      { accountId: \"azbang.near\", widgetName: \"CallbackEditor\" },\n    ],\n  },\n  {\n    category: \"Standards\",\n    id: \"standards\",\n    icon: \"bi-rulers\",\n    components: [\n      {\n        accountId: \"mob.near\",\n        widgetName: \"MetadataEditor\",\n      },\n      {\n        accountId: \"efiz.near\",\n        widgetName: \"every.post\",\n      },\n      {\n        accountId: \"efiz.near\",\n        widgetName: \"every.post.view\",\n      },\n      {\n        accountId: \"near\",\n        widgetName: \"FollowButton\",\n      },\n      {\n        accountId: \"mob.near\",\n        widgetName: \"Welcome.RHS.Editor\",\n      },\n      {\n        accountId: \"mob.near\",\n        widgetName: \"WidgetSource\",\n      },\n      {\n        accountId: \"mob.near\",\n        widgetName: \"IndexFeed\",\n      },\n      {\n        accountId: \"mob.near\",\n        widgetName: \"Image\",\n      },\n      {\n        accountId: \"manzanal.near\",\n        widgetName: \"Badge\",\n      },\n    ],\n  },\n];\nconst filterTag = props.commonComponentTag ?? \"edu\";\nconst debug = props.debug ?? false;\n\nconst searchComponents = () => {\n  return (\n    <div class=\"mb-4\">\n      <div className=\"mb-2\">\n        <Widget\n          src=\"mob.near/widget/ComponentSearch\"\n          props={{\n            debug: debug,\n            filterTag: filterTag,\n            placeholder: \"\ud83d\udd0d  explore available components\",\n            limit: 24,\n            onChange: ({ result }) => {\n              State.update({ components: result });\n            },\n          }}\n        />\n      </div>\n      {state.components && (\n        <div className=\"mb-2\">\n          {state.components.map((comp, i) => (\n            <div class=\"mb-2\" key={i}>\n              <Widget\n                src=\"hack.near/widget/widget.inline\"\n                props={{\n                  accountId: comp.accountId,\n                  widgetPath: comp.widgetName,\n                  expanded: false,\n                }}\n              />\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst renderCategory = (categoryId) => {\n  if (!categoryId || categoryId === \"\") return <></>;\n  const item = curatedComps.find((i) => i.id == categoryId);\n  return (\n    <div class=\"mt-3\">\n      <div class=\"text fs-5 text-muted mb-1\" id={item.id}>\n        {item.category}\n      </div>\n      <div class=\"border border-2 mb-4 rounded\"></div>\n      <div class=\"container\">\n        <div className=\"row \">\n          {item.components.map((comp, i) => (\n            <div class=\"mb-3\">\n              <Widget\n                key={i}\n                src=\"hack.near/widget/widget.inline\"\n                props={{\n                  accountId: comp.accountId,\n                  widgetPath: `${comp.accountId}/widget/${comp.widgetName}`,\n                  expanded: false,\n                }}\n              />\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\nState.init({\n  tab: \"home\",\n  id: \"\",\n});\n\nconst renderHome = () => {\n  return (\n    <>\n      {searchComponents()}\n      <div class=\"mt-2\">\n        <h4>Resources</h4>\n        <p class=\"text text-muted \">\n          Test your knowledge and skills to earn an official builder badge by\n          passing various levels of quizzes and solving fun code puzzles.\n        </p>\n        <div className=\"mb-3\">\n          {curatedComps && (\n            <div className=\"mb-3 m-3\">\n              {curatedComps.map((cat, i) => renderCategory(cat.id))}\n            </div>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst onSelect = (selection) => {\n  State.update({ tab: selection.tab, id: selection.id ? selection.id : \"\" });\n};\n\nconst renderContent = {\n  home: renderHome(),\n  searchComponents: searchComponents(),\n  category: renderCategory(state.id),\n}[state.tab];\n\nreturn (\n  <>\n    <div class=\"row\">\n      <div class=\"col-md-3\">\n        <Widget\n          src={`hack.near/widget/edu.navbar`}\n          props={{\n            tab: state.tab,\n            onSelect,\n            navItems: curatedComps.map((i) => ({\n              category: i.category,\n              icon: i.icon,\n              id: i.id,\n            })),\n          }}\n        />\n        <hr className=\"border-2\" />\n        <Widget\n          src=\"miraclx.near/widget/Attribution\"\n          props={{ authors: [ownerId], dep: true }}\n        />\n      </div>\n      <div class=\"col-md-9\">\n        <div className=\"d-flex flex-wrap justify-content-between mb-3\">\n          <div className=\"m-1\">\n            <h2>\n              <b>#dev</b>\n            </h2>\n          </div>\n          <div className=\"m-1\">\n            <a\n              href={`#/near/widget/ProfilePage?accountId=every.near`}\n              class=\"text-muted\"\n            >\n              <Widget\n                src=\"mob.near/widget/Profile\"\n                props={{ accountId: \"build.sputnik-dao.near\" }}\n              />\n            </a>\n          </div>\n        </div>\n        <p class=\"text text-muted\">\n          Learn how to build on the blockchain operating system together!\n        </p>\n        {renderContent}\n      </div>\n    </div>\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/hack.near/widget/docs", "fact_widget_deployments_id": "fe4059c53ba380ffb51848489f971fc0", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 6}