{"tx_hash": "g4kpiLKv7PwAUEfLCxCWb7jMWrRktA37jyyEiaug4mN", "action_id_social": "CrKqfxxvF4mvuujgs81e7em4bKSm8SQjsRd28KUaoZLP-0-widget", "block_id": 89706468, "block_timestamp": "2023-04-16T10:04:02.901Z", "signer_id": "hack.near", "widget_name": "LastProfilesImages", "source_code": "const accountId = props.accountId;\nconst tag = props.tag;\n\nlet keys = `*/profile/*`;\n\nconst data = Social.keys(\"*/profile\", \"final\");\n\nconst profiles =\n  Social.get([\"*/profile/name\", \"*/profile/tags/*\"], \"final\") || {};\n\nconst profilesWithTags = { ...profiles };\nObject.entries(profiles).forEach(([key, valueObj]) => {\n  if (!valueObj?.profile?.hasOwnProperty(\"tags\")) {\n    delete profilesWithTags[key];\n  }\n});\nconst taggedProfiles = Social.keys(`*/profile/tags/*`, \"final\") || {};\n\nconst limit = props.limit || 39;\n\nif (!data) {\n  return \"Loading...\";\n}\n\nif (tag) {\n  const taggedWidgets = Social.keys(\n    `${accountId ?? \"*\"}/profile/*/metadata/tags/${tag}`,\n    \"final\"\n  );\n\n  if (taggedWidgets === null) {\n    return \"Loading tags\";\n  }\n\n  keys = Object.entries(taggedProfiles)\n    .map((kv) => Object.keys(kv[1].profile).map((w) => `${kv[0]}/profile/${w}`))\n    .flat();\n\n  if (!keys.length) {\n    return `No profiles found by tag #${tag}`;\n  }\n}\n\nconst processData = (data) => {\n  const accounts = Object.entries(data);\n\n  const allItems = accounts\n    .map((account) => {\n      const accountId = account[0];\n      return Object.entries(account[1].profile).map((kv) => ({\n        accountId,\n        name: kv[0],\n        blockHeight: kv[1],\n      }));\n    })\n    .flat();\n\n  allItems.sort((a, b) => b.blockHeight - a.blockHeight);\n  return allItems;\n};\n\nconst renderTag = (tag, tagBadge) => (\n  <a href={makeLink(accountId, tag)}>{tagBadge}</a>\n);\n\nconst renderItem = (a) => {\n  return (\n    <a\n      href={`#/${a.accountId}/profile/${a.name}`}\n      className=\"text-decoration-none\"\n      key={JSON.stringify(a)}\n    >\n      <Widget\n        src=\"mob.near/widget/ProfileImage\"\n        props={{\n          tooltip: true,\n          accountId: a.accountId,\n          name: a.name,\n        }}\n      />\n    </a>\n  );\n};\n\nif (JSON.stringify(data) !== JSON.stringify(state.data || {})) {\n  State.update({\n    data,\n    allItems: processData(data),\n  });\n}\n\nlet accounts = Object.entries(data);\nconst numAccounts = accounts.length;\naccounts = accounts.slice(numAccounts - limit, numAccounts);\n\nconst allWidgets = [];\n\nfor (let i = 0; i < accounts.length; ++i) {\n  const accountId = accounts[i][0];\n\n  allWidgets.push(\n    <a\n      href={`#/mob.near/widget/ProfilePage?accountId=${accountId}`}\n      className=\"text-decoration-none\"\n      key={i}\n    >\n      <Widget\n        src=\"mob.near/widget/ProfileImage\"\n        props={{\n          accountId,\n          tooltip: true,\n          className: \"d-inline-block overflow-hidden\",\n        }}\n      />\n    </a>\n  );\n}\n\nreturn (\n  <div className=\"d-flex flex-wrap gap-1 my-3\">\n    {state.allItems\n      .slice(0, props.limit ? parseInt(props.limit) : 999)\n      .map(renderItem)}\n    <div class=\"d-flex flex-wrap gap-1\">{allWidgets}</div>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/hack.near/widget/LastProfilesImages", "fact_widget_deployments_id": "0e506d7b5e4222c9c72cc84de960c217", "inserted_timestamp": "2000-01-01T00:00:00.000Z", "modified_timestamp": "2000-01-01T00:00:00.000Z", "__row_index": 6}