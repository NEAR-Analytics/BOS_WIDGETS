{"tx_hash": "2QBe2mxoiHVdbC5cXQD1omMq4ssjyPDcBoSsuAGUsMwk", "action_id_social": "52q6axGJxNzwA96CZLFSFAYN24xjKvMzPDKzbXVF2BWy-0-widget", "block_id": 96145968, "block_timestamp": "2023-07-10T12:37:33.451Z", "signer_id": "hack.near", "widget_name": "dao.candidate", "source_code": "const accountId = context.accountId;\nconst memberId = props.memberId ?? context.accountId;\n\nconst daoId = props.daoId ?? \"rc-dao.sputnik-dao.near\";\nconst groupId = props.groupId ?? \"community\";\n\nconst candidateId = props.candidateId ?? \"multi.near\";\nconst proposalId = props.proposalId ?? 41;\n\nconst proposal = Near.view(daoId, \"get_proposal\", {\n  id: JSON.parse(proposalId),\n});\n\nif (proposal === null) {\n  return \"\";\n}\n\nconst postUrl =\n  props.postUrl ?? \"https://social.near.page/p/rc-dao.near/94244727\";\n\nState.init({\n  isMember: false,\n});\n\nconst policy = Near.view(daoId, \"get_policy\");\n\nif (!policy) {\n  return \"\";\n}\n\nconst group = policy.roles\n  .filter((role) => role.name === groupId)\n  .map((role) => role.kind.Group);\n\nconst groupMembers = group.join(\", \");\n\nconst checkMembership = (groupMembers) => {\n  if (groupMembers.indexOf(memberId) !== -1) {\n    return State.update({ isMember: true });\n  }\n};\n\nconst validMember = checkMembership(groupMembers);\n\n// check if account can vote\nconst canVote = accountId && proposal.votes[memberId] !== \"Approve\";\n\n// SBT verification\nlet human = false;\nconst userSBTs = Near.view(\"registry.i-am-human.near\", \"sbt_tokens_by_owner\", {\n  account: memberId,\n});\n\nfor (let i = 0; i < userSBTs.length; i++) {\n  if (\"fractal.i-am-human.near\" == userSBTs[i][0]) {\n    human = true;\n  }\n}\n\nconst handleApprove = () => {\n  Near.call([\n    {\n      contractName: daoId,\n      methodName: \"act_proposal\",\n      args: {\n        id: proposalId,\n        action: \"VoteApprove\",\n      },\n      gas: 219000000000000,\n    },\n  ]);\n};\n\nconst Card = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  gap: 15px;\n  width: 100%;\n  border-radius: 9px;\n  background: #fff;\n  border: 1px solid #eceef0;\n  box-shadow: 0px 1px 3px rgba(16, 24, 40, 0.1),\n    0px 1px 2px rgba(16, 24, 40, 0.06);\n  overflow: hidden;\n  padding: 12px;\n  margin: 0.555em;\n`;\n\nreturn (\n  <Card>\n    <Widget\n      src=\"near/widget/AccountProfile\"\n      props={{ accountId: candidateId }}\n    />\n    <a className=\"btn flex-fill btn-outline-primary \" href={postUrl}>\n      Discuss\n    </a>\n    {human ? (\n      <div className=\"m-1 d-flex flex-row gap-1\">\n        {canVote ? (\n          <button className=\"btn flex-fill btn-success\" onClick={handleApprove}>\n            Vote\n          </button>\n        ) : (\n          <button\n            className=\"btn flex-fill btn-success\"\n            onClick={handleApprove}\n            disabled={!canVote}\n          >\n            Voted\n          </button>\n        )}\n      </div>\n    ) : (\n      <div className=\"m-1 d-flex flex-row gap-1\">\n        <Widget\n          src=\"mob.near/widget/FollowButton\"\n          props={{ accountId: candidateId }}\n        />\n      </div>\n    )}\n  </Card>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/hack.near/widget/dao.candidate", "fact_widget_deployments_id": "13a4f267b8795f90ebd1e95808479304", "inserted_timestamp": "2000-01-01T00:00:00.000Z", "modified_timestamp": "2000-01-01T00:00:00.000Z", "__row_index": 4}