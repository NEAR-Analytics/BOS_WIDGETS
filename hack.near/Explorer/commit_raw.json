{"tx_hash": "8AKnmL3rSEiqDBeQqX5RYK81o5zW5cgTPc6j7ZLaZDTA", "action_id_social": "JBbuHEnBMkAG4bNC6wzYTc3KCkVQuUgmANgRigL7SrMk-0-widget", "block_id": 118727883, "block_timestamp": "2024-05-11T20:12:22.486Z", "signer_id": "hack.near", "widget_name": "explorer", "source_code": "const [typesObject, setTypesObject] = useState(\n  Social.get(\"*/type/*\", \"final\") || null\n);\n\nconst [creator, setCreator] = useState(\"\");\n\nuseEffect(() => {\n  function fetchTypes() {\n    const data = Social.get(\"*/type/*\", \"final\");\n    setTypesObject(data);\n  }\n  fetchTypes();\n}, []);\n\nconst typeCreators = Object.keys(typesObject);\nconst types = Object.entries(typesObject);\n\nconst onChangeInput = (creator) => {\n  setCreator(creator);\n};\n\nconst filteredTypes = typeCreators.filter(\n  (type) => type.indexOf(creator) !== -1\n);\n\nconst total_types = typeCreators.length;\n\nconst filtered_types = filteredTypes.length;\n\nreturn (\n  <>\n    <div className=\"m-2\">\n      <ul>\n        {types.map((typeEntry, index) => {\n          // Extract the root identifier (e.g., \"devs.near\")\n          const rootIdentifier = typeEntry[0];\n\n          // Access the 'type' object that may contain multiple keys\n          const typesObject = typeEntry[1].type;\n\n          // Extract each type name and create list items for each\n          return Object.keys(typesObject).map((typeName) => {\n            // Construct the path string for each type\n            const path = `${rootIdentifier}/type/${typeName}`;\n\n            return <li key={`${rootIdentifier}-${typeName}`}>{path}</li>;\n          });\n        })}\n      </ul>\n      <h3 className=\"mb-3\">Explore Types</h3>\n      <input\n        type=\"text\"\n        value={creator}\n        onChange={(e) => onChangeInput(e.target.value)}\n        placeholder=\"Search by Account ID\"\n      />\n      <div className=\"m-1 mt-3\">\n        <h5 className=\"mb-2\">Creators</h5>\n        {!creator ? (\n          <p>\n            <b>Total:</b> {total_types}\n          </p>\n        ) : (\n          <p>\n            <b>Filtered:</b> {filtered_types}\n          </p>\n        )}\n        <ul>\n          {filteredTypes.map((type, index) => (\n            <li key={index}>{type}</li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/hack.near/widget/explorer", "fact_widget_deployments_id": "c6d496e1b178c716dbea71a1b3b5de03", "inserted_timestamp": "2024-05-11T21:38:38.260Z", "modified_timestamp": "2024-05-11T21:38:38.260Z", "__row_index": 1}