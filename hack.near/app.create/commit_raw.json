{"tx_hash": "FwJipCKrVEGKEmQw9YqbJKQJ8PMFhCBMXrrJcVPeVMYi", "action_id_social": "EPxQ9kvP1LKotajaNUmsXqLPCe12Wt6riv5Nh2dXpKrw-0-widget", "block_id": 113524470, "block_timestamp": "2024-02-25T02:11:01.336Z", "signer_id": "hack.near", "widget_name": "app.create", "source_code": "const accountId = props.accountId ?? context.accountId ?? \"hack.near\";\n\nconst defaultRoutes = {\n  main: {\n    path: \"hack.near/widget/page.index\",\n    blockHeight: \"final\",\n    init: {\n      name: \"App\",\n    },\n  },\n  social: {\n    path: \"hack.near/widget/page.feed\",\n    blockHeight: \"final\",\n    init: {\n      name: \"Discussion\",\n    },\n  },\n  docs: {\n    path: \"hack.near/widget/page.docs\",\n    blockHeight: \"final\",\n    init: {\n      name: \"Guide\",\n    },\n  },\n};\n\nconst [appId, setAppId] = useState(\"app\");\nconst [routes, setRoutes] = useState(props.routes ?? defaultRoutes);\nconst [routePath, setRoutePath] = useState(\"\");\nconst [activeRouteKey, setActiveRouteKey] = useState(\"main\");\nconst [pageId, setPageId] = useState(\"\");\nconst [buttonText, setButtonText] = useState(pageId);\nconst [name, setName] = useState(\"\");\n\nState.init({\n  image,\n});\n\nconst isValid = Social.get(`${routePath}/**`);\n\nconst handleCreate = () => {\n  const routesConfigObject = Object.keys(routes).reduce((obj, routeKey) => {\n    const route = routes[routeKey];\n    const pathSegments = route.path.split(\"/\");\n    const keyName = pathSegments[pathSegments.length - 1] || routeKey;\n    obj[routeKey] = {\n      path: `${accountId}/widget/${keyName}`,\n      blockHeight: route.blockHeight,\n      init: route.init,\n    };\n    return obj;\n  }, {});\n\n  const routesObject = Object.keys(routes).reduce((obj, routeKey) => {\n    const route = routes[routeKey];\n    const pathSegments = route.path.split(\"/\");\n    const keyName = pathSegments[pathSegments.length - 1] || routeKey;\n\n    obj[keyName] = {\n      \"\": Social.get(`${route.path}`),\n    };\n    return obj;\n  }, {});\n\n  Social.set({\n    widget: {\n      [appId]: {\n        \"\": Social.get(\"hack.near/widget/app\"),\n      },\n      ...routesObject,\n    },\n    project: {\n      [appId]: {\n        metadata: {\n          name,\n          image: state.image,\n          tags: {\n            build: \"\",\n          },\n        },\n        config: {\n          type: \"app\",\n          routes: routesConfigObject,\n        },\n      },\n    },\n  });\n};\n\nconst addRoute = (newRouteKey, newRouteData) => {\n  setRoutes((prevRoutes) => ({\n    ...prevRoutes,\n    [newRouteKey]: newRouteData,\n  }));\n};\n\nconst removeRoute = (routeKey) => {\n  setRoutes((prevRoutes) => {\n    const updatedRoutes = { ...prevRoutes };\n    delete updatedRoutes[routeKey];\n    return updatedRoutes;\n  });\n};\n\nconst routeData = {\n  [state.pageId]: {\n    path: [state.routePath],\n    blockHeight: \"final\",\n    init: {\n      name: [state.buttonText ?? state.pageId],\n    },\n  },\n};\n\nconst handleRouteChange = (selectedRouteKey) => {\n  setActiveRouteKey(selectedRouteKey);\n};\n\nreturn (\n  <>\n    <h3 className=\"m-1 p-1\">App Creator</h3>\n\n    <div className=\"row m-1 p-1\">\n      <div className=\"col-5\">\n        <div className=\"m-2\">\n          <h5 className=\"mb-2\">Name</h5>\n          <div className=\"mb-3 p-1\">\n            <input\n              type=\"text\"\n              placeholder=\"new project id\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n            />\n          </div>\n          <h5 className=\"mb-2\">Logo</h5>\n\n          <div className=\"p-1\">\n            <Widget\n              src=\"mob.near/widget/ImageEditorTabs\"\n              props={{\n                image: state.image,\n                onChange: (image) => State.update({ image }),\n              }}\n            />\n          </div>\n        </div>\n      </div>\n      <div className=\"col-7\">\n        <div className=\"m-2\">\n          <h5 className=\"mb-2\">Routes</h5>\n\n          <div className=\"d-flex flex-row gap-3 p-1\">\n            <input\n              type=\"text\"\n              placeholder=\"new page id\"\n              value={pageId}\n              onChange={(e) => setPageId(e.target.value)}\n            />\n            <input\n              type=\"text\"\n              placeholder=\"button text\"\n              value={buttonText}\n              onChange={(e) => setButtonText(e.target.value)}\n            />\n          </div>\n          <div className=\"d-flex flex-row gap-3 p-1\">\n            <input\n              type=\"text\"\n              placeholder=\"widget source path\"\n              value={routePath}\n              onChange={(e) => setRoutePath(e.target.value)}\n            />\n            <button\n              className=\"btn btn-dark\"\n              disabled={!isValid || pageId === \"\"}\n              onClick={() => {\n                const newRouteData = {\n                  path: routePath,\n                  blockHeight: \"final\",\n                  init: {\n                    name: buttonText || pageId,\n                  },\n                };\n                addRoute(pageId, newRouteData);\n              }}\n            >\n              +\n            </button>\n          </div>\n        </div>\n\n        <div>\n          {Object.keys(routes).map((key) => {\n            const route = routes[key];\n            return (\n              <div className=\"d-flex m-2 p-1 justify-content-between align-items-center\">\n                <Widget\n                  src=\"hack.near/widget/template.inline\"\n                  props={{ src: route.path }}\n                />\n                <button\n                  className=\"btn btn-outline-danger\"\n                  onClick={() => removeRoute(key)}\n                >\n                  X\n                </button>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n    <div className=\"m-2\">\n      <button\n        style={{ width: \"100%\" }}\n        className=\"btn btn-success m-1 mb-3\"\n        disabled={!context.accountId}\n        onClick={handleCreate}\n      >\n        Launch\n      </button>\n    </div>\n    <div className=\"m-2\">\n      <h5>Preview</h5>\n      <hr />\n      <div className=\"m-2\">\n        <Widget\n          src=\"hack.near/widget/Navbar.preview\"\n          props={{ routes, onRouteChange: handleRouteChange }}\n        />{\" \"}\n      </div>\n      <Widget\n        src={routes[activeRouteKey]?.path || \"hack.near/widget/page.index\"}\n        props={{ routes }}\n      />\n    </div>\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/hack.near/widget/app.create", "fact_widget_deployments_id": "d8bb1b31133cd9ee1db5354cba4973d5", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 5}