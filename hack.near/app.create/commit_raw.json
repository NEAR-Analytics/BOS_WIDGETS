{"tx_hash": "GTjEJBq8QUbTYv8prfa47c3EhuUY9GbN8wvi3Lw7fCro", "action_id_social": "HTPxbXLcpB6K88iqSsgtejwuFCxXwGm72T2p8qZxaQ9m-0-widget", "block_id": 113625215, "block_timestamp": "2024-02-26T14:56:21.790Z", "signer_id": "hack.near", "widget_name": "app.create", "source_code": "const accountId = props.accountId ?? context.accountId ?? \"hack.near\";\nconst [appId, setAppId] = useState(\"app\");\n\nconst defaultRoutes = Social.get(`${accountId}/project/${appId}/config`) ?? {\n  main: {\n    path: \"hack.near/widget/page.index\",\n    blockHeight: \"final\",\n    init: {\n      name: \"App\",\n    },\n  },\n  social: {\n    path: \"hack.near/widget/page.feed\",\n    blockHeight: \"final\",\n    init: {\n      name: \"Discussion\",\n    },\n  },\n  docs: {\n    path: \"hack.near/widget/page.docs\",\n    blockHeight: \"final\",\n    init: {\n      name: \"Guide\",\n    },\n  },\n};\n\nconst [routes, setRoutes] = useState(props.routes ?? defaultRoutes);\nconst [routePath, setRoutePath] = useState(\"\");\nconst [activeRouteKey, setActiveRouteKey] = useState(\"main\");\nconst [theme, setTheme] = useState(\"\");\nconst [pageId, setPageId] = useState(\"\");\nconst [buttonText, setButtonText] = useState(pageId);\nconst [projectId, setProjectId] = useState(\"\");\nconst [projectName, setProjectName] = useState(\"\");\n\nState.init({\n  image,\n});\n\nconst isValid = Social.get(`${routePath}/**`);\n\nconst handleCreate = () => {\n  const routesConfigObject = Object.keys(routes).reduce((obj, routeKey) => {\n    const route = routes[routeKey];\n    obj[routeKey] = {\n      path: route.path,\n      blockHeight: route.blockHeight,\n      init: route.init,\n    };\n    return obj;\n  }, {});\n\n  Social.set({\n    widget: {\n      [projectId]: {\n        \"\": Social.get(\"every.near/widget/app\"),\n      },\n    },\n    project: {\n      [projectId]: {\n        metadata: {\n          name: projectName,\n          image: state.image,\n          tags: {\n            build: \"\",\n          },\n        },\n        config: {\n          type: \"app\",\n          theme,\n          routes: routesConfigObject,\n        },\n      },\n    },\n  });\n  <textarea\n    placeholder=\" CSS\"\n    className=\"textarea m-2\"\n    value={theme}\n    onChange={(e) => setTheme(e.target.value)}\n    rows=\"4\"\n  />;\n};\n\nconst addRoute = (newRouteKey, newRouteData) => {\n  setRoutes((prevRoutes) => ({\n    ...prevRoutes,\n    [newRouteKey]: newRouteData,\n  }));\n};\n\nconst removeRoute = (routeKey) => {\n  setRoutes((prevRoutes) => {\n    const updatedRoutes = { ...prevRoutes };\n    delete updatedRoutes[routeKey];\n    return updatedRoutes;\n  });\n};\n\nconst routeData = {\n  [state.pageId]: {\n    path: [state.routePath],\n    blockHeight: \"final\",\n    init: {\n      name: [state.buttonText ?? state.pageId],\n    },\n  },\n};\n\nconst handleRouteChange = (selectedRouteKey) => {\n  setActiveRouteKey(selectedRouteKey);\n};\n\nreturn (\n  <>\n    <div className=\"row justify-content-between m-1 p-1\">\n      <div className=\"col m-2 p-2\">\n        <h3>App Creator</h3>\n        <Widget\n          src=\"mob.near/widget/N.ProfileLine\"\n          props={{ accountId: \"every.near\", hideAccountId: true }}\n        />\n      </div>\n      <div className=\"col m-2 p-2\">\n        <h5>Name</h5>\n        <input\n          type=\"text\"\n          placeholder=\"project\"\n          value={projectName}\n          onChange={(e) => setProjectName(e.target.value)}\n        />\n      </div>\n    </div>\n    <div className=\"row m-1 p-1\">\n      <div className=\"col-5\">\n        <div className=\"m-2\">\n          <h5 className=\"mb-2\">ID</h5>\n          <div className=\"mb-3 p-1\">\n            <input\n              type=\"text\"\n              placeholder=\"example\"\n              value={projectId}\n              onChange={(e) => setProjectId(e.target.value.replace(/\\s+/g, \"\"))}\n            />\n          </div>\n          <h5 className=\"mb-2\">Logo</h5>\n          <div className=\"p-1 mb-3\">\n            <Widget\n              src=\"mob.near/widget/ImageEditorTabs\"\n              props={{\n                image: state.image,\n                onChange: (image) => State.update({ image }),\n              }}\n            />\n          </div>\n          <h5 className=\"mb-2\">Theme</h5>\n          <textarea\n            placeholder=\" CSS\"\n            className=\"m-1\"\n            value={theme}\n            onChange={(e) => setTheme(e.target.value)}\n            rows=\"4\"\n          />\n        </div>\n      </div>\n      <div className=\"col-7\">\n        <div className=\"m-2\">\n          <h5 className=\"m-1\">Routes</h5>\n          <div className=\"d-flex flex-row gap-3 p-1\">\n            <input\n              type=\"text\"\n              placeholder=\"new page id\"\n              value={pageId}\n              onChange={(e) => setPageId(e.target.value)}\n            />\n            <input\n              type=\"text\"\n              placeholder=\"button text\"\n              value={buttonText}\n              onChange={(e) => setButtonText(e.target.value)}\n            />\n          </div>\n          <div className=\"d-flex flex-row gap-3 p-1\">\n            <input\n              type=\"text\"\n              placeholder=\"widget source path\"\n              value={routePath}\n              onChange={(e) => setRoutePath(e.target.value)}\n            />\n            <button\n              className=\"btn btn-dark\"\n              disabled={!isValid || pageId === \"\"}\n              onClick={() => {\n                const newRouteData = {\n                  path: routePath,\n                  blockHeight: \"final\",\n                  init: {\n                    name: buttonText || pageId,\n                  },\n                };\n                addRoute(pageId, newRouteData);\n              }}\n            >\n              +\n            </button>\n          </div>\n        </div>\n        <div>\n          {Object.keys(routes).map((key) => {\n            const route = routes[key];\n            return (\n              <div className=\"d-flex m-2 p-1 justify-content-between align-items-center\">\n                <Widget\n                  src=\"hack.near/widget/template.inline\"\n                  props={{ src: route.path, hideDescription: true }}\n                />\n                <button\n                  className=\"btn btn-outline-danger\"\n                  onClick={() => removeRoute(key)}\n                >\n                  X\n                </button>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n      <button\n        className=\"btn btn-success m-2 mb-3\"\n        disabled={!projectId ?? !context.accountId}\n        onClick={handleCreate}\n      >\n        Launch\n      </button>\n    </div>\n    <div className=\"m-2\">\n      <h5>Preview</h5>\n      <hr />\n      <div className=\"m-2\">\n        <Widget\n          src=\"hack.near/widget/Navbar.preview\"\n          props={{ routes, onRouteChange: handleRouteChange }}\n        />{\" \"}\n      </div>\n      <Widget\n        src={routes[activeRouteKey]?.path || \"hack.near/widget/page.index\"}\n        props={{ routes }}\n      />\n    </div>\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/hack.near/widget/app.create", "fact_widget_deployments_id": "1566732b6b659e71348fef139625b88e", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 6}