{"tx_hash": "9UhJ3pYCWcLunGj5qW8D9yzpUaEPpYTYmwNcLyvHEpqv", "action_id_social": "EYWzKj3X7YRoUMrVwh4ZHqETrgZqNBoGZak4iS3V7yCt-0-widget", "block_id": 99395303, "block_timestamp": "2023-08-22T12:19:35.575Z", "signer_id": "hack.near", "widget_name": "AllStars", "source_code": "const Container = styled.div`\n  .profile-image {\n    width: 120px;\n    height: 120px;\n  }\n\n  .top-right {\n    display: flex;\n    align-items: center;\n    justify-content: flex-end;\n  }\n\n  .bell-icon {\n    font-size: 28px;\n    color: #000;\n    margin-left: 8px;\n    text-decoration: none;\n    transition: color 0.3s ease-in-out;\n  }\n\n  .bell-icon:hover {\n    color: #000;\n  }\n\n  .bell-icon .bi-bell {\n    display: inline;\n  }\n\n  .bell-icon .bi-bell-fill {\n    display: none;\n  }\n\n  .bell-icon:hover .bi-bell {\n    display: none;\n  }\n\n  .bell-icon:hover .bi-bell-fill {\n    display: inline;\n  }\n\n  @media (max-width: 576px) {\n    .profile-image {\n      width: 160px;\n      height: 160px;\n    }\n  }\n`;\n\nconst thingStarCount = {};\n\nconst data = Social.keys(\"*/graph/star/widget/*/*\", \"final\");\nif (!data) {\n  return \"Loading...\";\n}\n\nconsole.log(\"Data:\", data);\n\nlet things = Object.entries(data);\nconst limit = 888;\n\nconsole.log(\"Things:\", things);\n\nfor (let i = 0; i < things.length; ++i) {\n  let accountId = things[i][0];\n\n  Object.keys(things[i][1].graph.star.widget).forEach((creatorId) => {\n    Object.keys(things[i][1].graph.star.widget[creatorId]).forEach(\n      (thingName) => {\n        let stars = Social.keys(\n          `*/graph/star/widget/${creatorId}/${thingName}`,\n          \"final\",\n          {\n            return_type: \"BlockHeight\",\n            values_only: true,\n          }\n        );\n\n        console.log(\"Builder:\", creatorId);\n        console.log(\"Thing:\", thingName);\n        console.log(\"Stars:\", stars);\n\n        if (stars) {\n          const thingPath = `${creatorId}/widget/${thingName}`;\n\n          if (thingPath in thingStarCount) {\n            // Increment the star count if the path already exists\n            thingStarCount[thingPath]++;\n          } else {\n            // Initialize the star count if the path is new\n            thingStarCount[thingPath] = 1;\n          }\n        }\n      }\n    );\n  });\n}\n\nconst limitedStarSort = Object.entries(thingStarCount)\n  .sort((a, b) => b[1] - a[1])\n  .slice(0, limit);\n\nconsole.log(limitedStarSort);\n\nconst starButton = ({ thingPath }) => {\n  return (\n    <div>\n      <a\n        className=\"btn btn-outline-primary m-1\"\n        href={`#/near/widget/ComponentDetailsPage?src=${thingPath}`}\n      >\n        View Code\n      </a>{\" \"}\n      <Widget src=\"hack.near/widget/star.button\" props={{ thingPath }} />\n    </div>\n  );\n};\n\nreturn (\n  <Container>\n    <div className=\"d-flex flex-wrap align-items-center\">\n      <div className=\"m-3\">\n        <h3>\n          <b>All Stars</b> <i className=\"bi bi-bookmark-star\"></i>\n        </h3>\n      </div>\n      <div className=\"ms-auto me-0 me-md-2 d-flex align-items-center\">\n        <div className=\"top-right\">\n          <a\n            href=\"#/hack.near/widget/star.notification\"\n            className=\"bell-icon me-2\"\n          >\n            <i className=\"bi bi-bell\"></i>\n            <i className=\"bi bi-bell-fill\"></i>\n          </a>\n\n          <a href=\"#/hack.near/widget/GitBos\" className=\"text-muted m-2\">\n            <Widget\n              src=\"mob.near/widget/ProfileImage\"\n              props={{ accountId: \"academy.near\" }}\n              className=\"profile-image\"\n            />\n          </a>\n        </div>\n      </div>\n    </div>\n    <div className=\"m-3\">\n      <Widget\n        src=\"near/widget/AccountProfile\"\n        props={{ accountId: \"build.sputnik-dao.near\" }}\n      />\n    </div>\n    <div className=\"m-4\">\n      <h5>Explore Projects</h5>\n      <Widget\n        src=\"hack.near/widget/widget.search\"\n        props={{ extraButtons: starButton }}\n      />\n    </div>\n    {limitedStarSort.map((rank, index) => {\n      let thingPath = rank[0];\n      let starCount = rank[1];\n      return (\n        <div className=\"m-3\">\n          <Widget\n            src=\"hack.near/widget/widget.inline\"\n            props={{ widgetPath: thingPath, starCount }}\n          />\n        </div>\n      );\n    })}\n    <br />\n    <Widget src=\"hack.near/widget/dev.Badge\" />\n    <br />\n  </Container>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/hack.near/widget/AllStars", "fact_widget_deployments_id": "16ac1c42a8372023819e6dd3c4f5c4e9", "inserted_timestamp": "2023-08-22T14:22:26.613Z", "modified_timestamp": "2023-08-22T14:22:26.613Z", "__row_index": 0}