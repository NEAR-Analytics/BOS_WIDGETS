{"tx_hash": "2HG3zyWKyV3izhKJjyzuWpDpatJM7RYVCJQgqS1J3v7r", "action_id_social": "CJJLwC4dKR23VpmksSzRVCFAhtjZxAtph7xjvswWtc8H-0-widget", "block_id": 100821701, "block_timestamp": "2023-09-10T16:31:48.865Z", "signer_id": "hack.near", "widget_name": "group.create", "source_code": "const creatorId = props.creatorId ?? context.accountId;\n\nconst daos = Near.view(\"sputnik-dao.near\", \"get_dao_list\");\n\nif (daos === null) {\n  return \"Loading...\";\n}\n\nconst { handleClose } = props;\n\nconst policy = Near.view(creatorId, \"get_policy\");\n\nif (policy === null) {\n  return \"Loading...\";\n}\n\nconst deposit = policy.proposal_bond;\n\nconst groups = Social.get(`${creatorId}/thing/directory`);\n\nconst groupsArray = JSON.parse(groups);\n\nfunction generateUID() {\n  return (\n    Math.random().toString(16).slice(2) +\n    Date.now().toString(36) +\n    Math.random().toString(16).slice(2)\n  );\n}\n\nconst groupId = props.groupId ?? generateUID();\n\nconst groupMembers = Social.get(`${creatorId}/graph/${groupId}`);\n\nState.init({\n  group,\n  members: { [creatorId]: \"\" },\n  newMember: \"\",\n  isDao: false,\n});\n\nfunction addMember(newMember) {\n  State.update({\n    members: { ...state.members, [newMember]: \"\" },\n  });\n}\n\nfunction removeMember(memberKey) {\n  const updatedMembers = { ...state.members };\n  delete updatedMembers[memberKey];\n\n  State.update({\n    members: updatedMembers,\n  });\n}\n\nfunction isNearAddress(address) {\n  if (typeof address !== \"string\") {\n    return false;\n  }\n  if (!address.endsWith(\".near\")) {\n    return false;\n  }\n  const parts = address.split(\".\");\n  if (parts.length !== 2) {\n    return false;\n  }\n  if (parts[0].length < 2 || parts[0].length > 32) {\n    return false;\n  }\n  if (!/^[a-z0-9_-]+$/i.test(parts[0])) {\n    return false;\n  }\n  return true;\n}\n\nconst memberId = props.memberId ?? state.newMember;\n\nconst isValid = isNearAddress(memberId);\n\nconst checkAddress = (daos) => {\n  if (daos.indexOf(creatorId) !== -1) {\n    return State.update({ isDao: true });\n  }\n};\n\nconst widgets = {\n  style: \"hack.near/widget/NDC.StyledComponents\",\n};\n\nconst CardStyled = styled.div`\n  width: 100%;\n  height: 100%;\n  background: #f8f8f9;\n  gap: 10px;\n  padding: 25px;\n  margin: 0 auto;\n  border-radius: 10px;\n  overflow-y: scroll;\n`;\n\nconst CardForm = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: auto;\n`;\n\nconst H1 = styled.h1`\n  margin-bottom: 10px;\n  font-style: normal;\n  font-weight: 555;\n  font-size: 23px;\n`;\n\nconst Submitcontainer = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  gap: 8px;\n  margin-bottom: 16px;\n  @media only screen and (max-width: 480px) {\n    margin-top: 10px;\n  }\n`;\n\nconst Modal = styled.div`\n  position: fixed;\n  z-index: 1;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: rgba(0, 0, 0, 0.7);\n`;\n\nconst ComponentWrapper = styled.div`\n  display: flex;\n  width: 80%;\n  height: 80%;\n  flex-direction: column;\n  align-items: flex-start;\n  border-radius: 10px;\n  background: #fff;\n  border: 1px solid transparent;\n  margin: 140px auto auto auto;\n  @media only screen and (max-width: 480px) {\n    width: 90%;\n  }\n`;\n\nconst Hr = styled.div`\n  height: 1px;\n  margin: 15px 0;\n  width: 100%;\n  background: rgba(208, 214, 217, 0.4);\n`;\n\nconst Section = styled.div`\n  margin: 12px 0;\n`;\n\nconst handleCreate = () => {\n  const groupId = uuid();\n\n  Social.set({\n    thing: {\n      [groupId]: {\n        \"\": JSON.stringify(...state.group),\n        metadata: {\n          name: \"TODO\",\n          descirption: \"TODO\",\n          image: \"TODO\",\n          backgroundImage: \"TOOD\",\n        },\n      },\n    },\n    graph: {\n      [groupId]: {\n        ...state.members,\n      },\n    },\n    index: {\n      thing: JSON.stringify({\n        key: groupId,\n        value: {\n          type: \"group\",\n        },\n      }),\n      every: JSON.stringify({\n        key: \"group\",\n        value: {\n          id: groupId,\n        },\n      }),\n      graph: JSON.stringify(\n        Object.keys(state.members).map((account) => ({\n          key: groupId,\n          value: {\n            type: \"add\",\n            accountId: account,\n          },\n        }))\n      ),\n      notify: JSON.stringify(\n        Object.keys(state.members).map((account) => ({\n          key: account,\n          value: {\n            type: \"add\",\n            message: \"added to group\",\n          },\n        }))\n      ),\n    },\n  });\n};\n\nreturn (\n  <Modal>\n    <ComponentWrapper>\n      <CardStyled name=\"create\">\n        <div className=\"d-flex flex-column\">\n          <CardForm>\n            <div className=\"d-flex justify-content-between align-items-center\">\n              <H1>New Group</H1>\n              <Submitcontainer>\n                <button\n                  onClick={handleClose}\n                  className=\"btn btn-secondary me-1\"\n                >\n                  Exit\n                </button>\n                <button onClick={handleCreate} className=\"btn btn-success me-1\">\n                  Create\n                </button>\n              </Submitcontainer>\n            </div>\n            <Hr />\n            <div className=\"row\">\n              <div className=\"col-lg-6 mt-2\">\n                <h5 className=\"mb-3\">Details</h5>\n                <div className=\"mb-2 mt-3\">\n                  <Widget\n                    src=\"near/widget/MetadataEditor\"\n                    props={{\n                      initialMetadata: group,\n                      onChange: (group) => State.update({ group }),\n                      options: {\n                        name: { label: \"Name\" },\n                        image: { label: \"Logo\" },\n                        description: { label: \"About\" },\n                        tags: {\n                          label: \"Tags\",\n                          tagsPattern: `*/${groupId}/tags/*`,\n                          placeholder:\n                            \"art, gov, edu, dev, com, nft, ai, social\",\n                        },\n                        linktree: {\n                          links: [\n                            {\n                              label: \"Twitter\",\n                              prefix: \"https://twitter.com/\",\n                              name: \"twitter\",\n                            },\n                            {\n                              label: \"Github\",\n                              prefix: \"https://github.com/\",\n                              name: \"github\",\n                            },\n                            {\n                              label: \"Telegram\",\n                              prefix: \"https://t.me/\",\n                              name: \"telegram\",\n                            },\n                            {\n                              label: \"Website\",\n                              prefix: \"https://\",\n                              name: \"website\",\n                            },\n                          ],\n                        },\n                      },\n                    }}\n                  />\n                </div>\n              </div>\n              <div className=\"col-lg-6 mt-2\">\n                <h5 className=\"mb-3\">Members</h5>\n                <div className=\"mb-2 mt-3\">\n                  Account ID\n                  <input\n                    label=\"input each member's account ID here, then click `add` below\"\n                    placeholder=\"<example>.near\"\n                    onChange={(e) =>\n                      State.update({ newMember: e.target.value })\n                    }\n                  />\n                  <div className=\"d-flex align-items-center mt-2\">\n                    <button\n                      className=\"btn btn-primary m-2\"\n                      onClick={() => addMember(state.newMember)}\n                    >\n                      add\n                    </button>\n                  </div>\n                </div>\n                <hr />\n                <div>\n                  <h5>Preview</h5>\n                  {Object.keys(state.members).map((a) => {\n                    return (\n                      <div className=\"d-flex m-2 p-2 justify-content-between align-items-center\">\n                        <div className=\"d-flex align-items-center\">\n                          <Widget\n                            src=\"mob.near/widget/Profile\"\n                            props={{ accountId: a }}\n                          />\n                        </div>\n                        <button\n                          className=\"btn btn-danger m-1\"\n                          onClick={() => removeMember(a)}\n                        >\n                          remove\n                        </button>\n                      </div>\n                    );\n                  })}\n                </div>\n              </div>\n            </div>\n          </CardForm>\n        </div>\n      </CardStyled>\n    </ComponentWrapper>\n  </Modal>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/hack.near/widget/group.create", "fact_widget_deployments_id": "149de2495a6ab8bfaa767ae761c4880c", "inserted_timestamp": "2023-09-10T18:30:59.616Z", "modified_timestamp": "2023-09-10T18:30:59.616Z", "__row_index": 7}