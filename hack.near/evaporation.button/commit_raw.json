{"tx_hash": "5oZ37CvJ228rusxXPbLa6SpUZPzNMFqsW2vTCDKYjGEj", "action_id_social": "HKkBMtmjTTXnRFRKLWV73hudLjX5gmQPQjekJkdU9su9-0-widget", "block_id": 113806150, "block_timestamp": "2024-02-29T08:09:09.694Z", "signer_id": "hack.near", "widget_name": "evaporation.button", "source_code": "const initialSunsetTimestamp = 1709199888 * 1000;\nconst accountId = props.accountId ?? context.accountId ?? \"hack.near\";\nconst gameId = props.gameId ?? \"evaporation\";\nconst appId = props.appId ?? \"test\";\nconst clicks = Social.index(appId, `${accountId}-${gameId}`, {\n  limit: 100,\n  order: \"desc\",\n});\n\nconst [sunset, setSunset] = useState(new Date(initialSunsetTimestamp));\n\nconst totalAddedTime = (clicks ? Object.keys(clicks).length : 0) * 5 * 60000;\n\nconst addMoreTime = () => {\n  Social.set(\n    {\n      index: {\n        [appId]: JSON.stringify({\n          key: `${accountId}-${gameId}`,\n          value: { type: \"click\" },\n        }),\n      },\n    },\n    {\n      force: true,\n    }\n  );\n};\n\nconst now = new Date();\nconst evaporated = now > sunset + totalAddedTime;\n\nconst remainingTime = sunset.getTime() + totalAddedTime - now.getTime();\nconst remainingMinutes = Math.max(Math.floor(remainingTime / (1000 * 60)), 0);\n\nreturn (\n  <div>\n    {!evaporated ? (\n      <>\n        <p>{remainingMinutes} minutes left...</p>\n        <button onClick={addMoreTime} className=\"btn btn-primary\">\n          add time\n        </button>\n      </>\n    ) : (\n      <p>The sun has set... \ud83c\udf07</p>\n    )}\n    <div className=\"mt-3\">\n      <p>{clicks && Object.keys(clicks).length} clicks</p>\n    </div>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/hack.near/widget/evaporation.button", "fact_widget_deployments_id": "152f0853f879b5234482a02150c6744f", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 2}