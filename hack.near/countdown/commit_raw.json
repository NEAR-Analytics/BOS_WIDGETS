{"tx_hash": "82RYEuPM4hHMYNTtCS6tUoze7NCLVm8f6Dt1FdBGaHCY", "action_id_social": "BUnPgnMB1mXestadKPxCBnMubearyMHW2ogqpfN5sbHz-0-widget", "block_id": 109026159, "block_timestamp": "2023-12-28T19:01:11.581Z", "signer_id": "hack.near", "widget_name": "countdown", "source_code": "const { startTime, endTime, type } = props;\n\nState.init({\n  days: \"-\",\n  hours: \"-\",\n  minutes: \"-\",\n  seconds: \"-\",\n  title: \"\",\n});\n\nconst formatTime = (time) => (time < 10 ? `0${time}` : time);\n\nconst timer = setInterval(() => {\n  const now = new Date().getTime();\n  const start = new Date(parseInt(startTime)).getTime();\n  const end = new Date(parseInt(endTime)).getTime();\n  let title = \"\";\n\n  const diff = new Date(parseInt(end)).getTime() - new Date().getTime();\n  let days = Math.floor(diff / (1000 * 60 * 60 * 24));\n  let hours = Math.floor((diff % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n  let minutes = Math.floor((diff % (1000 * 60 * 60)) / (1000 * 60));\n  let seconds = Math.floor((diff % (1000 * 60)) / 1000);\n\n  if (now < start)\n    title = (\n      <>\n        Time before <br /> {type} starts\n      </>\n    );\n  else if (now > start && now < end)\n    title = (\n      <>\n        Time remaining in <br /> current {type}\n      </>\n    );\n  else {\n    title = <>{type} is ended</>;\n    days = 0;\n    hours = 0;\n    minutes = 0;\n    seconds = 0;\n  }\n  console.log([days, hours, minutes, seconds, title]);\n  State.update({\n    days: days,\n    hours: hours,\n    minutes: minutes,\n    seconds: seconds,\n    title: title,\n  });\n\n  clearInterval(timer);\n}, 1000);\n\nconst Logo = styled.img`\n    width: 60px;\n    margin: 0 20px 0 10px;\n`;\n\nconst H1 = styled.h1`\n  font-size: 40px;\n  font-weight: 500;\n  margin-bottom: 0;\n`;\n\nconst H6 = styled.h6`\n  font-size: 12px;\n  font-weight: 300;\n  margin-right: 32px;\n  margin-bottom: 0;\n  line-height: 1.5;\n  align-items: center;\n  letter-spacing: 0.16em;\n  text-transform: uppercase;\n`;\n\nconst Timer = styled.div`\n  .time {\n    font-size: 48px;\n    font-weight: 800;\n    color: #61d037;\n    width: 100px;\n    line-height: 1;\n  }\n  small {\n    margin-bottom: 0;\n    align-items: center;\n  }\n`;\n\nconst TimerContainer = styled.div`\n  .time {\n    font-size: 48px;\n    font-weight: 700;\n    color: #61d037;\n    width: 100px;\n    line-height: 1;\n  }\n  small {\n    margin-bottom: 0;\n    align-items: center;\n  }\n`;\n\nconst SmallTimerContainer = styled.div`\n  background: #61d037;\n\n  .time {\n    font-size: 36px;\n    font-weight: 700;\n    color: #000;\n    width: 70px;\n    line-height: 1;\n  }\n  small {\n    margin-bottom: 0;\n    align-items: center;\n    color: grey;\n  }\n`;\n\nconst TimerContent = () => {\n  const TimeSlot = ({ time, title }) => (\n    <div>\n      <div className=\"time\">{formatTime(time)}</div>\n      <small>{title}</small>\n    </div>\n  );\n\n  return (\n    <>\n      <Timer className=\"d-flex\">\n        <TimeSlot title=\"days\" time={state.days} />\n        <TimeSlot title=\"hours\" time={state.hours} />\n        <TimeSlot title=\"minutes\" time={state.minutes} />\n        <TimeSlot title=\"seconds\" time={state.seconds} />\n      </Timer>\n    </>\n  );\n};\n\nreturn (\n  <>\n    <div className=\"p-4 bg-black text-white d-none d-lg-flex rounded justify-content-between align-items-center\">\n      <TimerContainer className=\"d-flex align-items-center\">\n        <TimerContent />\n      </TimerContainer>\n    </div>\n    <div className=\"d-md-flex row d-lg-none d-xl-none rounded bg-black\">\n      <SmallTimerContainer className=\"d-flex p-3 align-items-center rounded-bottom justify-content-between\">\n        <TimerContent />\n      </SmallTimerContainer>\n    </div>\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/hack.near/widget/countdown", "fact_widget_deployments_id": "6ed5cbc13bb5d51f0f5741f28034f967", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}