{"tx_hash": "Lic2P8NtoiAzrv18ToAwwkx783kbSpbVywmhxMfZVWR", "action_id_social": "6YussjBWucU9q58YXYP1n2ZaN3fDNeZoFX6d7oRC72MQ-0-widget", "block_id": 113842192, "block_timestamp": "2024-02-29T21:45:43.209Z", "signer_id": "hack.near", "widget_name": "events.app.create", "source_code": "const { Button } = VM.require(\"buildhub.near/widget/components\");\nconst accountId = props.accountId ?? context.accountId ?? \"hack.near\";\nconst [appId, setAppId] = useState(\"events\");\nconst imageUrl =\n  props.imageUrl ??\n  JSON.stringify(state.image.url) ??\n  \"https://builders.mypinata.cloud/ipfs/QmQmKGGJXhkhGrTbE4MgJ3G1wUUu8eo7mNKwRSCB5tihCw\";\n\nconst defaultRoutes = Social.get(`${accountId}/project/${appId}/config`) ?? {\n  main: {\n    path: \"hack.near/widget/events.view\",\n    blockHeight: \"final\",\n    init: {\n      name: \"Events\",\n    },\n  },\n  about: {\n    path: \"hack.near/widget/page.about\",\n    blockHeight: \"final\",\n    init: {\n      name: \"About\",\n    },\n  },\n  social: {\n    path: \"hack.near/widget/page.feed\",\n    blockHeight: \"final\",\n    init: {\n      name: \"Discussion\",\n    },\n  },\n};\n\nconst [routes, setRoutes] = useState(props.routes ?? defaultRoutes);\nconst [routePath, setRoutePath] = useState(\"\");\nconst [activeRouteKey, setActiveRouteKey] = useState(\"main\");\nconst [theme, setTheme] = useState(\"\");\nconst [pageId, setPageId] = useState(\"\");\nconst [buttonText, setButtonText] = useState(pageId);\nconst [projectId, setProjectId] = useState(\"\");\nconst [projectName, setProjectName] = useState(\"\");\nconst [twitter, setTwitter] = useState(\"\");\nconst [github, setGitHub] = useState(\"\");\nconst [telegram, setTelegram] = useState(\"\");\n\nState.init({\n  image,\n});\n\nconst isValid = Social.get(`${routePath}/**`);\n\nconst handleCreate = () => {\n  const routesConfigObject = Object.keys(routes).reduce((obj, routeKey) => {\n    const route = routes[routeKey];\n    obj[routeKey] = {\n      path: route.path,\n      blockHeight: route.blockHeight,\n      init: route.init,\n    };\n    return obj;\n  }, {});\n\n  Social.set({\n    project: {\n      [projectId]: {\n        metadata: {\n          name: projectName,\n          image: state.image,\n          tags: {\n            build: \"\",\n          },\n        },\n        config: {\n          type: \"app\",\n          theme,\n          routes: routesConfigObject,\n        },\n      },\n    },\n  });\n  <textarea\n    placeholder=\" CSS\"\n    className=\"textarea m-2\"\n    value={theme}\n    onChange={(e) => setTheme(e.target.value)}\n    rows=\"4\"\n  />;\n};\n\nconst addRoute = (newRouteKey, newRouteData) => {\n  setRoutes((prevRoutes) => ({\n    ...prevRoutes,\n    [newRouteKey]: newRouteData,\n  }));\n};\n\nconst removeRoute = (routeKey) => {\n  setRoutes((prevRoutes) => {\n    const updatedRoutes = { ...prevRoutes };\n    delete updatedRoutes[routeKey];\n    return updatedRoutes;\n  });\n};\n\nconst routeData = {\n  [state.pageId]: {\n    path: [state.routePath],\n    blockHeight: \"final\",\n    init: {\n      name: [state.buttonText ?? state.pageId],\n    },\n  },\n};\n\nconst handleRouteChange = (selectedRouteKey) => {\n  setActiveRouteKey(selectedRouteKey);\n};\n\nconst Container = styled.div`\n  width: 100%;\n  position: relative;\n\n  padding: 9.375rem 3rem;\n\n  @media screen and (max-width: 768px) {\n    padding: 9.375rem 1.5rem;\n  }\n`;\n\nconst Logo = styled.img`\nheight: 55px;\n  object-fit: cover;\n  margin: 8px;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 1rem;\n\n  margin: 0 auto;\n`;\n\nreturn (\n  <>\n    <div className=\"row justify-content-between m-2 p-1\">\n      <div className=\"col m-1 p-1\">\n        <h4>\n          <b>Events App Creator</b>\n        </h4>\n        <button\n          className=\"btn btn-success btn-sm m-1\"\n          disabled={!projectId ?? !context.accountId}\n          onClick={handleCreate}\n        >\n          Launch\n        </button>\n      </div>\n      <div className=\"col m-1 p-1\">\n        <h4>Name</h4>\n        <input\n          type=\"text\"\n          placeholder=\"project\"\n          value={projectName}\n          onChange={(e) => setProjectName(e.target.value)}\n        />\n      </div>\n    </div>\n    <div className=\"row m-1 p-1\">\n      <div className=\"col-5\">\n        <div className=\"m-2\">\n          <h5 className=\"mb-2\">ID</h5>\n          <div className=\"mb-2 p-1\">\n            <input\n              type=\"text\"\n              placeholder=\"example\"\n              value={projectId}\n              onChange={(e) => setProjectId(e.target.value.replace(/\\s+/g, \"\"))}\n            />\n          </div>\n          <h5 className=\"mb-2\">Logo</h5>\n          <div className=\"p-1 mb-3\">\n            <Widget\n              src=\"mob.near/widget/ImageEditorTabs\"\n              props={{\n                image: state.image,\n                onChange: (image) => State.update({ image }),\n              }}\n            />\n          </div>\n          <h5 className=\"mb-2\">Theme</h5>\n          <textarea\n            placeholder=\" CSS\"\n            className=\"m-1\"\n            value={theme}\n            onChange={(e) => setTheme(e.target.value)}\n            rows=\"5\"\n          />\n        </div>\n      </div>\n      <div className=\"col-7\">\n        <div className=\"m-2\">\n          <h5 className=\"m-1\">Routes</h5>\n          <div className=\"d-flex flex-row gap-3 p-1\">\n            <input\n              type=\"text\"\n              placeholder=\"new page id\"\n              value={pageId}\n              onChange={(e) => setPageId(e.target.value)}\n            />\n            <input\n              type=\"text\"\n              placeholder=\"button text\"\n              value={buttonText}\n              onChange={(e) => setButtonText(e.target.value)}\n            />\n          </div>\n          <div className=\"d-flex flex-row gap-3 p-1\">\n            <input\n              type=\"text\"\n              placeholder=\"widget source path\"\n              value={routePath}\n              onChange={(e) => setRoutePath(e.target.value)}\n            />\n            <button\n              className=\"btn btn-dark\"\n              disabled={!isValid || pageId === \"\"}\n              onClick={() => {\n                const newRouteData = {\n                  path: routePath,\n                  blockHeight: \"final\",\n                  init: {\n                    name: buttonText || pageId,\n                  },\n                };\n                addRoute(pageId, newRouteData);\n              }}\n            >\n              +\n            </button>\n          </div>\n        </div>\n        <div>\n          {Object.keys(routes).map((key) => {\n            const route = routes[key];\n            return (\n              <div className=\"d-flex m-2 p-1 justify-content-between align-items-center\">\n                <Widget\n                  src=\"hack.near/widget/template.inline\"\n                  props={{ src: route.path, hideDescription: true }}\n                />\n                <button\n                  className=\"btn btn-outline-danger\"\n                  onClick={() => removeRoute(key)}\n                >\n                  X\n                </button>\n              </div>\n            );\n          })}\n        </div>\n        <div className=\"m-2 mt-3\">\n          <h5 className=\"m-1\">Links</h5>\n          <div className=\"gap-3 p-1\">\n            <input\n              type=\"text\"\n              placeholder=\"Twitter\"\n              value={twitter}\n              onChange={(e) => setTwitter(e.target.value)}\n            />\n          </div>\n          <div className=\"gap-3 p-1\">\n            <input\n              type=\"text\"\n              placeholder=\"GitHub\"\n              value={github}\n              onChange={(e) => setGitHub(e.target.value)}\n            />\n          </div>\n          <div className=\"gap-3 p-1\">\n            <input\n              type=\"text\"\n              placeholder=\"Telegram\"\n              value={telegram}\n              onChange={(e) => setTelegram(e.target.value)}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n    <div className=\"m-3\">\n      <h4>Preview</h4>\n      <hr />\n      <Widget\n        src=\"hack.near/widget/events.app\"\n        props={{ routes, twitter, github, telegram }}\n      />\n    </div>\n  </>\n);\n", "metadata": {"fork_of": "buildhub.near/widget/events.Calendar@113012972"}, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/hack.near/widget/events.app.create", "fact_widget_deployments_id": "8f5184ba8f1996b43dd8c6e14b74302e", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}