{"tx_hash": "9jZ5Uss5dkVCsSsFnu8UpN1HNa1dKBTnTz5hCcY9wo6w", "action_id_social": "HCBzsD4wGJ5Cur1UwDEjsq44ikTSZGqrpSLv9TWBZbVH-0-widget", "block_id": 100309970, "block_timestamp": "2023-09-03T15:13:16.258Z", "signer_id": "hack.near", "widget_name": "group.editor", "source_code": "const creatorId = props.creatorId || \"james.near\";\n\nconst groupId = props.groupId || \"6fd36ddf4884flm20pbe91e7b208b88d16\";\n\nconst initMembers = Social.get(`${creatorId}/thing/${groupId}/members/*`);\n\nState.init({\n  group,\n  members: initMembers,\n  newMember: \"\",\n});\n\nfunction addMember(newMember) {\n  State.update({\n    members: { ...state.members, [newMember]: \"\" },\n  });\n}\n\nfunction removeMember(memberKey) {\n  const updatedMembers = { ...state.members };\n  delete updatedMembers[memberKey];\n\n  State.update({\n    members: updatedMembers,\n  });\n}\n\nfunction isNearAddress(address) {\n  if (typeof address !== \"string\") {\n    return false;\n  }\n  if (!address.endsWith(\".near\")) {\n    return false;\n  }\n  const parts = address.split(\".\");\n  if (parts.length !== 2) {\n    return false;\n  }\n  if (parts[0].length < 2 || parts[0].length > 32) {\n    return false;\n  }\n  if (!/^[a-z0-9_-]+$/i.test(parts[0])) {\n    return false;\n  }\n  return true;\n}\n\nconst memberId = props.memberId || state.newMember;\n\nconst isValid = isNearAddress(memberId);\n\nconst handleCreate = () => {\n  let Group_Payload = {\n    contractName: \"social.near\",\n    methodName: \"set\",\n    args: {\n      data: {\n        [creatorId]: {\n          thing: {\n            [groupId]: {\n              ...state.group,\n              members: { ...state.members },\n            },\n          },\n          graph: {\n            [groupId]: {\n              ...state.members,\n            },\n          },\n        },\n      },\n    },\n    gas: 300000000000000,\n    deposit: 100000000000000000000000,\n  };\n\n  Near.call(Group_Payload).then(() => handleClose());\n};\n\nreturn (\n  <>\n    <div className=\"row\">\n      <div className=\"col-lg-6\">\n        <h5>Edit Group</h5>\n        <>\n          <div className=\"mt-2\">\n            <Widget src=\"hack.near/widget/group.card\" props={{ groupId }} />\n          </div>\n          <div className=\"mt-3\">\n            <button className=\"btn btn-success me-2\" onClick={handleCreate}>\n              update\n            </button>\n            <button\n              className=\"btn btn-secondary me-2\"\n              href={`/hack.near/widget/group?groupId=${groupId}`}\n            >\n              view\n            </button>\n          </div>\n        </>\n        <div className=\"mb-2 mt-3\">\n          <Widget\n            src=\"near/widget/MetadataEditor\"\n            props={{\n              initialMetadata: group,\n              onChange: (group) => State.update({ group }),\n              options: {\n                name: { label: \"Name\" },\n                image: { label: \"Logo\" },\n                description: { label: \"About\" },\n                tags: {\n                  label: \"Tags\",\n                  tagsPattern: `*/${groupId}/tags/*`,\n                  placeholder: \"art, gov, edu, dev, com, nft, ai, social\",\n                },\n                linktree: {\n                  links: [\n                    {\n                      label: \"Twitter\",\n                      prefix: \"https://twitter.com/\",\n                      name: \"twitter\",\n                    },\n                    {\n                      label: \"Github\",\n                      prefix: \"https://github.com/\",\n                      name: \"github\",\n                    },\n                    {\n                      label: \"Telegram\",\n                      prefix: \"https://t.me/\",\n                      name: \"telegram\",\n                    },\n                    {\n                      label: \"Website\",\n                      prefix: \"https://\",\n                      name: \"website\",\n                    },\n                  ],\n                },\n              },\n            }}\n          />\n        </div>\n      </div>\n      <div className=\"col-lg-6\">\n        <>\n          <div>\n            <h5>Account ID</h5>\n            <input\n              placeholder=\"<example>.near\"\n              onChange={(e) => State.update({ newMember: e.target.value })}\n            />\n            <div className=\"d-flex align-items-center mt-2\">\n              <button\n                className=\"btn btn-primary mt-2\"\n                onClick={() => addMember(state.newMember)}\n              >\n                add\n              </button>\n            </div>\n          </div>\n          <hr />\n          <div>\n            <h5>Members</h5>\n            {Object.keys(state.members).map((a) => {\n              return (\n                <div className=\"d-flex m-2 p-2 justify-content-between align-items-center\">\n                  <div className=\"d-flex align-items-center\">\n                    <Widget\n                      src=\"mob.near/widget/Profile\"\n                      props={{ accountId: a }}\n                    />\n                  </div>\n                  <button\n                    className=\"btn btn-danger m-1\"\n                    disabled={!isNearAddress(a)}\n                    onClick={() => removeMember(a)}\n                  >\n                    remove\n                  </button>\n                </div>\n              );\n            })}\n          </div>\n        </>\n      </div>\n    </div>\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/hack.near/widget/group.editor", "fact_widget_deployments_id": "3b2e3377c8cd280d729817e757010e91", "inserted_timestamp": "2023-09-03T17:20:36.302Z", "modified_timestamp": "2023-09-03T17:20:36.302Z", "__row_index": 3}