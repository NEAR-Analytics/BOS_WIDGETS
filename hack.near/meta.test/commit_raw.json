{"tx_hash": "Bz8cZHjNrgTFPfPwxckbzdbnt3DkiFzCC5ot28tavWvi", "action_id_social": "CoZShLi3WkNuqf1DrxsE93eUbdHWuzXiv6ucFyb9cxLG-0-widget", "block_id": 107104458, "block_timestamp": "2023-12-04T01:18:07.697Z", "signer_id": "hack.near", "widget_name": "meta.test", "source_code": "// adapted from the `PublicTags` widget by zavodil.near\n\nconst accountId = props.accountId ?? context.accountId;\n\nconst creatorId = props.creatorId ?? \"mob.near\";\nconst namespace = props.namespace ?? \"widget\";\nconst thingId = props.thingId ?? \"Explorer\";\n\nconst initialPath = props.path ?? `${creatorId}/${namespace}/${thingId}`;\n\nconst tagsPattern = `*/graph/context/${creatorId}/${namespace}/${thingId}/tags/*`;\nconst tagsObject = Social.get(tagsPattern, \"final\");\n\nif (!tagsObject) {\n  return \"\";\n}\n\nState.init({\n  showEditor: false,\n  path: initialPath,\n  tags: tagsObject,\n});\n\nconst publicTags = Social.getr(\n  `*/graph/context/${state.path}/tags/**`,\n  \"final\"\n);\n\nconst pattern = `*/graph/context/*/*/*/tags/*`;\n\nconst tagClass = \"bg-success\";\nconst badgeBtnClass = \"text-white btn p-0 lh-1 m-1\";\nconst addPublicTagHtml = (\n  <a\n    href={`#/hack.near/widget/catalog?accountId=${accountId}`}\n    className={badgeBtnClass}\n  >\n    <div className={`me-1 mt-3 badge bg-primary`}>+ Tag</div>\n  </a>\n);\n\nif (tagsObject === null) {\n  return \"Loading...\";\n}\n\nconst tagsCount = {};\nconst tagsAuthors = {};\n\nconst processTagsObject = (obj) => {\n  Object.entries(obj).forEach((kv) => {\n    if (kv[1] === null) {\n      const tag = kv[0];\n      tagsCount[tag] = (tagsCount[tag] || 0) - 1;\n    } else if (typeof kv[1] === \"object\") {\n      processTagsObject(kv[1]);\n    } else {\n      const tag = kv[0];\n      tagsCount[tag] = (tagsCount[tag] || 0) + 1;\n    }\n  });\n};\n\nconst getTags = () => {\n  processTagsObject(tagsObject);\n  const tags = Object.entries(tagsCount);\n  tags.sort((a, b) => b[1] - a[1]);\n  return tags.map((t) => {\n    return {\n      name: t[0],\n      count: t[1],\n      title: t[1] + (t[1] > 1 ? \" votes\" : \" vote\"),\n    };\n  });\n};\n\nconst tags = getTags();\n\nreturn (\n  <>\n    {tags &&\n      tags.map((tag) => (\n        <a\n          href={`/#/hack.near/widget/every.context?tag=${tag.name}`}\n          className={badgeBtnClass}\n        >\n          <span\n            className={`badge ${tagClass} position-relative`}\n            title={tag.title}\n            style={\n              tag.count > 1\n                ? {\n                    marginRight: \"0.9em\",\n                    paddingRight: \"0.85em\",\n                  }\n                : { marginRight: \"0.25em\" }\n            }\n          >\n            #{tag.name}\n            {tag.count > 1 && (\n              <span\n                className={`ms-1 badge translate-middle rounded-pill bg-dark position-absolute top-50 start-100`}\n              >\n                {tag.count}\n              </span>\n            )}\n          </span>\n        </a>\n      ))}\n    <div className=\"m-2\">\n      {!state.showEditor ? (\n        <button\n          onClick={() => State.update({ showEditor: true })}\n          className={badgeBtnClass}\n        >\n          <div className={`me-1 mt-3 badge bg-primary`}>+ attestation</div>\n        </button>\n      ) : (\n        <div className=\"mb-2\">\n          <button\n            onClick={() => State.update({ showEditor: false })}\n            className=\"text-white btn p-0 lh-1 m-1\"\n          >\n            <div className={`me-1 mt-3 badge bg-secondary`}>x close</div>\n          </button>\n        </div>\n      )}\n      {state.showEditor && (\n        <div>\n          <div className=\"row\">\n            <div className=\"m-1 col-8\">\n              <Widget\n                src={\"hack.near/widget/MetadataEditor\"}\n                props={{\n                  initialMetadata: tagsObject,\n                  onChange: (tags) => {\n                    State.update({ tags });\n                  },\n                  options: {\n                    tags: {\n                      pattern,\n                      placeholder: \"dev, art, gov, edu, social, near\",\n                    },\n                  },\n                }}\n              />\n            </div>\n            <div className=\"m-1 col-3\">\n              <CommitButton\n                disabled={tags === null}\n                data={{\n                  graph: {\n                    context: {\n                      [creatorId]: {\n                        [namespace]: {\n                          [thingId]: state.tags,\n                        },\n                      },\n                    },\n                  },\n                }}\n              >\n                + context\n              </CommitButton>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"m-1 col-8\">\n              <input\n                placeholder=\"source path of another thing\"\n                onChange={(e) => {\n                  State.update({\n                    path: e.target.value,\n                  });\n                }}\n              />\n            </div>\n            <div className=\"m-1 col-3\">\n              <Widget\n                src=\"hack.near/widget/AttestButton\"\n                props={{ item: initialPath, data: state.path }}\n              />\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/hack.near/widget/meta.test", "fact_widget_deployments_id": "f37dcd77b21b117109a1d9dab2648474", "inserted_timestamp": "2023-12-04T02:45:58.115Z", "modified_timestamp": "2023-12-20T03:22:11.422Z", "__row_index": 5}