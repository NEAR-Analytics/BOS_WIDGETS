{"tx_hash": "BwAuNxk4vTGegC3agWVbZQCQgVBFTHsu2ngkrdUUMEF", "action_id_social": "3mPZ2MXZRhuXjZHfZb8Yq5sEyvYuHZAATNMSpQCAYc7u-0-widget", "block_id": 106775578, "block_timestamp": "2023-11-29T01:51:38.290Z", "signer_id": "hack.near", "widget_name": "CRM.Telegram", "source_code": "const data = Social.keys(\"*/profile/linktree\", \"final\");\nconst tg = Social.keys(\"*/profile/linktree/telegram\", \"final\");\n\nif (!data || !tg) {\n  return \"Loading\";\n}\n\nconst withTelegram = new Set([...Object.keys(tg)]);\n\nconst profilesPerPage = 10;\n\nconst [currentPage, setCurrentPage] = useState(1);\n\nconst startIndex = (currentPage - 1) * profilesPerPage;\nconst endIndex = startIndex + profilesPerPage;\nconst displayedProfiles = Object.keys(data)\n  .filter((accountId) => withTelegram.has(accountId))\n  .slice(startIndex, endIndex);\n\nconst handlePageChange = (page) => {\n  setCurrentPage(page);\n};\n\nconst totalPages = Math.ceil(\n  Object.keys(data).filter((accountId) => withTelegram.has(accountId)).length /\n    profilesPerPage\n);\n\nconst accounts = displayedProfiles.map((accountId) => (\n  <div className=\"m-2\" key={accountId}>\n    <Widget src=\"hack.near/widget/profile.tg\" props={{ accountId }} />\n  </div>\n));\n\nreturn (\n  <div>\n    <h3 className=\"m-2 mb-3\">Near Social Users on Telegram</h3>\n    <h5 className=\"m-2 mb-3\">{Object.keys(tg).length} total</h5>\n    <div className=\"m-2\">{accounts}</div>\n    <div className=\"m-3\">\n      <button\n        onClick={() => handlePageChange(currentPage - 1)}\n        disabled={currentPage === 1}\n      >\n        Previous Page\n      </button>\n      <button\n        onClick={() => handlePageChange(currentPage + 1)}\n        disabled={currentPage === totalPages}\n      >\n        Next Page\n      </button>\n    </div>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/hack.near/widget/CRM.Telegram", "fact_widget_deployments_id": "f2798aab635ed634ee059245aceba8d2", "inserted_timestamp": "2023-11-29T03:36:11.685Z", "modified_timestamp": "2023-11-29T03:36:11.685Z", "__row_index": 0}