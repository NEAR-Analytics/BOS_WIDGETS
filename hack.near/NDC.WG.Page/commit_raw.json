{"tx_hash": "72WRCcvEeYh7AsY4RE2rbAkPuPRK5wFAba9M5PFUXcF", "action_id_social": "BwDUA7rVd6V6X4rUHXMafpakBVjz111j8WLcoUdJFhH8-0-widget", "block_id": 99113279, "block_timestamp": "2023-08-18T20:14:27.271Z", "signer_id": "hack.near", "widget_name": "NDC.WG.Page", "source_code": "let { dev } = props;\n\nconst registryContract = dev\n  ? \"registry-v1.gwg-testing.near\"\n  : \"registry.i-am-human.near\";\nconst issuer = dev ? \"fractal.i-am-human.near\" : \"community.i-am-human.near\";\nconst apiKey = \"36f2b87a-7ee6-40d8-80b9-5e68e587a5b5\";\n\nconst widgets = {\n  header: \"hack.near/widget/NDC.WG.Header\",\n  card: \"hack.near/widget/NDC.WG.Card\",\n  about: \"hack.near/widget/NDC.WG.About\",\n  styledComponents: \"nomination.ndctools.near/widget/NDC.StyledComponents\",\n  verifyHuman: \"nomination.ndctools.near/widget/NDC.VerifyHuman\",\n  compose: \"hack.near/widget/NDC.WG.Compose\",\n  deleteGroup: \"hack.near/widget/NDC.WG.DeleteGroup\",\n};\n\nState.init({\n  selectedGroup: \"RegionalCommunities\",\n  start: true,\n  groups: [],\n  sbt: false,\n  og: false,\n  createdGroup: false,\n  groupId: \"\",\n  originGroups: [],\n  notFound: \"There are no active work groups at the moment.\",\n  loading: false,\n});\n\nconst getVerifiedHuman = () => {\n  const isHuman = Near.view(registryContract, \"is_human\", {\n    account: context.accountId,\n  });\n  const ogTokens = Near.view(registryContract, \"sbt_tokens\", {\n    issuer,\n  });\n\n  State.update({\n    og: ogTokens.some((sbt) => sbt.owner === context.accountId),\n    sbt: isHuman[0][1].length > 0,\n  });\n};\n\nconst getGroupData = () => Social.get(`${daoId}/groups`);\n\nconst handleSelect = (item) => {\n  switch (item.id) {\n    case 1:\n      getGroupData(\"RegionalCommunties\");\n      break;\n    case 2:\n      getGroupData(\"NFT\");\n      break;\n    case 3:\n      getGroupData(\"Gaming\");\n      break;\n    case 4:\n      getGroupData(\"Tech\");\n      break;\n    case 5:\n      getGroupData(\"ReFi\");\n      break;\n  }\n  State.update({ selectedGroup: item.id });\n};\n\nconst handleFilter = (e) => {\n  const text = e.target.value;\n\n  State.update({ groupId: text });\n\n  if (text.length > 0) {\n    let filtered = state.originNominations.filter((data) => {\n      const affiliations = JSON.parse(data.groupData.afiliation);\n      const companyNames =\n        affiliations?.length > 0 &&\n        affiliations.map((af) => af.company_name.toLowerCase());\n\n      return (\n        data.profileData.name.toLowerCase().includes(text.toLowerCase()) ||\n        (companyNames &&\n          companyNames.some((c) => c.includes(text.toLowerCase())))\n      );\n    });\n\n    if (filtered.length > 0) State.update({ groups: filtered });\n    else\n      State.update({\n        notFound: \"There are no such groups or affiliations\",\n        groups: [],\n      });\n  } else {\n    State.update({ groups: state.originGroups });\n  }\n};\n\nif (state.start) {\n  getVerifiedHuman();\n  getGroupData(\"RegionalCommunities\");\n\n  State.update({ start: false });\n}\n\nconst widget = {\n  styledComponents: \"nomination.ndctools.near/widget/NDC.StyledComponents\",\n};\n\nconst Header = styled.div`\n  background: black;\n`;\n\nconst Container = styled.div`\n  padding: 30px 0;\n  margin: 0;\n`;\n\nconst ActivityContainer = styled.div`\n  overflow-y: scroll;\n`;\n\nconst Left = styled.div`\n  padding: 20px;\n  background: #f8f8f9;\n  border-radius: 8px;\n`;\n\nconst Center = styled.div``;\n\nconst H5 = styled.h5`\n  margin-bottom: 20px;\n`;\n\nconst ButtonNominateContainer = styled.div`\n  padding: 16px;\n  border-radius: 8px;\n  background: #f8f8f9;\n`;\n\nconst Filter = styled.div`\n  margin-top: 32px;\n\n  @media only screen and (max-width: 1061px) {\n    flex-direction: column;\n  }\n`;\n\nconst Toolbar = styled.div`\n  margin-left: 20px;\n  @media only screen and (max-width: 1061px) {\n    margin: 10px 0 0 0;\n  }\n`;\n\nconst Loader = () => (\n  <span\n    className=\"spinner-grow spinner-grow-sm me-1\"\n    role=\"status\"\n    aria-hidden=\"true\"\n  />\n);\n\nreturn (\n  <>\n    <div>\n      <Header className=\"d-flex p-3 px-4 align-items-center rounded justify-content-between\">\n        <Widget\n          src=\"mob.near/widget/Image\"\n          props={{\n            image: {\n              url: \"https://pbs.twimg.com/profile_images/1622941553839816707/nmf3MWw1_400x400.jpg\",\n            },\n            alt: \"ndc\",\n            style: {\n              height: \"42px\",\n              objectFit: \"cover\",\n            },\n            fallbackUrl:\n              \"https://ipfs.near.social/ipfs/bafkreibmiy4ozblcgv3fm3gc6q62s55em33vconbavfd2ekkuliznaq3zm\",\n          }}\n        />\n        {isVerified ? (\n          <Widget\n            src={widget.styledComponents}\n            props={{\n              Link: {\n                text: \"Verify as Human\",\n                href: \"https://i-am-human.app/\",\n              },\n            }}\n          />\n        ) : (\n          <Toolbar>\n            {props.createdGroup ? (\n              <Widget\n                src={widget.styledComponents}\n                props={{\n                  Button: {\n                    className: \"danger primary\",\n                    text: \"Delete Work Group\",\n                    onClick: () => State.update({ showModalDelete: true }),\n                    icon: <i class=\"bi bi-trash\"></i>,\n                  },\n                }}\n              />\n            ) : (\n              <Widget\n                src={widget.styledComponents}\n                props={{\n                  Button: {\n                    text: \"Create Work Group\",\n                    onClick: () => State.update({ showModal: true }),\n                    icon: <i class=\"bi bi-plus-lg\"></i>,\n                  },\n                }}\n              />\n            )}\n          </Toolbar>\n        )}\n      </Header>\n      <Container className=\"d-flex row justify-content-between w-100\">\n        <Left className=\"col-lg\">\n          <H5>Learning Together</H5>\n          <Widget\n            src={widgets.about}\n            props={{\n              selectedGroup: state.selectedGroup,\n              handleSelect: (item) => handleSelect(item),\n            }}\n          />\n          <div>\n            {!state.sbt ? (\n              <div className=\"mt-5\">\n                <Widget\n                  src={widgets.verifyHuman}\n                  props={{\n                    title: \"Participate in a Work Group\",\n                    small: true,\n                  }}\n                />\n              </div>\n            ) : (\n              <div className=\"mt-5\">\n                <Toolbar>\n                  {props.createdGroup ? (\n                    <Widget\n                      src={widget.styledComponents}\n                      props={{\n                        Button: {\n                          className: \"danger primary\",\n                          text: \"Delete Work Group\",\n                          onClick: () =>\n                            State.update({ showModalDelete: true }),\n                          icon: <i class=\"bi bi-trash\"></i>,\n                        },\n                      }}\n                    />\n                  ) : (\n                    <Widget\n                      src={widget.styledComponents}\n                      props={{\n                        Button: {\n                          text: \"Create Work Group\",\n                          onClick: () => State.update({ showModal: true }),\n                          icon: <i class=\"bi bi-plus-lg\"></i>,\n                        },\n                      }}\n                    />\n                  )}\n                </Toolbar>\n              </div>\n            )}\n          </div>\n        </Left>\n        <Center className=\"col-lg-9 px-2 px-md-3 d-flex flex-row flex-wrap\">\n          {state.loading ? (\n            <Loader />\n          ) : state.groups.length > 0 ? (\n            state.groups.map((data) => (\n              <Widget\n                src={widgets.card}\n                props={{\n                  data,\n                  registry_contract: registryContract,\n                  api_key: apiKey,\n                  dev,\n                }}\n              />\n            ))\n          ) : (\n            <div className=\"flex mt-10 container-fluid align-self-center\">\n              <H5 className=\"text-center\">{state.notFound}</H5>\n            </div>\n          )}\n        </Center>\n      </Container>\n    </div>\n\n    <>\n      {state.showModal && (\n        <Widget\n          src={widgets.compose}\n          props={{\n            handleClose: () => State.update({ showModal: false }),\n          }}\n        />\n      )}\n      {state.showModalDelete && (\n        <Widget\n          src={widgets.deleteGroup}\n          props={{\n            group: state.group,\n            handleClose: () => State.update({ showModalDelete: false }),\n          }}\n        />\n      )}\n    </>\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/hack.near/widget/NDC.WG.Page", "fact_widget_deployments_id": "00fd5423488ca477d228098380814056", "inserted_timestamp": "2023-08-18T22:17:23.050Z", "modified_timestamp": "2023-08-18T22:17:23.050Z", "__row_index": 23}