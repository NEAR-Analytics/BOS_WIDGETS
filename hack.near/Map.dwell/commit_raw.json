{"tx_hash": "BpRJS9XzAGAHAPM6xv7yHmJQeBFuB7wbwoRSvAkURd7i", "action_id_social": "EEWiJwEy1UPEUv24zY5UstBuUiAmVnpiKrhrxVGiGWyh-0-widget", "block_id": 106945638, "block_timestamp": "2023-12-01T18:48:45.303Z", "signer_id": "hack.near", "widget_name": "Map.dwell", "source_code": "const data = VM.require(\"ajluc.near/widget/data\");\nconst markers = Social.get(`*/thing/afforDWELL`, \"final\", {\n  subscribe: \"true\",\n});\n\nif (!data) {\n  return null;\n}\n\nconst BG = styled.div`\n\tbackground-color: #fff;\n\tbackground-image: linear-gradient(180deg, #fafcfd 0%, #b6dbfc 100%);\n\tposition: fixed;\n\ttop: 0;\n\tleft: 0;\n\tright: 0;\n\tbottom: 0;\n\tz-index: -2;\n`;\n\nconst Circle1 = styled.div`\n\twidth: 500px;\n\theight: 500px;\n\tborder-radius: 50%;\n\tbackground: linear-gradient(90deg, #9333ea 0%, #f29bc0 100%), #03d69d;\n\tposition: fixed;\n\ttop: -100px;\n\tright: -100px;\n\tz-index: 0;\n\topacity: 0.5;\n\tfilter: blur(50px);\n`;\nconst Circle2 = styled.div`\n\twidth: 400px;\n\theight: 400px;\n\tborder-radius: 50%;\n\tborder: 1px solid #cbcbcb;\n\tbackground: linear-gradient(90deg, #f9d74a 0%, #ffd50d 100%);\n\tposition: fixed;\n\ttop: 80px;\n\tright: -100px;\n\tz-index: 0;\n\topacity: 0.8;\n\tfilter: blur(100px);\n\n\tanimation: move 3s ease infinite;\n\n\t@keyframes move {\n\t\t0% {\n\t\t\ttransform: translate(0, 0);\n\t\t}\n\t\t50% {\n\t\t\ttransform: translate(60px, 40px) scale(1.2);\n\t\t}\n\t\t100% {\n\t\t\ttransform: translate(0, 0);\n\t\t}\n\t}\n`;\n\nconst Card = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tbackground: rgba(255, 255, 255, 0.375);\n\tbox-shadow: 0 0.75rem 2rem 0 rgba(0, 0, 0, 0.1);\n\tborder-radius: 2rem;\n\tborder: 1px solid rgba(255, 255, 255, 0.125);\n\tposition: relative;\n\tz-index: 1;\n\tmargin: 20px auto;\n\twidth: 100%;\n\theight: 75vh;\n`;\n\nconst Switch = styled.div`\n\tcolor: #999;\n\tfont-size: 15px;\n\tfont-weight: 800;\n\tfont-family: 'Mona Sans', sans-serif;\n\tdisplay: block;\n\ttext-align: center;\n\tbackground: white;\n\tpadding: 1px 6px;\n\tborder-radius: 15px;\n\tmargin-top: 15px;\n\tposition: absolute;\n\tleft: 50%;\n\t-ms-transform: translateX(-50%);\n\ttransform: translateX(-50%);\n\tz-index: 3;\n`;\n\nconst Unselected = styled.a`\n\tcolor: #999;\n  text-decoration:none; \n\n\t&:hover {\n    text-decoration:none; \n  }\n`;\n\nconst Selected = styled.span`\n\tbackground: linear-gradient(\n\t\t120deg,\n\t\t#ffd50d 0%,\n\t\t#f29bc0 25%,\n\t\t#4f46e5 50%,\n\t\t#f29bc0 75%,\n\t\t#ffd50d 100%\n\t);\n\tcolor: #000;\n\tbackground-clip: text;\n\ttext-fill-color: transparent;\n\t-webkit-background-clip: text;\n\t-webkit-text-fill-color: transparent;\n\n\tanimation: shine 50s ease infinite;\n\n\t@keyframes shine {\n\t\t0% {\n\t\t\tbackground-position: -1000px;\n\t\t}\n\t\t100% {\n\t\t\tbackground-position: 1000px;\n\t\t}\n\t}\n`;\n\nconst MAP_STYLE = \"mapbox://styles/mapbox/streets-v12\";\nconst MAP_TOKEN =\n  \"pk.eyJ1IjoidGVqMDEiLCJhIjoiY2xqcHZ2dGpkMDB5azNsbzQ0bmMwNjRjaCJ9.FVv2zRPaLwzZMgagbI2YZw\";\n\nconst center = [-74.00597, 40.71427];\nconst zoom = 10;\nconst accountId = context.accountId;\n\nconst Container = styled.div`\n\tdisplay: flex;\n\twidth: 100%;\n\tborder-radius: 2rem;\n\tmargin-top: var(--header-height);\n\theight: calc(100vh - 70px);\n\talign-items: stretch;\n\tflex-direction: column;\n\toverflow: auto;\n\tposition: relative;\n\tz-index: 2;\n`;\n\nconst Button = styled.button`\n\tbackground: rgba(25, 26, 26, 0.75);\n\tborder-radius: 6px;\n\tcolor: white;\n\tz-index: 1;\n\tpadding: 6px 12px;\n`;\n\nconst FormCard = styled.div`\n\tbackground: rgba(25, 26, 26, 0.9);\n\tcolor: #fff;\n\tborder-radius: 1rem;\n\tpadding: 12px;\n\twidth: 360px;\n\tmax-height: 1000px;\n\tposition: absolute;\n\tleft: 200px;\n\ttop: 200px;\n`;\n\nconst InspectCard = styled.div`\n\tbackground: rgba(25, 26, 26, 0.9);\n\tcolor: #fff;\n\tborder-radius: 1rem;\n\tpadding: 12px;\n\twidth: 360px;\n\tmax-height: 3600px;\n\tposition: absolute;\n\tleft: 0;\n\ttop: 0;\n`;\n\nconst Units = styled.div`\n\tmargin-top: 6px;\n\tborder-top: 1px solid #fff;\n\tpadding: 6px 12px;\n`;\n\nconst Unit = styled.div`\n\tfont-size: 15px;\n\tmargin: 3px 0;\n\tpadding-bottom: 6px;\n\t&:not(:last-child) {\n\t\tborder-bottom: 1px dashed #fff;\n\t}\n`;\n\nconst BuildingInfo = styled.div`\n\tfont-size: 12px;\n`;\n\nconst Tag = styled.span`\n\tbackground: #f9d74a;\n\tcolor: rgb(25, 26, 26);\n\tborder-radius: 12px;\n\tpadding: 2px 6px;\n\tmargin-right: 3px;\n`;\n\nconst Location = styled.div`\n\tposition: absolute;\n\tbottom: 50px;\n\t@media (max-width: 510px) {\n\t\tpadding: 6px 15px;\n\t\tbottom: 15px;\n\t}\n`;\n\nconst MagicDot = styled.div`\n\tposition: fixed;\n\tright: 20px;\n\tbottom: 20px;\n\tz-index: 1000;\n\twidth: 80px;\n\theight: 80px;\n\tborder-radius: 50%;\n\tcursor: pointer;\n\tbackground: radial-gradient(circle at 30% 30%, rgb(74, 73, 73), rgb(0, 0, 0));\n\tbox-shadow: rgba(0, 0, 0, 0.1) 0px 4px 6px, rgba(0, 0, 0, 0.06) 0px 2px 4px,\n\t\trgba(0, 0, 0, 0.1) 0px 10px 15px;\n\ttransition: transform 0.2s ease 0s, box-shadow 0.2s ease 0s;\n\n\timg {\n\t\topacity: 0;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tborder-radius: 50%;\n\t\tobject-fit: cover;\n\t\ttransition: 2s;\n\t}\n\n\t&:hover img {\n\t\topacity: 1;\n\t}\n`;\n\nconst dataMap = {\n  onMarket: [],\n  offMarket: [],\n};\n\ndata.forEach((building) => {\n  if (building.onMarket) {\n    const markerObj = {\n      ...building,\n      id: building.address,\n      lat: building.latitude,\n      lng: building.longitude,\n    };\n    dataMap.onMarket = [...dataMap.onMarket, markerObj];\n  } else if (!building.onMarket) {\n    const markerObj = {\n      ...building,\n      id: building.address,\n      lat: building.latitude,\n      lng: building.longitude,\n    };\n    dataMap.offMarket = [...dataMap.offMarket, markerObj];\n  }\n});\n\nObject.keys(markers).forEach((accountId) => {\n  if (markers[accountId].thing && markers[accountId].thing.afforDWELL) {\n    const markerObj = JSON.parse(markers[accountId].thing.afforDWELL);\n    if (markerObj.onMarket) {\n      dataMap.onMarket = [...dataMap.onMarket, markerObj];\n    }\n\n    dataMap.offMarket = [...dataMap.offMarket, markerObj];\n  }\n});\n\nState.init({\n  edit: false,\n  currentLocation: {},\n  data: {},\n});\n\nconst onMagicDotClick = () => {\n  const selected =\n    dataMap.onMarket[Math.floor(Math.random() * dataMap.onMarket.length)];\n  State.update({ focusedMarker: selected, showInspect: true });\n};\n\nconst handleSave = (data) => {\n  if (!data) {\n    data = {\n      unit: \"1A\",\n      beds: 1,\n      baths: 1,\n      onMarket: true,\n      verified: true,\n      rating: 5,\n      priceHistory: {},\n      reviews: [],\n    };\n  }\n\n  Social.set(\n    {\n      thing: {\n        afforDWELL: {\n          \"\": JSON.stringify({\n            id: data.address || \"\",\n            lng: state.currentLocation.lng,\n            lat: state.currentLocation.lat,\n            units: [data],\n          }),\n        },\n      },\n    },\n    {\n      onCommit: () => {\n        State.update({ edit: false, showForm: false, showInspect: false });\n      },\n      onCancel: () =>\n        State.update({ edit: false, showForm: false, showInspect: false }),\n    }\n  );\n};\n\nfunction VerificationIcon() {\n  return (\n    <img\n      src=\"https://i.ibb.co/sHQcy2B/icons8-verified-96.png\"\n      width=\"18\"\n      height=\"18\"\n    />\n  );\n}\n\nfunction RatingIcon({ value, max }) {\n  const fill = Math.round((value / max) * 5);\n  const unfill = 5 - fill;\n\n  return (\n    <span>\n      {value}\n      {[...Array(fill)].map(() => (\n        <img\n          src=\"https://i.ibb.co/vcZ4HT1/icons8-star-96.png\"\n          width=\"18\"\n          height=\"18\"\n        />\n      ))}\n      {[...Array(unfill)].map(() => (\n        <img\n          src=\"https://i.ibb.co/F8RZxTp/icons8-star-96-empty.png\"\n          width=\"18\"\n          height=\"18\"\n        />\n      ))}\n    </span>\n  );\n}\n\nfunction Form() {\n  return (\n    <FormCard>\n      <label>Apartment #:</label>\n      <input\n        type=\"text\"\n        onChange={(e) => {\n          State.update({ ...State, data: { ...State.data, unit: e.data } });\n        }}\n      />\n      <div>\n        <label for=\"name\">Price:</label>\n        <input\n          type=\"number\"\n          onChange={(e) => {\n            State.update({\n              ...State,\n              data: { ...State.data, price: e.data },\n            });\n          }}\n        />\n      </div>\n      <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n        <div style={{ width: \"45%\" }}>\n          <label># Beds:</label>\n          <input\n            type=\"number\"\n            onChange={(e) => {\n              State.update({ ...State, data: { ...State.data, beds: e.data } });\n            }}\n          />\n        </div>\n        <div style={{ width: \"45%\" }}>\n          <label for=\"name\"># Baths:</label>\n          <input\n            type=\"number\"\n            onChange={(e) => {\n              State.update({\n                ...State,\n                data: { ...State.data, baths: e.data },\n              });\n            }}\n          />\n        </div>\n      </div>\n\n      <br />\n      <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n        <input\n          style={{ width: \"45%\" }}\n          type=\"submit\"\n          value=\"Submit\"\n          onClick={() => handleSave(State.data)}\n        />\n        <input\n          style={{ width: \"45%\" }}\n          type=\"button\"\n          value=\"Cancel\"\n          onClick={() =>\n            State.update({ edit: false, showForm: false, data: {} })\n          }\n        />\n      </div>\n    </FormCard>\n  );\n}\n\nfunction Inspect() {\n  return (\n    <InspectCard>\n      <img\n        src={state.focusedMarker.imgSrc}\n        height={150}\n        style={{ width: \"100%\", objectFit: \"cover\" }}\n      />\n      {state.focusedMarker.address}\n      <BuildingInfo>\n        {state.focusedMarker.stories} Stories | {state.focusedMarker.built}{\" \"}\n        Built\n      </BuildingInfo>\n      <Units>\n        {state.focusedMarker.units.map((unit) => (\n          <Unit>\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n              <div>\n                Unit: {unit.unit} {unit.verified ? <VerificationIcon /> : null}\n              </div>\n              <div style={{ color: \"#9333ea\" }}>\n                {unit.onMarket ? `$${unit.price}` : \"\"}\n              </div>\n            </div>\n            <div>\n              <RatingIcon value={unit.rating} max={5} />({unit.reviews.length})\n            </div>\n            <div>\n              <Tag>{`${unit.beds} ${unit.beds > 1 ? \"beds\" : \"bed\"}`}</Tag>\n              <Tag>{`${unit.baths} ${unit.baths > 1 ? \"baths\" : \"bath\"}`}</Tag>\n            </div>\n          </Unit>\n        ))}\n      </Units>\n    </InspectCard>\n  );\n}\n\nfunction LocationIcon() {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n    >\n      <g\n        fill=\"none\"\n        stroke=\"currentColor\"\n        strokeLinejoin=\"round\"\n        strokeWidth=\"2\"\n      >\n        <path d=\"M13 9a1 1 0 1 1-2 0a1 1 0 0 1 2 0Z\" />\n        <path d=\"M17.5 9.5c0 3.038-2 6.5-5.5 10.5c-3.5-4-5.5-7.462-5.5-10.5a5.5 5.5 0 1 1 11 0Z\" />\n      </g>\n    </svg>\n  );\n}\n\nreturn (\n  <div className=\"position-relative h-100 w-100 p-1\">\n    <BG />\n    <Card>\n      <Switch>\n        <Selected>Stablized</Selected> |\n        <Unselected\n          href=\"https://near.org/raycent.near/widget/Affordable_Map\"\n          style={{ color: \"#999\" }}\n        >\n          Affordable\n        </Unselected>\n      </Switch>\n      <Container>\n        {accountId && state.showForm && <Form />}\n\n        {accountId && (\n          <div\n            style={{\n              display: state.edit ? \"none\" : \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n          >\n            <Location>\n              <Button\n                onClick={() =>\n                  State.update({\n                    edit: !state.edit,\n                    showForm: true,\n                    showInspect: false,\n                  })\n                }\n              >\n                Add Rent-Stabilized Apartment\n                <LocationIcon />\n              </Button>\n            </Location>\n          </div>\n        )}\n\n        {state.showInspect && (\n          <Widget\n            src={\"efiz.near/widget/Map.Inspect\"}\n            props={{\n              focusedMarker: state.focusedMarker,\n              children: (p) => <Inspect {...p} />,\n            }}\n          />\n        )}\n        <Widget\n          src={\"efiz.near/widget/Map.Mapbox\"}\n          props={{\n            API_URL,\n            accessToken: MAP_TOKEN,\n            styleUrl: MAP_STYLE,\n            center,\n            zoom,\n            markerAsset: \"https://i.ibb.co/j464rX1/on.png\",\n            markers: [...dataMap.onMarket, ...dataMap.offMarket],\n            myMarkerAsset: \"https://i.ibb.co/fYs8b1d/off.png\",\n            myMarkers: dataMap.offMarket,\n            edit: state.edit,\n            onMapClick: (e) => {\n              State.update({\n                currentLocation: e.coordinates,\n                showInspect: false,\n              });\n            },\n            onMarkerClick: (e) => {\n              State.update({ focusedMarker: e, showInspect: true });\n            },\n          }}\n        />\n      </Container>\n    </Card>\n    <Circle1 />\n    <Circle2 />\n    <MagicDot onClick={onMagicDotClick}>\n      <img src=\"https://i.ibb.co/X7PJfh6/s-l1600.png\" />\n    </MagicDot>\n  </div>\n);\n", "metadata": {"downstream": "hack.near/widget/Map.dwell", "upstream": "raycent.near/widget/Map"}, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/hack.near/widget/Map.dwell", "fact_widget_deployments_id": "7c690e0c2293bbafca1ec925a4611a93", "inserted_timestamp": "2023-12-01T20:47:18.400Z", "modified_timestamp": "2023-12-20T03:02:01.702Z", "__row_index": 0}