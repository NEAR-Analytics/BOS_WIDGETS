{"tx_hash": "4s5VCWNARw9BocK5n35JKYGpNzZ4TedPxo96i3SFWsHe", "action_id_social": "ENyyx89bqHmZrz11yKRCPPtX5LKDpa5PpPhAGLCWPpjh-0-widget", "block_id": 115632444, "block_timestamp": "2024-03-28T06:21:01.486Z", "signer_id": "hack.near", "widget_name": "lists.explore", "source_code": "const accountId = props.accountId ?? context.accountId ?? \"every.near\";\n\nconst [newList, setNewList] = useState(\"\");\nconst [activeTab, setActiveTab] = useState(\"explore\");\n\nconst switchTab = (tabName) => {\n  setActiveTab(tabName);\n};\n\nconst [listId, setListId] = useState(1);\nconst [owner, setOwner] = useState(\"\");\nconst [registrant, setRegistrant] = useState(\"\");\n\nconst list = Near.view(\"lists.potlock.near\", \"get_list\", {\n  list_id: listId,\n});\n\nconst lists = Near.view(\"lists.potlock.near\", \"get_lists\", {\n  from_index: 0,\n  limit: 100,\n});\n\nconst listsByOwner = Near.view(\"lists.potlock.near\", \"get_lists_for_owner\", {\n  owner_id: owner,\n});\n\nconst listsByRegistrant = Near.view(\n  \"lists.potlock.near\",\n  \"get_lists_for_registrant\",\n  {\n    registrant_id: registrant,\n  }\n);\n\nconst upvotesByList = Near.view(\"lists.potlock.near\", \"get_upvotes_for_list\", {\n  list_id: listId,\n  from_index: 0,\n  limit: 100,\n});\n\nconst upvotesByAccount = Near.view(\n  \"lists.potlock.near\",\n  \"get_upvoted_lists_for_account\",\n  {\n    account_id: accountId,\n    from_index: 0,\n    limit: 100,\n  }\n);\n\nconst registration = Near.view(\"lists.potlock.near\", \"get_registration\", {\n  registration_id: 1,\n});\n\nconst registrationsByList = Near.view(\n  \"lists.potlock.near\",\n  \"get_registrations_for_list\",\n  {\n    list_id: listId,\n    status,\n    from_index: 0,\n    limit: 100,\n  }\n);\n\nconst registrationsByRegistrant = Near.view(\n  \"lists.potlock.near\",\n  \"get_registrations_for_registrant\",\n  {\n    registrant_id: registrant,\n    status,\n    from_index: 0,\n    limit: 100,\n  }\n);\n\nconst isRegistered = Near.view(\"lists.potlock.near\", \"is_registered\", {\n  list_id: listId,\n  account_id: registrant,\n  required_status, // defaults to Approved\n});\n\nconst metadata = Near.view(\n  \"lists.potlock.near\",\n  \"get_contract_source_metadata\"\n);\n\nconst handleNew = () =>\n  Near.call(\"lists.potlock.near\", \"new\", {\n    version: \"1.0.0\",\n    commit_hash: \"7937ed404ce9090ad9bb9a116d494a1297111a7b\",\n    link: \"https://github.com/PotLock/core\",\n  });\n\nconst createList = () =>\n  Near.call(\"lists.potlock.near\", \"create_list\", {\n    name: newList.name,\n    description: newList.description,\n    cover_image_url: newList.backgroundImage,\n    admins: newList.admins,\n    default_registration_status: newList.defaultStatus,\n    admin_only_registrations: newList.adminOnly,\n  });\n\nconst updateList = () =>\n  Near.call(\"lists.potlock.near\", \"update_list\", {\n    list_id: listId,\n    name: newList.name,\n    description: newList.description,\n    cover_image_url: newList.backgroundImage,\n    remove_cover_image: remove,\n    default_registration_status: newList.defaultStatus,\n    admin_only_registrations: newList.adminOnly,\n  });\n\nconst deleteList = () =>\n  Near.call(\"lists.potlock.near\", \"delete_list\", {\n    list_id: listId,\n  });\n\nconst upvote = () =>\n  Near.call(\"lists.potlock.near\", \"upvote\", {\n    list_id: listId,\n  });\n\nconst removeUpvote = () =>\n  Near.call(\"lists.potlock.near\", \"remove_upvote\", {\n    list_id: listId,\n  });\n\nconst changeOwner = () =>\n  Near.call(\"lists.potlock.near\", \"owner_change_owner\", {\n    list_id: listId,\n    new_owner_id: newOwner,\n  });\n\nconst addAdmins = () =>\n  Near.call(\"lists.potlock.near\", \"owner_add_admins\", {\n    list_id: listId,\n    admins: newAdmins,\n  });\n\nconst removeAdmins = () =>\n  Near.call(\"lists.potlock.near\", \"owner_remove_admins\", {\n    list_id: listId,\n    admins: newAdmins,\n  });\n\nconst clearAdmins = () =>\n  Near.call(\"lists.potlock.near\", \"owner_clear_admins\", {\n    list_id: listId,\n  });\n\nconst [showFilters, setShowFilters] = useState(false);\n\nconst toggleFilters = () => {\n  setShowFilters(!showFilters);\n};\n\nreturn (\n  <div className=\"m-2 mb-3\">\n    <div className=\"d-flex flex-row justify-content-between me-3\">\n      <h4 className=\"m-1\">\n        <b>List Explorer</b>\n      </h4>\n      <button\n        onClick={toggleFilters}\n        className={`m-1 me-2 btn btn-sm ${\n          !showFilters ? \"btn-outline-dark\" : \"btn-dark\"\n        }`}\n      >\n        {!showFilters ? (\n          <i className=\"bi bi-filter\"></i>\n        ) : (\n          <i className=\"bi bi-x\"></i>\n        )}\n      </button>\n    </div>\n\n    {showFilters && (\n      <div className=\"row m-2\">\n        <div className=\"col\">\n          <label htmlFor=\"filterByOwner\" className=\"form-label\">\n            <b>Filter by Owner</b>\n          </label>\n          <input\n            id=\"filterByOwner\"\n            type=\"text\"\n            className=\"form-control\"\n            placeholder={accountId}\n            value={owner}\n            onChange={(e) => setOwner(e.target.value)}\n          />\n        </div>\n        <div className=\"col\">\n          <label htmlFor=\"filterByRegistrant\" className=\"form-label\">\n            <b>Filter by Registrant</b>\n          </label>\n          <input\n            id=\"filterByRegistrant\"\n            type=\"text\"\n            className=\"form-control\"\n            placeholder={accountId}\n            value={registrant}\n            onChange={(e) => setRegistrant(e.target.value)}\n          />\n        </div>\n      </div>\n    )}\n    <br />\n    <div>\n      {listsByOwner.length > 0 ? (\n        <div className=\"m-2\">\n          {listsByOwner.map((list, i) => (\n            <div key={i}>\n              <Widget\n                src=\"hack.near/widget/list.card\"\n                props={{ listId: list.id }}\n              />\n            </div>\n          ))}\n        </div>\n      ) : listsByRegistrant.length > 0 ? (\n        <div className=\"m-2\">\n          {listsByRegistrant.map((list, i) => (\n            <div key={i}>\n              <Widget\n                src=\"hack.near/widget/list.card\"\n                props={{ listId: list.id }}\n              />\n            </div>\n          ))}\n        </div>\n      ) : (\n        <div className=\"m-2\">\n          {lists.map((list, i) => (\n            <div key={i}>\n              <Widget\n                src=\"hack.near/widget/list.card\"\n                props={{ listId: list.id }}\n              />\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/hack.near/widget/lists.explore", "fact_widget_deployments_id": "e416ae7178831c341f7fe7e28bae9b2d", "inserted_timestamp": "2024-03-28T07:28:50.057Z", "modified_timestamp": "2024-03-28T07:28:50.057Z", "__row_index": 1}