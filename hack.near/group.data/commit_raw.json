{"tx_hash": "5iE4jZs4QZ14n7NDtpxgTZNAVaVKW6Ym4wekQGFEkgHE", "action_id_social": "9jaq2nRWn3cer6a9g8g5C9ezEWLYqC2WVdvYutj34LcQ-0-widget", "block_id": 100409028, "block_timestamp": "2023-09-04T23:55:40.012Z", "signer_id": "hack.near", "widget_name": "group.data", "source_code": "const groupId = props.groupId || \"5d8c50e9c475elm0wxzpcb8d5980836595\";\n\nif (!groupId) {\n  return \"group not found\";\n}\n\nconst initMembers =\n  Social.get(`${context.accountId}/thing/${groupId}/members`) || [];\n\nState.init({\n  groupId,\n  group,\n  members: initMembers,\n  newMember: \"\",\n});\n\nfunction addMember(newMember) {\n  state.members.push(newMember);\n\n  State.update({\n    members: state.members,\n  });\n}\n\nfunction removeMember(memberKey) {\n  const updatedMembers = state.members.filter((member) => member !== memberKey);\n\n  State.update({\n    members: updatedMembers,\n  });\n}\n\nfunction isNearAddress(address) {\n  if (typeof address !== \"string\") {\n    return false;\n  }\n  if (!address.endsWith(\".near\")) {\n    return false;\n  }\n  const parts = address.split(\".\");\n  if (parts.length !== 2) {\n    return false;\n  }\n  if (parts[0].length < 2 || parts[0].length > 32) {\n    return false;\n  }\n  if (!/^[a-z0-9_-]+$/i.test(parts[0])) {\n    return false;\n  }\n  return true;\n}\n\nconst memberId = props.memberId || state.newMember;\n\nconst isValid = isNearAddress(memberId);\n\nconst handleCreate = () => {\n  let Group_Payload = {\n    contractName: \"social.near\",\n    methodName: \"set\",\n    args: {\n      data: {\n        [context.accountId]: {\n          thing: {\n            [state.groupId]: {\n              ...state.group,\n              members: { ...state.members },\n            },\n          },\n          graph: {\n            [state.groupId]: {\n              ...state.members,\n            },\n          },\n        },\n      },\n    },\n    gas: 300000000000000,\n    deposit: 100000000000000000000000,\n  };\n\n  Near.call(Group_Payload).then(() => handleClose());\n};\n\nconst groupData = Social.get(\n  `${context.accountId}/thing/${state.groupId}/members`\n);\n\nreturn (\n  <>\n    <div className=\"row\">\n      <div className=\"col-lg-6\">\n        <h5>Edit Group</h5>\n        <input\n          placeholder={groupId}\n          onChange={(e) => State.update({ groupId: e.target.value })}\n        />\n        {groupData && (\n          <>\n            <div className=\"mt-3\">\n              <button className=\"btn btn-success me-2\" onClick={handleCreate}>\n                save\n              </button>\n              <button\n                className=\"btn btn-secondary me-2\"\n                href={`/hack.near/widget/group?groupId=${groupId}`}\n              >\n                view\n              </button>\n            </div>\n            <div className=\"mt-4\">\n              <h5>Details</h5>\n              <Widget\n                src=\"near/widget/MetadataEditor\"\n                props={{\n                  initialMetadata: group,\n                  onChange: (group) => State.update({ group }),\n                  options: {\n                    name: {\n                      label: \"Name\",\n                    },\n                    image: { label: \"Logo\" },\n                    description: { label: \"About\" },\n                    tags: {\n                      label: \"Tags\",\n                      tagsPattern: `*/${groupId}/tags/*`,\n                      placeholder: \"art, gov, edu, dev, com, nft, ai, social\",\n                    },\n                    linktree: {\n                      links: [\n                        {\n                          label: \"Twitter\",\n                          prefix: \"https://twitter.com/\",\n                          name: \"twitter\",\n                        },\n                        {\n                          label: \"Github\",\n                          prefix: \"https://github.com/\",\n                          name: \"github\",\n                        },\n                        {\n                          label: \"Telegram\",\n                          prefix: \"https://t.me/\",\n                          name: \"telegram\",\n                        },\n                        {\n                          label: \"Website\",\n                          prefix: \"https://\",\n                          name: \"website\",\n                        },\n                      ],\n                    },\n                  },\n                }}\n              />\n            </div>\n          </>\n        )}\n      </div>\n      <div className=\"col-lg-6\">\n        {groupData && (\n          <>\n            <div>\n              <h5>Add Members</h5>\n              <input\n                placeholder=\"<example>.near\"\n                onChange={(e) => State.update({ newMember: e.target.value })}\n              />\n              <div className=\"d-flex align-items-center mt-2\">\n                <button\n                  className=\"btn btn-primary mt-2\"\n                  onClick={() => addMember(state.newMember)}\n                >\n                  add\n                </button>\n              </div>\n            </div>\n            <br />\n            {state.groupId === groupId ? (\n              <div>\n                <h5>Profiles</h5>\n\n                {JSON.parse(state.members).map((a, i) => {\n                  return (\n                    <div\n                      key={i}\n                      className=\"d-flex m-2 p-2 justify-content-between align-items-center\"\n                    >\n                      <Widget\n                        key={i}\n                        src=\"mob.near/widget/Profile\"\n                        props={{ accountId: a }}\n                      />\n                      <button\n                        className=\"btn btn-danger m-1\"\n                        onClick={() => removeMember(a)}\n                      >\n                        remove\n                      </button>\n                    </div>\n                  );\n                })}\n              </div>\n            ) : (\n              <>\n                <div>\n                  <h5>Profiles</h5>\n                  {JSON.parse(groupData).map((a, i) => {\n                    return (\n                      <div\n                        key={i}\n                        className=\"d-flex m-2 p-2 justify-content-between align-items-center\"\n                      >\n                        <Widget\n                          key={i}\n                          src=\"mob.near/widget/Profile\"\n                          props={{ accountId: a }}\n                        />\n                        <button\n                          className=\"btn btn-danger m-1\"\n                          onClick={() => removeMember(a)}\n                        >\n                          remove\n                        </button>\n                      </div>\n                    );\n                  })}\n                </div>\n              </>\n            )}\n          </>\n        )}\n      </div>\n    </div>\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/hack.near/widget/group.data", "fact_widget_deployments_id": "a367d9f4ca0fb00a6df6daf13c167060", "inserted_timestamp": "2023-09-05T01:55:20.980Z", "modified_timestamp": "2023-09-05T01:55:20.980Z", "__row_index": 12}