{"tx_hash": "Hd1vPX1mwdtq9jHSkTRaVwxAPHDa18wrZZjb1QXTNjjL", "action_id_social": "GrccrJ91ZbFH4tdNFE6dXsA3qLmZt656FiC1eX89kDVX-0-widget", "block_id": 114902473, "block_timestamp": "2024-03-17T17:17:21.413Z", "signer_id": "hack.near", "widget_name": "CityEditor", "source_code": "const pattern = props.pattern ?? \"*/profile/cities/*\";\nconst placeholder =\n  props.placeholder ??\n  \"input the name of your city here (try not to duplicate)\";\nconst initialCitiesObject = props.initialCitiesObject || {};\n\nconst citiesObject = Social.keys(pattern, \"final\");\n\nif (citiesObject === null) {\n  return \"Loading...\";\n}\n\nconst normalizeCity = (city) =>\n  city\n    .replaceAll(/[- \\.]/g, \"_\")\n    .replaceAll(/[^\\w]+/g, \"\")\n    .replaceAll(/_+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\")\n    .toLowerCase()\n    .trim(\"-\");\n\nconst citiesCount = {};\n\nconst processObject = (obj) => {\n  Object.entries(obj).forEach((kv) => {\n    if (typeof kv[1] === \"object\") {\n      processObject(kv[1]);\n    } else {\n      const city = normalizeCity(kv[0]);\n      citiesCount[city] = (citiesCount[city] || 0) + 1;\n    }\n  });\n};\n\nconst getCities = () => {\n  processObject(citiesObject);\n  const cities = Object.entries(citiesCount);\n  cities.sort((a, b) => b[1] - a[1]);\n  return cities.map((t) => ({\n    name: t[0],\n    count: t[1],\n  }));\n};\n\nif (!state.allCities) {\n  initState({\n    allCities: getCities(),\n    cities: Object.keys(initialCitiesObject).map((city) => ({\n      name: normalizeCity(city),\n    })),\n    originalCities: Object.fromEntries(\n      Object.keys(initialCitiesObject).map((city) => [city, null])\n    ),\n    id: `city-selector-${Date.now()}`,\n  });\n}\n\nconst setCities = (selectedCity) => {\n  const normalizedCity = normalizeCity(selectedCity.name);\n  const updatedCities = {\n    ...state.originalCities,\n    [normalizedCity]: \"\",\n  };\n\n  if (props.setCitiesObject) {\n    props.setCitiesObject(updatedCities);\n  }\n};\n\nreturn (\n  <>\n    <Typeahead\n      id={state.id}\n      labelKey=\"name\"\n      onChange={(selected) => setCities(selected[0])}\n      options={state.allCities}\n      placeholder={placeholder}\n      selected={state.cities ? [state.cities] : []}\n      positionFixed\n      allowNew\n    />\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/hack.near/widget/CityEditor", "fact_widget_deployments_id": "8538f6fe73d1a75b175df0df85706765", "inserted_timestamp": "2024-03-17T18:26:37.336Z", "modified_timestamp": "2024-03-17T18:26:37.336Z", "__row_index": 0}