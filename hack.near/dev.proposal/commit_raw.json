{"tx_hash": "HNspNPac5XR1K5vDthhmNuo3g288rJtPMs4LrRnndKjJ", "action_id_social": "DUrYUKGNyjATAPY6bFNpDwCYuBqtuPauLGxRqPM1XCF8-0-widget", "block_id": 96625845, "block_timestamp": "2023-07-16T18:15:45.511Z", "signer_id": "hack.near", "widget_name": "dev.proposal", "source_code": "const accountId = props.accountId ?? context.accountId;\n\nlet widgetName;\n\nconst daoId = props.daoId ?? \"build.sputnik-dao.near\";\nconst proposalId = props.proposalId ?? 187;\n\nlet proposal = props.proposal && JSON.parse(JSON.stringify(props.proposal));\n\nif (!proposal && proposalId && daoId) {\n  let new_proposal = Near.view(daoId, \"get_proposal\", {\n    id: Number(proposalId),\n  });\n  if (new_proposal) {\n    proposal = new_proposal;\n  } else if (new_proposal === null) {\n    return \"Loading...\";\n  } else {\n    return \"Proposal not found, check console for details.\";\n  }\n} else if (!proposal) {\n  return \"Please provide a proposal or proposalId.\";\n}\n\nconst proposalKinds = {\n  FunctionCall: \"call\",\n};\n\nconst actionTypes = {\n  AddProposal: \"AddProposal\",\n  VoteApprove: \"VoteApprove\",\n  VoteReject: \"VoteReject\",\n  VoteRemove: \"VoteRemove\",\n};\n\n// -- Get all the roles from the DAO policy\nlet roles = Near.view(daoId, \"get_policy\");\nroles = roles === null ? [] : roles.roles;\n\nconst isUserAllowedTo = (user, kind, action) => {\n  // -- Filter the user roles\n  const userRoles = [];\n  for (const role of roles) {\n    if (role.kind === \"Everyone\") {\n      userRoles.push(role);\n      continue;\n    }\n    if (!role.kind.Group) continue;\n    if (accountId && role.kind.Group && role.kind.Group.includes(accountId)) {\n      userRoles.push(role);\n    }\n  }\n\n  // -- Check if the user is allowed to perform the action\n  let allowed = false;\n\n  userRoles\n    .filter(({ permissions }) => {\n      const allowedRole =\n        permissions.includes(`${kind.toString()}:${action.toString()}`) ||\n        permissions.includes(`${kind.toString()}:*`) ||\n        permissions.includes(`*:${action.toString()}`) ||\n        permissions.includes(\"*:*\");\n      allowed = allowed || allowedRole;\n      return allowedRole;\n    })\n    .map((role) => role.name);\n\n  return allowed;\n};\n\nconsole.log(\n  \"Is User Allowed To 'Add a Proposal' of type 'FunctionCall'?\",\n  isUserAllowedTo(\n    accountId,\n    proposalKinds.FunctionCall,\n    actionTypes.AddProposal\n  )\n);\n\nconsole.log(\n  \"Is User Allowed To 'Vote Yes' on a proposal of type 'FunctionCall'?\",\n  isUserAllowedTo(\n    accountId,\n    proposalKinds.FunctionCall,\n    actionTypes.VoteApprove\n  )\n);\n\nconst canPropose = isUserAllowedTo(\n  accountId,\n  proposalKinds.FunctionCall,\n  actionTypes.AddProposal\n);\nconst canVote = isUserAllowedTo(\n  accountId,\n  proposalKinds.FunctionCall,\n  actionTypes.VoteApprove\n);\n// --- end of check\n\nproposal.type =\n  typeof proposal.kind === \"string\"\n    ? proposal.kind\n    : Object.keys(proposal.kind)[0];\nproposal.type = proposal.type.replace(/([A-Z])/g, \" $1\").trim(); // Add spaces between camelCase\n\nproposal.status = proposal.status.replace(/([A-Z])/g, \" $1\").trim(); // Add spaces between camelCase\n\n// ==============================\n// Styled Components\n// ==============================\n\nconst statusColor =\n  proposal.status === \"Approved\"\n    ? \"#28a930\"\n    : proposal.status === \"In Progress\"\n    ? \"#58a1ff\"\n    : proposal.status === \"Failed\"\n    ? \"#dc3545\"\n    : \"#6c757d\";\n\nconst statusBackgroundColor =\n  proposal.status === \"Approved\"\n    ? \"#ecf7ef\"\n    : proposal.status === \"Failed\" || proposal.status === \"Rejected\"\n    ? \"#fdf4f4\"\n    : \"#fff\";\n\nconst Card = styled.div`\n  background-color: ${statusBackgroundColor};\n\n`;\n\nconst Wrapper = styled.div`\n  background-color: ${statusBackgroundColor};\n  margin: 23px auto;\n  max-width: 888px;\n  border-radius: 16px;\n  padding: 19px;\n  display: flex;\n  flex-direction: column;\n  gap: 23px;\n\n  p {\n    line-height: 1.4;\n    font-weight: 400;\n    font-size: 15px;\n    color: #868682;\n    margin: 0;\n  }\n\n  h3 {\n    font-weight: 600;\n    font-size: 24px;\n    color: #1b1b18;\n  }\n\n  h5 {\n    font-size: 14px;\n    font-weight: 500;\n    line-height: 1.2;\n    color: #6c757d;\n  }\n\n  .status {\n    font-size: 14px;\n    font-weight: 600;\n    line-height: 1.2;\n    color: ${statusColor};\n  }\n`;\n\nconst MarkdownContainer = styled.div`\n  position: relative;\n  width: 100%;\n  padding: 24px;\n  background-color: #f8f9fa;\n  color: #1b1b18;\n  border-radius: 14px;\n  max-height: 700px;\n  overflow-y: auto;\n  color: #333;\n  line-height: 1.6;\n  box-shadow: rgba(0, 0, 0, 0.05) 0px 0px 0px 1px;\n\n  h1 {\n    font-size: 2em;\n    color: #111;\n    border-bottom: 1px solid #ccc;\n    padding-bottom: 0.3em;\n    margin-bottom: 1em;\n  }\n\n  h2 {\n    font-size: 1.5em;\n    color: #222;\n    margin-bottom: 0.75em;\n  }\n\n  h3 {\n    font-size: 1.3em;\n    color: #333;\n    margin-bottom: 0.6em;\n  }\n\n  h4 {\n    font-size: 1.2em;\n    color: #444;\n    margin-bottom: 0.5em;\n  }\n\n  h5 {\n    font-size: 1.1em;\n    color: #555;\n    margin-bottom: 0.4em;\n  }\n\n  p {\n    font-size: 1em;\n    margin-bottom: 1em;\n  }\n\n  a {\n    color: #0645ad;\n    text-decoration: none;\n  }\n\n  a:hover {\n    text-decoration: underline;\n  }\n`;\n\nfunction deepSortObject(obj) {\n  if (typeof obj !== \"object\" || obj === null) {\n    // Return non-object values as is\n    return obj;\n  }\n\n  if (Array.isArray(obj)) {\n    // If the input is an array, recursively sort each element\n    return obj.map(deepSortObject).sort();\n  }\n\n  const sortedObject = {};\n  const sortedKeys = Object.keys(obj).sort((keyA, keyB) => {\n    // Compare keys in a case-insensitive manner\n    return keyA.toLowerCase().localeCompare(keyB.toLowerCase());\n  });\n\n  for (const key of sortedKeys) {\n    sortedObject[key] = deepSortObject(obj[key]);\n  }\n\n  return sortedObject;\n}\n\nconst proposal_type =\n  typeof proposal.kind === \"string\"\n    ? proposal.kind\n    : Object.keys(proposal.kind)[0];\n\nconst actions = proposal.kind.FunctionCall.actions;\n\nif (!actions || actions.length === 0) {\n  return null;\n}\n\nconst details = actions.map(({ args }) => {\n  console.log(\"Args:\", args);\n\n  const selectedArgs = JSON.parse(Buffer.from(args, \"base64\").toString(\"utf8\"));\n\n  console.log(\"Selected Args:\", selectedArgs);\n\n  const newCode = selectedArgs.data[daoId].widget.community[\"\"];\n\n  console.log(\"New Code:\", newCode);\n\n  widgetName = Object.keys(selectedArgs.data[daoId].widget)[0];\n\n  console.log(\"Widget Name:\", widgetName);\n\n  const baseCode = Social.get(`${daoId}/widget/${widgetName}`);\n\n  console.log(\"Base Code:\", baseCode);\n\n  console.log(\"Details:\", details);\n});\n\nconst proposalURL = `/#/sking.near/widget/DAO.Page?daoId=${daoId}&tab=proposal&proposalId=${proposal.id}`;\nreturn (\n  <Wrapper>\n    <div className=\"row justify-content-between align-items-center text-muted\">\n      <div className=\"col-auto mb-1\">\n        <h4>\n          proposal{\" \"}\n          <a\n            className=\"text-muted\"\n            href={proposalURL}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            #{proposal.id}\n          </a>\n        </h4>\n      </div>\n      <div className=\"col-auto mb-1\">\n        <Widget\n          src=\"hack.near/widget/dev.profile.line\"\n          props={{ accountId: proposal.proposer }}\n        />\n      </div>\n    </div>\n    <div className=\"mb-2 justify-content-between align-items-center\">\n      <Widget\n        src=\"hack.near/widget/widget.inline\"\n        props={{\n          widgetPath: `${daoId}/widget/${widgetName}`,\n        }}\n      />\n    </div>\n    {canVote && (\n      <div className=\"me-1\">\n        <Widget\n          src=\"hack.near/widget/dev.proposal.vote\"\n          props={{\n            daoId: daoId,\n            proposal: proposal,\n            isAllowedToVote: [\n              isAllowedToVoteYes,\n              isAllowedToVoteNo,\n              isAllowedToVoteRemove,\n            ],\n          }}\n        />\n      </div>\n    )}\n    <div className=\"row justify-content-between\">\n      <div className=\"mb-3\">\n        <Widget\n          src=\"hack.near/widget/dev.proposal.comments\"\n          props={{\n            daoId: daoId,\n            proposal: proposal,\n          }}\n        />\n      </div>\n      <div className=\"col-auto m-2\">\n        <button\n          className=\"btn btn-sm btn-outline-secondary border-0\"\n          data-bs-toggle=\"collapse\"\n          data-bs-target={`.details`}\n          aria-expanded=\"false\"\n          aria-controls={\"details\"}\n        >\n          <i className=\"bi bi-arrows-expand me-1\"></i> see proposed changes\n        </button>\n      </div>\n    </div>\n    <div className=\"collapse details\">\n      <Widget\n        src=\"hack.near/widget/widget.compare\"\n        props={{\n          updatedWidget: `${proposal.proposer}/widget/${widgetName}`,\n          widgetPath: `${daoId}/widget/${widgetName}`,\n          ...props,\n        }}\n      />\n    </div>\n  </Wrapper>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/hack.near/widget/dev.proposal", "fact_widget_deployments_id": "949e7142cafeda85ab071d91437b0f2b", "inserted_timestamp": "2000-01-01T00:00:00.000Z", "modified_timestamp": "2000-01-01T00:00:00.000Z", "__row_index": 6}