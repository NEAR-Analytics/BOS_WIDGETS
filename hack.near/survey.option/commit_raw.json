{"tx_hash": "4PQU2uJJ8QqVcePujW46WL8zWvdTByf8XRQvZ2TQfLBV", "action_id_social": "wB1xduwPmZ72WvzJrUpaZP8JWKVzdJrzCFzJxWKVy7X-0-widget", "block_id": 109035875, "block_timestamp": "2023-12-28T21:53:55.860Z", "signer_id": "hack.near", "widget_name": "survey.option", "source_code": "const accountId = props.accountId ?? context.accountId;\n\nconst daoId = props.daoId ?? \"build.sputnik-dao.near\";\nconst roleId = props.roleId ?? \"community\";\n\nconst authorId = props.authorId ?? \"hack.near\";\nconst proposalId = props.proposalId ?? 1;\n\nconst proposal = Near.view(daoId, \"get_proposal\", {\n  id: JSON.parse(proposalId),\n});\n\nif (proposal === null) {\n  return \"\";\n}\n\nconst tag = props.tag ?? \"build\";\n\nconst postUrl = props.postUrl ?? `https://near.social?hashtag=${tag}`;\n\nState.init({\n  isMember: false,\n});\n\nconst policy = Near.view(daoId, \"get_policy\");\n\nif (!policy) {\n  return \"\";\n}\n\nconst group = policy.roles\n  .filter((role) => role.name === roleId)\n  .map((role) => role.kind.Group);\n\nconst groupMembers = group.join(\", \");\n\nconst checkMembership = (groupMembers) => {\n  if (groupMembers.indexOf(accountId) !== -1) {\n    return State.update({ isMember: true });\n  }\n};\n\nconst validMember = checkMembership(groupMembers);\n\n// check if user can vote\nconst canVote = accountId && proposal.votes[accountId] !== \"Approve\";\n\n// // SBT verification\n// let isVerified = false;\n// const userSBTs = Near.view(\"registry.i-am-human.near\", \"sbt_tokens_by_owner\", {\n//   account: accountId,\n// });\n\n// for (let i = 0; i < userSBTs.length; i++) {\n//   if (\"fractal.i-am-human.near\" == userSBTs[i][0]) {\n//     isVerified = true;\n//   }\n// }\n\nconst handleApprove = () => {\n  Near.call([\n    {\n      contractName: daoId,\n      methodName: \"act_proposal\",\n      args: {\n        id: proposalId,\n        action: \"VoteApprove\",\n      },\n      gas: 219000000000000,\n    },\n  ]);\n};\n\nconst Card = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  gap: 15px;\n  width: 100%;\n  border-radius: 9px;\n  background: #fff;\n  border: 1px solid #eceef0;\n  box-shadow: 0px 1px 3px rgba(16, 24, 40, 0.1),\n    0px 1px 2px rgba(16, 24, 40, 0.06);\n  overflow: hidden;\n  padding: 12px;\n  margin: 0.555em;\n`;\n\nreturn (\n  <Card>\n    <Widget src=\"near/widget/AccountProfile\" props={{ accountId: authorId }} />\n    <a className=\"btn flex-fill btn-outline-primary \" href={postUrl}>\n      Discuss\n    </a>\n    <div className=\"m-1 d-flex flex-row gap-1\">\n      {canVote ? (\n        <button className=\"btn flex-fill btn-success\" onClick={handleApprove}>\n          Vote\n        </button>\n      ) : (\n        <button\n          className=\"btn flex-fill btn-success\"\n          onClick={handleApprove}\n          disabled={!canVote}\n        >\n          Voted\n        </button>\n      )}\n    </div>\n  </Card>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/hack.near/widget/survey.option", "fact_widget_deployments_id": "a19e3b2a6886604487c504d8a214a88f", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}