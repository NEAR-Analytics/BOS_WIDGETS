{"tx_hash": "9VVcCiJWjq1zzW86Dqjw4QfEUNTDKSsL8g6UCn1JC5z8", "action_id_social": "2d1wbo3oAa1Gc8YRkDVBsv1MYimMah4S3Bnoa8m4HHZy-0-widget", "block_id": 100611571, "block_timestamp": "2023-09-07T20:06:46.530Z", "signer_id": "hack.near", "widget_name": "group.creator", "source_code": "const { typeToEmptyData, validateType, types } = props;\n\nconst initialFormState = typeToEmptyData(types[\"hack.near/type/community\"]);\n\n// Set default values here\ninitialFormState.profileImage =\n  \"https://ipfs.near.social/ipfs/bafkreiad5c4r3ngmnm7q6v52joaz4yti7kgsgo6ls5pfbsjzclljpvorsu\";\ninitialFormState.coverImage =\n  \"https://ipfs.near.social/ipfs/bafkreicd7wmjfizslx72ycmnsmo7m7mnvfsyrw6wghsaseq45ybslbejvy\";\n\nState.init({\n  step: 0,\n  form: initialFormState,\n  errors: null,\n});\n\nconst handleStepComplete = (value) => {\n  const stepValid = true;\n  Object.keys(value).forEach((key) => {\n    const properties = types[\n      \"astraplusplus.ndctools.near/type/dao\"\n    ].properties.find((p) => p.name === key);\n    const validation = validateType(properties.type, value[key], properties);\n    if (validation) {\n      State.update({\n        errors: {\n          ...state.errors,\n          [key]: validation,\n        },\n      });\n      stepValid = false;\n    } else {\n      State.update({\n        errors: {\n          ...state.errors,\n          [key]: null,\n        },\n      });\n    }\n  });\n\n  if (!stepValid) return;\n\n  if (state.step === 5) {\n    const finalAnswers = {\n      ...state.form,\n      ...value,\n    };\n\n    State.update({\n      step: state.step,\n      form: finalAnswers,\n    });\n    handleFormComplete(finalAnswers);\n    return;\n  }\n  State.update({\n    step: state.step + 1,\n    form: {\n      ...state.form,\n      ...value,\n    },\n  });\n};\n\nfunction handleFormComplete(value) {\n  Social.set({\n    name: value.account.replaceAll(\".sputnik-dao.near\", \"\"),\n    // encode args to base64\n    args: {\n      description:\n        typeof value.description === \"string\" ? value.description : \"\",\n      policy: {\n        roles: value.policy.roles,\n        default_vote_policy: {\n          quorum: \"0\",\n          threshold: [1, 2],\n        },\n        proposal_bond: \"100000000000000000000000\",\n        proposal_period: \"604800000000000\",\n      },\n      config: {\n        description:\n          typeof value.description === \"string\" ? value.description : \"\",\n        account: value.account,\n        metadata: {\n          links: Array.isArray(value.links) ? value.links : [],\n          backgroundImage:\n            typeof value.coverImage === \"string\" ? value.coverImage : \"\",\n          image:\n            typeof value.profileImage === \"string\" ? value.profileImage : \"\",\n          name: typeof value.name === \"string\" ? value.name : \"\",\n        },\n      },\n    },\n  });\n}\n\nconst steps = [\n  {\n    title: \"About\",\n    active: state.step === 0,\n    icon: state.step > 0 ? <i className=\"bi bi-check2\"></i> : undefined,\n    className: state.step > 0 ? \"active-outline\" : undefined,\n  },\n  {\n    title: \"Links\",\n    active: state.step === 1,\n    icon: state.step > 1 ? <i className=\"bi bi-check2\"></i> : undefined,\n    className: state.step > 1 ? \"active-outline\" : undefined,\n  },\n  {\n    title: \"Policy\",\n    active: state.step === 2,\n    icon: state.step > 2 ? <i className=\"bi bi-check2\"></i> : undefined,\n    className: state.step > 2 ? \"active-outline\" : undefined,\n  },\n  {\n    title: \"Members\",\n    active: state.step === 3,\n    icon: state.step > 3 ? <i className=\"bi bi-check2\"></i> : undefined,\n    className: state.step > 3 ? \"active-outline\" : undefined,\n  },\n  {\n    title: \"Roles\",\n    active: state.step === 4,\n    icon: state.step > 4 ? <i className=\"bi bi-check2\"></i> : undefined,\n    className: state.step > 4 ? \"active-outline\" : undefined,\n  },\n];\n\nreturn (\n  <>\n    <h1 className=\"h3 fw-bold mb-4\">create a group</h1>\n    <Widget\n      src={`nearui.near/widget/Navigation.Steps`}\n      props={{\n        steps: steps,\n        onClick: (i) => {\n          if (i > state.step) return;\n          State.update({\n            step: i,\n          });\n        },\n      }}\n    />\n    <Widget\n      src={`hack.near/widget/CreateGroup.Step${state.step + 1}`}\n      props={{\n        formState: state.form,\n        onComplete: handleStepComplete,\n        errors: state.errors,\n        renderFooter: (stepState, otherProps) => (\n          <Widget\n            src={`hack.near/widget/CreateGroup.Footer`}\n            props={{\n              isLast: state.step >= steps.length - 1,\n              hasPrevious: state.step > 0,\n              onNext: () => {\n                handleStepComplete(stepState);\n              },\n              onPrevious: () => {\n                State.update({\n                  step: state.step - 1,\n                });\n              },\n              onReset: () => {\n                State.update({\n                  step: 0,\n                  form: initialFormState,\n                  errors: null,\n                });\n              },\n              ...otherProps,\n            }}\n          />\n        ),\n      }}\n    />\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/hack.near/widget/group.creator", "fact_widget_deployments_id": "feefed2d7cac884f171ae1396522e47d", "inserted_timestamp": "2023-09-07T22:16:20.935Z", "modified_timestamp": "2023-09-07T22:16:20.935Z", "__row_index": 0}