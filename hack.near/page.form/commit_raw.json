{"tx_hash": "ELuqXWT624cqNYuJqkW362ByTYu3xbbdB1FfyifCXVh8", "action_id_social": "4zbqdsmQQLdMge3d9W3AkoE6c9hPR3XuH3AqY7kSApyP-0-widget", "block_id": 97146395, "block_timestamp": "2023-07-23T12:54:29.167Z", "signer_id": "hack.near", "widget_name": "page.form", "source_code": "if (!context.accountId) {\n  return (\n    <Widget\n      src=\"nearhorizon.near/widget/InfoSegment\"\n      props={{\n        title: \"Not logged in!\",\n        description: \"Connect a NEAR account to create a new page.\",\n      }}\n    />\n  );\n}\n\nconst daos = Near.view(\"sputnik-dao.near\", \"get_dao_list\");\n\nif (daos === null) {\n  return \"Loading...\";\n}\n\nconst groups = [\n  {\n    name: \"council\",\n    slug: \"council\",\n    kind: {\n      Group: [context.accountId],\n    },\n    permissions: [\n      \"*:Finalize\",\n      \"policy:AddProposal\",\n      \"add_bounty:AddProposal\",\n      \"bounty_done:AddProposal\",\n      \"transfer:AddProposal\",\n      \"vote:AddProposal\",\n      \"remove_member_from_role:AddProposal\",\n      \"add_member_to_role:AddProposal\",\n      \"config:AddProposal\",\n      \"call:AddProposal\",\n      \"upgrade_remote:AddProposal\",\n      \"upgrade_self:AddProposal\",\n      \"set_vote_token:AddProposal\",\n      \"policy:VoteApprove\",\n      \"policy:VoteReject\",\n      \"policy:VoteRemove\",\n      \"add_bounty:VoteApprove\",\n      \"add_bounty:VoteReject\",\n      \"add_bounty:VoteRemove\",\n      \"bounty_done:VoteApprove\",\n      \"bounty_done:VoteReject\",\n      \"bounty_done:VoteRemove\",\n      \"transfer:VoteApprove\",\n      \"transfer:VoteReject\",\n      \"transfer:VoteRemove\",\n      \"vote:VoteApprove\",\n      \"vote:VoteReject\",\n      \"vote:VoteRemove\",\n      \"remove_member_from_role:VoteApprove\",\n      \"remove_member_from_role:VoteReject\",\n      \"remove_member_from_role:VoteRemove\",\n      \"add_member_to_role:VoteApprove\",\n      \"add_member_to_role:VoteReject\",\n      \"add_member_to_role:VoteRemove\",\n      \"call:VoteApprove\",\n      \"call:VoteReject\",\n      \"call:VoteRemove\",\n      \"config:VoteApprove\",\n      \"config:VoteReject\",\n      \"config:VoteRemove\",\n      \"set_vote_token:VoteApprove\",\n      \"set_vote_token:VoteReject\",\n      \"set_vote_token:VoteRemove\",\n      \"upgrade_self:VoteApprove\",\n      \"upgrade_self:VoteReject\",\n      \"upgrade_self:VoteRemove\",\n      \"upgrade_remote:VoteApprove\",\n      \"upgrade_remote:VoteReject\",\n      \"upgrade_remote:VoteRemove\",\n    ],\n    vote_policy: {},\n  },\n  {\n    name: \"all\",\n    slug: \"all\",\n    kind: \"Everyone\",\n    permissions: [\n      \"policy:AddProposal\",\n      \"add_bounty:AddProposal\",\n      \"bounty_done:AddProposal\",\n      \"transfer:AddProposal\",\n      \"vote:AddProposal\",\n      \"remove_member_from_role:AddProposal\",\n      \"add_member_to_role:AddProposal\",\n      \"config:AddProposal\",\n      \"call:AddProposal\",\n      \"upgrade_remote:AddProposal\",\n      \"upgrade_self:AddProposal\",\n      \"set_vote_token:AddProposal\",\n      \"vote:VoteApprove\",\n      \"vote:VoteReject\",\n      \"vote:VoteRemove\",\n    ],\n    vote_policy: {},\n  },\n];\n\nState.init({\n  name: \"\",\n  nameError: \"\",\n  description: \"\",\n  descriptionError: \"\",\n  tags: [],\n  tagsError: \"\",\n  isValid: false,\n  isAvailable: true,\n  args: {\n    config: {\n      name: \"\",\n      purpose: \"\",\n      metadata: \"\",\n    },\n    policy: {\n      roles: groups,\n      default_vote_policy: {\n        weight_kind: \"RoleWeight\",\n        quorum: \"0\",\n        threshold: [1, 2],\n      },\n      proposal_bond: \"100000000000000000000000\",\n      proposal_period: \"604800000000000\",\n      bounty_bond: \"100000000000000000000000\",\n      bounty_forgiveness_period: \"604800000000000\",\n    },\n    purpose: \"\",\n    bond: \"100000000000000000000000\",\n    vote_period: \"604800000000000\",\n    grace_period: \"86400000000000\",\n  },\n});\n\nif (!state.accountsWithPermissionsIsFetched) {\n  Near.asyncView(\n    \"social.near\",\n    \"debug_get_permissions\",\n    { account_id: context.accountId },\n    \"final\",\n    false\n  ).then((data) =>\n    State.update({\n      accountsWithPermissions: data\n        .map(([info]) => info)\n        .filter((info) => \"AccountId\" in info)\n        .map(({ AccountId }) => AccountId),\n      accountsWithPermissionsIsFetched: true,\n    })\n  );\n}\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  gap: 3em;\n  padding-bottom: 3em;\n`;\n\nconst Header = styled.h1`\n  font-style: normal;\n  font-weight: 700;\n  font-size: 2em;\n  line-height: 1.4em;\n  text-align: center;\n  color: #000000;\n`;\n\nconst SubHeader = styled.h2`\n  font-style: normal;\n  font-weight: 400;\n  font-size: 0.95em;\n  line-height: 1.25em;\n  text-align: center;\n  color: #101828;\n`;\n\nconst Form = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: flex-start;\n  width: 60%;\n  gap: 1em;\n`;\n\nconst FormHeader = styled.h3`\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: row;\n  align-items: flex-start;\n  padding: 0px 0px 0.5em;\n  border-bottom: 1px solid #eceef0;\n  font-style: normal;\n  font-weight: 700;\n  font-size: 1.125em;\n  line-height: 1.25em;\n  color: #000000;\n  width: 100%;\n`;\n\nconst FormFooter = styled.div`\n  display: flex;\n  flex-direction: row-reverse;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n`;\n\nconst slideDown = styled.keyframes`\n  from {\n    height: 0;\n  }\n  to {\n    height: var(--radix-collapsible-content-height);\n  }\n`;\n\nconst slideUp = styled.keyframes`\n  from {\n    height: var(--radix-collapsible-content-height);\n  }\n  to {\n    height: 0;\n  }\n`;\n\nconst Hidable = styled(\"Collapsible.Content\")`\n  overflow: hidden;\n\n  &[data-state=\"open\"] {\n    animation: ${slideDown} 0.3s ease-in-out;\n  }\n\n  &[data-state=\"closed\"] {\n    animation: ${slideUp} 0.3s ease-in-out;\n  }\n`;\n\nconst Label = styled.label`\n  align-items: flex-start;\n  justify-content: flex-start;\n  font-style: normal;\n  font-weight: 600;\n  font-size: 0.95em;\n  line-height: 1.25em;\n  color: #344054;\n`;\n\nconst onChangeName = (name) => {\n  State.update({\n    name,\n  });\n};\n\nconst checkValidity = (name) => {\n  if (name.length > 2) {\n    return State.update({ isValid: true });\n  }\n};\n\nconst validName = checkValidity(state.name);\n\nconst daoId = state.name + \".sputnik-dao.near\";\n\nconst policy = Near.view(daoId, \"get_policy\");\n\nconst deposit = policy.proposal_bond;\n\nconst checkAvailability = (daos) => {\n  if (daos.indexOf(daoId) !== -1) {\n    return State.update({ isAvailable: false });\n  }\n};\n\nconst availableName = checkAvailability(daos);\n\nconst dao_args = Buffer.from(JSON.stringify(state.args), \"utf-8\").toString(\n  \"base64\"\n);\n\nconst handleCreate = () => {\n  Near.call([\n    {\n      contractName: \"sputnik-dao.near\",\n      methodName: \"create\",\n      args: {\n        name: state.name,\n        args: dao_args,\n      },\n      deposit: \"7000000000000000000000000\",\n      gas: \"2350000000000000\",\n    },\n  ]);\n};\n\nconst pageData = {\n  data: {\n    logo: {\n      ipfs_cid: \"bafkreibe7xxkxhryvhonkwltubgfus6mfpinzaxwwfooi63w5etmrd7mcm\",\n    },\n    background: {\n      ipfs_cid: \"bafkreifz7ipx5e3pb7dfy7lxb7qd5tjzxkosb4c5a5n7fytovvpg75g7u4\",\n    },\n    name: \"Welcome Home\",\n    description: {\n      content:\n        \"An International realty platform empowering marginalized communities to own real world assets one piece at a time.\",\n    },\n    tabs: [\n      {\n        title: \"Overview\",\n        route: \"efiz.near/widget/overview\",\n      },\n      {\n        defaultActive: \"false\",\n        route: \"efiz.near/thing/welcome-home.feed\",\n        title: \"Social\",\n      },\n      {\n        route: \"efiz.near/widget/every.event\",\n        title: \"Events\",\n      },\n    ],\n  },\n  template: {\n    src: \"efiz.near/widget/gigs-board.entity.community.header\",\n  },\n  type: \"efiz.near/type/community\",\n};\n\nreturn (\n  <Container>\n    <Header>page maker</Header>\n    <Form>\n      <FormHeader>input details below</FormHeader>\n      <Label>name</Label>\n      <input\n        label=\"name\"\n        placeholder=\"example\"\n        type=\"text\"\n        value={state.name}\n        onChange={(e) => onChangeName(e.target.value)}\n      ></input>\n      {validName ? (\n        <div>\n          {availableName ? (\n            <p className=\"text-secondary\">occupied</p>\n          ) : (\n            <p className=\"text-success\">available</p>\n          )}\n        </div>\n      ) : (\n        <div>\n          {state.name ? (\n            <p className=\"text-secondary\">not enough characters</p>\n          ) : (\n            \"\"\n          )}\n        </div>\n      )}\n      {validName && (\n        <>\n          <Widget\n            src=\"hack.near/widget/form.select\"\n            props={{\n              label: \"tags\",\n              placeholder: \"dev\",\n              options: [\n                { name: \"dev\" },\n                { name: \"edu\" },\n                { name: \"art\" },\n                { name: \"sci\" },\n                { name: \"gov\" },\n              ],\n              value: state.tags,\n              onChange: (tags) =>\n                State.update({\n                  tags: tags.map(({ name }) => ({\n                    name: name.trim().replaceAll(/\\s+/g, \"-\"),\n                  })),\n                }),\n            }}\n          />\n          <Widget\n            src=\"hack.near/widget/form.text.area\"\n            props={{\n              label: \"description\",\n              placeholder: \"about\",\n              value: state.description,\n              onChange: (description) => State.update({ description }),\n              validate: () => {\n                if (state.description.length > 500) {\n                  State.update({\n                    descriptionError:\n                      \"Description must be less than 500 characters\",\n                  });\n                  return;\n                }\n\n                State.update({ descriptionError: \"\" });\n              },\n              error: state.descriptionError,\n            }}\n          />\n        </>\n      )}\n      {validName && (\n        <FormFooter>\n          <Widget\n            src=\"nearhorizon.near/widget/Buttons.Green\"\n            props={{\n              onClick: () => {\n                const data = {\n                  [context.accountId]: {\n                    page: {\n                      template: {\n                        src: \"efiz.near/widget/gigs-board.entity.community.header\",\n                      },\n                      type: \"efiz.near/type/community\",\n                      name: state.name,\n                      ...(state.description\n                        ? { description: state.description }\n                        : {}),\n                      ...(state.tags.length\n                        ? {\n                            tags: state.tags.reduce(\n                              (acc, { name }) =>\n                                Object.assign(acc, { [name]: \"\" }),\n                              {}\n                            ),\n                          }\n                        : {}),\n                    },\n                  },\n                };\n                const transactions = [\n                  {\n                    contractName: \"social.near\",\n                    methodName: \"set\",\n                    deposit,\n                    args: { data },\n                  },\n                  {\n                    contractName: \"sputnik-dao.near\",\n                    methodName: \"create\",\n                    args: {\n                      name: state.name,\n                      args: dao_args,\n                    },\n                    deposit: \"7000000000000000000000000\",\n                    gas: \"235000000000000\",\n                  },\n                ];\n                Near.call(transactions);\n              },\n              text: (\n                <>\n                  <svg\n                    width=\"17\"\n                    height=\"18\"\n                    viewBox=\"0 0 17 18\"\n                    fill=\"none\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                  >\n                    <path\n                      d=\"M2.875 16.5V12.75M2.875 5.25V1.5M1 3.375H4.75M1 14.625H4.75M9.25 2.25L7.94937 5.63165C7.73786 6.18157 7.6321 6.45653 7.46765 6.68781C7.32189 6.8928 7.1428 7.07189 6.93781 7.21765C6.70653 7.3821 6.43157 7.48786 5.88165 7.69937L2.5 9L5.88165 10.3006C6.43157 10.5121 6.70653 10.6179 6.93781 10.7824C7.1428 10.9281 7.32189 11.1072 7.46765 11.3122C7.6321 11.5435 7.73786 11.8184 7.94937 12.3684L9.25 15.75L10.5506 12.3684C10.7621 11.8184 10.8679 11.5435 11.0324 11.3122C11.1781 11.1072 11.3572 10.9281 11.5622 10.7824C11.7935 10.6179 12.0684 10.5121 12.6184 10.3006L16 9L12.6184 7.69937C12.0684 7.48786 11.7935 7.3821 11.5622 7.21765C11.3572 7.07189 11.1781 6.8928 11.0324 6.68781C10.8679 6.45653 10.7621 6.18157 10.5506 5.63165L9.25 2.25Z\"\n                      stroke=\"#11181C\"\n                      stroke-width=\"1.66667\"\n                      stroke-linecap=\"round\"\n                      stroke-linejoin=\"round\"\n                    />\n                  </svg>\n                  create\n                </>\n              ),\n            }}\n          />\n        </FormFooter>\n      )}\n    </Form>\n  </Container>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/hack.near/widget/page.form", "fact_widget_deployments_id": "2443d2fa3ec48b321ef45ec7d1a9666c", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}