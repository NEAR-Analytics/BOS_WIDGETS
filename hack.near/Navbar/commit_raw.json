{"tx_hash": "Cye4bycqcBniyAiqTESXH5D7uXUW19MTEzcc9yYQXWqt", "action_id_social": "GCrA6CTYHgp4y4AK3nxwZ2vPNehmykAsSJ3zJbTviQVE-0-widget", "block_id": 114907164, "block_timestamp": "2024-03-17T19:03:14.878Z", "signer_id": "hack.near", "widget_name": "Navbar", "source_code": "const creatorId = props.creatorId || \"hack.near\";\nconst appId = props.appId || \"app\";\nconst pageId = props.pageId || \"home\";\n\nconst routes = props.routes ?? {\n  home: {\n    path: \"hack.near/widget/page.index\",\n    blockHeight: \"final\",\n    init: {\n      name: \"Home\",\n    },\n  },\n  social: {\n    path: \"hack.near/widget/page.feed\",\n    blockHeight: \"final\",\n    init: {\n      name: \"Social\",\n    },\n  },\n  docs: {\n    path: \"hack.near/widget/page.docs\",\n    blockHeight: \"final\",\n    init: {\n      name: \"Docs\",\n    },\n  },\n};\n\nconst StyledNavbar = styled.div`\n  width: 64px;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  padding: 24px 48px;\n  width: 100%;\n\n  background-color: #0b0c14;\n  border-bottom: 1px solid var(--stroke-color, rgba(255, 255, 255, 0.2));\n\n  @media screen and (max-width: 768px) {\n    padding: 24px;\n  }\n`;\n\nconst ButtonGroup = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  gap: 0.5rem;\n\n  @media screen and (max-width: 768px) {\n    flex-direction: column;\n    width: 100%;\n\n    a {\n      display: flex;\n    }\n  }\n`;\n\nconst DesktopNavigation = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n\n  @media screen and (max-width: 768px) {\n    display: none;\n  }\n`;\n\nconst MobileNavigation = styled.div`\n  display: none;\n\n  @media screen and (max-width: 768px) {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-between;\n    width: 100%;\n  }\n`;\n\nconst { href } = VM.require(\"buildhub.near/widget/lib.url\") || {\n  href: () => {},\n};\n\nconst NavLink = ({ to, children }) => (\n  <Link\n    key={to}\n    to={href({\n      widgetSrc: `${creatorId}/widget/${appId}`,\n      params: {\n        page: to,\n      },\n    })}\n  >\n    {children}\n  </Link>\n);\n\nconst [showMenu, setShowMenu] = useState(false);\nconst toggleDropdown = () => setShowMenu(!showMenu);\n\nconst SignInOrConnect = () => (\n  <>\n    {context.accountId ? (\n      <Widget\n        src=\"hack.near/widget/ConnectButton\"\n        props={{ accountId: \"every.near\" }}\n      />\n    ) : (\n      <button disabled={!context.accountId}>Signed Out</button>\n    )}\n  </>\n);\n\nconst Navbar = ({ page, ...props }) => (\n  <StyledNavbar>\n    <div className=\"d-flex align-items-center justify-content-between w-100\">\n      <DesktopNavigation className=\"container-xl\">\n        <Link\n          style={{ flex: 1 }}\n          to={href({\n            widgetSrc: `${creatorId}/widget/${appId}`,\n            params: {\n              page: pageId,\n            },\n          })}\n        >\n          <Widget\n            src=\"mob.near/widget/Image\"\n            props={{\n              image: props.image,\n              style: { width: \"39px\" },\n              className: \"me-3\",\n              fallbackUrl:\n                \"https://builders.mypinata.cloud/ipfs/QmTyDir9Myoid84HVgUDLwirMdb7CkD7GxvGhrBPo6ruLE\",\n            }}\n          />\n        </Link>\n        <ButtonGroup style={{ flex: 1 }}>\n          {routes &&\n            (Object.keys(routes) || []).map((k) => {\n              const route = routes[k];\n              if (route.hide) {\n                return null;\n              }\n              return (\n                <NavLink to={k}>\n                  <button key={k} className=\"btn btn-sm btn-secondary\">\n                    {route.init.icon && <i className={route.init.icon}></i>}\n                    {route.init.name}\n                  </button>\n                </NavLink>\n              );\n            })}\n        </ButtonGroup>\n\n        <div\n          style={{\n            flex: 1,\n            display: \"flex\",\n            justifyContent: \"flex-end\",\n            alignItems: \"center\",\n            gap: \"0.5rem\",\n          }}\n        >\n          <SignInOrConnect />\n        </div>\n      </DesktopNavigation>\n      <MobileNavigation>\n        <Link\n          to={href({\n            widgetSrc: `${creatorId}/widget/${appId}`,\n            params: {\n              page: \"home\",\n            },\n          })}\n        >\n          <img\n            style={{ width: 85, objectFit: \"cover\" }}\n            src=\"https://ipfs.near.social/ipfs/bafkreihbwho3qfvnu4yss3eh5jrx6uxhrlzdgtdjyzyjrpa6odro6wdxya\"\n            alt=\"Build DAO\"\n          />\n        </Link>\n        <button\n          type=\"icon\"\n          variant=\"outline\"\n          className=\"rounded-2\"\n          onClick={toggleDropdown}\n        >\n          <i style={{ fontSize: 24 }} className=\"bi bi-list\"></i>\n        </button>\n      </MobileNavigation>\n    </div>\n    <MobileNavigation>\n      {showMenu && (\n        <div className=\"text-white w-100 d-flex flex-column gap-3 mt-3\">\n          <ButtonGroup className=\"align-items-stretch\">\n            {routes &&\n              (Object.keys(routes) || []).map((k) => {\n                const route = routes[k];\n                if (route.hide) {\n                  return null;\n                }\n                return (\n                  <NavLink to={k} style={{ textDecoration: \"none\" }}>\n                    <button\n                      key={k}\n                      className=\"btn btn-sm btn-secondary w-100\"\n                      onClick={() => setShowMenu(false)}\n                    >\n                      {route.init.icon && <i className={route.init.icon}></i>}\n                      {route.init.name}\n                    </button>\n                  </NavLink>\n                );\n              })}\n          </ButtonGroup>\n          <div className=\"d-flex w-100 align-items-center gap-3 justify-content-center\">\n            <SignInOrConnect />\n          </div>\n        </div>\n      )}\n    </MobileNavigation>\n  </StyledNavbar>\n);\n\nreturn <Navbar page={props.page} routes={props.routes} {...props} />;\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/hack.near/widget/Navbar", "fact_widget_deployments_id": "e9ad71c252a9be62526df602b6b8d93f", "inserted_timestamp": "2024-03-17T20:25:16.955Z", "modified_timestamp": "2024-03-17T20:25:16.955Z", "__row_index": 12}