{"tx_hash": "2vvTQKLQzdw2dQs7oYjM2dwPDFGWX48r9PexqnUbGD5L", "action_id_social": "DUDAC31e8kajfz2rxBwvdTVhDhHTdmzA5bYnqp1vXhs7-0-widget", "block_id": 114178886, "block_timestamp": "2024-03-06T02:58:52.128Z", "signer_id": "hack.near", "widget_name": "top.widgets.forked", "source_code": "const data = Social.get(\"*/widget/*/metadata/fork_of\", \"final\");\n\nconst process = (data) => {\n  let forkCount = {};\n  let forkers = {};\n\n  Object.entries(data).forEach(([account, widgets]) => {\n    Object.entries(widgets.widget).forEach(([widgetName, widgetInfo]) => {\n      const forkOf = widgetInfo.metadata.fork_of;\n      if (!forkCount[forkOf]) {\n        forkCount[forkOf] = 1;\n        forkers[forkOf] = [account];\n      } else {\n        forkCount[forkOf]++;\n        if (!forkers[forkOf].includes(account)) {\n          forkers[forkOf].push(account);\n        }\n      }\n    });\n  });\n\n  return Object.keys(forkCount)\n    .map((forkOf) => ({\n      widget: forkOf,\n      count: forkCount[forkOf],\n      forkers: forkers[forkOf],\n    }))\n    .filter((widget) => widget.count >= 2)\n    .sort((a, b) => b.count - a.count);\n};\n\nconst widgets = process(data);\n\nconst formatWidgetName = (widgetString) => {\n  const parts = widgetString.split(\"/\");\n  const widgetName = parts[2].split(\"@\")[0];\n  const creatorId = parts[0];\n  return (\n    <>\n      <a\n        href={`https://near.social/${creatorId}/widget/${widgetName}`}\n      >{`${widgetName}`}</a>\n      by\n      <Widget\n        src=\"mob.near/widget/N.ProfileLine\"\n        props={{ accountId: creatorId, hideAccountId: true }}\n      />\n    </>\n  );\n};\n\nconst formatWidgetSrc = (widgetString) => {\n  const parts = widgetString.split(\"/\");\n  const widgetName = parts[2].split(\"@\")[0];\n  const creatorId = parts[0];\n  return `${creatorId}/widget/${widgetName}`;\n};\n\nreturn (\n  <>\n    <div className=\"m-2\">\n      <h2>Most Forked Widgets</h2>\n      <h5>\n        via <a href=\"https://near.social/edit\">Near.Social</a> editor\n      </h5>\n      <hr />\n      {widgets.map((widget, index) => (\n        <div className=\"row mb-2\">\n          <div className=\"col\">\n            <p>{formatWidgetName(widget.widget)}</p>\n          </div>\n          <div className=\"col\">\n            <Widget\n              src=\"hack.near/widget/fork\"\n              props={{ src: formatWidgetSrc(widget.widget) }}\n            />\n            <span className=\"ms-2\">{widget.count}</span>\n            <Widget\n              src=\"hack.near/widget/ForkButton.Faces\"\n              props={{ forkers: widget.forkers, limit: 39 }}\n            />\n          </div>\n        </div>\n      ))}\n    </div>\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/hack.near/widget/top.widgets.forked", "fact_widget_deployments_id": "7a948bc12896396151fd984f20acde0b", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}