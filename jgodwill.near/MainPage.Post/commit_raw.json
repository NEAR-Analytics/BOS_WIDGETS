{"tx_hash": "GVFLhhoV7gb8fy8jDwzfBZdao1N8A56eg6isZuqFaibN", "action_id_social": "BQfdaCH916zxzNUzAVq9ZHH4KJ7WKhiAREBrwjF5sDBE-0-widget", "block_id": 97997143, "block_timestamp": "2023-08-03T17:51:58.139Z", "signer_id": "jgodwill.near", "widget_name": "MainPage.Post", "source_code": "const accountId = props.accountId;\nconst senderId = context.accountId;\nconst userProfile = Social.get(`${accountId}/profile/**`, \"final\");\nconst senderProfile = Social.get(`${senderId}/profile/**`, \"final\");\nconst blockHeight =\n  props.blockHeight === \"now\" ? \"now\" : parseInt(props.blockHeight);\nconst content =\n  props.content ??\n  JSON.parse(Social.get(`${accountId}/post/main`, blockHeight) ?? \"null\");\nconst subscribe = !!props.subscribe;\nconst raw = !!props.raw;\nconst sender = `${senderProfile.name || senderId.split(\".near\")[0]}`;\nconst nftDescription = content?.text ?? \"BOS minting powered by GenaDrop\";\n\nconst notifyAccountId = accountId;\nconst item = {\n  type: \"social\",\n  path: `${accountId}/post/main`,\n  blockHeight,\n};\n\nconsole.log(\"sender: \", sender);\n\nconst res = fetch(`https://api.near.social/time?blockHeight=${blockHeight}`);\nif (!res) {\n  return \"Loading\";\n}\nif (!res?.ok || res?.body === \"null\") {\n  return \"unknown\";\n}\n\nconst timeMs = parseFloat(res?.body);\n\nconst date = new Date(timeMs);\nconst postDate = `${date?.toLocaleDateString([], {\n  day: \"numeric\",\n  month: \"short\",\n  year: \"numeric\",\n})}`;\n// const formattedDate = formatDate(timeMs);\nconsole.log(\"post date\", postDate);\n\nconst hasImageInPost = content?.image;\nconsole.log(\"content\", content);\n\nconst link = `/mob.near/widget/MainPage.Post.Page?accountId=${accountId}&blockHeight=${blockHeight}`;\n\nState.update({\n  description: `${nftDescription.trim().slice(0, 140)}... \ud83d\udc96 from ${sender}`,\n  title: `${state?.profile?.name || accountId.split(\".near\")[0]} ${postDate}`,\n  profile: userProfile,\n  content: JSON.parse(\n    Social.get(`${accountId}/post/main`, blockHeight) ?? \"null\"\n  ),\n});\ncontent?.image?.ipfs_cid\n  ? State.update({\n      imageUrl: `https://ipfs.near.social/ipfs/${content?.image?.ipfs_cid}`,\n    })\n  : State.update({\n      imageUrl: content?.image?.url,\n    }) || fallbackUrl;\n\nconst nftMint = () => {\n  if (!hasImageInPost) {\n    return;\n  }\n  if (!accountId) {\n    console.log(\"Please login\"); // add share dogvwallet\n  } else if (!state.description) {\n    State.update({\n      showAlert: true,\n      toastMessage: \"Please enter a description for the NFT\",\n    });\n    setTimeout(() => {\n      State.update({\n        showAlert: false,\n      });\n    }, 3000);\n  } else {\n    const metadata = {\n      name: state.title,\n      description: state.description,\n      properties: [],\n      image: state.imageUrl,\n\n      //   image: `ipfs://${state.image.ipfs_cid}`,\n      //   image: `ipfs://${state.image.cid}`,\n      //   image: `ipfs://${state.imageCid}`,\n    };\n    console.log(\"come\", metadata);\n    asyncFetch(\"https://ipfs.near.social/add\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n      },\n      body: metadata,\n    }).then((res) => {\n      console.log(\"GO ON SOUN\", res);\n      const cid = res.body.cid;\n      const gas = 200000000000000;\n      const deposit = 10000000000000000000000;\n      Near.call([\n        {\n          contractName: \"nft.genadrop.near\",\n          methodName: \"nft_mint\",\n          args: {\n            token_id: `${Date.now()}`,\n            metadata: {\n              title: state.title,\n              description: state.description,\n              //   media: `https://ipfs.io/ipfs/${state.imageCid}`,\n              // media: `https://ipfs.io/ipfs/${state.image.cid}`,\n              media: state.imageUrl,\n\n              //   media: `https://ipfs.io/ipfs/${state.image.ipfs_cid}`,\n              reference: `ipfs://${cid}`,\n              //   reference: `ipfs://${state.cid}`,\n            },\n            receiver_id: accountId,\n          },\n          gas: gas,\n          deposit: deposit,\n        },\n      ]);\n    });\n  }\n};\n\nreturn (\n  <>\n    {state && (\n      <div className=\"border-bottom pt-3 pb-1\">\n        <Widget\n          src=\"jgodwill.near/widget/MainPage.Post.Header\"\n          props={{\n            accountId,\n            hasImageInPost,\n            blockHeight,\n            nftMint,\n            link,\n            postType: \"post\",\n            flagItem: item,\n          }}\n        />\n        <div className=\"mt-3 text-break\">\n          <Widget\n            src=\"mob.near/widget/MainPage.Post.Content\"\n            props={{ content, raw }}\n          />\n        </div>\n        {blockHeight !== \"now\" && (\n          <div className=\"mt-1 d-flex justify-content-between\">\n            <div className=\"me-4\">\n              <Widget\n                src=\"mob.near/widget/CommentButton\"\n                props={{\n                  onClick: () =>\n                    !state.showReply && State.update({ showReply: true }),\n                }}\n              />\n            </div>\n            <div className=\"me-4\">\n              <Widget\n                src=\"mob.near/widget/RepostButton\"\n                props={{\n                  notifyAccountId,\n                  item,\n                }}\n              />\n            </div>\n            <div className=\"me-4\">\n              <Widget\n                src=\"mob.near/widget/LikeButton\"\n                props={{\n                  notifyAccountId,\n                  item,\n                }}\n              />\n            </div>\n            <div>\n              <Widget\n                src=\"mob.near/widget/MainPage.Post.ShareButton\"\n                props={{ accountId, blockHeight, postType: \"post\" }}\n              />\n            </div>\n          </div>\n        )}\n        <div className=\"mt-3 ps-5\">\n          {state.showReply && (\n            <div className=\"mb-2\">\n              <Widget\n                src=\"mob.near/widget/MainPage.Comment.Compose\"\n                props={{\n                  notifyAccountId,\n                  item,\n                  onComment: () => State.update({ showReply: false }),\n                }}\n              />\n            </div>\n          )}\n          <Widget\n            src=\"mob.near/widget/MainPage.Comment.Feed\"\n            props={{\n              item,\n              highlightComment: props.highlightComment,\n              limit: props.commentsLimit,\n              subscribe,\n              raw,\n            }}\n          />\n        </div>\n      </div>\n    )}\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/jgodwill.near/widget/MainPage.Post", "fact_widget_deployments_id": "76ba1a6860e670c2139e8160fdbcd477", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 11}