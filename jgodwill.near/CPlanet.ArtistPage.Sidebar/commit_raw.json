{"tx_hash": "8rRSeUuz7mAiN5dSDXQTSS4e1ae85bDCyHYG6XkA5VAk", "action_id_social": "99GNjRszURfumfRRt3o7BXfuwjNNrf3Tr7GbBQADeKf3-0-widget", "block_id": 105291969, "block_timestamp": "2023-11-09T11:54:19.554Z", "signer_id": "jgodwill.near", "widget_name": "CPlanet.ArtistPage.Sidebar", "source_code": "State.init({\r\n  copiedShareUrl: false,\r\n  hasBeenFlagged: false,\r\n});\r\n\r\nconst accountId = props.accountId || \"jgodwill.near\";\r\nconst profile =\r\n  props.profile || Social.get(`${accountId}/profile/**`, \"final\") || {};\r\nconst profileUrl = `/near/widget/ProfilePage?accountId=${accountId}`;\r\n\r\nif (!accountId) {\r\n  return \"\";\r\n}\r\n\r\n// Profile Data:\r\nconst tags = Object.keys(profile.tags || {});\r\nconst viewingOwnAccount = accountId === context.accountId;\r\nconst accountUrl = `/near/widget/ProfilePage?accountId=${accountId}`;\r\nconst shareUrl = `https://near.org${accountUrl}`;\r\n\r\n// Follower Count:\r\nconst following = Social.keys(`${accountId}/graph/follow/*`, \"final\", {\r\n  return_type: \"BlockHeight\",\r\n  values_only: true,\r\n});\r\nconst followers = Social.keys(`*/graph/follow/${accountId}`, \"final\", {\r\n  return_type: \"BlockHeight\",\r\n  values_only: true,\r\n});\r\nconst followingCount = following\r\n  ? Object.keys(following[accountId].graph.follow || {}).length\r\n  : null;\r\nconst followersCount = followers ? Object.keys(followers || {}).length : null;\r\n\r\n// Account follows you:\r\nconst accountFollowsYouData = Social.keys(\r\n  `${accountId}/graph/follow/${context.accountId}`,\r\n  undefined,\r\n  {\r\n    values_only: true,\r\n  }\r\n);\r\nconst accountFollowsYou = Object.keys(accountFollowsYouData || {}).length > 0;\r\n\r\nconst contentModerationItem = {\r\n  type: \"social\",\r\n  path: profileUrl,\r\n  reportedBy: context.accountId,\r\n};\r\n\r\nconst optimisticallyHideItem = (message) => {\r\n  State.update({\r\n    hasBeenFlaggedOptimistic: true,\r\n    showToast: true,\r\n    flaggedMessage: message,\r\n  });\r\n};\r\nconst resolveHideItem = (message) => {\r\n  State.update({\r\n    hasBeenFlagged: true,\r\n    showToast: true,\r\n    flaggedMessage: message,\r\n  });\r\n};\r\nconst cancelHideItem = () => {\r\n  State.update({\r\n    hasBeenFlaggedOptimistic: false,\r\n    showToast: false,\r\n    flaggedMessage: { header: \"\", detail: \"\" },\r\n  });\r\n};\r\n\r\nconst Wrapper = styled.div`\r\n  display: grid;\r\n  gap: 40px;\r\n  position: relative;\r\n\r\n  .button {\r\n    display: inline-flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    gap: 8px;\r\n    padding: 8px 16px;\r\n    height: 32px;\r\n    border-radius: 100px;\r\n    font-weight: 600;\r\n    font-size: 12px;\r\n    line-height: 15px;\r\n    text-align: center;\r\n    cursor: pointer;\r\n    background: #fbfcfd;\r\n    border: 1px solid #d7dbdf;\r\n    color: #11181c !important;\r\n\r\n    &.button--primary {\r\n      width: 100%;\r\n      color: #006adc !important;\r\n\r\n      @media (max-width: 1024px) {\r\n        width: auto;\r\n      }\r\n    }\r\n\r\n    &:hover,\r\n    &:focus {\r\n      background: #ecedee;\r\n      text-decoration: none;\r\n      outline: none;\r\n    }\r\n\r\n    i {\r\n      color: #7e868c;\r\n    }\r\n\r\n    .bi-16 {\r\n      font-size: 16px;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 900px) {\r\n    gap: 24px;\r\n  }\r\n`;\r\n\r\nconst Section = styled.div`\r\n  display: grid;\r\n  gap: 24px;\r\n`;\r\n\r\nconst Avatar = styled.div`\r\n  width: 133px;\r\n  height: 133px;\r\n  flex-shrink: 0;\r\n  border: 3px solid #fff;\r\n  overflow: hidden;\r\n  border-radius: 100%;\r\n  box-shadow: 0px 12px 16px rgba(16, 24, 40, 0.08),\r\n    0px 4px 6px rgba(16, 24, 40, 0.03);\r\n\r\n  img {\r\n    object-fit: cover;\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n\r\n  @media (max-width: 900px) {\r\n    width: 80px;\r\n    height: 80px;\r\n  }\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-weight: 600;\r\n  font-size: ${(p) => p.size || \"25px\"};\r\n  line-height: 1.2em;\r\n  color: #11181c;\r\n  margin: ${(p) => (p.margin ? \"0 0 24px\" : \"0\")};\r\n  overflow-wrap: anywhere;\r\n`;\r\n\r\nconst Text = styled.p`\r\n  margin: 0;\r\n  line-height: 1.5rem;\r\n  color: ${(p) => (p.bold ? \"#11181C\" : \"#687076\")} !important;\r\n  font-weight: ${(p) => (p.bold ? \"600\" : \"400\")};\r\n  font-size: ${(p) => (p.small ? \"12px\" : \"14px\")};\r\n  overflow: ${(p) => (p.ellipsis ? \"hidden\" : \"\")};\r\n  text-overflow: ${(p) => (p.ellipsis ? \"ellipsis\" : \"\")};\r\n  white-space: ${(p) => (p.ellipsis ? \"nowrap\" : \"\")};\r\n  overflow-wrap: anywhere;\r\n\r\n  b {\r\n    font-weight: 600;\r\n    color: #11181c;\r\n  }\r\n`;\r\n\r\nconst TextLink = styled.a`\r\n  display: block;\r\n  margin: 0;\r\n  font-size: 14px;\r\n  line-height: 20px;\r\n  color: #11181c !important;\r\n  font-weight: 400;\r\n  font-size: 14px;\r\n  white-space: nowrap;\r\n  outline: none;\r\n  overflow-x: hidden;\r\n  text-overflow: ellipsis;\r\n\r\n  &:focus,\r\n  &:hover {\r\n    text-decoration: underline;\r\n  }\r\n\r\n  i {\r\n    color: #7e868c;\r\n    margin-right: 8px;\r\n  }\r\n`;\r\n\r\nconst TextBadge = styled.p`\r\n  display: inline-block;\r\n  margin: 0;\r\n  font-size: 10px;\r\n  line-height: 1.1rem;\r\n  background: #687076;\r\n  color: #fff;\r\n  font-weight: 600;\r\n  white-space: nowrap;\r\n  padding: 0 6px;\r\n  border-radius: 3px;\r\n`;\r\n\r\nconst Actions = styled.div`\r\n  display: flex;\r\n  gap: 6px;\r\n`;\r\n\r\nconst Stats = styled.div`\r\n  display: flex;\r\n  gap: 24px;\r\n`;\r\n\r\nconst SocialLinks = styled.div`\r\n  display: grid;\r\n  gap: 9px;\r\n`;\r\n\r\nconst FollowButtonWrapper = styled.div`\r\n  flex: 1 0 auto;\r\n  div,\r\n  button {\r\n    width: 100%;\r\n  }\r\n  @media (max-width: 1024px) {\r\n    flex: 0 0 auto;\r\n    div,\r\n    button {\r\n      width: auto;\r\n    }\r\n  }\r\n`;\r\n\r\nreturn (\r\n  <Wrapper>\r\n    <Avatar>\r\n      <Widget\r\n        src=\"mob.near/widget/Image\"\r\n        props={{\r\n          image: profile.image,\r\n          alt: profile.name,\r\n          fallbackUrl:\r\n            \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRub7hFLkStCvZiaSeiUGznP4uzqPPcepghhg&usqp=CAU\",\r\n        }}\r\n      />\r\n    </Avatar>\r\n\r\n    <Section>\r\n      <div className=\"d-flex align-items-start justify-content-between\">\r\n        <div>\r\n          <Title>{profile.name || accountId}</Title>\r\n          <Text>@{accountId}</Text>\r\n\r\n          {accountFollowsYou && <TextBadge>Follows You</TextBadge>}\r\n        </div>\r\n        {accountId !== context.accountId && (\r\n          <>\r\n            {state.showToast && (\r\n              <Widget\r\n                src={`near/widget/DIG.Toast`}\r\n                props={{\r\n                  type: \"info\",\r\n                  title: state.flaggedMessage.header,\r\n                  description: state.flaggedMessage.detail,\r\n                  open: state.showToast,\r\n                  onOpenChange: () => {\r\n                    State.update({ showToast: false });\r\n                  },\r\n                  duration: 5000,\r\n                }}\r\n              />\r\n            )}\r\n            <Widget\r\n              src=\"near/widget/Posts.Menu\"\r\n              props={{\r\n                accountId: accountId,\r\n                parentFunctions: {\r\n                  optimisticallyHideItem,\r\n                  resolveHideItem,\r\n                  cancelHideItem,\r\n                },\r\n              }}\r\n            />\r\n          </>\r\n        )}\r\n      </div>\r\n\r\n      <Actions>\r\n        {viewingOwnAccount ? (\r\n          <Link\r\n            className=\"button button--primary\"\r\n            href=\"/near/widget/ProfileEditor\"\r\n          >\r\n            <i className=\"bi bi-pencil\"></i>\r\n            Edit Profile\r\n          </Link>\r\n        ) : context.accountId ? (\r\n          <>\r\n            <FollowButtonWrapper>\r\n              <Widget\r\n                src=\"near/widget/FollowButton\"\r\n                props={{\r\n                  accountId,\r\n                }}\r\n              />\r\n            </FollowButtonWrapper>\r\n\r\n            <Widget\r\n              src=\"near/widget/PokeButton\"\r\n              props={{\r\n                accountId,\r\n              }}\r\n            />\r\n          </>\r\n        ) : (\r\n          <></>\r\n        )}\r\n\r\n        <OverlayTrigger\r\n          placement=\"top\"\r\n          overlay={<Tooltip>Copy URL to clipboard</Tooltip>}\r\n        >\r\n          <button\r\n            className=\"button\"\r\n            type=\"button\"\r\n            onMouseLeave={() => {\r\n              State.update({ copiedShareUrl: false });\r\n            }}\r\n            onClick={() => {\r\n              clipboard.writeText(shareUrl).then(() => {\r\n                State.update({ copiedShareUrl: true });\r\n              });\r\n            }}\r\n          >\r\n            {state.copiedShareUrl ? (\r\n              <i className=\"bi-16 bi bi-check\"></i>\r\n            ) : (\r\n              <i className=\"bi-16 bi-link-45deg\"></i>\r\n            )}\r\n            Share\r\n          </button>\r\n        </OverlayTrigger>\r\n      </Actions>\r\n    </Section>\r\n\r\n    {tags.length > 0 && (\r\n      <Section>\r\n        <Widget\r\n          src=\"near/widget/Tags\"\r\n          props={{\r\n            tags,\r\n          }}\r\n        />\r\n      </Section>\r\n    )}\r\n\r\n    <Section>\r\n      <Stats>\r\n        <TextLink href={`${accountUrl}&tab=following`}>\r\n          <b bold as=\"span\">\r\n            {followingCount === null ? \"--\" : followingCount}\r\n          </b>{\" \"}\r\n          Following\r\n        </TextLink>\r\n        <TextLink href={`${accountUrl}&tab=followers`}>\r\n          <b>{followersCount === null ? \"--\" : followersCount}</b> Followers\r\n        </TextLink>\r\n      </Stats>\r\n    </Section>\r\n\r\n    {profile.linktree && (\r\n      <Section>\r\n        <SocialLinks>\r\n          {profile.linktree.website && (\r\n            <TextLink\r\n              href={`https://${profile.linktree.website}`}\r\n              target=\"_blank\"\r\n            >\r\n              <i className=\"bi bi-globe\"></i> {profile.linktree.website}\r\n            </TextLink>\r\n          )}\r\n\r\n          {profile.linktree.github && (\r\n            <TextLink\r\n              href={`https://github.com/${profile.linktree.github}`}\r\n              target=\"_blank\"\r\n            >\r\n              <i className=\"bi bi-github\"></i> {profile.linktree.github}\r\n            </TextLink>\r\n          )}\r\n\r\n          {profile.linktree.twitter && (\r\n            <TextLink\r\n              href={`https://twitter.com/${profile.linktree.twitter}`}\r\n              target=\"_blank\"\r\n            >\r\n              <i className=\"bi bi-twitter\"></i> {profile.linktree.twitter}\r\n            </TextLink>\r\n          )}\r\n\r\n          {profile.linktree.telegram && (\r\n            <TextLink\r\n              href={`https://t.me/${profile.linktree.telegram}`}\r\n              target=\"_blank\"\r\n            >\r\n              <i className=\"bi bi-telegram\"></i> {profile.linktree.telegram}\r\n            </TextLink>\r\n          )}\r\n        </SocialLinks>\r\n      </Section>\r\n    )}\r\n  </Wrapper>\r\n);\r\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/jgodwill.near/widget/CPlanet.ArtistPage.Sidebar", "fact_widget_deployments_id": "f119ef0139921a076148077bb2e53f12", "inserted_timestamp": "2023-11-09T13:48:01.298Z", "modified_timestamp": "2023-11-09T13:48:01.298Z", "__row_index": 0}