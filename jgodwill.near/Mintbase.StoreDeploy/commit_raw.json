{"tx_hash": "CVSsxFttjMitwT9V7PWCiv2XND2gojDfzMHCYrMD66V6", "action_id_social": "3CVh9bA2VBTxCUT1FZyXVCSx971KezrYo2bDujhtFsQT-0-widget", "block_id": 103610526, "block_timestamp": "2023-10-17T21:22:02.995Z", "signer_id": "jgodwill.near", "widget_name": "Mintbase.StoreDeploy", "source_code": "const accountId = context.accountId;\n\nconst data = Social.keys(\"*/profile\", \"final\");\n\nif (!data) {\n  return \"Loading\";\n}\n\nState.init({\n  account: accountId,\n});\nconst accounts = Object.entries(data);\n\nconst allWidgets = [];\n\nfor (let i = 0; i < accounts.length; ++i) {\n  const accountId = accounts[i][0];\n  allWidgets.push(accountId);\n}\nconst onChangeAccount = (account) => {\n  State.update({\n    account: account[0],\n  });\n  fetchData(state.account);\n};\n\nconst Card = styled.div`\npadding: 1em;\nborder: 1px solid #e5e8eb;\ngap: 2em;\nmargin: 10px auto;\nborder-radius: .7em;\n& input{\n  display: block;\n  padding:.5em;\n  width:100%;\n  border: 1px solid #e5e8eb;\n  border-radius: 10px;\n  outline: none;\n  background: #f4f5f6;\n  color: #525c76;\n  :focus{\n  box-shadow:none;\n    border:1px solid #0d99ff;\n  }\n  &::placeholder {\n    color: palevioletred;\n  }\n  }\n  .soulbound{\n    display: flex;\n    justify-content: space-between;\n    width: 100%;\n  }\n`;\n\nfunction fetchData(accountAddress) {\n  if (!state.account) {\n    State.update({\n      account: accountId,\n    });\n  }\n  const response = fetch(\"https://graph.mintbase.xyz/mainnet\", {\n    method: \"POST\",\n    headers: {\n      \"mb-api-key\": \"anon\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      query: `query MyQuery {\n  nft_contracts(where: {owner_id: {_eq: \"nate.near\"}}) {\n    id\n  }\n}\n\n`,\n    }),\n  });\n\n  State.update({\n    nftContracts: response.body.data.nft_contracts,\n  });\n  console.log(\"running\", response);\n}\n\nfetchData(state.account);\n\n// console.log(\"response\", state.account);\nconst storeAddressChangeHandler = (storeAddress) => {\n  console.log(\"store address: \", storeAddress);\n  state.update({\n    storeAddress: storeAddress,\n  });\n};\nreturn (\n  <div>\n    <h2 className=\"text-center my-4\">\n      Enter a Near address to See the various Mintbase contracts under it\n    </h2>\n    <Card>\n      Near Address:\n      <Typeahead\n        id=\"async-example\"\n        className=\"type-ahead\"\n        isLoading={isLoading}\n        labelKey=\"search\"\n        minLength={1}\n        options={allWidgets}\n        onChange={(value) => onChangeAccount(value)}\n        placeholder={accountId}\n      />\n    </Card>\n    {state.nftContracts.length > 0 ? (\n      <Card>\n        <select onChange={(e) => storeAddressChangeHandler(e.target.value)}>\n          <option selected disabled>\n            Select a contract\n          </option>\n          {state.nftContracts.map((contract) => (\n            <option value={contract.id}>{contract.id}</option>\n          ))}\n        </select>\n      </Card>\n    ) : (\n      <p>No contracts found for {state.account}</p>\n    )}\n  </div>\n);\n", "metadata": {"platform": "jutsu.ai"}, "branch": {"draft": null}, "widget_modules_used": null, "widget_url": "https://near.social/#/jgodwill.near/widget/Mintbase.StoreDeploy", "fact_widget_deployments_id": "98586adc1cede4e1b90360d423ef8582", "inserted_timestamp": "2023-10-17T23:25:02.391Z", "modified_timestamp": "2023-10-17T23:25:02.391Z", "__row_index": 0}