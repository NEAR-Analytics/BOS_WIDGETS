{"tx_hash": "BsBKCadhCm6NLjL68Q481J2w9YgkqPYxPFCauNS4VmMD", "action_id_social": "FNcgPrSfJfBJqtKUG3UYrjXdCAMafq6WLwEAftuLQeDz-0-widget", "block_id": 103726897, "block_timestamp": "2023-10-19T10:35:51.342Z", "signer_id": "jgodwill.near", "widget_name": "Mintbase.StoreDeploy", "source_code": "const accountId = context.accountId;\n\nconst data = Social.keys(\"*/profile\", \"final\");\n\nif (!data) {\n  return \"Loading\";\n}\n\nState.init({\n  account: accountId,\n});\nconst accounts = Object.entries(data);\n\nconst allWidgets = [];\n\nfor (let i = 0; i < accounts.length; ++i) {\n  const accountId = accounts[i][0];\n  allWidgets.push(accountId);\n}\nconst onChangeAccount = (account) => {\n  State.update({\n    account: account[0],\n  });\n  fetchData(state.account);\n};\n\nconst Card = styled.div`\npadding: 1em;\nborder: 1px solid #e5e8eb;\ngap: 2em;\nmargin: 10px auto;\nborder-radius: .7em;\n`;\n\nconst Cards = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  width: 100%;\n  background: rgba(214, 214, 214, 0.2);\n  border-radius: 10px;\n  justify-content: center;\n  padding-top: 3em;\n  box-shadow: 0 0.05rem 0.05rem rgb(34 34 34 / 5%), 0 0.2rem 0.8rem rgb(34 34 34 / 8%);\n`;\nconst StoreCards = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  width: 100%;\n  background: rgba(214, 214, 214, 0.2);\n  border-radius: 10px;\n  justify-content: center;\n  gap: 1rem;\n  padding-top: 3em;\n  box-shadow: 0 0.05rem 0.05rem rgb(34 34 34 / 5%), 0 0.2rem 0.8rem rgb(34 34 34 / 8%);\n`;\n\nfunction fetchData(accountAddress) {\n  if (!state.account) {\n    State.update({\n      account: accountId,\n    });\n  }\n  const response = fetch(\"https://graph.mintbase.xyz/mainnet\", {\n    method: \"POST\",\n    headers: {\n      \"mb-api-key\": \"anon\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      query: `query MyQuery {\n    mb_store_minters(where: {minter_id: {_eq: \"${accountAddress}\"}}) {\n    id: nft_contract_id\n    nftContract: nft_contract {\n      name\n      icon\n      owner: owner_id\n    }\n  }\n  mb_store_minters_aggregate(\n    where: {minter_id: {_eq: \"${accountAddress}\"}}\n  ) {\n    aggregate {\n      count\n    }\n  }\n}\n`,\n    }),\n  });\n\n  State.update({\n    nftContracts: response.body.data.mb_store_minters,\n    nftContractsCount:\n      response.body.data.mb_store_minters_aggregate.aggregate.count,\n  });\n  console.log(\"count\", state.nftContractsCount);\n}\n\nconst nftContracts = state.nftContracts;\n\nconst seeContracts = () => {\n  nftContracts &&\n    nftContracts.map((contract) => {\n      console.log(contract.nftContract.icon);\n    });\n};\n\nseeContracts();\nfetchData(state.account);\n\n// console.log(\"response\", state.account);\nconst storeAddressChangeHandler = (storeAddress) => {\n  fetchStoreFrontData(storeAddress);\n  console.log(\"store address: \", storeAddress);\n  state.update({\n    storeAddress: storeAddress,\n  });\n};\nconst Search = styled.div`\nmargin-top: 12px;\n    // justify-content: center;\ndisplay: flex;\nwidth: 100%;\nflex-wrap: wrap;\ninput {\n    border-radius: 32px;\n    flex-shrink: 0;\n    height: 48px;\n    width: 100%;\n    background: #F8F8F8;\n    overflow: hidden;\n    color: #B0B0B0;\n    text-overflow: ellipsis;\n    font-family: Helvetica Neue;\n    font-size: 20px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: 148%; /* 29.6px */\n}\n`;\n\nconst CreateCard = styled.div`\npadding: 1em;\nborder: 2px dashed rgba(0,0,0,.3);\ndisplay: flex;\nalign-items: center;\njustify-content: center;\nalign-content: center;\ngap: 2em;\nmargin: 10px auto;\nborder-radius: .7em;\nheight: 293px;\nmax-width: 600px;\nwidth: 100%;\nbutton {\n    border: 1px solid black;\n    border-radius: 0;\n    color: white;\n    background: black;\n    text-align: center\n    display: flex;\n    padding: 7px 20px;\n    cursor: pointer;\n  }\n  button:disabled {\n    background: grey;\n    border: grey;\n    cursor: not-allowed;\n  }\n  button:hover {\n    background: white;\n    color: black;\n    border-color: black;\n  }\n`;\n\nconst Main = styled.div`\n*{\n  font-family: Helvetica Neue;\n  }\n  .count{\n    text-transform: uppercase;\n    font-weight: 500;\n    font-size: 1.5rem;\n  }\n`;\n\nconst s = state.nftContractsCount > 1 ? \"s\" : \"\";\n\nreturn (\n  <Main>\n    <Card>\n      Near Address:\n      <Search>\n        <Typeahead\n          id=\"async-example\"\n          className=\"type-ahead\"\n          isLoading={isLoading}\n          labelKey=\"search\"\n          minLength={1}\n          options={allWidgets}\n          onChange={(value) => onChangeAccount(value)}\n          placeholder={accountId}\n        />\n      </Search>\n    </Card>\n    {nftContracts.length > 0 ? (\n      <Cards>\n        <div className=\"count\">{`${state.nftContractsCount} Result${s}`}</div>\n        <StoreCards className=\"mx-24 md:mx-64 \">\n          {nftContracts &&\n            nftContracts.map((contract) => (\n              <Widget\n                src=\"jgodwill.near/widget/Mintbase.StoreCard\"\n                props={{ contract }}\n              />\n            ))}\n          <CreateCard>\n            <button>New Store</button>\n          </CreateCard>\n        </StoreCards>\n      </Cards>\n    ) : (\n      <div className=\"text-center my-4\">\n        <p>\ud83d\ude25 No stores found for {state.account}</p>\n      </div>\n    )}\n    {!nftContracts.length > 0 && (\n      <CreateCard>\n        <button>New Store</button>\n      </CreateCard>\n    )}\n  </Main>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/jgodwill.near/widget/Mintbase.StoreDeploy", "fact_widget_deployments_id": "f519d16505e8553b3498c5c2743f65cc", "inserted_timestamp": "2023-10-19T12:35:04.023Z", "modified_timestamp": "2023-10-19T12:35:04.023Z", "__row_index": 14}