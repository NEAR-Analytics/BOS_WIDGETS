{"tx_hash": "5mwqeiQHNs9B7ponDXUsFQmQGP8ZG3aJXR63oEWBRtPm", "action_id_social": "3BJVfYGiXxNLVwXaN1fM7N69mmSGptq7kxFERVYHRBkU-0-widget", "block_id": 103689639, "block_timestamp": "2023-10-18T22:48:10.921Z", "signer_id": "jgodwill.near", "widget_name": "Mintbase.StoreDeploy", "source_code": "const accountId = context.accountId;\n\nconst data = Social.keys(\"*/profile\", \"final\");\n\nif (!data) {\n  return \"Loading\";\n}\n\nState.init({\n  account: accountId,\n});\nconst accounts = Object.entries(data);\n\nconst allWidgets = [];\n\nfor (let i = 0; i < accounts.length; ++i) {\n  const accountId = accounts[i][0];\n  allWidgets.push(accountId);\n}\nconst onChangeAccount = (account) => {\n  State.update({\n    account: account[0],\n  });\n  fetchData(state.account);\n};\n\nconst Card = styled.div`\npadding: 1em;\nborder: 1px solid #e5e8eb;\ngap: 2em;\nmargin: 10px auto;\nborder-radius: .7em;\n`;\n\nconst Cards = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  width: 100%;\n  background: rgba(214, 214, 214, 0.2);\n  border-radius: 10px;\n  justify-content: center;\n  padding-top: 3em;\n  box-shadow: 0 0.05rem 0.05rem rgb(34 34 34 / 5%), 0 0.2rem 0.8rem rgb(34 34 34 / 8%);\n`;\nconst StoreCards = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  width: 100%;\n  background: rgba(214, 214, 214, 0.2);\n  border-radius: 10px;\n  justify-content: center;\n  gap: 1rem;\n  padding-top: 3em;\n  box-shadow: 0 0.05rem 0.05rem rgb(34 34 34 / 5%), 0 0.2rem 0.8rem rgb(34 34 34 / 8%);\n`;\n\nfunction fetchData(accountAddress) {\n  if (!state.account) {\n    State.update({\n      account: accountId,\n    });\n  }\n  const response = fetch(\"https://graph.mintbase.xyz/mainnet\", {\n    method: \"POST\",\n    headers: {\n      \"mb-api-key\": \"anon\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      query: `query MyQuery {\n  mb_store_minters(where: {minter_id: {_eq: \"nate.near\"}}) {\n    id: nft_contract_id\n    nftContract: nft_contract {\n      name\n      icon\n    }\n  }\n}\n`,\n    }),\n  });\n\n  State.update({\n    nftContracts: response.body.data.mb_store_minters,\n  });\n  console.log(\"running\", state.nftContracts);\n}\n\nconst nftContracts = state.nftContracts;\n\nconst seeContracts = () => {\n  nftContracts &&\n    nftContracts.map((contract) => {\n      console.log(contract.nftContract.icon);\n    });\n};\n\nseeContracts();\nfetchData(state.account);\n\nconst fetchStoreFrontData = (accountAddress) => {\n  const response2 = fetch(\"https://graph.mintbase.xyz/mainnet\", {\n    method: \"POST\",\n    headers: {\n      \"mb-api-key\": \"anon\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      query: `query MyQuery {\n  mb_views_nft_tokens(\n    where: {owner: {_eq: \"nate.near\"}, _and: {burned_timestamp: {_is_null: true}, last_transfer_timestamp: {_is_null: false}}, nft_contract_id: {_eq: \"${accountAddress}\"}}\n    limit: 30\n    order_by: {last_transfer_timestamp: desc}\n  ) {\n    nft_contract_id\n    title\n    description\n    media\n    last_transfer_receipt_id\n  }\n}\n`,\n    }),\n  });\n\n  State.update({\n    storeContracts: response2.body.data.mb_views_nft_tokens,\n  });\n  console.log(\"running2\", state.storeContracts);\n};\n\n// console.log(\"response\", state.account);\nconst storeAddressChangeHandler = (storeAddress) => {\n  fetchStoreFrontData(storeAddress);\n  console.log(\"store address: \", storeAddress);\n  state.update({\n    storeAddress: storeAddress,\n  });\n};\n\nconst StoreCard = styled.div`\nborder: 1px solid #e5e8eb;\nbox-shadow: 2px 2px 12px 0px rgba(0, 0, 0, 0.05);\ngap: 2em;\nmargin: 10px auto;\nwidth: 100%;\n  background: #000;\n  color: #fff;\nmax-width: 600px;\n*{\n  font-family: Helvetica Neue;\n  }\n.icon_area{\n  width: 60px;\n  border-radius: 50%;\n  height: 60px;\n  border: 3px solid #ccc;\n  display: flex;\n  overflow: hidden;\n}\n\n.name_contract{\n  h3{\n    font-weight: bold;\n  }\n}\n\n.middle{\n  padding: 20px;\n  .content{\n    display: flex;\n    gap: 20px;\n  }\n}\n\n.top{\n  height: 100px;\n  border-bottom: 1px solid #fff; \n  background: #fff;\n}\n.bottom{\n  padding: 1em;\n  button {\n    border: 1px solid #fff;\n    border-radius: 0;\n    color: white;\n    background: black;\n    text-align: center\n    display: flex;\n    padding: 7px 20px;\n    cursor: pointer;\n  }\n  button:disabled {\n    background: grey;\n    border: grey;\n    cursor: not-allowed;\n  }\n  button:hover {\n    background: white;\n    color: black;\n    border-color: black;\n  }\n}\n`;\nreturn (\n  <div>\n    <Card>\n      Near Address:\n      <Typeahead\n        id=\"async-example\"\n        className=\"type-ahead\"\n        isLoading={isLoading}\n        labelKey=\"search\"\n        minLength={1}\n        options={allWidgets}\n        onChange={(value) => onChangeAccount(value)}\n        placeholder={accountId}\n      />\n    </Card>\n    {nftContracts.length > 0 ? (\n      <StoreCards className=\"mx-24 md:mx-64 \">\n        {nftContracts &&\n          nftContracts.map((contract) => (\n            <StoreCard>\n              <div className=\"top\"></div>\n              <div className=\"middle\">\n                <div className=\"content\">\n                  <div className=\"icon_area\">\n                    <img\n                      src={\n                        contract.nftContract.icon ??\n                        \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRub7hFLkStCvZiaSeiUGznP4uzqPPcepghhg&usqp=CAU\"\n                      }\n                      className=\"chain_icon\"\n                      alt={contract.nftContract.name + \" icon\"}\n                    />\n                  </div>\n                  <div className=\"name_contract\">\n                    <h3>{contract.nftContract.name.toUpperCase()}</h3>\n                    <p>{contract.id}</p>\n                  </div>\n                </div>\n              </div>\n              <div className=\"bottom\">\n                <button>Manage NFTs</button>\n              </div>\n            </StoreCard>\n          ))}\n        {/* deploy here*/}\n        <div class=\"rounded dashed-border p-5\">\n          <div class=\"flex flex-col justify-center items-center h-full\">\n            <div class=\"items-center text-center justify-center\">\n              <div class=\"\">\n                <button\n                  type=\"button\"\n                  class=\"button secondary active p-8 p-med-90 w-32 mb-12 lg:mb-12 mt-64 relative\"\n                >\n                  <span class=\"visible\">New Contract</span>\n                </button>\n              </div>\n            </div>\n            <div>\n              <a\n                href=\"https://docs.mintbase.xyz/creator/creating-nfts/deploy-contract\"\n                target=\"_blank\"\n                rel=\"noreferrer noopener\"\n              >\n                <button class=\"action active p-med-90 undefined\" type=\"button\">\n                  <div class=\"flex items-center gap-4 \">\n                    <span class=\"whitespace-nowrap\">Learn more</span>\n                    <div class=\"flex justify-center m-4\">\n                      <svg\n                        width=\"16px\"\n                        height=\"16px\"\n                        viewBox=\"0 0 24 24\"\n                        fill=\"#000000\"\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        class=\"fill-current text-blue-300 dark:text-blue-100\"\n                      >\n                        <g clip-path=\"url(#clip0_295_1571)\">\n                          <path\n                            d=\"M19 19H5V5H12V3H5C3.89 3 3 3.9 3 5V19C3 20.1 3.89 21 5 21H19C20.1 21 21 20.1 21 19V12H19V19ZM14 3V5H17.59L7.76 14.83L9.17 16.24L19 6.41V10H21V3H14Z\"\n                            fill=\"currentColor\"\n                          ></path>\n                        </g>\n                        <defs>\n                          <clipPath id=\"clip0_295_1571\">\n                            <rect\n                              width=\"24\"\n                              height=\"24\"\n                              fill=\"currentColor\"\n                            ></rect>\n                          </clipPath>\n                        </defs>\n                      </svg>\n                    </div>\n                  </div>\n                </button>\n              </a>\n            </div>\n          </div>\n        </div>\n      </StoreCards>\n    ) : (\n      <p>No contracts found for {state.account}</p>\n    )}\n    {state.storeContracts.length > 0 ? (\n      <Cards>\n        {state.storeContracts.map((store) => (\n          <Widget\n            src=\"jgodwill.near/widget/Mintbase.StoreFront\"\n            props={{ storeInfo: store }}\n          />\n        ))}\n      </Cards>\n    ) : (\n      <p>No NFTs found for {state.storeAddress}</p>\n    )}\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/jgodwill.near/widget/Mintbase.StoreDeploy", "fact_widget_deployments_id": "04f0175d3e47d80908d3da3ff4e73de1", "inserted_timestamp": "2023-10-19T00:43:01.945Z", "modified_timestamp": "2023-10-19T00:43:01.945Z", "__row_index": 4}