{"tx_hash": "4SEKaCaUK9yPr637xgScy2BYDRP3DqKMdWRDTjFj6YyX", "action_id_social": "6xqYtaSaJWwAR2GnF2HtXmCqsfxyJYwKvSppUCAMpyDs-0-widget", "block_id": 103655574, "block_timestamp": "2023-10-18T12:02:06.441Z", "signer_id": "jgodwill.near", "widget_name": "Mintbase.StoreDeploy", "source_code": "const accountId = context.accountId;\n\nconst data = Social.keys(\"*/profile\", \"final\");\n\nif (!data) {\n  return \"Loading\";\n}\n\nState.init({\n  account: accountId,\n});\nconst accounts = Object.entries(data);\n\nconst allWidgets = [];\n\nfor (let i = 0; i < accounts.length; ++i) {\n  const accountId = accounts[i][0];\n  allWidgets.push(accountId);\n}\nconst onChangeAccount = (account) => {\n  State.update({\n    account: account[0],\n  });\n  fetchData(state.account);\n};\n\nconst Card = styled.div`\npadding: 1em;\nborder: 1px solid #e5e8eb;\ngap: 2em;\nmargin: 10px auto;\nborder-radius: .7em;\n`;\nconst StoreCard = styled.div`\npadding: 1em;\nborder: 1px solid #e5e8eb;\ngap: 2em;\nmargin: 10px auto;\nwidth: 100%;\nmax-width: 400px;\n`;\n\nconst Cards = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  width: 100%;\n  background: rgba(214, 214, 214, 0.2);\n  border-radius: 10px;\n  justify-content: center;\n  padding-top: 3em;\n  box-shadow: 0 0.05rem 0.05rem rgb(34 34 34 / 5%), 0 0.2rem 0.8rem rgb(34 34 34 / 8%);\n`;\nconst StoreCards = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  width: 100%;\n  background: rgba(214, 214, 214, 0.2);\n  border-radius: 10px;\n  justify-content: center;\n  gap: 1rem;\n  padding-top: 3em;\n  box-shadow: 0 0.05rem 0.05rem rgb(34 34 34 / 5%), 0 0.2rem 0.8rem rgb(34 34 34 / 8%);\n`;\n\nfunction fetchData(accountAddress) {\n  if (!state.account) {\n    State.update({\n      account: accountId,\n    });\n  }\n  const response = fetch(\"https://graph.mintbase.xyz/mainnet\", {\n    method: \"POST\",\n    headers: {\n      \"mb-api-key\": \"anon\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      query: `query MyQuery {\n  nft_contracts(where: {owner_id: {_eq: \"nate.near\"}}) {\n    id\n  }\n}\n\n`,\n    }),\n  });\n\n  State.update({\n    nftContracts: response.body.data.nft_contracts,\n  });\n  console.log(\"running\", response);\n}\n\nfetchData(state.account);\n\nconst fetchStoreFrontData = (accountAddress) => {\n  const response2 = fetch(\"https://graph.mintbase.xyz/mainnet\", {\n    method: \"POST\",\n    headers: {\n      \"mb-api-key\": \"anon\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      query: `query MyQuery {\n  mb_views_nft_tokens(\n    where: {owner: {_eq: \"nate.near\"}, _and: {burned_timestamp: {_is_null: true}, last_transfer_timestamp: {_is_null: false}}, nft_contract_id: {_eq: \"${accountAddress}\"}}\n    limit: 30\n    order_by: {last_transfer_timestamp: desc}\n  ) {\n    nft_contract_id\n    title\n    description\n    media\n    last_transfer_receipt_id\n  }\n}\n`,\n    }),\n  });\n\n  State.update({\n    storeContracts: response2.body.data.mb_views_nft_tokens,\n  });\n  console.log(\"running2\", state.storeContracts);\n};\n\n// console.log(\"response\", state.account);\nconst storeAddressChangeHandler = (storeAddress) => {\n  fetchStoreFrontData(storeAddress);\n  console.log(\"store address: \", storeAddress);\n  state.update({\n    storeAddress: storeAddress,\n  });\n};\n\nreturn (\n  <div>\n    <Card>\n      Near Address:\n      <Typeahead\n        id=\"async-example\"\n        className=\"type-ahead\"\n        isLoading={isLoading}\n        labelKey=\"search\"\n        minLength={1}\n        options={allWidgets}\n        onChange={(value) => onChangeAccount(value)}\n        placeholder={accountId}\n      />\n    </Card>\n    {state.nftContracts.length > 0 ? (\n      <StoreCards>\n        {state.nftContracts.map((contract) => (\n          <StoreCard>{contract.id}</StoreCard>\n        ))}\n      </StoreCards>\n    ) : (\n      <p>No contracts found for {state.account}</p>\n    )}\n    {state.storeContracts.length > 0 ? (\n      <Cards>\n        {state.storeContracts.map((store) => (\n          <Widget\n            src=\"jgodwill.near/widget/Mintbase.StoreFront\"\n            props={{ storeInfo: store }}\n          />\n        ))}\n      </Cards>\n    ) : (\n      <p>No NFTs found for {state.storeAddress}</p>\n    )}\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/jgodwill.near/widget/Mintbase.StoreDeploy", "fact_widget_deployments_id": "ee7763b1f0f9b3f7a4726f503fce0248", "inserted_timestamp": "2023-10-18T13:53:06.940Z", "modified_timestamp": "2023-10-18T13:53:06.940Z", "__row_index": 1}