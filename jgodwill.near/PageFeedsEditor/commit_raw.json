{"tx_hash": "BmNynhgQ6TBJjxLmwqRsYYK2pVKmTxAmW43C4GHA7AUJ", "action_id_social": "DtHnte5TsjppxXCoUcQmNkR8Txnh2zNDNpSMZLiiCzhm-0-widget", "block_id": 108548643, "block_timestamp": "2023-12-22T11:57:19.250Z", "signer_id": "jgodwill.near", "widget_name": "PageFeedsEditor", "source_code": "const pageFeedPattern =\r\n  props.pageFeedPattern ?? \"*/profile/feed/*\";\r\nconst placeholder = props.placeholder ?? \"Feeds\";\r\nconst initialPageFeedsObject = props.initialPageFeedsObject || {};\r\n\r\nconst pageFeedsObject = Social.keys(pageFeedPattern, \"final\");\r\nconst pageFeedsArr = Social.keys(\"*/profile/*\", \"final\");\r\n\r\nif (pageFeedsObject === null || pageFeedsArr === null) {\r\n  return \"Loading\";\r\n}\r\n\r\nconsole.log(\"feed\", pageFeedsObject);\r\n\r\n// State.init({\r\n//   account: accountId,\r\n// });\r\nconst accounts = Object.entries(pageFeedsArr);\r\n\r\nconst allWidgets = [];\r\n\r\nfor (let i = 0; i < accounts.length; ++i) {\r\n  const accountId = accounts[i][0];\r\n  allWidgets.push(accountId);\r\n}\r\n\r\n// const pageFeedsCount = {};\r\n\r\n// const processPageFeedObject = (obj) => {\r\n//   Object.entries(obj).forEach((kv) => {\r\n//     if (typeof kv[1] === \"object\") {\r\n//       processPageFeedObject(kv[1]);\r\n//     } else {\r\n//       pageFeedsCount[pageFeed] = (pageFeedsCount[pageFeed] || 0) + 1;\r\n//     }\r\n//   });\r\n// };\r\n\r\n// const getpageFeeds = () => {\r\n//   processPageFeedObject(pageFeedsObject);\r\n//   const pageFeeds = Object.entries(pageFeedsCount);\r\n//   pageFeeds.sort((a, b) => b[1] - a[1]);\r\n//   return pageFeeds.map((t) => ({\r\n//     name: t[0],\r\n//     count: t[1],\r\n//   }));\r\n// };\r\n\r\n// console.log(Object.keys(initialPageFeedsObject));\r\nif (!state.allPageFeeds) {\r\n  initState({\r\n    allPageFeeds: allWidgets,\r\n    pageFeeds: Object.keys(initialPageFeedsObject).map((pageFeed) => pageFeed),\r\n    originalPageFeeds: Object.fromEntries(\r\n      Object.keys(initialPageFeedsObject).map((pageFeed) => [pageFeed, null])\r\n    ),\r\n    id: `pageFeeds-selector-${Date.now()}`,\r\n  });\r\n  console.log(\"we'renot here\", allPageFeeds);\r\n}\r\n\r\nconst setPageFeeds = (pageFeeds) => {\r\n  pageFeeds = pageFeeds.map((o) => {\r\n    o = o;\r\n    console.log(\"o\", o);\r\n    return o;\r\n  });\r\n  State.update({ pageFeeds: pageFeeds });\r\n\r\n  const newPageFeedsObject = Object.fromEntries(\r\n    pageFeeds.map((pageFeed) => [pageFeed, \"\"])\r\n  );\r\n  const updatedPageFeedsObject = {\r\n    ...state.originalPageFeeds,\r\n    ...newPageFeedsObject,\r\n  };\r\n\r\n  if (props.setPageFeedsObject) {\r\n    props.setPageFeedsObject(updatedPageFeedsObject);\r\n  }\r\n};\r\nconsole.log(\"init\", initialPageFeedsObject);\r\nconsole.log(\"feeds\", state.pageFeeds);\r\nconsole.log(\"origin\", state.originalPageFeeds);\r\nconsole.log(\"new\", pageFeedsObject);\r\n\r\nreturn (\r\n  <>\r\n    <Typeahead\r\n      id={state.id}\r\n      disabled={props.disabled}\r\n      multiple\r\n      labelKey=\"name\"\r\n      onChange={setPageFeeds}\r\n      options={state.allPageFeeds}\r\n      placeholder={placeholder}\r\n      selected={state.pageFeeds}\r\n      positionFixed\r\n      allowNew\r\n    />\r\n    {props.debug && (\r\n      <div>\r\n        Debugging pageFeeds:\r\n        <pre>{JSON.stringify(state.pageFeeds)}</pre>\r\n      </div>\r\n    )}\r\n  </>\r\n);\r\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/jgodwill.near/widget/PageFeedsEditor", "fact_widget_deployments_id": "a3bc27b32823a35b083bbc7880020743", "inserted_timestamp": "2023-12-22T13:51:59.835Z", "modified_timestamp": "2023-12-22T15:23:33.438Z", "__row_index": 1}