{"tx_hash": "HkD1fFUYLG8vARLPq9iWM6EsspQ8LXgeDVmhx95GH2YE", "action_id_social": "74eC4ZMq8eX36XqxdpMGUqHBHJvUDsBoiQaDJPrGXfoD-0-widget", "block_id": 103727157, "block_timestamp": "2023-10-19T10:41:01.419Z", "signer_id": "jgodwill.near", "widget_name": "Mintbase.StoreFront", "source_code": "const Card = styled.div`\npadding: 1em;\nborder: 1px solid #e5e8eb;\ngap: 2em;\nmargin: 10px auto;\nborder-radius: .7em;\n& input{\n  display: block;\n  padding:.5em;\n  width:100%;\n  border: 1px solid #e5e8eb;\n  border-radius: 10px;\n  outline: none;\n  background: #f4f5f6;\n  color: #525c76;\n  :focus{\n  box-shadow:none;\n    border:1px solid #0d99ff;\n  }\n  &::placeholder {\n    color: palevioletred;\n  }\n  }\n  .soulbound{\n    display: flex;\n    justify-content: space-between;\n    width: 100%;\n  }\n  img{\n    width: 100%;\n    height: 200px;\n    object-fit:cover;\n  }\n`;\n\nconst Cards = styled.div`\n    display: flex;\n    flex-direction: row;\n    gap: 18px;\n    margin-top: 32px;\n    flex-wrap: wrap;\n    width: 100%;\n    justify-content: center;\n`;\n\nconst fetchStoreFrontData = (owner, contractId) => {\n  const response2 = fetch(\"https://graph.mintbase.xyz/mainnet\", {\n    method: \"POST\",\n    headers: {\n      \"mb-api-key\": \"anon\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      query: `query MyQuery {\n  mb_views_nft_metadata_unburned(\n    where: {nft_contract: {id: {_eq: \"${contractId}\"}, owner_id: {_eq: \"${owner}\"}}}\n    offset: 0\n    order_by: {minted_timestamp: desc}\n  ) {\n    createdAt: minted_timestamp\n    listed: price\n    media\n    storeId: nft_contract_id\n    metadataId: metadata_id\n    title\n    description\n  }\n  mb_views_nft_metadata_unburned_aggregate(\n    where: {nft_contract: {id: {_eq: \"${contractId}\"}, owner_id: {_eq: \"${owner}\"}}}\n  ) {\n    aggregate {\n      count\n    }\n  }\n}\n`,\n    }),\n  });\n\n  State.update({\n    storeContracts: response2.body.data.mb_views_nft_metadata_unburned,\n    storeNftsCount:\n      response2.body.data.mb_views_nft_metadata_unburned_aggregate.aggregate\n        .count,\n  });\n  console.log(\"running2\", state.storeContracts);\n};\n\nfetchStoreFrontData(\n  props.ownerId || \"nate.near\",\n  props.storeContract || \"nate.mintbase1.near\"\n);\n\nconst storeNfts = state.storeContracts;\n\nconst WrapCards = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  width: 100%;\n  background: rgba(214, 214, 214, 0.2);\n  border-radius: 10px;\n  justify-content: center;\n  padding-top: 3em;\n  box-shadow: 0 0.05rem 0.05rem rgb(34 34 34 / 5%), 0 0.2rem 0.8rem rgb(34 34 34 / 8%);\n  *{\n  font-family: Helvetica Neue;\n  }\n  .count{\n    text-transform: uppercase;\n    font-weight: 500;\n    font-size: 1.5rem;\n  }\n`;\n\nconst s = state.storeNftsCount > 1 ? \"s\" : \"\";\n\nreturn (\n  <WrapCards>\n    <div className=\"count\">{`${state.storeNftsCount} Result${s}`}</div>\n    <Cards>\n      {storeNfts &&\n        storeNfts.map((data, index) => (\n          <div key={index}>\n            <Widget\n              props={{\n                title: data.title,\n                description: data.description,\n                image: data.media,\n\n                price: data.listed,\n                owner: data.owner,\n                price: data.listed\n                  ? (data.listed / 1000000000000000000000000).toFixed(2)\n                  : null,\n                isListed: data.listed ? \"LISTED\" : \"NOT LISTED\",\n                tokenId: data.token_id,\n                contractId: data.storeId,\n                metadataId: data.metadataId,\n              }}\n              src=\"jgodwill.near/widget/Mintbase.NFTCard.index\"\n            />\n          </div>\n        ))}\n    </Cards>\n  </WrapCards>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/jgodwill.near/widget/Mintbase.StoreFront", "fact_widget_deployments_id": "ae8f7d12b9809e73652ca5b9be93fb78", "inserted_timestamp": "2023-10-19T12:37:54.453Z", "modified_timestamp": "2023-10-19T12:37:54.453Z", "__row_index": 7}