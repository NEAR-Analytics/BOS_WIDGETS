{"tx_hash": "5B95ma1NnXveRB4qdzZhV3XBr2wAm8k2tstv7E2KceH6", "action_id_social": "3ThXxxWygFjCymHow1HgQTQpyT81ybeVTMMkdk4PkHuk-0-widget", "block_id": 103694961, "block_timestamp": "2023-10-19T00:27:49.550Z", "signer_id": "jgodwill.near", "widget_name": "Mintbase.StoreFront", "source_code": "const storeNfts = props.storeInfo || [state.storeContracts];\n\nconst Card = styled.div`\npadding: 1em;\nborder: 1px solid #e5e8eb;\ngap: 2em;\nmargin: 10px auto;\nborder-radius: .7em;\n& input{\n  display: block;\n  padding:.5em;\n  width:100%;\n  border: 1px solid #e5e8eb;\n  border-radius: 10px;\n  outline: none;\n  background: #f4f5f6;\n  color: #525c76;\n  :focus{\n  box-shadow:none;\n    border:1px solid #0d99ff;\n  }\n  &::placeholder {\n    color: palevioletred;\n  }\n  }\n  .soulbound{\n    display: flex;\n    justify-content: space-between;\n    width: 100%;\n  }\n  img{\n    width: 100%;\n    height: 200px;\n    object-fit:cover;\n  }\n`;\n\nconst Cards = styled.div`\n    display: flex;\n    flex-direction: row;\n    gap: 18px;\n    margin-top: 32px;\n    flex-wrap: wrap;\n    width: 100%;\n    justify-content: center;\n`;\n\nconst fetchStoreFrontData = (owner, contractId) => {\n  const response2 = fetch(\"https://graph.mintbase.xyz/mainnet\", {\n    method: \"POST\",\n    headers: {\n      \"mb-api-key\": \"anon\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      query: `query MyQuery {\n  mb_views_nft_metadata_unburned(\n    where: {nft_contract: {id: {_eq: \"${contractId}\"}, owner_id: {_eq: \"${owner}\"}}}\n    offset: 0\n    order_by: {minted_timestamp: desc}\n  ) {\n    createdAt: minted_timestamp\n    listed: price\n    media\n    storeId: nft_contract_id\n    metadata_id\n    title\n    description\n  }\n  mb_views_nft_metadata_unburned_aggregate(\n    where: {nft_contract: {id: {_eq: \"${contractId}\"}, owner_id: {_eq: \"${owner}\"}}}\n  ) {\n    aggregate {\n      count\n    }\n  }\n}\n`,\n    }),\n  });\n\n  State.update({\n    storeContracts: response2.body.data.mb_views_nft_metadata_unburned,\n  });\n  console.log(\"running2\", state.storeContracts);\n};\n\nfetchStoreFrontData(props.ownerId, props.storeContract);\n\nreturn (\n  <Cards>\n    {storeNfts.map((data, index) => (\n      <div key={index}>\n        <Widget\n          props={{\n            title: data.title,\n            description: data.description,\n            image: data.media,\n\n            price: data.listed,\n            owner: data.owner,\n            price: data.listed\n              ? (data.listed / 1000000000000000000000000).toFixed(2)\n              : null,\n            isListed: data.listed ? \"LISTED\" : \"NOT LISTED\",\n            tokenId: data.token_id,\n            contractId: data.storeId,\n          }}\n          src=\"agwaze.near/widget/CPlanet.NFTCard.index\"\n        />\n      </div>\n    ))}\n  </Cards>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/jgodwill.near/widget/Mintbase.StoreFront", "fact_widget_deployments_id": "928e5b5dff1daed8f4e401e951dd409f", "inserted_timestamp": "2023-10-19T02:33:15.149Z", "modified_timestamp": "2023-10-19T02:33:15.149Z", "__row_index": 0}