{"tx_hash": "2PyphtLSH8uBDxJPVmQKSFxhTmfgQmuWSW3cQwRtMCm5", "action_id_social": "GAnzTwSPeceBUZd5hiB4mUurPr3XqN3JweLpvRFn88Ey-0-widget", "block_id": 98299959, "block_timestamp": "2023-08-07T21:22:50.434Z", "signer_id": "dev-queryapi.dataplatform.near", "widget_name": "QueryApi.Examples.Feed.Posts", "source_code": "const APP_OWNER = props.APP_OWNER || \"dataplatform.near\";\nconst GRAPHQL_ENDPOINT =\n  props.GRAPHQL_ENDPOINT || \"https://near-queryapi.api.pagoda.co\";\nconst sortOption = props.postsOrderOption || \"blockHeight\"; // following, blockHeight\nconst LIMIT = 25;\nlet accountsFollowing =  props.accountsFollowing\nconst moderatorAccount = props?.moderatorAccount || \"bosmod.near\";\n\nif (context.accountId && !accountsFollowing) {\n  const graph = Social.keys(`${context.accountId}/graph/follow/*`, \"final\");\n  if (graph !== null) {\n    accountsFollowing = Object.keys(graph[context.accountId].graph.follow || {});\n  }\n}\n\nlet filterUsersRaw = Social.get(\n  `${moderatorAccount}/moderate/users`,\n  \"optimistic\",\n  {\n    subscribe: true,\n  }\n);\n\nif (filterUsers === null) {\n  // haven't loaded filter list yet, return early\n  return \"\";\n}\n\nconst filterUsers = filterUsersRaw ? JSON.parse(filterUsersRaw) : [];\n\nconst shouldFilter = (item) => {\n  return filterUsers.includes(item.accountId);\n};\n\nState.init({\n  selectedTab: Storage.privateGet(\"selectedTab\") || \"all\",\n  posts: [],\n  postsCountLeft: 0,\n  initLoadPosts: false,\n  initLoadPostsAll: false\n});\n\nfunction fetchGraphQL(operationsDoc, operationName, variables) {\n  return asyncFetch(\n    `${GRAPHQL_ENDPOINT}/v1/graphql`,\n    {\n      method: \"POST\",\n      headers: { \"x-hasura-role\": \"dataplatform_near\" },\n      body: JSON.stringify({\n        query: operationsDoc,\n        variables: variables,\n        operationName: operationName,\n      }),\n    }\n  );\n}\n\nconst createQuery = (sortOption, type) => {\nlet querySortOption = \"\";\nswitch (sortOption) {\n  case \"recentComments\":\n    querySortOption = `{ last_comment_timestamp: desc_nulls_last },`;\n    break;\n  // More options...\n  default:\n    querySortOption = \"\";\n}\n\nlet queryFilter = \"\";\nswitch (type) {\n  case \"following\":\n    let queryAccountsString = accountsFollowing.map(account => `\"${account}\"`).join(\", \");\n    queryFilter =  `account_id: { _in: [${queryAccountsString}]}`;\n    break;\n  // More options...\n  default:\n    queryFilter = \"\";\n}\n\nconst indexerQueries = `\nquery GetPostsQuery($offset: Int, $limit: Int) {\n  dataplatform_near_social_feed_posts(order_by: [${querySortOption} { block_height: desc }], offset: $offset, limit: $limit) {\n    account_id\n    block_height\n    block_timestamp\n    content\n    receipt_id\n    accounts_liked\n    last_comment_timestamp\n    comments(order_by: {block_height: asc}) {\n      account_id\n      block_height\n      block_timestamp\n      content\n    }\n  }\n  dataplatform_near_social_feed_posts_aggregate(order_by: [${querySortOption} { block_height: desc }], offset: $offset){\n    aggregate {\n      count\n    }\n  }\n}\nquery GetFollowingPosts($offset: Int, $limit: Int) {\n  dataplatform_near_social_feed_posts(where: {${queryFilter}}, order_by: [${querySortOption} { block_height: desc }], offset: $offset, limit: $limit) {\n    account_id\n    block_height\n    block_timestamp\n    content\n    receipt_id\n    accounts_liked\n    last_comment_timestamp\n    comments(order_by: {block_height: asc}) {\n      account_id\n      block_height\n      block_timestamp\n      content\n    }\n  }\n  dataplatform_near_social_feed_posts_aggregate(where: {${queryFilter}}, order_by: [${querySortOption} { block_height: desc }], offset: $offset) {\n    aggregate {\n      count\n    }\n  }\n}\n`;\nreturn indexerQueries\n}\n\nconst loadMorePosts = () => {\n  const queryName = state.selectedTab == \"following\" && accountsFollowing ? \"GetFollowingPosts\" : \"GetPostsQuery\"\n  const type = state.selectedTab == \"following\" && accountsFollowing ? \"following\" : \"all\"\n\n  if(state.selectedTab == \"following\" && accountsSelected && accountsSelected.length == 0) {\n    console.log(\"user has no followers\")\n    return\n  }\n  fetchGraphQL(createQuery(sortOption, type), queryName, {\n    offset: state.posts.length,\n    limit: LIMIT\n  }).then((result) => {\n    if (result.status === 200 && result.body) {\n      if(result.body.errors) {\n        console.log('error:', result.body.errors)\n        return\n      }\n      let data = result.body.data;\n      if (data) {\n        const newPosts = data.dataplatform_near_social_feed_posts;\n        const postsCountLeft =\n          data.dataplatform_near_social_feed_posts_aggregate.aggregate.count;\n        if (newPosts.length > 0) {\n          State.update({\n            posts: [...state.posts, ...newPosts],\n            postsCountLeft,\n          });\n        }\n      }\n    }\n  });\n};\n\nconst previousSelectedTab = Storage.privateGet(\"selectedTab\");\nif (previousSelectedTab && previousSelectedTab !== state.selectedTab) {\n  State.update({\n    selectedTab: previousSelectedTab,\n  });\n}\n\nfunction selectTab(selectedTab) {\n  Storage.privateSet(\"selectedTab\", selectedTab);\n  State.update({\n    posts: [],\n    postsCountLeft: 0,\n    selectedTab \n  });\n  loadMorePosts()\n}\n\nconst H2 = styled.h2`\n  font-size: 19px;\n  line-height: 22px;\n  color: #11181C;\n  margin: 0 0 24px;\n  padding: 0 24px;\n\n  @media (max-width: 1200px) {\n    display: none;\n  }\n`;\n\nconst Content = styled.div`\n  @media (max-width: 1200px) {\n    > div:first-child {\n      border-top: none;\n    }\n  }\n`;\n\nconst ComposeWrapper = styled.div`\n  border-top: 1px solid #ECEEF0;\n`;\n\nconst FilterWrapper = styled.div`\n  border-top: 1px solid #ECEEF0;\n  padding: 24px 24px 0;\n\n  @media (max-width: 1200px) {\n    padding: 12px;\n  }\n`;\n\nconst PillSelect = styled.div`\n  display: inline-flex;\n  align-items: center;\n\n  @media (max-width: 600px) {\n    width: 100%;\n\n    button {\n      flex: 1;\n    }\n  }\n`;\n\nconst PillSelectButton = styled.button`\n  display: block;\n  position: relative;\n  border: 1px solid #E6E8EB;\n  border-right: none;\n  padding: 3px 24px;\n  border-radius: 0;\n  font-size: 12px;\n  line-height: 18px;\n  color: ${(p) => (p.selected ? \"#fff\" : \"#687076\")};\n  background: ${(p) => (p.selected ? \"#006ADC !important\" : \"#FBFCFD\")};\n  font-weight: 600;\n  transition: all 200ms;\n\n  &:hover {\n    background: #ECEDEE;\n    text-decoration: none;\n  }\n\n  &:focus {\n    outline: none;\n    border-color: #006ADC !important;\n    box-shadow: 0 0 0 1px #006ADC;\n    z-index: 5;\n  }\n\n  &:first-child {\n    border-radius: 6px 0 0 6px;\n  }\n  &:last-child {\n    border-radius: 0 6px 6px 0;\n    border-right: 1px solid #E6E8EB;\n  }\n`;\n\nconst FeedWrapper = styled.div`\n  .post {\n    padding-left: 24px;\n    padding-right: 24px;\n\n    @media (max-width: 1200px) {\n      padding-left: 12px;\n      padding-right: 12px;\n    }\n  }\n`;\n\nconst hasMore = state.postsCountLeft != state.posts.length\n\nif(!state.initLoadPostsAll) {\n  loadMorePosts()\n  State.update({initLoadPostsAll: true})\n}\n\nif(state.initLoadPostsAll == true && !state.initLoadPosts && accountsFollowing) {\n  if (accountsFollowing.length > 0 && state.selectedTab == \"following\") {\n     selectTab(\"following\")\n  }\n  State.update({initLoadPosts: true})\n}\n\nreturn (\n  <>\n    <H2>Posts</H2>\n\n    <Content>\n      {context.accountId && (\n        <>\n          <ComposeWrapper>\n            <Widget src=\"calebjacob.near/widget/Posts.Compose\" />\n          </ComposeWrapper>\n\n          <FilterWrapper>\n            <PillSelect>\n              <PillSelectButton\n                type=\"button\"\n                onClick={() => selectTab(\"all\")}\n                selected={state.selectedTab === \"all\"}\n              >\n                All\n              </PillSelectButton>\n\n            <PillSelectButton\n                type=\"button\"\n                onClick={() => selectTab(\"following\")}\n                selected={state.selectedTab === \"following\"}\n              >\n                Following\n              </PillSelectButton>\n            </PillSelect>\n          </FilterWrapper>\n        </>\n      )}\n\n      <FeedWrapper>\n      <Widget src={`${APP_OWNER}/widget/QueryApi.Examples.Feed`} props={{ hasMore, loadMorePosts, posts: state.posts.filter((i) => !shouldFilter(i))}} />\n      </FeedWrapper>\n    </Content>\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/dev-queryapi.dataplatform.near/widget/QueryApi.Examples.Feed.Posts", "fact_widget_deployments_id": "0e590906d4fe48865fb1239ab2dbd38b", "inserted_timestamp": "2023-08-07T22:32:49.100Z", "modified_timestamp": "2023-08-07T22:32:49.100Z", "__row_index": 0}