{"tx_hash": "GAGkQDzamR4NzfMr4Uv69vkx9HSLJsV5uHE4aRZkYLGm", "action_id_social": "CjVHQxiagaV41iGY1d7HwENMHcvRtnb97a1h6zVV33pj-0-widget", "block_id": 113254959, "block_timestamp": "2024-02-21T01:10:33.695Z", "signer_id": "dev-queryapi.dataplatform.near", "widget_name": "QueryApi.IndexerExplorer", "source_code": "const limitPerPage = 5;\nlet totalIndexers = 0;\nconst accountId = context.accountId;\nState.init({\n  currentPage: 0,\n  selectedTab: props.tab || \"all\",\n  total_indexers: 0,\n  my_indexers: [],\n  all_indexers: [],\n});\n\nif (props.tab && props.tab !== state.selectedTab) {\n  State.update({\n    selectedTab: props.tab,\n  });\n}\n\nNear.asyncView(`dev-queryapi.dataplatform.near`, \"list_all\").then((data) => {\n  const indexers = [];\n  const total_indexers = 0;\n  Object.keys(data).forEach((accountId) => {\n    Object.keys(data[accountId]).forEach((functionName) => {\n      indexers.push({\n        accountId: accountId,\n        indexerName: functionName,\n      });\n      total_indexers += 1;\n    });\n  });\n\n  let my_indexers = indexers.filter(\n    (indexer) => indexer.accountId === accountId\n  );\n  // const results = indexers.slice(\n  //   0,\n  //   state.currentPage * limitPerPage + limitPerPage\n  // );\n  State.update({\n    my_indexers: my_indexers,\n    all_indexers: indexers,\n    total_indexers: total_indexers,\n  });\n});\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 28px;\n  padding-bottom: 4px;\n  padding-top: 4px;\n`;\n\nconst Header = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  min-width: 200px;\n  max-width: 500px;\n`;\n\nconst H1 = styled.h1`\n  font-weight: 600;\n  font-size: 32px;\n  line-height: 39px;\n  color: #11181c;\n  margin: 0;\n`;\n\nconst H2 = styled.h2`\n  font-weight: 400;\n  font-size: 20px;\n  line-height: 24px;\n  color: #687076;\n  margin: 0;\n`;\n\nconst Text = styled.p`\n  margin: 0;\n  line-height: 1.5rem;\n  color: ${(p) => (p.bold ? \"#11181C\" : \"#687076\")} !important;\n  font-weight: ${(p) => (p.bold ? \"600\" : \"400\")};\n  font-size: ${(p) => (p.small ? \"12px\" : \"14px\")};\n  overflow: ${(p) => (p.ellipsis ? \"hidden\" : \"\")};\n  text-overflow: ${(p) => (p.ellipsis ? \"ellipsis\" : \"\")};\n  white-space: ${(p) => (p.ellipsis ? \"nowrap\" : \"\")};\n  overflow-wrap: anywhere;\n\n  b {\n    font-weight: 600;\n    color: #11181c;\n  }\n\n  &[href] {\n    display: inline-flex;\n    gap: 0.25rem;\n\n    &:hover,\n    &:focus {\n      text-decoration: underline;\n    }\n  }\n`;\n\nconst Items = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, minmax(0, 1fr));\n  gap: 24px;\n\n  @media (max-width: 1200px) {\n    grid-template-columns: repeat(2, minmax(0, 1fr));\n  }\n\n  @media (max-width: 800px) {\n    grid-template-columns: minmax(0, 1fr);\n  }\n`;\n\nconst Item = styled.div``;\n\nconst Button = styled.button`\n  display: block;\n  width: 100%;\n  padding: 8px;\n  height: 32px;\n  background: #fbfcfd;\n  border: 1px solid #d7dbdf;\n  border-radius: 50px;\n  font-weight: 600;\n  font-size: 12px;\n  line-height: 15px;\n  text-align: center;\n  cursor: pointer;\n  color: #11181c !important;\n  margin: 0;\n\n  &:hover,\n  &:focus {\n    background: #ecedee;\n    text-decoration: none;\n    outline: none;\n  }\n\n  span {\n    color: #687076 !important;\n  }\n`;\n\nconst Tabs = styled.div`\n  display: flex;\n  height: 48px;\n  border-bottom: 1px solid #eceef0;\n  overflow: auto;\n  scroll-behavior: smooth;\n\n  @media (max-width: 1200px) {\n    background: #f8f9fa;\n    border-top: 1px solid #eceef0;\n    margin-left: -12px;\n    margin-right: -12px;\n\n    > * {\n      flex: 1;\n    }\n  }\n`;\n\nconst TabsButton = styled.a`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  font-weight: 600;\n  font-size: 12px;\n  padding: 0 12px;\n  position: relative;\n  color: ${(p) => (p.selected ? \"#11181C\" : \"#687076\")};\n  background: none;\n  border: none;\n  outline: none;\n  text-align: center;\n  text-decoration: none !important;\n  pointer: cursor;\n  &:hover {\n    color: #11181c;\n  }\n\n  &::after {\n    content: \"\";\n    display: ${(p) => (p.selected ? \"block\" : \"none\")};\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    height: 3px;\n    background: #59e692;\n  }\n`;\n\nconst TextLink = styled.a`\n  margin: 0;\n  font-size: 14px;\n  line-height: 20px;\n  font-weight: ${(p) => (p.bold ? \"600\" : \"400\")};\n  font-size: ${(p) => (p.small ? \"12px\" : \"14px\")};\n  overflow: ${(p) => (p.ellipsis ? \"hidden\" : \"visible\")};\n  text-overflow: ${(p) => (p.ellipsis ? \"ellipsis\" : \"unset\")};\n  white-space: nowrap;\n  outline: none;\n\n  &:focus,\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n\nreturn (\n  <Wrapper className=\"container-xl\">\n    <Tabs>\n      <TabsButton\n        onClick={() => State.update({ selectedTab: \"my-indexers\" })}\n        selected={state.selectedTab === \"my-indexers\"}\n      >\n        My Indexers\n      </TabsButton>\n      <TabsButton\n        onClick={() => State.update({ selectedTab: \"all\" })}\n        selected={state.selectedTab === \"all\"}\n      >\n        All\n      </TabsButton>\n    </Tabs>\n\n    {state.selectedTab === \"all\" && (\n      <>\n        <Items>\n          {state.all_indexers.map((indexer, i) => (\n            <Item>\n              <Widget\n                src={`dev-queryapi.dataplatform.near/widget/QueryApi.IndexerCard`}\n                props={{\n                  accountId: indexer.accountId,\n                  indexerName: indexer.indexerName,\n                }}\n              />\n            </Item>\n          ))}\n        </Items>\n      </>\n    )}\n    {state.selectedTab == \"my-indexers\" && state.my_indexers.length == 0 && (\n      <Header>\n        <H2>\n          QueryAPI streamlines the process of querying specific data from the Near Blockchain. Explore new Indexers and fork them to try it out!\n        </H2>\n        <H2>\n          To learn more about QueryAPI, visit\n          <TextLink target=\"_blank\" href=\"https://docs.near.org/bos/community/indexers\" as=\"a\" bold>\n            QueryAPI Docs\n          </TextLink>\n        </H2>\n      </Header>\n    )}\n    <Items>\n      {state.selectedTab == \"my-indexers\" && (\n        <>\n          {state.my_indexers.map((indexer, i) => (\n            <Item>\n              <Widget\n                src={`dev-queryapi.dataplatform.near/widget/QueryApi.IndexerCard`}\n                props={{\n                  accountId: indexer.accountId,\n                  indexerName: indexer.indexerName,\n                }}\n              />\n            </Item>\n          ))}\n        </>\n      )}\n    </Items>\n  </Wrapper>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/dev-queryapi.dataplatform.near/widget/QueryApi.IndexerExplorer", "fact_widget_deployments_id": "bff25602b41b7f1862d566e16924078f", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}