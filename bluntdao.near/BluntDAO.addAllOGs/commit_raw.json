{"tx_hash": "EAsMWfo537D9iRaaeKmD9DvWtocPyJnanjTkgGZiD9cj", "action_id_social": "9QwxZ631F9k8xooMZ4yPDnH1kqno1h26nxMhuydA1wmB-0-widget", "block_id": 97707590, "block_timestamp": "2023-07-30T19:28:54.085Z", "signer_id": "bluntdao.near", "widget_name": "BluntDAO.addAllOGs", "source_code": "const limit = 20;\nconst series = props.series ?? \"1\"; // add series filter\nconst title = props.title ?? \"Total OG BluntDAO\";\nconst showHeader = props.showHeader ?? true;\nconst showImage = props.showImage ?? false;\n// add what nft they have and then add filter of unique people, add link to collection\n// add condition if no props fetch all collection\n// add condition to only propose if you have privalige\n// fix limit\nState.init({\n  offset: 0,\n  tokens: [],\n  hasMore: true,\n});\n\nfunction fetchTokens() {\n  asyncFetch(\"https://graph.mintbase.xyz/mainnet\", {\n    method: \"POST\",\n    headers: {\n      \"mb-api-key\": \"omni-site\",\n      \"Content-Type\": \"application/json\",\n      \"x-hasura-role\": \"anonymous\",\n    },\n    body: JSON.stringify({\n      query: `\n          query MyQuery {\n            mb_views_nft_tokens(\n               \n                offset: ${state.offset}\n              where: { nft_contract_id: { _eq: \"bluntdao.snft.near\" } token_id: {_regex: \"^${series}:\"}}\n              order_by: {minted_timestamp: desc}\n            ) {\n              media\n              owner\n            }\n          }\n        `,\n    }),\n  }).then((res) => {\n    if (res.ok) {\n      const tokens = res.body.data.mb_views_nft_tokens;\n      if (tokens.length > 0) {\n        State.update({\n          tokens: [...state.tokens, ...tokens],\n          offset: state.offset + limit,\n          hasMore: true,\n        });\n      } else {\n        State.update({\n          hasMore: false,\n        });\n      }\n    }\n  });\n}\nfetchTokens();\nconst addEveryone = () => {\n  const gas = 200000000000000;\n  const deposit = 10000000000000000000000;\n\n  state.tokens?.map((it) => {\n    {\n      Near.call([\n        {\n          contractName: daoId,\n          methodName: \"add_proposal\",\n          args: {\n            proposal: {\n              description: \"potential member\",\n              kind: {\n                AddMemberToRole: {\n                  member_id: it.owner,\n                  role: role,\n                },\n              },\n            },\n          },\n          gas: gas,\n          deposit: deposit,\n        },\n      ]);\n    }\n  });\n};\naddEveryone();\n\nconst size = \"144px\";\n\nreturn (\n  <>\n    {\" \"}\n    <button className=\"join-button\" onClick={addEveryone}>\n      Add Everyone\n    </button>\n  </>\n);\n", "metadata": {"platform": "jutsu.ai"}, "branch": {"draft": null}, "widget_modules_used": null, "widget_url": "https://near.social/#/bluntdao.near/widget/BluntDAO.addAllOGs", "fact_widget_deployments_id": "7dc66c7b96061091983eb82bf4a5194d", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 1}