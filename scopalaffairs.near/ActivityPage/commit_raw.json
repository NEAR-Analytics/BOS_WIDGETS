{"tx_hash": "8W7waVsMMW2MCAvu6hyQBdvTQqFJMyR3JspuXAhJKC88", "action_id_social": "HsGQfQDMSkH79jC9serSLgz6o6hU3sooBYmtB13EeprU-0-widget", "block_id": 103118993, "block_timestamp": "2023-10-11T10:05:40.261Z", "signer_id": "scopalaffairs.near", "widget_name": "ActivityPage", "source_code": "const GRAPHQL_ENDPOINT = \"https://near-queryapi.api.pagoda.co\";\n\nlet lastPostSocialApi = Social.index(\"post\", \"main\", {\n  limit: 1,\n  order: \"desc\",\n});\n\nState.init({\n  // If QueryAPI Feed is lagging behind Social API, fallback to old widget.\n  shouldFallback: props.shouldFallback ?? false,\n  selectedTab: props.tab || \"posts\",\n});\n\nfunction fetchGraphQL(operationsDoc, operationName, variables) {\n  return asyncFetch(`${GRAPHQL_ENDPOINT}/v1/graphql`, {\n    method: \"POST\",\n    headers: { \"x-hasura-role\": \"dataplatform_near\" },\n    body: JSON.stringify({\n      query: operationsDoc,\n      variables: variables,\n      operationName: operationName,\n    }),\n  });\n}\n\nconst lastPostQuery = `\nquery IndexerQuery {\n  dataplatform_near_social_feed_posts( limit: 1, order_by: { block_height: desc }) {\n      block_height\n  }\n}\n`;\n\nfetchGraphQL(lastPostQuery, \"IndexerQuery\", {})\n  .then((feedIndexerResponse) => {\n    if (\n      feedIndexerResponse &&\n      feedIndexerResponse.body.data.dataplatform_near_social_feed_posts.length >\n        0\n    ) {\n      const nearSocialBlockHeight = lastPostSocialApi[0].blockHeight;\n      const feedIndexerBlockHeight =\n        feedIndexerResponse.body.data.dataplatform_near_social_feed_posts[0]\n          .block_height;\n\n      const lag = nearSocialBlockHeight - feedIndexerBlockHeight;\n      let shouldFallback = lag > 2 || !feedIndexerBlockHeight;\n      State.update({ shouldFallback });\n    } else {\n      console.log(\"Falling back to old widget.\");\n      State.update({ shouldFallback: true });\n    }\n  })\n  .catch((error) => {\n    console.log(\n      \"Error while fetching GraphQL(falling back to old widget): \",\n      error\n    );\n    State.update({ shouldFallback: true });\n  });\n\nif (props.tab && props.tab !== state.selectedTab) {\n  State.update({\n    selectedTab: props.tab,\n  });\n}\n\nconst activityUrl = `#/scopalaffairs.near/widget/ActivityPage`;\n\nconst Wrapper = styled.div`\n  margin-top: calc(var(--body-top-padding) * -1);\n  padding-bottom: 48px;\n`;\n\nconst Main = styled.div`\n  display: grid;\n  grid-template-columns: 290px minmax(0, 1fr) 290px;\n  grid-gap: 16px;\n\n  @media (max-width: 1024px) {\n    display: block;\n  }\n`;\n\nconst Section = styled.div`\n  padding-top: 24px;\n  border-left: ${(p) => (p.primary ? \"1px solid #ECEEF0\" : \"none\")};\n  border-right: ${(p) => (p.primary ? \"1px solid #ECEEF0\" : \"none\")};\n\n  > div {\n    padding-bottom: 24px;\n    margin-bottom: 24px;\n    border-bottom: 1px solid #eceef0;\n\n    &:last-child {\n      padding-bottom: 0;\n      margin-bottom: 0;\n      border-bottom: none;\n    }\n  }\n\n  @media (max-width: 1024px) {\n    padding-top: 0px;\n    border-left: none;\n    border-right: none;\n    display: ${(p) => (p.active ? \"block\" : \"none\")};\n    margin: ${(p) => (p.negativeMargin ? \"0 -12px\" : \"0\")};\n  }\n`;\n\nconst Tabs = styled.div`\n  display: none;\n  height: 48px;\n  background: #f8f9fa;\n  border-bottom: 1px solid #eceef0;\n  margin-bottom: ${(p) => (p.noMargin ? \"0\" : p.halfMargin ? \"24px\" : \"24px\")};\n  overflow: auto;\n  scroll-behavior: smooth;\n\n  @media (max-width: 1024px) {\n    display: flex;\n    margin-left: -12px;\n    margin-right: -12px;\n\n    > * {\n      flex: 1;\n    }\n  }\n`;\n\nconst TabsButton = styled.a`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  font-weight: 600;\n  font-size: 12px;\n  padding: 0 12px;\n  position: relative;\n  color: ${(p) => (p.selected ? \"#11181C\" : \"#687076\")};\n  background: none;\n  border: none;\n  outline: none;\n  text-align: center;\n  text-decoration: none !important;\n\n  &:hover {\n    color: #11181c;\n  }\n\n  &::after {\n    content: \"\";\n    display: ${(p) => (p.selected ? \"block\" : \"none\")};\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    height: 3px;\n    background: #59e692;\n  }\n`;\n\nreturn (\n  <Wrapper\n    className=\"container-xl\"\n    negativeMargin={state.selectedTab === \"posts\"}\n  >\n    <Tabs\n      halfMargin={state.selectedTab === \"apps\"}\n      noMargin={state.selectedTab === \"posts\"}\n    >\n      <TabsButton\n        href={`${activityUrl}?tab=posts`}\n        selected={state.selectedTab === \"posts\"}\n      >\n        Posts\n      </TabsButton>\n\n      <TabsButton\n        href={`${activityUrl}?tab=apps`}\n        selected={state.selectedTab === \"apps\"}\n      >\n        Components\n      </TabsButton>\n\n      <TabsButton\n        href={`${activityUrl}?tab=explore`}\n        selected={state.selectedTab === \"explore\"}\n      >\n        Explore\n      </TabsButton>\n    </Tabs>\n\n    <Main>\n      <Section active={state.selectedTab === \"apps\"}>\n        <Widget src=\"scopalaffairs.near/widget/FeaturedComponents\" />\n        <Widget src=\"scopalaffairs.near/widget/LatestComponents\" />\n      </Section>\n      <Section negativeMargin primary active={state.selectedTab === \"posts\"}>\n        {state.shouldFallback == true ? (\n          <Widget\n            src={`scopalaffairs.near/widget/v1.Posts`}\n            props={{ showFlagAccountFeature: true }}\n          />\n        ) : (\n          <Widget\n            src={`scopalaffairs.near/widget/Posts`}\n            props={{\n              GRAPHQL_ENDPOINT,\n              accountsFollowing,\n              showFlagAccountFeature: true,\n            }}\n          />\n        )}\n      </Section>\n      <Section active={state.selectedTab === \"explore\"}>\n        <Widget src=\"scopalaffairs.near/widget/ExploreWidgets\" />\n      </Section>\n    </Main>\n  </Wrapper>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/scopalaffairs.near/widget/ActivityPage", "fact_widget_deployments_id": "f2f6e88eec827cd193dd215b2d1bc595", "inserted_timestamp": "2023-10-11T11:52:01.944Z", "modified_timestamp": "2023-10-11T11:52:01.944Z", "__row_index": 10}