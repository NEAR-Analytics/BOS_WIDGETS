{"tx_hash": "2X9mMQ8UqM1Y3xAufhz1kynVkCvLDnzuBzQqRPkXxpPB", "action_id_social": "HU6MWLyEwj61fgieUzLz7Bip2YrYFZDF5bfgBC69uoyB-0-widget", "block_id": 102615712, "block_timestamp": "2023-10-04T18:19:53.302Z", "signer_id": "scopalaffairs.near", "widget_name": "Recommender.Service.EngagementTracker", "source_code": "const dataplane = \"https://near.dataplane.rudderstack.com\"; //prod\nconst uri = \"/v1/track\";\nconst api_url = `${dataplane}${uri}`;\nconst auth = \"Basic MlVub3dMd2lXRnc3YzM1QU11RUVkREVJa2RvOg==\"; //prod\n\nconst generateAnonId = (length) => {\n  const characters =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  let result = \"\";\n\n  for (let i = 0; i < length; i++) {\n    const randomIndex = Math.floor(Math.random() * characters.length);\n    result += characters.charAt(randomIndex);\n  }\n  return result;\n};\n\nconst trackEngagement = () => {\n  const payload = {\n    anonymousId: generateAnonId(24),\n    channel: \"web\",\n    context: props.fromContext,\n    type: \"track\",\n    originalTimestamp: new Date().toISOString(),\n    sentAt: new Date().toISOString(),\n    event: props.event,\n    properties: {\n      accountId: props.accountId,\n      accountIdRank: props.accountIdRank,\n    },\n  };\n\n  asyncFetch(api_url, {\n    body: JSON.stringify(payload),\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": auth,\n    },\n    method: \"POST\",\n  })\n    .then((response) => response.json())\n    .then((data) => console.log(data))\n    .catch((error) => console.log(error));\n};\n\nprops.onClick ? trackEngagement(props) : null;\n\nreturn <>{props.children}</>;\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/scopalaffairs.near/widget/Recommender.Service.EngagementTracker", "fact_widget_deployments_id": "18742307d65fb27428a0ba80653a7cfd", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 1}