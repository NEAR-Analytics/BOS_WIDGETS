{"tx_hash": "ANYYC6p78aTZqu9kaVEJcN7VtLSqE3bszX1LVqHMDrzP", "action_id_social": "6h8eCSK3h5HjQuuqF81pp8eH6aRoZGUqK59fKRaLoRga-0-widget", "block_id": 107839044, "block_timestamp": "2023-12-13T11:51:36.245Z", "signer_id": "scopalaffairs.near", "widget_name": "AppLibrary.IndexPage", "source_code": "State.init({\n  categories: [],\n  isLoading: true,\n  selectedTab: props.tab,\n});\n\nif (props.tab && props.tab !== state.selectedTab) {\n  State.update({\n    selectedTab: props.tab,\n  });\n}\n\nconst appLibraryIndexUrl = \"/scopalaffairs.near/widget/AppLibrary.IndexPage\";\nconst selectedCategory = state.categories.find(\n  (category) => category.label === state.selectedTab\n);\n\nfunction loadData() {\n  if (state.categories.length > 0) return;\n\n  asyncFetch(\n    \"https://storage.googleapis.com/databricks-near-query-runner/output/app-store-updated-test.json\"\n  )\n    .then((res) => {\n      const data = JSON.parse(res.body);\n\n      State.update({\n        categories: data.data,\n        isLoading: false,\n        selectedTab: state.selectedTab ?? data.data[0].label,\n      });\n    })\n    .catch((error) => {\n      State.update({\n        isLoading: false,\n      });\n      console.log(error);\n    });\n}\n\nloadData();\n\nconst Wrapper = styled.div`\n  padding: 100px 0;\n  background: url(\"https://ipfs.near.social/ipfs/bafkreie5t75jirebnuyozmsc5hxzhxpoqivaxmc4rypaaogab6qh7asb2i\");\n  // background: url(\"https://ipfs.near.social/ipfs/bafkreih7pkl3zqbzmr35astcblnvlpuheph2yksc3lwmpqz4ldug62npqu\");\n  background-position: right top;\n  background-size: 1440px auto;\n  background-repeat: no-repeat;\n  margin-top: calc(var(--body-top-padding) * -1);\n\n  @media (max-width: 1024px) {\n    padding: 50px 0;\n  }\n\n  @media (max-width: 800px) {\n    background-image: none;\n    padding: 2rem 0;\n  }\n`;\n\nconst Container = styled.div`\n  max-width: 1120px;\n  margin: 0 auto;\n  padding: 0 16px;\n`;\n\nconst Main = styled.div`\n  display: flex;\n  gap: 6.5rem;\n\n  @media (max-width: 1024px) {\n    flex-direction: column;\n    gap: 3rem;\n  }\n\n  @media (max-width: 800px) {\n    gap: 2rem;\n  }\n`;\n\nconst Menu = styled.div`\n  width: 7.5rem;\n  flex-shrink: 0;\n  text-align: right;\n  display: flex;\n  flex-direction: column;\n  gap: 1.5rem;\n  overflow: auto;\n  scroll-behavior: smooth;\n\n  @media (max-width: 1024px) {\n    width: 100%;\n    text-align: left;\n    flex-direction: row;\n  }\n`;\n\nconst MenuLink = styled(\"Link\")`\n  display: block;\n  font: var(--text-s);\n  font-weight: 600;\n  color: var(--sand12);\n  outline: none;\n\n  &:hover,\n  &:focus {\n    color: var(--sand12);\n    text-decoration: underline;\n  }\n\n  &[data-active=\"true\"] {\n    color: var(--violet7);\n  }\n`;\n\nconst Sections = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 3rem;\n  flex-grow: 1;\n`;\n\nconst Section = styled.div``;\n\nconst H1 = styled.h1`\n  font: var(--text-hero);\n  color: var(--sand12);\n  margin: 0 0 3rem;\n  padding-left: 14rem;\n\n  @media (max-width: 1024px) {\n    padding-left: 0;\n  }\n\n  @media (max-width: 800px) {\n    font: var(--text-3xl);\n    font-weight: 600;\n    margin: 0 0 2rem;\n  }\n`;\n\nconst H2 = styled.h2`\n  font: var(--text-l);\n  color: var(--sand12);\n  margin: 0 0 1.5rem;\n  font-weight: 600;\n`;\n\nconst Text = styled.p`\n  font: var(--${(p) => p.size ?? \"text-base\"});\n  font-weight: ${(p) => p.fontWeight};\n  color: var(--${(p) => p.color ?? \"sand12\"});\n  margin: 0;\n`;\n\nconst ThumbnailGrid = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr;\n  gap: 1.5rem;\n\n  @media (max-width: 850px) {\n    grid-template-columns: 1fr 1fr 1fr;\n  }\n\n  @media (max-width: 550px) {\n    gap: 0.5rem;\n    grid-template-columns: 1fr 1fr;\n  }\n`;\n\nconst ContentGrid = styled.div`\n  display: grid;\n  grid-template-columns: minmax(0, 1fr) minmax(0, 1fr);\n  gap: 2rem;\n\n  @media (max-width: 650px) {\n    grid-template-columns: minmax(0, 1fr);\n  }\n`;\n\nreturn (\n  <Wrapper>\n    <Container>\n      <H1>\n        {state.selectedTab === \"Search\" ? \"Search\" : selectedCategory?.title}\n      </H1>\n\n      <Main>\n        <Menu>\n          {state.categories.map((category) => {\n            return (\n              <MenuLink\n                href={`${appLibraryIndexUrl}?tab=${category.label}`}\n                data-active={state.selectedTab === category.label}\n                key={category.label}\n              >\n                {category.label}\n              </MenuLink>\n            );\n          })}\n\n          <MenuLink\n            href={`${appLibraryIndexUrl}?tab=Search`}\n            data-active={state.selectedTab === \"Search\"}\n          >\n            Search\n          </MenuLink>\n        </Menu>\n\n        <Sections>\n          {state.selectedTab === \"Search\" && (\n            <Widget src=\"near/widget/AppLibrary.Search\" />\n          )}\n\n          {state.selectedTab !== \"Search\" && selectedCategory && (\n            <>\n              {selectedCategory.sections.map((section) => {\n                switch (section.format) {\n                  case \"MEDIUM\":\n                    return (\n                      <Section key={section.title}>\n                        {section.title && <H2>{section.title}</H2>}\n                        <ThumbnailGrid>\n                          {section.items.map((item) => {\n                            return (\n                              <Widget\n                                src=\"near/widget/AppLibrary.AppThumbnail\"\n                                key={item.author + item.widget_name}\n                                props={{\n                                  author: item.author,\n                                  image: item.image,\n                                  name: item.name,\n                                  widgetName: item.widget_name,\n                                }}\n                              />\n                            );\n                          })}\n                        </ThumbnailGrid>\n                      </Section>\n                    );\n                  case \"SMALL\":\n                    return (\n                      <Section key={section.title}>\n                        {section.title && <H2>{section.title}</H2>}\n\n                        <ContentGrid>\n                          {section.items.map((item) => {\n                            return (\n                              <Widget\n                                src=\"near/widget/AppLibrary.AppCard\"\n                                key={item.author + item.widget_name}\n                                props={{\n                                  src: `${item.author}/widget/${item.widget_name}`,\n                                  metadata: {\n                                    image: item.image,\n                                    name: item.name,\n                                    tags: item.tags,\n                                  },\n                                  blockHeight: item.receipt_block_height,\n                                }}\n                              />\n                            );\n                          })}\n                        </ContentGrid>\n                      </Section>\n                    );\n\n                  case \"ARTICLE\":\n                    return (\n                      <Section key={section.title}>\n                        {section.title && <H2>{section.title}</H2>}\n\n                        <ContentGrid>\n                          {section.items.map((item) => {\n                            return (\n                              <Widget\n                                src=\"near/widget/AppLibrary.ArticleSummary\"\n                                key={item.url}\n                                props={{\n                                  author: item.author,\n                                  image: item.image,\n                                  title: item.title,\n                                  url: item.url,\n                                }}\n                              />\n                            );\n                          })}\n                        </ContentGrid>\n                      </Section>\n                    );\n\n                  default:\n                    return null;\n                }\n              })}\n            </>\n          )}\n        </Sections>\n      </Main>\n    </Container>\n  </Wrapper>\n);\n", "metadata": {"fork_of": "scopalaffairs.near/widget/AppLibrary.IndexPage@104769651"}, "branch": {"draft": null}, "widget_modules_used": null, "widget_url": "https://near.social/#/scopalaffairs.near/widget/AppLibrary.IndexPage", "fact_widget_deployments_id": "dd952cfd90bf670929eeb69e3f09c7f2", "inserted_timestamp": "2023-12-13T13:51:32.918Z", "modified_timestamp": "2023-12-20T03:22:11.422Z", "__row_index": 6}