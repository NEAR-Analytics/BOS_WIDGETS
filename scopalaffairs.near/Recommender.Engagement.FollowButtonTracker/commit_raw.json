{"tx_hash": "2x3xQSwpQkJjZPHWQWtM1h4qUSXaewnuJBisfkmgQEvt", "action_id_social": "9pSwPpJmWFJTSdoQfYcuwLCiuN3hUCwgsFZKsEBz4s5y-0-widget", "block_id": 102095589, "block_timestamp": "2023-09-27T20:20:10.789Z", "signer_id": "scopalaffairs.near", "widget_name": "Recommender.Engagement.FollowButtonTracker", "source_code": "///use:\n// {<Avatar\n//     onClick={() => {\n//       trackEngagement({\n//         targetSigner: props.accountId,\n//         rank: props.rank,\n//         eventType: \"people page avatar profile entry\",\n//       });\n//     }}\n//     href={profileUrl}\n//   >\n//     <Widget\n//       src=\"${REPL_MOB}/widget/Image\"\n//       props={{\n//         image: props.profileImage || profile.image,\n//         alt: props.profileName || profile.name,\n//         fallbackUrl:\n//           \"https://ipfs.near.social/ipfs/bafkreibiyqabm3kl24gcb2oegb7pmwdi6wwrpui62iwb44l7uomnn3lhbi\",\n//       }}\n//     />\n//   </Avatar>\n//   <CenteredLinksWrapper\n//     onClick={() => {\n//       trackEngagement({\n//         targetSigner: props.accountId,\n//         rank: props.rank,\n//         eventType: \"people page profile entry\",\n//       });\n//     }}\n//   >\n//     <TextLink href={profileUrl} ellipsis bold>\n//       {props.profileName || profile.name || accountId.split(\".near\")[0]}\n//     </TextLink>\n//     <TextLink href={profileUrl} ellipsis>\n//       @{accountId}\n//     </TextLink>\n//   </CenteredLinksWrapper>\n\n// }\n\n///////////////\nconst dataplane = \"https://neardanieossax.dataplane.rudderstack.com\"; //test\n// const dataplane = \"https://near.dataplane.rudderstack.com\"; //prod\nconst uri = \"/v1/track\";\nconst api_url = `${dataplane}${uri}`;\nconst auth = \"Basic MlVvMlBYSE9UdzJjUWRucThJUWJQTG9DOG5mOg==\"; //test\n// const auth = \"Basic MlVub3dMd2lXRnc3YzM1QU11RUVkREVJa2RvOg==\"; //prod\nconst currentTimeStamp = new Date().toISOString();\n\nconst trackEngagement = (targetSigner, eventType, rank) => {\n  const payload = {\n    userId: context.accountId,\n    event: eventType,\n    properties: {\n      targetSignerId: targetSigner,\n      rank: rank,\n    },\n    timestamp: new Date().toISOString(),\n  };\n\n  asyncFetch(api_url, {\n    body: JSON.stringify({ payload }),\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: auth,\n    },\n    method: \"POST\",\n  })\n    .then((response) => response.json())\n    .then((data) => console.log(data))\n    .catch((error) => console.log(\"Error:\", error));\n};\n////////////\n\nif (\n  !props.accountId ||\n  !context.accountId ||\n  context.accountId === props.accountId\n) {\n  return \"\";\n}\n\nconst followEdge = Social.keys(\n  `${context.accountId}/graph/follow/${props.accountId}`,\n  undefined,\n  {\n    values_only: true,\n  }\n);\n\nconst inverseEdge = Social.keys(\n  `${props.accountId}/graph/follow/${context.accountId}`,\n  undefined,\n  {\n    values_only: true,\n  }\n);\n\nconst loading = followEdge === null || inverseEdge === null;\nconst isFollowing = Object.keys(followEdge || {}).length > 0;\nconst isInverse = Object.keys(inverseEdge || {}).length > 0;\n\nconst type = follow ? \"unfollow\" : \"follow\";\n\nconst data = {\n  graph: { follow: { [props.accountId]: isFollowing ? null : \"\" } },\n  index: {\n    graph: JSON.stringify({\n      key: \"follow\",\n      value: {\n        type,\n        accountId: props.accountId,\n      },\n    }),\n    notify: JSON.stringify({\n      key: props.accountId,\n      value: {\n        type,\n      },\n    }),\n  },\n};\n\nconst Wrapper = styled.div`\n  .follow-button {\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    gap: 8px;\n    padding: 8px 16px;\n    height: 32px;\n    border-radius: 100px;\n    font-weight: 600;\n    font-size: 12px;\n    line-height: 15px;\n    text-align: center;\n    cursor: pointer;\n    background: #fbfcfd;\n    //background: red;\n    border: 1px solid #d7dbdf;\n    color: #006adc !important;\n    white-space: nowrap;\n\n    &:hover,\n    &:focus {\n      background: #ecedee;\n      text-decoration: none;\n      outline: none;\n    }\n\n    i {\n      color: #7e868c;\n    }\n\n    .bi-16 {\n      font-size: 16px;\n    }\n  }\n`;\n\nreturn (\n  <Wrapper className={props.className}>\n    <CommitButton disabled={loading} className=\"follow-button\" data={data}>\n      {isFollowing && <i className=\"bi-16 bi bi-check\"></i>}\n      {isFollowing ? \"Following\" : isInverse ? \"Follow Back\" : \"Follow\"}\n    </CommitButton>\n  </Wrapper>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/scopalaffairs.near/widget/Recommender.Engagement.FollowButtonTracker", "fact_widget_deployments_id": "8b2144e20c9ab43a7ad337621ca6e7db", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}