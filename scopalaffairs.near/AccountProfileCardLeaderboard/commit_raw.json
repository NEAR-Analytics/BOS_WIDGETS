{"tx_hash": "pCkmdy4dqX1xvVgTk5VcSMHLRdhDq7rZQ8FERo6qDUW", "action_id_social": "6omKBWmwYvYk6tSnU4Bob9b3TCW9ggxMCCLtn4QDk94J-0-widget", "block_id": 98862421, "block_timestamp": "2023-08-15T12:58:39.062Z", "signer_id": "scopalaffairs.near", "widget_name": "AccountProfileCardLeaderboard", "source_code": "const Avatar = styled.a`\n  width: 60px;\n  height: 60px;\n  flex-shrink: 0;\n  border: 1px solid #eceef0;\n  overflow: hidden;\n  border-radius: 56px;\n  transition: border-color 200ms;\n\n  img {\n    object-fit: cover;\n    width: 100%;\n    height: 100%;\n  }\n\n  &:hover,\n  &:focus {\n    border-color: #d0d5dd;\n  }\n`;\n\nconst Button = styled.div`\n  div > .follow-button {\n    color: #000 !important;\n}\n`;\n\nconst Card = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  gap: 12px;\n  width: 100%;\n  border-radius: 12px;\n  z-index: 1070;\n  background: #fff;\n  border: 1px solid #eceef0;\n  box-shadow: 0px 1px 3px rgba(16, 24, 40, 0.1),\n    0px 1px 2px rgba(16, 24, 40, 0.06);\n  overflow: hidden;\n  padding: 16px 0;\n`;\n\nconst NoTags = styled.div`\n  height: 20px;\n`;\n\nconst Score = styled.div`\n  font-size: 14px;\n  color: #90908C;\n  padding: 0;\n`;\n\nconst Scores = styled.div`\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  width: 100%;\n  padding: 16px 24px;\n  border-bottom: 1px solid #eceef0\n`;\n\nconst TagsWrapper = styled.div`\n`;\n\nconst TextLink = styled.a`\n  display: block;\n  margin: 0;\n  font-size: 14px;\n  line-height: 18px;\n  color: ${(p) => (p.bold ? \"#11181C !important\" : \"#687076 !important\")};\n  font-weight: ${(p) => (p.bold ? \"600\" : \"400\")};\n  font-size: ${(p) => (p.small ? \"12px\" : \"14px\")};\n  overflow: ${(p) => (p.ellipsis ? \"hidden\" : \"visible\")};\n  text-overflow: ${(p) => (p.ellipsis ? \"ellipsis\" : \"unset\")};\n  white-space: nowrap;\n  outline: none;\n  max-width: 230px;\n\n  &:focus,\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n\nconst accountId = props.accountId;\nconst profile = props.profile || Social.get(`${accountId}/profile/**`, \"final\");\nconst tags = Object.keys(profile.tags || {});\nconst profileUrl = `#/near/widget/ProfilePage?accountId=${accountId}`;\n\nreturn (\n  <Card>\n    <Avatar href={profileUrl}>\n      <Widget\n        src=\"mob.near/widget/Image\"\n        props={{\n          image: profile.image,\n          alt: profile.name,\n          fallbackUrl:\n            \"https://ipfs.near.social/ipfs/bafkreibiyqabm3kl24gcb2oegb7pmwdi6wwrpui62iwb44l7uomnn3lhbi\",\n        }}\n      />\n    </Avatar>\n\n    <div>\n      <TextLink href={profileUrl} ellipsis bold>\n        {profile.name || accountId.split(\".near\")[0]}\n      </TextLink>\n      <TextLink href={profileUrl} ellipsis>\n        @{accountId}\n      </TextLink>\n    </div>\n\n    {tags.length > 0 ? (\n      <TagsWrapper>\n        <Widget src=\"near/widget/Tags\" props={{ tags, scroll: true }} />\n      </TagsWrapper>\n    ) : (\n      <TagsWrapper>\n        <NoTags></NoTags>\n      </TagsWrapper>\n    )}\n\n    {props.following !== null &&\n      props.followers !== null &&\n      props.likers !== null && (\n        <Scores>\n          <Score>{props.followers.toString()} Followers</Score>\n          <Score>{props.following.toString()} Following</Score>\n          <Score>{props.likers.toString()} Likes</Score>\n        </Scores>\n      )}\n\n    {!!context.accountId && context.accountId !== props.accountId && (\n      <Button>\n        <Widget\n          src=\"near/widget/FollowButton\"\n          props={{ accountId: props.accountId }}\n        />\n      </Button>\n    )}\n  </Card>\n);\n", "metadata": null, "branch": {"draft": null}, "widget_modules_used": null, "widget_url": "https://near.social/#/scopalaffairs.near/widget/AccountProfileCardLeaderboard", "fact_widget_deployments_id": "77a3e140183b99d1fb736069023b92c0", "inserted_timestamp": "2023-08-15T14:41:36.826Z", "modified_timestamp": "2023-08-15T14:41:36.826Z", "__row_index": 37}