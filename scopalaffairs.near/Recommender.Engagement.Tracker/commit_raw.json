{"tx_hash": "Dtdy6Mf2bRE9xYXdjEw3Ev9fygQpYdLF5NFrRGPiuQa3", "action_id_social": "Bf3UmExe8m2ef2FMP6ngNwLNFvm5G7HhT1KR4iXkUMyb-0-widget", "block_id": 102213910, "block_timestamp": "2023-09-29T09:39:19.742Z", "signer_id": "scopalaffairs.near", "widget_name": "Recommender.Engagement.Tracker", "source_code": "const dataplane = \"https://neardanieossax.dataplane.rudderstack.com\"; //test\n// const dataplane = \"https://near.dataplane.rudderstack.com\"; //prod\nconst uri = \"/v1/track\";\nconst api_url = `${dataplane}${uri}`;\nconst auth = \"Basic MlVvMlBYSE9UdzJjUWRucThJUWJQTG9DOG5mOg==\"; //test\n// const auth = \"Basic MlVub3dMd2lXRnc3YzM1QU11RUVkREVJa2RvOg==\"; //prod\nconst currentTimeStamp = new Date().toISOString();\n\n// since we already have rudderstack in near, we should be abe to pass the js object to any analysics trackign\n\n\nconst trackEngagement = () => {\n  console.log(\"trackEngagement\", props);\n  const payload = {\n    event: eventType,\n    properties: {\n      targetSignerId: props.targetSigner,\n      rank: props.rank,\n      component: context.widgetSrc,\n  \n    },\n    timestamp: new Date().toISOString(),\n  };\n\n  asyncFetch(api_url, {\n    body: JSON.stringify({ payload }),\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: auth,\n    },\n    method: \"POST\",\n  })\n    .then((response) => response.json())\n    .then((data) => console.log(data))\n    .catch((error) => console.log(\"Error:\", error));\n};\n\nprops.onClick ? trackEngagement(props) : null\n\nreturn <>{props.children}</>;\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/scopalaffairs.near/widget/Recommender.Engagement.Tracker", "fact_widget_deployments_id": "f297635755039795225ead94cb96b477", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 1}