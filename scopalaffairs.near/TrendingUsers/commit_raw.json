{"tx_hash": "9zoXJGa4xWj6ie6f5o8HpTPXBr27Ly3sFocpiPrHk265", "action_id_social": "toV7qA1nc2viRDGYAxWEwuQi99Ks7Uk7yzRuSh5mHcn-0-widget", "block_id": 98588720, "block_timestamp": "2023-08-11T20:03:22.656Z", "signer_id": "scopalaffairs.near", "widget_name": "TrendingUsers", "source_code": null, "metadata": null, "branch": {"draft": {"": "let trendingUsersView = {};\nconst limitPerPage = 20;\n\nState.init({\n  currentPage: 1,\n});\n\nconst Button = styled.button`\n  display: block;\n  width: 100%;\n  padding: 8px;\n  height: 32px;\n  background: #fbfcfd;\n  border: 1px solid #d7dbdf;\n  border-radius: 50px;\n  font-weight: 600;\n  font-size: 12px;\n  line-height: 15px;\n  text-align: center;\n  cursor: pointer;\n  color: #11181c !important;\n  margin: 0;\n\n  &:hover,\n  &:focus {\n    background: #ecedee;\n    text-decoration: none;\n    outline: none;\n  }\n\n  span {\n    color: #687076 !important;\n  }\n`;\n\nconst H1 = styled.h1`\n  font-weight: 600;\n  font-size: 64px;\n  line-height: normal;\n  color: #11181c;\n  margin: 4rem 0;\n`;\n\nconst Item = styled.div`\n`;\n\nconst Items = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, minmax(0, 1fr));\n  gap: 24px;\n\n  @media (max-width: 1024px) {\n    grid-template-columns: repeat(2, minmax(0, 1fr));\n  }\n\n  @media (max-width: 800px) {\n    grid-template-columns: minmax(0, 1fr);\n  }\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 48px;\n`;\n\n// // ASYNC VERSION >>>>>\n// replace with value from meta file, or passed in the json\nconst num_pages = 2;\n\nconst BASE_URL =\n  \"https://storage.googleapis.com/databricks-near-query-runner/output\";\n\nconst fetchPage = (page) => {\n  const url = `${BASE_URL}/trending_users_page_${page}.json`;\n  return asyncFetch(url);\n};\n\nconst fetchAllPages = (currentPage) => {\n  const results = [];\n  if (currentPage <= num_pages) {\n    const pageData = fetchPage(currentPage);\n    if (pageData) {\n      results.push(pageData);\n    }\n    // const nextPageData = fetchAllPages(currentPage + 1);\n    // results.push(...nextPageData);\n  }\n  return results;\n};\n\nconst getTrendingUsersAsync = () => {\n  fetchAllPages(1).then((results) => {\n    console.log(\"fulfill\", results);\n    State.update({\n      data: JSON.parse(results.body),\n    });\n  });\n};\n// // <<<<<<\n\nconst getTrendingUsers = (page) => {\n  try {\n    const url = `https://storage.googleapis.com/databricks-near-query-runner/output/trending_users_page_${page}.json`;\n    const res = fetch(url);\n    if (res.ok) {\n      return res.body;\n    } else {\n      console.log(\"Error fetching the data.\");\n    }\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nconst trendingUsers = getTrendingUsers(state.currentPage);\nconst data = JSON.parse(trendingUsers);\nif (data) {\n  const trendingUsersList = data.data.map((user, index) => (\n    <Item key={index}>\n      <Widget\n        src=\"scopalaffairs.near/widget/AccountProfileCardLeaderboard\"\n        props={{\n          accountId: user.signer_id,\n          showTags: true,\n          showFollowerStats: true,\n          showFollowButton: state.multiSelectMode === false,\n          likers: user.likers,\n          followers: user.followers,\n          following: user.following,\n        }}\n      />\n    </Item>\n  ));\n\n  trendingUsersView = <Items className=\"list-group\">{trendingUsersList}</Items>;\n}\n\nif (data !== null && data.length === 0) {\n  return <Text>No data.</Text>;\n}\n\nconst showLoadMoreButton = getTrendingUsers(state.currentPage);\n\nconst loadMore = () => {\n  State.update({ currentPage: state.currentPage + 1 });\n};\n\nreturn (\n  <Wrapper>\n    <H1>Trending Users</H1>\n    {trendingUsersView}\n    {showLoadMoreButton && (\n      <Button type=\"button\" onClick={() => loadMore()}>\n        Load More\n      </Button>\n    )}\n  </Wrapper>\n);\n"}}, "widget_modules_used": null, "widget_url": "https://near.social/#/scopalaffairs.near/widget/TrendingUsers", "fact_widget_deployments_id": "2ce2473772534288a518eaa265038b7b", "inserted_timestamp": "2023-08-11T21:43:58.865Z", "modified_timestamp": "2023-08-11T21:43:58.865Z", "__row_index": 56}