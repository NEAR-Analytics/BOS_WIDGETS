{"tx_hash": "2X9mMQ8UqM1Y3xAufhz1kynVkCvLDnzuBzQqRPkXxpPB", "action_id_social": "HU6MWLyEwj61fgieUzLz7Bip2YrYFZDF5bfgBC69uoyB-0-widget", "block_id": 102615712, "block_timestamp": "2023-10-04T18:19:53.302Z", "signer_id": "scopalaffairs.near", "widget_name": "Recommender.Views.SimilarProfiles", "source_code": "const Button = styled.button`\n  display: block;\n  width: 100%;\n  padding: 8px;\n  height: 32px;\n  background: #fbfcfd;\n  border: 1px solid #d7dbdf;\n  border-radius: 50px;\n  font-weight: 600;\n  font-size: 12px;\n  line-height: 15px;\n  text-align: center;\n  cursor: pointer;\n  color: #11181c !important;\n  margin: 0;\n\n  &:hover,\n  &:focus {\n    background: #ecedee;\n    text-decoration: none;\n    outline: none;\n  }\n\n  span {\n    color: #687076 !important;\n  }\n`;\n\nconst Profile = styled.div``;\n\nconst Profiles = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, minmax(0, 1fr));\n  gap: 24px;\n\n  @media (max-width: 1024px) {\n    grid-template-columns: repeat(3, minmax(0, 1fr));\n  }\n\n  @media (max-width: 800px) {\n    grid-template-columns: minmax(0, 1fr);\n  }\n`;\n\nconst RecommendedUsers = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  padding-bottom: 100px;\n`;\n\nState.init({\n  currentPage: 1,\n  userData: [],\n  isLoading: true,\n  error: null,\n  totalPages: 1,\n});\n\nconst updateState = (data, totalPageNum) => {\n  State.update({\n    isLoading: false,\n    userData: [...state.userData, ...data],\n    totalPages: totalPageNum,\n  });\n};\n\nconst displayedUsers = props.returnElements\n  ? state.userData.slice(0, props.returnElements)\n  : state.userData;\n\nconst passedContext = props.fromContext;\nconst fromContext = { ...passedContext, scope: props.scope || null };\n\nconst STORE = \"storage.googleapis.com\";\nconst BUCKET = \"databricks-near-query-runner\";\nconst BASE_URL = `https://${STORE}/${BUCKET}/output/recommendations`;\nconst algorithm = \"similarity_estimation\";\nconst dataset = `${BASE_URL}/${algorithm}_${props.accountId}`;\n\nconst getRecommendedUsers = (page) => {\n  try {\n    const url = `${dataset}_${page}.json`;\n    if (state.currentPage == 1) {\n      const res = fetch(url);\n      if (res.ok) {\n        const parsedResults = JSON.parse(res.body);\n        const totalPageNum = parsedResults.total_pages || 10;\n        updateState(parsedResults.data, totalPageNum);\n      } else {\n        console.log(\n          res,\n          \"Error fetching data. Try reloading the page, or no data available.\"\n        );\n      }\n    } else {\n      asyncFetch(url).then((res) => {\n        if (res.ok) {\n          const parsedResults = JSON.parse(res.body);\n          const totalPageNum = parsedResults.total_pages || 10;\n          updateState(parsedResults.data, totalPageNum);\n        } else {\n          console.log(res, \"Error fetching data. Try reloading the page.\");\n        }\n      });\n    }\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nconst loadMore = () => {\n  const nextPage = state.currentPage + 1;\n  if (nextPage <= state.totalPages) {\n    State.update({ currentPage: nextPage });\n    getRecommendedUsers(nextPage);\n  }\n};\n\nif (state.isLoading) {\n  getRecommendedUsers(state.currentPage);\n}\n\nreturn (\n  <RecommendedUsers>\n    {state.isLoading && displayedUsers.length == null && <p>Loading...</p>}\n    {state.error && <p>Error: {state.error}</p>}\n    {(displayedUsers.length < 4 || displayedUsers == null) &&\n      state.isLoading &&\n      (props.scope == \"friends\" || props.scope === \"similar\") && (\n        <p>\n          Follow More Users to Unlock More Personalized Recommendations, See\n          Who\u2019s\n          <a href=\"https://near.org/scopalaffairs.near/widget/PeoplePage?tab=trending\">\n            Trending\n          </a>\n        </p>\n      )}\n    <Profiles>\n      {displayedUsers.map((user, index) => (\n        <Profile key={index}>\n          <Widget\n            src=\"scopalaffairs.near/widget/Recommender.Account.AccountProfileLargeCard\"\n            props={{\n              accountId:\n                user.recommended_profile ||\n                user.similar_profile ||\n                user.signer_id,\n              accountIdRank: index + 1,\n              showTags: true,\n              showFollowerStats: true,\n              showFollowButton: state.multiSelectMode === false,\n              followsYou: user.follows_you || null,\n              becauseYouFollow: user.because_you_follow || null,\n              likers: user.likers || null,\n              followers: user.followers || null,\n              following: user.following || null,\n              profileImage: user.profileImage || null,\n              profileName: user.profileName || null,\n              sidebar: props.sidebar || null,\n              scope: props.scope || null,\n              fromContext: fromContext,\n            }}\n          />\n        </Profile>\n      ))}\n    </Profiles>\n    {!props.returnElements && state.currentPage < state.totalPages ? (\n      <Button type=\"button\" onClick={() => loadMore()}>\n        Load More\n      </Button>\n    ) : null}\n  </RecommendedUsers>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/scopalaffairs.near/widget/Recommender.Views.SimilarProfiles", "fact_widget_deployments_id": "ff424c11d1cdbb442db4e55316460a7d", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}