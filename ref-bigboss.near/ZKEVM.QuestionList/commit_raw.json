{"tx_hash": "GvDyCqKivZWJFrGNfqMKGhE6SFiwjZMnL9saHofxVdm3", "action_id_social": "EBmDfeRWhco3Yqa5R51pDNUzv8HBpxaPcf1mxMpYmPNC-0-widget", "block_id": 97843517, "block_timestamp": "2023-08-01T13:49:06.486Z", "signer_id": "ref-bigboss.near", "widget_name": "ZKEVM.QuestionList", "source_code": "const Container = styled.div`\n  .title {\n    display: flex;\n    align-items: center;\n    padding-left: 0px;\n    margin-top: 20px;\n    img {\n      width: 28px;\n      margin-right: 10px;\n    }\n    span {\n      font-size: 40px;\n      color: #fff;\n      font-weight: 700;\n    }\n  }\n  .search-area {\n    display: flex;\n    justify-content: space-between;\n    align-items: flex-end;\n    transform: translateY(-10px);\n    .description {\n      font-size: 20px;\n      color: #979abe;\n      font-weight: 500;\n    }\n    .search {\n      display: flex;\n      align-items: center;\n      jusitfy-content: space-between;\n      border-bottom: 1px solid #373a53;\n      input {\n        font-size: 20px;\n        font-weight: 500;\n        color: #fff;\n        outline: none;\n        background: none;\n        border: none;\n        &:focus {\n          box-shadow: none;\n        }\n      }\n    }\n  }\n  .noData {\n    display: flex;\n    justify-content: center;\n    font-size: 18px;\n    color: #4f5375;\n    font-weight: 500;\n    margin-top: 100px;\n  }\n`;\nconst List = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 30px 20px;\n  margin-top: 36px;\n  .itemDiv {\n    width: 250px;\n  }\n`;\n\nconst ListItem = styled.div`\n  width: 250px;\n  .body {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    height: 108px;\n    border-radius: 20px;\n    background-color: #373a53;\n    padding: 12px 20px;\n    &:hover {\n      text-decoration: none;\n    }\n    .item-title {\n      font-size: 16px;\n      color: #fff;\n      font-weight: 700;\n      flex-wrap: wrap;\n      text-align: center;\n      .num {\n        font-size: 14px;\n        color: #979abe;\n        margin: 0 3px;\n      }\n    }\n    .platform {\n      margin-top: 8px;\n      img {\n        width: 26px;\n        height: 26px;\n        margin-right: 5px;\n      }\n      span {\n        font-size: 14px;\n        color: #979abe;\n      }\n    }\n  }\n  .foot {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    font-size: 14px;\n    color: #979abe;\n    margin-top: 12px;\n    padding: 0 12px;\n  }\n`;\n\nconst Back = styled.a`\n  display: flex;\n  align-items: center;\n  img {\n    margin-right: 14px;\n    cursor: pointer;\n  }\n  span {\n    color: #979abe;\n    font-size: 18px;\n    font-weight: 500;\n    cursor: pointer;\n  }\n  &:hover {\n    text-decoration: none;\n  }\n`;\nState.init({\n  hotActionList: [],\n  searchActionList: [],\n  keywords: ''\n});\nfunction get_hot_action_list() {\n  asyncFetch(\n    \"https://bos-api.delink.one/get-hot-action?hot_number=20\"\n  ).then((res) => {\n    const result = JSON.parse(res.body || {}).data || [];\n    State.update({\n      hotActionList: result,\n      searchActionList: result,\n    });\n  });\n}\nif (state.hotActionList.length == 0) {\n  get_hot_action_list();\n}\n\nfunction searchBykeyWords(e) {\n  const value = e.target.value.toLowerCase();\n  const search_result = state.hotActionList.filter((action) => {\n    const { action_title } = action;\n    return action_title.toLowerCase().includes(value);\n  });\n  State.update({\n    searchActionList: search_result,\n    keywords: value,\n  });\n}\nfunction get_item_title(action) {\n  const { action_title } = action;\n  const title_low = action_title.toLowerCase();\n  const key_low = state.keywords.toLowerCase();\n  const start_key_index = title_low.indexOf(key_low);\n  const end_key_index = start_key_index + key_low.length;\n  \n  const result = [];\n  const arr = action_title.split(\" \");\n  arr.forEach((split) => {\n    const start_split_index = action_title.indexOf(split);\n    const end_split_index = start_split_index + split.length;\n    const start_index = Math.max(start_key_index, start_split_index);\n    const end_index = Math.min(end_key_index, end_split_index);\n    if (end_index > start_index) { // hit\n      result.push(<span style={{color:'#E9F456'}}>{split}</span>, ' ')\n    } else { // not hit\n      if (Number(split)) {\n        result.push(<label className=\"num\">{split}</label>, ' ')\n      } else {\n        result.push(split, ' ');\n      } \n    }\n  })\n  return result;\n}\nconst template_icons = {\n  ZkEvm:\n    \"https://ipfs.near.social/ipfs/bafkreiftqxncp4pt36z5mcfzizbkccoufksmz2f4zhnproxv4krfb5qmsm\",\n  \"ZkEvm-bridge\":\n    \"https://ipfs.near.social/ipfs/bafkreigu2kdqzug45li74xcdhokazx7gv2yopml6x5bwrnjrkx2qsjrsni\",\n  AAVE: \"https://ipfs.near.social/ipfs/bafkreibveumzusupe5rvk4nffzdipquvatfg5lagg7c6jaor2b3hgigw5e\",\n};\n\nconst SwapTokens = [\n  {\n    address: \"0x4f9a0e7fd2bf6067db6994cf12e4495df938e6e9\",\n    chainId: 1101,\n    symbol: \"WETH\",\n    decimals: 18,\n    logoURI:\n      \"https://assets.coingecko.com/coins/images/2518/small/weth.png?1628852295\",\n  },\n  {\n    address: \"0xa2036f0538221a77a3937f1379699f44945018d0\",\n    chainId: 1101,\n    symbol: \"MATIC\",\n    extra: true,\n    decimals: 18,\n    logoURI:\n      \"https://assets.coingecko.com/coins/images/4713/small/matic-token-icon.png\",\n  },\n  {\n    address: \"0xC5015b9d9161Dca7e18e32f6f25C4aD850731Fd4\",\n    chainId: 1101,\n    symbol: \"DAI\",\n    extra: true,\n    decimals: 18,\n    logoURI:\n      \"https://assets.coingecko.com/coins/images/9956/small/Badge_Dai.png?1687143508\",\n  },\n  {\n    address: \"0xA8CE8aee21bC2A48a5EF670afCc9274C7bbbC035\",\n    chainId: 1101,\n    symbol: \"USDC\",\n    decimals: 6,\n    logoURI:\n      \"https://assets.coingecko.com/coins/images/6319/small/USD_Coin_icon.png\",\n  },\n\n  {\n    address: \"0x1E4a5963aBFD975d8c9021ce480b42188849D41d\",\n    chainId: 1101,\n    symbol: \"USDT\",\n    decimals: 6,\n    logoURI:\n      \"https://assets.coingecko.com/coins/images/325/small/Tether.png?1668148663\",\n  },\n  {\n    address: \"0xea034fb02eb1808c2cc3adbc15f447b93cbe08e1\",\n    chainId: 1101,\n    symbol: \"WBTC\",\n    decimals: 8,\n    extra: true,\n    logoURI:\n      \"https://assets.coingecko.com/coins/images/7598/small/wrapped_bitcoin_wbtc.png?1548822744\",\n  },\n];\nfunction get_link(action) {\n  let link;\n  const arr = action.action_title.split(/\\s+/);\n  const isBridge = arr[0].toLowerCase() === \"bridge\";\n  const isSwap = arr[0].toLowerCase() === \"swap\";\n  const isLending = [\"repay\", \"supply\", \"borrow\"].includes(\n    arr[0].toLowerCase()\n  );\n  if (isBridge) {\n    link = \"/ref-bigboss.near/widget/ZKEVMSwap.zkevm-bridge?source=question_list\";\n  }\n  if (isSwap) {\n    link = \"/ref-bigboss.near/widget/ZKEVMSwap.zkevm-swap?source=question_list\";\n  }\n  if (isLending) {\n    link = `/ref-bigboss.near/widget/ZKEVM.AAVE${\n      arr[0].toLowerCase() == \"supply\" ? \"\" : \"?tab=borrow\"\n    }`;\n  }\n  return link;\n}\nfunction onSaveParams(action) {\n  const arr = action.action_title.split(/\\s+/);\n  const isBridge = arr[0].toLowerCase() === \"bridge\";\n  const isSwap = arr[0].toLowerCase() === \"swap\";\n  if (isBridge) {\n    const [action_type, symbol, from, chain] = arr;\n    Storage.set(\"zk-evm-bridge-params\", {\n      symbol,\n      chain,\n    });\n    // console.log('symbol, chain', symbol, chain);\n  }\n\n  if (isSwap) {\n    const [action_type, amount, symbol, on, dexName1, dexName2] = arr;\n    const token = SwapTokens.find((item) => item.symbol === symbol);\n    console.log(\"token: \", token);\n\n    Storage.set(\"zk-evm-swap-params\", {\n      amount,\n      symbol,\n      dexName: dexName1 + (dexName2 ? \" \" + dexName2 : \"\"),\n      assetId: token.address,\n    });\n    // console.log('amount, symbol, dexName, assetId', amount, symbol, dexName1 + (dexName2 ? \" \" + dexName2 : \"\"), token.address);\n  }\n}\nreturn (\n  <Container>\n    <Back href=\"/warmup\">\n      <img src=\"https://ipfs.near.social/ipfs/bafkreig7ezlwthp2u6gsoifpvbsjcepuyvtx33uyjaentqwvcoh64unvd4\"></img>\n      <span>Back</span>\n    </Back>\n    <div className=\"title\">\n      <img src=\"https://ipfs.near.social/ipfs/bafkreiaerml7c2sfbojxg64lms25qappcgoevsrfmquxagfbowhm45gyey\"></img>\n      <span>Quest Trends</span>\n    </div>\n    <div className=\"search-area\">\n      <div className=\"description\">Top 20 quest by users</div>\n      <div className=\"search\">\n        <input onChange={searchBykeyWords}></input>\n        <img src=\"https://ipfs.near.social/ipfs/bafkreia4oaaolx3jppkacw3rqxqtn66imuleqghejdq5xopmxjhtxflibm\"></img>\n      </div>\n    </div>\n    <List>\n      {state.searchActionList.map((action) => {\n        return (\n          <ListItem>\n            <div className=\"itemDiv\" onClick={() => onSaveParams(action)}>\n              <a className=\"body\" href={get_link(action)}>\n                <div className=\"item-title\">{get_item_title(action)}</div>\n                <div className=\"platform\">\n                  <img src={template_icons[action.template]}></img>\n                  <span>{action.template}</span>\n                </div>\n              </a>\n            </div>\n            <div className=\"foot\">\n              <span>Total Execution</span>\n              <span>{action.count_number}</span>\n            </div>\n          </ListItem>\n        );\n      })}\n    </List>\n    {state.searchActionList.length == 0 ? (\n      <p className=\"noData\">No result found</p>\n    ) : null}\n  </Container>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/ref-bigboss.near/widget/ZKEVM.QuestionList", "fact_widget_deployments_id": "6db125fc0d92c9668a9d9877ebdc0bf5", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 10}