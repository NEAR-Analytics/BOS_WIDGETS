{"tx_hash": "GsEGxUji3Hc3jp7qdWkft5eYWyQYFfaeYGsiL38MYwXb", "action_id_social": "8TF5sPtVrc5NSm9g9BNfRWFXEcHY9ytqznqC5Dkpnyd-0-widget", "block_id": 116448313, "block_timestamp": "2024-04-09T06:31:19.262Z", "signer_id": "alem-lib.near", "widget_name": "Index", "source_code": "\n  /** Bundle generated by Al\u00e9m Library v1.0.0-beta.13 - See more here: https://github.com/wpdas/alem */\n  /** Project repository: https://github.com/wpdas/alem-docs-web */\n  const updateAlemState = (updatedState) => { State.update({ alem: { ...state.alem, ...updatedState, }, });};const alemState = () => state.alem ;const AlemStateInitialBody = { alem: { ready: false, rootProps: props, alemEnvironment: \"production\", keepRoute: false, previousRoute: null, previousRouteParams: null, alemExternalStylesLoaded: false, alemExternalStylesBody: \"\", },};State.init(AlemStateInitialBody);State.update({ alem: { ...state.alem, rootProps: props } });const props = { ...props, alem: { ...state.alem, createRoute: (path, component) => ({ path, component }) , useParams: () => { let params = alemState().rootProps; return params; }, loadExternalStyles: (URLs) => { if (!URLs && !alemState().alemExternalStylesLoaded) { return; } let stylesBody = \"\"; const totalItems = URLs.length; let loadedCounter = 0; const loadStyle = (styleURL) => { asyncFetch(styleURL).then((response) => { Storage.set(styleURL, response.body); stylesBody += response.body; loadedCounter += 1; if (loadedCounter === totalItems) { updateAlemState({ alemExternalStylesLoaded: true, alemExternalStylesBody: stylesBody, }); } }); }; URLs.forEach((styleURL) => { props.alem.promisify( () => Storage.get(styleURL), (response) => { stylesBody += response; loadedCounter += 1; if (loadedCounter === totalItems) { updateAlemState({ alemExternalStylesLoaded: true, alemExternalStylesBody: stylesBody, }); } }, () => { loadStyle(styleURL); }, 100, ); }); return alemState().alemExternalStylesLoaded; }, promisify: ( caller, resolve, reject, _timeout, ) => { const timer = 100; const timeout = _timeout || 10000; let timeoutCheck = 0; const find = () => { const response = caller(); if (response !== undefined && response !== null) { resolve(response); } else { if (timeoutCheck < timeout) { setTimeout(find, timer); timeoutCheck += timer; } else { if (reject) { reject(); } } } }; find(); }, isDevelopment: alemState().alemEnvironment === \"development\", componentsCode: { Router: ` const props = props; const { routes, type, parameterName, alem, alemRoutes, initialRoute } = props; useEffect(() => { routes.forEach(route => { if (!route.component) { console.error(\\`Routes: Invalid component for route \"\\${route.path}\"\\`); } if (!route.path) { console.error(\"Routes: Invalid path:\", route.path); } }); }, [routes]); useEffect(() => { if (parameterName && parameterName !== alem.routeParameterName) { alemRoutes.updateRouteParameterName(parameterName); } }, []); const { routeParameterName, routeType, activeRoute } = alemRoutes; const routeParamName = parameterName || routeParameterName; const checkIfPathIsIncludedToRoutes = routePath => { let pathFound = false; if (routes) { routes.forEach(routeItem => { if (pathFound) return; if (!pathFound) { pathFound = routeItem.path === routePath; } }); } return pathFound; }; useEffect(() => { const bosProps = alem.rootProps; const maintainRoutesWhenDeveloping = alem.isDevelopment && alem.alemConfig_maintainRouteWhenDeveloping; if (routes) { let currentUrlPath = bosProps[routeParamName] && checkIfPathIsIncludedToRoutes(bosProps[routeParamName]) ? bosProps[routeParamName] : routes[0].path; const _routes = routes.map(route => route.path); const _type = type || \"URLBased\"; let _activeRoute = initialRoute || alemRoutes.activeRoute || currentUrlPath; if (!(currentUrlPath && routeType == \"URLBased\" && alemRoutes.routeBlocked)) { _activeRoute = maintainRoutesWhenDeveloping ? initialRoute || activeRoute : routes[0].path; } let _activeRouteParams = null; let _history = null; if (alem.keepRoute && type === \"ContentBased\") { const storedRouteProps = Storage.privateGet(\"alem::keep-route\"); if (storedRouteProps) { _history = storedRouteProps; const lastHistory = storedRouteProps[storedRouteProps.length - 1]; _activeRoute = lastHistory.route || null; _activeRouteParams = lastHistory.routeParams || null; } } if (!_activeRoute) { _activeRoute = routes[0].path; } if (!alemRoutes.routesInitialized) { alemRoutes.updateRouteParameters({ routes: _routes, routeType: _type, activeRoute: _activeRoute, routeParams: _activeRouteParams, history: _history, routeBlocked: true }); } } }, [routeType]); const Component = routes.find(route => route.path === activeRoute)?.component || routes[0].component || <></>; return <Component />; `, Sidebar: ` const Categories = { gettingStarted: \"Getting Started\", router: \"Router\", modules: \"Modules\", context: \"Context\", apis: \"APIs\", bos: \"BOS\"};const RoutesPath = { about: { path: \"about\", title: \"About\", category: Categories.gettingStarted }, installation: { path: \"installation\", title: \"Installation\", category: Categories.gettingStarted }, featureOverview: { path: \"feature-overview\", title: \"Feature Overview\", category: Categories.gettingStarted }, configFile: { path: \"config-file\", title: \"Config File\", category: Categories.gettingStarted }, cssFiles: { path: \"css-files\", title: \"CSS Files\", category: Categories.gettingStarted }, cli: { path: \"cli\", title: \"CLI\", category: Categories.gettingStarted }, deployingWithGithubActions: { path: \"deploying-with-github-actions\", title: \"Deploying with GitHub Actions\", category: Categories.gettingStarted }, installingModules: { path: \"installing-modules\", title: \"Installing Modules\", category: Categories.modules }, howToUseModules: { path: \"how-to-use-modules\", title: \"How to Use\", category: Categories.modules }, routes: { path: \"routes\", title: \"Routes\", category: Categories.router }, routeLink: { path: \"route-link\", title: \"Route Link\", category: Categories.router }, navigate: { path: \"navigate\", title: \"Navigate\", category: Categories.router }, getLocation: { path: \"get-location\", title: \"Get Location\", category: Categories.router }, useParams: { path: \"use-params\", title: \"Use Params\", category: Categories.router }, useRoutes: { path: \"useRoutes\", title: \"Use Routes\", category: Categories.router }, createAndUseContext: { path: \"create-and-use-context\", title: \"Create & Use Context\", category: Categories.context }, loadExternalStyles: { path: \"load-external-styles\", title: \"Load External Styles\", category: Categories.apis }, promisify: { path: \"promisify\", title: \"Promisify\", category: Categories.apis }, isDevelopment: { path: \"is-development\", title: \"Is Development\", category: Categories.apis }, createDebounce: { path: \"create-debounce\", title: \"Create Debounce\", category: Categories.apis }, bosProps: { path: \"bos-props\", title: \"APIs and Components\", category: Categories.bos }}; const navigate = { to: (route, params) => { const routeContext = useContext(\"alemRoutes\"); if (!routeContext) { console.error(\"navigate is being used without Router on top of it.\"); } if (routeContext.routes.includes(route)) { routeContext.updateRouteParameters({ ...routeContext, activeRoute: route, routeParams: params || {} }); } }, back: () => { const routeContext = useContext(\"alemRoutes\"); if (!routeContext) { console.error(\"navigate is being used without Router on top of it.\"); } const updatedHistory = routeContext.history; if (updatedHistory) { updatedHistory.pop(); const routeProps = updatedHistory.at(-1); if (routeProps.route) { routeContext.updateRouteParameters({ ...routeContext, history: updatedHistory, activeRoute: routeProps.route, routeParams: routeProps.routeParams }); } } }}; const RouteLink = ({ to, params, label, className, style, onClick, children}) => { const routeContext = useContext(\"alemRoutes\"); if (!routeContext) { console.error(\"RouteLink component is being used without Router on top of it.\"); } const onClickHandler = () => { if (onClick) { onClick(); } if (routeContext.routeType === \"ContentBased\") { navigate.to(to, params); } }; if (routeContext.routeType === \"URLBased\") { let strParams = \"\"; if (params) { Object.keys(params).forEach(paramKey => { strParams += \\`&\\${paramKey}=\\${params[paramKey]}\\`; }); } return <a onClick={onClickHandler} className={className} style={{ cursor: \"pointer\", textDecoration: \"none\", ...style }} href={\\`?\\${routeContext.routeParameterName || \"path\"}=\\${to}\\${strParams}\\`}> {label || children} </a>; } return <a style={{ cursor: \"pointer\", textDecoration: \"none\", ...style }} className={className} onClick={onClickHandler}> {label || children} </a>;}; const getLinksByCategory = (category, onItemClick) => { const { pathname } = getLocation(); return Object.keys(RoutesPath).map(routeKey => { const routeDetails = RoutesPath[routeKey]; if (routeDetails.category === category) { return <RouteLink to={routeDetails.path} onClick={onItemClick} label={routeDetails.title} className={pathname === routeDetails.path ? \"active\" : \"\"} />; } }).filter(item => !!item);}; const A_6 = styled.div\\` display: flex; flex-direction: column; gap: 16px; background: #fff; border-right: rgb(224 226 229) solid 1px; min-width: 240px; width: 240px; padding: 0px 17px 30px; margin-top: 40px; margin-right: 16px; z-index: 1; bottom: 0; margin-bottom: 40px; height: fit-content; @media (max-width: 800px) { width: 100%; } h3 { margin: 0; font-size: 14px; font-weight: 700; color: #292929; padding: 12px 21px 6px; } a { display: block; font-size: 14px; font-weight: 600; padding: 6px 21px; margin-bottom: 0; border-radius: 4px; color: rgb(129, 129, 129); cursor: pointer; transition: all 0.2s ease-in-out; text-decoration: none; text-transform: capitalize; } a.active { background: #edf4fc !important; color: #4498e0 !important; } a:hover { color: #4498e0 !important; }\\`;const SidebarAboutLogo = styled.img\\` align-self: center; @media (max-width: 800px) { display: none; }\\`; const getLocation = () => { const routes = useRoutes(); return { pathname: routes.activeRoute, routes: routes.routes, isRoutesReady: routes.routes && routes.routes.length > 0 };}; const useContext = contextKey => { const wasContextInitialized = props[contextKey].initialized; if (!wasContextInitialized) { return {}; } const contextKeys = props[contextKey].keys; const contextItems = {}; contextKeys.forEach(key => { contextItems[key] = props[contextKey][key]; }); return contextItems;}; const useRoutes = () => { const contextData = useContext(\"alemRoutes\"); if (!contextData) { console.error(\"useRoutes: You need to call \\`RouterProvider()\\` first.\"); } const data = { routesInitialized: contextData.routesInitialized, activeRoute: contextData.activeRoute, routeParameterName: contextData.routeParameterName, routes: contextData.routes, routeType: contextData.routeType, routeParams: contextData.routeParams, history: contextData.history }; return data;}; const { pathname } = getLocation(); const { routeParameterName } = useRoutes(); const [gettingStartedItems, setGettingStartedItems] = useState([]); const [routerItems, setRouterItems] = useState([]); const [modulesItems, setModulesItems] = useState([]); const [contextItems, setContextItems] = useState([]); const [apisItems, setApisItems] = useState([]); const [bosItems, setBosItems] = useState([]); useEffect(() => { const _gettingStartedItems = getLinksByCategory(\"Getting Started\"); const _routerItems = getLinksByCategory(\"Router\"); const _modulesItems = getLinksByCategory(\"Modules\"); const _contextItems = getLinksByCategory(\"Context\"); const _apisItems = getLinksByCategory(\"APIs\"); const _bosItems = getLinksByCategory(\"BOS\"); setGettingStartedItems(_gettingStartedItems); setRouterItems(_routerItems); setModulesItems(_modulesItems); setContextItems(_contextItems); setApisItems(_apisItems); setBosItems(_bosItems); }, [pathname, routeParameterName]); return <A_6> <SidebarAboutLogo src=\"https://cdn.jsdelivr.net/gh/wpdas/alem/docs/assets/near-script-logo.png\" width={60} alt=\"logo\" /> <div> <h3>Getting Started</h3> {gettingStartedItems} </div> <div> <h3>Modules (Experimental)</h3> {modulesItems} </div> <div> <h3>Routes</h3> {routerItems} </div> <div> <h3>Context</h3> {contextItems} </div> <div> <h3>Utils</h3> {apisItems} </div> <div> <h3>NEAR VM (BOS)</h3> {bosItems} </div> </A_6>; `, MobileNavBar: ` const Categories = { gettingStarted: \"Getting Started\", router: \"Router\", modules: \"Modules\", context: \"Context\", apis: \"APIs\", bos: \"BOS\"};const RoutesPath = { about: { path: \"about\", title: \"About\", category: Categories.gettingStarted }, installation: { path: \"installation\", title: \"Installation\", category: Categories.gettingStarted }, featureOverview: { path: \"feature-overview\", title: \"Feature Overview\", category: Categories.gettingStarted }, configFile: { path: \"config-file\", title: \"Config File\", category: Categories.gettingStarted }, cssFiles: { path: \"css-files\", title: \"CSS Files\", category: Categories.gettingStarted }, cli: { path: \"cli\", title: \"CLI\", category: Categories.gettingStarted }, deployingWithGithubActions: { path: \"deploying-with-github-actions\", title: \"Deploying with GitHub Actions\", category: Categories.gettingStarted }, installingModules: { path: \"installing-modules\", title: \"Installing Modules\", category: Categories.modules }, howToUseModules: { path: \"how-to-use-modules\", title: \"How to Use\", category: Categories.modules }, routes: { path: \"routes\", title: \"Routes\", category: Categories.router }, routeLink: { path: \"route-link\", title: \"Route Link\", category: Categories.router }, navigate: { path: \"navigate\", title: \"Navigate\", category: Categories.router }, getLocation: { path: \"get-location\", title: \"Get Location\", category: Categories.router }, useParams: { path: \"use-params\", title: \"Use Params\", category: Categories.router }, useRoutes: { path: \"useRoutes\", title: \"Use Routes\", category: Categories.router }, createAndUseContext: { path: \"create-and-use-context\", title: \"Create & Use Context\", category: Categories.context }, loadExternalStyles: { path: \"load-external-styles\", title: \"Load External Styles\", category: Categories.apis }, promisify: { path: \"promisify\", title: \"Promisify\", category: Categories.apis }, isDevelopment: { path: \"is-development\", title: \"Is Development\", category: Categories.apis }, createDebounce: { path: \"create-debounce\", title: \"Create Debounce\", category: Categories.apis }, bosProps: { path: \"bos-props\", title: \"APIs and Components\", category: Categories.bos }}; const getLinksByCategory = (category, onItemClick) => { const { pathname } = getLocation(); return Object.keys(RoutesPath).map(routeKey => { const routeDetails = RoutesPath[routeKey]; if (routeDetails.category === category) { return <RouteLink to={routeDetails.path} onClick={onItemClick} label={routeDetails.title} className={pathname === routeDetails.path ? \"active\" : \"\"} />; } }).filter(item => !!item);}; const A_7 = styled.div\\` display: flex; flex-direction: column; border-bottom: rgb(224 226 229) solid 1px; min-width: 240px; margin-top: 10px; margin-bottom: 40px; height: fit-content; @media (max-width: 800px) { width: 100%; } h3 { margin: 0; font-size: 14px; font-weight: 700; color: #292929; padding: 12px 21px 6px; } a { display: block; font-size: 14px; font-weight: 600; padding: 6px 21px; margin-bottom: 0; border-radius: 4px; color: rgb(129, 129, 129); cursor: pointer; transition: all 0.2s ease-in-out; text-decoration: none; text-transform: capitalize; } a.active { background: #edf4fc !important; color: #4498e0 !important; } a:hover { color: #4498e0 !important; }\\`;const NavBar = styled.div\\` display: flex; padding: 12px; justify-content: space-between;\\`;const CollapseButton = styled.button\\` background-color: rgb(243 244 246); border-radius: 12px; border: none; display: flex; justify-content: center; align-items: center; width: 80px;\\`;const A_8 = styled.img\\` align-self: center;\\`;const ItemsContainer = styled.button\\` display: flex; overflow: hidden; height: \\${props => props.collapsed ? \"fit-content\" : \"0px\"}; background-color: #fff; border: none; flex-direction: column; align-items: center; padding-bottom: \\${props => props.collapsed ? \"44px\" : \"0\"};\\`; const getLocation = () => { const routes = useRoutes(); return { pathname: routes.activeRoute, routes: routes.routes, isRoutesReady: routes.routes && routes.routes.length > 0 };}; const useRoutes = () => { const contextData = useContext(\"alemRoutes\"); if (!contextData) { console.error(\"useRoutes: You need to call \\`RouterProvider()\\` first.\"); } const data = { routesInitialized: contextData.routesInitialized, activeRoute: contextData.activeRoute, routeParameterName: contextData.routeParameterName, routes: contextData.routes, routeType: contextData.routeType, routeParams: contextData.routeParams, history: contextData.history }; return data;}; const navigate = { to: (route, params) => { const routeContext = useContext(\"alemRoutes\"); if (!routeContext) { console.error(\"navigate is being used without Router on top of it.\"); } if (routeContext.routes.includes(route)) { routeContext.updateRouteParameters({ ...routeContext, activeRoute: route, routeParams: params || {} }); } }, back: () => { const routeContext = useContext(\"alemRoutes\"); if (!routeContext) { console.error(\"navigate is being used without Router on top of it.\"); } const updatedHistory = routeContext.history; if (updatedHistory) { updatedHistory.pop(); const routeProps = updatedHistory.at(-1); if (routeProps.route) { routeContext.updateRouteParameters({ ...routeContext, history: updatedHistory, activeRoute: routeProps.route, routeParams: routeProps.routeParams }); } } }}; const useContext = contextKey => { const wasContextInitialized = props[contextKey].initialized; if (!wasContextInitialized) { return {}; } const contextKeys = props[contextKey].keys; const contextItems = {}; contextKeys.forEach(key => { contextItems[key] = props[contextKey][key]; }); return contextItems;}; const RouteLink = ({ to, params, label, className, style, onClick, children}) => { const routeContext = useContext(\"alemRoutes\"); if (!routeContext) { console.error(\"RouteLink component is being used without Router on top of it.\"); } const onClickHandler = () => { if (onClick) { onClick(); } if (routeContext.routeType === \"ContentBased\") { navigate.to(to, params); } }; if (routeContext.routeType === \"URLBased\") { let strParams = \"\"; if (params) { Object.keys(params).forEach(paramKey => { strParams += \\`&\\${paramKey}=\\${params[paramKey]}\\`; }); } return <a onClick={onClickHandler} className={className} style={{ cursor: \"pointer\", textDecoration: \"none\", ...style }} href={\\`?\\${routeContext.routeParameterName || \"path\"}=\\${to}\\${strParams}\\`}> {label || children} </a>; } return <a style={{ cursor: \"pointer\", textDecoration: \"none\", ...style }} className={className} onClick={onClickHandler}> {label || children} </a>;}; const [show, setShow] = useState(false); const closeMenu = () => { setShow(false); }; const { pathname } = getLocation(); const { routeParameterName } = useRoutes(); const [gettingStartedItems, setGettingStartedItems] = useState([]); const [routerItems, setRouterItems] = useState([]); const [modulesItems, setModulesItems] = useState([]); const [contextItems, setContextItems] = useState([]); const [apisItems, setApisItems] = useState([]); const [bosItems, setBosItems] = useState([]); useEffect(() => { const _gettingStartedItems = getLinksByCategory(\"Getting Started\", closeMenu); const _routerItems = getLinksByCategory(\"Router\", closeMenu); const _modulesItems = getLinksByCategory(\"Modules\", closeMenu); const _contextItems = getLinksByCategory(\"Context\", closeMenu); const _apisItems = getLinksByCategory(\"APIs\", closeMenu); const _bosItems = getLinksByCategory(\"BOS\", closeMenu); setGettingStartedItems(_gettingStartedItems); setRouterItems(_routerItems); setModulesItems(_modulesItems); setContextItems(_contextItems); setApisItems(_apisItems); setBosItems(_bosItems); }, [pathname, routeParameterName]); return <A_7> <NavBar> <RouteLink to=\"about\"> <A_8 src=\"https://cdn.jsdelivr.net/gh/wpdas/alem/docs/assets/near-script-logo.png\" width={40} alt=\"logo\" /> </RouteLink> <CollapseButton type=\"button\" onClick={() => { setShow(!show); }}> {!show ? <span className=\"material-symbols-outlined\">menu</span> : <span className=\"material-symbols-outlined\">close</span>} </CollapseButton> </NavBar> <ItemsContainer collapsed={show}> <div> <h3>Getting Started</h3> {gettingStartedItems} </div> <div> <h3>Modules (Experimental)</h3> {modulesItems} </div> <div> <h3>Routes</h3> {routerItems} </div> <div> <h3>Context</h3> {contextItems} </div> <div> <h3>Utils</h3> {apisItems} </div> <div> <h3>NEAR VM (BOS)</h3> {bosItems} </div> </ItemsContainer> </A_7>; `, Main: ` const Container = styled.p\\` display: flex; justify-content: space-between; align-items: center; font-size: 16px; border-top: 1px solid rgb(224 226 229); color: rgb(67 74 90); font-weight: 500; line-height: 30px; width: 100%; padding: 22px 70px; font-family: \"Source Code Pro\", sans-serif, ui-sans-serif, system-ui, -apple-system; span { color: rgb(8 126 164); margin-left: 8px; } @media screen and (max-width: 1049px) { padding: 22px 10px; } @media screen and (max-width: 796px) { padding: 22px 10px; flex-direction: column; gap: 26px; }\\`;const Item = styled.a\\` font-size: 16px; line-height: 24px; text-align: center; margin: 0 8px; cursor: pointer; svg { width: 30px; height: 30px; }\\`;const Logo = styled.div\\` display: flex; justify-content: center; p { margin: 0 0 0 8px; }\\`;const Socials = styled.div\\` display: flex; width: 200px; justify-content: space-between; p { font-size: 14px; margin-bottom: 0; } a { color: #292929; }\\`;const Description = styled.p\\` margin: 0; max-width: 430px; text-align: center; a { color: rgb(8 126 164); }\\`; const GithubIcon = () => <svg _ngcontent-ng-c1539744558=\"\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 56 56\"> <g _ngcontent-ng-c1539744558=\"\" fill-rule=\"evenodd\" clip-rule=\"evenodd\"> <circle _ngcontent-ng-c1539744558=\"\" fill=\"none\" cx=\"28\" cy=\"28\" r=\"28\"></circle> <path _ngcontent-ng-c1539744558=\"\" fill=\"#181616\" d=\"M28 0C12.54 0 0 12.54 0 28c0 12.37 8.02 22.86 19.15 26.57 1.4.26 1.91-.61 1.91-1.35 0-.66-.02-2.43-.04-4.76-7.79 1.69-9.43-3.75-9.43-3.75-1.27-3.23-3.11-4.1-3.11-4.1-2.54-1.74.19-1.7.19-1.7 2.81.2 4.29 2.89 4.29 2.89 2.5 4.28 6.55 3.04 8.15 2.33.25-1.81.98-3.04 1.78-3.74-6.22-.71-12.75-3.11-12.75-13.84 0-3.06 1.09-5.56 2.88-7.51-.29-.71-1.25-3.56.27-7.41 0 0 2.35-.75 7.7 2.87 2.23-.62 4.63-.93 7.01-.94 2.38.01 4.77.32 7.01.94 5.35-3.62 7.69-2.87 7.69-2.87 1.53 3.85.57 6.7.28 7.41 1.79 1.96 2.88 4.46 2.88 7.51 0 10.76-6.55 13.12-12.78 13.82 1.01.86 1.9 2.57 1.9 5.19 0 3.74-.03 6.76-.03 7.68 0 .75.5 1.62 1.93 1.35C47.98 50.86 56 40.37 56 28 56 12.54 43.46 0 28 0z\"></path> </g> </svg>; const TelegramIcon = () => <svg width=\"24px\" height=\"24px\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" xmlSpace=\"preserve\" style={{ fillRule: \"evenodd\", clipRule: \"evenodd\", strokeLinejoin: \"round\", strokeMiterlimit: \"1.41421\"}}> <path id=\"telegram-1\" d=\"M18.384,22.779c0.322,0.228 0.737,0.285 1.107,0.145c0.37,-0.141 0.642,-0.457 0.724,-0.84c0.869,-4.084 2.977,-14.421 3.768,-18.136c0.06,-0.28 -0.04,-0.571 -0.26,-0.758c-0.22,-0.187 -0.525,-0.241 -0.797,-0.14c-4.193,1.552 -17.106,6.397 -22.384,8.35c-0.335,0.124 -0.553,0.446 -0.542,0.799c0.012,0.354 0.25,0.661 0.593,0.764c2.367,0.708 5.474,1.693 5.474,1.693c0,0 1.452,4.385 2.209,6.615c0.095,0.28 0.314,0.5 0.603,0.576c0.288,0.075 0.596,-0.004 0.811,-0.207c1.216,-1.148 3.096,-2.923 3.096,-2.923c0,0 3.572,2.619 5.598,4.062Zm-11.01,-8.677l1.679,5.538l0.373,-3.507c0,0 6.487,-5.851 10.185,-9.186c0.108,-0.098 0.123,-0.262 0.033,-0.377c-0.089,-0.115 -0.253,-0.142 -0.376,-0.064c-4.286,2.737 -11.894,7.596 -11.894,7.596Z\" /> </svg>; const Footer = () => { return <Container> <Logo> <img src=\"https://cdn.jsdelivr.net/gh/wpdas/alem/docs/assets/near-script-logo.png\" width={30} alt=\"logo\" /> <p>Al\u00e9m</p> </Logo> <Row> <Description> Want to support? Buy me a coffee \ud83d\ude03 <br /> <a href=\"https://app.potlock.org/?tab=project&projectId=alem-lib.near\" target=\"_blank\"> alem-lib.near </a> </Description> </Row> <Socials> <Item href=\"https://t.me/alemlib\" target=\"_blank\"> <TelegramIcon /> <p>Telegram</p> </Item> <Item href=\"https://github.com/wpdas/alem\" target=\"_blank\"> <GithubIcon /> <p>GitHub</p> </Item> </Socials> </Container>;}; const A_1 = styled.div\\` display: flex; flex-direction: column; gap: 16px; /* background: #fff; */ /* box-shadow: rgba(99, 99, 99, 0.2) 0px 2px 8px 0px; */ /* border-radius: 8px; */ min-width: 240px; padding: 40px 17px 30px; z-index: 1; bottom: 0; margin-bottom: 40px; height: fit-content; width: 100%; max-width: 1046px; margin-left: auto; margin-right: auto; h4, h3, h2, h1 { font-weight: 700; font-size: 22px; color: rgb(35, 39, 47); } h1 { font-size: 28px; border-bottom: rgb(224 226 229) solid 1px; padding-bottom: 12px; } h4 { font-size: 16px; } code { background-color: #eee; padding: 4px; border-radius: 4px; color: #292929; } /* Code Viewer */ pre { div { background-color: #fafafa !important; box-shadow: rgba(99, 99, 99, 0.2) 0px 2px 8px 0px; border-radius: 8px; margin: 8px !important; } span { mix-blend-mode: exclusion; filter: saturate(4) hue-rotate(250deg); font-size: 14px; font-family: \"Source Code Pro\", sans-serif, ui-sans-serif, system-ui, -apple-system; line-height: 24px; -webkit-font-smoothing: auto; opacity: 0.9; } .language-sh { color: #555 !important; } .language-bash { color: #555 !important; > span { color: #555 !important; mix-blend-mode: normal; } } } a { color: rgb(8 126 164) !important; } strong { opacity: 0.8; } p { font-size: 17px; font-weight: 500; color: rgb(35 39 47); } ul { padding-left: 1.2rem; } li { margin-bottom: 10px; font-size: 17px; font-weight: 500; margin-left: 0px !important; color: rgb(35 39 47); }\\`;const Title = styled.h3\\` font-weight: 700; font-size: 26px; color: #292929;\\`;const ShareButton = styled.button\\` padding: 0.5rem 1.4rem; border-radius: 30px; border: 1px solid #ccc; background-color: #fff; color: #292929; font-weight: 700; font-size: 16px; display: flex; align-items: center; :hover { background-color: rgb(252 252 252); } span { margin-right: 18px; width: 18px; }\\`;const TopSection = styled.div\\` display: flex; flex-direction: column; align-items: flex-end; position: absolute; align-self: flex-end;\\`;const Margin = styled.div\\`\\`; const FooterNavContainer = styled.div\\` display: flex; justify-content: \\${props => props.hasPrevious && props.hasPrevious ? \"space-between\" : !props.hasPrevious && props.hasNext ? \"flex-end\" : props.hasPrevious && !props.hasNext ? \"flex-start\" : \"flex-end\"}; margin-top: 28px;\\`;const NextPrevButton = styled.a\\` width: 45%; padding: 18px; display: flex; flex-direction: column; align-items: \\${props => props.next ? \"flex-end\" : \"flex-start\"}; border: 1px solid #dadde1; border-radius: 0.4rem; transition: border 0.2s; background-color: #fff; cursor: pointer; :hover { border: 1px solid rgb(8, 126, 164); text-decoration: none; } p { color: #525860; font-size: 0.875rem; font-weight: 500; margin-bottom: 2px; } span { color: rgb(8, 126, 164); font-size: 1rem; font-weight: 700; }\\`; const HowToUseModules = () => { const mdContent = Buffer.from(\\`IyBIb3cgdG8gVXNlCgpUbyB1c2UgdGhlIHJlc291cmNlcyBvZiB0aGUgaW5zdGFsbGVkIG1vZHVsZXMgeW91IHdpbGwgbmVlZCB0byBmb2xsb3cgdGhlIGZvbGxvd2luZyBzdGVwczoKCiMjIE1vZHVsZXNQcm92aWRlcgoKQWRkIGBNb2R1bGVzUHJvdmlkZXJgIGF0IHRoZSB0b3AgbGF5ZXIgb2YgY29tcG9uZW50cyB0aGF0IHdpbGwgdXNlIHRoZSBtb2R1bGVzLgoKYGBgdHN4CmltcG9ydCB7IE1vZHVsZXNQcm92aWRlciB9IGZyb20gImFsZW0iOwoKY29uc3QgU29tZUNvbXBvbmVudCA9ICgpID0+IHsKICByZXR1cm4gKAogICAgPD4KICAgICAgPE1vZHVsZXNQcm92aWRlciAvPgogICAgICA8SG9tZVBhZ2U+CiAgICA8Lz4KICApCn0KYGBgCgojIyB1c2VNb2R1bGUKCkluIGFueSBjaGlsZCBjb21wb25lbnQgZnJvbSBgPE1vZHVsZXNQcm92aWRlcj5gLCB1c2UgYHVzZU1vZHVsZWAgdG8gbWFrZSB1c2Ugb2YgdGhlIGluc3RhbGxlZCBtb2R1bGVzIHJlc291cmNlLgoKKipUaGUgYHVzZU1vZHVsZWAgbXVzdCBiZSB1c2VkIHdpdGhpbiBhIGB1c2VFZmZlY3RgISoqCgpgYGB0c3gKaW1wb3J0IHsgdXNlTW9kdWxlLCB1c2VFZmZlY3QgfSBmcm9tICJhbGVtIjsKCmNvbnN0IEhvbWVQYWdlID0gKCkgPT4gewogIHVzZUVmZmVjdCgoKSA9PiB7CiAgICB1c2VNb2R1bGUoewogICAgICBjb2RlOiBgZGF5anMoKS5mb3JtYXQoKWAsCiAgICAgIG9uQ29tcGxldGU6IChkYXRhKSA9PiBjb25zb2xlLmxvZyhkYXRhKSwgLy8gMjAyNC0wNC0wOFQxNDo1NzoxMS0wMzowMAogICAgfSk7CiAgfSwgW10pOwoKICAvLy4uLgp9OwpgYGAKCioqQVBJOioqCgotICoqc2V0dXBDb2RlOioqIChvcHRpb25hbCkgaXMgdXNlZCB0byBpbnNlcnQgY29uZmlndXJhdGlvbiBjb2RlIHRoYXQgbXVzdCBiZSBleGVjdXRlZCBiZWZvcmUgYGNvZGVgOwotICoqY29kZToqKiBjb2RlIHRvIGJlIGV4ZWN1dGVkOwotICoqb25Db21wbGV0ZSoqIGZ1bmN0aW9uIHRoYXQgd2lsbCByZWNlaXZlIHRoZSByZXNwb25zZSBmcm9tIHRoZSBleGVjdXRlZCBjb2RlLgo=\\`, \"base64\").toString(\"utf-8\"); return <Markdown text={mdContent} />;}; const InstallingModules = () => { const mdContent = Buffer.from(\\`IyBJbnN0YWxsaW5nIE1vZHVsZXMKClRoZSBBbMOpbSBDb21waWxlciBzdXBwb3J0cyB0aGUgdXNlIG9mIGV4dGVybmFsIE5QTSBtb2R1bGVzIHRocm91Z2ggdGhlIHVzZSBvZiBDRE4gc2VydmljZXMuIFRvIGxvYWQgYW55IGV4dGVybmFsIG1vZHVsZSwgY3JlYXRlIGEgZmlsZSBgYWxlbS5tb2R1bGVzLmpzb25gIGluIHRoZSBwcm9qZWN0IHJvb3QuIEV4YW1wbGU6CgpgYGBqc29uCnsKICAiamF2YXNjcmlwdC10aW1lLWFnbyI6ICJodHRwczovL3VucGtnLmNvbS9qYXZhc2NyaXB0LXRpbWUtYWdvQDIuNS45L2J1bmRsZS9qYXZhc2NyaXB0LXRpbWUtYWdvLmpzIiwKICAiZGF5anMiOiAiaHR0cHM6Ly9jZG5qcy5jbG91ZGZsYXJlLmNvbS9hamF4L2xpYnMvZGF5anMvMS4xMS4xMC9kYXlqcy5taW4uanMiCn0KYGBgCgpUaGUgYGtleWAgb2YgZWFjaCBtb2R1bGUgZGlyZWN0bHkgcmVjZWl2ZXMgaXRzIFVSTCB0byBpdHMgamF2YXNjcmlwdCBmaWxlLgoKQXMgdGhlcmUgYXJlIHRob3VzYW5kcyBvZiBtb2R1bGVzIGF2YWlsYWJsZSwgaXQgaXMgbm90IHBvc3NpYmxlIHRvIGd1YXJhbnRlZSB0aGF0IGFsbCBvZiB0aGVtIHdpbGwgd29yayBwcm9wZXJseS4gSWYgeW91IHdhbnQgdG8gZ2l2ZSBwb3NpdGl2ZSBvciBuZWdhdGl2ZSBmZWVkYmFjayByZWdhcmRpbmcgdGhlIG9wZXJhdGlvbiBvZiBhIG1vZHVsZSwgdXNlIG91ciBUZWxlZ3JhbSBjaGFubmVsLCB5b3UgY2FuIGhlbHAgb3RoZXIgcGVvcGxlLgoKIyBOUE0gTW9kdWxlIFNvdXJjZXMKCkhlcmUgYXJlIHNvbWUgc2l0ZXMgdGhhdCBzZXJ2ZSBtb2R1bGUgc291cmNlczoKCi0gKipDRE4gSnM6KiogaHR0cHM6Ly9jZG5qcy5jb20vbGlicmFyaWVzCi0gKipVTlBLRzoqKiBodHRwczovL3d3dy51bnBrZy5jb20vCg==\\`, \"base64\").toString(\"utf-8\"); return <Markdown text={mdContent} />;}; const CssFiles = () => { const mdContent = Buffer.from(\\`IyBDU1MgRmlsZXMKCkR1cmluZyBjb21waWxhdGlvbiwgY3NzIGZpbGVzIGFyZSBtZXJnZWQgYW5kIGJlY29tZSBqdXN0IG9uZSwgc28gYmUgY2FyZWZ1bCBub3QgdG8gb3ZlcndyaXRlIGNlcnRhaW4gcmVzb3VyY2VzIHN1Y2ggYXMgY2xhc3Nlcy4gUHJlZmVyIHRvIHVzZSBgc3R5bGVkLWNvbXBvbmVudHNgIGFzIHRoaXMgdHlwZSBvZiBwcm9ibGVtIGlzIGF1dG9tYXRpY2FsbHkgY29ycmVjdGVkIGJ5IHRoZSBjb21waWxlci4K\\`, \"base64\").toString(\"utf-8\"); return <Markdown text={mdContent} />;}; const RoutesDocs = () => { const mdContent = Buffer.from(\\`IyBSb3V0ZXMKClRoZXJlIGFyZSB0d28gdHlwZXMgb2Ygcm91dGUgbWFuYWdlcnMgcHJvdmlkZWQgYnkgQWzDqW06IGBSb3V0ZXJgIGFuZCBgU2ltcGxlUm91dGVyYC4KCiMgUm91dGVyCgpUaGlzIGNvbXBvbmVudCBpcyByZXNwb25zaWJsZSBmb3IgbWFuYWdpbmcgdGhlIGNvbnRlbnQgdG8gYmUgZGlzcGxheWVkIG9uIHRoZSBzY3JlZW4gYWNjb3JkaW5nIHRvIHRoZSBhY3RpdmUgcm91dGUuIFlvdSBjYW4gdXNlIHRoZSBgY3JlYXRlUm91dGVgIHJlc291cmNlIHRvIGNyZWF0ZSBhcHBsaWNhdGlvbiByb3V0ZXMgYW5kIHBhc3MgdGhlbSB0byB0aGUgUm91dGVyLgoKYGBgdHN4CmltcG9ydCB7IFJvdXRlckNvbnRleHQsIFJvdXRlciwgY3JlYXRlUm91dGUgfSBmcm9tICJhbGVtIjsKCmltcG9ydCBIb21lUGFnZSBmcm9tICIuL0hvbWVQYWdlIjsKaW1wb3J0IFByb2ZpbGVQYWdlIGZyb20gIi4vUHJvZmlsZVBhZ2UiOwoKY29uc3QgQXBwUm91dGVzID0gKCkgPT4gewoKICAvLyBJdCBtdXN0IGJlIHBsYWNlZCBhYm92ZSBhbGwgcmVzb3VyY2VzIHRoYXQgd2lsbCB1c2UgdGhlIFJvdXRlciB0b29scy4KICBSb3V0ZXJDb250ZXh0KCk7CgogIC8vIENyZWF0aW5nIHJvdXRlcwogIGNvbnN0IEhvbWVQYWdlUm91dGUgPSBjcmVhdGVSb3V0ZSgiaG9tZSIsICgpID0+IDxIb21lUGFnZSAvPik7CiAgY29uc3QgUHJvZmlsZVBhZ2VSb3V0ZSA9IGNyZWF0ZVJvdXRlKCJwcm9maWxlIiwgKCkgPT4gPFByb2ZpbGVQYWdlIC8+KTsKCiAgY29uc3Qgcm91dGVzID0gWwogICAgSG9tZVBhZ2VSb3V0ZSwKICAgIFByb2ZpbGVQYWdlUm91dGUsCiAgXQoKICAvLyBJbml0aWFsaXppbmcgUm91dGVzCiAgcmV0dXJuICgKICAgIDxSb3V0ZXIKICAgICAgcGFyYW1ldGVyTmFtZT0idGFiIiB7LyogT3B0aW9uYWw6IGRlZmF1bHQgaXMgInBhdGgiICovfQogICAgICB0eXBlPSJDb250ZW50QmFzZWQiIHsvKiBPcHRpb25hbDogZGVmYXVsdCBpcyAiVVJMQmFzZWQiICovfQogICAgICByb3V0ZXM9e3JvdXRlc30KICAgIC8+CiAgKTsKfTsKCmV4cG9ydCBkZWZhdWx0IEFwcFJvdXRlczsKYGBgCgoqKlR5cGVzIG9mIEJlaGF2aW9yKioKCmBSb3V0ZXJgIGNhbiBoYW5kbGUgbGlua3MgaW4gdHdvIHdheXM6CgotICoqVVJMQmFzZWQ6KiogVGhpcyBpcyB0aGUgZGVmYXVsdCBiZWhhdmlvci4gRXZlcnkgbGluayB3aWxsIHJlbG9hZCB0aGUgcGFnZSBieSBjaGFuZ2luZyB0aGUgVVJMIHN0cnVjdHVyZSBpbiB0aGUgYnJvd3NlcjsKLSAqKkNvbnRlbnRCYXNlZDoqKiBUaGlzIGJlaGF2aW9yIGRvZXMgbm90IGNoYW5nZSB0aGUgVVJMIGluIHRoZSBicm93c2VyIGFuZCBkb2VzIG5vdCByZWxvYWQgdGhlIHBhZ2UuIFRoZXJlZm9yZSwgaXQgaXMgZmFzdGVyIHRvIGRpc3BsYXkgY29udGVudCBvbiB0aGUgc2NyZWVuLgoKWW91IGNhbiBwYXNzIHRoZSB0eXBlIG9mIGJlaGF2aW9yIHVzaW5nIHRoZSBgdHlwZWAgcHJvcGVydHkgb2YgUm91dGVzLgoKYGBgdHN4Ci8qIFVSTCBCYXNlZCAqLwo8Um91dGVyCiAgcm91dGVzPXtbRmVhdHVyZU92ZXJ2aWV3Um91dGUsIFN0YXRlTWFuYWdlbWVudFJvdXRlXX0KICB0eXBlPSJVUkxCYXNlZCIKLz4KCi8qIENvbnRlbnQgQmFzZWQgKi8KPFJvdXRlcgogIHJvdXRlcz17W0ZlYXR1cmVPdmVydmlld1JvdXRlLCBTdGF0ZU1hbmFnZW1lbnRSb3V0ZV19CiAgdHlwZT0iQ29udGVudEJhc2VkIgovPgpgYGAKCiMgU2ltcGxlUm91dGVyCgpUaGlzIHJvdXRlciB1c2VzIHRoZSBVUkwgdG8gZGV0ZXJtaW5lIHdoaWNoIGNvbnRlbnQgdG8gZGlzcGxheSBvbiB0aGUgc2NyZWVuLiBJdCB3b3JrcyBzaW1pbGFybHkgdG8gdGhlIGBVUkxCYXNlZGAgYXBwcm9hY2ggb2YgdGhlIGBSb3V0ZXJgLgoKYGBgdHN4CmltcG9ydCB7IFNpbXBsZVJvdXRlciwgY3JlYXRlUm91dGUgfSBmcm9tICJhbGVtIjsKCmltcG9ydCBIb21lUGFnZSBmcm9tICIuL0hvbWVQYWdlIjsKaW1wb3J0IFByb2ZpbGVQYWdlIGZyb20gIi4vUHJvZmlsZVBhZ2UiOwoKY29uc3QgQXBwUm91dGVzID0gKCkgPT4gewogIC8vIENyZWF0aW5nIHJvdXRlcwogIGNvbnN0IEhvbWVQYWdlUm91dGUgPSBjcmVhdGVSb3V0ZSgiaG9tZSIsICgpID0+IDxIb21lUGFnZSAvPik7CiAgY29uc3QgUHJvZmlsZVBhZ2VSb3V0ZSA9IGNyZWF0ZVJvdXRlKCJwcm9maWxlIiwgKCkgPT4gPFByb2ZpbGVQYWdlIC8+KTsKICBjb25zdCByb3V0ZXMgPSBbSG9tZVBhZ2VSb3V0ZSwgUHJvZmlsZVBhZ2VSb3V0ZV07CgogIC8vIHBhcmFtZXRlck5hbWUgPT4gT3B0aW9uYWw6IGRlZmF1bHQgaXMgInBhdGgiCiAgcmV0dXJuIDxTaW1wbGVSb3V0ZXIgcm91dGVzPXtyb3V0ZXN9IHBhcmFtZXRlck5hbWU9InRhYiIgLz47Cn07CgpleHBvcnQgZGVmYXVsdCBBcHBSb3V0ZXM7CmBgYAoKVXNpbmcgYFNpbXBsZVJvdXRlcmAsIHlvdSBjYW4gdXNlIGFueSBhbmNob3IgZWxlbWVudCBgPGE+PC9hPmAgdG8gbmF2aWdhdGUgdG8gYW5vdGhlciBwYWdlLCBmb3IgZXhhbXBsZToKCmBgYHRzeAo8YSBocmVmPSJ0YWI9cHJvZmlsZSI+R28gVG8gUHJvZmlsZTwvcD4KYGBgCg==\\`, \"base64\").toString(\"utf-8\"); return <Markdown text={mdContent} />;}; const CreateDebounce = () => { const mdContent = Buffer.from(\\`IyBDcmVhdGUgRGVib3VuY2UKCkNyZWF0ZSBhIGRlYm91bmNlZCBtZXRob2QgdG8gb2J0YWluIHRoZSBkYXRhIGFmdGVyIHRoZSBkZXNpcmVkIGludGVydmFsLgoKYGBgdHN4CmltcG9ydCB7IGNyZWF0ZURlYm91bmNlIH0gZnJvbSAiYWxlbSI7Cgpjb25zdCBNeUNvbXBvbmVudCA9ICgpID0+IHsKICBjb25zdCBbd29yZHMsIHNldFdvcmRzXSA9IHVzZVN0YXRlKCIiKTsKICBjb25zdCBvbklucHV0Q2hhbmdlID0gY3JlYXRlRGVib3VuY2UoKGV2ZW50KSA9PiBzZXRXb3JkcyhldmVudC50YXJnZXQudmFsdWUpLCAxMDAwKTsKCiAgLy8gVGhpcyB3aWxsIGJlIGNoYW5nZWQgMSBzZWMgYWZ0ZXIgdGhlIHVzZXIgc3RvcHMgdHlwaW5nLgogIGNvbnNvbGUubG9nKHdvcmRzKTsKICByZXR1cm4gPGlucHV0IG9uQ2hhbmdlPXtvbklucHV0Q2hhbmdlfSB0eXBlPSJ0ZXh0IiAvPjsKfTsKYGBgCgpUaGlzIGZlYXR1cmUgaXMgYWxzbyBhdmFpbGFibGUgc2VwYXJhdGVseSBoZXJlOiAqKltjcmVhdGVEZWJvdW5jZV0oaHR0cHM6Ly9uZWFyLm9yZy9uZWFyL3dpZGdldC9Db21wb25lbnREZXRhaWxzUGFnZT9zcmM9YWxlbS1saWIubmVhci93aWRnZXQvY3JlYXRlRGVib3VuY2UpKiogYW5kIGNhbiBiZSBpbmplY3RlZCBsaWtlIHRoaXM6CgpgYGBqc3gKLy8gU29tZVdpZGdldApjb25zdCB7IGNyZWF0ZURlYm91bmNlIH0gPSBWTS5yZXF1aXJlKCJhbGVtLWxpYi5uZWFyL3dpZGdldC9jcmVhdGVEZWJvdW5jZSIpOwppZiAoIWNyZWF0ZURlYm91bmNlKSByZXR1cm4gIiI7Cgpjb25zdCBbd29yZHMsIHNldFdvcmRzXSA9IHVzZVN0YXRlKCIiKTsKY29uc3Qgb25JbnB1dENoYW5nZSA9IGNyZWF0ZURlYm91bmNlKChldmVudCkgPT4gc2V0V29yZHMoZXZlbnQudGFyZ2V0LnZhbHVlKSwgMTAwMCk7CgovLyBUaGlzIHdpbGwgYmUgY2hhbmdlZCAxIHNlYyBhZnRlciB0aGUgdXNlciBzdG9wcyB0eXBpbmcuCmNvbnNvbGUubG9nKHdvcmRzKTsKCnJldHVybiA8aW5wdXQgb25DaGFuZ2U9e29uSW5wdXRDaGFuZ2V9IHR5cGU9InRleHQiIC8+OwpgYGAK\\`, \"base64\").toString(\"utf-8\"); return <Markdown text={mdContent} />;}; const BosOverview = () => { const mdContent = Buffer.from(\\`IyBORUFSIEFQSXMgYW5kIENvbXBvbmVudHMKClRoZSBuYXRpdmUgTkVBUiBWTSAoQk9TKSByZXNvdXJjZXMgY29udGludWUgdG8gZnVuY3Rpb24uCgpHZXQgdG8ga25vdyBtb3JlIGFib3V0IHRoZSBCT1MgYnVpbHQgaW4gcmVzb3VyY2VzIGhlcmU6IFtodHRwczovL2RvY3MubmVhci5vcmcvYm9zL2FwaS9zdGF0ZV0oaHR0cHM6Ly9kb2NzLm5lYXIub3JnL2Jvcy9hcGkvc3RhdGUpCgpgYGB0c3gKLy8gTk9URTogVGhlc2UgYXJlIGp1c3QgdGhlIEJPUyBmZWF0dXJlIHJlZmVyZW5jZXMgdHlwZXMKaW1wb3J0IHsKICBGaWxlcywKICBJbmZpbml0ZVNjcm9sbCwKICBJcGZzSW1hZ2VVcGxvYWQsCiAgTWFya2Rvd24sCiAgTmVhciwKICBPdmVybGF5VHJpZ2dlciwKICBTb2NpYWwsCiAgU3RhdGUsCiAgU3RvcmFnZSwKICBUb29sdGlwLAogIFR5cGVBaGVhZCwKICBWTSwKICBXaWRnZXQsCiAgYXN5bmNGZXRjaCwKICBjbGlwYm9hcmQsCiAgY29udGV4dCwKICBmZXRjaCwKICBwcm9wcywKICBzdGF0ZSwKICB1c2VDYWNoZSwKICB1c2VFZmZlY3QsCiAgdXNlU3RhdGUsCiAgdXNlTWVtbywKICBCaWcsCn0gZnJvbSAiYWxlbSI7CgpleHBvcnQgY29uc3QgQ29tcG9uZW50QyA9ICgpID0+IHsKICBjb25zb2xlLmxvZyhwcm9wcyk7IC8vIHdpbGwgcHJpbnQgdGhlIHdpZGdldCBwcm9wcwoKICByZXR1cm4gPENvbXBvbmVudEEgbmFtZT0iV2VuZHoiIC8+Owp9OwpgYGAK\\`, \"base64\").toString(\"utf-8\"); return <Markdown text={mdContent} />;}; const IsDevelopment = () => { const mdContent = Buffer.from(\\`IyBpc0RldmVsb3BtZW50CgpVc2VmdWwgZmVhdHVyZSB0byBrbm93IGlmIHRoZSBlbnZpcm9ubWVudCBpcyBkZXZlbG9wbWVudCBvciBwcm9kdWN0aW9uLgoKYGBgdHN4CmltcG9ydCB7IGlzRGV2ZWxvcG1lbnQgfSBmcm9tICJhbGVtIjsKCmNvbnN0IGFuc3dlciA9IGlzRGV2ZWxvcG1lbnQgPyAiWWVwIiA6ICJOb3BlIjsKYGBgCg==\\`, \"base64\").toString(\"utf-8\"); return <Markdown text={mdContent} />;}; const Promisify = () => { const mdContent = Buffer.from(\\`IyBQcm9taXNpZnkKClByb21pc2lmeSBpcyB1c2VkIHRvIGNoZWNrIGlmIGEgcGllY2Ugb2YgZGF0YSBpcyBwcmVzZW50IHVudGlsIGEgc3BlY2lmaWMgY2hlY2sgdGltZSBpcyByZWFjaGVkLiBCYXNpY2FsbHkgaXQgY2FsbCByZXNvbHZlIG9yIHJlamVjdCBmb3IgYSBnaXZlbiBjYWxsZXIuCgpgYGB0cwppbXBvcnQgeyBwcm9taXNpZnkgfSBmcm9tICJhbGVtIjsKCmNvbnN0IGdldFN0b3JhZ2UgPSAoKSA9PiBTdG9yYWdlLmdldCgibXkta2V5Iik7CmNvbnN0IHJlc29sdmUgPSAoc3RvcmFnZURhdGEpID0+IGNvbnNvbGUubG9nKHN0b3JhZ2VEYXRhKTsKY29uc3QgcmVqZWN0ID0gKCkgPT4gY29uc29sZS5sb2coIkVycm9yIik7CmNvbnN0IHRpbWVvdXQgPSA1MDAwOyAvLyA1c2VjCgpwcm9taXNpZnkoZ2V0U3RvcmFnZSwgcmVzb2x2ZSwgcmVqZWN0LCB0aW1lb3V0KTsKYGBgCg==\\`, \"base64\").toString(\"utf-8\"); return <Markdown text={mdContent} />;}; const LoadExternalStyles = () => { const mdContent = Buffer.from(\\`IyBMb2FkIEV4dGVybmFsIFN0eWxlcyAtIEZvbnRzICYgQ1NTCgpVc2UgdGhpcyBmZWF0dXJlIHRvIGxvYWQgZXh0ZXJuYWwgZm9udHMgYW5kIGNzcyBmaWxlcyBpbnRvIHlvdXIgYXBwbGljYXRpb24uIChBbGVtIHN1cHBvcnRzIGxvY2FsIC5jc3MgZmlsZXMgdG9vLCBzbyB5b3UgY2FuIGp1c3QgY3JlYXRlIHRoZW0gZnJvbSB0aGUgcHJvamVjdCdzIHJvb3QgZm9sZGVyLikKCmBsb2FkRXh0ZXJuYWxTdHlsZXNgIHJldHVybnMgYSBgYm9vbGVhbmAgaW5mb3JtaW5nIHdoZXRoZXIgYWxsIGNzcyBmaWxlcyBoYXZlIGFscmVhZHkgYmVlbiBsb2FkZWQuCgpZb3UgY2FuIHVzZSBhbnkgZm9udHMgbGlrZSBHb29nbGUgRm9udHMgb3IgQ0ROIEZvbnRzLgoKWW91IG11c3Qgc3BlY2lmeSBgZm9udC1mYW1pbHlgIGluIHRoZSBhcHBsaWNhdGlvbidzIHN0eWxlcy4KCmBgYHRzeAppbXBvcnQgeyBsb2FkRXh0ZXJuYWxTdHlsZXMgfSBmcm9tICJhbGVtIjsKCmNvbnN0IEFwcCA9ICgpID0+IHsKICBjb25zdCBzdHlsZXNMb2FkZWQgPSBsb2FkRXh0ZXJuYWxTdHlsZXMoWwogICAgImh0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzMj9mYW1pbHk9T3BlbitTYW5zOml0YWwsd2dodEAwLDMwMC4uODAwOzEsMzAwLi44MDAmZGlzcGxheT1zd2FwIiwKICAgICJodHRwczovL2Nkbi5qc2RlbGl2ci5uZXQvZ2gvY29kZW1pcnJvci9jb2RlbWlycm9yNS9saWIvY29kZW1pcnJvci5jc3MiLAogIF0pOwoKICBpZiAoIXN0eWxlc0xvYWRlZCkgewogICAgcmV0dXJuIDxwPkxvYWRpbmcuLi48L3A+OwogIH0KCiAgcmV0dXJuIDxwPk15IE5pY2UgQ29udGVudDwvcD47Cn07CgpleHBvcnQgZGVmYXVsdCBBcHA7CmBgYAo=\\`, \"base64\").toString(\"utf-8\"); return <Markdown text={mdContent} />;}; const CreateContext = () => { const mdContent = Buffer.from(\\`IyBDcmVhdGUgQ29udGV4dAoKU2ltaWxhciB0byBSZWFjdCdzIENvbnRleHQgQVBJLCBBbMOpbSBhbHNvIHByb3ZpZGVzIGEgd2F5IHRvIGNyZWF0ZSBjb250ZXh0cy4gQ29udGV4dHMgYXJlIHZlcnkgaGVscGZ1bCB3aGVuIHlvdSB3YW50IHRvIGNyZWF0ZSBhIHNwZWNpZmljIGRhdGEgc3RydWN0dXJlIGFuZCBwYXNzIGl0IHRvIGNoaWxkIGNvbXBvbmVudHMuCgpCeSBuYXR1cmUsIGl0IGlzIG5vdCBwb3NzaWJsZSB0byBtYW5pcHVsYXRlIHByb3ZpZGVyIG9iamVjdHMgYXQgdGhlIHNhbWUgbGF5ZXIgaW4gd2hpY2ggdGhleSBhcmUgdXNlZCwgc2ltaWxhciB0byBSZWFjdC4KCioqU2ltcGxlIEV4YW1wbGU6KioKCmBgYHRzeAovLyBVc2VyUHJvdmlkZXIudHN4CgppbXBvcnQgeyBjcmVhdGVDb250ZXh0IH0gZnJvbSAiYWxlbSI7CgovLyBJbnRlcmZhY2UKaW50ZXJmYWNlIFVzZXJDb250ZXh0UHJvcHMgewogIGlzQXV0aGVudGljYXRlZDogYm9vbGVhbjsKICBuYW1lOiBzdHJpbmc7Cn0KCmNvbnN0IFVzZXJQcm92aWRlciA9ICgpID0+IHsKICAvLyBDcmVhdGUgYSBwcm92aWRlciB1c2luZyBhIHJlZmVyZW5jZSBrZXkKICBjb25zdCB7IHNldERlZmF1bHREYXRhLCB1cGRhdGVEYXRhLCBnZXRTZWxmIH0gPSBjcmVhdGVDb250ZXh0PFVzZXJDb250ZXh0UHJvcHM+KCJ1c2VyLXByb3ZpZGVyIik7CgogIC8vIEluaXRpYWwgLyBkZWZhdWx0IGRhdGEKICBzZXREZWZhdWx0RGF0YSh7CiAgICBpc0F1dGhlbnRpY2F0ZWQ6ICEhY29udGV4dC5hY2NvdW50SWQsCiAgICBhY2NvdW50SWQ6IGNvbnRleHQuYWNjb3VudElkLAogIH0pOwp9OwpgYGAKCioqQVBJKioKCi0gKipzZXREZWZhdWx0RGF0YToqKiBNZXRob2QgdXNlZCB0byBzZXQgdGhlIGRlZmF1bHQgZGF0YTsKLSAqKnVwZGF0ZURhdGE6KiogTWV0aG9kIHVzZWQgdG8gdXBkYXRlIGRhdGE7Ci0gKipnZXRTZWxmOioqIFJldHVybnMgdGhlIGN1cnJlbnQgc3RhdGUgb2YgdGhlIGNvbnRleHQgZGF0YTsKCiMgVXNlIENvbnRleHQKClVzaW5nIGNvbnRleHQgd2l0aCBgdXNlQ29udGV4dGA6CgpgYGB0c3gKaW1wb3J0IFVzZXJQcm92aWRlciBmcm9tICIuL2NvbnRleHRzL1VzZXJQcm92aWRlciI7Cgpjb25zdCBBcHAgPSAoKSA9PiB7CiAgVXNlclByb3ZpZGVyKCk7CgogIHJldHVybiA8Q2hpbGRDb21wb25lbnQgLz47Cn07CmBgYAoKYGBgdHN4CmltcG9ydCB7IHVzZUNvbnRleHQgfSBmcm9tICJhbGVtIjsKCmludGVyZmFjZSBVc2VyQ29udGV4dFByb3BzIHsKICBpc0F1dGhlbnRpY2F0ZWQ6IGJvb2xlYW47CiAgbmFtZTogc3RyaW5nOwp9Cgpjb25zdCBDaGlsZENvbXBvbmVudCA9ICgpID0+IHsKICBjb25zdCB1c2VyID0gdXNlQ29udGV4dDxQcm9qZWN0c0NvbnRleHRQcm9wcz4oInVzZXItY29udGV4dCIpOwoKICBjb25zb2xlLmxvZyh1c2VyKTsKICAvLyB7IGlzQXV0aGVudGljYXRlZDogdHJ1ZSwgYWNjb3VudElkOiAid2VuZGVyc29ucGlyZXMubmVhciIgfQoKICByZXR1cm4gIiI7Cn07CmBgYAoKKipIYW5kbGluZyBhc3luYyBkYXRhOioqCgpgYGB0c3gKLy8gQ2FydFByb3ZpZGVyLnRzeAoKaW1wb3J0IHsgY3JlYXRlQ29udGV4dCwgdXNlQ29udGV4dCwgYXN5bmNGZXRjaCB9IGZyb20gImFsZW0iOwoKLy8gSW50ZXJmYWNlCmludGVyZmFjZSBDYXJ0Q29udGV4dFByb3BzIHsKICBpdGVtczogc3RyaW5nW107CiAgcmVhZHk6IGJvb2xlYW47CgogIC8vIGFjdGlvbnMKICBmZXRjaENhcnRJdGVtczogKCkgPT4gdm9pZDsKfQoKY29uc3QgQ2FydFByb3ZpZGVyID0gKCkgPT4gewogIGNvbnN0IHsgc2V0RGVmYXVsdERhdGEsIHVwZGF0ZURhdGEsIGdldFNlbGYgfSA9IGNyZWF0ZUNvbnRleHQ8Q2FydENvbnRleHRQcm9wcz4oImNhcnQtcHJvdmlkZXIiKTsKCiAgLy8gSW5pdGlhbCAvIGRlZmF1bHQgZGF0YQogIHNldERlZmF1bHREYXRhKHsKICAgIGl0ZW1zOiBbXSwKICAgIHJlYWR5OiBmYWxzZSwKCiAgICBmZXRjaENhcnRJdGVtczogKCkgPT4gewogICAgICBjb25zdCBzZWxmID0gZ2V0U2VsZigpOwoKICAgICAgaWYgKCFzZWxmLnJlYWR5KSB7CiAgICAgICAgYXN5bmNGZXRjaCgiaHR0cHM6Ly9hcGkuY29tL2NhcnQvaXRlbXMiKS50aGVuKChyZXNwb25zZSkgPT4gewogICAgICAgICAgLy8gVXBkYXRlIGl0ZW1zCiAgICAgICAgICB1cGRhdGVEYXRhKHsKICAgICAgICAgICAgaXRlbXM6IHJlc3BvbnNlLmJvZHksCiAgICAgICAgICAgIHJlYWR5OiB0cnVlLAogICAgICAgICAgfSk7CiAgICAgICAgfSk7CiAgICAgIH0KICAgIH0sCiAgfSk7CgogIC8vIChPcHRpb25hbCk6IEF1dG8gZmV0Y2ggY2FydCBpdGVtcwogIGNvbnN0IHNlbGYgPSBnZXRTZWxmKCk7CiAgaWYgKCFzZWxmLnJlYWR5KSB7CiAgICBzZWxmLmZldGNoQ2FydEl0ZW1zKCk7CiAgfQp9OwpgYGAKClRoZW4geW91IGNhbiB1c2UgdGhlIGRhdGE6CgpgYGB0c3gKaW1wb3J0IENhcnRQcm92aWRlciBmcm9tICIuL2NvbnRleHRzL0NhcnRQcm92aWRlciI7Cgpjb25zdCBBcHAgPSAoKSA9PiB7CiAgQ2FydFByb3ZpZGVyKCk7CgogIHJldHVybiA8Q2hpbGRDb21wb25lbnQgLz47Cn07CmBgYAoKYGBgdHN4CmltcG9ydCB7IHVzZUNvbnRleHQsIHVzZUVmZmVjdCB9IGZyb20gImFsZW0iOwoKaW50ZXJmYWNlIENhcnRDb250ZXh0UHJvcHMgewogIGl0ZW1zOiBzdHJpbmdbXTsKICByZWFkeTogYm9vbGVhbjsKICBmZXRjaENhcnRJdGVtczogKCkgPT4gdm9pZDsKfQoKY29uc3QgQ2hpbGRDb21wb25lbnQgPSAoKSA9PiB7CiAgY29uc3QgY2FydCA9IHVzZUNvbnRleHQ8Q2FydENvbnRleHRQcm9wcz4oImNhcnQtY29udGV4dCIpOwoKICB1c2VFZmZlY3QoKCkgPT4gewogICAgLy8gRmV0Y2ggY2FydCBpdGVtcyAoaW4gY2FzZSB5b3UgYXJlIG5vdCB1c2luZyB0aGUgYXV0byBmZXRjaCkKICAgIGNhcnQuZmV0Y2hDYXJ0SXRlbXMoKTsKICB9LCBbXSk7CgogIGNvbnNvbGUubG9nKGNhcnQuaXRlbXMpOwogIC8vIFtpdGVtMSwgaXRlbTIsIGl0ZW0zLCAuLi5dCgogIHJldHVybiAiIjsKfTsKYGBgCg==\\`, \"base64\").toString(\"utf-8\"); return <Markdown text={mdContent} />;}; const UseParams = () => { const mdContent = Buffer.from(\\`IyBVc2UgUGFyYW1zCgpUaGlzIGhvb2sgcmV0dXJucyBhbGwgcGFyYW1ldGVycyBwcm92aWRlZCBieSB0aGUgVVJMLgoKYGBgdHMKLy8gaHR0cDovLzEyNy4wLjAuMTo4MDgwL2FsZW0tbGliLm5lYXIvd2lkZ2V0L0luZGV4P3Byb2plY3RJZD0xMjMKaW1wb3J0IHsgdXNlUGFyYW1zIH0gZnJvbSAiYWxlbSI7CgpleHBvcnQgY29uc3QgU29tZUNvbXBvbmVudCA9ICgpID0+IHsKICBjb25zdCBwYXJhbXMgPSB1c2VQYXJhbXMoKTsKICBjb25zb2xlLmxvZyhwYXJhbXMpOyAvLyB7IHByb2plY3RJZDogIjEyMyIgfQoKICByZXR1cm4gIiI7Cn07CmBgYAo=\\`, \"base64\").toString(\"utf-8\"); return <Markdown text={mdContent} />;}; const GetLocation = () => { const mdContent = Buffer.from(\\`IyBHZXQgTG9jYXRpb24KClRoaXMgaG9vayByZXR1cm5zIHRoZSBjdXJyZW50IGxvY2F0aW9uIG9iamVjdC4gSXQgY2FuIGJlIHVzZWZ1bCBpZiB5b3UnZCBsaWtlIHRvIHBlcmZvcm0gc29tZSBzaWRlIGVmZmVjdCB3aGVuZXZlciB0aGUgY3VycmVudCBsb2NhdGlvbiBjaGFuZ2VzLgoKVXNlIGBnZXRMb2NhdGlvbigpLmlzUm91dGVzUmVhZHlgIHRvIGdldCB0byBrbm93IHdoZW4gdGhlIHJvdXRlcyBhcmUgcmVhZHkgdG8gYmUgYWNjZXNzZWQuCgpJdCBzaG91bGQgYmUgdXNlZCB3aXRoIGBSb3V0ZXJgLgoKYGBgdHMKLy8gaHR0cDovLzEyNy4wLjAuMTo4MDgwL2FsZW0tbGliLm5lYXIvd2lkZ2V0L0luZGV4P3BhdGg9cHJvZmlsZQppbXBvcnQgeyBnZXRMb2NhdGlvbiB9IGZyb20gImFsZW0iOwoKZXhwb3J0IGNvbnN0IFNvbWVDb21wb25lbnQgPSAoKSA9PiB7CiAgY29uc3QgbG9jYXRpb24gPSBnZXRMb2NhdGlvbigpOwogIGNvbnNvbGUubG9nKGxvY2F0aW9uKTsKICAvLyB7IGlzUm91dGVzUmVhZHk6IHRydWUsIHBhdGhuYW1lOiAicHJvZmlsZSIsIHJvdXRlczogWyJob21lIiwgInByb2ZpbGUiXSB9CgogIHJldHVybiAiIjsKfTsKYGBgCg==\\`, \"base64\").toString(\"utf-8\"); return <Markdown text={mdContent} />;}; const Navigate = () => { const mdContent = Buffer.from(\\`IyBOYXZpZ2F0ZQoKVGhpcyBmZWF0dXJlIG1ha2VzIGl0IHBvc3NpYmxlIHRvIHByb2dyYW1tYXRpY2FsbHkgbmF2aWdhdGUgdG8gYXZhaWxhYmxlIHJvdXRlcy4gVGhlIFVSTCB3aWxsIG5vdCBiZSBhZmZlY3RlZCEKCkl0IHNob3VsZCBiZSB1c2VkIHdpdGggYFJvdXRlcmAuCgojIyBOYXZpZ2F0ZSBUbwoKVXNlIGBuYXZpZ2F0ZS50b2AgdG8gbmF2aWdhdGUgdGhyb3VnaCB0aGUgcm91dGVzLgoKYGBgdHN4CmltcG9ydCB7IG5hdmlnYXRlIH0gZnJvbSAiYWxlbSI7CgpleHBvcnQgY29uc3QgU29tZUNvbXBvbmVudCA9ICgpID0+IHsKICBjb25zdCBvbkNsaWNrSGFuZGxlciA9ICgpID0+IHsKICAgIG5hdmlnYXRlLnRvKCJwcm9maWxlIik7CiAgfTsKCiAgcmV0dXJuIDxidXR0b24gb25DbGljaz17b25DbGlja0hhbmRsZXJ9PkdvIHRvIFByb2ZpbGU8L2J1dHRvbj47Cn07CmBgYAoKWW91IGNhbiBhbHNvIHNlbmQgcGFyYW1zIHRvIHRoZSByb3V0ZToKCmBgYHRzeAppbXBvcnQgeyBuYXZpZ2F0ZSB9IGZyb20gImFsZW0iOwoKZXhwb3J0IGNvbnN0IFNvbWVDb21wb25lbnQgPSAoKSA9PiB7CiAgY29uc3Qgb25DbGlja0hhbmRsZXIgPSAoKSA9PiB7CiAgICBuYXZpZ2F0ZS50bygicHJvZmlsZSIsIHsKICAgICAgbmFtZTogIldlbmR6IiwKICAgICAgYWdlOiAzMywKICAgICAgcHJvZmlsZVBpY3R1cmU6ICJodHRwczovL3VybC5jb20vdG8vaW1hZ2UuanBnIiwKICAgIH0pOwogIH07CgogIHJldHVybiA8YnV0dG9uIG9uQ2xpY2s9e29uQ2xpY2tIYW5kbGVyfT5HbyB0byBQcm9maWxlPC9idXR0b24+Owp9OwpgYGAKClRoZW4geW91IGNhbiB1c2UgYHVzZVJvdXRlcygpLnJvdXRlUGFyYW1zYCB0byBnZXQgdGhlIHJvdXRlIHBhcmFtcyBpbnNpZGUgdGhlIHBhZ2U6CgpgYGB0c3gKaW1wb3J0IHsgdXNlUm91dGVzIH0gZnJvbSAiYWxlbSI7CgpleHBvcnQgY29uc3QgUHJvZmlsZVBhZ2UgPSAoKSA9PiB7CiAgY29uc29sZS5sb2codXNlUm91dGVzKCkucm91dGVQYXJhbXMpOwogIC8vIHsgbmFtZTogIldlbmR6IiwgYWdlOiAzMywgcHJvZmlsZVBpY3R1cmU6ICJodHRwczovL3VybC5jb20vdG8vaW1hZ2UuanBnIiB9CgogIC8vLi4uCn07CmBgYAoKIyMgTmF2aWdhdGUgQmFjawoKVXNlIGBuYXZpZ2F0ZS5iYWNrYCB0byBnbyB0byB0aGUgcHJldmlvdXMgcm91dGUuCgpgYGB0c3gKaW1wb3J0IHsgbmF2aWdhdGUgfSBmcm9tICJhbGVtIjsKCmV4cG9ydCBjb25zdCBTb21lQ29tcG9uZW50ID0gKCkgPT4gewogIGNvbnN0IG9uQ2xpY2tIYW5kbGVyID0gKCkgPT4gewogICAgbmF2aWdhdGUuYmFjaygpOwogIH07CgogIHJldHVybiA8YnV0dG9uIG9uQ2xpY2s9e29uQ2xpY2tIYW5kbGVyfT5HbyBCYWNrPC9idXR0b24+Owp9OwpgYGAK\\`, \"base64\").toString(\"utf-8\"); return <Markdown text={mdContent} />;}; const RouteLinkDocs = () => { const mdContent = Buffer.from(\\`IyBSb3V0ZSBMaW5rCgpUaGlzIGNvbXBvbmVudCBjcmVhdGVzIGEgYDxhIC8+YCBlbGVtZW50IGFuZCBpcyB1c2VkIHRvIGFsbG93IHVzZXJzIHRvIG5hdmlnYXRlIGJldHdlZW4gcm91dGVzLiBZb3UgbXVzdCBpbmZvcm0gdGhlIGRlc3RpbmF0aW9uIHBhdGggdXNpbmcgdGhlIGB0b2AgcHJvcGVydHkuIEl0IGFsc28gc3VwcG9ydCBgY2xhc3NOYW1lYCwgYHN0eWxlYCBhbmQgYG9uQ2xpY2tgIHByb3BlcnRpZXMuCgpgUm91dGVMaW5rYCBhY3RzIGRpZmZlcmVudGx5IGRlcGVuZGluZyBvbiB0aGUgYFJvdXRlcmAgY29uZmlndXJhdGlvbi4gSWYgdGhlIFJvdXRlciB0eXBlIGlzIGAiVVJMQmFzZWQiYCwgaXQgd2lsbCBzaW1wbHkgdXNlIHRoZSBuYXRpdmUgYW5jaG9yIGZ1bmN0aW9uIHRvIGdvIHRvIHRoZSBuZXcgVVJMLiBJZiB0aGUgdHlwZSBpcyBgIkNvbnRlbnRCYXNlZCJgIGl0IHdpbGwgY2FsbCB0aGUgUm91dGVyJ3MgYG5hdmlnYXRlYCBmdW5jdGlvbiBhbmQgd2lsbCBkaXNwbGF5IHRoZSBuZXcgcGFnZSB3aXRob3V0IGNhdXNpbmcgYSByZWZyZXNoLCBob3dldmVyLCB0aGUgVVJMIGlzIG5vdCBjaGFuZ2VkLgoKSXQgc2hvdWxkIGJlIHVzZWQgd2l0aCBgUm91dGVyYC4KCmBgYHRzeAppbXBvcnQgeyBSb3V0ZUxpbmsgfSBmcm9tICJhbGVtIjsKCmV4cG9ydCBjb25zdCBTb21lQ29tcG9uZW50ID0gKCkgPT4gewogIHJldHVybiAoCiAgICA8Um91dGVMaW5rIHRvPSJwcm9maWxlIj4KICAgICAgPHA+R28gdG8gUHJvZmlsZTwvcD4KICAgIDwvUm91dGVMaW5rPgogICk7Cn07CmBgYAoKWW91IGNhbiBhbHNvIHNlbmQgcGFyYW1zIHRvIHRoZSByb3V0ZToKCmBgYHRzeAppbXBvcnQgeyBSb3V0ZUxpbmsgfSBmcm9tICJhbGVtIjsKCmV4cG9ydCBjb25zdCBTb21lQ29tcG9uZW50ID0gKCkgPT4gewogIHJldHVybiAoCiAgICA8Um91dGVMaW5rCiAgICAgIHRvPSJwcm9maWxlIgogICAgICBwYXJhbXM9e3sgbmFtZTogIldlbmR6IiwgYWdlOiAzMywgcHJvZmlsZVBpY3R1cmU6ICJodHRwczovL3VybC5jb20vdG8vaW1hZ2UuanBnIiB9fQogICAgPgogICAgICA8cD5HbyB0byBQcm9maWxlPC9wPgogICAgPC9Sb3V0ZUxpbms+CiAgKTsKfTsKYGBgCgpUaGVuLCBpZiB5b3UncmUgdXNpbmcgYCJDb250ZW50QmFzZWQiYCBSb3V0ZXIsIHlvdSBjYW4gdXNlIGB1c2VSb3V0ZXMoKS5yb3V0ZVBhcmFtc2AgdG8gZ2V0IHRoZSByb3V0ZSBwYXJhbXMgaW5zaWRlIHRoZSBwYWdlIG9yIHVzZSBgdXNlUGFyYW1zKClgIGlmIHlvdSdyZSB1c2luZyBgIlVSTEJhc2VkImAgUm91dGVyOgoKYGBgdHN4CmltcG9ydCB7IHVzZVJvdXRlcywgdXNlUGFyYW1zIH0gZnJvbSAiYWxlbSI7CgpleHBvcnQgY29uc3QgUHJvZmlsZVBhZ2UgPSAoKSA9PiB7CiAgLy8gSWYgdXNpbmcgIkNvbnRlbnRCYXNlZCIgUm91dGVyCiAgY29uc29sZS5sb2codXNlUm91dGVzKCkucm91dGVQYXJhbXMpOwogIC8vIHsgbmFtZTogIldlbmR6IiwgYWdlOiAzMywgcHJvZmlsZVBpY3R1cmU6ICJodHRwczovL3VybC5jb20vdG8vaW1hZ2UuanBnIiB9CgogIC8vIElmIHVzaW5nICJVUkxCYXNlZCIgUm91dGVyCiAgY29uc29sZS5sb2codXNlUGFyYW1zKCkpOwogIC8vIHsgbmFtZTogIldlbmR6IiwgYWdlOiAiMzMiLCBwcm9maWxlUGljdHVyZTogImh0dHBzOi8vdXJsLmNvbS90by9pbWFnZS5qcGciIH0KCiAgLy8uLi4KfTsKYGBgCg==\\`, \"base64\").toString(\"utf-8\"); return <Markdown text={mdContent} />;}; const UseRoutes = () => { const mdContent = Buffer.from(\\`IyBVc2UgUm91dGVzCgpIb29rIHVzZWQgdG8gcmV0dXJuIHRoZSBjdXJyZW50IGRhdGEgdXRpbGl6ZWQgYnkgdGhlIGBSb3V0ZXJgIGNvbXBvbmVudC4KCmBgYHRzCmltcG9ydCB7IHVzZVJvdXRlcyB9IGZyb20gImFsZW0iOwoKZXhwb3J0IGNvbnN0IFNvbWVDb21wb25lbnQgPSAoKSA9PiB7CiAgY29uc3Qgcm91dGVzUHJvcHMgPSB1c2VSb3V0ZXMoKTsKICBjb25zb2xlLmxvZyhyb3V0ZXNQcm9wcyk7CiAgLy8geyByb3V0ZVBhcmFtczoge30sIHJvdXRlc0luaXRpYWxpemVkOiB0cnVlLCBhY3RpdmVSb3V0ZTogJ2hvbWUnLCByb3V0ZVBhcmFtZXRlck5hbWU6ICdwYXRoJywgcm91dGVzOiBbJ2hvbWUnLCAncHJvZmlsZSddLCByb3V0ZVR5cGU6ICdDb250ZW50QmFzZWQnLCBoaXN0b3J5OiBbey4uLn1dIH0KCiAgcmV0dXJuICIiOwp9OwpgYGAKCklmIHlvdSdyZSB1c2luZyBgIkNvbnRlbnRCYXNlZCJgIFJvdXRlciwgeW91IGNhbiB1c2UgYHVzZVJvdXRlcygpLnJvdXRlUGFyYW1zYCB0byBnZXQgdGhlIHJvdXRlIHBhcmFtcy4KCmBgYHRzCmltcG9ydCB7IHVzZVJvdXRlcyB9IGZyb20gImFsZW0iOwoKZXhwb3J0IGNvbnN0IFNvbWVDb21wb25lbnQgPSAoKSA9PiB7CiAgY29uc3Qgcm91dGVzUHJvcHMgPSB1c2VSb3V0ZXMoKTsKICBjb25zb2xlLmxvZyhyb3V0ZXNQcm9wcy5yb3V0ZVBhcmFtcyk7CiAgLy8gUGFyYW1zIHByb3ZpZGVkIGJ5IGBuYXZpZ2F0ZWAgb3IgYFJvdXRlTGlua2AsIGUuZy46IHthZ2U6IDIyLCBuYW1lOiAid2VuZHoifQoKICByZXR1cm4gIiI7Cn07CmBgYAo=\\`, \"base64\").toString(\"utf-8\"); return <Markdown text={mdContent} />;}; const DeployingWithGithubActions = () => { const mdContent = Buffer.from(\\`IyBEZXBsb3lpbmcgQXBwIFdpdGggR2l0SHViIEFjdGlvbnMKClRvIGRlcGxveSB3aWRnZXRzIG9uIHB1c2ggdG8gYnJhbmNoLCBjcmVhdGUgYSBHaXRIdWIgQWN0aW9ucyB3b3JrZmxvdyBmaWxlIGluIHlvdXIgcmVwb3NpdG9yeS4KCioqTWFpbm5ldDoqKgoKRm9yIG1haW5uZXQgeW91IGNhbiBkbyBsaWtlIHNvOiBgLmdpdGh1Yi93b3JrZmxvd3MvZGVwbG95LW1haW5uZXQueW1sYCwgYW5kIGNvbmZpZ3VyZSBpdCBhcyBmb2xsb3dzOgoKYGBgeWFtbApuYW1lOiBEZXBsb3kgREFwcCB0byBNYWlubmV0CgpvbjoKICBwdXNoOgogICAgYnJhbmNoZXM6IFttYWluXSAjIGJyYW5jaCBmb3IgdHJpZ2dlcgoKam9iczoKICBkZXBsb3ktbWFpbm5ldDoKICAgIHVzZXM6IHdwZGFzL2FsZW0vLmdpdGh1Yi93b3JrZmxvd3MvZGVwbG95LnltbEBtYWluCiAgICB3aXRoOgogICAgICBzaWduZXItYWNjb3VudC1hZGRyZXNzOiA8U0lHTkVSX0FDQ09VTlRfSUQ+ICMgYWNjb3VudCB0byBzaWduIHdpdGggKHNob3VsZCBtYXRjaCBhbGVtLmNvbmZpZy5qc29uID4gYWNjb3VudCkKICAgICAgc2lnbmVyLXB1YmxpYy1rZXk6IDxTSUdORVJfUFVCTElDX0tFWT4KICAgIHNlY3JldHM6CiAgICAgIFNJR05FUl9QUklWQVRFX0tFWTogJHt7IHNlY3JldHMuU0lHTkVSX1BSSVZBVEVfS0VZIH19ICMgbXVzdCBiZSBpbnNpZGUgdGhlIGdpdGh1YiByZXBvIHNlY3JldHMKYGBgCgoqKlRlc3RuZXQ6KioKCkZvciB0ZXN0bmV0IHlvdSBjYW4gZG8gbGlrZSBzbzogYC5naXRodWIvd29ya2Zsb3dzL2RlcGxveS10ZXN0bmV0LnltbGAsIGFuZCBjb25maWd1cmUgaXQgYXMgZm9sbG93czoKCmBgYHlhbWwKbmFtZTogRGVwbG95IERBcHAgdG8gVGVzdG5ldAoKb246CiAgcHVzaDoKICAgIGJyYW5jaGVzOiBbc3RhZ2luZ10gIyBicmFuY2ggZm9yIHRyaWdnZXIKCmpvYnM6CiAgZGVwbG95LXRlc3RuZXQ6CiAgICB1c2VzOiB3cGRhcy9hbGVtLy5naXRodWIvd29ya2Zsb3dzL2RlcGxveS10ZXN0bmV0LnltbEBtYWluCiAgICB3aXRoOgogICAgICBzaWduZXItYWNjb3VudC1hZGRyZXNzOiA8U0lHTkVSX0FDQ09VTlRfSUQ+ICMgYWNjb3VudCB0byBzaWduIHdpdGggKHNob3VsZCBtYXRjaCBhbGVtLmNvbmZpZy5qc29uID4gYWNjb3VudCkKICAgICAgc2lnbmVyLXB1YmxpYy1rZXk6IDxTSUdORVJfUFVCTElDX0tFWT4KICAgIHNlY3JldHM6CiAgICAgIFNJR05FUl9QUklWQVRFX0tFWTogJHt7IHNlY3JldHMuVEVTVE5FVF9TSUdORVJfUFJJVkFURV9LRVkgfX0gIyBtdXN0IGJlIGluc2lkZSB0aGUgZ2l0aHViIHJlcG8gc2VjcmV0cwpgYGAKCkFkanVzdCB0aGUgd29ya2Zsb3cgYXMgbmVlZGVkLCB0aGVuIGNvbmZpZ3VyZSB5b3VyIHZhcmlhYmxlcyArIHNlY3JldHMgb24gR2l0SHViIFNldHRpbmdzIC0+IEFjdGlvbnMgLT4gc2VjcmV0cyAmIHZhcmlhYmxlcy4gVXNlIFtuZWFyLWNsaS1yc10oaHR0cHM6Ly9naXRodWIuY29tL25lYXIvbmVhci1jbGktcnMpIGZvciBnZW5lcmF0aW5nIGtleXBhaXJzLiBZb3UgY2FuIGFsc28gbG9naW4gdXNpbmcgTmVhciBDTEkgYW5kIGNoZWNrIHRoZSBrZXlwYWlycyBsb2NhbGx5LgoKIyMjIFdvcmtmbG93IElucHV0cwoKVGhlIHdvcmtmbG93IGFjY2VwdHMgdGhlIGZvbGxvd2luZyBpbnB1dHM6CgotIGBjbGktdmVyc2lvbmAgKG9wdGlvbmFsKTogVmVyc2lvbiBvZiBCT1MgQ0xJIHRvIHVzZSBmb3IgZGVwbG95bWVudCAoZS5nLiwgMC4zLjApLiBEZWZhdWx0OiAiMC4zLjYiCgotIGBkZXBsb3ktZW52YCAob3B0aW9uYWwpOiBFbnZpcm9ubWVudCB0byBkZXBsb3kgY29tcG9uZW50IGNvZGUgdG8gKGUuZy4sIG1haW5uZXQsIHRlc3RuZXQpLiBEZWZhdWx0OiAibWFpbm5ldCIKCi0gYHNpZ25lci1hY2NvdW50LWFkZHJlc3NgIChyZXF1aXJlZCk6IEFjY291bnQgdW5kZXIgd2hpY2ggY29tcG9uZW50IGNvZGUgc2hvdWxkIGJlIGRlcGxveWVkIGFuZCB1c2VkIGZvciBzaWduaW5nIHRoZSBkZXBsb3kgdHJhbnNhY3Rpb24uCgotIGBzaWduZXItcHVibGljLWtleWAgKHJlcXVpcmVkKTogUHVibGljIGtleSBmb3Igc2lnbmluZyB0cmFuc2FjdGlvbnMgaW4gdGhlIGZvcm1hdDogYGVkMjU1MTk6PHB1YmxpY19rZXk+YC4KCi0gYHNpZ25lci1wcml2YXRlLWtleWAgKHJlcXVpcmVkKTogUHJpdmF0ZSBrZXkgZm9yIHNpZ25pbmcgdHJhbnNhY3Rpb25zIGluIHRoZSBmb3JtYXQ6IGBlZDI1NTE5Ojxwcml2YXRlX2tleT5gLgo=\\`, \"base64\").toString(\"utf-8\"); return <Markdown text={mdContent} />;}; const Cli = () => { const mdContent = Buffer.from(\\`IyBBbMOpbSBDTEkKCkFsw6ltIGhhcyBpdHMgb3duIGNvbW1hbmQgc3lzdGVtLgoKIyMjIENvbW1hbmRzCgpgYGBiYXNoClVzYWdlOiBhbGVtIFtvcHRpb25zXSBbY29tbWFuZF0KCk9wdGlvbnM6CiAgLVYsIC0tdmVyc2lvbiAgIG91dHB1dCB0aGUgdmVyc2lvbiBudW1iZXIKICAtaCwgLS1oZWxwICAgICAgZGlzcGxheSBoZWxwIGZvciBjb21tYW5kCgpDb21tYW5kczoKICBkZXYgW29wdGlvbnNdICAgICAgICAgICAgICBSdW4gdGhlIGRldmVsb3BtZW50IHNlcnZlcgogIGJ1aWxkICAgICAgICAgICAgICAgICAgICAgIEJ1aWxkIHRoZSBwcm9qZWN0CiAgZGVwbG95IFtvcHRpb25zXSAgICAgICAgICAgRGVwbG95IHRoZSBwcm9qZWN0CiAgdXBsb2FkLW1ldGFkYXRhIFtvcHRpb25zXSAgVXBsb2FkIG1ldGFkYXRhIHRvIFNvY2lhbERCIChhcHAgbmFtZSwgZGVzY3JpcHRpb24sIGljb24sIHRhZ3MsIGV0YykKYGBgCgojIyMjIENvbW1hbmQ6IGBkZXZgCgpSdW4gdGhlIGRldmVsb3BtZW50IHNlcnZlciB3aXRoIHZhcmlvdXMgb3B0aW9uczoKCmBgYGJhc2gKVXNhZ2U6IGFsZW0gZGV2IFtvcHRpb25zXQoKT3B0aW9uczoKICAtbiwgLS1uZXR3b3JrIDxuZXR3b3JrPiAgTmV0d29yayB3aGVyZSB0aGUgYXBwIHdpbGwgYmUgcnVubmluZyAoZGVmYXVsdDogIm1haW5uZXQiKQogIC1wLCAtLXBvcnQgPHBvcnQ+ICAgICAgICBQb3J0IHRvIHJ1biB0aGUgc2VydmVyIG9uIChkZWZhdWx0OiA4MDgwKQogIC1uby1vcGVuICAgICAgICAgICAgICAgICBEaXNhYmxlIG9wZW5pbmcgdGhlIGJyb3dzZXIgKGRlZmF1bHQ6IGZhbHNlKQpgYGAKCiMjIyMgQ29tbWFuZDogYGJ1aWxkYAoKQnVpbGQgdGhlIHByb2plY3Q6CgpgYGBiYXNoClVzYWdlOiBhbGVtIGJ1aWxkCmBgYAoKVGhpcyB3aWxsIG91dHB1dCB2YWxpZCB3aWRnZXQgY29kZSB0byB0aGUgYC9idWlsZGAgZGlyZWN0b3J5LgoKIyMjIyBDb21tYW5kOiBgZGVwbG95YAoKRGVwbG95IHRoZSBwcm9qZWN0IHRvIE5lYXIgQk9TOgoKYGBgYmFzaApVc2FnZTogYWxlbSBkZXBsb3kgW29wdGlvbnNdCgpPcHRpb25zOgogIC1uLCAtLW5ldHdvcmsgPG5ldHdvcms+ICBOZXR3b3JrIHdoZXJlIHRoZSBhcHAgc2hvdWxkIGJlIGRlcGxveWVkIChkZWZhdWx0OiAibWFpbm5ldCIpCiAgLWgsIC0taGVscCAgICAgICAgICAgICAgIGRpc3BsYXkgaGVscCBmb3IgY29tbWFuZApgYGAKCiMjIyMgQ29tbWFuZDogYHVwbG9hZC1tZXRhZGF0YWAKClVwbG9hZCBtZXRhZGF0YSB0byBTb2NpYWxEQi4gVGhpcyBpcyBnb2luZyB0byB1c2UgdGhlIGRhdGEgcHJvdmlkZWQgYnkgYGFsZW0uY29uZmlnLmpzb25gIGZpbGUuIFRoZSBjb250ZW50IHJlcHJlc2VudHMgdGhlIGFwcCdzIGRldGFpbHMgbGlrZSBgbmFtZSwgZGVzY3JpcHRpb24sIGljb24sIHRhZ3MsIGV0Y2AuIFlvdSBjYW4gdXBkYXRlIHRoaXMgaW5mb3JtYXRpb24gbWFudWFsbHkgYnkgZ29pbmcgdG8gdGhlIHdpZGdldCBtZXRhZGF0YSB0YWIgdXNpbmcgdGhlIFtOZWFyIFNhbmRib3hdKGh0dHBzOi8vbmVhci5vcmcvc2FuZGJveCkuCgpgYGBiYXNoClVzYWdlOiBhbGVtIHVwbG9hZC1tZXRhZGF0YSBbb3B0aW9uc10KCk9wdGlvbnM6CiAgLW4sIC0tbmV0d29yayA8bmV0d29yaz4gIE5ldHdvcmsgd2hlcmUgdGhlIG1ldGFkYXRhIHNob3VsZCBiZSBkZXBsb3llZCAoZGVmYXVsdDogIm1haW5uZXQiKQogIC1oLCAtLWhlbHAgICAgICAgICAgICAgICBkaXNwbGF5IGhlbHAgZm9yIGNvbW1hbmQKYGBgCg==\\`, \"base64\").toString(\"utf-8\"); return <Markdown text={mdContent} />;}; const ConfigFile = () => { const mdContent = Buffer.from(\\`IyBDb25maWcgRmlsZQoKQ3JlYXRlIGEgYGFsZW0uY29uZmlnLmpzb25gIGZpbGUgYXQgdGhlIHJvb3Qgb2YgdGhlIHByb2plY3Qgd2l0aCB0aGUgZm9sbG93aW5nIGNvbnRlbnQ6CgpgYGBqc29uCnsKICAvLyBUaGlzIGlzIHRoZSByb290IHBhdGggb2YgdGhlIGFwcC4KICAvLyBpZiB0cnVlOiBhbGVtLWxpYi5uZWFyL3dpZGdldC9JbmRleAogIC8vIGlmIGZhbHNlOiBhbGVtLWxpYi5uZWFyL3dpZGdldC9hbGVtLWRvY3MgKGl0J3MgZ29pbmcgdG8gdXNlIHRoZSBzbHVnaWZpZWQgIm5hbWUiKQogICJpc0luZGV4IjogdHJ1ZSwKICAvLyBUaGUgbWFpbm5ldCBhY2NvdW50IElEIHVuZGVyIHdoaWNoIHRoZSBhcHAgd2lsbCBiZSBkZXBsb3llZC4KICAibWFpbm5ldEFjY291bnQiOiAiYWxlbS1saWIubmVhciIsCiAgLy8gVGhlIHRlc3RuZXQgYWNjb3VudCBJRCB1bmRlciB3aGljaCB0aGUgYXBwIHdpbGwgYmUgZGVwbG95ZWQuCiAgInRlc3RuZXRBY2NvdW50IjogImFsZW0tbGliLnRlc3RuZXQiLAogIC8vIEFwcCBuYW1lCiAgIm5hbWUiOiAiQWxlbSBEb2NzIiwKICAvLyBBcHAgRGVzY3JpcHRpb24KICAiZGVzY3JpcHRpb24iOiAiQ3JlYXRlIHdlYjMgYXBwbGljYXRpb25zIGZvciBORUFSIEJPUyB3aXRoIGEgZm9jdXMgb24gcGVyZm9ybWFuY2Ugd2hpbGUgdXNpbmcgY29uY2VwdHMgdGhhdCBhcmUgYmFzZWQgb24gUmVhY3RKUy4iLAogIC8vIFNvY2lhbCBsaW5rcy4gQ2hlY2sgb3V0IE5FQVIgU29jaWFsIEJvcyBkb2NzIHRvIGdldCB0byBrbm93IHRoZSBvcHRpb25zCiAgLy8gaHR0cHM6Ly9kb2NzLm5lYXIub3JnL3NvY2lhbC9jb250cmFjdAogICJsaW5rdHJlZSI6IHsKICAgICJ3ZWJzaXRlIjogImdpdGh1Yi5jb20vd3BkYXMvYWxlbSIKICB9LAogICJpbWFnZSI6IHsKICAgICJpcGZzX2NpZCI6ICJiYWZrcmVpY2pkZ2F0NXhzdzd2eGJvc295eWdlcm1hd2hrZmkyYnkzb3ZnN2M2dHVtcmF5bjRyaW10eSIKICB9LAogIC8vIFRhZ3Mgb2YgdGhpcyBwcm9qZWN0CiAgInRhZ3MiOiBbInRoZSIsICJwcm9qZWN0IiwgInRhZ3MiLCAiaGVyZSJdCn0KYGBgCgojIFBhdGggQWxpYXNlcwoKWW91IGNhbiBvcHRpb25hbGx5IGNvbmZpZ3VyZSB5b3VyIGFwcGxpY2F0aW9uJ3MgcGF0aCBhbGlhc2VzIHNvIHRoYXQgaXQgd29ya3MgdG9nZXRoZXIgd2l0aCB0c2NvbmZpZy5qc29uLCBmb3IgZXhhbXBsZS4gQXNzdW1pbmcgeW91ciBwcm9qZWN0J3MgYHRzY29uZmlnLmpzb25gIGZpbGUgaGFzIHRoZSBmb2xsb3dpbmcgY29uZmlndXJhdGlvbiBmb3IgcGF0aHM6CgpgYGBqc29uCnsKICAiY29tcGlsZXJPcHRpb25zIjogewogICAgLy8gLi4uCiAgICAiYmFzZVVybCI6ICIuIiwKICAgICJwYXRocyI6IHsKICAgICAgIkBhcHAvKiI6IFsic3JjLyoiXSwKICAgICAgIkBjb21wb25lbnRzLyoiOiBbInNyYy9jb21wb25lbnRzLyoiXQogICAgfQogIH0KfQpgYGAKCllvdSB3aWxsIHdhbnQgdG8gY29uZmlndXJlIHRoZSBzYW1lIGJlaGF2aW9yIHVzaW5nIHRoZSBgYWxlbS5jb25maWcuanNvbmAgZmlsZSBhcyBmb2xsb3dzOgoKYGBganNvbgp7CiAgLy8gLi4uCiAgImNvbXBpbGVyT3B0aW9ucyI6IHsKICAgICJiYXNlVXJsIjogIi4iLAogICAgInBhdGhzIjogewogICAgICAiQGFwcC8iOiAic3JjLyIsCiAgICAgICJAY29tcG9uZW50cy8iOiAic3JjL2NvbXBvbmVudHMvIgogICAgfQogIH0KfQpgYGAKCk5vdyBpbiBhbGwgb2YgeW91ciBzb3VyY2UgZmlsZXMsIHlvdSBjYW4gaW1wb3J0IGNvbXBvbmVudHMgbGlrZSB0aGlzOgoKYGBgdHN4Ci8vIFdpdGhvdXQgcGF0aCBhbGlhc2VzCmltcG9ydCBIZXJvIGZyb20gIi4uLy4uLy4uL2NvbXBvbmVudHMvSGVybyI7CmltcG9ydCBGb290ZXIgZnJvbSAiLi4vLi4vLi4vY29tcG9uZW50cy9Gb290ZXIiOwoKLy8gV2l0aCBwYXRoIGFsaWFzZXMKaW1wb3J0IEhlcm8gZnJvbSAiQGNvbXBvbmVudHMvSGVybyI7CmltcG9ydCBGb290ZXIgZnJvbSAiQGNvbXBvbmVudHMvRm9vdGVyIjsKYGBgCgojIE9wdGlvbnMKCkl0IGlzIHBvc3NpYmxlIHRvIGNvbmZpZ3VyZSBzb21lIGNvbXBpbGVyIGJlaGF2aW9ycyB1c2luZyB0aGUgb3B0aW9ucyBzZXNzaW9uLgoKIyMgS2VlcCBSb3V0ZQoKYGtlZXBSb3V0ZWAgaXMgb25seSB2YWxpZCBkdXJpbmcgZGV2ZWxvcG1lbnQsIGFuZCBpcyBhdXRvbWF0aWNhbGx5IGRpc2FibGVkIGluIHByb2R1Y3Rpb24uCgpUaGlzIHByb3BlcnR5IGRlZmluZXMgd2hldGhlciB0aGUgcm91dGUgc2hvdWxkIHJlbWFpbiB0aGUgc2FtZSBkdXJpbmcgcmVmcmVzaGVzLiBUaGlzIGlzIG9ubHkgdmFsaWQgaWYgdGhlIGBSb3V0ZXJgIHR5cGUgaXMgYCJDb250ZW50QmFzZWQiYC4KCkRlZmF1bHQgdmFsdWUgaXMgYGZhbHNlYC4KCmBgYGpzb24KewogIC8vIC4uLgogICJvcHRpb25zIjogewogICAgImtlZXBSb3V0ZSI6IHRydWUKICB9Cn0KYGBgCgojIyBIaWRlIEFsw6ltIEJhcgoKWW91IGNhbiB1c2UgYG9wdGlvbnMuaGlkZUFsZW1CYXJgIHRvIHByZXZlbnQgdGhlIEFsw6ltIHRvcCBiYXIgZnJvbSBiZWluZyBkaXNwbGF5ZWQuIFRoaXMgc2V0dGluZyBhcHBsaWVzIG9ubHkgaW4gdGhlIGRldmVsb3BtZW50IGVudmlyb25tZW50LgoKYGBganNvbgp7CiAgLy8gLi4uCiAgIm9wdGlvbnMiOiB7CiAgICAiaGlkZUFsZW1CYXIiOiB0cnVlCiAgfQp9CmBgYAo=\\`, \"base64\").toString(\"utf-8\"); return <Markdown text={mdContent} />;}; const Installation = () => { const mdContent = Buffer.from(\\`IyBJbnN0YWxsYXRpb24KCioqWW914oCZbGwgbmVlZCB0byBoYXZlIE5vZGUgMTguMC4wIG9yIGxhdGVyIHZlcnNpb24gb24geW91ciBsb2NhbCBkZXZlbG9wbWVudCBtYWNoaW5lKiouIFlvdSBjYW4gdXNlIFtudm1dKGh0dHBzOi8vZ2l0aHViLmNvbS9jcmVhdGlvbml4L252bSNpbnN0YWxsYXRpb24pIChtYWNPUy9MaW51eCkgb3IgW252bS13aW5kb3dzXShodHRwczovL2dpdGh1Yi5jb20vY29yZXlidXRsZXIvbnZtLXdpbmRvd3Mjbm9kZS12ZXJzaW9uLW1hbmFnZXItbnZtLWZvci13aW5kb3dzKSB0byBzd2l0Y2ggTm9kZSB2ZXJzaW9ucyBiZXR3ZWVuIGRpZmZlcmVudCBwcm9qZWN0cy4KClVzZSB0aGUgY29tbWFuZCBiZWxvdyB0byBzdGFydCBhbiBpbml0aWFsIGJvaWxlcnBsYXRlLgoKIyMjIEphdmFTY3JpcHQKCmBgYHNoCiMgTnB4Cm5weCBjcmVhdGUtYWxlbS1kYXBwIG15LWFwcApjZCBteS1hcHAKbnBtIHN0YXJ0CmBgYAoKYGBgc2gKIyBZYXJuCnlhcm4gY3JlYXRlIGFsZW0tZGFwcCBteS1hcHAKY2QgbXktYXBwCnlhcm4gc3RhcnQKYGBgCgojIyMgVHlwZVNjcmlwdAoKYGBgc2gKIyBOcHgKbnB4IGNyZWF0ZS1hbGVtLWRhcHAgbXktYXBwIC0tdGVtcGxhdGUgdHlwZXNjcmlwdApjZCBteS1hcHAKbnBtIHN0YXJ0CmBgYAoKYGBgc2gKIyBZYXJuCnlhcm4gY3JlYXRlIGFsZW0tZGFwcCBteS1hcHAgLS10ZW1wbGF0ZSB0eXBlc2NyaXB0CmNkIG15LWFwcAp5YXJuIHN0YXJ0CmBgYAo=\\`, \"base64\").toString(\"utf-8\"); return <Markdown text={mdContent} />;}; const FeatureOverview = () => { const mdContent = Buffer.from(\\`\\`, \"base64\").toString(\"utf-8\"); return <Markdown text={mdContent} />;}; const getRouteTitleByPath = routePath => { if (!routePath) return \"\"; let routeProps = null; Object.keys(RoutesPath).forEach(route => { if (RoutesPath[route].path === routePath) { routeProps = RoutesPath[route]; } }); return routeProps.title;}; const nextPrevRoutes = () => ({ [RoutesPath.about.path]: { next: RoutesPath.installation.path }, [RoutesPath.installation.path]: { prev: RoutesPath.about.path, next: RoutesPath.featureOverview.path }, [RoutesPath.featureOverview.path]: { prev: RoutesPath.installation.path, next: RoutesPath.configFile.path }, [RoutesPath.configFile.path]: { prev: RoutesPath.installation.path, next: RoutesPath.cli.path }, [RoutesPath.cli.path]: { prev: RoutesPath.configFile.path, next: RoutesPath.deployingWithGithubActions.path }, [RoutesPath.deployingWithGithubActions.path]: { prev: RoutesPath.cli.path, next: RoutesPath.installingModules.path }, [RoutesPath.installingModules.path]: { prev: RoutesPath.deployingWithGithubActions.path, next: RoutesPath.howToUseModules.path }, [RoutesPath.howToUseModules.path]: { prev: RoutesPath.installingModules.path, next: RoutesPath.routes.path }, [RoutesPath.routes.path]: { prev: RoutesPath.deployingWithGithubActions.path, next: RoutesPath.routeLink.path }, [RoutesPath.routeLink.path]: { prev: RoutesPath.routes.path, next: RoutesPath.navigate.path }, [RoutesPath.navigate.path]: { prev: RoutesPath.routeLink.path, next: RoutesPath.getLocation.path }, [RoutesPath.getLocation.path]: { prev: RoutesPath.navigate.path, next: RoutesPath.useParams.path }, [RoutesPath.useParams.path]: { prev: RoutesPath.getLocation.path, next: RoutesPath.useRoutes.path }, [RoutesPath.useRoutes.path]: { prev: RoutesPath.useParams.path, next: RoutesPath.createAndUseContext.path }, [RoutesPath.createAndUseContext.path]: { prev: RoutesPath.useRoutes.path, next: RoutesPath.loadExternalStyles.path }, [RoutesPath.loadExternalStyles.path]: { prev: RoutesPath.createAndUseContext.path, next: RoutesPath.promisify.path }, [RoutesPath.promisify.path]: { prev: RoutesPath.loadExternalStyles.path, next: RoutesPath.isDevelopment.path }, [RoutesPath.isDevelopment.path]: { prev: RoutesPath.promisify.path, next: RoutesPath.createDebounce.path }, [RoutesPath.createDebounce.path]: { prev: RoutesPath.isDevelopment.path, next: RoutesPath.bosProps.path }, [RoutesPath.bosProps.path]: { prev: RoutesPath.createDebounce.path }}); const Categories = { gettingStarted: \"Getting Started\", router: \"Router\", modules: \"Modules\", context: \"Context\", apis: \"APIs\", bos: \"BOS\"};const RoutesPath = { about: { path: \"about\", title: \"About\", category: Categories.gettingStarted }, installation: { path: \"installation\", title: \"Installation\", category: Categories.gettingStarted }, featureOverview: { path: \"feature-overview\", title: \"Feature Overview\", category: Categories.gettingStarted }, configFile: { path: \"config-file\", title: \"Config File\", category: Categories.gettingStarted }, cssFiles: { path: \"css-files\", title: \"CSS Files\", category: Categories.gettingStarted }, cli: { path: \"cli\", title: \"CLI\", category: Categories.gettingStarted }, deployingWithGithubActions: { path: \"deploying-with-github-actions\", title: \"Deploying with GitHub Actions\", category: Categories.gettingStarted }, installingModules: { path: \"installing-modules\", title: \"Installing Modules\", category: Categories.modules }, howToUseModules: { path: \"how-to-use-modules\", title: \"How to Use\", category: Categories.modules }, routes: { path: \"routes\", title: \"Routes\", category: Categories.router }, routeLink: { path: \"route-link\", title: \"Route Link\", category: Categories.router }, navigate: { path: \"navigate\", title: \"Navigate\", category: Categories.router }, getLocation: { path: \"get-location\", title: \"Get Location\", category: Categories.router }, useParams: { path: \"use-params\", title: \"Use Params\", category: Categories.router }, useRoutes: { path: \"useRoutes\", title: \"Use Routes\", category: Categories.router }, createAndUseContext: { path: \"create-and-use-context\", title: \"Create & Use Context\", category: Categories.context }, loadExternalStyles: { path: \"load-external-styles\", title: \"Load External Styles\", category: Categories.apis }, promisify: { path: \"promisify\", title: \"Promisify\", category: Categories.apis }, isDevelopment: { path: \"is-development\", title: \"Is Development\", category: Categories.apis }, createDebounce: { path: \"create-debounce\", title: \"Create Debounce\", category: Categories.apis }, bosProps: { path: \"bos-props\", title: \"APIs and Components\", category: Categories.bos }}; const Row = styled.div\\` display: flex;\\`;const Column = styled.div\\` display: flex; flex-direction: column;\\`; const A_2 = styled.div\\` display: flex; flex-direction: column; align-items: center; margin-bottom: 90px; h1 { border-bottom: none; }\\`;const A_3 = styled.img\\` pointer-events: none; margin-bottom: 20px; border-radius: 999px;\\`;const A_4 = styled.h1\\` font-size: 42px !important; margin-bottom: 14px;\\`;const A_5 = styled.h3\\` font-size: 28px !important; font-weight: 600; color: rgb(67 74 90); margin-bottom: 34px;\\`;const CustomAnchor = styled.div\\` display: flex; a { padding: 0.75rem 1.5rem; border-radius: 30px; border: 1px solid #ccc; background-color: #fff; color: rgb(35 39 47); font-weight: 700; font-size: 17px; :hover { background-color: #fafafa; } }\\`;const CustomLink = styled.a\\` padding: 0.75rem 1.5rem; border-radius: 30px; border: 1px solid rgb(8 126 164); background-color: rgb(8 126 164); margin-right: 12px; p { color: #fff !important; margin: 0; font-weight: 700 !important; font-size: 17px; } :hover { background-color: rgb(8 126 164); }\\`;const Section = styled.div\\` background-color: rgb(188 193 205 / 12%); display: flex; flex-direction: column; align-items: center; padding: 90px 20px; align-items: center; text-align: center; h1 { border-bottom: none; padding-bottom: 0; } ul { list-style-type: none; } p, li { font-size: 20px; color: rgb(67 74 90); line-height: 1.5; max-width: 48rem; font-weight: 500; margin-top: 1.75rem; }\\`;const Code = styled.span\\` background-color: rgba(208, 211, 220, 0.4); border-radius: 0.5rem; border: 0 solid #e5e7eb; color: rgb(67 74 90); padding: 0.125rem 0.25rem;\\`;const BlueCode = styled.span\\` background-color: rgba(164, 187, 232, 0.4); border-radius: 0.5rem; border: 0 solid #e5e7eb; color: rgb(67 74 90); padding: 0.125rem 0.25rem;\\`;const RedCode = styled.span\\` background-color: rgba(223, 139, 142, 0.3); border-radius: 0.5rem; border: 0 solid #e5e7eb; color: rgb(67 74 90); padding: 0.125rem 0.25rem;\\`; const navigate = { to: (route, params) => { const routeContext = useContext(\"alemRoutes\"); if (!routeContext) { console.error(\"navigate is being used without Router on top of it.\"); } if (routeContext.routes.includes(route)) { routeContext.updateRouteParameters({ ...routeContext, activeRoute: route, routeParams: params || {} }); } }, back: () => { const routeContext = useContext(\"alemRoutes\"); if (!routeContext) { console.error(\"navigate is being used without Router on top of it.\"); } const updatedHistory = routeContext.history; if (updatedHistory) { updatedHistory.pop(); const routeProps = updatedHistory.at(-1); if (routeProps.route) { routeContext.updateRouteParameters({ ...routeContext, history: updatedHistory, activeRoute: routeProps.route, routeParams: routeProps.routeParams }); } } }}; const RouteLink = ({ to, params, label, className, style, onClick, children}) => { const routeContext = useContext(\"alemRoutes\"); if (!routeContext) { console.error(\"RouteLink component is being used without Router on top of it.\"); } const onClickHandler = () => { if (onClick) { onClick(); } if (routeContext.routeType === \"ContentBased\") { navigate.to(to, params); } }; if (routeContext.routeType === \"URLBased\") { let strParams = \"\"; if (params) { Object.keys(params).forEach(paramKey => { strParams += \\`&\\${paramKey}=\\${params[paramKey]}\\`; }); } return <a onClick={onClickHandler} className={className} style={{ cursor: \"pointer\", textDecoration: \"none\", ...style }} href={\\`?\\${routeContext.routeParameterName || \"path\"}=\\${to}\\${strParams}\\`}> {label || children} </a>; } return <a style={{ cursor: \"pointer\", textDecoration: \"none\", ...style }} className={className} onClick={onClickHandler}> {label || children} </a>;}; const AboutPage = () => { return <div> <A_2 style={{ marginBottom: 0 }}> <A_3 src=\"https://cdn.jsdelivr.net/gh/wpdas/alem/docs/assets/near-script-logo.png\" width={120} alt=\"logo\" /> <A_4>Al\u00e9m</A_4> <A_5>The library to build web3 applications for Near BOS</A_5> <Row> <CustomLink href=\"https://github.com/wpdas/bitbabble-dchat\" target=\"_blank\"> <p>See an Example</p> </CustomLink> <CustomAnchor> <RouteLink to={RoutesPath.featureOverview.path} label=\"Learn Alem\" /> </CustomAnchor> </Row> </A_2> <Section style={{ backgroundColor: \"#fff\", paddingTop: 40 }}> <img src=\"https://cdn.jsdelivr.net/gh/wpdas/alem-docs-web/src/md/assets/diagram.jpg\" width=\"100%\" alt=\"Diagram\" /> <p> You can create your applications in a similar way to React. All components and other resources will be transformed into a file understandable by Near VM. </p> </Section> <Section> <A_4>Create user interfaces from components</A_4> <p> Alem use its compiler to let you build user interfaces out of individual pieces. Create your own components like <Code>Thumbnail</Code>, <Code>LikeButton</Code>, and{\" \"} <Code>Avatar</Code>. Then combine them into entire screens, pages, and other components. </p> </Section> <Section style={{ backgroundColor: \"#fff\" }}> <A_4>Stateless & Stateful Component</A_4> <p> Leverage the full power of JSX to create your components easily, quickly, and efficiently. Both stateful and stateless components <BlueCode>support children</BlueCode>, which is not natively supported by the Near VM, but Al\u00e9m handles this in a way that it is processed and understood. </p> </Section> <Section> <A_4>Network</A_4> <p> Currently supports <Code>Mainnet</Code> and <Code>Testnet</Code>. So, while you are developing and testing features you can test everything without worrying about expenses. </p> </Section> </div>;};const Routes = () => {const urlParams = props.alem.useParams();const location = getLocation();const nextPrev = nextPrevRoutes();const next = nextPrev[location.pathname].next;const prev = nextPrev[location.pathname].prev;const nextTitle = getRouteTitleByPath(next);const prevTitle = getRouteTitleByPath(prev);const routes = [props.alem.createRoute(RoutesPath.about.path, AboutPage), props.alem.createRoute(RoutesPath.installation.path, Installation), {path: RoutesPath.featureOverview.path,component: FeatureOverview}, props.alem.createRoute(RoutesPath.configFile.path, ConfigFile), props.alem.createRoute(RoutesPath.cssFiles.path, CssFiles), props.alem.createRoute(RoutesPath.cli.path, Cli), props.alem.createRoute(RoutesPath.deployingWithGithubActions.path, DeployingWithGithubActions), props.alem.createRoute(RoutesPath.routes.path, RoutesDocs), props.alem.createRoute(RoutesPath.useRoutes.path, UseRoutes), props.alem.createRoute(RoutesPath.routeLink.path, RouteLinkDocs), props.alem.createRoute(RoutesPath.navigate.path, Navigate), props.alem.createRoute(RoutesPath.getLocation.path, GetLocation), props.alem.createRoute(RoutesPath.useParams.path, UseParams), props.alem.createRoute(RoutesPath.createAndUseContext.path, CreateContext), props.alem.createRoute(RoutesPath.loadExternalStyles.path, LoadExternalStyles), props.alem.createRoute(RoutesPath.promisify.path, Promisify), props.alem.createRoute(RoutesPath.isDevelopment.path, IsDevelopment), props.alem.createRoute(RoutesPath.createDebounce.path, CreateDebounce), props.alem.createRoute(RoutesPath.bosProps.path, BosOverview), props.alem.createRoute(RoutesPath.installingModules.path, InstallingModules), props.alem.createRoute(RoutesPath.howToUseModules.path, HowToUseModules)];return <> <Widget loading=\" \" code={props.alem.componentsCode.Router} props={{ ...{ routes: routes, initialRoute: urlParams.section, ...props } }} /> <FooterNavContainer hasPrevious={!!prev} hasNext={!!next}> {prev && <NextPrevButton href={\\`?path=\\${prev}\\`}> <p>Previous</p> <span>{prevTitle}</span> </NextPrevButton>} {next && <NextPrevButton next href={\\`?path=\\${next}\\`}> <p>Next</p> <span>{nextTitle}</span> </NextPrevButton>} </FooterNavContainer> </>;}; const useRoutes = () => { const contextData = useContext(\"alemRoutes\"); if (!contextData) { console.error(\"useRoutes: You need to call \\`RouterProvider()\\` first.\"); } const data = { routesInitialized: contextData.routesInitialized, activeRoute: contextData.activeRoute, routeParameterName: contextData.routeParameterName, routes: contextData.routes, routeType: contextData.routeType, routeParams: contextData.routeParams, history: contextData.history }; return data;}; const getLocation = () => { const routes = useRoutes(); return { pathname: routes.activeRoute, routes: routes.routes, isRoutesReady: routes.routes && routes.routes.length > 0 };}; const ContentView = () => { const site = props.alem.isDevelopment ? \"http://127.0.0.1:8080/alem-lib.near/widget/Index\" : \"https://alem.dev/\"; const { pathname } = getLocation(); const copyToCliboard = () => { clipboard.writeText(\\`\\${site}?section=\\${pathname}\\`); }; return <A_1> {pathname !== \"about\" && pathname !== \"\" && <TopSection> <div> <ShareButton data-bs-toggle=\"modal\" data-bs-target=\"#sharedInfoModal\" onClick={copyToCliboard}> <ShareIcon /> Share </ShareButton> </div> </TopSection>} <Margin /> <Routes /> </A_1>;}; const AppContainer = styled.div\\` display: flex; flex-direction: row; font-family: \"Wix Madefor Display\", sans-serif; @media (max-width: 800px) { flex-wrap: wrap; }\\`;const AppBackground = styled.div\\` background-color: #fff; position: fixed; top: 0; left: 0; right: 0; bottom: 0; z-index: -2;\\`;const Banner = styled.p\\` display: flex; justify-content: center; align-items: center; font-size: 17px; height: 40px; background-color: rgb(243 244 246); color: rgb(67 74 90); font-weight: 500; line-height: 30px; width: 100%; span { color: rgb(8 126 164); margin-left: 8px; }\\`;const MobileNavBarSwitcher = styled.div\\` font-family: \"Wix Madefor Display\", sans-serif; /* display: none; */ height: 0px; overflow: hidden; @media (max-width: 800px) { display: flex; height: fit-content; }\\`;const SideBarSwitcher = styled.div\\` display: flex; @media (max-width: 800px) { /* display: none; */ height: 0px; overflow: hidden; }\\`; const ShareIcon = () => <span className=\"material-symbols-outlined\">share</span>; const SharedInfoModal = () => { return <> <div className=\"modal fade\" id=\"sharedInfoModal\" tabIndex={-1} aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\"> <div className=\"modal-dialog modal-dialog-centered\"> <div className=\"modal-content\"> <div className=\"modal-header\"> <h1 className=\"modal-title fs-5\" id=\"exampleModalLabel\" style={{ alignItems: \"center\", display: \"flex\" }}> <ShareIcon /> <p style={{ marginBottom: 0, marginLeft: 8 }}>Share</p> </h1> <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button> </div> <div className=\"modal-body\">Link copied to clipboard</div> <div className=\"modal-footer\"> <button type=\"button\" className=\"btn btn-primary\" data-bs-dismiss=\"modal\" style={{ padding: \"0.55rem 2.5rem\", borderRadius: \"30px\", border: \"1px solid rgb(8 126 164)\", backgroundColor: \"rgb(8 126 164)\", fontWeight: 700 }}> Ok </button> </div> </div> </div> </div> </>;}; const Modals = () => <> <SharedInfoModal /> </>; const createContext = contextKey => { const setDefaultData = defaultStateValue => { if (!state[contextKey] || !state[contextKey].initialized) { const stateKeys = Object.keys(defaultStateValue); let mainKeys = [...stateKeys]; mainKeys = mainKeys.filter((item, index) => mainKeys.indexOf(item) === index); State.update({ ...state, [contextKey]: { initialized: true, keys: mainKeys, ...defaultStateValue } }); } props = { ...props, ...state, [contextKey]: { ...state[contextKey] } }; }; const updateData = updates => { const updatedState = { [contextKey]: { ...state[contextKey], ...updates } }; State.update(updatedState); props = { ...props, ...updatedState }; }; const getSelf = () => props[contextKey]; return { setDefaultData, updateData, getSelf };}; const useContext = contextKey => { const wasContextInitialized = props[contextKey].initialized; if (!wasContextInitialized) { return {}; } const contextKeys = props[contextKey].keys; const contextItems = {}; contextKeys.forEach(key => { contextItems[key] = props[contextKey][key]; }); return contextItems;}; const ALEM_ROUTES_CONTEXT_KEY = \"alemRoutes\";const RouterContext = () => { const { setDefaultData, updateData } = createContext(ALEM_ROUTES_CONTEXT_KEY); const updateAlemRoutesState = updatedState => { updateData({ ...updatedState }); }; const alemRoutesState = () => useContext(ALEM_ROUTES_CONTEXT_KEY); setDefaultData({ routesInitialized: false, activeRoute: \"\", routeParams: {}, history: [], routeParameterName: \"path\", routes: [], routeType: \"URLBased\", routeBlocked: true, updateRouteParameterName: parameterName => { updateAlemRoutesState({ routeParameterName: parameterName }); }, updateRouteParameters: routeProps => { const currentHistory = alemRoutesState().history; const hasPreviousHistory = currentHistory.length === 0 && routeProps.history; const updatedHistory = hasPreviousHistory ? routeProps.history : alemRoutesState().history; if (routeProps.activeRoute) { const newHistory = { route: routeProps.activeRoute, routeParams: routeProps.routeParams }; if (updatedHistory.length > 10) { updatedHistory.shift(); } if (updatedHistory.at(-1).route !== routeProps.activeRoute) { updatedHistory.push(newHistory); } } updateAlemRoutesState({ routes: routeProps.routes || alemRoutesState().routes, routeType: routeProps.routeType || alemRoutesState().routeType, activeRoute: routeProps.activeRoute || alemRoutesState().activeRoute, routeBlocked: routeProps.routeBlocked || alemRoutesState().routeBlocked, routeParams: routeProps.routeParams || alemRoutesState().routeParams, history: updatedHistory, routesInitialized: true }); if (props.alem.keepRoute && routeProps.activeRoute) { Storage.privateSet(\"alem::keep-route\", updatedHistory); } } });};const [libVersion, setLibVersion] = useState(\"\");useEffect(() => {asyncFetch(\"https://api.github.com/repos/wpdas/alem/tags\").then((data) => {setLibVersion(data.body[0].name.replace(\"v\", \"\"));});}, []);RouterContext();return <div style={{marginTop: \"calc(-1 * var(--body-top-padding, 0))\"}}> <Modals /> <Banner> Alem is currently on version <span>{libVersion}</span>. </Banner> <MobileNavBarSwitcher> <Widget loading=\" \" code={props.alem.componentsCode.MobileNavBar} props={{ ...{ ...props } }} /> </MobileNavBarSwitcher> <AppContainer> <SideBarSwitcher> <Widget loading=\" \" code={props.alem.componentsCode.Sidebar} props={{ ...{ ...props } }} /> </SideBarSwitcher> <ContentView /> </AppContainer> <Footer /> <AppBackground /> </div>; `, App: ` const Spinner = ({ style, dark}) => <div style={{ display: \"flex\", justifyContent: \"center\", width: \"100%\", ...style}}> <div className={\\`spinner-border \\${dark ? \"\" : \"text-light\"}\\`} role=\"status\"> <span className=\"visually-hidden\">Loading...</span> </div> </div>; const AppContainer = styled.div\\` display: flex; flex-direction: row; font-family: \"Wix Madefor Display\", sans-serif; @media (max-width: 800px) { flex-wrap: wrap; }\\`;const AppBackground = styled.div\\` background-color: #fff; position: fixed; top: 0; left: 0; right: 0; bottom: 0; z-index: -2;\\`;const Banner = styled.p\\` display: flex; justify-content: center; align-items: center; font-size: 17px; height: 40px; background-color: rgb(243 244 246); color: rgb(67 74 90); font-weight: 500; line-height: 30px; width: 100%; span { color: rgb(8 126 164); margin-left: 8px; }\\`;const MobileNavBarSwitcher = styled.div\\` font-family: \"Wix Madefor Display\", sans-serif; /* display: none; */ height: 0px; overflow: hidden; @media (max-width: 800px) { display: flex; height: fit-content; }\\`;const SideBarSwitcher = styled.div\\` display: flex; @media (max-width: 800px) { /* display: none; */ height: 0px; overflow: hidden; }\\`; const Loading = () => { return <AppContainer> <Spinner style={{ marginTop: \"28vh\" }} dark /> <AppBackground /> </AppContainer>;};const stylesLoaded = props.alem.loadExternalStyles([\"https://fonts.googleapis.com/css2?family=Wix+Madefor+Display:wght@400..800&display=swap\", \"https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@24,400,0,0\", \"https://fonts.cdnfonts.com/css/source-code-pro\"]);if (!stylesLoaded) {return <Loading />;}return <Widget loading=\" \" code={props.alem.componentsCode.Main} props={{ ...{ ...props } }} />; `, }, },};if (props.alem.keepRoute) { if (!props.alem.ready) { props.alem.promisify( () => Storage.privateGet(\"alem::keep-route\"), (data) => { updateAlemState({ previousRoute: data.route, previousRouteParams: data.routeParams, ready: true, }); }, () => { updateAlemState({ previousRoute: null, ready: true, }); }, 300, ); }} else { updateAlemState({ previousRoute: null, ready: true, });}const alemCssBody = ``;const AlemTheme = styled.div` ${state.alem.alemExternalStylesBody} ${alemCssBody}`;const AlemApp = useMemo(() => { if (!props.alem.ready) { return \"\"; } return ( <AlemTheme> <Widget loading=\" \" code={props.alem.componentsCode.App} props={{ alem: props.alem }} /> </AlemTheme> );}, [props.alem.ready, props.alem.alemExternalStylesBody]);return AlemApp;\n  ", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/alem-lib.near/widget/Index", "fact_widget_deployments_id": "bf8accaae9e71e298e19a56b4395d4d4", "inserted_timestamp": "2024-04-09T07:33:06.144Z", "modified_timestamp": "2024-04-09T08:33:37.237Z", "__row_index": 274}