{"tx_hash": "5cHZFwkWcM192aTwULwY9iFWd3TKhTk4pjwMBv3snC7K", "action_id_social": "E2ECWfVHqcfTcFBVhxa4vhRABcneubx88o8VPkzRzcVE-0-widget", "block_id": 115987339, "block_timestamp": "2024-04-02T14:21:58.828Z", "signer_id": "alem-lib.near", "widget_name": "Index", "source_code": "\n  /** Bundle generated by Al\u00e9m Library v1.0.0-beta.2 - See more here: https://github.com/wpdas/alem */\n  /** Project repository: https://github.com/wpdas/alem-docs-web */\n  const updateAlemState = (updatedState) => { State.update({ alem: { ...state.alem, ...updatedState, }, });};const alemState = () => state.alem ;const AlemStateInitialBody = { alem: { rootProps: props, alemEnvironment: \"production\", alemExternalStylesLoaded: false, alemExternalStylesBody: \"\", },};State.init(AlemStateInitialBody);State.update({ alem: { ...state.alem, rootProps: props } }); const props = { ...props, alem: { ...state.alem, createRoute: (path, component) => ({ path, component }) , useParams: () => { let params = alemState().rootProps; return params; }, loadExternalStyles: (URLs) => { if (!URLs && !alemState().alemExternalStylesLoaded) { return; } let stylesBody = \"\"; const totalItems = URLs.length; let loadedCounter = 0; const loadStyle = (styleURL) => { asyncFetch(styleURL).then((response) => { stylesBody += response.body; loadedCounter += 1; if (loadedCounter === totalItems) { updateAlemState({ alemExternalStylesLoaded: true, alemExternalStylesBody: stylesBody, }); } }); }; URLs.forEach((styleURL) => { loadStyle(styleURL); }); return alemState().alemExternalStylesLoaded; }, promisify: ( caller, resolve, reject, _timeout, ) => { const timer = 100; const timeout = _timeout || 10000; let timeoutCheck = 0; const find = () => { const response = caller(); if (response !== undefined && response !== null) { resolve(response); } else { if (timeoutCheck < timeout) { setTimeout(find, timer); timeoutCheck += timer; } else { if (reject) { reject(); } } } }; find(); }, isDevelopment: alemState().alemEnvironment === \"development\", componentsCode: { Router: ` const props = props; const { routes, type, parameterName, alem, alemRoutes, initialRoute } = props; useEffect(() => { routes.forEach(route => { if (!route.component) { console.error(\\`Routes: Invalid component for route \"\\${route.path}\"\\`); } if (!route.path) { console.error(\"Routes: Invalid path:\", route.path); } }); }, [routes]); useEffect(() => { if (parameterName && parameterName !== alem.routeParameterName) { alemRoutes.updateRouteParameterName(parameterName); } }, []); const { routeParameterName, routeType, activeRoute } = alemRoutes; const routeParamName = parameterName || routeParameterName; const checkIfPathIsIncludedToRoutes = routePath => { let pathFound = false; if (routes) { routes.forEach(routeItem => { if (pathFound) return; if (!pathFound) { pathFound = routeItem.path === routePath; } }); } return pathFound; }; useEffect(() => { const bosProps = alem.rootProps; const maintainRoutesWhenDeveloping = alem.isDevelopment && alem.alemConfig_maintainRouteWhenDeveloping; if (routes) { let currentUrlPath = bosProps[routeParamName] && checkIfPathIsIncludedToRoutes(bosProps[routeParamName]) ? bosProps[routeParamName] : routes[0].path; const _routes = routes.map(route => route.path); const _type = type || \"URLBased\"; let _activeRoute = initialRoute || alemRoutes.activeRoute || currentUrlPath; if (!(currentUrlPath && routeType == \"URLBased\" && alemRoutes.routeBlocked)) { _activeRoute = maintainRoutesWhenDeveloping ? initialRoute || activeRoute : routes[0].path; } if (!_activeRoute) { _activeRoute = routes[0].path; } if (!alemRoutes.routesInitialized) { alemRoutes.updateRouteParameters({ routes: _routes, routeType: _type, activeRoute: _activeRoute, routeBlocked: true }); } } }, [routeType]); const Component = routes.find(route => route.path === activeRoute)?.component || routes[0].component || <></>; return <Component />; `, Sidebar: ` const Categories = { gettingStarted: \"Getting Started\", router: \"Router\", context: \"Context\", apis: \"APIs\", bos: \"BOS\"}; const RoutesPath = { about: { path: \"about\", title: \"About\", category: Categories.gettingStarted }, featureOverview: { path: \"feature-overview\", title: \"Feature Overview\", category: Categories.gettingStarted }, installation: { path: \"installation\", title: \"Installation\", category: Categories.gettingStarted }, configFile: { path: \"config-file\", title: \"Config File\", category: Categories.gettingStarted }, cli: { path: \"cli\", title: \"CLI\", category: Categories.gettingStarted }, deployingWithGithubActions: { path: \"deploying-with-github-actions\", title: \"Deploying with GitHub Actions\", category: Categories.gettingStarted }, routes: { path: \"routes\", title: \"Routes\", category: Categories.router }, routeLink: { path: \"route-link\", title: \"Route Link\", category: Categories.router }, navigate: { path: \"navigate\", title: \"Navigate\", category: Categories.router }, getLocation: { path: \"get-location\", title: \"Get Location\", category: Categories.router }, useParams: { path: \"use-params\", title: \"Use Params\", category: Categories.router }, useRoutes: { path: \"useRoutes\", title: \"Use Routes\", category: Categories.router }, createAndUseContext: { path: \"create-and-use-context\", title: \"Create & Use Context\", category: Categories.context }, loadExternalStyles: { path: \"load-external-styles\", title: \"Load External Styles\", category: Categories.apis }, promisify: { path: \"promisify\", title: \"Promisify\", category: Categories.apis }, isDevelopment: { path: \"is-development\", title: \"Is Development\", category: Categories.apis }, createDebounce: { path: \"create-debounce\", title: \"Create Debounce\", category: Categories.apis }, bosProps: { path: \"bos-props\", title: \"APIs and Components\", category: Categories.bos }}; const navigate = route => { const routeContext = useContext(\"alemRoutes\"); if (!routeContext) { console.error(\"navigate is being used without Router on top of it.\"); } if (routeContext.routes.includes(route)) { routeContext.updateRouteParameters({ ...routeContext, activeRoute: route }); }}; const RouteLink = ({ to, label, className, style, onClick, children}) => { const routeContext = useContext(\"alemRoutes\"); if (!routeContext) { console.error(\"RouteLink component is being used without Router on top of it.\"); } const onClickHandler = () => { if (onClick) { onClick(); } if (routeContext.routeType === \"ContentBased\") { navigate(to); } }; if (routeContext.routeType === \"URLBased\") { return <a onClick={onClickHandler} className={className} style={{ cursor: \"pointer\", textDecoration: \"none\", ...style }} href={\\`?\\${routeContext.routeParameterName || \"path\"}=\\${to}\\`}> {label || children} </a>; } return <a style={{ cursor: \"pointer\", textDecoration: \"none\", ...style }} className={className} onClick={onClickHandler}> {label || children} </a>;}; const getLinksByCategory = (category, onItemClick) => { const { pathname } = getLocation(); return Object.keys(RoutesPath).map(routeKey => { const routeDetails = RoutesPath[routeKey]; if (routeDetails.category === category) { return <RouteLink to={routeDetails.path} onClick={onItemClick} label={routeDetails.title} className={pathname === routeDetails.path ? \"active\" : \"\"} />; } }).filter(item => !!item);}; const A_6 = styled.div\\` display: flex; flex-direction: column; gap: 16px; background: #fff; border-right: rgb(224 226 229) solid 1px; min-width: 240px; width: 240px; padding: 0px 17px 30px; margin-top: 40px; margin-right: 16px; z-index: 1; bottom: 0; margin-bottom: 40px; height: fit-content; @media (max-width: 800px) { width: 100%; } h3 { margin: 0; font-size: 14px; font-weight: 700; color: #292929; padding: 12px 21px 6px; } a { display: block; font-size: 14px; font-weight: 600; padding: 6px 21px; margin-bottom: 0; border-radius: 4px; color: rgb(129, 129, 129); cursor: pointer; transition: all 0.2s ease-in-out; text-decoration: none; text-transform: capitalize; } a.active { background: #edf4fc !important; color: #4498e0 !important; } a:hover { color: #4498e0 !important; }\\`; const SidebarAboutLogo = styled.img\\` align-self: center; @media (max-width: 800px) { display: none; }\\`; const getLocation = () => { const routes = useRoutes(); return { pathname: routes.activeRoute, routes: routes.routes, isRoutesReady: routes.routes && routes.routes.length > 0 };}; const useContext = contextKey => { const wasContextInitialized = props[contextKey].initialized; if (!wasContextInitialized) { console.error(\\`Context \"\\${contextKey}\" not found.\\`); return {}; } const contextKeys = props[contextKey].keys; const contextItems = {}; contextKeys.forEach(key => { contextItems[key] = props[contextKey][key]; }); return contextItems;}; const useRoutes = () => { const contextData = useContext(\"alemRoutes\"); if (!contextData) { console.error(\"useRoutes: You need to call \\`RouterProvider()\\` first.\"); } return contextData;}; const { pathname } = getLocation(); const { routeParameterName } = useRoutes(); const [gettingStartedItems, setGettingStartedItems] = useState([]); const [routerItems, setRouterItems] = useState([]); const [contextItems, setContextItems] = useState([]); const [apisItems, setApisItems] = useState([]); const [bosItems, setBosItems] = useState([]); useEffect(() => { const _gettingStartedItems = getLinksByCategory(\"Getting Started\"); const _routerItems = getLinksByCategory(\"Router\"); const _contextItems = getLinksByCategory(\"Context\"); const _apisItems = getLinksByCategory(\"APIs\"); const _bosItems = getLinksByCategory(\"BOS\"); setGettingStartedItems(_gettingStartedItems); setRouterItems(_routerItems); setContextItems(_contextItems); setApisItems(_apisItems); setBosItems(_bosItems); }, [pathname, routeParameterName]); return <A_6> <SidebarAboutLogo src=\"https://cdn.jsdelivr.net/gh/wpdas/alem/docs/assets/near-script-logo.png\" width={60} alt=\"logo\" /> <div> <h3>Getting Started</h3> {gettingStartedItems} </div> <div> <h3>Routes</h3> {routerItems} </div> <div> <h3>Context</h3> {contextItems} </div> <div> <h3>Utils</h3> {apisItems} </div> <div> <h3>NEAR VM (BOS)</h3> {bosItems} </div> </A_6>; `, MobileNavBar: ` const Categories = { gettingStarted: \"Getting Started\", router: \"Router\", context: \"Context\", apis: \"APIs\", bos: \"BOS\"}; const RoutesPath = { about: { path: \"about\", title: \"About\", category: Categories.gettingStarted }, featureOverview: { path: \"feature-overview\", title: \"Feature Overview\", category: Categories.gettingStarted }, installation: { path: \"installation\", title: \"Installation\", category: Categories.gettingStarted }, configFile: { path: \"config-file\", title: \"Config File\", category: Categories.gettingStarted }, cli: { path: \"cli\", title: \"CLI\", category: Categories.gettingStarted }, deployingWithGithubActions: { path: \"deploying-with-github-actions\", title: \"Deploying with GitHub Actions\", category: Categories.gettingStarted }, routes: { path: \"routes\", title: \"Routes\", category: Categories.router }, routeLink: { path: \"route-link\", title: \"Route Link\", category: Categories.router }, navigate: { path: \"navigate\", title: \"Navigate\", category: Categories.router }, getLocation: { path: \"get-location\", title: \"Get Location\", category: Categories.router }, useParams: { path: \"use-params\", title: \"Use Params\", category: Categories.router }, useRoutes: { path: \"useRoutes\", title: \"Use Routes\", category: Categories.router }, createAndUseContext: { path: \"create-and-use-context\", title: \"Create & Use Context\", category: Categories.context }, loadExternalStyles: { path: \"load-external-styles\", title: \"Load External Styles\", category: Categories.apis }, promisify: { path: \"promisify\", title: \"Promisify\", category: Categories.apis }, isDevelopment: { path: \"is-development\", title: \"Is Development\", category: Categories.apis }, createDebounce: { path: \"create-debounce\", title: \"Create Debounce\", category: Categories.apis }, bosProps: { path: \"bos-props\", title: \"APIs and Components\", category: Categories.bos }}; const getLinksByCategory = (category, onItemClick) => { const { pathname } = getLocation(); return Object.keys(RoutesPath).map(routeKey => { const routeDetails = RoutesPath[routeKey]; if (routeDetails.category === category) { return <RouteLink to={routeDetails.path} onClick={onItemClick} label={routeDetails.title} className={pathname === routeDetails.path ? \"active\" : \"\"} />; } }).filter(item => !!item);}; const A_7 = styled.div\\` display: flex; flex-direction: column; border-bottom: rgb(224 226 229) solid 1px; min-width: 240px; margin-top: 10px; margin-bottom: 40px; height: fit-content; @media (max-width: 800px) { width: 100%; } h3 { margin: 0; font-size: 14px; font-weight: 700; color: #292929; padding: 12px 21px 6px; } a { display: block; font-size: 14px; font-weight: 600; padding: 6px 21px; margin-bottom: 0; border-radius: 4px; color: rgb(129, 129, 129); cursor: pointer; transition: all 0.2s ease-in-out; text-decoration: none; text-transform: capitalize; } a.active { background: #edf4fc !important; color: #4498e0 !important; } a:hover { color: #4498e0 !important; }\\`; const NavBar = styled.div\\` display: flex; padding: 12px; justify-content: space-between;\\`; const CollapseButton = styled.button\\` background-color: rgb(243 244 246); border-radius: 12px; border: none; display: flex; justify-content: center; align-items: center; width: 80px;\\`; const A_8 = styled.img\\` align-self: center;\\`; const ItemsContainer = styled.button\\` display: flex; overflow: hidden; height: \\${props => props.collapsed ? \"fit-content\" : \"0px\"}; background-color: #fff; border: none; flex-direction: column; align-items: center; padding-bottom: \\${props => props.collapsed ? \"44px\" : \"0\"};\\`; const getLocation = () => { const routes = useRoutes(); return { pathname: routes.activeRoute, routes: routes.routes, isRoutesReady: routes.routes && routes.routes.length > 0 };}; const useRoutes = () => { const contextData = useContext(\"alemRoutes\"); if (!contextData) { console.error(\"useRoutes: You need to call \\`RouterProvider()\\` first.\"); } return contextData;}; const navigate = route => { const routeContext = useContext(\"alemRoutes\"); if (!routeContext) { console.error(\"navigate is being used without Router on top of it.\"); } if (routeContext.routes.includes(route)) { routeContext.updateRouteParameters({ ...routeContext, activeRoute: route }); }}; const useContext = contextKey => { const wasContextInitialized = props[contextKey].initialized; if (!wasContextInitialized) { console.error(\\`Context \"\\${contextKey}\" not found.\\`); return {}; } const contextKeys = props[contextKey].keys; const contextItems = {}; contextKeys.forEach(key => { contextItems[key] = props[contextKey][key]; }); return contextItems;}; const RouteLink = ({ to, label, className, style, onClick, children}) => { const routeContext = useContext(\"alemRoutes\"); if (!routeContext) { console.error(\"RouteLink component is being used without Router on top of it.\"); } const onClickHandler = () => { if (onClick) { onClick(); } if (routeContext.routeType === \"ContentBased\") { navigate(to); } }; if (routeContext.routeType === \"URLBased\") { return <a onClick={onClickHandler} className={className} style={{ cursor: \"pointer\", textDecoration: \"none\", ...style }} href={\\`?\\${routeContext.routeParameterName || \"path\"}=\\${to}\\`}> {label || children} </a>; } return <a style={{ cursor: \"pointer\", textDecoration: \"none\", ...style }} className={className} onClick={onClickHandler}> {label || children} </a>;}; const [show, setShow] = useState(false); const closeMenu = () => { setShow(false); }; const { pathname } = getLocation(); const { routeParameterName } = useRoutes(); const [gettingStartedItems, setGettingStartedItems] = useState([]); const [routerItems, setRouterItems] = useState([]); const [contextItems, setContextItems] = useState([]); const [apisItems, setApisItems] = useState([]); const [bosItems, setBosItems] = useState([]); useEffect(() => { const _gettingStartedItems = getLinksByCategory(\"Getting Started\", closeMenu); const _routerItems = getLinksByCategory(\"Router\", closeMenu); const _contextItems = getLinksByCategory(\"Context\", closeMenu); const _apisItems = getLinksByCategory(\"APIs\", closeMenu); const _bosItems = getLinksByCategory(\"BOS\", closeMenu); setGettingStartedItems(_gettingStartedItems); setRouterItems(_routerItems); setContextItems(_contextItems); setApisItems(_apisItems); setBosItems(_bosItems); }, [pathname, routeParameterName]); return <A_7> <NavBar> <RouteLink to=\"about\"> <A_8 src=\"https://cdn.jsdelivr.net/gh/wpdas/alem/docs/assets/near-script-logo.png\" width={40} alt=\"logo\" /> </RouteLink> <CollapseButton type=\"button\" onClick={() => { setShow(!show); }}> {!show ? <span className=\"material-symbols-outlined\">menu</span> : <span className=\"material-symbols-outlined\">close</span>} </CollapseButton> </NavBar> <ItemsContainer collapsed={show}> <div> <h3>Getting Started</h3> {gettingStartedItems} </div> <div> <h3>Routes</h3> {routerItems} </div> <div> <h3>Context</h3> {contextItems} </div> <div> <h3>Utils</h3> {apisItems} </div> <div> <h3>NEAR VM (BOS)</h3> {bosItems} </div> </ItemsContainer> </A_7>; `, Main: ` const Container = styled.p\\` display: flex; justify-content: space-between; align-items: center; font-size: 16px; border-top: 1px solid rgb(224 226 229); color: rgb(67 74 90); font-weight: 500; line-height: 30px; width: 100%; padding: 22px 70px; font-family: \"Source Code Pro\", sans-serif, ui-sans-serif, system-ui, -apple-system; span { color: rgb(8 126 164); margin-left: 8px; } @media screen and (max-width: 1049px) { padding: 22px 10px; } @media screen and (max-width: 796px) { padding: 22px 10px; flex-direction: column; gap: 26px; }\\`; const Item = styled.a\\` font-size: 16px; line-height: 24px; text-align: center; margin: 0 8px; cursor: pointer; svg { width: 30px; height: 30px; }\\`; const Logo = styled.div\\` display: flex; justify-content: center; p { margin: 0 0 0 8px; }\\`; const Socials = styled.div\\` display: flex; width: 200px; justify-content: space-between; p { font-size: 14px; margin-bottom: 0; } a { color: #292929; }\\`; const Description = styled.p\\` margin: 0; max-width: 430px; text-align: center; a { color: rgb(8 126 164); }\\`; const GithubIcon = () => <svg _ngcontent-ng-c1539744558=\"\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 56 56\"> <g _ngcontent-ng-c1539744558=\"\" fill-rule=\"evenodd\" clip-rule=\"evenodd\"> <circle _ngcontent-ng-c1539744558=\"\" fill=\"none\" cx=\"28\" cy=\"28\" r=\"28\"></circle> <path _ngcontent-ng-c1539744558=\"\" fill=\"#181616\" d=\"M28 0C12.54 0 0 12.54 0 28c0 12.37 8.02 22.86 19.15 26.57 1.4.26 1.91-.61 1.91-1.35 0-.66-.02-2.43-.04-4.76-7.79 1.69-9.43-3.75-9.43-3.75-1.27-3.23-3.11-4.1-3.11-4.1-2.54-1.74.19-1.7.19-1.7 2.81.2 4.29 2.89 4.29 2.89 2.5 4.28 6.55 3.04 8.15 2.33.25-1.81.98-3.04 1.78-3.74-6.22-.71-12.75-3.11-12.75-13.84 0-3.06 1.09-5.56 2.88-7.51-.29-.71-1.25-3.56.27-7.41 0 0 2.35-.75 7.7 2.87 2.23-.62 4.63-.93 7.01-.94 2.38.01 4.77.32 7.01.94 5.35-3.62 7.69-2.87 7.69-2.87 1.53 3.85.57 6.7.28 7.41 1.79 1.96 2.88 4.46 2.88 7.51 0 10.76-6.55 13.12-12.78 13.82 1.01.86 1.9 2.57 1.9 5.19 0 3.74-.03 6.76-.03 7.68 0 .75.5 1.62 1.93 1.35C47.98 50.86 56 40.37 56 28 56 12.54 43.46 0 28 0z\"></path> </g> </svg>; const TelegramIcon = () => <svg width=\"24px\" height=\"24px\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" xmlSpace=\"preserve\" style={{ fillRule: \"evenodd\", clipRule: \"evenodd\", strokeLinejoin: \"round\", strokeMiterlimit: \"1.41421\"}}> <path id=\"telegram-1\" d=\"M18.384,22.779c0.322,0.228 0.737,0.285 1.107,0.145c0.37,-0.141 0.642,-0.457 0.724,-0.84c0.869,-4.084 2.977,-14.421 3.768,-18.136c0.06,-0.28 -0.04,-0.571 -0.26,-0.758c-0.22,-0.187 -0.525,-0.241 -0.797,-0.14c-4.193,1.552 -17.106,6.397 -22.384,8.35c-0.335,0.124 -0.553,0.446 -0.542,0.799c0.012,0.354 0.25,0.661 0.593,0.764c2.367,0.708 5.474,1.693 5.474,1.693c0,0 1.452,4.385 2.209,6.615c0.095,0.28 0.314,0.5 0.603,0.576c0.288,0.075 0.596,-0.004 0.811,-0.207c1.216,-1.148 3.096,-2.923 3.096,-2.923c0,0 3.572,2.619 5.598,4.062Zm-11.01,-8.677l1.679,5.538l0.373,-3.507c0,0 6.487,-5.851 10.185,-9.186c0.108,-0.098 0.123,-0.262 0.033,-0.377c-0.089,-0.115 -0.253,-0.142 -0.376,-0.064c-4.286,2.737 -11.894,7.596 -11.894,7.596Z\" /> </svg>; const Footer = () => { return <Container> <Logo> <img src=\"https://cdn.jsdelivr.net/gh/wpdas/alem/docs/assets/near-script-logo.png\" width={30} alt=\"logo\" /> <p>Al\u00e9m</p> </Logo> <Row> <Description> This library is still under development. <a href=\"https://near.org/near/widget/ProfilePage?accountId=wendersonpires.near\" target=\"_blank\"> wendersonpires.near </a> </Description> </Row> <Socials> <Item href=\"https://t.me/alemlib\" target=\"_blank\"> <TelegramIcon /> <p>Telegram</p> </Item> <Item href=\"https://github.com/wpdas/alem\" target=\"_blank\"> <GithubIcon /> <p>GitHub</p> </Item> </Socials> </Container>;}; const A_1 = styled.div\\` display: flex; flex-direction: column; gap: 16px; /* background: #fff; */ /* box-shadow: rgba(99, 99, 99, 0.2) 0px 2px 8px 0px; */ /* border-radius: 8px; */ min-width: 240px; padding: 40px 17px 30px; z-index: 1; bottom: 0; margin-bottom: 40px; height: fit-content; width: 100%; max-width: 1046px; margin-left: auto; margin-right: auto; h4, h3, h2, h1 { font-weight: 700; font-size: 22px; color: rgb(35, 39, 47); } h4 { font-size: 16px; } code { background-color: #eee; padding: 4px; border-radius: 4px; color: #292929; } /* Code Viewer */ pre { div { background-color: #fafafa !important; box-shadow: rgba(99, 99, 99, 0.2) 0px 2px 8px 0px; border-radius: 8px; margin: 8px !important; } span { mix-blend-mode: exclusion; filter: saturate(4) hue-rotate(250deg); font-size: 14px; font-family: \"Source Code Pro\", sans-serif, ui-sans-serif, system-ui, -apple-system; line-height: 24px; -webkit-font-smoothing: auto; opacity: 0.9; } .language-sh { color: #555 !important; } .language-bash { color: #555 !important; > span { color: #555 !important; mix-blend-mode: normal; } } } a { color: rgb(8 126 164) !important; } strong { opacity: 0.8; } p { font-size: 17px; font-weight: 500; color: rgb(35 39 47); } ul { padding-left: 1.2rem; } li { margin-bottom: 10px; font-size: 17px; font-weight: 500; margin-left: 0px !important; color: rgb(35 39 47); }\\`; const Title = styled.h3\\` font-weight: 700; font-size: 26px; color: #292929;\\`; const ShareButton = styled.button\\` padding: 0.5rem 1.4rem; border-radius: 30px; border: 1px solid #ccc; background-color: #fff; color: #292929; font-weight: 700; font-size: 16px; display: flex; align-items: center; :hover { background-color: rgb(252 252 252); } span { margin-right: 18px; width: 18px; }\\`; const TopSection = styled.div\\` display: flex; flex-direction: column; align-items: flex-end; position: absolute; align-self: flex-end;\\`; const Margin = styled.div\\`\\`; const RoutesDocs = () => { const mdContent = Buffer.from(\\`IyMgUm91dGVzCgpUaGVyZSBhcmUgdHdvIHR5cGVzIG9mIHJvdXRlIG1hbmFnZXJzIHByb3ZpZGVkIGJ5IEFsw6ltOiBgUm91dGVyYCBhbmQgYFNpbXBsZVJvdXRlcmAuCgojIyBSb3V0ZXIKClRoaXMgY29tcG9uZW50IGlzIHJlc3BvbnNpYmxlIGZvciBtYW5hZ2luZyB0aGUgY29udGVudCB0byBiZSBkaXNwbGF5ZWQgb24gdGhlIHNjcmVlbiBhY2NvcmRpbmcgdG8gdGhlIGFjdGl2ZSByb3V0ZS4gWW91IGNhbiB1c2UgdGhlIGBjcmVhdGVSb3V0ZWAgcmVzb3VyY2UgdG8gY3JlYXRlIGFwcGxpY2F0aW9uIHJvdXRlcyBhbmQgcGFzcyB0aGVtIHRvIHRoZSBSb3V0ZXIuCgpgYGB0c3gKaW1wb3J0IHsgUm91dGVyUHJvdmlkZXIsIFJvdXRlciwgY3JlYXRlUm91dGUgfSBmcm9tICJhbGVtIjsKCmltcG9ydCBIb21lUGFnZSBmcm9tICIuL0hvbWVQYWdlIjsKaW1wb3J0IFByb2ZpbGVQYWdlIGZyb20gIi4vUHJvZmlsZVBhZ2UiOwoKY29uc3QgQXBwUm91dGVzID0gKCkgPT4gewoKICAvLyBJdCBtdXN0IGJlIHBsYWNlZCBhYm92ZSBhbGwgcmVzb3VyY2VzIHRoYXQgd2lsbCB1c2UgdGhlIFJvdXRlciB0b29scy4KICBSb3V0ZXJQcm92aWRlcigpOwoKICAvLyBDcmVhdGluZyByb3V0ZXMKICBjb25zdCBIb21lUGFnZVJvdXRlID0gY3JlYXRlUm91dGUoImhvbWUiLCBIb21lUGFnZSk7CiAgY29uc3QgUHJvZmlsZVBhZ2VSb3V0ZSA9IGNyZWF0ZVJvdXRlKCJwcm9maWxlIiwgUHJvZmlsZVBhZ2UpOwoKICBjb25zdCByb3V0ZXMgPSBbCiAgICBIb21lUGFnZVJvdXRlLAogICAgUHJvZmlsZVBhZ2VSb3V0ZSwKICBdCgogIC8vIEluaXRpYWxpemluZyBSb3V0ZXMKICByZXR1cm4gKAogICAgPFJvdXRlcgogICAgICBwYXJhbWV0ZXJOYW1lPSJ0YWIiIHsvKiBPcHRpb25hbDogZGVmYXVsdCBpcyAicGF0aCIgKi99CiAgICAgIHR5cGU9IkNvbnRlbnRCYXNlZCIgey8qIE9wdGlvbmFsOiBkZWZhdWx0IGlzICJVUkxCYXNlZCIgKi99CiAgICAgIHJvdXRlcz17cm91dGVzfQogICAgLz4KICApOwp9OwoKZXhwb3J0IGRlZmF1bHQgQXBwUm91dGVzOwpgYGAKCiMjIFR5cGVzIG9mIEJlaGF2aW9yCgpgUm91dGVyYCBjYW4gaGFuZGxlIGxpbmtzIGluIHR3byB3YXlzOgoKLSAqKlVSTEJhc2VkOioqIFRoaXMgaXMgdGhlIGRlZmF1bHQgYmVoYXZpb3IuIEV2ZXJ5IGxpbmsgd2lsbCByZWxvYWQgdGhlIHBhZ2UgYnkgY2hhbmdpbmcgdGhlIFVSTCBzdHJ1Y3R1cmUgaW4gdGhlIGJyb3dzZXI7Ci0gKipDb250ZW50QmFzZWQ6KiogVGhpcyBiZWhhdmlvciBkb2VzIG5vdCBjaGFuZ2UgdGhlIFVSTCBpbiB0aGUgYnJvd3NlciBhbmQgZG9lcyBub3QgcmVsb2FkIHRoZSBwYWdlLiBUaGVyZWZvcmUsIGl0IGlzIGZhc3RlciB0byBkaXNwbGF5IGNvbnRlbnQgb24gdGhlIHNjcmVlbi4KCllvdSBjYW4gcGFzcyB0aGUgdHlwZSBvZiBiZWhhdmlvciB1c2luZyB0aGUgYHR5cGVgIHByb3BlcnR5IG9mIFJvdXRlcy4KCmBgYHRzeAovKiBVUkwgQmFzZWQgKi8KPFJvdXRlcgogIHJvdXRlcz17W0ZlYXR1cmVPdmVydmlld1JvdXRlLCBTdGF0ZU1hbmFnZW1lbnRSb3V0ZV19CiAgdHlwZT0iVVJMQmFzZWQiCi8+CgovKiBDb250ZW50IEJhc2VkICovCjxSb3V0ZXIKICByb3V0ZXM9e1tGZWF0dXJlT3ZlcnZpZXdSb3V0ZSwgU3RhdGVNYW5hZ2VtZW50Um91dGVdfQogIHR5cGU9IkNvbnRlbnRCYXNlZCIKLz4KYGBgCgojIyBTaW1wbGVSb3V0ZXIKClRoaXMgcm91dGVyIHVzZXMgdGhlIFVSTCB0byBkZXRlcm1pbmUgd2hpY2ggY29udGVudCB0byBkaXNwbGF5IG9uIHRoZSBzY3JlZW4uIEl0IHdvcmtzIHNpbWlsYXJseSB0byB0aGUgYFVSTEJhc2VkYCBhcHByb2FjaCBvZiB0aGUgYFJvdXRlcmAuCgpgYGB0c3gKaW1wb3J0IHsgU2ltcGxlUm91dGVyLCBjcmVhdGVSb3V0ZSB9IGZyb20gImFsZW0iOwoKaW1wb3J0IEhvbWVQYWdlIGZyb20gIi4vSG9tZVBhZ2UiOwppbXBvcnQgUHJvZmlsZVBhZ2UgZnJvbSAiLi9Qcm9maWxlUGFnZSI7Cgpjb25zdCBBcHBSb3V0ZXMgPSAoKSA9PiB7CiAgLy8gQ3JlYXRpbmcgcm91dGVzCiAgY29uc3QgSG9tZVBhZ2VSb3V0ZSA9IGNyZWF0ZVJvdXRlKCJob21lIiwgSG9tZVBhZ2UpOwogIGNvbnN0IFByb2ZpbGVQYWdlUm91dGUgPSBjcmVhdGVSb3V0ZSgicHJvZmlsZSIsIFByb2ZpbGVQYWdlKTsKICBjb25zdCByb3V0ZXMgPSBbSG9tZVBhZ2VSb3V0ZSwgUHJvZmlsZVBhZ2VSb3V0ZV07CgogIC8vIHBhcmFtZXRlck5hbWUgPT4gT3B0aW9uYWw6IGRlZmF1bHQgaXMgInBhdGgiCiAgcmV0dXJuIDxTaW1wbGVSb3V0ZXIgcm91dGVzPXtyb3V0ZXN9IHBhcmFtZXRlck5hbWU9InRhYiIgLz47Cn07CgpleHBvcnQgZGVmYXVsdCBBcHBSb3V0ZXM7CmBgYAoKVXNpbmcgYFNpbXBsZVJvdXRlcmAsIHlvdSBjYW4gdXNlIGFueSBhbmNob3IgZWxlbWVudCBgPGE+PC9hPmAgdG8gbmF2aWdhdGUgdG8gYW5vdGhlciBwYWdlLCBmb3IgZXhhbXBsZToKCmBgYHRzeAo8YSBocmVmPSJ0YWI9cHJvZmlsZSI+R28gVG8gUHJvZmlsZTwvcD4KYGBgCg==\\`, \"base64\").toString(\"utf-8\"); return <Markdown text={mdContent} />;}; const CreateDebounce = () => { const mdContent = Buffer.from(\\`IyMgQ3JlYXRlIERlYm91bmNlCgpDcmVhdGUgYSBkZWJvdW5jZWQgbWV0aG9kIHRvIG9idGFpbiB0aGUgZGF0YSBhZnRlciB0aGUgZGVzaXJlZCBpbnRlcnZhbC4KCmBgYHRzeAppbXBvcnQgeyBjcmVhdGVEZWJvdW5jZSB9IGZyb20gImFsZW0iOwoKY29uc3QgTXlDb21wb25lbnQgPSAoKSA9PiB7CiAgY29uc3QgW3dvcmRzLCBzZXRXb3Jkc10gPSB1c2VTdGF0ZSgiIik7CiAgY29uc3Qgb25JbnB1dENoYW5nZSA9IGNyZWF0ZURlYm91bmNlKChldmVudCkgPT4gc2V0V29yZHMoZXZlbnQudGFyZ2V0LnZhbHVlKSwgMTAwMCk7CgogIC8vIFRoaXMgd2lsbCBiZSBjaGFuZ2VkIDEgc2VjIGFmdGVyIHRoZSB1c2VyIHN0b3BzIHR5cGluZy4KICBjb25zb2xlLmxvZyh3b3Jkcyk7CiAgcmV0dXJuIDxpbnB1dCBvbkNoYW5nZT17b25JbnB1dENoYW5nZX0gdHlwZT0idGV4dCIgLz47Cn07CmBgYAoKVGhpcyBmZWF0dXJlIGlzIGFsc28gYXZhaWxhYmxlIHNlcGFyYXRlbHkgaGVyZTogKipbY3JlYXRlRGVib3VuY2VdKGh0dHBzOi8vbmVhci5vcmcvbmVhci93aWRnZXQvQ29tcG9uZW50RGV0YWlsc1BhZ2U/c3JjPWFsZW0tbGliLm5lYXIvd2lkZ2V0L2NyZWF0ZURlYm91bmNlKSoqIGFuZCBjYW4gYmUgaW5qZWN0ZWQgbGlrZSB0aGlzOgoKYGBganN4Ci8vIFNvbWVXaWRnZXQKY29uc3QgeyBjcmVhdGVEZWJvdW5jZSB9ID0gVk0ucmVxdWlyZSgiYWxlbS1saWIubmVhci93aWRnZXQvY3JlYXRlRGVib3VuY2UiKTsKaWYgKCFjcmVhdGVEZWJvdW5jZSkgcmV0dXJuICIiOwoKY29uc3QgW3dvcmRzLCBzZXRXb3Jkc10gPSB1c2VTdGF0ZSgiIik7CmNvbnN0IG9uSW5wdXRDaGFuZ2UgPSBjcmVhdGVEZWJvdW5jZSgoZXZlbnQpID0+IHNldFdvcmRzKGV2ZW50LnRhcmdldC52YWx1ZSksIDEwMDApOwoKLy8gVGhpcyB3aWxsIGJlIGNoYW5nZWQgMSBzZWMgYWZ0ZXIgdGhlIHVzZXIgc3RvcHMgdHlwaW5nLgpjb25zb2xlLmxvZyh3b3Jkcyk7CgpyZXR1cm4gPGlucHV0IG9uQ2hhbmdlPXtvbklucHV0Q2hhbmdlfSB0eXBlPSJ0ZXh0IiAvPjsKYGBgCg==\\`, \"base64\").toString(\"utf-8\"); return <Markdown text={mdContent} />;}; const BosOverview = () => { const mdContent = Buffer.from(\\`IyMgTkVBUiBBUElzIGFuZCBDb21wb25lbnRzCgpUaGUgbmF0aXZlIE5FQVIgVk0gKEJPUykgcmVzb3VyY2VzIGNvbnRpbnVlIHRvIGZ1bmN0aW9uLgoKR2V0IHRvIGtub3cgbW9yZSBhYm91dCB0aGUgQk9TIGJ1aWx0IGluIHJlc291cmNlcyBoZXJlOiBbaHR0cHM6Ly9kb2NzLm5lYXIub3JnL2Jvcy9hcGkvc3RhdGVdKGh0dHBzOi8vZG9jcy5uZWFyLm9yZy9ib3MvYXBpL3N0YXRlKQoKYGBgdHN4Ci8vIE5PVEU6IFRoZXNlIGFyZSBqdXN0IHRoZSBCT1MgZmVhdHVyZSByZWZlcmVuY2VzIHR5cGVzCmltcG9ydCB7CiAgRmlsZXMsCiAgSW5maW5pdGVTY3JvbGwsCiAgSXBmc0ltYWdlVXBsb2FkLAogIE1hcmtkb3duLAogIE5lYXIsCiAgT3ZlcmxheVRyaWdnZXIsCiAgU29jaWFsLAogIFN0YXRlLAogIFN0b3JhZ2UsCiAgVG9vbHRpcCwKICBUeXBlQWhlYWQsCiAgVk0sCiAgV2lkZ2V0LAogIGFzeW5jRmV0Y2gsCiAgY2xpcGJvYXJkLAogIGNvbnRleHQsCiAgZmV0Y2gsCiAgcHJvcHMsCiAgc3RhdGUsCiAgdXNlQ2FjaGUsCiAgdXNlRWZmZWN0LAogIHVzZVN0YXRlLAogIHVzZU1lbW8sCiAgQmlnLAp9IGZyb20gImFsZW0iOwoKZXhwb3J0IGNvbnN0IENvbXBvbmVudEMgPSAoKSA9PiB7CiAgY29uc29sZS5sb2cocHJvcHMpOyAvLyB3aWxsIHByaW50IHRoZSB3aWRnZXQgcHJvcHMKCiAgcmV0dXJuIDxDb21wb25lbnRBIG5hbWU9IldlbmR6IiAvPjsKfTsKYGBgCg==\\`, \"base64\").toString(\"utf-8\"); return <Markdown text={mdContent} />;}; const IsDevelopment = () => { const mdContent = Buffer.from(\\`IyMgaXNEZXZlbG9wbWVudAoKVXNlZnVsIGZlYXR1cmUgdG8ga25vdyBpZiB0aGUgZW52aXJvbm1lbnQgaXMgZGV2ZWxvcG1lbnQgb3IgcHJvZHVjdGlvbi4KCmBgYHRzeAppbXBvcnQgeyBpc0RldmVsb3BtZW50IH0gZnJvbSAiYWxlbSI7Cgpjb25zdCBhbnN3ZXIgPSBpc0RldmVsb3BtZW50ID8gIlllcCIgOiAiTm9wZSI7CmBgYAo=\\`, \"base64\").toString(\"utf-8\"); return <Markdown text={mdContent} />;}; const Promisify = () => { const mdContent = Buffer.from(\\`IyBQcm9taXNpZnkKClByb21pc2lmeSBpcyB1c2VkIHRvIGNoZWNrIGlmIGEgcGllY2Ugb2YgZGF0YSBpcyBwcmVzZW50IHVudGlsIGEgc3BlY2lmaWMgY2hlY2sgdGltZSBpcyByZWFjaGVkLiBCYXNpY2FsbHkgaXQgY2FsbCByZXNvbHZlIG9yIHJlamVjdCBmb3IgYSBnaXZlbiBjYWxsZXIuCgpgYGB0cwppbXBvcnQgeyBwcm9taXNpZnkgfSBmcm9tICJhbGVtIjsKCmNvbnN0IGdldFN0b3JhZ2UgPSAoKSA9PiBTdG9yYWdlLmdldCgibXkta2V5Iik7CmNvbnN0IHJlc29sdmUgPSAoc3RvcmFnZURhdGEpID0+IGNvbnNvbGUubG9nKHN0b3JhZ2VEYXRhKTsKY29uc3QgcmVqZWN0ID0gKCkgPT4gY29uc29sZS5sb2coIkVycm9yIik7CmNvbnN0IHRpbWVvdXQgPSA1MDAwOyAvLyA1c2VjCgpwcm9taXNpZnkoZ2V0U3RvcmFnZSwgcmVzb2x2ZSwgcmVqZWN0LCB0aW1lb3V0KTsKYGBgCg==\\`, \"base64\").toString(\"utf-8\"); return <Markdown text={mdContent} />;}; const LoadExternalStyles = () => { const mdContent = Buffer.from(\\`IyMgTG9hZCBFeHRlcm5hbCBTdHlsZXMgLSBGb250cyAmIENTUwoKVXNlIHRoaXMgZmVhdHVyZSB0byBsb2FkIGV4dGVybmFsIGZvbnRzIGFuZCBjc3MgZmlsZXMgaW50byB5b3VyIGFwcGxpY2F0aW9uLiAoQWxlbSBzdXBwb3J0cyBsb2NhbCAuY3NzIGZpbGVzIHRvbywgc28geW91IGNhbiBqdXN0IGNyZWF0ZSB0aGVtIGZyb20gdGhlIHByb2plY3QncyByb290IGZvbGRlci4pCgpgbG9hZEV4dGVybmFsU3R5bGVzYCByZXR1cm5zIGEgYGJvb2xlYW5gIGluZm9ybWluZyB3aGV0aGVyIGFsbCBjc3MgZmlsZXMgaGF2ZSBhbHJlYWR5IGJlZW4gbG9hZGVkLgoKWW91IGNhbiB1c2UgYW55IGZvbnRzIGxpa2UgR29vZ2xlIEZvbnRzIG9yIENETiBGb250cy4KCllvdSBtdXN0IHNwZWNpZnkgYGZvbnQtZmFtaWx5YCBpbiB0aGUgYXBwbGljYXRpb24ncyBzdHlsZXMuCgpgYGB0c3gKaW1wb3J0IHsgbG9hZEV4dGVybmFsU3R5bGVzIH0gZnJvbSAiYWxlbSI7Cgpjb25zdCBBcHAgPSAoKSA9PiB7CiAgY29uc3Qgc3R5bGVzTG9hZGVkID0gbG9hZEV4dGVybmFsU3R5bGVzKFsKICAgICJodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2NzczI/ZmFtaWx5PU9wZW4rU2FuczppdGFsLHdnaHRAMCwzMDAuLjgwMDsxLDMwMC4uODAwJmRpc3BsYXk9c3dhcCIsCiAgICAiaHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL2NvZGVtaXJyb3IvY29kZW1pcnJvcjUvbGliL2NvZGVtaXJyb3IuY3NzIiwKICBdKTsKCiAgaWYgKCFzdHlsZXNMb2FkZWQpIHsKICAgIHJldHVybiA8cD5Mb2FkaW5nLi4uPC9wPjsKICB9CgogIHJldHVybiA8cD5NeSBOaWNlIENvbnRlbnQ8L3A+Owp9OwoKZXhwb3J0IGRlZmF1bHQgQXBwOwpgYGAK\\`, \"base64\").toString(\"utf-8\"); return <Markdown text={mdContent} />;}; const CreateContext = () => { const mdContent = Buffer.from(\\`IyMgQ3JlYXRlIENvbnRleHQKClNpbWlsYXIgdG8gUmVhY3QncyBDb250ZXh0IEFQSSwgQWzDqW0gYWxzbyBwcm92aWRlcyBhIHdheSB0byBjcmVhdGUgY29udGV4dHMuIENvbnRleHRzIGFyZSB2ZXJ5IGhlbHBmdWwgd2hlbiB5b3Ugd2FudCB0byBjcmVhdGUgYSBzcGVjaWZpYyBkYXRhIHN0cnVjdHVyZSBhbmQgcGFzcyBpdCB0byBjaGlsZCBjb21wb25lbnRzLgoKQnkgbmF0dXJlLCBpdCBpcyBub3QgcG9zc2libGUgdG8gbWFuaXB1bGF0ZSBwcm92aWRlciBvYmplY3RzIGF0IHRoZSBzYW1lIGxheWVyIGluIHdoaWNoIHRoZXkgYXJlIHVzZWQsIHNpbWlsYXIgdG8gUmVhY3QuCgoqKlNpbXBsZSBFeGFtcGxlOioqCgpgYGB0c3gKLy8gVXNlclByb3ZpZGVyLnRzeAoKaW1wb3J0IHsgY3JlYXRlQ29udGV4dCB9IGZyb20gImFsZW0iOwoKLy8gSW50ZXJmYWNlCmludGVyZmFjZSBVc2VyQ29udGV4dFByb3BzIHsKICBpc0F1dGhlbnRpY2F0ZWQ6IGJvb2xlYW47CiAgbmFtZTogc3RyaW5nOwp9Cgpjb25zdCBVc2VyUHJvdmlkZXIgPSAoKSA9PiB7CiAgLy8gQ3JlYXRlIGEgcHJvdmlkZXIgdXNpbmcgYSByZWZlcmVuY2Uga2V5CiAgLy8gc2V0RGVmYXVsdERhdGE6IHVzZWQgdG8gc2V0IGluaXRpYWwgZGF0YQogIC8vIHVwZGF0ZURhdGE6IHVzZWQgdG8gdXBkYXRlIGRhdGEKICBjb25zdCB7IHNldERlZmF1bHREYXRhLCB1cGRhdGVEYXRhIH0gPSBjcmVhdGVDb250ZXh0PFVzZXJDb250ZXh0UHJvcHM+KCJ1c2VyLXByb3ZpZGVyIik7CgogIC8vIEluaXRpYWwgLyBkZWZhdWx0IGRhdGEKICBzZXREZWZhdWx0RGF0YSh7CiAgICBpc0F1dGhlbnRpY2F0ZWQ6ICEhY29udGV4dC5hY2NvdW50SWQsCiAgICBhY2NvdW50SWQ6IGNvbnRleHQuYWNjb3VudElkLAogIH0pOwp9OwpgYGAKClVzaW5nIGNvbnRleHQgd2l0aCBgdXNlQ29udGV4dGA6CgpgYGB0c3gKaW1wb3J0IFVzZXJQcm92aWRlciBmcm9tICIuL2NvbnRleHRzL1VzZXJQcm92aWRlciI7Cgpjb25zdCBBcHAgPSAoKSA9PiB7CiAgVXNlclByb3ZpZGVyKCk7CgogIHJldHVybiA8Q2hpbGRDb21wb25lbnQgLz47Cn07CmBgYAoKYGBgdHN4CmltcG9ydCB7IHVzZUNvbnRleHQgfSBmcm9tICJhbGVtIjsKCmludGVyZmFjZSBVc2VyQ29udGV4dFByb3BzIHsKICBpc0F1dGhlbnRpY2F0ZWQ6IGJvb2xlYW47CiAgbmFtZTogc3RyaW5nOwp9Cgpjb25zdCBDaGlsZENvbXBvbmVudCA9ICgpID0+IHsKICBjb25zdCB1c2VyID0gdXNlQ29udGV4dDxQcm9qZWN0c0NvbnRleHRQcm9wcz4oInVzZXItY29udGV4dCIpOwoKICBjb25zb2xlLmxvZyh1c2VyKTsKICAvLyB7IGlzQXV0aGVudGljYXRlZDogdHJ1ZSwgYWNjb3VudElkOiAid2VuZGVyc29ucGlyZXMubmVhciIgfQoKICByZXR1cm4gIiI7Cn07CmBgYAoKKipIYW5kbGluZyBhc3luYyBkYXRhOioqCgpgYGB0c3gKLy8gQ2FydFByb3ZpZGVyLnRzeAoKaW1wb3J0IHsgY3JlYXRlQ29udGV4dCwgdXNlQ29udGV4dCwgYXN5bmNGZXRjaCB9IGZyb20gImFsZW0iOwoKLy8gSW50ZXJmYWNlCmludGVyZmFjZSBDYXJ0Q29udGV4dFByb3BzIHsKICBpdGVtczogc3RyaW5nW107CiAgcmVhZHk6IGJvb2xlYW47CgogIC8vIGFjdGlvbnMKICBmZXRjaENhcnRJdGVtczogKCkgPT4gdm9pZDsKfQoKY29uc3QgQ2FydFByb3ZpZGVyID0gKCkgPT4gewogIGNvbnN0IHsgc2V0RGVmYXVsdERhdGEsIHVwZGF0ZURhdGEgfSA9IGNyZWF0ZUNvbnRleHQ8Q2FydENvbnRleHRQcm9wcz4oImNhcnQtcHJvdmlkZXIiKTsKCiAgLy8gSW5pdGlhbCAvIGRlZmF1bHQgZGF0YQogIHNldERlZmF1bHREYXRhKHsKICAgIGl0ZW1zOiBbXSwKICAgIHJlYWR5OiBmYWxzZSwKCiAgICBmZXRjaENhcnRJdGVtczogKCkgPT4gewogICAgICBjb25zdCBzZWxmID0gdXNlQ29udGV4dDxDYXJ0Q29udGV4dFByb3BzPigiY2FydC1jb250ZXh0Iik7CgogICAgICBpZiAoIXNlbGYucmVhZHkpIHsKICAgICAgICBhc3luY0ZldGNoKCJodHRwczovL2FwaS5jb20vY2FydC9pdGVtcyIpLnRoZW4oKHJlc3BvbnNlKSA9PiB7CiAgICAgICAgICAvLyBVcGRhdGUgaXRlbXMKICAgICAgICAgIHVwZGF0ZURhdGEoewogICAgICAgICAgICBpdGVtczogcmVzcG9uc2UuYm9keSwKICAgICAgICAgICAgcmVhZHk6IHRydWUsCiAgICAgICAgICB9KTsKICAgICAgICB9KTsKICAgICAgfQogICAgfSwKICB9KTsKCiAgLy8gKE9wdGlvbmFsKTogQXV0byBmZXRjaCBjYXJ0IGl0ZW1zCiAgY29uc3Qgc2VsZiA9IHVzZUNvbnRleHQ8Q2FydENvbnRleHRQcm9wcz4oImNhcnQtY29udGV4dCIpOwogIGlmICghc2VsZi5yZWFkeSkgewogICAgc2VsZi5mZXRjaENhcnRJdGVtcygpOwogIH0KfTsKYGBgCgpUaGVuIHlvdSBjYW4gdXNlIHRoZSBkYXRhOgoKYGBgdHN4CmltcG9ydCBDYXJ0UHJvdmlkZXIgZnJvbSAiLi9jb250ZXh0cy9DYXJ0UHJvdmlkZXIiOwoKY29uc3QgQXBwID0gKCkgPT4gewogIENhcnRQcm92aWRlcigpOwoKICByZXR1cm4gPENoaWxkQ29tcG9uZW50IC8+Owp9OwpgYGAKCmBgYHRzeAppbXBvcnQgeyB1c2VDb250ZXh0LCB1c2VFZmZlY3QgfSBmcm9tICJhbGVtIjsKCmludGVyZmFjZSBDYXJ0Q29udGV4dFByb3BzIHsKICBpdGVtczogc3RyaW5nW107CiAgcmVhZHk6IGJvb2xlYW47CiAgZmV0Y2hDYXJ0SXRlbXM6ICgpID0+IHZvaWQ7Cn0KCmNvbnN0IENoaWxkQ29tcG9uZW50ID0gKCkgPT4gewogIGNvbnN0IGNhcnQgPSB1c2VDb250ZXh0PENhcnRDb250ZXh0UHJvcHM+KCJjYXJ0LWNvbnRleHQiKTsKCiAgdXNlRWZmZWN0KCgpID0+IHsKICAgIC8vIEZldGNoIGNhcnQgaXRlbXMgKGluIGNhc2UgeW91IGFyZSBub3QgdXNpbmcgdGhlIGF1dG8gZmV0Y2gpCiAgICBjYXJ0LmZldGNoQ2FydEl0ZW1zKCk7CiAgfSwgW10pOwoKICBjb25zb2xlLmxvZyhjYXJ0Lml0ZW1zKTsKICAvLyBbaXRlbTEsIGl0ZW0yLCBpdGVtMywgLi4uXQoKICByZXR1cm4gIiI7Cn07CmBgYAo=\\`, \"base64\").toString(\"utf-8\"); return <Markdown text={mdContent} />;}; const UseParams = () => { const mdContent = Buffer.from(\\`IyMgVXNlIFBhcmFtcwoKVGhpcyBob29rIHJldHVybnMgYWxsIHBhcmFtZXRlcnMgcHJvdmlkZWQgYnkgdGhlIFVSTC4KCmBgYHRzCi8vIGh0dHA6Ly8xMjcuMC4wLjE6ODA4MC9hbGVtLWxpYi5uZWFyL3dpZGdldC9JbmRleD9wcm9qZWN0SWQ9MTIzCmltcG9ydCB7IHVzZVBhcmFtcyB9IGZyb20gImFsZW0iOwoKZXhwb3J0IGNvbnN0IFNvbWVDb21wb25lbnQgPSAoKSA9PiB7CiAgY29uc3QgcGFyYW1zID0gdXNlUGFyYW1zKCk7CiAgY29uc29sZS5sb2cocGFyYW1zKTsgLy8geyBwcm9qZWN0SWQ6ICIxMjMiIH0KCiAgcmV0dXJuICIiOwp9OwpgYGAK\\`, \"base64\").toString(\"utf-8\"); return <Markdown text={mdContent} />;}; const GetLocation = () => { const mdContent = Buffer.from(\\`IyMgR2V0IExvY2F0aW9uCgpUaGlzIGhvb2sgcmV0dXJucyB0aGUgY3VycmVudCBsb2NhdGlvbiBvYmplY3QuIEl0IGNhbiBiZSB1c2VmdWwgaWYgeW91J2QgbGlrZSB0byBwZXJmb3JtIHNvbWUgc2lkZSBlZmZlY3Qgd2hlbmV2ZXIgdGhlIGN1cnJlbnQgbG9jYXRpb24gY2hhbmdlcy4KClVzZSBgZ2V0TG9jYXRpb24oKS5pc1JvdXRlc1JlYWR5YCB0byBnZXQgdG8ga25vdyB3aGVuIHRoZSByb3V0ZXMgYXJlIHJlYWR5IHRvIGJlIGFjY2Vzc2VkLgoKSXQgc2hvdWxkIGJlIHVzZWQgd2l0aCBgUm91dGVyYC4KCmBgYHRzCi8vIGh0dHA6Ly8xMjcuMC4wLjE6ODA4MC9hbGVtLWxpYi5uZWFyL3dpZGdldC9JbmRleD9wYXRoPXByb2ZpbGUKaW1wb3J0IHsgZ2V0TG9jYXRpb24gfSBmcm9tICJhbGVtIjsKCmV4cG9ydCBjb25zdCBTb21lQ29tcG9uZW50ID0gKCkgPT4gewogIGNvbnN0IGxvY2F0aW9uID0gZ2V0TG9jYXRpb24oKTsKICBjb25zb2xlLmxvZyhsb2NhdGlvbik7CiAgLy8geyBpc1JvdXRlc1JlYWR5OiB0cnVlLCBwYXRobmFtZTogInByb2ZpbGUiLCByb3V0ZXM6IFsiaG9tZSIsICJwcm9maWxlIl0gfQoKICByZXR1cm4gIiI7Cn07CmBgYAo=\\`, \"base64\").toString(\"utf-8\"); return <Markdown text={mdContent} />;}; const Navigate = () => { const mdContent = Buffer.from(\\`IyMgTmF2aWdhdGUKClRoaXMgZmVhdHVyZSBtYWtlcyBpdCBwb3NzaWJsZSB0byBwcm9ncmFtbWF0aWNhbGx5IG5hdmlnYXRlIHRvIGF2YWlsYWJsZSByb3V0ZXMuIFRoZSBVUkwgd2lsbCBub3QgYmUgYWZmZWN0ZWQhCgpJdCBzaG91bGQgYmUgdXNlZCB3aXRoIGBSb3V0ZXJgLgoKYGBgdHN4CmltcG9ydCB7IG5hdmlnYXRlIH0gZnJvbSAiYWxlbSI7CgpleHBvcnQgY29uc3QgU29tZUNvbXBvbmVudCA9ICgpID0+IHsKICBjb25zdCBvbkNsaWNrSGFuZGxlciA9ICgpID0+IHsKICAgIG5hdmlnYXRlKCJwcm9maWxlIik7CiAgfTsKCiAgcmV0dXJuIDxidXR0b24gb25DbGljaz17b25DbGlja0hhbmRsZXJ9PkdvIHRvIFByb2ZpbGU8L2J1dHRvbj47Cn07CmBgYAo=\\`, \"base64\").toString(\"utf-8\"); return <Markdown text={mdContent} />;}; const RouteLinkDocs = () => { const mdContent = Buffer.from(\\`IyMgUm91dGUgTGluawoKVGhpcyBjb21wb25lbnQgY3JlYXRlcyBhIGA8YSAvPmAgZWxlbWVudCBhbmQgaXMgdXNlZCB0byBhbGxvdyB1c2VycyB0byBuYXZpZ2F0ZSBiZXR3ZWVuIHJvdXRlcy4gWW91IG11c3QgaW5mb3JtIHRoZSBkZXN0aW5hdGlvbiBwYXRoIHVzaW5nIHRoZSBgdG9gIHByb3BlcnR5LiBJdCBhbHNvIHN1cHBvcnQgYGNsYXNzTmFtZWAsIGBzdHlsZWAgYW5kIGBvbkNsaWNrYCBwcm9wZXJ0aWVzLgoKSXQgc2hvdWxkIGJlIHVzZWQgd2l0aCBgUm91dGVyYC4KCmBgYHRzeAppbXBvcnQgeyBSb3V0ZUxpbmsgfSBmcm9tICJhbGVtIjsKCmV4cG9ydCBjb25zdCBTb21lQ29tcG9uZW50ID0gKCkgPT4gewogIHJldHVybiAoCiAgICA8Um91dGVMaW5rIHRvPSJwcm9maWxlIj4KICAgICAgPHA+R28gdG8gUHJvZmlsZTwvcD4KICAgIDwvUm91dGVMaW5rPgogICk7Cn07CmBgYAo=\\`, \"base64\").toString(\"utf-8\"); return <Markdown text={mdContent} />;}; const UseRoutes = () => { const mdContent = Buffer.from(\\`IyMgVXNlIFJvdXRlcwoKSG9vayB1c2VkIHRvIHJldHVybiB0aGUgY3VycmVudCBkYXRhIHV0aWxpemVkIGJ5IHRoZSBgUm91dGVyYCBjb21wb25lbnQuCgpgYGB0cwppbXBvcnQgeyB1c2VSb3V0ZXMgfSBmcm9tICJhbGVtIjsKCmV4cG9ydCBjb25zdCBTb21lQ29tcG9uZW50ID0gKCkgPT4gewogIGNvbnN0IHJvdXRlc1Byb3BzID0gdXNlUm91dGVzKCk7CiAgY29uc29sZS5sb2cocm91dGVzUHJvcHMpOwogIC8vIHsgcm91dGVzSW5pdGlhbGl6ZWQ6IHRydWUsIGFjdGl2ZVJvdXRlOiAnaG9tZScsIHJvdXRlUGFyYW1ldGVyTmFtZTogJ3BhdGgnLCByb3V0ZXM6IFsnaG9tZScsICdwcm9maWxlJ10sIHJvdXRlVHlwZTogJ0NvbnRlbnRCYXNlZCcgfQoKICByZXR1cm4gIiI7Cn07CmBgYAo=\\`, \"base64\").toString(\"utf-8\"); return <Markdown text={mdContent} />;}; const DeployingWithGithubActions = () => { const mdContent = Buffer.from(\\`IyMgRGVwbG95aW5nIEFwcCBXaXRoIEdpdEh1YiBBY3Rpb25zCgpUbyBkZXBsb3kgd2lkZ2V0cyBvbiBwdXNoIHRvIGJyYW5jaCwgY3JlYXRlIGEgR2l0SHViIEFjdGlvbnMgd29ya2Zsb3cgZmlsZSBpbiB5b3VyIHJlcG9zaXRvcnkuCgoqKk1haW5uZXQ6KioKCkZvciBtYWlubmV0IHlvdSBjYW4gZG8gbGlrZSBzbzogYC5naXRodWIvd29ya2Zsb3dzL2RlcGxveS1tYWlubmV0LnltbGAsIGFuZCBjb25maWd1cmUgaXQgYXMgZm9sbG93czoKCmBgYHlhbWwKbmFtZTogRGVwbG95IERBcHAgdG8gTWFpbm5ldAoKb246CiAgcHVzaDoKICAgIGJyYW5jaGVzOiBbbWFpbl0gIyBicmFuY2ggZm9yIHRyaWdnZXIKCmpvYnM6CiAgZGVwbG95LW1haW5uZXQ6CiAgICB1c2VzOiB3cGRhcy9hbGVtLy5naXRodWIvd29ya2Zsb3dzL2RlcGxveS55bWxAbWFpbgogICAgd2l0aDoKICAgICAgc2lnbmVyLWFjY291bnQtYWRkcmVzczogPFNJR05FUl9BQ0NPVU5UX0lEPiAjIGFjY291bnQgdG8gc2lnbiB3aXRoIChzaG91bGQgbWF0Y2ggYm9zLmNvbmZpZy5qc29uID4gYWNjb3VudCkKICAgICAgc2lnbmVyLXB1YmxpYy1rZXk6IDxTSUdORVJfUFVCTElDX0tFWT4KICAgIHNlY3JldHM6CiAgICAgIFNJR05FUl9QUklWQVRFX0tFWTogJHt7IHNlY3JldHMuU0lHTkVSX1BSSVZBVEVfS0VZIH19ICMgbXVzdCBiZSBpbnNpZGUgdGhlIGdpdGh1YiByZXBvIHNlY3JldHMKYGBgCgoqKlRlc3RuZXQ6KioKCkZvciB0ZXN0bmV0IHlvdSBjYW4gZG8gbGlrZSBzbzogYC5naXRodWIvd29ya2Zsb3dzL2RlcGxveS10ZXN0bmV0LnltbGAsIGFuZCBjb25maWd1cmUgaXQgYXMgZm9sbG93czoKCmBgYHlhbWwKbmFtZTogRGVwbG95IERBcHAgdG8gVGVzdG5ldAoKb246CiAgcHVzaDoKICAgIGJyYW5jaGVzOiBbc3RhZ2luZ10gIyBicmFuY2ggZm9yIHRyaWdnZXIKCmpvYnM6CiAgZGVwbG95LW1haW5uZXQ6CiAgICB1c2VzOiB3cGRhcy9hbGVtLy5naXRodWIvd29ya2Zsb3dzL2RlcGxveS10ZXN0bmV0LnltbEBtYWluCiAgICB3aXRoOgogICAgICBzaWduZXItYWNjb3VudC1hZGRyZXNzOiA8U0lHTkVSX0FDQ09VTlRfSUQ+ICMgYWNjb3VudCB0byBzaWduIHdpdGggKHNob3VsZCBtYXRjaCBib3MuY29uZmlnLmpzb24gPiBhY2NvdW50KQogICAgICBzaWduZXItcHVibGljLWtleTogPFNJR05FUl9QVUJMSUNfS0VZPgogICAgc2VjcmV0czoKICAgICAgU0lHTkVSX1BSSVZBVEVfS0VZOiAke3sgc2VjcmV0cy5URVNUTkVUX1NJR05FUl9QUklWQVRFX0tFWSB9fSAjIG11c3QgYmUgaW5zaWRlIHRoZSBnaXRodWIgcmVwbyBzZWNyZXRzCmBgYAoKQWRqdXN0IHRoZSB3b3JrZmxvdyBhcyBuZWVkZWQsIHRoZW4gY29uZmlndXJlIHlvdXIgdmFyaWFibGVzICsgc2VjcmV0cyBvbiBHaXRIdWIgU2V0dGluZ3MgLT4gQWN0aW9ucyAtPiBzZWNyZXRzICYgdmFyaWFibGVzLiBVc2UgW25lYXItY2xpLXJzXShodHRwczovL2dpdGh1Yi5jb20vbmVhci9uZWFyLWNsaS1ycykgZm9yIGdlbmVyYXRpbmcga2V5cGFpcnMuIFlvdSBjYW4gYWxzbyBsb2dpbiB1c2luZyBOZWFyIENMSSBhbmQgY2hlY2sgdGhlIGtleXBhaXJzIGxvY2FsbHkuCgojIyMgV29ya2Zsb3cgSW5wdXRzCgpUaGUgd29ya2Zsb3cgYWNjZXB0cyB0aGUgZm9sbG93aW5nIGlucHV0czoKCi0gYGNsaS12ZXJzaW9uYCAob3B0aW9uYWwpOiBWZXJzaW9uIG9mIEJPUyBDTEkgdG8gdXNlIGZvciBkZXBsb3ltZW50IChlLmcuLCAwLjMuMCkuIERlZmF1bHQ6ICIwLjMuNiIKCi0gYGRlcGxveS1lbnZgIChvcHRpb25hbCk6IEVudmlyb25tZW50IHRvIGRlcGxveSBjb21wb25lbnQgY29kZSB0byAoZS5nLiwgbWFpbm5ldCwgdGVzdG5ldCkuIERlZmF1bHQ6ICJtYWlubmV0IgoKLSBgc2lnbmVyLWFjY291bnQtYWRkcmVzc2AgKHJlcXVpcmVkKTogQWNjb3VudCB1bmRlciB3aGljaCBjb21wb25lbnQgY29kZSBzaG91bGQgYmUgZGVwbG95ZWQgYW5kIHVzZWQgZm9yIHNpZ25pbmcgdGhlIGRlcGxveSB0cmFuc2FjdGlvbi4KCi0gYHNpZ25lci1wdWJsaWMta2V5YCAocmVxdWlyZWQpOiBQdWJsaWMga2V5IGZvciBzaWduaW5nIHRyYW5zYWN0aW9ucyBpbiB0aGUgZm9ybWF0OiBgZWQyNTUxOTo8cHVibGljX2tleT5gLgoKLSBgc2lnbmVyLXByaXZhdGUta2V5YCAocmVxdWlyZWQpOiBQcml2YXRlIGtleSBmb3Igc2lnbmluZyB0cmFuc2FjdGlvbnMgaW4gdGhlIGZvcm1hdDogYGVkMjU1MTk6PHByaXZhdGVfa2V5PmAuCg==\\`, \"base64\").toString(\"utf-8\"); return <Markdown text={mdContent} />;}; const Cli = () => { const mdContent = Buffer.from(\\`IyMgQWzDqW0gQ0xJCgpBbMOpbSBoYXMgaXRzIG93biBjb21tYW5kIHN5c3RlbS4KCiMjIyBDb21tYW5kcwoKYGBgYmFzaApVc2FnZTogYWxlbSBbb3B0aW9uc10gW2NvbW1hbmRdCgpPcHRpb25zOgogIC1WLCAtLXZlcnNpb24gICBvdXRwdXQgdGhlIHZlcnNpb24gbnVtYmVyCiAgLWgsIC0taGVscCAgICAgIGRpc3BsYXkgaGVscCBmb3IgY29tbWFuZAoKQ29tbWFuZHM6CiAgZGV2IFtvcHRpb25zXSAgICAgICAgICAgICAgUnVuIHRoZSBkZXZlbG9wbWVudCBzZXJ2ZXIKICBidWlsZCAgICAgICAgICAgICAgICAgICAgICBCdWlsZCB0aGUgcHJvamVjdAogIGRlcGxveSBbb3B0aW9uc10gICAgICAgICAgIERlcGxveSB0aGUgcHJvamVjdAogIHVwbG9hZC1tZXRhZGF0YSBbb3B0aW9uc10gIFVwbG9hZCBtZXRhZGF0YSB0byBTb2NpYWxEQiAoYXBwIG5hbWUsIGRlc2NyaXB0aW9uLCBpY29uLCB0YWdzLCBldGMpCmBgYAoKIyMjIyBDb21tYW5kOiBgZGV2YAoKUnVuIHRoZSBkZXZlbG9wbWVudCBzZXJ2ZXIgd2l0aCB2YXJpb3VzIG9wdGlvbnM6CgpgYGBiYXNoClVzYWdlOiBhbGVtIGRldiBbb3B0aW9uc10KCk9wdGlvbnM6CiAgLW4sIC0tbmV0d29yayA8bmV0d29yaz4gIE5ldHdvcmsgd2hlcmUgdGhlIGFwcCB3aWxsIGJlIHJ1bm5pbmcgKGRlZmF1bHQ6ICJtYWlubmV0IikKICAtcCwgLS1wb3J0IDxwb3J0PiAgICAgICAgUG9ydCB0byBydW4gdGhlIHNlcnZlciBvbiAoZGVmYXVsdDogODA4MCkKICAtbm8tb3BlbiAgICAgICAgICAgICAgICAgRGlzYWJsZSBvcGVuaW5nIHRoZSBicm93c2VyIChkZWZhdWx0OiBmYWxzZSkKYGBgCgojIyMjIENvbW1hbmQ6IGBidWlsZGAKCkJ1aWxkIHRoZSBwcm9qZWN0OgoKYGBgYmFzaApVc2FnZTogYWxlbSBidWlsZApgYGAKClRoaXMgd2lsbCBvdXRwdXQgdmFsaWQgd2lkZ2V0IGNvZGUgdG8gdGhlIGAvYnVpbGRgIGRpcmVjdG9yeS4KCiMjIyMgQ29tbWFuZDogYGRlcGxveWAKCkRlcGxveSB0aGUgcHJvamVjdCB0byBOZWFyIEJPUzoKCmBgYGJhc2gKVXNhZ2U6IGFsZW0gZGVwbG95IFtvcHRpb25zXQoKT3B0aW9uczoKICAtbiwgLS1uZXR3b3JrIDxuZXR3b3JrPiAgTmV0d29yayB3aGVyZSB0aGUgYXBwIHNob3VsZCBiZSBkZXBsb3llZCAoZGVmYXVsdDogIm1haW5uZXQiKQogIC1oLCAtLWhlbHAgICAgICAgICAgICAgICBkaXNwbGF5IGhlbHAgZm9yIGNvbW1hbmQKYGBgCgojIyMjIENvbW1hbmQ6IGB1cGxvYWQtbWV0YWRhdGFgCgpVcGxvYWQgbWV0YWRhdGEgdG8gU29jaWFsREIuIFRoaXMgaXMgZ29pbmcgdG8gdXNlIHRoZSBkYXRhIHByb3ZpZGVkIGJ5IGBib3MuY29uZmlnLmpzb25gIGZpbGUuIFRoZSBjb250ZW50IHJlcHJlc2VudHMgdGhlIGFwcCdzIGRldGFpbHMgbGlrZSBgbmFtZSwgZGVzY3JpcHRpb24sIGljb24sIHRhZ3MsIGV0Y2AuIFlvdSBjYW4gdXBkYXRlIHRoaXMgaW5mb3JtYXRpb24gbWFudWFsbHkgYnkgZ29pbmcgdG8gdGhlIHdpZGdldCBtZXRhZGF0YSB0YWIgdXNpbmcgdGhlIFtOZWFyIFNhbmRib3hdKGh0dHBzOi8vbmVhci5vcmcvc2FuZGJveCkuCgpgYGBiYXNoClVzYWdlOiBhbGVtIHVwbG9hZC1tZXRhZGF0YSBbb3B0aW9uc10KCk9wdGlvbnM6CiAgLW4sIC0tbmV0d29yayA8bmV0d29yaz4gIE5ldHdvcmsgd2hlcmUgdGhlIG1ldGFkYXRhIHNob3VsZCBiZSBkZXBsb3llZCAoZGVmYXVsdDogIm1haW5uZXQiKQogIC1oLCAtLWhlbHAgICAgICAgICAgICAgICBkaXNwbGF5IGhlbHAgZm9yIGNvbW1hbmQKYGBgCg==\\`, \"base64\").toString(\"utf-8\"); return <Markdown text={mdContent} />;}; const ConfigFile = () => { const mdContent = Buffer.from(\\`IyMgQ29uZmlnIEZpbGUKCkNyZWF0ZSBhIGBib3MuY29uZmlnLmpzb25gIGZpbGUgYXQgdGhlIHJvb3Qgb2YgdGhlIHByb2plY3Qgd2l0aCB0aGUgZm9sbG93aW5nIGNvbnRlbnQ6CgpgYGBqc29uCnsKICAvLyBUaGlzIGlzIHRoZSByb290IHBhdGggb2YgdGhlIGFwcC4KICAvLyBpZiB0cnVlOiBhbGVtLWxpYi5uZWFyL3dpZGdldC9JbmRleAogIC8vIGlmIGZhbHNlOiBhbGVtLWxpYi5uZWFyL3dpZGdldC9hbGVtLWRvY3MgKGl0J3MgZ29pbmcgdG8gdXNlIHRoZSBzbHVnaWZpZWQgIm5hbWUiKQogICJpc0luZGV4IjogdHJ1ZSwKICAvLyBUaGUgbWFpbm5ldCBhY2NvdW50IElEIHVuZGVyIHdoaWNoIHRoZSBhcHAgd2lsbCBiZSBkZXBsb3llZC4KICAibWFpbm5ldEFjY291bnQiOiAiYWxlbS1saWIubmVhciIsCiAgLy8gVGhlIHRlc3RuZXQgYWNjb3VudCBJRCB1bmRlciB3aGljaCB0aGUgYXBwIHdpbGwgYmUgZGVwbG95ZWQuCiAgInRlc3RuZXRBY2NvdW50IjogImFsZW0tbGliLnRlc3RuZXQiLAogIC8vIEFwcCBuYW1lCiAgIm5hbWUiOiAiQWxlbSBEb2NzIiwKICAvLyBBcHAgRGVzY3JpcHRpb24KICAiZGVzY3JpcHRpb24iOiAiQ3JlYXRlIHdlYjMgYXBwbGljYXRpb25zIGZvciBORUFSIEJPUyB3aXRoIGEgZm9jdXMgb24gcGVyZm9ybWFuY2Ugd2hpbGUgdXNpbmcgY29uY2VwdHMgdGhhdCBhcmUgYmFzZWQgb24gUmVhY3RKUy4iLAogIC8vIFNvY2lhbCBsaW5rcy4gQ2hlY2sgb3V0IE5FQVIgU29jaWFsIEJvcyBkb2NzIHRvIGdldCB0byBrbm93IHRoZSBvcHRpb25zCiAgLy8gaHR0cHM6Ly9kb2NzLm5lYXIub3JnL3NvY2lhbC9jb250cmFjdAogICJsaW5rdHJlZSI6IHsKICAgICJ3ZWJzaXRlIjogImdpdGh1Yi5jb20vd3BkYXMvYWxlbSIKICB9LAogICJpbWFnZSI6IHsKICAgICJpcGZzX2NpZCI6ICJiYWZrcmVpY2pkZ2F0NXhzdzd2eGJvc295eWdlcm1hd2hrZmkyYnkzb3ZnN2M2dHVtcmF5bjRyaW10eSIKICB9LAogIC8vIFRhZ3Mgb2YgdGhpcyBwcm9qZWN0CiAgInRhZ3MiOiBbInRoZSIsICJwcm9qZWN0IiwgInRhZ3MiLCAiaGVyZSJdCn0KYGBgCgojIyBQYXRoIEFsaWFzZXMKCllvdSBjYW4gb3B0aW9uYWxseSBjb25maWd1cmUgeW91ciBhcHBsaWNhdGlvbidzIHBhdGggYWxpYXNlcyBzbyB0aGF0IGl0IHdvcmtzIHRvZ2V0aGVyIHdpdGggdHNjb25maWcuanNvbiwgZm9yIGV4YW1wbGUuIEFzc3VtaW5nIHlvdXIgcHJvamVjdCdzIGB0c2NvbmZpZy5qc29uYCBmaWxlIGhhcyB0aGUgZm9sbG93aW5nIGNvbmZpZ3VyYXRpb24gZm9yIHBhdGhzOgoKYGBganNvbgp7CiAgImNvbXBpbGVyT3B0aW9ucyI6IHsKICAgIC8vIC4uLgogICAgImJhc2VVcmwiOiAiLiIsCiAgICAicGF0aHMiOiB7CiAgICAgICJAYXBwLyoiOiBbInNyYy8qIl0sCiAgICAgICJAY29tcG9uZW50cy8qIjogWyJzcmMvY29tcG9uZW50cy8qIl0KICAgIH0KICB9Cn0KYGBgCgpZb3Ugd2lsbCB3YW50IHRvIGNvbmZpZ3VyZSB0aGUgc2FtZSBiZWhhdmlvciB1c2luZyB0aGUgYGJvcy5jb25maWcuanNvbmAgZmlsZSBhcyBmb2xsb3dzOgoKYGBganNvbgp7CiAgLy8gLi4uCiAgImNvbXBpbGVyT3B0aW9ucyI6IHsKICAgICJiYXNlVXJsIjogIi4iLAogICAgInBhdGhzIjogewogICAgICAiQGFwcC8iOiAic3JjLyIsCiAgICAgICJAY29tcG9uZW50cy8iOiAic3JjL2NvbXBvbmVudHMvIgogICAgfQogIH0KfQpgYGAKCk5vdyBpbiBhbGwgb2YgeW91ciBzb3VyY2UgZmlsZXMsIHlvdSBjYW4gaW1wb3J0IGNvbXBvbmVudHMgbGlrZSB0aGlzOgoKYGBgdHN4Ci8vIFdpdGhvdXQgcGF0aCBhbGlhc2VzCmltcG9ydCBIZXJvIGZyb20gIi4uLy4uLy4uL2NvbXBvbmVudHMvSGVybyI7CmltcG9ydCBGb290ZXIgZnJvbSAiLi4vLi4vLi4vY29tcG9uZW50cy9Gb290ZXIiOwoKLy8gV2l0aCBwYXRoIGFsaWFzZXMKaW1wb3J0IEhlcm8gZnJvbSAiQGNvbXBvbmVudHMvSGVybyI7CmltcG9ydCBGb290ZXIgZnJvbSAiQGNvbXBvbmVudHMvRm9vdGVyIjsKYGBgCg==\\`, \"base64\").toString(\"utf-8\"); return <Markdown text={mdContent} />;}; const Installation = () => { const mdContent = Buffer.from(\\`IyMgSW5zdGFsbGF0aW9uCgoqKllvdeKAmWxsIG5lZWQgdG8gaGF2ZSBOb2RlIDE4LjAuMCBvciBsYXRlciB2ZXJzaW9uIG9uIHlvdXIgbG9jYWwgZGV2ZWxvcG1lbnQgbWFjaGluZSoqLiBZb3UgY2FuIHVzZSBbbnZtXShodHRwczovL2dpdGh1Yi5jb20vY3JlYXRpb25peC9udm0jaW5zdGFsbGF0aW9uKSAobWFjT1MvTGludXgpIG9yIFtudm0td2luZG93c10oaHR0cHM6Ly9naXRodWIuY29tL2NvcmV5YnV0bGVyL252bS13aW5kb3dzI25vZGUtdmVyc2lvbi1tYW5hZ2VyLW52bS1mb3Itd2luZG93cykgdG8gc3dpdGNoIE5vZGUgdmVyc2lvbnMgYmV0d2VlbiBkaWZmZXJlbnQgcHJvamVjdHMuCgpVc2UgdGhlIGNvbW1hbmQgYmVsb3cgdG8gc3RhcnQgYW4gaW5pdGlhbCBib2lsZXJwbGF0ZS4KCiMjIyBKYXZhU2NyaXB0CgpgYGBzaAojIE5weApucHggY3JlYXRlLWFsZW0tZGFwcCBteS1hcHAKY2QgbXktYXBwCm5wbSBzdGFydApgYGAKCmBgYHNoCiMgWWFybgp5YXJuIGNyZWF0ZSBhbGVtLWRhcHAgbXktYXBwCmNkIG15LWFwcAp5YXJuIHN0YXJ0CmBgYAoKIyMjIFR5cGVTY3JpcHQKCmBgYHNoCiMgTnB4Cm5weCBjcmVhdGUtYWxlbS1kYXBwIG15LWFwcCAtLXRlbXBsYXRlIHR5cGVzY3JpcHQKY2QgbXktYXBwCm5wbSBzdGFydApgYGAKCmBgYHNoCiMgWWFybgp5YXJuIGNyZWF0ZSBhbGVtLWRhcHAgbXktYXBwIC0tdGVtcGxhdGUgdHlwZXNjcmlwdApjZCBteS1hcHAKeWFybiBzdGFydApgYGAK\\`, \"base64\").toString(\"utf-8\"); return <Markdown text={mdContent} />;}; const FeatureOverview = () => { const mdContent = Buffer.from(\\`IyBGZWF0dXJlIE92ZXJ2aWV3CgpBbGVtIGlzIGEgd2ViMyAqKkphdmFTY3JpcHQqKiAvICoqVHlwZVNjcmlwdCoqIGxpYnJhcnkgdG8gY3JlYXRlIHdlYjMgYXBwcyBmb3IgTmVhciBCT1MuCgojIyBDb21wb25lbnQKCllvdSBjYW4gY3JlYXRlIGFueSBjb21wb25lbnQgZmlsZSB1c2luZyAqKkphdmFTY3JpcHQqKiBvciAqKlR5cGVTY3JpcHQqKi4gVGhlIGVudHJ5cG9pbnQgbXVzdCBiZSBhbiBBcHAgY29tcG9uZW50IGxpa2Ugc286CgpgYGB0c3gKY29uc3QgQXBwID0gKCkgPT4gewogIHJldHVybiAoCiAgICA8PgogICAgICA8aDE+SGVsbG8gV29ybGQ8L2gxPgogICAgPC8+CiAgKTsKfTsKCmV4cG9ydCBkZWZhdWx0IEFwcDsKYGBgCgojIyBDb21wb25lbnQgUHJvcHMKClBhc3NpbmcgcHJvcGVydGllcyB0byBhIGNvbXBvbmVudCBpcyB2ZXJ5IHNpbXBsZS4gSnVzdCB1c2UgcmVhY3QncyBkZWZhdWx0czoKCmBgYHRzeApleHBvcnQgY29uc3QgQ29tcG9uZW50QSA9ICh7IG5hbWUgfTogeyBuYW1lOiBzdHJpbmcgfSkgPT4gewogIHJldHVybiA8cD57bmFtZX08L3A+Owp9OwoKZXhwb3J0IGNvbnN0IENvbXBvbmVudEIgPSAoKSA9PiB7CiAgcmV0dXJuIDxDb21wb25lbnRBIG5hbWU9IldlbmR6IiAvPjsKfTsKCmV4cG9ydCBjb25zdCBDb21wb25lbnRDID0gKGNvbXBvbmVudFByb3BzOiB7IG5hbWU6IHN0cmluZyB9KSA9PiB7CiAgcmV0dXJuIDxwPntjb21wb25lbnRQcm9wcy5uYW1lfTwvcD47Cn07CmBgYAo=\\`, \"base64\").toString(\"utf-8\"); return <Markdown text={mdContent} />;}; const Categories = { gettingStarted: \"Getting Started\", router: \"Router\", context: \"Context\", apis: \"APIs\", bos: \"BOS\"}; const RoutesPath = { about: { path: \"about\", title: \"About\", category: Categories.gettingStarted }, featureOverview: { path: \"feature-overview\", title: \"Feature Overview\", category: Categories.gettingStarted }, installation: { path: \"installation\", title: \"Installation\", category: Categories.gettingStarted }, configFile: { path: \"config-file\", title: \"Config File\", category: Categories.gettingStarted }, cli: { path: \"cli\", title: \"CLI\", category: Categories.gettingStarted }, deployingWithGithubActions: { path: \"deploying-with-github-actions\", title: \"Deploying with GitHub Actions\", category: Categories.gettingStarted }, routes: { path: \"routes\", title: \"Routes\", category: Categories.router }, routeLink: { path: \"route-link\", title: \"Route Link\", category: Categories.router }, navigate: { path: \"navigate\", title: \"Navigate\", category: Categories.router }, getLocation: { path: \"get-location\", title: \"Get Location\", category: Categories.router }, useParams: { path: \"use-params\", title: \"Use Params\", category: Categories.router }, useRoutes: { path: \"useRoutes\", title: \"Use Routes\", category: Categories.router }, createAndUseContext: { path: \"create-and-use-context\", title: \"Create & Use Context\", category: Categories.context }, loadExternalStyles: { path: \"load-external-styles\", title: \"Load External Styles\", category: Categories.apis }, promisify: { path: \"promisify\", title: \"Promisify\", category: Categories.apis }, isDevelopment: { path: \"is-development\", title: \"Is Development\", category: Categories.apis }, createDebounce: { path: \"create-debounce\", title: \"Create Debounce\", category: Categories.apis }, bosProps: { path: \"bos-props\", title: \"APIs and Components\", category: Categories.bos }}; const Row = styled.div\\` display: flex;\\`; const Column = styled.div\\` display: flex; flex-direction: column;\\`; const A_2 = styled.div\\` display: flex; flex-direction: column; align-items: center; margin-bottom: 90px;\\`; const A_3 = styled.img\\` pointer-events: none; margin-bottom: 20px; border-radius: 999px;\\`; const A_4 = styled.h1\\` font-size: 42px !important; margin-bottom: 14px;\\`; const A_5 = styled.h3\\` font-size: 28px !important; font-weight: 600; color: rgb(67 74 90); margin-bottom: 34px;\\`; const CustomAnchor = styled.div\\` display: flex; a { padding: 0.75rem 1.5rem; border-radius: 30px; border: 1px solid #ccc; background-color: #fff; color: rgb(35 39 47); font-weight: 700; font-size: 17px; :hover { background-color: #fafafa; } }\\`; const CustomLink = styled.a\\` padding: 0.75rem 1.5rem; border-radius: 30px; border: 1px solid rgb(8 126 164); background-color: rgb(8 126 164); margin-right: 12px; p { color: #fff !important; margin: 0; font-weight: 700 !important; font-size: 17px; } :hover { background-color: rgb(8 126 164); }\\`; const Section = styled.div\\` background-color: rgb(188 193 205 / 12%); display: flex; flex-direction: column; align-items: center; padding: 90px 20px; align-items: center; text-align: center; ul { list-style-type: none; } p, li { font-size: 20px; color: rgb(67 74 90); line-height: 1.5; max-width: 48rem; font-weight: 500; margin-top: 1.75rem; }\\`; const Code = styled.span\\` background-color: rgba(208, 211, 220, 0.4); border-radius: 0.5rem; border: 0 solid #e5e7eb; color: rgb(67 74 90); padding: 0.125rem 0.25rem;\\`; const BlueCode = styled.span\\` background-color: rgba(164, 187, 232, 0.4); border-radius: 0.5rem; border: 0 solid #e5e7eb; color: rgb(67 74 90); padding: 0.125rem 0.25rem;\\`; const RedCode = styled.span\\` background-color: rgba(223, 139, 142, 0.3); border-radius: 0.5rem; border: 0 solid #e5e7eb; color: rgb(67 74 90); padding: 0.125rem 0.25rem;\\`; const navigate = route => { const routeContext = useContext(\"alemRoutes\"); if (!routeContext) { console.error(\"navigate is being used without Router on top of it.\"); } if (routeContext.routes.includes(route)) { routeContext.updateRouteParameters({ ...routeContext, activeRoute: route }); }}; const RouteLink = ({ to, label, className, style, onClick, children}) => { const routeContext = useContext(\"alemRoutes\"); if (!routeContext) { console.error(\"RouteLink component is being used without Router on top of it.\"); } const onClickHandler = () => { if (onClick) { onClick(); } if (routeContext.routeType === \"ContentBased\") { navigate(to); } }; if (routeContext.routeType === \"URLBased\") { return <a onClick={onClickHandler} className={className} style={{ cursor: \"pointer\", textDecoration: \"none\", ...style }} href={\\`?\\${routeContext.routeParameterName || \"path\"}=\\${to}\\`}> {label || children} </a>; } return <a style={{ cursor: \"pointer\", textDecoration: \"none\", ...style }} className={className} onClick={onClickHandler}> {label || children} </a>;}; const AboutPage = () => { return <div> <A_2> <A_3 src=\"https://cdn.jsdelivr.net/gh/wpdas/alem/docs/assets/near-script-logo.png\" width={120} alt=\"logo\" /> <A_4>Al\u00e9m</A_4> <A_5>The library to build web3 applications for Near BOS</A_5> <Row> <CustomLink href=\"https://github.com/wpdas/alem-docs-web\" target=\"_blank\"> <p>See an Example</p> </CustomLink> <CustomAnchor> <RouteLink to={RoutesPath.featureOverview.path} label=\"Learn Alem\" /> </CustomAnchor> </Row> </A_2> <Section> <A_4>Create user interfaces from components</A_4> <p> Alem use its compiler to let you build user interfaces out of individual pieces. Create your own components like <Code>Thumbnail</Code>, <Code>LikeButton</Code>, and{\" \"} <Code>Avatar</Code>. Then combine them into entire screens, pages, and other components. </p> </Section> <Section style={{ backgroundColor: \"#fff\" }}> <A_4>Stateless & Stateful Component</A_4> <p> Leverage the full power of JSX to create your components easily, quickly, and efficiently. Both stateful and stateless components <BlueCode>support children</BlueCode>, which is not natively supported by the Near VM, but Al\u00e9m handles this in a way that it is processed and understood. </p> </Section> <Section> <A_4>Network</A_4> <p> Currently supports <Code>Mainnet</Code> and <Code>Testnet</Code>. So, while you are developing and testing features you can test everything without worrying about expenses. </p> </Section> <Section style={{ backgroundColor: \"#fff\" }}> <A_4>Good to Know</A_4> <ul> <li> Stateful components are interpreted as Widgets by Al\u00e9m, while Stateless components are seen as auxiliary resources injected into the Widgets that import them. </li> <li> A <BlueCode>.tsx/.jsx</BlueCode> file can have only one component. You can create other internal components within the component's function. </li> <li> Prefer creating one file per resource, as importing a resource from a{\" \"} <BlueCode>.ts/.js</BlueCode> file will inject the entire content of that file into the Widget. </li> <li> The use of the <RedCode>import * foo from './foo'</RedCode> signature is not supported. This is intentional, as the idea is to import only the necessary fragments into the Widget. </li> <li> The use of <BlueCode>async/await</BlueCode> is supported and <BlueCode>experimental</BlueCode>. It should be used only in the main scope of the component. It will make changes to the state of the main Widget. Do not use in hooks. </li> <li> Avoid importing a resource that has the same name as any variable within your component. Al\u00e9m handles s that use the same names but does not handle variables of the same name at runtime. </li> <li> Use correct comment structure for css/styled-components and jsx/js/tsx/ts files. Using the wrong nomenclature for comments can affect the final result of the compiled project. </li> </ul> </Section> </div>;};const Routes = () => {const AboutPageRoute = props.alem.createRoute(RoutesPath.about.path, AboutPage);const routes = [AboutPageRoute, {path: RoutesPath.featureOverview.path,component: FeatureOverview}, props.alem.createRoute(RoutesPath.installation.path, Installation), props.alem.createRoute(RoutesPath.configFile.path, ConfigFile), props.alem.createRoute(RoutesPath.cli.path, Cli), props.alem.createRoute(RoutesPath.deployingWithGithubActions.path, DeployingWithGithubActions), props.alem.createRoute(RoutesPath.routes.path, RoutesDocs), props.alem.createRoute(RoutesPath.useRoutes.path, UseRoutes), props.alem.createRoute(RoutesPath.routeLink.path, RouteLinkDocs), props.alem.createRoute(RoutesPath.navigate.path, Navigate), props.alem.createRoute(RoutesPath.getLocation.path, GetLocation), props.alem.createRoute(RoutesPath.useParams.path, UseParams), props.alem.createRoute(RoutesPath.createAndUseContext.path, CreateContext), props.alem.createRoute(RoutesPath.loadExternalStyles.path, LoadExternalStyles), props.alem.createRoute(RoutesPath.promisify.path, Promisify), props.alem.createRoute(RoutesPath.isDevelopment.path, IsDevelopment), props.alem.createRoute(RoutesPath.createDebounce.path, CreateDebounce), props.alem.createRoute(RoutesPath.bosProps.path, BosOverview)];const urlParams = props.alem.useParams();return <Widget loading=\" \" code={props.alem.componentsCode.Router} props={{ ...{ routes: routes, type: \"ContentBased\", parameterName: \"tab\", initialRoute: urlParams.section, ...props } }} />;}; const useRoutes = () => { const contextData = useContext(\"alemRoutes\"); if (!contextData) { console.error(\"useRoutes: You need to call \\`RouterProvider()\\` first.\"); } return contextData;}; const getLocation = () => { const routes = useRoutes(); return { pathname: routes.activeRoute, routes: routes.routes, isRoutesReady: routes.routes && routes.routes.length > 0 };}; const ContentView = () => { const site = isDevelopment ? \"http://127.0.0.1:8080/alem-lib.near/widget/Index\" : \"https://alem.dev/\"; const { pathname } = getLocation(); const copyToCliboard = () => { clipboard.writeText(\\`\\${site}?section=\\${pathname}\\`); }; return <A_1> {pathname !== \"about\" && pathname !== \"\" && <TopSection> <div> <ShareButton data-bs-toggle=\"modal\" data-bs-target=\"#sharedInfoModal\" onClick={copyToCliboard}> <ShareIcon /> Share </ShareButton> </div> </TopSection>} <Margin /> <Routes /> </A_1>;}; const AppContainer = styled.div\\` display: flex; flex-direction: row; font-family: \"Wix Madefor Display\", sans-serif; @media (max-width: 800px) { flex-wrap: wrap; }\\`; const AppBackground = styled.div\\` background-color: #fff; position: fixed; top: 0; left: 0; right: 0; bottom: 0; z-index: -2;\\`; const Banner = styled.p\\` display: flex; justify-content: center; align-items: center; font-size: 17px; height: 40px; background-color: rgb(243 244 246); color: rgb(67 74 90); font-weight: 500; line-height: 30px; width: 100%; span { color: rgb(8 126 164); margin-left: 8px; }\\`; const MobileNavBarSwitcher = styled.div\\` font-family: \"Wix Madefor Display\", sans-serif; /* display: none; */ height: 0px; overflow: hidden; @media (max-width: 800px) { display: flex; height: fit-content; }\\`; const SideBarSwitcher = styled.div\\` display: flex; @media (max-width: 800px) { /* display: none; */ height: 0px; overflow: hidden; }\\`; const ShareIcon = () => <span className=\"material-symbols-outlined\">share</span>; const SharedInfoModal = () => { return <> <div className=\"modal fade\" id=\"sharedInfoModal\" tabIndex={-1} aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\"> <div className=\"modal-dialog modal-dialog-centered\"> <div className=\"modal-content\"> <div className=\"modal-header\"> <h1 className=\"modal-title fs-5\" id=\"exampleModalLabel\" style={{ alignItems: \"center\", display: \"flex\" }}> <ShareIcon /> <p style={{ marginBottom: 0, marginLeft: 8 }}>Share</p> </h1> <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button> </div> <div className=\"modal-body\">Link copied to clipboard</div> <div className=\"modal-footer\"> <button type=\"button\" className=\"btn btn-primary\" data-bs-dismiss=\"modal\" style={{ padding: \"0.55rem 2.5rem\", borderRadius: \"30px\", border: \"1px solid rgb(8 126 164)\", backgroundColor: \"rgb(8 126 164)\", fontWeight: 700 }}> Ok </button> </div> </div> </div> </div> </>;}; const Modals = () => <> <SharedInfoModal /> </>; const createContext = contextKey => { const setDefaultData = defaultStateValue => { if (!state[contextKey] || !state[contextKey].initialized) { const stateKeys = Object.keys(defaultStateValue); let mainKeys = [...stateKeys]; mainKeys = mainKeys.filter((item, index) => mainKeys.indexOf(item) === index); State.update({ ...state, [contextKey]: { initialized: true, keys: mainKeys, ...defaultStateValue } }); } props = { ...props, ...state, [contextKey]: { ...state[contextKey] } }; }; const updateData = updates => { State.update({ [contextKey]: { ...state[contextKey], ...updates } }); props = { ...props, ...state }; }; return { setDefaultData, updateData };}; const useContext = contextKey => { const wasContextInitialized = props[contextKey].initialized; if (!wasContextInitialized) { console.error(\\`Context \"\\${contextKey}\" not found.\\`); return {}; } const contextKeys = props[contextKey].keys; const contextItems = {}; contextKeys.forEach(key => { contextItems[key] = props[contextKey][key]; }); return contextItems;}; const ALEM_ROUTES_CONTEXT_KEY = \"alemRoutes\";const RouterProvider = () => { const { setDefaultData, updateData } = createContext(ALEM_ROUTES_CONTEXT_KEY); const updateAlemRoutesState = updatedState => { updateData({ ...updatedState }); }; const alemRoutesState = () => useContext(ALEM_ROUTES_CONTEXT_KEY); setDefaultData({ routesInitialized: false, activeRoute: \"\", routeParameterName: \"path\", routes: [], routeType: \"URLBased\", routeBlocked: true, updateRouteParameterName: parameterName => { updateAlemRoutesState({ routeParameterName: parameterName }); }, updateRouteParameters: routeProps => { updateAlemRoutesState({ routes: routeProps.routes || alemRoutesState().routes, routeType: routeProps.routeType || alemRoutesState().routeType, activeRoute: routeProps.activeRoute || alemRoutesState().activeRoute, routeBlocked: routeProps.routeBlocked || alemRoutesState().routeBlocked, routesInitialized: true }); } });};const [libVersion, setLibVersion] = useState(\"\");useEffect(() => {asyncFetch(\"https://api.github.com/repos/wpdas/alem/tags\").then((data) => {setLibVersion(data.body[0].name.replace(\"v\", \"\"));});}, []);RouterProvider();return <div style={{marginTop: \"calc(-1 * var(--body-top-padding, 0))\"}}> <Modals /> <Banner> Alem is currently on version <span>{libVersion}</span>. </Banner> <MobileNavBarSwitcher> <Widget loading=\" \" code={props.alem.componentsCode.MobileNavBar} props={{ ...{ ...props } }} /> </MobileNavBarSwitcher> <AppContainer> <SideBarSwitcher> <Widget loading=\" \" code={props.alem.componentsCode.Sidebar} props={{ ...{ ...props } }} /> </SideBarSwitcher> <ContentView /> </AppContainer> <Footer /> <AppBackground /> </div>; `, App: ` const Spinner = ({ style, dark}) => <div style={{ display: \"flex\", justifyContent: \"center\", width: \"100%\", ...style}}> <div className={\\`spinner-border \\${dark ? \"\" : \"text-light\"}\\`} role=\"status\"> <span className=\"visually-hidden\">Loading...</span> </div> </div>; const AppContainer = styled.div\\` display: flex; flex-direction: row; font-family: \"Wix Madefor Display\", sans-serif; @media (max-width: 800px) { flex-wrap: wrap; }\\`; const AppBackground = styled.div\\` background-color: #fff; position: fixed; top: 0; left: 0; right: 0; bottom: 0; z-index: -2;\\`; const Banner = styled.p\\` display: flex; justify-content: center; align-items: center; font-size: 17px; height: 40px; background-color: rgb(243 244 246); color: rgb(67 74 90); font-weight: 500; line-height: 30px; width: 100%; span { color: rgb(8 126 164); margin-left: 8px; }\\`; const MobileNavBarSwitcher = styled.div\\` font-family: \"Wix Madefor Display\", sans-serif; /* display: none; */ height: 0px; overflow: hidden; @media (max-width: 800px) { display: flex; height: fit-content; }\\`; const SideBarSwitcher = styled.div\\` display: flex; @media (max-width: 800px) { /* display: none; */ height: 0px; overflow: hidden; }\\`; const Loading = () => { return <AppContainer> <Spinner style={{ marginTop: \"28vh\" }} dark /> <AppBackground /> </AppContainer>;};const stylesLoaded = props.alem.loadExternalStyles([\"https://fonts.googleapis.com/css2?family=Wix+Madefor+Display:wght@400..800&display=swap\", \"https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@24,400,0,0\", \"https://fonts.cdnfonts.com/css/source-code-pro\"]);if (!stylesLoaded) {return <Loading />;}return <Widget loading=\" \" code={props.alem.componentsCode.Main} props={{ ...{ ...props } }} />; `, }, },};const alemCssBody = ``;const AlemTheme = styled.div` ${state.alem.alemExternalStylesBody} ${alemCssBody}`;return ( <AlemTheme> {iframeModulesCode && ( <iframe style={{ height: 0, width: 0 }} srcDoc={iframeModulesCode} message={\"init modules\"} onMessage={(message) => { console.log(\"Message:\", message); }} /> )} <Widget loading=\" \" code={props.alem.componentsCode.App} props={{ alem: props.alem }} /> </AlemTheme>);\n  ", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/alem-lib.near/widget/Index", "fact_widget_deployments_id": "88e7f9d7a1e69d152ae7bcbc7ff94849", "inserted_timestamp": "2024-04-02T15:32:23.478Z", "modified_timestamp": "2024-04-02T16:32:41.462Z", "__row_index": 202}