{"tx_hash": "uXiPjnbkc1GDM7cBCFTLFRWRyqxzMAtSHn69jyFEwJu", "action_id_social": "G8j1QUWY7hA33LfAXmumScRbXVUskMimpb1cZo1NHsSX-0-widget", "block_id": 97250321, "block_timestamp": "2023-07-24T21:16:40.320Z", "signer_id": "dokxo.near", "widget_name": "FASTSBT", "source_code": "const contract = \"hello.near-examples.near\";\n// State\nState.init({\n  theme: \"\",\n  Dao_Contract: \"\",\n  Issuer_selected: null,\n  Issuer_filled: \"\",\n  Receiver: \"\",\n  ClassIdSelected: \"\",\n  IssuedAT: \"\",\n  ExpiresAt: \"\",\n  Referencelink: \"\",\n  Referencehash: \"\",\n  IssuerPropList: props.IssuerList,\n  ischeckselected: false,\n  Submitdisable: true,\n});\nconst cssFont = fetch(\n  \"https://fonts.googleapis.com/css2?family=Manrope:wght@200;300;400;500;600;700;800\"\n).body;\nconst css = fetch(\n  \"https://raw.githubusercontent.com/dokxo96/fastSbt/master/fastsbt.css?token=GHSAT0AAAAAACEQ4SVRD7BVOYKVKF5B4FEAZF36DWQ\"\n).body;\nif (!cssFont || !css) return \"\";\nif (!state.theme) {\n  State.update({\n    theme: styled.div`\n    font-family: Manrope, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\n    ${cssFont}\n    ${css}\n`,\n  });\n}\nconst Theme = state.theme;\nconst NDCicon =\n  \"https://emerald-related-swordtail-341.mypinata.cloud/ipfs/QmP5CETfUsGFqdcsnrfPgUk3NvRh78TGZcX2srfCVFuvqi?_gl=1*faq1pt*_ga*Mzc5OTE2NDYyLjE2ODg1MTY4MTA.*_ga_5RMPXG14TE*MTY4OTg3Njc1OC4xMS4xLjE2ODk4NzY4MjYuNjAuMC4w\";\nconst CheckIcon =\n  \"https://emerald-related-swordtail-341.mypinata.cloud/ipfs/QmVGE45rLuHiEHh8RPfL11QsQBXVDfmdV3pevZU7CG1ucg?preview=1&_gl=1*1dpaowv*_ga*Mzc5OTE2NDYyLjE2ODg1MTY4MTA.*_ga_5RMPXG14TE*MTY4OTg4MDMyOS4xMi4xLjE2ODk4ODA3MTAuMTkuMC4w\";\nconst SubmitBtn = styled.button`\ndisplay: flex;\nwidth: 107px;\npadding: 8px 12px;\njustify-content: center;\nalign-items: center;\ngap: 10px;\ncolor:#000;\ndisplay: flex;\nwidth: 107px;\npadding: 8px 12px;\njustify-content: center;\nalign-items: center;\ngap: 10px;\nborder-radius: 10px;\n border-width: 1px;\n  border: solid 1px transparent;\n \n \n  background-image: ${\n    state.Submitdisable\n      ? \"linear-gradient(#a4a39e, #cbcac8), radial-gradient(circle at top left,#000000, #000000);\"\n      : \"linear-gradient(#FFD50D, #FFD50D), radial-gradient(circle at top left,#F0E1CE, #F0E1CE);\"\n  }\n  background-origin: border-box;\n  background-clip: padding-box, border-box;\n@media only screen and (max-width: 480px) {\n \n}\n`;\nconst CustomCheckbox = styled.div`\n width:20px;\n height:20px;\n background:${\n   state.ischeckselected\n     ? \"linear-gradient(90deg, #9333EA 0%, #4F46E5 100%);\"\n     : \"#F8F8F9;\"\n }\nborder: medium solid ${\n  state.ischeckselected\n    ? \"linear-gradient(90deg, #9333EA 0%, #4F46E5 100%);\"\n    : \"black\"\n};\nborder-radius:4px;\n \n`;\nconsole.log(\"state init\", state);\nconst validatedInputs = () => {\n  console.log(state);\n  const isEmpty = (str) => str.trim() === \"\";\n  let isValid = false;\n  if (isEmpty(state.Dao_Contract)) {\n    console.log(\"V:DAO\");\n    State.update({ error_msg: \"Write the DAO contract\", Submitdisable: true });\n    return (isValid = false);\n  }\n  if (isEmpty(state.Issuer_selected)) {\n    console.log(\"V:Issuer\");\n    State.update({ error_msg: \"Select an issuer\", Submitdisable: true });\n    return (isValid = false);\n  }\n  // the user will provide a new issuer\n  if (state.Issuer_selected === \"showinput\" && isEmpty(state.Issuer_filled)) {\n    console.log(\"V:META\");\n    State.update({ error_msg: \"provide an issuer\", Submitdisable: true });\n    return (isValid = false);\n  }\n  if (isEmpty(state.Receiver)) {\n    console.log(\"V:Receiver \");\n    State.update({ error_msg: \"Write the receiver\", Submitdisable: true });\n    return (isValid = false);\n  }\n  if (state.ischeckselected === true) {\n    console.log(\n      \"se activo la meta\",\n      state.ischeckselected === true,\n      state.ClassIdSelected\n    );\n    if (isEmpty(state.ClassIdSelected)) {\n      console.log(\"select toke\", isEmpty(state.ClassIdSelected));\n      State.update({ error_msg: \"Select a token class\", Submitdisable: true });\n      return (isValid = false);\n    }\n    /* if (isEmpty(state.IssuedAT)) {\n      State.update({ error_msg: \"pic an issued date\", Submitdisable: true });\n      return (isValid = false);\n    }\n    if (isEmpty(state.ExpiresAt)) {\n      State.update({ error_msg: \"pic an expires date\", Submitdisable: true });\n      return (isValid = false);\n    } \n    if (!isEmpty(state.Referencelink)) {\n      return (isValid = false);\n    }\n    if (!isEmpty(state.Referencehash)) {\n      return (isValid = false);\n    }*/\n    return (isValid = false);\n  }\n  if (isEmpty(state.Memo)) {\n    State.update({ error_msg: \"Write the memo\", Submitdisable: true });\n    return (isValid = false);\n  }\n  State.update({ Submitdisable: false });\n  return (isValid = true);\n};\nconst Submitform = () => {\n  if (validatedInputs()) {\n    console.log(\"es valido\");\n    const meta = {\n      receiver: state.Receiver,\n      metadata: {\n        class: state.ClassIdSelected,\n      },\n      reference: state.Referencelink ? state.Referencelink : null,\n      reference_hash: state.Referencehash ? state.Referencehash : null,\n    };\n    Near.call([\n      {\n        contractName: state.Dao_Contract,\n        methodName: \"add_proposal\",\n        args: {\n          proposal: {\n            description: \"create proposal to mint SBT\",\n            kind: {\n              FunctionCall: {\n                receiver_id: state.issuer,\n                actions: [\n                  {\n                    method_name: \"sbt_mint\",\n                    args: meta,\n                    deposit: \"80000000000000000000000\",\n                    gas: \"200000000000000\",\n                  },\n                ],\n              },\n            },\n          },\n        },\n        deposit: 200000000000000000000000,\n        gas: \"219000000000000\",\n      },\n    ]);\n  } else {\n    console.log(\"no es valido\");\n  }\n};\nreturn (\n  <Theme>\n    <div class=\"ModalCard\">\n      <div class=\"Header\">\n        <img src={NDCicon} />\n        <label class=\"Headerlabel\">FAST-SBT</label>\n      </div>\n      <div class=\"CardStyled\" name=\"card\">\n        <div class=\" BodyForm mx-auto\">\n          <div class=\"Rowcont\">\n            <div class=\"Colcont\">\n              <h1 class=\"H1styled\">DAO</h1>\n              <input\n                class=\"InputStyled\"\n                type=\"text\"\n                placeholder=\"Input DAO contract address\"\n                value={state.Dao_Contract}\n                onChange={(e) => {\n                  State.update({ Dao_Contract: e.target.value });\n                  validatedInputs();\n                }}\n              />\n            </div>\n            <div class=\"Colcont\">\n              <h1 class=\"H1styled\">Issuer</h1>\n              <select\n                class=\"Dropdown\"\n                placeholder=\"Input DAO contract address\"\n                value={state.Issuer_selected}\n                onChange={(e) => {\n                  State.update({ Issuer_selected: e.target.value });\n                  validatedInputs();\n                }}\n              >\n                <option default value=\"\">\n                  Select issuer\n                </option>\n                {props.IssuerList ? (\n                  props.IssuerList.map((item) => {\n                    return <option value={item.value}> {item.label}</option>;\n                  })\n                ) : (\n                  <></>\n                )}\n                <option value=\"showinput\">Other -- write it.</option>\n              </select>\n            </div>\n            {state.Issuer_selected === \"showinput\" ? (\n              <div class=\"Colcont\">\n                <h1 class=\"H1styled\">Enter issuer</h1>\n                <input\n                  class=\"InputStyled\"\n                  type=\"text\"\n                  placeholder=\"Input Issuer\"\n                  value={state.Issuer_filled}\n                  onChange={(e) => {\n                    State.update({ Issuer_filled: e.target.value });\n                    validatedInputs();\n                  }}\n                />\n              </div>\n            ) : (\n              <></>\n            )}\n            <div class=\"Colcont\">\n              <h1 class=\"H1styled\">Receiver</h1>\n              <input\n                class=\"InputStyled\"\n                type=\"text\"\n                placeholder=\"dokxo.near\"\n                value={state.Receiver}\n                onChange={(e) => {\n                  State.update({ Receiver: e.target.value });\n                  validatedInputs();\n                }}\n              />\n            </div>\n          </div>\n          <div className=\"d-flex flex-column mt-2\">\n            <div class=\"d-flex\">\n              <h1 class=\"H1styled\">Metadata</h1>\n              <CustomCheckbox\n                onClick={() => {\n                  State.update({ ischeckselected: !state.ischeckselected });\n                  validatedInputs();\n                }}\n              >\n                {state.ischeckselected ? (\n                  <img\n                    style={{\n                      width: \"100%\",\n                      height: \"100%\",\n                      \"object-fit\": \"cover\",\n                      \"vertical-align\": \" initial\",\n                    }}\n                    src={CheckIcon}\n                  />\n                ) : (\n                  <></>\n                )}\n              </CustomCheckbox>\n            </div>\n            {state.ischeckselected ? (\n              <div class=\"MetaCard\">\n                <div class=\"row  col-sm-12  mx-0  gap-1   \">\n                  <div class=\"Metarow\" name=\"Classid\">\n                    <div class=\"MetaTitles\">{\"Class id\"}</div>\n                    <div>\n                      <select\n                        class=\"Dropdown\"\n                        value={state.ClassIdSelected}\n                        onChange={(e) => {\n                          State.update({ ClassIdSelected: e.target.value });\n                          validatedInputs();\n                        }}\n                      >\n                        <option default value=\"\">\n                          Select token class id\n                        </option>\n                        {}\n                        <option value=\"1\">1</option>\n                        <option value=\"2\">2</option>\n                      </select>\n                    </div>\n                  </div>\n                  {/* <div class=\"Metarow\">\n                    {\" \"}\n                    <div class=\"AFDates\" name=\"AFdates\">\n                      <div class=\"DateContItem\">\n                        <div class=\"MetaTitles\">{\"Issued at\"}</div>\n                        <input\n                          class=\"FormInput\"\n                          type=\"date\"\n                          value={state.IssuedAT}\n                          onChange={(e) => {\n                            State.update({ IssuedAT: e.target.value });\n                            validatedInputs();\n                          }}\n                        />\n                      </div>\n                      <div class=\"DateContItem\">\n                        <div class=\"MetaTitles\">{\"Expires at\"}</div>\n                        <input\n                          class=\"FormInput\"\n                          type=\"date\"\n                          value={state.ExpiresAt}\n                          onChange={(e) => {\n                            State.update({ ExpiresAt: e.target.value });\n                            validatedInputs();\n                          }}\n                        />\n                      </div>\n                    </div>\n                  </div> */}\n                  <div class=\"Metarow\">\n                    <div class=\"MetaTitles\">\n                      {\"Reference = link to a JSON file (eg, IPFS).\"}\n                    </div>\n                    <div>\n                      <input\n                        class=\"FormInput\"\n                        value={state.Reference}\n                        placeholder=\"Write your reference (optional)\"\n                        onChange={(e) => {\n                          State.update({ Reference: e.target.value });\n                        }}\n                      />\n                    </div>\n                  </div>\n                  <div class=\"Metarow\">\n                    <div class=\"MetaTitles\">\n                      {\"Reference hash = Base64-encoded sha256 hash of JSON.\"}\n                    </div>\n                    <div style={{ \"font-size\": \"10px\" }}>\n                      <input\n                        class=\"FormInput\"\n                        value={state.Reference_link}\n                        placeholder=\"Write your reference hash (optional)\"\n                        onChange={(e) => {\n                          State.update({ Reference_link: e.target.value });\n                        }}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ) : (\n              <div class=\"Separator\"></div>\n            )}\n            <div className=\"d-flex flex-column mt-2\">\n              <h1 class=\"H1styled\">Memo</h1>\n              <input\n                class=\"InputStyled\"\n                type=\"text\"\n                placeholder=\"Write a memo\"\n                value={state.Memo}\n                onChange={(e) => {\n                  State.update({ Memo: e.target.value.substring(0, 200) });\n                  validatedInputs();\n                }}\n              />\n            </div>\n          </div>\n        </div>\n        <div class=\"FooterForm\" name=\"Footerform\">\n          <div class=\"Submitcontainer\">\n            <SubmitBtn\n              disabled={state.Submitdisable}\n              onClick={() => {\n                Submitform();\n              }}\n            >\n              {\" \"}\n              Submit{\" \"}\n            </SubmitBtn>\n          </div>\n        </div>\n      </div>\n    </div>\n  </Theme>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/dokxo.near/widget/FASTSBT", "fact_widget_deployments_id": "5ee767f8b8e55c381f018e3fbd1733f7", "inserted_timestamp": "2000-01-01T00:00:00.000Z", "modified_timestamp": "2000-01-01T00:00:00.000Z", "__row_index": 41}