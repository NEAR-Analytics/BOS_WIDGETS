{"tx_hash": "5QHYeVDXra67SGgNKgo3MF5KMrX8izuAf4CV2CRgNsrY", "action_id_social": "2eZzEtTGgKUZPbzfJ7U6amy8i2Fo5cWVV6p1oQASM87z-0-widget", "block_id": 95786109, "block_timestamp": "2023-07-05T20:39:18.346Z", "signer_id": "dokxo.near", "widget_name": "NDC.Nomination.Compose", "source_code": "let Nominationcontract = \"nominations-v1.gwg-testing.near\";\nlet Socialcontract = \"social.near\";\n\nlet profileInfo = Social.getr(`${context.accountId}/profile`);\nconsole.log(\"profileInfo\", profileInfo);\nlet imageIsNFT = profileInfo.image.nft ? true : false;\nlet nftData = profileInfo.image.nft;\nconst getNftCid = Near.view(nftData.contractId, \"nft_token\", {\n  token_id: nftData.tokenId,\n});\nconsole.log(\"getNftCid\", getNftCid);\nlet isNFTCid = getNftCid.metadata.media ? getNftCid.metadata.media : \"\";\n// State\nState.init({\n  theme,\n\n  img: {\n    uploading: \"false\",\n    cid: isNFTCid,\n    name: isNFTCid ? \"Uploaded from Social Profile\" : \"\",\n  },\n  name: profileInfo.name ? profileInfo.name : \"\",\n  profileAccount: context.accountId ? \"@\" + context.accountId : \"\",\n  house_intended: \"\",\n  issued1: \"\",\n  issued2: \"\",\n  issued3: \"\",\n  addition_platform: \"\",\n\n  afiliation: [\n    {\n      company_name: \"\",\n      start_date: \"\",\n      end_date: \"\",\n      role: \"\",\n    },\n  ],\n  agreement: \"false\",\n  tags: \"\",\n  error_msg: \"\",\n});\n\nconst ModalCard = styled.div`\n position: absolute;\n  z-index: 99;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: rgba(0, 0, 0, 0.70);\n  overflow:auto;\n@media only screen and (max-width: 480px) {\n \n}\n`;\n\nconst CardStyled = styled.div`\n \nwidth: 60%;\nheight: 100%;\n \nbackground: #F8F8F9;\ngap:10px;\nborder-radius: 10px;\nmargin-left:auto;\nmargin-right:auto;\noverflow: auto;\n@media only screen and (max-width: 480px) {\n  width: 100%;\n}\n\n  `;\n\nconst CardForm = styled.div`\ndisplay: flex;\nflex-direction: column;\nalign-items: flex-start;\npadding: 0px;\n \nwidth: 100%;\nheight: auto;\n \nmargin-top:18px;\n@media only screen and (max-width: 480px) {\n  \n   \n   \n}\n  `;\n\nconst FormsectionHouse_ = styled.div`\ndisplay: flex;\nflex-direction: column;\nalign-items: flex-start;\npadding: 0px;\n \nwidth: 33%;\nheight: 54px;\nflex: none;\ndisplay: none;\norder: 6;\nflex-grow: 0;\n@media only screen and (max-width: 480px) {\n  \n  \n  display: flex;\n}\n\n  `;\nconst FormsectionHouseDropdown = styled.select`\nbox-sizing: border-box;\ndisplay: flex;\nflex-direction: row;\nalign-items: flex-start;\npadding: 8px 10px;\ngap: 10px;\nwidth: 100%;\nheight: 32px;\nbackground: #FFFFFF;\nborder: 1px solid #D0D6D9;\nborder-radius: 8px;\nflex: none;\norder: 1;\n\nfont-size:12px;\nfont-family: 'Avenir';\nfont-style: normal;\nfont-weight: 400;\nfont-size: 12px;\nline-height: 120%;\n \ndisplay: flex;\nalign-items: center;\n\ncolor: #828688;\n@media only screen and (max-width: 480px) {\n   \n}\n  `;\n\nconst H1styled = styled.h1`\n \nmargin-left:16px;\nmargin-top:16px;\nmargin-right:auto; \nwidth: 104px;\nheight: 19px;\nfont-family: 'Avenir';\nfont-style: normal;\nfont-weight: 500;\nfont-size: 16px;\nline-height: 120%;\ncolor: #000000;\n`;\nconst H2styled = styled.h1`\n \nheight: 14px;\nfont-family: 'Avenir';\nfont-style: normal;\nfont-weight: 500;\nfont-size: 12px;\nline-height: 120%;\ndisplay: flex;\nalign-items: center;\ncolor: #000000;\nflex: none;\norder: 0;\nflex-grow: 0;\n`;\n\nconst Submitcontainer = styled.div`\ndisplay: flex;\njustify-content: flex-end;\nalign-items: center;\ngap: 8px;\nmargin-bottom:16px;\n\n`;\nconst SubmitBtn = styled.button`\n display: flex;\nwidth: 107px;\npadding: 8px 12px;\njustify-content: center;\nalign-items: center;\ngap: 10px;\ncolor:#000;\ndisplay: flex;\nwidth: 107px;\npadding: 8px 12px;\njustify-content: center;\nalign-items: center;\ngap: 10px;\nborder-radius: 10px;\n border-width: 1px;\n  border: solid 1px transparent;\n \n \n  background-image: linear-gradient(#FFD50D, #FFD50D), radial-gradient(circle at top left,#F0E1CE, #F0E1CE);\n  background-origin: border-box;\n  background-clip: padding-box, border-box;\n@media only screen and (max-width: 480px) {\n \n}\n\n`;\nconst CancelBtn = styled.button`\ndisplay: flex;\nwidth: 107px;\npadding: 8px 12px;\njustify-content: center;\nalign-items: center;\ngap: 10px;\ncolor:#9333EA;\nborder-radius: 10px;\n border-width: 1px;\n  border: solid 1px #9333EA;\n  background-image: linear-gradient(#fff, #fff), radial-gradient(circle at top left,#F0E1CE, #F0E1CE);\n  background-origin: border-box;\n  background-clip: padding-box, border-box;\n@media only screen and (max-width: 480px) {\n \n}\n`;\n\nconst HiddeableWidget = styled.div`\n  display: none;\n  @media (max-width: 480px) {\n    display: block;\n  }\n`;\n\nconst validatedInputs = () => {\n  const {\n    img,\n    name,\n    profileAccount,\n    house_intended,\n    issued1,\n    issued2,\n    issued3,\n    afiliation,\n    agreement,\n    tags,\n  } = state;\n  console.log(state);\n  const isEmpty = (str) => str.trim() === \"\";\n  const isFalse = (check) => check === \"false\";\n  let isValid = true;\n  if (img.cid === null) {\n    State.update({ error_msg: \"Pic an image\" });\n    isValid = false;\n  }\n  if (isEmpty(name)) {\n    State.update({ error_msg: \"Fill the name\" });\n\n    isValid = false;\n  }\n  if (isEmpty(profileAccount)) {\n    State.update({ error_msg: \"Fill the Profile Account\" });\n\n    isValid = false;\n  }\n  if (isEmpty(house_intended)) {\n    State.update({ error_msg: \"Select a house\" });\n\n    isValid = false;\n  }\n  if (isEmpty(issued1)) {\n    State.update({ error_msg: \"Fill the key issued 1\" });\n\n    isValid = false;\n  }\n  if (isEmpty(issued2)) {\n    State.update({ error_msg: \"Fill the key issued 2\" });\n\n    isValid = false;\n  }\n  if (isEmpty(issued3)) {\n    State.update({ error_msg: \"Fill the key issued 3\" });\n\n    isValid = false;\n  }\n  if (tags.split(\",\").length == 0) {\n    State.update({ error_msg: \"Write a tag\" });\n\n    isValid = false;\n  }\n  if (isFalse(agreement)) {\n    State.update({ error_msg: \"Accept the declaration\" });\n\n    isValid = false;\n  }\n  if (afiliation.length == 0) {\n    State.update({ error_msg: \"Add a affiliation\" });\n    isValid = false;\n  }\n\n  if (afiliation.length > 0) {\n    afiliation.forEach((element) => {\n      if (isEmpty(element.company_name)) {\n        State.update({ error_msg: \"Fill the company name\" });\n\n        isValid = false;\n      }\n      if (isEmpty(element.start_date)) {\n        State.update({ error_msg: \"Select a start date\" });\n\n        isValid = false;\n      }\n      if (isEmpty(element.end_date)) {\n        State.update({ error_msg: \"Select a end date\" });\n\n        isValid = false;\n      }\n      if (isEmpty(element.role)) {\n        State.update({ error_msg: \"Write your role\" });\n\n        isValid = false;\n      }\n    });\n  } else {\n    State.update({ error_msg: null });\n  }\n  return isValid;\n};\n\nconst uploadFileUpdateState = (body) => {\n  console.log(\"sending img\");\n  asyncFetch(\"https://ipfs.near.social/add\", {\n    method: \"POST\",\n    headers: { Accept: \"application/json\" },\n    body,\n  }).then(async (res) => {\n    console.log(\"body\", res.body);\n    const _cid = res.body.cid;\n    const _name = body.name;\n    State.update({ img: { uploading: true, cid: _cid, name: _name } });\n    console.log(\"final \", state);\n  });\n\n  console.log(\"final \", state.img);\n};\n\nconst filesOnChange = (files) => {\n  if (files) {\n    State.update({ error_msg: null });\n    uploadFileUpdateState(files[0]);\n  }\n};\n\nconst handleName = (item) => {\n  State.update({ name: item, error_msg: null });\n};\nconst handleProfile = (item) => {\n  State.update({ profileAccount: item, error_msg: null });\n};\nconst handleHouse = (item) => {\n  State.update({ house_intended: item, error_msg: null });\n};\nconst handleIssued1 = (item) => {\n  State.update({ issued1: item, error_msg: null });\n};\nconst handleIssued2 = (item) => {\n  State.update({ issued2: item, error_msg: null });\n};\nconst handleIssued3 = (item) => {\n  State.update({ issued3: item, error_msg: null });\n};\nconst handleAditional = (item) => {\n  State.update({ addition_platform: item, error_msg: null });\n};\nconst addFields = () => {\n  var temp = state.afiliation;\n  let object = {\n    company_name: \"\",\n    start_date: \"\",\n    end_date: \"\",\n    role: \"\",\n  };\n\n  if (temp.length === 6) {\n    return;\n  } else {\n    temp.push(object);\n    State.update({ afiliation: temp, error_msg: null });\n  }\n};\nconst removeField = (index) => {\n  let data = state.afiliation;\n  console.log(data);\n  data.splice(index, 1);\n  console.log(data);\n  State.update({ afiliation: data, error_msg: null });\n};\nconst handleAFFCompanyName = (params) => {\n  let data = state.afiliation;\n  console.log(\"updating the company\", params);\n  data[params.index].company_name = params.event.target.value;\n  State.update({ afiliation: data, error_msg: null });\n};\nconst handleAFFStartdate = (params) => {\n  let data = state.afiliation;\n\n  data[params.index].start_date = params.event.target.value;\n  State.update({ afiliation: data, error_msg: null });\n};\nconst handleAFFEnddate = (params) => {\n  let data = state.afiliation;\n\n  data[params.index].end_date = params.event.target.value;\n  State.update({ afiliation: data, error_msg: null });\n};\nconst handleAFFRole = (params) => {\n  let data = state.afiliation;\n  data[params.index].role = params.event.target.value;\n  State.update({ afiliation: data, error_msg: null });\n};\nconst handleTags = (item) => {\n  State.update({ tags: item.target.value, error_msg: null });\n};\nconst handleDeclaration = (item) => {\n  State.update({ agreement: item.target.checked.toString(), error_msg: null });\n};\n\nconst Self_Nominate = () => {\n  //Validate the Data outPut\n  if (validatedInputs()) {\n    console.log(\"was valid\");\n    //Create a copy\n    let newstate = Object.assign({}, state);\n    //modify the affiliations into a string\n    newstate.afiliation = JSON.stringify(newstate.afiliation);\n    //convert all the newstate into a string\n    const stateAsString = JSON.stringify(newstate);\n    //Storage.privateSet(\"SelfNominate_Payload\", state);\n    //prepare a the final structure\n    const data = ` {\"data\":{ \"${context.accountId}\": {\"nominations\":${stateAsString}} }}`;\n\n    //convert the string into and object\n    const SocialArgs = JSON.parse(data);\n\n    // set the payloads for the batch\n    let SelfNominate_Payload = {\n      contractName: Nominationcontract,\n      methodName: \"self_nominate\",\n      args: {\n        house: state.house_intended,\n        comment: \"hello dokxo\",\n        link: \"OWA.io\",\n      },\n      gas: 300000000000000,\n      deposit: 100000000000000000000000,\n    };\n\n    let Social_Payload = {\n      contractName: Socialcontract,\n      methodName: \"set\",\n      args: SocialArgs,\n      gas: 300000000000000,\n      deposit: 100000000000000000000,\n    };\n\n    // call the methods\n    Near.call([SelfNominate_Payload, Social_Payload]);\n  } else {\n    //The fields are incomplete\n    console.log(\"still invalid\");\n  }\n};\n\nconst Test_Self_Nominate = () => {\n  //Validate the Data outPut\n\n  //Store the state in the local storage\n  Storage.privateSet(\"SelfNominate_Payload\", state);\n\n  // call the smart contract Self nominate method\n  const contract = \"hello.near-examples.near\";\n  Near.call(contract, \"set_greeting\", {\n    greeting: \"holaaa\",\n  });\n};\n\nreturn (\n  <ModalCard>\n    <div\n      style={{\n        display: \"flex\",\n        \"justify-content\": \"center\",\n        \"padding-top\": \"16px\",\n        \"margin-bottom\": \"15px\",\n      }}\n    >\n      <HiddeableWidget>\n        <Widget\n          src={`syi216.near/widget/NDC.nomination.card`}\n          props={{\n            name: state.name,\n            profileAccount: state.profileAccount,\n            issued1: state.issued1,\n            issued2: state.issued2,\n            issued3: state.issued3,\n            house_intended: state.house_intended,\n            afiliation: state.afiliation,\n            tags: state.tags.split(\",\"),\n          }}\n        />\n      </HiddeableWidget>\n    </div>\n    <CardStyled name=\"compose\" class=\"Cardstyled\">\n      <div className=\"d-flex flex-column \">\n        <div className=\"d-flex flex-column\">\n          <H1styled>Self Nominate</H1styled>\n        </div>\n\n        <CardForm name=\"cardform\">\n          <Widget\n            src={`dokxo.near/widget/Compose.Profile`}\n            props={{\n              img: state.img,\n              name: state.name,\n              profileAccount: state.profileAccount,\n              house_intended: state.house_intended,\n\n              filesOnChange: (file) => filesOnChange(file),\n              handleName: (text) => handleName(text),\n              handleProfile: (text) => handleProfile(text),\n              handleHouse: (text) => handleHouse(text),\n            }}\n          />\n          <Widget\n            src={`dokxo.near/widget/Compose.Platform`}\n            props={{\n              issued1: state.issued1,\n              issued2: state.issued2,\n              issued3: state.issued3,\n              addition_platform: state.addition_platform,\n\n              handleIssued1: (file) => handleIssued1(file),\n              handleIssued2: (text) => handleIssued2(text),\n              handleIssued3: (text) => handleIssued3(text),\n              handleAditional: (text) => handleAditional(text),\n            }}\n          />\n          <Widget\n            src={`dokxo.near/widget/Compose.Affiliations`}\n            props={{\n              affiliations: state.afiliation,\n\n              addFields: () => addFields(),\n              removeField: (index) => removeField(index),\n              handleAFFCompanyName: (_params) => handleAFFCompanyName(_params),\n              handleAFFStartdate: (_params) => handleAFFStartdate(_params),\n              handleAFFEnddate: (_params) => handleAFFEnddate(_params),\n              handleAFFRole: (_params) => handleAFFRole(_params),\n            }}\n          />\n\n          <Widget\n            src={`dokxo.near/widget/Compose.TagAndDeclaration`}\n            props={{\n              agreement: state.agreement,\n              tags: state.tags,\n              handleTags: (item) => handleTags(item),\n              handleDeclaration: (item) => handleDeclaration(item),\n            }}\n          />\n          <div\n            class=\"row col-sm-12  mx-0  \"\n            style={{\n              width: \"100%\",\n              \"padding-left\": \"16px\",\n              \"padding-right\": \"16px\",\n            }}\n          >\n            {\n              <div\n                style={{\n                  display: \"flex\",\n                  \"justify-content\": \"start\",\n                }}\n              >\n                {state.error_msg ? (\n                  <label\n                    style={{\n                      display: \"flex\",\n                      \"justify-content\": \"end\",\n                      color: \"#FF0000\",\n                      \"border-bottom\": \"1px solid red\",\n                      \"font-size\": \"14px\",\n                      \"margin-bottom\": \"10px\",\n                      \"margin-top\": \"10px\",\n                    }}\n                  >\n                    {state.error_msg}\n                  </label>\n                ) : (\n                  <></>\n                )}\n              </div>\n            }\n            <Submitcontainer>\n              <CancelBtn onClick={props.onClickCancel}> Cancel </CancelBtn>\n              <SubmitBtn onClick={Self_Nominate}> Submit </SubmitBtn>\n            </Submitcontainer>\n          </div>\n        </CardForm>\n      </div>\n    </CardStyled>\n  </ModalCard>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/dokxo.near/widget/NDC.Nomination.Compose", "fact_widget_deployments_id": "0185e8f300b92cbc78217a5915b77985", "inserted_timestamp": "2000-01-01T00:00:00.000Z", "modified_timestamp": "2000-01-01T00:00:00.000Z", "__row_index": 39}