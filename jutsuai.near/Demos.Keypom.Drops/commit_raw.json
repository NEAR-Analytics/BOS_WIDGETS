{"tx_hash": "37tVxD4qFnUJWwmrrsbiJ9FT1AmzKrN782sSgTpkmA2D", "action_id_social": "5PPCHApq8MXpGagJU7Q3AzUPemnXvLvBZVDnknipL2qN-0-widget", "block_id": 110940504, "block_timestamp": "2024-01-21T07:01:27.987Z", "signer_id": "jutsuai.near", "widget_name": "Demos.Keypom.Drops", "source_code": "const accountId = context.accountId ?? props.accountId;\nconst KEYPOM_CONTRACT = \"v2.keypom.near\";\n// const KEYPOM_CONTRACT = \"v2.keypom.testnet\";\n\nif (!accountId) {\n  return \"Please Sign In!\";\n}\n\nlet dropInfo = Social.getr(`${accountId}/keypomConfig`);\n\nconst [amount, setAmount] = useState(\"0.05\");\nconst [numOfdrops, setNumOfDrops] = useState(\"2\");\nconst [publicKeys, setPublicKeys] = useState([]);\nconst [privKeys, setPrivKeys] = useState([]);\n\nif (dropInfo === null) {\n  console.log(\"dropinfo\", dropInfo);\n  return \"Please wait...\";\n}\n\nif (Storage.privateGet(\"key_list\")) {\n  let obj = Storage.privateGet(\"key_list\");\n  console.log(\"get from storage\", obj);\n  setPublicKeys(obj.publicKeys);\n  setPrivKeys(obj.privKeys);\n}\n\nconst Yocto2Near = (amount) =>\n  new Big(amount).div(new Big(10).pow(24)).toString();\n\nconst Near2Yocto = (amount) =>\n  new Big(amount).times(new Big(10).pow(24)).toFixed().toString();\n\nconst createDrop = () => {\n  const randomKeypairsGeneratorUrl =\n    \"https://aem5mn8nr3.execute-api.us-east-1.amazonaws.com/production/api/v1/generator/keys/\" +\n    numOfdrops;\n  asyncFetch(randomKeypairsGeneratorUrl).then((res) => {\n    let keyPairs = res.body;\n    console.log(\"keypairs:\", res.body);\n    let pubKeys = [];\n    let privKeys = [];\n    keyPairs.forEach((e) => {\n      pubKeys.push(e.pub);\n      privKeys.push(e.priv);\n    });\n\n    setPublicKeys(pubKeys);\n    setPrivKeys(privKeys);\n\n    Storage.privateSet(\"key_list\", obj);\n\n    console.log(\"public keys:\", publicKeys, \"priv keys:\", privKeys);\n\n    Near.call([\n      {\n        contractName: KEYPOM_CONTRACT,\n        methodName: \"create_drop\",\n        gas: \"100000000000000\",\n\n        args: {\n          public_keys: publicKeys,\n          deposit_per_use: Near2Yocto(amount ?? \"0.05\"),\n        },\n        deposit: Near2Yocto(publicKeys.length * amount + 0.3),\n      },\n    ]);\n  });\n};\n\nconst getListLink = () => {\n  let links = \"\";\n  privKeys.map((e, i) => {\n    let data = JSON.stringify({ u: accountId, k: e });\n    //base64 encoded\n    let link =\n      gatewayUrl + \"?k=\" + Buffer.from(data, \"utf-8\").toString(\"base64\");\n    links += link + \"   \\n   \";\n  });\n\n  return links;\n};\n\nreturn (\n  <div className=\"mb-3 container row\">\n    <div className=\"container\">\n      <h2 className=\"mt-3\">Create new linkdrops</h2>\n      <div className=\"input-field mt-5\">\n        Number of linkdrop:\n        <input\n          type=\"number\"\n          min=\"1\"\n          max=\"50\"\n          defaultValue=\"5\"\n          value={numOfdrops}\n          onChange={(e) => setNumOfDrops(e.target.value)}\n        />\n        NEAR per Drop:\n        <input\n          type=\"number\"\n          min=\"0\"\n          step=\"0.01\"\n          defaultValue=\"0.05\"\n          onChange={(e) => setAmount(e.target.value)}\n        />\n        <button\n          className=\"btn btn-lg btn-primary mt-3\"\n          onClick={(e) => createDrop()}\n        >\n          Create\n        </button>\n      </div>\n    </div>\n\n    <div className=\"result-field mt-5 border-top border-3 \">\n      <h2 className=\"mt-3\">Results</h2>\n      {publicKeys.length > 0 && (\n        <>\n          <button\n            className=\"btn btn-sm btn-dark\"\n            onClick={() => clipboard.writeText(JSON.stringify(getListLink()))}\n          >\n            Copy all {publicKeys.length} linkdrop to Clipboard\n          </button>\n        </>\n      )}\n      <br />\n      <small>Make sure to save these links to use later!</small>\n\n      <div className=\"link-list\">\n        {privKeys.length > 0 &&\n          privKeys.map((e, i) => {\n            // let link =\n            //   \"https://testnet.mynearwallet.com/linkdrop/v2.keypom.testnet/\" +\n            //   e;\n            let data = JSON.stringify({ u: accountId, k: e });\n\n            //base64 encoded\n            let link =\n              gatewayUrl +\n              \"?k=\" +\n              Buffer.from(data, \"utf-8\").toString(\"base64\");\n\n            return (\n              <>\n                <div class=\"input-group mb-3\">\n                  <a\n                    class=\"btn btn-outline-secondary\"\n                    target=\"_blank\"\n                    href={link}\n                  >\n                    {\" \"}\n                    Drop #{i + 1}\n                  </a>{\" \"}\n                  <br />\n                  <button\n                    class=\"btn btn-outline-secondary\"\n                    type=\"button\"\n                    onClick={(e) => clipboard.writeText(link)}\n                  >\n                    Copy\n                  </button>\n                </div>\n              </>\n            );\n          })}\n      </div>\n    </div>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/jutsuai.near/widget/Demos.Keypom.Drops", "fact_widget_deployments_id": "0e4173db3f3a388e0319793da1fc6607", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}