{"tx_hash": "BkQ7hjFAJJ9vphHhq7jwd6WR8ku6prZj5F8R36tSTvXV", "action_id_social": "8JSn6wV2n4gN6gGDbaYh4b1upEoT96gnqQxWu11PSfh9-0-widget", "block_id": 97927153, "block_timestamp": "2023-08-02T17:21:07.376Z", "signer_id": "sharddog.near", "widget_name": "UserRep", "source_code": "State.init({\n  wallet: \"\",\n  data: null,\n});\n\nconst getBackgroundColor = (value, goodCondition, warningCondition) => {\n  if (goodCondition(value)) return \"lightgreen\";\n  if (warningCondition(value)) return \"yellow\";\n  return \"pink\";\n};\n\nconst handleWalletChange = (event) => {\n  State.update({ wallet: event.target.value });\n};\n\nfunction fetchData() {\n  console.log(\"getData\");\n  asyncFetch(\"https://auth.shard.dog/wallet/\" + state.wallet, {\n    method: \"GET\",\n  }).then((res) => {\n    if (res.ok) {\n      State.update({ data: res.body });\n    } else {\n      console.log(res);\n    }\n  });\n}\n\nif (!state.data) {\n  return (\n    <div>\n      <h3>NEAR \"Just to get a rep\"</h3>\n      <small>\n        <i>\n          This is a beta of how you could look at scoring users rep based on\n          activity\n        </i>\n      </small>\n      <input\n        value={state.wallet}\n        onChange={handleWalletChange}\n        placeholder=\"Enter wallet name\"\n      />\n      <button onClick={fetchData}>Fetch Data</button>\n    </div>\n  );\n}\n\nconst {\n  creationTimestamp,\n  last30,\n  stakeDeposit,\n  functionCall,\n  sbt,\n  nftTokens,\n  historicCount,\n} = state.data;\n\nconst tableStyle = {\n  border: \"1px solid black\",\n  borderCollapse: \"collapse\",\n  boxShadow: \"0px 0px 10px 2px rgba(0,0,0,0.1)\",\n  width: \"80%\",\n  textAlign: \"center\",\n};\n\nconst cellStyle = {\n  border: \"1px solid black\",\n  padding: \"10px\",\n};\n\nfunction getCreateDate(creationTimestamp) {\n  console.log(creationTimestamp);\n  let created = creationTimestamp / 1000000;\n  console.log(created);\n  let date = new Date(created);\n\n  return date.toString(\"MMM dd yy\");\n}\n\nreturn (\n  <div\n    style={{\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      height: \"100vh\",\n    }}\n  >\n    <h3>NEAR \"Just to get a rep\"</h3>\n    <small>\n      <i>\n        This is a beta of how you could look at scoring users rep based on\n        activity\n      </i>\n    </small>\n    <input\n      value={state.wallet}\n      onChange={handleWalletChange}\n      placeholder=\"Enter wallet name\"\n    />\n    <button onClick={fetchData}>Fetch Data</button>\n    <br />\n\n    <table style={tableStyle}>\n      <thead>\n        <tr style={cellStyle}>\n          <th>Criteria</th>\n          <th>Value</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td>Account Created</td>\n          <td>{getCreateDate(creationTimestamp)}</td>\n        </tr>\n        <tr\n          style={{\n            backgroundColor:\n              last30 === historicCount || Math.abs(last30 - historicCount) <= 10\n                ? \"yellow\"\n                : \"white\",\n          }}\n        >\n          <td>Tx - Last 30 days vs Historic</td>\n          <td>\n            {last30} vs {historicCount}\n          </td>\n        </tr>\n        <tr\n          style={{\n            backgroundColor: getBackgroundColor(\n              sbt,\n              (v) => v > 0,\n              (v) => v === 0\n            ),\n          }}\n        >\n          <td>SBT</td>\n          <td>{sbt}</td>\n        </tr>\n        <tr\n          style={{\n            backgroundColor: getBackgroundColor(\n              nftTokens,\n              (v) => v > 5,\n              (v) => v >= 1 && v <= 4\n            ),\n          }}\n        >\n          <td>NFT Tokens (max 100)</td>\n          <td>{nftTokens}</td>\n        </tr>\n        <tr\n          style={{\n            backgroundColor: getBackgroundColor(\n              stakeDeposit,\n              (v) => v > 1,\n              (v) => v === 1\n            ),\n          }}\n        >\n          <td>Stake Actions (max 50)</td>\n          <td>{stakeDeposit}</td>\n        </tr>\n        <tr\n          style={{\n            backgroundColor: getBackgroundColor(\n              functionCall,\n              (v) => v > 20,\n              (v) => v >= 6 && v <= 20\n            ),\n          }}\n        >\n          <td>Contract Interacts (max 50)</td>\n          <td>{functionCall}</td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/sharddog.near/widget/UserRep", "fact_widget_deployments_id": "1c661e7cd9fd0e68ed92a621430d4003", "inserted_timestamp": "2023-08-02T18:31:20.463Z", "modified_timestamp": "2023-08-02T18:31:20.463Z", "__row_index": 4}