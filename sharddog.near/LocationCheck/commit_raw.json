{"tx_hash": "BxnvWYL9jCw7JPgB8tno336sry1Fzd8UHe1Tmtp8q84g", "action_id_social": "uXTQQ81e2wqsFEGqeEztYf55qDogp7kfygKWSbsPFtp-0-widget", "block_id": 100530246, "block_timestamp": "2023-09-06T16:52:43.894Z", "signer_id": "sharddog.near", "widget_name": "LocationCheck", "source_code": "const latRange = props.latRange;\nconst lonRange = props.lonRange;\nconst locationName = props.locationName;\nconst IPAPI_TOKEN = props.IPAPI_TOKEN;\n\nState.init({\n  locationStatus: \"UNDETERMINED\", // UNDETERMINED, IN_LOCATION, OUTSIDE_LOCATION\n  message: \"\",\n});\n\nconst checkIfInLocation = (lat, lon) => {\n  if (\n    lat >= latRange[0] &&\n    lat <= latRange[1] &&\n    lon >= lonRange[0] &&\n    lon <= lonRange[1]\n  ) {\n    State.update({ locationStatus: \"IN_LOCATION\", message: \"\" });\n  } else {\n    State.update({\n      locationStatus: \"OUTSIDE_LOCATION\",\n      message: `Sorry, you are not in ${locationName}.`,\n    });\n  }\n};\n\nconst requestLocation = () => {\n   console.log(\"Geolocation\"); \n  if (\"geolocation\" in navigator) {\n    console.log(\"Geolocation is available in this browser.\"); \n    navigator.geolocation.getCurrentPosition(\n      (position) => {\n        const lat = position.coords.latitude;\n        const lon = position.coords.longitude;\n        console.log(`Latitude: ${lat}, Longitude: ${lon}`);\n        checkIfInLocation(lat, lon);\n      },\n      (error) => {\n        if (error.code === error.PERMISSION_DENIED) {\n          // Use IP-based geolocation as a fallback\n          fetch(`https://pro.ip-api.com/json/?key=${IPAPI_TOKEN}`)\n            .then((response) => response.json())\n            .then((data) => {\n              const [lat, lon] = data.loc.split(\",\");\n              checkIfInLocation(parseFloat(lat), parseFloat(lon));\n            })\n            .catch((err) => {\n              State.update({ message: \"Unable to determine location.\" });\n            });\n        }\n      }\n    );\n  } else {\n      console.log(\"Geolocation is not available in this browser.\"); \n    State.update({\n      message: \"Geolocation is not supported by this browser.\",\n    });\n  }\n};\n\nreturn (\n  <div>\n    {state.locationStatus === \"UNDETERMINED\" ? (\n      <div id=\"overlay\">\n        <div id=\"location-explainer\">\n          <p>\n            We request your location to ensure you're in {locationName} in order\n            to claim this. We respect your privacy and won't share or save your\n            location.\n          </p>\n          <button onClick={requestLocation}>Allow Location</button>\n          <p>{state.message}</p>\n        </div>\n      </div>\n    ) : (\n      <div id=\"main-content\">\n        {state.locationStatus === \"IN_LOCATION\"  (\n          <p>{state.message}</p>\n        )}\n      </div>\n    )}\n  </div>\n);\n", "metadata": {"image": {}}, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/sharddog.near/widget/LocationCheck", "fact_widget_deployments_id": "2d434f5c5c077f2c28f0c549d6fd03ed", "inserted_timestamp": "2023-09-06T18:44:12.294Z", "modified_timestamp": "2023-09-06T18:44:12.294Z", "__row_index": 1}