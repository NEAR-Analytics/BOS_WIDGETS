{"tx_hash": "HtGcRiQNcqwhqMtrJCktzCT6T5Gqs4xB74RpRwuBUZYY", "action_id_social": "ET7oU4iHqNCR8Ws3nAZY1pN4jbRE97ZTKp7RgfpspE6Z-0-widget", "block_id": 96538181, "block_timestamp": "2023-07-15T15:02:25.106Z", "signer_id": "sharddog.near", "widget_name": "SocialMarkdown", "source_code": "const Embedded = styled.span`\n  white-space: normal;\n`;\n\nconst renderMention =\n  props.renderMention ??\n  ((accountId) => (\n    <Widget\n      key={accountId}\n      src={`mob.near/widget/Account.ProfileInline`}\n      props={{\n        accountId,\n        hideAvatar: true,\n      }}\n    />\n  ));\n\nconst renderWidget =\n  props.renderWidget ??\n  // URL pattern: scheme://authority/path?query#fragment\n  (({ url, scheme, authority, path, query }) => {\n    // widget URL now allows \"bos\" and \"near\" schemes\n    if (url && [\"bos\", \"near\"].includes(scheme) && authority && path) {\n      const location = authority + path;\n      const segments = location.split(\"/\");\n      if (segments && segments.length >= 3) {\n        const src = segments.slice(segments.length - 3).join(\"/\");\n        const props = {\n          ...{ markdown: props.text },\n          ...(query ?? {}),\n        };\n        return (\n          <Embedded className=\"embedded-widget\">\n            <Widget key={url} src={src} props={props} />\n          </Embedded>\n        );\n      }\n    }\n    // If not a valid widget URL, return the original URL\n    return url;\n  });\n\nreturn (\n  <Markdown\n    text={props.text}\n    onMention={renderMention}\n    onWidget={renderWidget}\n  />\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/sharddog.near/widget/SocialMarkdown", "fact_widget_deployments_id": "b7763fbb8e1230774425eb5d5d6134a8", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 8}