{"tx_hash": "DDRm67tN6AABAuF6LzXnodzAXVpFsEbYZjgwPFKUx5xb", "action_id_social": "49Tc17XfZoUhdtspiqGQjcuesMFsFJZTyJaqsGZJTPx7-0-widget", "block_id": 107454649, "block_timestamp": "2023-12-08T18:02:49.139Z", "signer_id": "sharddog.near", "widget_name": "CreateSeries", "source_code": "const UUID = {\n  generate: (template) => {\n    if (typeof template !== \"string\") {\n      template = \"xxxxxxxx-xxxx-xxxx-yxxx-xxxxxxxxxxxx\";\n    }\n    return template.replace(/[xy]/g, (c) => {\n      var r = (Math.random() * 16) | 0;\n      var v = c === \"x\" ? r : (r & 0x3) | 0x8;\n      return v.toString(16);\n    });\n  },\n};\n\nconst { handleCreateProject, defaultProject, buttonChildren, buttonProps } =\n  props;\n\nState.init({\n  error: undefined,\n  project: defaultProject ?? {\n    id: UUID.generate(),\n    logo: undefined,\n    title: undefined,\n    description: undefined,\n    tags: undefined,\n  },\n});\n\nconst wsize = \"100px\";\nconst hsize = \"100px\";\n\nconst update = (k, v) => State.update({ [k]: v });\nconst updateP = (k, v) => update(\"project\", { ...state.project, [k]: v });\n\nconst beforeHandleCreateProject = () => {\n  update(\"error\", undefined);\n  if (!state.project.title) {\n    update(\"error\", \"Title is required\");\n  }\n  if (!state.error) {\n    handleCreateProject(state.project);\n  }\n};\n\nhandleCreateProject = () => {\n  // First task\n  const responseOne = Near.call(\n    \"mint.sharddog.near\",\n    \"create_series\",\n    {\n      series_id: \"220\",\n      metadata: {\n        title: \"NFT Club Web3 Education\",\n        description:\n          \"Welcoming Web3 enthusiasts to the NEAR ecosystem through ShardDog.\",\n        media:\n          \"https://nftstorage.link/ipfs/bafkreid6a3qb635yp4qa4tizhxp7hkllesokh4s7fjc7tq64s4xiubksw4\",\n        extra: \"\",\n        reference: \"\",\n        reference_hash: \"\",\n      },\n    },\n    300,\n    1\n  );\n\n  // Second task\n  const responseTwo = Near.call(\"v1.devsnoopy.near\", \"add_event\", {\n    event: {\n      event_id: state.project.seriesid,\n      event_name: state.project.name,\n      entity_name: \"Snoopy Events\",\n      creator_wallet: \"testuser.near\",\n      event_created_at: 1633036800,\n      event_txn_receipt_id: \"\",\n      launch_date_start: 1633123200,\n      end_date: 1635724800,\n      location: \"Online\",\n      event_type: \"webinar\",\n      campaign_type: \"developer onboarding\",\n      event_description: state.project.description,\n      event_image: state.project.logo,\n    },\n  });\n\n  // Return combined or relevant response\n  return { responseOne, responseTwo };\n};\n\nconst IT = \"nearui.near/widget/Input.ExperimentalText\";\nconst SI = \"nearui.near/widget/Social.ImageUpload\";\nconst IB = \"nearui.near/widget/Input.Button\";\nreturn (\n  <div\n    className=\"p-4 bg-white rounded-4\"\n    style={{\n      fontFamily: \"'Open Sans', sans-serif\",\n      maxWidth: \"500px\",\n      margin: \"auto\",\n      background:\n        \"url('https://my.shard.dog/assets/img/dog_pattern.png'), rgba(251, 249, 245)\",\n      padding: \"20px\",\n      borderRadius: \"8px\",\n      boxShadow: \"0 4px 8px rgba(0,0,0,0.1)\",\n    }}\n  >\n    <div className=\"d-flex flex-column gap-3\" style={{ margin: \"20px 0\" }}>\n      <h3 style={{ textAlign: \"center\", color: \"#333\" }}>\n        {buttonChildren || \"Create Event\"}\n      </h3>\n      <Widget\n        src={IT}\n        props={{\n          label: \"Event ID\",\n          placeholder: \"Event Number\",\n          inputProps: {\n            defaultValue: state.project.seriesid,\n          },\n          onChange: (v) => updateP(\"seriesid\", v),\n        }}\n        style={{\n          width: \"100%\",\n          padding: \"10px\",\n          margin: \"10px 0\",\n          borderRadius: \"4px\",\n          border: \"1px solid #ddd\",\n          boxShadow: \"inset 0 2px 4px rgba(0,0,0,0.06)\",\n        }}\n      />\n      <Widget\n        src={IT}\n        props={{\n          label: \"Title\",\n          placeholder: \"My project\",\n          inputProps: {\n            defaultValue: state.project.title,\n          },\n          onChange: (v) => updateP(\"title\", v),\n        }}\n        style={{\n          width: \"100%\",\n          padding: \"10px\",\n          margin: \"10px 0\",\n          borderRadius: \"4px\",\n          border: \"1px solid #ddd\",\n          boxShadow: \"inset 0 2px 4px rgba(0,0,0,0.06)\",\n        }}\n      />\n      <Widget\n        src={IT}\n        props={{\n          label: \"Description\",\n          placeholder: \"Describe your project\",\n          textarea: true,\n          inputProps: {\n            defaultValue: state.project.description,\n          },\n          onChange: (v) => updateP(\"description\", v),\n        }}\n        style={{\n          width: \"100%\",\n          padding: \"10px\",\n          margin: \"10px 0\",\n          borderRadius: \"4px\",\n          border: \"1px solid #ddd\",\n          boxShadow: \"inset 0 2px 4px rgba(0,0,0,0.06)\",\n        }}\n      />\n      <Widget\n        src={IT}\n        props={{\n          label: \"Metadata (Entity or Collection Name)\",\n          placeholder: \"Additional metadata\",\n          onChange: (v) => updateP(\"tags\", v),\n        }}\n        style={{\n          width: \"100%\",\n          padding: \"10px\",\n          margin: \"10px 0\",\n          borderRadius: \"4px\",\n          border: \"1px solid #ddd\",\n          boxShadow: \"inset 0 2px 4px rgba(0,0,0,0.06)\",\n        }}\n      />\n      <h6 className=\"mb-0\">Image</h6>\n      {state.project.logo && (\n        <img src={state.project.logo} alt=\"\" height={100} width={100} />\n      )}\n      <Widget\n        src={SI}\n        props={{\n          onChange: (v) => updateP(\"logo\", v),\n          value: state.project.logo,\n        }}\n        style={{\n          width: \"100%\",\n          padding: \"15px\",\n          backgroundColor: \"#007bff\",\n          color: \"white\",\n          border: \"none\",\n          borderRadius: \"4px\",\n          cursor: \"pointer\",\n          boxShadow: \"0 4px 8px rgba(0,0,0,0.2)\",\n        }}\n      />\n      <div className=\"text-danger mt-2\">{state.error}</div>\n      <Widget\n        src={IB}\n        props={{\n          children: buttonChildren ?? \"Create Event\",\n          variant: \"success\",\n          onClick: () => beforeHandleCreateProject(),\n        }}\n        style={{\n          width: \"100%\",\n          padding: \"15px\",\n          backgroundColor: \"#007bff\",\n          color: \"white\",\n          border: \"none\",\n          borderRadius: \"4px\",\n          cursor: \"pointer\",\n          boxShadow: \"0 4px 8px rgba(0,0,0,0.2)\",\n        }}\n      />\n    </div>\n    <p>Powered by</p>\n    <Widget\n      src=\"sharddog.near/widget/Image\"\n      title={nft.owner_id}\n      props={{\n        image: {\n          url: \"https://nftstorage.link/ipfs/bafkreif7m4ey7b5ux2ffvhebxy65jntx5mjrlgr2l4vyrcvjj33sn7ojmq\",\n        },\n        style: {\n          width: wsize,\n          height: hsize,\n          objectFit: \"cover\",\n          minWidth: wsize,\n          minHeight: hsize,\n          maxWidth: wsize,\n          maxHeight: hsize,\n        },\n      }}\n    />\n  </div>\n);\n", "metadata": {"image": {}}, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/sharddog.near/widget/CreateSeries", "fact_widget_deployments_id": "2d1e76f351c0ebc3039112a2a8f51a5c", "inserted_timestamp": "2023-12-08T19:51:57.145Z", "modified_timestamp": "2023-12-20T03:22:11.422Z", "__row_index": 3}