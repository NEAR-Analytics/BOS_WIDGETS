{"tx_hash": "J3EGc7paxQY2Fj1ofvbX42KfuXncyCshbu1BCcvpDLTi", "action_id_social": "7PtAaF4ttXoEWY8oLHvpTy8DB9Zi8EzNCuNCXBu6FrNT-0-widget", "block_id": 102078573, "block_timestamp": "2023-09-27T14:56:52.220Z", "signer_id": "sharddog.near", "widget_name": "Image.Minted", "source_code": "const image = props.image;\nconst title = props.title || \"\";\nconst timestamp = props.timestamp || \"\";\nconst className = props.className;\nconst style = props.style;\nconst alt = props.alt;\nconst fallbackUrl = props.fallbackUrl;\nconst thumbnail = props.thumbnail;\n\nif (props.timestamp) {\n  const date = new Date(timestamp);\n  const humanReadableDate = date.toLocaleString();\n  timestamp = humanReadableDate;\n}\n\nState.init({\n  image,\n  modalMediaUrl: null,\n  showModal: false,\n  isVideo: false,\n  isLoading: true,\n});\n\nif (JSON.stringify(image) !== JSON.stringify(state.image)) {\n  State.update({\n    image,\n    imageUrl: null,\n  });\n}\nfunction fetchContentType(url) {\n  try {\n    const segments = url.split(\"/\");\n    const newURL =\n      \"https://\" + segments[segments.length - 1] + \".ipfs.nftstorage.link/\";\n    console.log(newURL);\n    let response = asyncFetch(newURL, { method: \"GET\", mode: \"no-cors\" });\n    if (!response.ok) {\n      console.log(\"Error response:\", response);\n    }\n    console.log(\"response|| \" + JSON.stringify(response.headers));\n    // Get the final URL after redirection\n\n    const contentType = response.headers.get(\"Content-Type\");\n    const isVideo = contentType && contentType.startsWith(\"video/\");\n    State.update({ isVideo, isLoading: false });\n  } catch (error) {\n    console.log(\"Error fetching content type:\", error);\n    State.update({ isLoading: false });\n  }\n}\nfunction toUrl(image) {\n  const url =\n    (image.ipfs_cid\n      ? `https://ipfs.near.social/ipfs/${image.ipfs_cid}`\n      : image.url) || fallbackUrl;\n\n  // Fetch the content type to determine if the file is a video\n  //fetchContentType(url);\n\n  return url;\n}\n\nfetchContentType(toUrl(image));\nconst thumb = (imageUrl) =>\n  thumbnail && imageUrl && !imageUrl.startsWith(\"data:image/\")\n    ? `https://i.near.social/${thumbnail}/${imageUrl}`\n    : imageUrl;\n\nreturn (\n  <>\n    {state.isLoading ? (\n      <div>Loading...</div> // Show a loading placeholder or spinner\n    ) : state.isVideo ? (\n      <video\n        className={className}\n        controls\n        style={style}\n        title={title}\n        src={state.imageUrl ? thumb(state.imageUrl) : thumb(toUrl(image))}\n      />\n    ) : (\n      <img\n        className={className}\n        title={title}\n        onClick={() => {\n          const mediaUrl = state.imageUrl\n            ? thumb(state.imageUrl)\n            : thumb(toUrl(image));\n          State.update({\n            modalMediaUrl: mediaUrl,\n            showModal: true,\n          });\n        }}\n        style={style}\n        src={state.imageUrl ? thumb(state.imageUrl) : thumb(toUrl(image))}\n        alt={alt}\n        onError={() => {\n          if (state.imageUrl !== fallbackUrl) {\n            State.update({\n              imageUrl: fallbackUrl,\n            });\n          }\n        }}\n      />\n    )}\n    {state.showModal && (\n      <div\n        className=\"modal fade show d-block\"\n        onClick={() => State.update({ showModal: false })}\n        tabIndex=\"-1\"\n        role=\"dialog\"\n        aria-hidden={!state.showModal}\n        style={{ backgroundColor: \"rgba(0,0,0,0.8)\" }} // Darkens the screen\n      >\n        <div\n          className=\"modal-dialog modal-lg modal-dialog-centered\" // Center the modal vertically\n          role=\"document\"\n        >\n          <div className=\"modal-content\">\n            <div className=\"modal-body\">\n              {state.isVideo ? (\n                <video\n                  src={state.modalMediaUrl}\n                  className=\"img-fluid\"\n                  controls\n                />\n              ) : (\n                <img\n                  src={state.modalMediaUrl}\n                  className=\"img-fluid\"\n                  alt=\"Modal\"\n                  title={title}\n                />\n              )}\n              <p>\n                Minted by {title} {timestamp}\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    )}\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/sharddog.near/widget/Image.Minted", "fact_widget_deployments_id": "d92507b689988072088a78e42966bb27", "inserted_timestamp": "2023-09-27T16:45:58.244Z", "modified_timestamp": "2023-09-27T16:45:58.244Z", "__row_index": 20}