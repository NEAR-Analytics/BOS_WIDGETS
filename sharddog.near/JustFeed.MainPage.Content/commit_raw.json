{"tx_hash": "C5GcehRaaWDYe5cPxi9V1cg5zmVG5VgLWUg4Z8Wzx6qA", "action_id_social": "83jL8AzX3Wyt4ukZx1186akHLTvRt6iLPK17ynBNNPMw-0-widget", "block_id": 95797691, "block_timestamp": "2023-07-06T00:11:54.137Z", "signer_id": "sharddog.near", "widget_name": "JustFeed.MainPage.Content", "source_code": "const hashtag = props.hashtag;\nconst contractId = \"mint.sharddog.near\";\n\nif (!state || state.hashtag !== hashtag) {\n  State.update({\n    feedIndex: hashtag ? 2 : context.accountId ? 0 : 1,\n    hashtag,\n  });\n}\nconst options = [\n  {\n    title: \"My Feed\",\n    disabled: !context.accountId,\n  },\n  {\n    title: \"All Posts\",\n  },\n];\n\nif (hashtag) {\n  options.push({\n    title: `#${hashtag}`,\n  });\n}\n\nlet accounts = undefined;\n\nif (state.feedIndex === 0) {\n  const graph = Social.keys(`${context.accountId}/graph/follow/*`, \"final\");\n  if (graph !== null) {\n    accounts = Object.keys(graph[context.accountId].graph.follow || {});\n    accounts.push(context.accountId);\n  } else {\n    accounts = [];\n  }\n}\n\nif (!context.accountId) {\n  return (\n    <>\n      <div className=\"tab-content col-sm-10\">\n        <h3>Woof! Need to hold a ShardDog to view feed</h3>\n      </div>\n    </>\n  );\n}\nconst accountId = context.accountId;\n\nconst nftData = Near.view(contractId, \"nft_tokens_for_owner\", {\n  account_id: accountId,\n  limit: 100,\n});\n\nlet holder = false;\n\nnftData.forEach((item) => {\n  if (item.series_id === 19) {\n    holder = true;\n    return true;\n  }\n});\n\nconst nftDataCount = Near.view(contractId, \"nft_supply_for_owner\", {\n  account_id: accountId,\n  limit: 100,\n});\n\nconst Greeting = () => {\n  const currentTime = new Date();\n  const currentHour = currentTime.getHours();\n  let greeting;\n\n  if (currentHour < 12) {\n    greeting = \"Good morning\";\n  } else if (currentHour < 18) {\n    greeting = \"Good afternoon\";\n  } else {\n    greeting = \"Good evening\";\n  }\n\n  return <span>{greeting}</span>;\n};\n\nif (nftDataCount > 0) {\n  return (\n    <>\n      {context.accountId && (\n        <div className=\"mb-3\">\n          <Widget src=\"sharddog.near/widget/Posts.Compose\" props={{}} />\n        </div>\n      )}\n      <p>\n        <Greeting />, you currently hold <b>{nftDataCount} </b> ShardDogs\n      </p>\n      <ul className=\"nav nav-pills mb-12\">\n        <li className=\"nav-item col-6 mb-6\">\n          <button\n            className={`nav-link ${state.feedIndex === 0 ? \"active\" : \"\"} ${\n              options[0].disabled ? \"disabled\" : \"\"\n            }`}\n            aria-disabled={!!options[0].disabled}\n            onClick={() =>\n              !options[0].disabled && State.update({ feedIndex: 0 })\n            }\n          >\n            {options[0].title}\n          </button>\n        </li>\n        <li className=\"nav-item col-6 mb-6\">\n          <button\n            className={`nav-link ${state.feedIndex === 1 ? \"active\" : \"\"} ${\n              options[1].disabled ? \"disabled\" : \"\"\n            }`}\n            aria-disabled={!!options[1].disabled}\n            onClick={() =>\n              !options[1].disabled && State.update({ feedIndex: 1 })\n            }\n          >\n            {options[1].title}\n          </button>\n        </li>\n      </ul>\n      {state.feedIndex === 2 ? (\n        <Widget src=\"mob.near/widget/Hashtag.Feed\" props={{ hashtag }} />\n      ) : (\n        <Widget src=\"mob.near/widget/MainPage.Feed.Beta\" props={{ accounts }} />\n      )}\n    </>\n  );\n} else {\n  return (\n    <>\n      <div className=\"tab-content col-sm-10\">\n        <h3>Woof! Need to hold a ShardDog to view feed</h3>\n      </div>\n    </>\n  );\n}\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/sharddog.near/widget/JustFeed.MainPage.Content", "fact_widget_deployments_id": "5fa4af8c58645b34833721fc29bb7b07", "inserted_timestamp": "2000-01-01T00:00:00.000Z", "modified_timestamp": "2000-01-01T00:00:00.000Z", "__row_index": 22}