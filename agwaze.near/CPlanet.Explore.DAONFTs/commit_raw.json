{"tx_hash": "96Wrak1g7xHVykKyWzfs6cEgYawvx5Y6TSde4f7LLV5s", "action_id_social": "8oVH7SPv8G3RSGBK75uygZGT6wGKu9kLYyFeewjrL1Mp-0-widget", "block_id": 105100107, "block_timestamp": "2023-11-06T21:20:48.225Z", "signer_id": "agwaze.near", "widget_name": "CPlanet.Explore.DAONFTs", "source_code": "const [nftState, setNftState] = useState([]);\n\nconst fetchDaos = () => {\n  const res = fetch(\n    \"https://raw.githubusercontent.com/GenaDrop/genadrop-bos-widgets/main/data/cdao-mintbase-contracts.json\"\n  );\n  if (!res.ok) return;\n  const data = JSON.parse(res.body).daoNftContracts;\n  if (data.length) {\n    const response2 = fetch(\"https://graph.mintbase.xyz/mainnet\", {\n      method: \"POST\",\n      headers: {\n        \"mb-api-key\": \"anon\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        query: `query MyQuery {\n  mb_views_nft_tokens(\n    where: {nft_contract: {id: {_in: [\"marmaj.mintbase1.near\"]}}}\n  limit: 50) {\n        media \n        owner\n        token_id\n        nft_contract_id\n        description\n        title\n        listings {\n            price\n            unlisted_at\n            listed_by\n            }\n      }\n}\n`,\n      }),\n    });\n    if (response2.ok) {\n      const tokens = response2.body.data.mb_views_nft_tokens;\n      setNftState(tokens);\n    }\n  }\n};\n\nconst logo =\n  \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTrJuxjGxj4QmyreE6ix4ygqm5pK9Nn_rdc8Ndw6lmJcd0SSnm2zBIc2xJ_My1V0WmK2zg&usqp=CAU\";\n\nfetchDaos();\n\nconst Root = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    gap: 30px;\n    align-items: center;\n    justify-content: center;\n    margin-top: 40px;\n`;\n\nreturn (\n  <Root>\n    {nftState.length &&\n      nftState.map((data, index) => (\n        <Widget\n          props={{\n            title: data.title,\n            description: data.description,\n            image: data.media,\n            owner: data.owner,\n            chainState: \"near\",\n            logo: logo,\n            onButtonClick: () =>\n              props.update({\n                tab: \"singleNFT\",\n                contractId: data.nft_contract_id,\n                tokenId: data.token_id,\n                chainState: \"near\",\n              }),\n            price: data.listings.length\n              ? (data.listings.length / 1000000000000000000000000).toFixed(2)\n              : null,\n            isListed: data.listed ? \"LISTED\" : \"NOT LISTED\",\n            tokenId: data.token_id,\n            contractId: data.nft_contract_id,\n          }}\n          src=\"agwaze.near/widget/CPlanet.NFTCard.index\"\n        />\n      ))}\n  </Root>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/agwaze.near/widget/CPlanet.Explore.DAONFTs", "fact_widget_deployments_id": "456566e319d9d1ede0b0d5867d87785f", "inserted_timestamp": "2023-11-06T23:23:36.878Z", "modified_timestamp": "2023-11-06T23:23:36.878Z", "__row_index": 3}