{"tx_hash": "EdwWLRiPehgSindsE5gZXkB3nVkqiyigWjgqAjnkbTBB", "action_id_social": "B8VeLxpEApCBf6x4HHUWyP468m9Je3TKnboZ7Rg7sWzG-0-widget", "block_id": 98579935, "block_timestamp": "2023-08-11T17:18:45.586Z", "signer_id": "agwaze.near", "widget_name": "GenaDrop.NFTDetails", "source_code": "const nft = props.nft ?? {\n  contractId: props.contractId,\n  tokenId: props.tokenId,\n};\n\nconst contractId = nft.contractId;\nconst tokenId = nft.tokenId;\nconst className = props.className ?? \"img-fluid\";\nconst style = props.style;\nconst alt = props.alt;\nconst thumbnail = props.thumbnail;\nconst fallbackUrl = props.fallbackUrl;\nconst loadingUrl =\n  props.loadingUrl ??\n  \"https://ipfs.near.social/ipfs/bafkreidoxgv2w7kmzurdnmflegkthgzaclgwpiccgztpkfdkfzb4265zuu\";\n\nState.init({\n  contractId,\n  tokenId,\n  description: \"\",\n  title: \"\",\n  owner: \"\",\n  imageUrl: null,\n});\n\nconst nftMetadata =\n  nft.contractMetadata ?? Near.view(contractId, \"nft_metadata\");\nconst tokenMetadata =\n  nft.tokenMetadata ??\n  Near.view(contractId, \"nft_token\", {\n    token_id: tokenId,\n  }).metadata;\n\nif (contractId !== state.contractId || tokenId !== tokenId) {\n  State.update({\n    contractId,\n    tokenId,\n    imageUrl: null,\n  });\n}\n\nlet imageUrl = null;\n\nfunction fetchTokens() {\n  asyncFetch(\"https://graph.mintbase.xyz/mainnet\", {\n    method: \"POST\",\n    headers: {\n      \"mb-api-key\": \"omni-site\",\n      \"Content-Type\": \"application/json\",\n      \"x-hasura-role\": \"anonymous\",\n    },\n    body: JSON.stringify({\n      query: `\n          query MyQuery {\n              mb_views_nft_tokens(\n              where: { nft_contract_id: { _eq: \"${contractId}\" }, token_id: {_eq: \"${tokenId}\"}}\n              order_by: {minted_timestamp: desc}\n            ) {\n                attributes {\n                    attribute_display_type\n                    attribute_value\n                }\n                media \n                owner\n                token_id\n                description\n                title\n                listings {\n                    accepted_at\n                    accepted_offer_id\n                    invalidated_at\n                    metadata_id\n                    price\n                    unlisted_at\n                    listed_by\n                }\n            }\n          }\n        `,\n    }),\n  }).then((res) => {\n    if (res.ok) {\n      const tokens = res.body.data.mb_views_nft_tokens;\n      const token = tokens[0];\n      console.log(token);\n      State.update({\n        description: token.description,\n        owner: token.owner,\n        title: token.title,\n      });\n      if (tokens.length > 0) {\n        State.update({\n          tokens: [...state.tokens, ...tokens],\n          offset: state.offset + limit,\n\n          hasMore: true,\n        });\n      } else {\n        State.update({\n          hasMore: false,\n        });\n      }\n    }\n  });\n}\n\nfetchTokens();\n\nconsole.log(title);\n\nif (nftMetadata && tokenMetadata) {\n  let tokenMedia = tokenMetadata.media || \"\";\n\n  imageUrl =\n    tokenMedia.startsWith(\"https://\") ||\n    tokenMedia.startsWith(\"http://\") ||\n    tokenMedia.startsWith(\"data:image\")\n      ? tokenMedia\n      : nftMetadata.base_uri\n      ? `${nftMetadata.base_uri}/${tokenMedia}`\n      : tokenMedia.startsWith(\"Qm\") || tokenMedia.startsWith(\"ba\")\n      ? `https://ipfs.near.social/ipfs/${tokenMedia}`\n      : tokenMedia;\n\n  if (!tokenMedia && tokenMetadata.reference) {\n    if (\n      nftMetadata.base_uri === \"https://arweave.net\" &&\n      !tokenMetadata.reference.startsWith(\"https://\")\n    ) {\n      const res = fetch(`${nftMetadata.base_uri}/${tokenMetadata.reference}`);\n      imageUrl = res.body.media;\n    } else if (\n      tokenMetadata.reference.startsWith(\"https://\") ||\n      tokenMetadata.reference.startsWith(\"http://\")\n    ) {\n      const res = fetch(tokenMetadata.reference);\n      imageUrl = JSON.parse(res.body).media;\n    } else if (tokenMetadata.reference.startsWith(\"ar://\")) {\n      const res = fetch(\n        `${\"https://arweave.net\"}/${tokenMetadata.reference.split(\"//\")[1]}`\n      );\n      imageUrl = JSON.parse(res.body).media;\n    }\n  }\n\n  if (!imageUrl) {\n    imageUrl = false;\n  }\n}\n\nconst replaceIpfs = (imageUrl) => {\n  if (state.oldUrl !== imageUrl && imageUrl) {\n    const match = rex.exec(imageUrl);\n    if (match) {\n      const newImageUrl = `https://ipfs.near.social/ipfs/${match[1]}${\n        match[2] || \"\"\n      }`;\n      if (newImageUrl !== imageUrl) {\n        State.update({\n          oldUrl: imageUrl,\n          imageUrl: newImageUrl,\n        });\n        return;\n      }\n    }\n  }\n  if (state.imageUrl !== false) {\n    State.update({\n      imageUrl: false,\n    });\n  }\n};\n\nconst thumb = (imageUrl) =>\n  thumbnail && imageUrl && !imageUrl.startsWith(\"data:image/\")\n    ? `https://i.near.social/${thumbnail}/${imageUrl}`\n    : imageUrl;\n\nconst img = state.imageUrl !== null ? state.imageUrl : imageUrl;\nconst src = img !== false ? img : fallbackUrl;\n\nconst Root = styled.div`\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    padding: 0;\n    align-items: center;\n    justify-content: center;\n`;\nconst MainContainer = styled.div`\n    padding: 30px;\n    height: auto;\n    max-width: 1300px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;\n\nconst TopSection = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  justify-content: center;\n  width: 100%;\n  @media screen and (max-width: 600px) {\n    justify-content: center;\n    align-items: center;\n  }\n`;\n\nconst TopImageContainer = styled.div`\n  padding: 1em;\n  background: #ffffff;\n    width: 50%;\n    min-width: 355px;\n  border: 2px solid #cacdd5;\n  margin-right: 20px;\n  box-shadow: 2px 7px 22px rgba(28, 27, 28, 0.1);\n  border-radius: 0.7em;\n  &>img {\n    width: 100%;\n    max-height: 548px;\n  }\n`;\n\nconst HeaderText = styled.h1`\n  font-size: 1.5rem;\n`;\n\nconst PriceArea = styled.div`\n  display: flex;\n  align-items: center;\n  color: #0d99ff;\n  &>*{\n  margin: 0px;\n  padding: 0px;\n  }\n  &>h6{\n    font-weight: 700;\n    margin-left: 5px;\n    margin-top: 4px;\n    margin-right: 3px;\n    font-size: 1.3rem;\n  }\n  &>span{\n  font-size: 1.2rem;\n  margin: 0px;\n  }\n`;\n\nconst PriceBucket = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: flex-end;\n  justify-content: space-between;\n    margin-top: 30px;\n  width: 100%;\n`;\n\nconst RightSection = styled.div`\n    width: 46%;\n    min-width: 350px;\n    margin-left: 10px;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-end;\n    margin-right: 10px;\n`;\n\nconst Description = styled.div`\n     width: 100%;\n    border-radius: 1em;\n    background: #ffffff;\n    border: 2px solid #eeeff2;\n    padding: 1em;\n    margin-top: 40px;\n    box-shadow: 2px 7px 22px rgba(28, 27, 28, 0.1);\n    &>h6{\n        font-weight: 600;\n        font-size: 1.5rem;\n    }\n    \n`;\n\nconst AttributeContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    align-items: center;\n    justify-content: space-between;\n    width: 100%;\n`;\n\nconst Attribute = styled.div`\n    display: flex;\n    align-items: flex-start;\n    justify-content: space-between;\n    padding: 0.5em;\n    border-radius: 0.5em;\n    width: 206px;\n    background: #fafafb;\n    margin-bottom: 20px;\n    border: 1px solid #86ccff;\n    border-radius: 10.6849px;\n    &>*span {\n        padding: 0;\n        color: #b2b7c2;\n    }\n`;\n\nconst TransactionTable = styled.div`\n     width: 100%;\n  max-width: 70%;\n  background: #ffffff;\n  border: 2px solid #eeeff2;\n  box-shadow: 2px 7px 22px rgba(28, 27, 28, 0.1);\n  border-radius: 16px;\n  margin-bottom: 40px;\n`;\n\nconst TableHeader = styled.div`\n    width: 100%;\n  padding: 0.5em;\n  font-weight: 600;\n  font-size: 1.5rem;\n  margin-bottom: 0.5em;\n  display: flex;\n  justify-content: flex-start;\n  gap: 1em;\n  background: #f5f6f7;\n  border-radius: 14px 14px 0px 0px;\n  &>h1 {\n    font-size: 24px;\n  }\n`;\n\nconst TableBody = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    padding: 0.5em;\n    justify-content: space-between;\n    border-bottom: 1px solid #dde1e6;\n`;\n\nconst RowType = styled.div`\n     display: inline-flex;\n  align-items: center;\n  justify-content: flex-start;\n  gap: 0.5em;\n  font-size: 0.75rem;\n  padding: 0.25em 1em;\n  border-radius: 0.7em;\n  border: 1px solid #a4a9b6;\n`;\n\nconst RowBody = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    margin-top: 10px;\n    padding-left: 7px;\n    width: 100%;\n    justify-content: space-between;\n    p {\n        margin: 0;\n        border-bottom: 1px solid #e5e8eb;\n        font-size: 12px;\n        min-width: 100px;\n        text-align: center;\n    }\n    span {\n        font-size: 12px;\n    }\n`;\n\nconst MintDetails = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-between;\n    color: #525c76;\n    &>span {\n        font-size: 14px;\n    }\n    &>a {\n        cursor: pointer;\n    }\n`;\n\nconst HandleList = () => {\n  console.log(props.singleNftProps);\n};\n\nreturn (\n  <Root>\n    <MainContainer>\n      <TopSection>\n        <TopImageContainer>\n          <HeaderText>{state.title || \"AI Sunset\"}</HeaderText>\n          <img\n            src={\n              src ||\n              \"https://genadrop.mypinata.cloud/ipfs/QmZbtU8RnMymJAJRpTriZgDXVeeCpm5RyXMJNquGoVc4Rb\"\n            }\n            alt=\"NFT\"\n            width=\"100%\"\n            height=\"100%\"\n            className=\"rounded-3\"\n          />\n          <div\n            style={{\n              display: \"flex\",\n              marginTop: \"10px\",\n              justifyContent: \"space-between\",\n            }}\n          >\n            <p\n              style={{\n                marginBottom: \"0.5em\",\n                fontSize: \"0.85rem\",\n                color: \"#0d99ff\",\n              }}\n            >\n              Created by\n            </p>\n            <span style={{ fontSize: \"0.9rem\", fontWeight: 600 }}>\n              {state.owner.length > 12\n                ? state.owner.slice(0, 12) + \"...\"\n                : state.owner ||\n                  \"genadrop-contract.nftgen.near\".slice(0, 12) + \"...\" + \"near\"}\n            </span>\n          </div>\n        </TopImageContainer>\n        <RightSection>\n          <PriceBucket>\n            <div>\n              <p style={{ color: \"#b2b7c2\", marginBottom: 0 }}>CURRENT PRICE</p>\n              <PriceArea>\n                <Widget src=\"agwaze.near/widget/GenaDrop.NearLogo\" />\n                <h6>\n                  {`${(\n                    props.singleNftProps.nft_state_lists[0].list_price ||\n                    0 / 1000000000000000000000000\n                  ).toFixed(2)}`}\n                </h6>\n                <span>{` ($${(\n                  (props.singleNftProps.nft_state_lists[0].list_price ||\n                    0 / 1000000000000000000000000) * 1.56\n                ).toFixed(2)})`}</span>\n              </PriceArea>\n            </div>\n            <div onClick={() => HandleList()}>\n              {props.singleNftProps.nft_state_lists[0].listed ? (\n                <button\n                  style={{\n                    backgroundColor: \"#525c76\",\n                    borderColor: \"#525c76\",\n                    cursor: \"not-allowed\",\n                  }}\n                >\n                  Listed\n                </button>\n              ) : state.owner ? (\n                <button>List</button>\n              ) : (\n                <button\n                  style={{\n                    backgroundColor: \"#525c76\",\n                    borderColor: \"#525c76\",\n                    cursor: \"not-allowed\",\n                  }}\n                >\n                  Not Listed\n                </button>\n              )}\n            </div>\n          </PriceBucket>\n          <Description>\n            <h6>Description</h6>\n            <span>{state.description || \"Ai generated sunset cliffs\"}</span>\n          </Description>\n          <Description>\n            <h6>Attributes</h6>\n            <AttributeContainer>\n              <Attribute>\n                <div>\n                  <span style={{ color: \"#b2b7c2\" }}>File Type</span>\n                  <p style={{ marginTop: \"10px\" }}>PNG</p>\n                </div>\n                <div>\n                  <span style={{ color: \"#b2b7c2\" }}>Rarity</span>\n                  <p style={{ marginTop: \"10px\" }}>1%</p>\n                </div>\n              </Attribute>\n              <Attribute>\n                <div>\n                  <span style={{ color: \"#b2b7c2\" }}>File Type</span>\n                  <p style={{ marginTop: \"10px\" }}>PNG</p>\n                </div>\n                <div>\n                  <span style={{ color: \"#b2b7c2\" }}>Rarity</span>\n                  <p style={{ marginTop: \"10px\" }}>1%</p>\n                </div>\n              </Attribute>\n            </AttributeContainer>\n          </Description>\n          <Description>\n            <h6>Details</h6>\n            <MintDetails>\n              <span>Mint Address</span>\n              <a\n                target=\"_blank\"\n                href={`https://explorer.near.org/?query=${\n                  state.owner || \"genadrop-contract.nftgen.near\"\n                }`}\n              >\n                {state.owner.length > 8\n                  ? state.owner.slice(0, 8) + \"...\" + \"near\"\n                  : state.owner ||\n                    \"genadrop-contract.nftgen.near\".slice(0, 8) +\n                      \"...\" +\n                      \"near\"}\n              </a>\n            </MintDetails>\n          </Description>\n        </RightSection>\n      </TopSection>\n    </MainContainer>\n    <Widget src=\"jgodwill.near/widget/GenaDrop.Footer\" />\n  </Root>\n);\n", "metadata": {"platform": "jutsu.ai"}, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/agwaze.near/widget/GenaDrop.NFTDetails", "fact_widget_deployments_id": "11a4bba7aba4f5bbfcb88444f8131594", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 13}