{"tx_hash": "6A6fnvjeoyfvjNMcqhNjHBksoDP1opb4TEgnZGhyeZVW", "action_id_social": "tvLsdEg6PioitZU6d4ioHg4GG9Gr8zrChXppkCmakcv-0-widget", "block_id": 104681125, "block_timestamp": "2023-11-01T10:50:58.769Z", "signer_id": "agwaze.near", "widget_name": "CPlanet.DAO.ProfileNFTs", "source_code": "const Root = styled.div`\n    \n`;\n\nconst Cards = styled.div`\n    display: flex;\n    flex-direction: row;\n    gap: 18px;\n    margin-top: 32px;\n    flex-wrap: wrap;\n    width: 100%;\n    justify-content: center;\n`;\n\nconst fetchStoreFrontData = (owner, contractId) => {\n  const response2 = fetch(\"https://graph.mintbase.xyz/mainnet\", {\n    method: \"POST\",\n    headers: {\n      \"mb-api-key\": \"anon\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      query: `query MyQuery {\n  mb_views_nft_metadata_unburned(\n    where: {nft_contract: {id: {_eq: \"${contractId}\"}}}\n    offset: 0\n    order_by: {minted_timestamp: desc}\n  ) {\n    createdAt: minted_timestamp\n    listed: price\n    media\n    storeId: nft_contract_id\n    metadataId: metadata_id\n    title\n    description\n  }\n  mb_views_nft_metadata_unburned_aggregate(\n    where: {nft_contract: {id: {_eq: \"${contractId}\"}}}\n  ) {\n    aggregate {\n      count\n    }\n  }\n}\n`,\n    }),\n  });\n\n  State.update({\n    storeContracts: response2.body.data.mb_views_nft_metadata_unburned,\n    storeNftsCount:\n      response2.body.data.mb_views_nft_metadata_unburned_aggregate.aggregate\n        .count,\n    ownerId: owner,\n  });\n  console.log(\"running2\", state.storeContracts);\n};\n\nfetchStoreFrontData(\n  props.ownerId,\n  props.daoId\n);\n\nconst storeNfts = state.storeContracts;\n\nreturn (\n  <Root>\n    <Cards>\n      {storeNfts &&\n        storeNfts.map((data, index) => (\n          <div key={index}>\n            <Widget\n              props={{\n                title: data.title,\n                description: data.description,\n                image: data.media,\n\n                price: data.listed,\n                owner: state.ownerId,\n                price: data.listed\n                  ? (data.listed / 1000000000000000000000000).toFixed(2)\n                  : null,\n                isListed: data.listed ? \"LISTED\" : \"NOT LISTED\",\n                tokenId: data.token_id,\n                contractId: data.storeId,\n                metadataId: data.metadataId,\n              }}\n              src=\"jgodwill.near/widget/Mintbase.NFTCard.index\"\n            />\n          </div>\n        ))}\n    </Cards>\n  </Root>\n);\n", "metadata": {"platform": "jutsu.ai"}, "branch": {"draft": null}, "widget_modules_used": null, "widget_url": "https://near.social/#/agwaze.near/widget/CPlanet.DAO.ProfileNFTs", "fact_widget_deployments_id": "2f8a7b73e5fb21680f27b43aa9e9c08d", "inserted_timestamp": "2023-11-01T12:45:25.476Z", "modified_timestamp": "2023-11-01T12:45:25.476Z", "__row_index": 2}