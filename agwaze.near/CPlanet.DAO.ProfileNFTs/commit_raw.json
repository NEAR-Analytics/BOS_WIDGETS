{"tx_hash": "5HKW7ruKq83TfBCWDYyrRFbSZGY9w9QszWiuSTbQBaV6", "action_id_social": "DRUv1uy36qBS3YpPGKDcc6UUaQ99FGzNyetUFWrEXCm3-0-widget", "block_id": 104787046, "block_timestamp": "2023-11-02T20:04:05.138Z", "signer_id": "agwaze.near", "widget_name": "CPlanet.DAO.ProfileNFTs", "source_code": "const Root = styled.div`\n    .noNfts {\n        span {\n            overflow: hidden;\n            color: #B0B0B0;\n            text-align: center;\n            text-overflow: ellipsis;\n            white-space: nowrap;\n            font-family: Helvetica Neue;\n            font-size: 16px;\n            font-style: normal;\n            font-weight: 400;\n            line-height: 148%; /* 23.68px */\n        }\n    }\n`;\n\nconst Cards = styled.div`\n    display: flex;\n    flex-direction: row;\n    gap: 18px;\n    margin-top: 32px;\n    flex-wrap: wrap;\n    width: 100%;\n    justify-content: center;\n`;\n\nconst fetchStoreFrontData = (owner, contractId) => {\n  const response2 = fetch(\"https://graph.mintbase.xyz/mainnet\", {\n    method: \"POST\",\n    headers: {\n      \"mb-api-key\": \"anon\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      query: `query MyQuery {\n  mb_views_nft_tokens(\n    where: {owner: {_eq: ${contractId}}}\n    offset: 0\n    order_by: {minted_timestamp: desc}\n  ) {\n   minted_timestamp\n    nft_contract_id\n    title\n    listings {\n      price\n    }\n    metadata_id\n    description\n    media\n    last_transfer_receipt_id\n  }\n}\n`,\n    }),\n  });\n\n  console.log(response2)\n\n  State.update({\n    storeContracts: response2.body.data.mb_views_nft_tokens,\n    \n  });\n  console.log(\"running2\", state.storeContracts);\n};\n\nfetchStoreFrontData(props.ownerId, props.daoId);\n\nconst storeNfts = state.storeContracts;\n\nreturn (\n  <Root>\n    <Cards>\n      {storeNfts.length ? (\n        storeNfts.map((data, index) => (\n          <div key={index}>\n            <Widget\n              props={{\n                title: data.title,\n                description: data.description,\n                image: data.media,\n\n                price: data.listed,\n                owner: state.ownerId,\n                price: data.listed\n                  ? (data.listed / 1000000000000000000000000).toFixed(2)\n                  : null,\n                isListed: data.listed ? \"LISTED\" : \"NOT LISTED\",\n                tokenId: data.token_id,\n                contractId: data.storeId,\n                metadataId: data.metadataId,\n              }}\n              src=\"jgodwill.near/widget/Mintbase.NFTCard.index\"\n            />\n          </div>\n        ))\n      ) : (\n        <div className=\"noNfts\">\n          <span>No NFTs to display right now</span>\n        </div>\n      )}\n    </Cards>\n  </Root>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/agwaze.near/widget/CPlanet.DAO.ProfileNFTs", "fact_widget_deployments_id": "22221afcbbd7c154bbac520b8dcc46ae", "inserted_timestamp": "2023-11-02T21:52:28.928Z", "modified_timestamp": "2023-11-02T21:52:28.928Z", "__row_index": 5}