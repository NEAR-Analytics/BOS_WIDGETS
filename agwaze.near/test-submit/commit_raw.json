{"tx_hash": "AnR7tiAxiawBQSndbnBpM98ToB7s8txf7FDvXehVGNyz", "action_id_social": "3Dwdn9gVCrP1eoetK2CohgtzcXJYUgpSDuLgMMKbCUbw-0-widget", "block_id": 106354280, "block_timestamp": "2023-11-23T12:40:13.109Z", "signer_id": "agwaze.near", "widget_name": "test-submit", "source_code": "const ArtGalleryContainer = styled.div`\n  text-align: center;\n  margin-bottom: 20px;\n`;\n\nconst ArtCardContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap; /* Allow the art cards to wrap to the next row */\n  justify-content: center; /* Center the art cards horizontally */\n  gap: 20px;\n`;\n\nconst ArtCard = styled.div`\n  background-color: #fff;\n  border: 1px solid #ccc;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  padding: 16px;\n  text-align: center;\n  width: 300px; /* Set a fixed width for each art card */\n\n  h2 {\n    font-size: 1.5rem;\n    margin: 0;\n  }\n\n  p {\n    color: #777;\n    margin: 8px 0;\n  }\n\n  img {\n    max-width: 100%;\n    max-height: 100%; /* Ensure images do not exceed their container */\n    object-fit: contain; /* Maintain aspect ratio while fitting */\n    border-radius: 8px;\n  }\n\n  button {\n    margin-top: auto; /* Push the button to the bottom */\n  }\n}`;\n\nconst VoteButton = styled.button`\n  background-color: #007BFF;\n  color: #fff;\n  border: none;\n  border-radius: 4px;\n  padding: 8px 16px;\n  cursor: pointer;\n  transition: background-color 0.3s;\n\n  &:hover {\n    background-color: #0056b3;\n  }\n`;\n\nconst SubmitArtButton = styled.button`\n  background-color: #28a745;\n  color: #fff;\n  border: none;\n  border-radius: 4px;\n  padding: 8px 16px;\n  margin: 5px 5px;\n  cursor: pointer;\n  transition: background-color 0.3s;\n\n  &:hover {\n    background-color: #218838;\n  }\n`;\n\nlet arts = [];\nif (!arts) {\n  return <p>Loading</p>;\n}\nconst contest_id = props.contests;\n\nconst contests =\n  Near.view(\"cdao-v2.genadrop.near\", \"get_contest_arts\", {\n    contest_id: 1,\n    subscribe: true,\n  }) || [];\n\nconsole.log(contests);\n\nconst handleVoteClick = (owner) => {\n  Near.call(\n    \"cdao.genadrop.near\",\n    \"vote\",\n    {\n      submission_owner: owner,\n      contest_id: contest_id,\n    },\n    \"\",\n    \"10000000000000000000000\"\n  );\n};\n\nconst handleArtSelection = (nft_data) => {\n  console.log(\"details retrieved\", nft_data);\n  Near.call(\n    \"cdao.genadrop.near\",\n    \"submit_art\",\n    {\n      nft_contract_id: nft_data.contractId,\n      token_id: nft_data.tokenId.toString(),\n      contest_id: 1,\n    },\n    \"75000000000000\",\n    \"10000000000000000000000\"\n  );\n};\n\nconst toggleArtSelection = () => {\n  console.log(\"Long game....\", state.showArtSelection);\n  State.update({\n    showArtSelection: !state.showArtSelection,\n  });\n};\n\nreturn (\n  <ArtGalleryContainer>\n    <SubmitArtButton onClick={toggleArtSelection}>\n      {state.showArtSelection ? \"close arts selection\" : \"Make Art Entry\"}\n    </SubmitArtButton>\n    {state.showArtSelection && (\n      <Widget\n        src=\"sainthiago.near/widget/nft-selector\"\n        props={{ accountId: context.accountId, onChange: handleArtSelection }}\n      />\n    )}\n    <ArtCardContainer>\n      {contests.map((art, index) => (\n        <ArtCard key={index}>\n          <img\n            src={\n              art[1].image_url ||\n              \"https://ipfs.near.social/ipfs/bafkreihdiy3ec4epkkx7wc4wevssruen6b7f3oep5ylicnpnyyqzayvcry\"\n            }\n            alt={art[1].title}\n          />\n          <h2>{art[1].title}</h2>\n          <p>By {art[0]}</p>\n          <p>{art[1].votes} Votes</p>\n          <VoteButton onClick={() => handleVoteClick(contest_id, art[0])}>\n            Vote\n          </VoteButton>\n        </ArtCard>\n      ))}\n    </ArtCardContainer>\n  </ArtGalleryContainer>\n);\n", "metadata": {"platform": "jutsu.ai"}, "branch": {"draft": null}, "widget_modules_used": null, "widget_url": "https://near.social/#/agwaze.near/widget/test-submit", "fact_widget_deployments_id": "7447849b2b546760189f1afb7034eb6b", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}