{"tx_hash": "HPLkDVCL16Vvadc8Mxbi9Ff7SneY5VDfHdhfhroKXCfy", "action_id_social": "135RaWoiYgsmVow18JRCyGqbMCBzYymgNoc88BtGN4E3-0-widget", "block_id": 99954575, "block_timestamp": "2023-08-29T21:14:08.399Z", "signer_id": "evangel.near", "widget_name": "test1", "source_code": "React, { useState };\r\nState.init({\r\n  answer: \"\",\r\n  showOptions: false,\r\n  answer1: \"\",\r\n  answer2: \"\",\r\n  answer3: \"\",\r\n  answer4: \"\",\r\n  answer5: \"\",\r\n  answer6: \"\",\r\n  optionA: \"\",\r\n  optionB: \"\",\r\n  optionC: \"\",\r\n  optionD: \"\",\r\n});\r\n\r\nconst [showContinueButton, setShowContinueButton] = useState(false);\r\n\r\nconst handleAnswer = (selectedAnswer) => {\r\n  State.update({\r\n    answer: selectedAnswer,\r\n    showOptions: true,\r\n  });\r\n};\r\n\r\nconst handleOptionA = (selectedOption) => {\r\n  State.update({\r\n    answer: selectedOption,\r\n    showOptions: false,\r\n  });\r\n};\r\n\r\nconst handleOptionB = (selectedOption) => {\r\n  State.update({\r\n    answer: selectedOption,\r\n    showOptions: false,\r\n  });\r\n};\r\n\r\nconst handleOptionC = (selectedOption) => {\r\n  State.update({\r\n    answer: selectedOption,\r\n    showOptions: false,\r\n  });\r\n};\r\n\r\nconst handleOptionD = (selectedOption) => {\r\n  State.update({\r\n    answer: selectedOption,\r\n    showOptions: false,\r\n  });\r\n};\r\n\r\nconst handleOption45 = (selectedOption) => {\r\n  State.update({\r\n    answer: selectedOption,\r\n    showOptions: false,\r\n  });\r\n};\r\n\r\nconst handleOption56 = (selectedOption) => {\r\n  State.update({\r\n    answer: selectedOption,\r\n    showOptions: false,\r\n  });\r\n};\r\n\r\nlet showQuestion1 = false;\r\n\r\nif (\r\n  Social.keys(`${context.accountId}.near/graph/follow/evangel.near`) === true\r\n) {\r\n  showQuestion1 = true;\r\n}\r\n\r\nlet showQuestion2 = false;\r\nlet showQuestion3 = false;\r\nlet showQuestion4 = false;\r\nlet showQuestion5 = false;\r\nlet showQuestion6 = false;\r\n\r\nif (state.answer1.toLowerCase() === \"1\") {\r\n  showQuestion2 = true;\r\n}\r\n\r\nif (state.answer2.toLowerCase() === \"1\") {\r\n  showQuestion3 = true;\r\n}\r\n\r\nif (state.answer3.toLowerCase() === \"1\") {\r\n  showQuestion4 = true;\r\n}\r\n\r\nif (state.answer4.toLowerCase() === \"1\") {\r\n  showQuestion5 = true;\r\n}\r\n\r\nif (state.answer5.toLowerCase() === \"1\") {\r\n  showQuestion6 = true;\r\n}\r\n\r\nreturn (\r\n  <div>\r\n    <div className=\"d-flex flex-wrap justify-content-between mb-3\">\r\n      <div className=\"m-1\">\r\n        <h2>\r\n          <b>test</b>\r\n        </h2>\r\n        <h4>Test Your Knowledge</h4>\r\n        <h5>\r\n          First, read the{\" \"}\r\n          <a href=\"https://medium.com/near-protocol-ua-eng/but-who-is-your-ndc-and-what-kind-of-election-b1552874745e\">\r\n            article\r\n          </a>{\" \"}\r\n          \u22c8\r\n        </h5>\r\n      </div>\r\n      <div className=\"m-2\">\r\n        <Widget\r\n          src=\"mob.near/widget/Profile\"\r\n          props={{ accountId: \"evangel.near\" }}\r\n        />\r\n        <br></br>\r\n        <Widget\r\n          src=\"evangel.near/widget/ShareButton\"\r\n          props={{ accountId: \"evangel.near\" }}\r\n        />\r\n        Share\r\n      </div>\r\n    </div>\r\n    <hr />\r\n    <div>\r\n      {context.accountId ? (\r\n        <Widget\r\n          src=\"evangel.near/widget/ShareButtonUA\"\r\n          props={{ accountId: \"evangel.near\" }}\r\n        />\r\n      ) : (\r\n        <Widget\r\n          src=\"near/widget/DIG.Button\"\r\n          props={{\r\n            href: \"https://near.org/signup\",\r\n            label: \"Create Account\",\r\n            variant: \"outline-dark\",\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n    <br />\r\n    <div>\r\n      <h5>Question 1:</h5>\r\n      <p>What does the \"BOS\" acronym stand for?</p>\r\n      <input\r\n        className=\"form-control\"\r\n        placeholder=\"Your answer goes here :)\"\r\n        defaultValue={state.answer1}\r\n        onChange={(e) => {\r\n          State.update({\r\n            answer1: e.target.value,\r\n          });\r\n        }}\r\n      />\r\n    </div>\r\n    <br />\r\n    {showQuestion2 && (\r\n      <div>\r\n        <h5>Question 2:</h5>\r\n        <p>What language is used to build on the BOS?</p>\r\n        <input\r\n          className=\"form-control\"\r\n          placeholder=\"Your answer goes here :)\"\r\n          defaultValue={state.answer2}\r\n          onChange={(e) => {\r\n            State.update({\r\n              answer2: e.target.value,\r\n            });\r\n          }}\r\n        />\r\n      </div>\r\n    )}\r\n    <br />\r\n    {showQuestion3 && (\r\n      <div>\r\n        <h5>Question 3:</h5>\r\n        <p>What is the path of this BOS component, which you are using now?</p>\r\n        <input\r\n          className=\"form-control\"\r\n          placeholder=\"Your answer goes here :)\"\r\n          defaultValue={state.answer3}\r\n          onChange={(e) => {\r\n            State.update({\r\n              answer3: e.target.value,\r\n            });\r\n          }}\r\n        />\r\n      </div>\r\n    )}\r\n    <br />\r\n    {showQuestion4 && (\r\n      <div>\r\n        <h5>Question 4:</h5>\r\n        <p>\r\n          Where is the code actually stored for decentralized apps on the BOS?\r\n        </p>\r\n        <input\r\n          className=\"form-control\"\r\n          placeholder=\"Your answer goes here :)\"\r\n          defaultValue={state.answer4}\r\n          onChange={(e) => {\r\n            State.update({\r\n              answer4: e.target.value,\r\n            });\r\n          }}\r\n        />\r\n      </div>\r\n    )}\r\n    <br />\r\n    {showQuestion5 && (\r\n      <div>\r\n        <h5>Question 5:</h5>\r\n        <p>Which is NOT 1 of the 3 core pillars of the BOS?</p>\r\n        <button onClick={() => handleAnswer(\"A\")}>1</button>\r\n        <button onClick={() => handleAnswer(\"B\")}>2</button>\r\n        <button onClick={() => handleAnswer(\"C\")}>3</button>\r\n        <button onClick={() => handleAnswer(\"D\")}>4</button>\r\n      </div>\r\n    )}\r\n    {state.showOptions && (\r\n      <div>\r\n        {state.answer === \"A\" && (\r\n          <div>\r\n            <br />\r\n            <h5>\u0437\u0430\u0433\u043b\u0430\u0432\u043d\u043e\u0435 </h5>\r\n            <p>\u043e\u0431\u044a\u044f\u0441\u043d\u0435\u043d\u0438\u0435</p>\r\n          </div>\r\n        )}\r\n        {state.answer === \"B\" && (\r\n          <div>\r\n            <br />\r\n            <p>\r\n              <h5>KEK LOL </h5>\r\n            </p>\r\n          </div>\r\n        )}\r\n        {state.answer === \"C\" && (\r\n          <div>\r\n            <br />\r\n            <p>\r\n              <h5>ez lol </h5>\r\n            </p>\r\n          </div>\r\n        )}\r\n        {state.answer === \"D\" && (\r\n          <div>\r\n            <br />\r\n            <p>\r\n              <h5>CONGRATS </h5>\r\n            </p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    )}\r\n    <br />\r\n    {showQuestion6 && (\r\n      <div>\r\n        <h5>Question 6:</h5>\r\n        <p>Which option do you choose?</p>\r\n        <button onClick={() => handleOption45(\"45\")}>Option 1</button>\r\n        <button onClick={() => handleOption56(\"56\")}>Option 2</button>\r\n      </div>\r\n    )}\r\n\r\n    {/* Explanation for Question 6 */}\r\n    {state.answer6 === \"45\" && (\r\n      <div>\r\n        <br />\r\n        <p>\r\n          <h5>Explanation for Option 1</h5>\r\n          This is the explanation for Option 1.\r\n        </p>\r\n      </div>\r\n    )}\r\n    {showContinueButton && (\r\n      <div>\r\n        <button onClick={handleContinueButton}>Continue</button>\r\n      </div>\r\n    )}\r\n\r\n    {state.answer6 === \"56\" && (\r\n      <div>\r\n        <br />\r\n        <p>\r\n          <h5>Explanation for Option 2</h5>\r\n          This is the explanation for Option 2.\r\n        </p>\r\n      </div>\r\n    )}\r\n    <br />\r\n  </div>\r\n);\r\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/evangel.near/widget/test1", "fact_widget_deployments_id": "c04dbbda96d8504c66749b64bb65fc53", "inserted_timestamp": "2023-08-29T23:19:05.729Z", "modified_timestamp": "2023-08-29T23:19:05.729Z", "__row_index": 4}