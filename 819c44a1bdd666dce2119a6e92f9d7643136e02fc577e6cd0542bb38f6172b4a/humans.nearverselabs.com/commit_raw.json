{"tx_hash": "52icoPXVnsMhJfsBc2Bz9UNSdem1m3zLikY2LDhtFoVC", "action_id_social": "ETAvbr53fBzBre4922RcHp1ymS3HeJz83wkqVNg2TcoV-0-widget", "block_id": 100839417, "block_timestamp": "2023-09-10T22:09:47.284Z", "signer_id": "819c44a1bdd666dce2119a6e92f9d7643136e02fc577e6cd0542bb38f6172b4a", "widget_name": "humans.nearverselabs.com", "source_code": "const Owner =\n  \"819c44a1bdd666dce2119a6e92f9d7643136e02fc577e6cd0542bb38f6172b4a\";\nconst API_URL = \"https://humans.nearverselabs.com/api\";\nconst MAP_STYLE = \"mapbox://styles/mapbox/streets-v12\";\nconst MAP_TOKEN =\n  \"pk.eyJ1IjoidGVqMDEiLCJhIjoiY2xqcHZ2dGpkMDB5azNsbzQ0bmMwNjRjaCJ9.FVv2zRPaLwzZMgagbI2YZw\";\n\nconst center = [-74.00597, 40.71427];\nconst zoom = 8.9;\nconst accountId = context.accountId;\n\n//Styles\n\nconst Wrapper = styled.div`\n  display: flex;\n  width: 100%;\n  height: calc(100vh - 190px);\n  align-items: stretch;\n  flex-direction: column;\n  background: black;\n  overflow: auto;\n  position: relative;\n`;\n\nconst Header = styled.div`\n  display: flex;\n  width: 100%;\n  flex-direction: column;\n  position: absolute;\n`;\n\nconst Profile = styled.button`\n  background: #191a1a;\n  right: 50px;\n  top: 30px;\n  padding: 10px 22px;\n  @media (max-width: 510px) {\n    padding: 6px 15px;\n    right: 15px;\n    top: 15px;\n  }\n`;\n\nconst Location = styled.button`\n  background: unset;\n  bottom: 50px;\n  padding: 10px 22px;\n  @media (max-width: 510px) {\n    padding: 6px 15px;\n    bottom: 15px;\n  }\n`;\n\nconst BtnStyle = {\n  borderRadius: \"6px\",\n  border: \"1px solid rgb(255, 255, 255)\",\n  color: \"white\",\n  position: \"absolute\",\n  zIndex: 1,\n};\n\nconst BtnStyle2 = {\n  background: \"white\",\n  borderRadius: \"6px\",\n  border: \"1px solid rgb(255, 255, 255)\",\n  color: \"#191a1a\",\n  position: \"absolute\",\n  zIndex: 1,\n};\n\nconst getMyData = () => {\n  return asyncFetch(API_URL + `/auth/account?accountId=${accountId}`).then(\n    (res) => {\n      if (res.ok) {\n        return res.body.user;\n      }\n    }\n  );\n};\n\nconst getLocations = () => {\n  return asyncFetch(API_URL + `/location`).then((res) => {\n    if (res.ok) {\n      return res.body;\n    }\n  });\n};\n\nconst getMyInfor = async () => {\n  getMyData().then((user) => {\n    State.update({\n      user,\n    });\n  });\n};\n\nconst getLocationsData = async () => {\n  getLocations().then((data) => {\n    State.update({\n      locations: data,\n    });\n  });\n};\n\nconst onClose = () => {\n  State.update({ showModal: false });\n};\n\nconst onHumanClose = () => {\n  State.update({ humanAlert: false });\n};\n\nconst handleSaveLocation = () => {\n  asyncFetch(`${API_URL}/location/bos`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ accountId }),\n  }).then((res) => {\n    State.update({ edit: !state.edit });\n  });\n};\n\ngetMyInfor();\ngetLocationsData();\n\nreturn (\n  <Wrapper>\n    <Header>\n      <Widget src={`${Owner}/widget/Header`} />\n    </Header>\n\n    <div>\n      <Profile\n        class=\"btn\"\n        style={BtnStyle}\n        onClick={() => {\n          State.update({ showModal: true });\n        }}\n      >\n        {`Form`}\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"20\"\n          height=\"20\"\n          viewBox=\"0 0 48 48\"\n        >\n          <mask id=\"ipSDownOne0\">\n            <path\n              fill=\"#fff\"\n              stroke=\"#fff\"\n              stroke-linejoin=\"round\"\n              stroke-width=\"4\"\n              d=\"M36 19L24 31L12 19h24Z\"\n            />\n          </mask>\n          <path\n            fill=\"currentColor\"\n            d=\"M0 0h48v48H0z\"\n            mask=\"url(#ipSDownOne0)\"\n          />\n        </svg>\n      </Profile>\n    </div>\n\n    {accountId && hasSBTToken && (\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <Location\n          class=\"btn\"\n          style={state.edit ? BtnStyle2 : BtnStyle}\n          onClick={handleSaveLocation}\n        >\n          {`${!state.edit ? \"Edit\" : \"Save\"} location`}\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"24\"\n            height=\"24\"\n            viewBox=\"0 0 24 24\"\n          >\n            <g\n              fill=\"none\"\n              stroke=\"currentColor\"\n              stroke-linejoin=\"round\"\n              stroke-width=\"2\"\n            >\n              <path d=\"M13 9a1 1 0 1 1-2 0a1 1 0 0 1 2 0Z\" />\n              <path d=\"M17.5 9.5c0 3.038-2 6.5-5.5 10.5c-3.5-4-5.5-7.462-5.5-10.5a5.5 5.5 0 1 1 11 0Z\" />\n            </g>\n          </svg>\n        </Location>\n      </div>\n    )}\n\n    {accountId && hasSBTToken && state.showModal && (\n      <Widget\n        src={`${Owner}/widget/Modal`}\n        props={{ onClose, API_URL, user: state.user, getMyInfor }}\n      />\n    )}\n\n    {accountId && !hasSBTToken && state.humanAlert && (\n      <Widget\n        src={`${Owner}/widget/HumanAlert`}\n        props={{ onClose: onHumanClose }}\n      />\n    )}\n\n    <Widget\n      src={`${Owner}/widget/Mapbox`}\n      props={{\n        API_URL,\n        accessToken: MAP_TOKEN,\n        styleUrl: MAP_STYLE,\n        center,\n        zoom,\n        markers: state.locations,\n        edit: state.edit,\n      }}\n    />\n  </Wrapper>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/819c44a1bdd666dce2119a6e92f9d7643136e02fc577e6cd0542bb38f6172b4a/widget/humans.nearverselabs.com", "fact_widget_deployments_id": "cd1bab6cb2f6393d90f50dfc758c66aa", "inserted_timestamp": "2023-09-10T23:53:14.167Z", "modified_timestamp": "2023-09-10T23:53:14.167Z", "__row_index": 49}