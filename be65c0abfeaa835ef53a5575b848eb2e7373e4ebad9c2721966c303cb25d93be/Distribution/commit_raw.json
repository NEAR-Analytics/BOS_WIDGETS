{"tx_hash": "GHPkgNDRKRtLsWZb7Dkh5xoxw6NhPLVKnqhBjZ41wybx", "action_id_social": "AfgFrZJRm4VX6HtzK6cTke94jwGGSHEHgetwHeZNbfvU-0-widget", "block_id": 100285011, "block_timestamp": "2023-09-03T06:59:16.813Z", "signer_id": "be65c0abfeaa835ef53a5575b848eb2e7373e4ebad9c2721966c303cb25d93be", "widget_name": "Distribution", "source_code": "// DETECT SENDER\nif (state.sender === undefined) {\n  const accounts = Ethers.send(\"eth_requestAccounts\", []);\n  if (accounts.length) {\n    State.update({ sender: accounts[0] });\n  }\n}\n\nif (\n  state.chainId === undefined &&\n  ethers !== undefined &&\n  Ethers.send(\"eth_requestAccounts\", []) !== null\n) {\n  Ethers.provider()\n    .getNetwork()\n    .then((chainIdData) => {\n      if (chainIdData?.chainId) {\n        State.update({ chainId: chainIdData.chainId });\n      }\n    });\n}\n\nif (state.chainId !== undefined && state.chainId !== 1) {\n  return <p>Switch to Ethereum Mainnet</p>;\n}\n\nif (state.idx === undefined) {\n  State.update({ idx: 1 });\n}\n\n// setup constants\nconst WTONAddress = \"0xc4a11aaf6ea915ed7ac194161d2fc9384f15bff2\";\nconst wtonDecimals = 27;\n\n// FETCH CSS\nconst cssFont = fetch(\n  \"https://fonts.googleapis.com/css2?family=Manrope:wght@200;300;400;500;600;700;800\"\n).body;\nconst css = fetch(\n  \"https://pluminite.mypinata.cloud/ipfs/Qmboz8aoSvVXLeP5pZbRtNKtDD3kX5D9DEnfMn2ZGSJWtP\"\n).body;\n\nif (!cssFont || !css) return \"\";\n\nif (!state.theme) {\n  State.update({\n    theme: styled.div`\n      font-family: Manrope, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto,\n        Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue,\n        sans-serif;\n      ${cssFont}\n      ${css}\n    `,\n  });\n}\nconst Theme = state.theme;\n\nif (state.sender !== undefined) {\n  if (state.currentBlockNumber === undefined) {\n    Ethers.provider()\n      .getBlockNumber()\n      .then((blockNumber) => {\n        State.update({ currentBlockNumber: blockNumber });\n      });\n  }\n\n  if (state.currentBlockNumber !== undefined) {\n    const fromBlock = state.currentBlockNumber - 6400 * state.idx;\n    const filter = {\n      fromBlock: fromBlock,\n      address: \"0x710936500ac59e8551331871cbad3d33d5e0d909\",\n      topics: [ethers.utils.id(\"Comitted(address)\")],\n    };\n\n    if (state.lastUpdatedBlockNumber === undefined && state.sender) {\n      Ethers.provider()\n        .getLogs(filter)\n        .then((logs) => {\n          if (logs.length === 0) {\n            State.update({ idx: state.idx + 1 });\n            return;\n          }\n\n          Ethers.provider()\n            .getBlock(logs[logs.length - 1].blockNumber)\n            .then((block) => {\n              const date = new Date(block.timestamp * 1000);\n              State.update({\n                lastUpdatedTimestamp:\n                  date.toLocaleDateString() + \" \" + date.toLocaleTimeString(),\n                lastUpdatedBlockNumber: logs[logs.length - 1].blockNumber,\n              });\n            });\n        });\n    }\n  }\n}\n\nreturn (\n  <Theme>\n    <div class=\"LidoContainer\">\n      <div class=\"Header\">PowerTON Helper</div>\n\n      <div class=\"LidoForm\">\n        {state.lastUpdatedBlockNumber ? (\n          <div>\n            rewards updated at :\n            {`${state.lastUpdatedBlockNumber}(${state.lastUpdatedTimestamp})`}\n          </div>\n        ) : (\n          <></>\n        )}\n        {state.tx ? <div>Transaction Hash: {state.tx.hash}</div> : <></>}\n      </div>\n\n      <div class=\"LidoStakeForm\">\n        {!!state.sender ? (\n          <div>\n            Transfer seigniorage allocated to PowerTON contract\n            <button\n              class=\"LidoStakeFormSubmitContainer\"\n              onClick={() => {\n                const hammerDaoAddress =\n                  \"0x5d9a0646c46245a8a3b4775afb3c54d07bcb1764\";\n                const dao = new ethers.Contract(\n                  hammerDaoAddress,\n                  [\"function updateSeigniorage()\"],\n                  Ethers.provider().getSigner()\n                );\n\n                dao.updateSeigniorage().then((transactionHash) => {\n                  State.update({ tx: transactionHash });\n                  console.log(\"transactionHash is \" + transactionHash);\n                });\n              }}\n            >\n              <span>1. Update Seigniorage</span>\n            </button>\n            <p />\n            Distribute seigniorage accumulated in the PowerTON contract to the\n            dividend contract.\n            <button\n              class=\"LidoStakeFormSubmitContainer\"\n              onClick={() => {\n                const powerTONAddress =\n                  \"0x970298189050aBd4dc4F119ccae14ee145ad9371\";\n                const powerton = new ethers.Contract(\n                  powerTONAddress,\n                  [\"function distribute()\"],\n                  Ethers.provider().getSigner()\n                );\n\n                powerton.distribute().then((transactionHash) => {\n                  State.update({ tx: transactionHash });\n                  console.log(\"transactionHash is \" + transactionHash);\n                });\n              }}\n            >\n              <span>2. Distribute</span>\n            </button>\n          </div>\n        ) : (\n          <Web3Connect\n            className=\"LidoStakeFormSubmitContainer\"\n            connectLabel=\"Connect with Web3\"\n          />\n        )}\n      </div>\n    </div>\n  </Theme>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/be65c0abfeaa835ef53a5575b848eb2e7373e4ebad9c2721966c303cb25d93be/widget/Distribution", "fact_widget_deployments_id": "1a6c888183c3235230596e8916b7426a", "inserted_timestamp": "2023-09-03T08:43:35.980Z", "modified_timestamp": "2023-09-03T08:43:35.980Z", "__row_index": 1}