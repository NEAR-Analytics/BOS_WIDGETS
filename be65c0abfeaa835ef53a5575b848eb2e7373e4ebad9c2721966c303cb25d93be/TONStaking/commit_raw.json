{"tx_hash": "3zSDQwTdSswxztz39WiSZjw4PVcT3bDHUYywrUedZd9m", "action_id_social": "DMVQrrUxAYTrBEct5nVxvNBnD5NMR5E1Fj33NVhLYGhY-0-widget", "block_id": 100207366, "block_timestamp": "2023-09-02T05:26:49.949Z", "signer_id": "be65c0abfeaa835ef53a5575b848eb2e7373e4ebad9c2721966c303cb25d93be", "widget_name": "TONStaking", "source_code": "if (\n  state.chainId === undefined &&\n  ethers !== undefined &&\n  Ethers.send(\"eth_requestAccounts\", [])[0]\n) {\n  Ethers.provider()\n    .getNetwork()\n    .then((chainIdData) => {\n      if (chainIdData?.chainId) {\n        State.update({ chainId: chainIdData.chainId });\n      }\n    });\n}\nif (state.chainId !== undefined && state.chainId !== 1) {\n  return <p>Switch to Ethereum Mainnet</p>;\n}\n\n// setup constants\nconst lockTOSDividendProxyAddress =\n  \"0x17332F84Cc0bbaD551Cd16675F406A0a2c55E28C\";\nconst WTONAddress = \"0xc4a11aaf6ea915ed7ac194161d2fc9384f15bff2\";\nconst wtonDecimals = 27;\n\nconst handleClaim = () => {\n  if (Number(state.claimable) === 0) return;\n\n  const ABI = [\"function claim(address) external\"];\n\n  const lockTOSDividendProxyContract = new ethers.Contract(\n    lockTOSDividendProxyAddress,\n    ABI,\n    Ethers.provider().getSigner()\n  );\n\n  lockTOSDividendProxyContract.claim(WTONAddress).then((transactionHash) => {\n    State.update({ tx: transactionHash });\n    console.log(\"transactionHash is \" + transactionHash);\n  });\n};\n\n// DETECT SENDER\nif (state.sender === undefined) {\n  const accounts = Ethers.send(\"eth_requestAccounts\", []);\n  if (accounts.length) {\n    State.update({ sender: accounts[0] });\n    console.log(\"set sender\", accounts[0]);\n  }\n}\n\n// FETCH CLAIMABLE WTON AMOUNT\nif (state.claimable === undefined && state.sender) {\n  const iface = new ethers.utils.Interface([\n    \"function claimable(address, address) external view returns (uint256)\",\n  ]);\n  const encodedData = iface.encodeFunctionData(\"claimable\", [\n    state.sender,\n    WTONAddress,\n  ]);\n  return Ethers.provider()\n    .call({\n      to: lockTOSDividendProxyAddress,\n      data: encodedData,\n    })\n    .then((rawdata) => {\n      const claimableHex = iface.decodeFunctionResult(\"claimable\", rawdata);\n\n      console.log(claimableHex);\n\n      const claimable = Big(claimableHex.toString())\n        .div(Big(10).pow(wtonDecimals))\n        .toFixed(2)\n        .replace(/\\d(?=(\\d{3})+\\.)/g, \"$&,\");\n\n      State.update({\n        claimable: Big(claimable).div(Big(10).pow(wtonDecimals)).toFixed(2),\n      });\n    });\n}\n\n// FETCH CSS\nconst cssFont = fetch(\n  \"https://fonts.googleapis.com/css2?family=Manrope:wght@200;300;400;500;600;700;800\"\n).body;\nconst css = fetch(\n  \"https://pluminite.mypinata.cloud/ipfs/Qmboz8aoSvVXLeP5pZbRtNKtDD3kX5D9DEnfMn2ZGSJWtP\"\n).body;\n\nif (!cssFont || !css) return \"\";\n\nif (!state.theme) {\n  State.update({\n    theme: styled.div`\n    font-family: Manrope, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\n    ${cssFont}\n    ${css}\n`,\n  });\n}\nconst Theme = state.theme;\n\nreturn (\n  <Theme>\n    <div class=\"LidoContainer\">\n      <div class=\"Header\">Claim PowerTON</div>\n      <div class=\"SubHeader\">Claim your PowerTON seigniorage</div>\n\n      <div class=\"LidoForm\">\n        {state.tx ? <div>Transaction Hash: {state.tx.hash}</div> : <></>}\n        <div\n          class={\n            state.sender ? \"LidoFormBottomContainer\" : \"LidoFormTopContainer\"\n          }\n        >\n          <div class=\"LidoFormTopContainerLeft\">\n            <div class=\"LidoFormTopContainerLeftContent2\">\n              <span>Claimable</span>\n            </div>\n          </div>\n          <div class=\"LidoFormTopContainerLeftContent2\">\n            <span>\n              {state.claimable ?? (!state.sender ? \"0\" : \"...\")}\n              &nbsp;WTON\n            </span>\n          </div>\n        </div>\n      </div>\n      <div class=\"LidoStakeForm\">\n        {!!state.sender ? (\n          <button\n            class=\"LidoStakeFormSubmitContainer\"\n            onClick={() => handleClaim()}\n          >\n            <span>Claim</span>\n          </button>\n        ) : (\n          <Web3Connect\n            className=\"LidoStakeFormSubmitContainer\"\n            connectLabel=\"Connect with Web3\"\n          />\n        )}\n      </div>\n    </div>\n  </Theme>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/be65c0abfeaa835ef53a5575b848eb2e7373e4ebad9c2721966c303cb25d93be/widget/TONStaking", "fact_widget_deployments_id": "c01fd009ede946717f17fb0e2a624d21", "inserted_timestamp": "2023-09-02T07:27:45.939Z", "modified_timestamp": "2023-09-02T07:27:45.939Z", "__row_index": 2}