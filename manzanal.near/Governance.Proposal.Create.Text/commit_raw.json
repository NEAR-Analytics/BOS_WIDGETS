{"tx_hash": "GX1BwXUNMRLcRr3rLmGkz5CneSQx4MoJpTYFwukb39HC", "action_id_social": "9TpCrSYtUXU7jBnhgX1QjyXrhGmAvDDg5zZ2WjUskxbL-0-widget", "block_id": 96159039, "block_timestamp": "2023-07-10T16:45:51.714Z", "signer_id": "manzanal.near", "widget_name": "Governance.Proposal.Create.Text", "source_code": "const accountId = props.accountId ?? context.accountId;\nconst authorId = \"manzanal.near\";\nconst contractId = \"v003.mpip.near\";\nconst edit = props.edit ?? false;\nconst mpip_id = props.mpip_id ?? null;\nif (!accountId) {\n  return \"Please connect your NEAR wallet :)\";\n}\n\nState.init({\n  title: \"\",\n  titleError: \"\",\n  shortDescription: \"\",\n  shortDescriptionError: \"\",\n  description: null,\n  descriptionError: \"\",\n  functionCall: \"\",\n  functionCallError: \"\",\n  proposalIsFetched: false,\n});\n\nif (edit && !state.proposalIsFetched) {\n  Near.asyncView(\n    contractId,\n    \"get_proposal\",\n    { mpip_id: parseInt(mpip_id) },\n    \"final\",\n    false\n  ).then((proposal) =>\n    State.update({\n      title: proposal.title,\n      shortDescription: proposal.short_description,\n      description: proposal.body,\n      proposalIsFetched: true,\n    })\n  );\n}\nif (edit && !state.proposalIsFetched) return <>Loading...</>;\n\nconst handleProposal = () => {\n  if (!state.description) {\n    State.update({\n      error: \"Please enter a description\",\n    });\n    return;\n  }\n\n  const gas = 300000000000000;\n  Near.call([\n    {\n      contractName: contractId,\n      methodName: edit ? \"update_proposal\" : \"create_proposal\",\n      args: {\n        mpip_id: mpip_id ? parseInt(mpip_id) : null,\n        title: state.title,\n        short_description: state.shortDescription,\n        body: state.description,\n        data: \"\",\n        extra: \"\",\n      },\n      gas: gas,\n    },\n  ]);\n};\n\nconst onChangeDescription = (description) => {\n  State.update({\n    description,\n    error: undefined,\n  });\n};\n\nconst defaultDescription = state.description\n  ? state.description\n  : \"# [Your Title Here]\\n\\n## Description\\n\\n[Detailed description of what the proposal is about.]\\n\\n## Why This Proposal?\\n\\n[Explanation of why this proposal is necessary or beneficial.]\\n\\n## Execution Plan\\n\\n[Description of how the proposal will be implemented.]\\n\\n## Timeline\\n\\n[Proposed timeline for the execution of the proposal.]\";\n\nconst Label = styled.label`\n    font-style: normal;\n    font-weight: 600;\n    font-size: 0.95em;\n    line-height: 1.25em;\n    color: #344054;\n  `;\nreturn (\n  <>\n    <Widget\n      src={`${authorId}/widget/Common.Inputs.Text`}\n      props={{\n        label: \"Title\",\n        placeholder: \"Write a title for your proposal\",\n        value: state.title,\n        onChange: (title) => State.update({ title }),\n        validate: () => {\n          if (state.title.length > 50) {\n            State.update({\n              titleError: \"Title must be less than 50 characters\",\n            });\n            return;\n          }\n\n          State.update({ titleError: \"\" });\n        },\n        error: state.titleError,\n      }}\n    />\n\n    <Widget\n      src={`${authorId}/widget/Common.Inputs.Text`}\n      props={{\n        label: \"Short Description\",\n        placeholder: \"Write a one liner about your proposal\",\n        value: state.shortDescription,\n        onChange: (shortDescription) => State.update({ shortDescription }),\n        validate: () => {\n          if (state.shortDescription.length > 100) {\n            State.update({\n              shortDescriptionError:\n                \"Short Description must be less than 100 characters\",\n            });\n            return;\n          }\n\n          State.update({ shortDescriptionError: \"\" });\n        },\n        error: state.shortDescriptionError,\n      }}\n    />\n\n    <Label>Description</Label>\n    <Widget\n      src=\"mob.near/widget/MarkdownEditorIframe\"\n      props={{\n        onChange: (description) => State.update({ description }),\n        height: \"400px\",\n        initialText: defaultDescription,\n      }}\n    />\n    {state.descriptionError && (\n      <div className=\"text-danger\">{state.descriptionError}</div>\n    )}\n    <Widget\n      src={`${authorId}/widget/Common.Inputs.TextArea`}\n      props={{\n        label: \"Function Call Data (optional)\",\n        placeholder:\n          \"Write the function call to be executed after the proposal is approved.\",\n        value: state.functionCall,\n        onChange: (functionCall) => State.update({ functionCall }),\n        validate: () => {},\n        error: state.functionCallError,\n      }}\n    />\n    <div className=\"ms-auto\">\n      <Widget\n        src={`${authorId}/widget/Common.Button`}\n        props={{\n          children: \"Cancel\",\n          onClick: () => State.update({ tabs: \"home\", content: \"\" }),\n          className: \"mt-2\",\n          variant: \"primary\",\n          href: `/${authorId}/widget/Governance.Index?tab=home`,\n        }}\n      />\n      <Widget\n        src={`${authorId}/widget/Common.Button`}\n        props={{\n          children: edit ? \"Edit Proposal\" : \"Create Proposal\",\n          onClick: handleProposal,\n          className: \"mt-2\",\n          variant: \"success\",\n        }}\n      />\n    </div>\n  </>\n);\n", "metadata": {"platform": "Components.gg"}, "branch": {"draft": null}, "widget_modules_used": null, "widget_url": "https://near.social/#/manzanal.near/widget/Governance.Proposal.Create.Text", "fact_widget_deployments_id": "f0fbb2c8778f1148710c289188171573", "inserted_timestamp": "2000-01-01T00:00:00.000Z", "modified_timestamp": "2000-01-01T00:00:00.000Z", "__row_index": 13}