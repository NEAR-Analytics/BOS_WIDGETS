{"tx_hash": "CMPhFVqZBNxidu8h8CLBLVTFN8BtmUT4KQ8HighKjEoB", "action_id_social": "7C3WCcb6sVjwks27ci6AfmVktsftcPn6NC6WsJD89ptW-0-widget", "block_id": 96920559, "block_timestamp": "2023-07-20T14:32:15.226Z", "signer_id": "manzanal.near", "widget_name": "TokenWrapper.v2.MaticWrapper", "source_code": "const ownerId = \"manzanal.near\";\nconst tokenName = \"MATIC\";\nconst wrapTokenName = \"WMATIC\";\nconst wmaticAddress =\n  props.wmaticAddress || \"0x0d500b1d8e8ef31e21c99d1db9a6444d3adf1270\";\nconst tokenDecimals = 18;\nconst wmaticAbiUrl =\n  props.wmaticAbiUrl ||\n  \"https://raw.githubusercontent.com/leomanza/chain-agnostic-bos-workshop/main/ABIs/WMATIC.abi.json\";\nconst wmaticAbi = fetch(wmaticAbiUrl);\n\nif (!wmaticAbi.ok) {\n  return \"Loading\";\n}\nconst wmaticAbiBody = wmaticAbi.body;\nconsole.log(\"ABI\", wmaticAbiBody);\nconst signer = Ethers.provider() ? Ethers.provider().getSigner() : null;\nconst wmaticContract = new ethers.Contract(\n  wmaticAddress,\n  wmaticAbiBody,\n  signer\n);\n\nState.init({\n  signerAddress: null,\n});\n\nconst getSignerAddress = () => {\n  signer.getAddress().then((signerAddress) => {\n    State.update({ signerAddress });\n  });\n};\ngetSignerAddress();\n\nconst imgWrapTokenSvg = (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n    width=\"32px\"\n    height=\"32px\"\n    viewBox=\"0 0 32 25\"\n    version=\"1.1\"\n  >\n    <g id=\"surface1\">\n      <path\n        style=\" stroke:none;fill-rule:evenodd;fill:rgb(16.862745%,74.117647%,96.862745%);fill-opacity:1;\"\n        d=\"M 12.386719 10.394531 L 15.960938 18.253906 L 21.277344 15.214844 L 21.28125 15.210938 L 21.28125 9.128906 Z M 12.386719 10.394531 \"\n      />\n      <path\n        style=\" stroke:none;fill-rule:evenodd;fill:rgb(15.686275%,56.862745%,97.647059%);fill-opacity:1;\"\n        d=\"M 28.160156 4.566406 L 24.84375 3.324219 L 21.296875 3.039062 L 21.296875 21.953125 L 26.617188 24.992188 L 30.816406 16.46875 L 28.167969 8.222656 Z M 28.160156 4.566406 \"\n      />\n      <path\n        style=\" stroke:none;fill-rule:evenodd;fill:rgb(16.862745%,74.117647%,96.862745%);fill-opacity:1;\"\n        d=\"M 27.828125 3.046875 L 26.597656 6.085938 L 26.59375 6.085938 L 26.59375 24.996094 L 31.917969 21.957031 L 31.917969 3.046875 Z M 27.828125 3.046875 \"\n      />\n      <path\n        style=\" stroke:none;fill-rule:evenodd;fill:rgb(16.862745%,42.745098%,93.72549%);fill-opacity:1;\"\n        d=\"M 26.617188 0 L 21.296875 3.042969 L 26.617188 6.085938 L 31.941406 3.042969 Z M 26.617188 0 \"\n      />\n      <path\n        style=\" stroke:none;fill-rule:evenodd;fill:rgb(15.686275%,56.862745%,97.647059%);fill-opacity:1;\"\n        d=\"M 15.964844 12.167969 L 10.644531 6.261719 L 0 3.039062 L 0 21.949219 L 5.320312 24.992188 L 6.839844 14.527344 L 10.644531 15.214844 L 10.644531 15.210938 L 15.964844 18.25 Z M 15.964844 12.167969 \"\n      />\n      <path\n        style=\" stroke:none;fill-rule:evenodd;fill:rgb(16.862745%,42.745098%,93.72549%);fill-opacity:1;\"\n        d=\"M 5.324219 0 L 0 3.042969 L 15.964844 12.171875 L 18.375 10.792969 L 21.285156 9.128906 Z M 5.324219 0 \"\n      />\n      <path\n        style=\" stroke:none;fill-rule:evenodd;fill:rgb(16.862745%,74.117647%,96.862745%);fill-opacity:1;\"\n        d=\"M 5.324219 12.167969 L 5.324219 24.992188 L 10.644531 21.949219 L 10.644531 15.210938 Z M 5.324219 12.167969 \"\n      />\n    </g>\n  </svg>\n);\nconst imgTokenSvg = (\n  <svg\n    width=\"32\"\n    height=\"32\"\n    viewBox=\"0 0 32 32\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <g fill=\"none\">\n      <circle fill=\"#6F41D8\" cx=\"16\" cy=\"16\" r=\"16\" />\n      <path\n        d=\"M21.092 12.693c-.369-.215-.848-.215-1.254 0l-2.879 1.654-1.955 1.078-2.879 1.653c-.369.216-.848.216-1.254 0l-2.288-1.294c-.369-.215-.627-.61-.627-1.042V12.19c0-.431.221-.826.627-1.042l2.25-1.258c.37-.216.85-.216 1.256 0l2.25 1.258c.37.216.628.611.628 1.042v1.654l1.955-1.115v-1.653a1.16 1.16 0 00-.627-1.042l-4.17-2.372c-.369-.216-.848-.216-1.254 0l-4.244 2.372A1.16 1.16 0 006 11.076v4.78c0 .432.221.827.627 1.043l4.244 2.372c.369.215.849.215 1.254 0l2.879-1.618 1.955-1.114 2.879-1.617c.369-.216.848-.216 1.254 0l2.251 1.258c.37.215.627.61.627 1.042v2.552c0 .431-.22.826-.627 1.042l-2.25 1.294c-.37.216-.85.216-1.255 0l-2.251-1.258c-.37-.216-.628-.611-.628-1.042v-1.654l-1.955 1.115v1.653c0 .431.221.827.627 1.042l4.244 2.372c.369.216.848.216 1.254 0l4.244-2.372c.369-.215.627-.61.627-1.042v-4.78a1.16 1.16 0 00-.627-1.042l-4.28-2.409z\"\n        fill=\"#FFF\"\n      />\n    </g>\n  </svg>\n);\n\nconst parseToUnitsFn = (amount) => {\n  const tokenDecimals = 18;\n  return ethers.utils.parseUnits(amount, tokenDecimals);\n};\n\nconst formatUnitsFn = (amount) => {\n  const tokenDecimals = 18;\n  return ethers.utils.formatUnits(amount, tokenDecimals);\n};\nconst isValidAmountFn = (amount) => {\n  if (!amount) return false;\n  if (isNaN(Number(amount))) return false;\n  if (amount === \"\") return false;\n  if (amount < 0) return false;\n  return true;\n};\nconst isSignedIn = () => !!state.signerAddress;\n\nconst getMaticBalance = (signerAddress, updateStateCb) => {\n  Ethers.provider()\n    .getBalance(signerAddress)\n    .then((balance) => updateStateCb(formatUnitsFn(balance)));\n};\n\nconst getWMaticBalance = (signerAddress, updateStateCb) => {\n  wmaticContract\n    .balanceOf(signerAddress)\n    .then((balance) => updateStateCb(formatUnitsFn(balance)));\n};\n\nconst wrapFn = (amountIn) => {\n  const amount = parseToUnitsFn(amountIn);\n\n  wmaticContract.deposit({ value: amount });\n};\nconst unwrapFn = (amountIn) => {\n  const amount = parseToUnitsFn(amountIn);\n\n  wmaticContract.withdraw(amount);\n};\nif (!state.signerAddress) return \"Loading...\";\nreturn (\n  <Widget\n    src={`${ownerId}/widget/TokenWrapper.v2.AbstractWrapper`}\n    props={{\n      tokenName,\n      wrapTokenName,\n      imgTokenSvg,\n      imgWrapTokenSvg,\n      getTokenBalanceFn: getMaticBalance,\n      getWrapTokenBalanceFn: getWMaticBalance,\n      parseToUnitsFn,\n      formatUnitsFn,\n      isValidAmountFn,\n      wrapFn,\n      unwrapFn,\n      isSignedIn,\n      signerAddress: state.signerAddress,\n    }}\n  />\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/manzanal.near/widget/TokenWrapper.v2.MaticWrapper", "fact_widget_deployments_id": "32d9e358eaa5e33db018e9a7fa11911b", "inserted_timestamp": "2000-01-01T00:00:00.000Z", "modified_timestamp": "2000-01-01T00:00:00.000Z", "__row_index": 2}