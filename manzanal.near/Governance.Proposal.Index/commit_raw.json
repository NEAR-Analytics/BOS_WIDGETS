{"tx_hash": "7VtyFikCNg25RouGAVJXFYCTJrNMKkhGB49m9MXmJoK", "action_id_social": "65LMUPdnhhGZ1SCiq4ymKwq2rHg7AyaiD5AnbsuPEFSK-0-widget", "block_id": 102528200, "block_timestamp": "2023-10-03T14:18:26.658Z", "signer_id": "manzanal.near", "widget_name": "Governance.Proposal.Index", "source_code": "const contractId = props.contractId || \"mpip.meta-pool-dao.near\";\nconst accountId = props.accountId ?? context.accountId;\nconst authorId = props.authorId || \"manzanal.near\";\nconst META_VOTE_CONTRACT_ID = \"meta-vote.near\";\nconst transactionHashes = props.transactionHashes;\nconst transactionHashesIsHandled = props.transactionHashesIsHandled;\nconst mpip_id = props.mpip_id ? parseInt(props.mpip_id) : null;\nconst update = props.update;\nif (mpip_id == null) return \"Proposal Id not defined\";\n\nconst commentItemIndex = { contractId, mpip: `MPIP-${mpip_id}` };\nconst initState = {\n  proposal: {},\n  proposalIsFetched: false,\n  status: null,\n  statusIsFetched: false,\n  proposalVotes: {},\n  proposalVotesAreFetched: false,\n  proposalIsEditable: false,\n  proposalIsEditableIsFetched: false,\n  isQuorumReached: false,\n  isQuorumReachedIsFetched: false,\n  isProposalSucceeded: false,\n  isProposalSucceededIsFetched: false,\n  isProposalActiveOrDraft: false,\n  isProposalActiveOrDraftIsFetched: false,\n  showReply: false,\n  totalVotingPower: null,\n  totalVotingPowerIsFetched: false,\n};\nState.init(initState);\nif (transactionHashesIsHandled && transactionHashes == false)\n  return <>Loading...</>;\n\nif (transactionHashes && !transactionHashesIsHandled) {\n  const statusResult = fetch(\"https://rpc.mainnet.near.org\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      jsonrpc: \"2.0\",\n      id: \"dontcare\",\n      method: \"tx\",\n      params: [transactionHashes, accountId],\n    }),\n  });\n\n  if (\n    statusResult.body.result.status &&\n    Object.keys(statusResult.body.result.status)[0] == \"SuccessValue\"\n  ) {\n    update({ transactionHashesIsHandled: true });\n    State.update({ ...initState });\n  }\n}\n\nif (!state.proposalIsFetched) {\n  Near.asyncView(contractId, \"get_proposal\", { mpip_id }, \"final\", false).then(\n    (proposal) => State.update({ proposal, proposalIsFetched: true })\n  );\n}\n\nif (!state.statusIsFetched) {\n  Near.asyncView(\n    contractId,\n    \"get_proposal_state\",\n    { mpip_id },\n    \"final\",\n    false\n  ).then((status) => State.update({ status, statusIsFetched: true }));\n}\n\nif (!state.proposalVotesAreFetched) {\n  Near.asyncView(\n    contractId,\n    \"get_proposal_votes\",\n    { mpip_id },\n    \"final\",\n    false\n  ).then((proposalVotes) =>\n    State.update({ proposalVotes, proposalVotesAreFetched: true })\n  );\n}\n\nif (!state.proposalIsEditableIsFetched) {\n  Near.asyncView(\n    contractId,\n    \"get_proposal_is_active_or_draft\",\n    { mpip_id },\n    \"final\",\n    false\n  ).then((proposalIsEditable) =>\n    State.update({ proposalIsEditable, proposalIsEditableIsFetched: true })\n  );\n}\n\nif (!state.isQuorumReachedIsFetched) {\n  Near.asyncView(\n    contractId,\n    \"get_quorum_reached\",\n    { mpip_id },\n    \"final\",\n    false\n  ).then((isQuorumReached) =>\n    State.update({ isQuorumReached, isQuorumReachedIsFetched: true })\n  );\n}\n\nif (!state.isProposalSucceededIsFetched) {\n  Near.asyncView(\n    contractId,\n    \"get_proposal_vote_succeeded\",\n    { mpip_id },\n    \"final\",\n    false\n  ).then((isProposalSucceeded) =>\n    State.update({ isProposalSucceeded, isProposalSucceededIsFetched: true })\n  );\n}\n\nif (!state.totalVotingPowerIsFetched) {\n  Near.asyncView(\n    META_VOTE_CONTRACT_ID,\n    \"get_total_voting_power\",\n    {},\n    \"final\",\n    false\n  ).then((totalVotingPower) =>\n    State.update({ totalVotingPower, totalVotingPowerIsFetched: true })\n  );\n}\n\nif (!state.isProposalActiveOrDraftIsFetched) {\n  Near.asyncView(\n    contractId,\n    \"get_proposal_is_active_or_draft\",\n    { mpip_id },\n    \"final\",\n    false\n  ).then((isProposalActiveOrDraft) =>\n    State.update({\n      isProposalActiveOrDraft,\n      isProposalActiveOrDraftIsFetched: true,\n    })\n  );\n}\n\nconst onVotingPeriod = () => state.status == \"VotingProcess\";\n\nconst formatStatus = (status) => {\n  switch (status) {\n    case \"VotingProcess\":\n      return \"IN PROGRESS\";\n    case \"Draft\":\n      return \"DRAFT\";\n    case \"Active\":\n      return \"ACTIVE\";\n    case \"Accepted\":\n      return \"SUCCEEDED\";\n    case \"Rejected\":\n      return \"REJECTED\";\n    case \"Canceled\":\n      return \"CANCELED\";\n  }\n};\n\nconst statusColor =\n  state.status === \"Accepted\" || state.status == \"Executed\"\n    ? \"#28a930\"\n    : state.status === \"VotingProcess\"\n    ? \"#58a1ff\"\n    : state.status === \"Rejected\" || state.status == \"Canceled\"\n    ? \"#dc3545\"\n    : \"#6c757d\";\n\nconst Container = styled.div`\n  margin: 16px auto; \n  width:100%;\n  display: flex;\n  flex-direction: column;\n  min-height: 500px;\n  justify-content: start; \n`;\n\nconst Text = styled.p`\n    line-height: 1.4;\n    font-weight: 400;\n    font-size: 15px;\n    color: #868682;\n    margin: 0;\n  `;\nconst Heading3 = styled.h3`\n    font-weight: 600;\n    font-size: 24px;\n    color: #1b1b18;\n`;\nconst Heading5 = styled.h5`\n   font-size: 14px;\n    font-weight: 500;\n    line-height: 1.2;\n    color: #6c757d;\n`;\nconst Heading4 = styled.h4`\n   font-size: 18px;\n    font-weight: 500;\n    line-height: 1.2;\n    color: #1b1b18;\n`;\n\nconst ContentContainer = styled.div`\n  width:100%;\n  display: flex;\n  flex-direction: row;\n  gap: 24px;\n  min-height: 500px;\n\n  .status {\n    font-size: 14px;\n    font-weight: 600;\n    line-height: 1.2;\n    color: ${statusColor};\n  }\n  @media (max-width: 768px) {\n    flex-direction: column;\n  }\n`;\nconst WrapperLeft = styled.div`\n  margin: 16px auto;\n  width:50%;\n  background-color: #fff;\n  padding: 24px;\n  box-shadow: rgba(0, 0, 0, 0.18) 0px 2px 4px;\n  border-radius: 16px;\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n  min-height: 500px;\n\n  .status {\n    font-size: 14px;\n    font-weight: 600;\n    line-height: 1.2;\n    color: ${statusColor};\n  }\n`;\n\nconst WrapperRight = styled.div`\n  margin: 16px auto;\n  width:50%;\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n  min-height: 500px;\n\n  p {\n    line-height: 1.4;\n    font-weight: 400;\n    font-size: 15px;\n    color: #868682;\n    margin: 0;\n  }\n\n  h3 {\n    font-weight: 600;\n    font-size: 24px;\n    color: #1b1b18;\n  }\n\n  h5 {\n    font-size: 14px;\n    font-weight: 500;\n    line-height: 1.2;\n    color: #6c757d;\n  }\n\n  .status {\n    font-size: 14px;\n    font-weight: 600;\n    line-height: 1.2;\n    color: ${statusColor};\n  }\n`;\n\nconst BackButton = styled.button`\n  border: none;\n  background: none;\n  color: #7e868c;\n  transform: translate(1em, -1em);\n`;\n\nconst ButtonsContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  @media (max-width: 768px) {\n    flex-direction: column;  \n  }\n`;\n\nconst onStartVotingButtonClick = () => {\n  Near.call([\n    {\n      contractName: contractId,\n      methodName: \"start_voting_period\",\n      args: {\n        mpip_id,\n      },\n      gas: 300000000000000,\n    },\n  ]);\n};\n\nconst onCancelButtonClick = () => {\n  Near.call([\n    {\n      contractName: contractId,\n      methodName: \"cancel_proposal\",\n      args: {\n        mpip_id,\n      },\n      gas: 300000000000000,\n    },\n  ]);\n};\n\nconst isProposalCreator = () => {\n  return state.proposal.creator_id == accountId;\n};\n\nif (\n  !state.proposalIsFetched ||\n  !state.statusIsFetched ||\n  !state.proposalVotesAreFetched ||\n  !state.proposalIsEditableIsFetched\n)\n  return <>Loading...</>;\nconsole.log(state.proposal.body);\n\nreturn (\n  <Container>\n    <div>\n      <Widget\n        src={`${authorId}/widget/Common.Button`}\n        props={{\n          children: (\n            <>\n              <i class=\"bi bi-arrow-left\" />\n              Back\n            </>\n          ),\n          onClick: () => State.update({ tabs: \"home\", content: \"\" }),\n          className: \"mt-2\",\n          variant: \"primary\",\n          href: `/${authorId}/widget/Governance.Index?tab=home`,\n        }}\n      />\n    </div>\n    <ContentContainer>\n      <WrapperLeft>\n        {state.proposalIsEditable && isProposalCreator() && (\n          <ButtonsContainer>\n            <Widget\n              src={`${authorId}/widget/Common.Button`}\n              props={{\n                children: (\n                  <>\n                    <i class=\"bi bi-pencil-square\" />\n                    Edit\n                  </>\n                ),\n                onClick: () => State.update({ mpip_id }),\n                className: \"mt-2\",\n                variant: \"primary\",\n                href: `/${authorId}/widget/Governance.Proposal.Create.Index?edit=true&mpip_id=${mpip_id}`,\n              }}\n            />\n            <Widget\n              src={`${authorId}/widget/Common.Button`}\n              props={{\n                children: (\n                  <>\n                    <i class=\"bi bi-trash\" />\n                    Cancel\n                  </>\n                ),\n                onClick: () => () => onCancelButtonClick(),\n                className: \"mt-2\",\n                variant: \"primary\",\n              }}\n            />\n            <Widget\n              src={`${authorId}/widget/Common.Button`}\n              props={{\n                children: (\n                  <>\n                    <i class=\"bi bi-envelope-open\" />\n                    Start Voting\n                  </>\n                ),\n                onClick: () => onStartVotingButtonClick(),\n                className: \"mt-2\",\n                variant: \"primary\",\n              }}\n            />\n          </ButtonsContainer>\n        )}\n\n        <div className=\"d-flex justify-content-end align-items-center\">\n          <div className=\"d-flex justify-content-between align-items-center\">\n            <span className=\"status\">{formatStatus(state.status)}</span>\n          </div>\n        </div>\n\n        <div className=\"d-flex flex-row gap-1 justify-content-between\">\n          <Heading3>\n            Prop {state.proposal.mpip_id} - {state.proposal.title}\n          </Heading3>\n        </div>\n        <div>\n          <Heading4>{state.proposal.short_description}</Heading4>\n        </div>\n        <div className=\"d-flex flex-row gap-1 align-items-center\">\n          <Heading5>by </Heading5>\n          <Widget\n            src=\"mob.near/widget/Profile.ShortInlineBlock\"\n            props={{ accountId: state.proposal.creator_id, tooltip: true }}\n          />\n        </div>\n\n        <Widget\n          src=\"mob.near/widget/SocialMarkdown\"\n          props={{ text: state.proposal.body }}\n        />\n\n        <div\n          className=\"d-flex flex-wrap align-items-start\"\n          style={{\n            rowGap: \"16px\",\n            columnGap: \"48px\",\n          }}\n        ></div>\n        <Widget\n          src={`${authorId}/widget/Governance.Proposal.DiscussionCard`}\n          props={{\n            commentsOpen: state.isProposalActiveOrDraft,\n            blockHeight: blockHeight,\n            onCommentButtonClick: () =>\n              State.update({ showReply: !state.showReply }),\n            onComment: () => State.update({ showReply: false }),\n            showReply: state.showReply,\n            commentItemIndex: commentItemIndex,\n            highlightComment: props.highlightComment,\n            commentsLimit: props.commentsLimit,\n            authorId,\n            contractId,\n          }}\n        />\n      </WrapperLeft>\n      <WrapperRight>\n        <Widget\n          src={`${authorId}/widget/Governance.Proposal.VoteCard`}\n          props={{\n            proposal: { ...state.proposal, status: state.status },\n            authorId,\n            contractId,\n          }}\n        />\n\n        <Widget\n          src={`${authorId}/widget/Governance.Proposal.VotingPeriodCard`}\n          props={{\n            startDate: state.proposal.vote_start_timestamp,\n            endDate: state.proposal.vote_end_timestamp,\n            authorId,\n            contractId,\n          }}\n        />\n\n        <Widget\n          src={`${authorId}/widget/Governance.Proposal.VotingResultsCard`}\n          props={{\n            yesVotes: state.proposalVotes.for_votes,\n            noVotes: state.proposalVotes.against_votes,\n            abstainVotes: state.proposalVotes.abstain_votes,\n            quorum: state.proposal.v_power_quorum_to_reach,\n            isQuorumReached: state.isQuorumReached,\n            isProposalSucceeded: state.isProposalSucceeded,\n            onVotingPeriod,\n            authorId,\n            contractId,\n          }}\n        />\n\n        <Widget\n          src={`${authorId}/widget/Governance.Proposal.VotesCard`}\n          props={{\n            accountVotes: state.proposalVotes.has_voted,\n          }}\n        />\n      </WrapperRight>\n    </ContentContainer>\n  </Container>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/manzanal.near/widget/Governance.Proposal.Index", "fact_widget_deployments_id": "9574d313a13decfc12c64f5c06f28adf", "inserted_timestamp": "2023-10-03T16:24:05.881Z", "modified_timestamp": "2023-10-03T16:24:05.881Z", "__row_index": 0}