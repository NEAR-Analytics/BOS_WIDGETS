{"tx_hash": "9LNYhD7wZXLvZ8BzqQnmBuvQgVHVvvrPD5HjaQE63ww6", "action_id_social": "5wnSos7iaPZq9WUcn37SivTwqTvUnbo15jbNxnHaatxp-0-widget", "block_id": 100783935, "block_timestamp": "2023-09-10T04:02:29.634Z", "signer_id": "manzanal.near", "widget_name": "CosmoPOS.Dashboard", "source_code": "const token = props.token || \"cos.tkn.near\";\nconst target = props.target || \"fazendacosmica.near\";\n\nState.init({\n  token,\n  target,\n  loading: false,\n  data: null,\n});\n\nconst updateToken = (token) => State.update({ token });\n\nconst updateTarget = (target) => State.update({ target });\n\nconst fetchOptions = {\n  headers: {\n    \"x-api-key\": \"16f280cc-6708-4a66-b657-b6cf146bce34\",\n  },\n};\n\nfunction formatDate(timestamp) {\n  const d = new Date(timestamp);\n  return [\n    d.getFullYear(),\n    (\"0\" + (d.getMonth() + 1)).slice(-2),\n    (\"0\" + d.getDate()).slice(-2),\n  ].join(\"/\");\n}\n\nconst formatTime = (timestamp) => {\n  const d = new Date(timestamp);\n  const time = [\n    (\"0\" + d.getHours()).slice(-2),\n    (\"0\" + d.getMinutes()).slice(-2),\n    (\"0\" + d.getSeconds()).slice(-2),\n  ].join(\":\");\n  return time;\n};\n\nconst fetchTransactionsData = () => {\n  State.update({ data: null, loading: true });\n  const res = fetch(\n    `https://api.pikespeak.ai/account/ft-transfer/${\n      state.target || \"fazendacosmica.near\"\n    }?limit=50&offset=1`,\n    fetchOptions\n  );\n  if (!res.ok) {\n    return `Pikespeak API returned error: ${JSON.stringify(res)}`;\n  }\n  console.log(\"res\", res.body);\n  const filterByToken = res.body.filter((item) => item.contract == state.token);\n  const data = filterByToken.map((item) => ({\n    ...item,\n    transaction_id: `${item.transaction_id.substring(\n      item.transaction_id.length - 6,\n      item.transaction_id.length\n    )}...`,\n    amount: item.amount ? parseInt(item.amount).toFixed(2) : \"-\",\n    status: item.status ? \"OK\" : \"Fail\",\n    date: formatDate(item.timestamp / 1000000),\n    time: formatTime(item.timestamp / 1000000),\n  }));\n\n  State.update({ data, loading: false });\n};\n\nfetchTransactionsData();\n\nif (state.loading) return <>Loading...</>;\n\nconst InputWrapper = styled.label`\n  display: flex;\n  width: 50%;\n  flex-direction: row;\n  gap: 4px;\n  align-items:center;\n  &[data-disabled=\"true\"] {\n    pointer-events: none;\n  }\n`;\n\nconst Label = styled.div`\n  display: block;\n  font: var(--text-xs);\n  font-weight: 600;\n  color: var(--sand12);\n`;\n\nconst Button = styled.button`\n  border-radius: 50px !important;\n  color: black;\n  border: none !important;\n  padding: 12px 12px;\n  border: 1px solid #d7dbdf;\n  -webkit-transition: background-color 1s, color 1s, -webkit-transform 0.5s;\n     transition: background-color 1s, transform 0.5s;\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 15px;\n  cursor: pointer;\n  white-space: nowrap;\n`;\n\nconst InputContainer = styled.div`\n    display: flex;\n  flex-direction: column;\n  gap: 4px;\n  margin-bottom: 10px\n`;\nreturn (\n  <div className=\"container-fluid py-2 gap-5\">\n    <InputContainer>\n      <Label>Token: {state.token}</Label>\n      <InputWrapper>\n        <input\n          type=\"text\"\n          placeholder=\"Change token...\"\n          onChange={(e) => State.update({ tokenTemp: e.target.value })}\n          style={{\n            borderRadius: \"50px\",\n          }}\n        />\n        <Button onClick={() => updateToken(state.tokenTemp)}>Update</Button>\n      </InputWrapper>\n    </InputContainer>\n    <InputContainer>\n      <Label>Target: {state.target}</Label>\n      <InputWrapper>\n        <input\n          type=\"text\"\n          placeholder=\"Change target...\"\n          onChange={(e) => State.update({ targetTemp: e.target.value })}\n          style={{\n            borderRadius: \"50px\",\n          }}\n        />\n        <Button onClick={(e) => updateTarget(state.targetTemp)}>Update</Button>\n      </InputWrapper>\n    </InputContainer>\n    <Widget\n      src=\"lord1.near/widget/table-pagination\"\n      props={{\n        data: state.data,\n        columns: [\n          {\n            title: \"Tx Id\",\n            key: \"transaction_id\",\n            description: \"Transaction Id\",\n          },\n          {\n            title: \"Status\",\n            key: \"status\",\n            description: \"Status\",\n          },\n          {\n            title: \"Sender\",\n            key: \"sender\",\n            description: \"Sender\",\n          },\n          {\n            title: \"Receiver\",\n            key: \"receiver\",\n            description: \"Receiver\",\n          },\n          {\n            title: \"Amount\",\n            key: \"amount\",\n            description: \"Amount\",\n          },\n          {\n            title: \"Date\",\n            key: \"date\",\n            description: \"date\",\n          },\n          {\n            title: \"Time\",\n            key: \"time\",\n            description: \"time\",\n          },\n        ],\n        rowsCount: 10,\n      }}\n    />\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/manzanal.near/widget/CosmoPOS.Dashboard", "fact_widget_deployments_id": "fa36e15e667473f3bb28b614f1ffe87c", "inserted_timestamp": "2023-09-10T05:47:59.706Z", "modified_timestamp": "2023-09-10T05:47:59.706Z", "__row_index": 3}