{"tx_hash": "A2vdzDiv8LJ1ZrtzRCUQzck8rz1VePE3gxTMG5gMA9JG", "action_id_social": "8TCFqJuUNdanyvUCb12XWHG9ZxBzW5PQyioxQHmY5hfB-0-widget", "block_id": 96670267, "block_timestamp": "2023-07-17T07:59:56.924Z", "signer_id": "igris.near", "widget_name": "DaisyUIWrapper", "source_code": "const children = props.children;\nconst daisyUiTheme = props.daisyUiTheme || \"light\";\n\nconst tailwindCssUrl =\n  \"https://cdn.jsdelivr.net/npm/tailwindcss@2.2/dist/tailwind.min.css\";\n\nconst daisyUiCssUrl =\n  \"https://cdn.jsdelivr.net/npm/daisyui@2.6.0/dist/full.css\";\n\nState.init({\n  theme: null,\n});\n\nconst tailwindCss = fetch(tailwindCssUrl).body;\n\nconst daisyUiCss = fetch(daisyUiCssUrl).body;\n\nif (!tailwindCss || !daisyUiCss) return \"Can't load CSS \ud83d\ude14.\";\n\nif (!state.theme) {\n  State.update({\n    theme: styled.div`\n    ${daisyUiCss}\n    ${tailwindCss}\n`,\n  });\n}\n\nconst Theme = state.theme;\n\nreturn (\n  <Theme>\n    <div data-theme={daisyUiTheme}>{children}</div>\n  </Theme>\n);\n", "metadata": {"description": "## Using the Component with DaisyUI (Tailwind CSS Plugin)\n\nThis component supports **DaisyUI**, a plugin for **Tailwind CSS** that provides additional utility classes and components. DaisyUI extends Tailwind CSS with more styling options, making it even easier to create beautiful user interfaces.\n\nTo use the component with DaisyUI, follow the example below:\n\n```jsx\nlet content = (\n  <div>\n    <button className=\"btn\">Button</button>\n    <button className=\"btn btn-neutral\">Neutral</button>\n    <button className=\"btn btn-primary\">Button</button>\n    <button className=\"btn btn-secondary\">Button</button>\n    <button className=\"btn btn-accent\">Button</button>\n    <button className=\"btn btn-ghost\">Button</button>\n    <button className=\"btn btn-link\">Button</button>\n  </div>\n);\n\nreturn (\n  <Widget\n    src=\"igris.near/widget/DaisyUIWrapper\"\n    props={{\n      children: content,\n      daisyUiTheme: \"synthwave\",\n    }}\n  />\n);\n```\n\nIn this example, a `<div>` element is defined with multiple buttons using DaisyUI classes. The classes `btn`, `btn-neutral`, `btn-primary`, `btn-secondary`, `btn-accent`, `btn-ghost`, and `btn-link` are used to style the buttons.\n\nYou can modify the classes to customize the appearance and behavior of the buttons. Refer to the DaisyUI documentation for a comprehensive list of available classes and their respective styles.\n\nEnsure that you have DaisyUI installed and configured as a plugin for your Tailwind CSS setup. If you haven't set up DaisyUI yet, please refer to the official DaisyUI documentation for instructions on installation and configuration.\n\nOnce you have the component and DaisyUI set up, save the file and run your application. The component will render the buttons styled according to the DaisyUI classes applied, and the `daisyUiTheme` prop is set to \"synthwave\" to apply the specified theme.\n\n**Note:** Make sure your application has the necessary CSS styles and configurations to support DaisyUI and the selected theme.", "image": {"url": "https://daisyui.com/images/daisyui-logo/daisyui-logomark-1024-1024.png"}, "name": "DaisyUI Wrapper", "tags": {"component": "", "css": "", "daisyui": "", "style-component": "", "styled": "", "tailwind": "", "widget": ""}}, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/igris.near/widget/DaisyUIWrapper", "fact_widget_deployments_id": "465883e6722161075a4a0131e27daf5d", "inserted_timestamp": "2000-01-01T00:00:00.000Z", "modified_timestamp": "2000-01-01T00:00:00.000Z", "__row_index": 0}