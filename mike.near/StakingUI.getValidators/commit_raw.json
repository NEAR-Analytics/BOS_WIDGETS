{"tx_hash": "8aDkZ1j4mNSQqbjLpRaxrP6RuwjJ5D8mejkDpa3MERLu", "action_id_social": "33w1C1WcvJtcXFntLNRKpAtFU6jwtEMrcSKe9nUYzj8U-0-widget", "block_id": 111728302, "block_timestamp": "2024-01-30T23:53:43.396Z", "signer_id": "mike.near", "widget_name": "StakingUI.getValidators", "source_code": "const [allMainnetValidators, setAllMainnetValidators] = useState([]);\n\nconst mainnetValidators = {\n  getAddresses: (customRPCEndpoint) => {\n    customRPCEndpoint = customRPCEndpoint || \"https://rpc.mainnet.near.org\";\n    return new Promise((resolve, reject) => {\n      try {\n        asyncFetch(\"https://rpc.mainnet.near.org\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            jsonrpc: \"2.0\",\n            method: \"validators\",\n            params: [null],\n            id: \"mainnet-vals\",\n          }),\n        }).then((data) => {\n          console.log(\"aloha data\", data);\n          const { current_validators, next_validators } = data.body.result;\n          // for regular fetch, no asyncFetch\n          // const { current_validators, next_validators } = data.result;\n\n          console.log(\"current_validators\", current_validators);\n          console.log(\"next_validators\", next_validators);\n\n          const uniqueAccountIds = getUniqueValidatorAddresses(\n            current_validators,\n            next_validators\n          );\n          console.log(\"uniqueAccountIds\", uniqueAccountIds);\n\n          // Update state or perform other actions with uniqueAccountIds\n          // State.update({\n          // allValidatorAddresses: uniqueAccountIds\n          // });\n        });\n        return resolve(\n          expectedSignerAddress.toLowerCase() == address.toLowerCase()\n        );\n      } catch {\n        console.error(\n          `Could not get list of mainnet validators from ${customRPCEndpoint}`\n        );\n        return reject();\n      }\n    });\n  },\n};\n\nreturn { allMainnetValidators, mainnetValidators };\n", "metadata": {"tags": {"bos-gg": ""}}, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/mike.near/widget/StakingUI.getValidators", "fact_widget_deployments_id": "953a83690a15c58ea03488211f149a79", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 1}