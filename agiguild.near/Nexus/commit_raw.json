{"tx_hash": "6fbNx8CLUY1ACrJJgL8qAbKpzGcXnPskXfr8tVH5uGLb", "action_id_social": "ETujEs82bdteLFD6YSZshLc44ezJyaEM24EtgQHFMWQu-0-widget", "block_id": 116080025, "block_timestamp": "2024-04-04T00:26:37.755Z", "signer_id": "agiguild.near", "widget_name": "Nexus", "source_code": "const Instructions = styled.div`\n  width: 70%;\n  color: #555;\n`;\nconst Wrapper = styled.div`\n  display: grid;\n  gap: 40px;\n  grid-template-columns: 244px 1.5fr;\n  align-items: start;\n  height: 100%;\n`;\nconst { schema } = VM.require(`agiguild.near/widget/Schema.Nexus`);\nif (!schema ) {\n    return <></>;\n}\n\nconst storedGroup = Storage.get(\"nexus-group\");\nif(storedGroup === null) {\n    return <></>;\n}\nconst storedTabs = Storage.get(\"nexus-tabs\");\nif(storedTabs === null) {\n    return <></>;\n}\nconst [activeGroup, setActiveGroup] = useState(storedGroup || \"overview\");\nuseEffect(() => {\n    Storage.set(\"nexus-group\", activeGroup);\n}, [activeGroup]);\n\nconst [activeTabs, setActiveTabs] = useState(storedTabs || {datasets: \"alignment\", models: \"providers\", agents: \"agents\"});\n\nuseEffect(() => {\n    Storage.set(\"nexus-tabs\", activeTabs);\n}, [activeTabs]);\n\nconst [paramsHandled, setParamsHandled] = useState(false);\nif (!paramsHandled && props.group && props.group !== activeGroup) {\n    setParamsHandled(true);\n    setActiveGroup(props.group)\n    const activeTab = activeTabs[activeGroup];\n    if (props.tab && props.tab !== activeTab) {\n        const newTabs = {...activeTabs};\n        newTabs[props.group] = props.tab;\n        setActiveTabs(newTabs);\n    }\n}\n\nconst content = {\n    overview: () => {\n        return (\n            <div>\n                <Widget src=\"agiguild.near/widget/HeaderText\" props={{text: \"AGI Guild\", color: \"#11181c\"}}/>\n                <Instructions>\n                    <p>Welcome to the AGI Guild</p>\n\n                    <div style={{paddingLeft: \"2em\"}}>\n                        <p>\n                            <Link href={'https://github.com/agiguild/agiguild/blob/master/README.md'} target=\"_blank\">https://github.com/agiguild/agiguild/</Link>\n                        </p>\n                    </div>\n                    <Widget src=\"agiguild.near/widget/Overview\" props={{}}/>\n                </Instructions>\n            </div>\n        );\n    },\n    subGroups: (groupName, group) => {\n        return (\n            <div>\n                <h4 style={{ textAlign: \"left\"}}>{group.title}</h4>\n\n                <Widget\n                    src=\"near/widget/DIG.Tabs\"\n                    props={{\n                        variant: \"line\",\n                        size: \"large\",\n                        value: activeTabs[groupName] || group.defaultValue || group.items[0].value,\n                        onValueChange: (value) => {\n                            const newTabs = {...activeTabs};\n                            newTabs[groupName] = value;\n                            setActiveTabs(newTabs);\n                        },\n                        items: group.items,\n                    }}\n                />\n            </div>\n        );\n    },\n    dashboard: () => {\n        return (\n            <div>\n                <Instructions>\n                    <p>This is your personal Dashboard</p>\n\n                    <div style={{paddingLeft: \"2em\"}}>\n                        <p>\n                            Usage of Agents, Datasets, etc that you have contributed.\n                        </p>\n                        <p>\n                            Your favorite Agents.\n                        </p>\n                    </div>\n                </Instructions>\n            </div>\n        );\n    },\n}\n\nconst renderContent = () => {\n    switch (activeGroup) {\n        case \"overview\":\n      return content.overview();\n        case \"dashboard\":\n    return content.dashboard();\n  default:\n      return content.subGroups(activeGroup, schema[activeGroup]);\n  }\n};\n\nconst handleMenuClick = (value) => {\n  setActiveGroup(value);\n};\n\nconst sidebarItems = (schema) => {\n    return Object.keys(schema).map((key) => {\n        return {\n        name: schema[key].title,\n        value: key,\n        icon: schema[key].icon,\n        onSelect: () => {\n            handleMenuClick(key);\n        },\n        };\n    });\n\n}\n\nreturn (\n    <div className=\"gateway-page-container\">\n        <div className=\"d-flex flex-column gap-5\">\n            <Wrapper>\n                <Widget\n                    src={`near/widget/Moderation.Sidebar`}\n                    props={{\n                        title: \"AGI Guild\",\n                        activeTab: activeGroup,\n                        items: sidebarItems(schema),\n                    }}\n                />\n                {renderContent()}\n            </Wrapper>\n        </div>\n    </div>\n);\n\n\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/agiguild.near/widget/Nexus", "fact_widget_deployments_id": "7648af4d248182163f743e1fb9b30978", "inserted_timestamp": "2024-04-04T02:49:43.816Z", "modified_timestamp": "2024-04-04T02:49:43.816Z", "__row_index": 0}