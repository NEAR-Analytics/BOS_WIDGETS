{"tx_hash": "91JybMPYBaWHZ4ysxSNTXLGg9fbfj4LMdAB6jsa9bp3Q", "action_id_social": "AVY1skApDMgCtLshvCJMFKtxh8ZC5HFb4sMXYMkcKAEp-0-widget", "block_id": 116617928, "block_timestamp": "2024-04-11T15:28:07.279Z", "signer_id": "agiguild.near", "widget_name": "Nexus", "source_code": "const Wrapper = styled.div`\n  display: grid;\n  gap: 40px;\n  grid-template-columns: 244px 1.5fr;\n  align-items: start;\n  height: 100%;\n\n  @media (max-width: 750px) {\n    display: flex;\n    flex-direction: column;\n  }\n`;\nconst { schema } = VM.require(`agiguild.near/widget/Schema.Nexus`);\nif (!schema) {\n  return <></>;\n}\n\nconst storedGroup = Storage.get(\"nexus-group\");\nif (storedGroup === null) {\n  return <></>;\n}\nconst storedTabs = Storage.get(\"nexus-tabs\");\nif (storedTabs === null) {\n  return <></>;\n}\nconst [activeGroup, setActiveGroup] = useState(storedGroup || \"overview\");\nuseEffect(() => {\n  Storage.set(\"nexus-group\", activeGroup);\n}, [activeGroup]);\n\nconst [activeTabs, setActiveTabs] = useState(\n  storedTabs || {\n    datasets: \"alignment\",\n    models: \"providers\",\n    agents: \"agents\",\n  },\n);\n\nuseEffect(() => {\n  Storage.set(\"nexus-tabs\", activeTabs);\n}, [activeTabs]);\n\nconst [paramsHandled, setParamsHandled] = useState(false);\nif (!paramsHandled && props.group && props.group !== activeGroup) {\n  setParamsHandled(true);\n  setActiveGroup(props.group);\n  const activeTab = activeTabs[activeGroup];\n  if (props.tab && props.tab !== activeTab) {\n    const newTabs = { ...activeTabs };\n    newTabs[props.group] = props.tab;\n    setActiveTabs(newTabs);\n  }\n}\n\nconst content = {\n  overview: () => {\n    return (\n      <Widget\n        src=\"agiguild.near/widget/Overview\"\n        props={{ handleMenuClick }}\n      />\n    );\n  },\n  subGroups: (groupName, group) => {\n    return (\n      <div>\n        <h4 style={{ textAlign: \"left\" }}>{group.title}</h4>\n\n        <Widget\n          src=\"near/widget/DIG.Tabs\"\n          props={{\n            variant: \"line\",\n            size: \"large\",\n            value:\n              activeTabs[groupName] ||\n              group.defaultValue ||\n              group.items[0].value,\n            onValueChange: (value) => {\n              const newTabs = { ...activeTabs };\n              newTabs[groupName] = value;\n              setActiveTabs(newTabs);\n            },\n            items: group.items,\n          }}\n        />\n      </div>\n    );\n  },\n  dashboard: () => {\n    return <Widget src=\"near/widget/Dashboard\" props={{}} />;\n  },\n};\n\nconst renderContent = () => {\n  switch (activeGroup) {\n    case \"overview\":\n      return content.overview();\n    case \"dashboard\":\n      return content.dashboard();\n    default:\n      return content.subGroups(activeGroup, schema[activeGroup]);\n  }\n};\n\nconst handleMenuClick = (value) => {\n  setActiveGroup(value);\n};\n\nconst sidebarItems = (schema) => {\n  return Object.keys(schema).map((key) => {\n    return {\n      name: schema[key].title,\n      value: key,\n      icon: schema[key].icon,\n      onSelect: () => {\n        handleMenuClick(key);\n      },\n    };\n  });\n};\n\nreturn (\n  <div className=\"gateway-page-container\">\n    <div className=\"d-flex flex-column gap-5\">\n      <Wrapper>\n        <Widget\n          src={`near/widget/Moderation.Sidebar`}\n          props={{\n            title: \"NEAR AI\",\n            activeTab: activeGroup,\n            items: sidebarItems(schema),\n          }}\n        />\n        {renderContent()}\n      </Wrapper>\n    </div>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/agiguild.near/widget/Nexus", "fact_widget_deployments_id": "e8a403d739e5a9b4805e14d9747d4170", "inserted_timestamp": "2024-04-11T16:49:18.947Z", "modified_timestamp": "2024-04-11T16:49:18.947Z", "__row_index": 2}