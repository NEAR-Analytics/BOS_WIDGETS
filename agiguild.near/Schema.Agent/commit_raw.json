{"tx_hash": "91JybMPYBaWHZ4ysxSNTXLGg9fbfj4LMdAB6jsa9bp3Q", "action_id_social": "AVY1skApDMgCtLshvCJMFKtxh8ZC5HFb4sMXYMkcKAEp-0-widget", "block_id": 116617928, "block_timestamp": "2024-04-11T15:28:07.279Z", "signer_id": "agiguild.near", "widget_name": "Schema.Agent", "source_code": "const { genSchema: genericGenSchema } = VM.require(\n  \"near/widget/Entities.Template.GenericSchema\",\n);\n\nconst genSchema = (ignored) => {\n  const namespace = \"near\";\n  const entityType = \"agent\";\n  const entityTitle = \"Agent\";\n\n  const genericSchema = genericGenSchema(namespace, entityType, entityTitle);\n  return {\n    ...genericSchema,\n    prompt: {\n      type: \"string\",\n      inputProps: {\n        min: 2,\n        max: 8192,\n        placeholder: \"The prompt for the agent.\",\n        required: true,\n      },\n      multiline: true,\n      label: \"Prompt\",\n      order: 3,\n    },\n    component: {\n      type: \"string\",\n      inputProps: {\n        min: 0,\n        max: 255,\n        placeholder:\n          \"The component used to run the agent, default is near/widget/Agent.AgentChat\",\n        required: false,\n      },\n      label: \"Component\",\n      order: 4,\n    },\n    // preferredProvider: {\n    //     inputProps: {\n    //         min: 2,\n    //         max: 255,\n    //         placeholder: \"The preferred provider for the agent.\",\n    //         required: false,\n    //     },\n    //     label: \"Preferred Provider\",\n    //     order: 4,\n    // },\n    // preferredModel: {\n    //   inputProps: {\n    //     min: 2,\n    //     max: 255,\n    //     placeholder: \"The preferred model for the agent.\",\n    //     required: false,\n    //   },\n    //   label: \"Preferred Model\",\n    //   order: 5,\n    // },\n    // variables: {\n    //     inputProps: {\n    //         min: 2,\n    //         max: 255,\n    //         placeholder: \"The variables for the agent.\",\n    //         required: false,\n    //     },\n    //     label: \"A comma separated list of variables that should be passed into the prompt. Example: ['rfp', 'proposal'].\",\n    //     order: 6,\n    // },\n    // tools: {\n    //     inputProps: {\n    //         min: 2,\n    //         max: 255,\n    //         placeholder: \"A JSON array of Tools or Functions the agent should have access to.\",\n    //         required: false,\n    //     },\n    //\n    //     label: \"Tools\",\n    //     order: 9,\n    // },\n    // properties: {\n    //   inputProps: {\n    //     min: 2,\n    //     max: 1024,\n    //     placeholder: \"JSON properties for the agent.\",\n    //     required: false,\n    //   },\n    //\n    //   label: \"Properties\",\n    //   order: 10,\n    // },\n  };\n};\n\nreturn { genSchema };\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/agiguild.near/widget/Schema.Agent", "fact_widget_deployments_id": "e5708fddd7219f5c3a5ebdbf05d32490", "inserted_timestamp": "2024-04-11T16:49:18.947Z", "modified_timestamp": "2024-04-11T16:49:18.947Z", "__row_index": 8}