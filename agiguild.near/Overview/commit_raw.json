{"tx_hash": "AKvhBFFRLghFuvoWmWcRFUUwtLiWoT35GU337Nm2ruAE", "action_id_social": "ciRE1h3GtVMc7jPWWJ6vVBrieSQrUHMxHVySDMLpLqD-0-widget", "block_id": 116498273, "block_timestamp": "2024-04-09T23:01:16.485Z", "signer_id": "agiguild.near", "widget_name": "Overview", "source_code": "const Wrapper = styled.div`\n  --section-gap: 20px;\n  --text-hero: 500 56px/1 \"FK Grotesk\", \"Mona Sans\", sans-serif;\n  gap: var(--section-gap);\n  display: flex;\n  flex-direction: column;\n  max-width: 960px;\n`;\n\nconst H1 = styled.h1`\n  font: var(--text-hero);\n  color: var(--black);\n  margin: 0;\n  padding-top: 24px;\n\n  @media (max-width: 900px) {\n    padding-top: 0;\n    font-size: 36px;\n  }\n`;\n\nconst Text = styled.p`\n  font: var(--${(p) => p.$size ?? \"text-base\"});\n  font-weight: ${(p) => p.$fontWeight} !important;\n  color: var(--${(p) => p.$color ?? \"sand12\"});\n  margin: 0;\n  letter-spacing: ${(p) => p.$letterSpacing};\n\n  display: -webkit-box;\n  overflow: hidden;\n  -webkit-line-clamp: ${(p) => p.$overflowLines ?? \"2\"};\n  -webkit-box-orient: vertical;\n  text-overflow: ellipsis;\n  word-break: break-word;\n\n  @media (max-width: 900px) {\n    font: var(--${(p) => p.$mobileSize ?? p.$size ?? \"text-base\"});\n  }\n\n  ${(p) =>\n    p.$loading &&\n    `\n      border-radius: 2px;\n      background: linear-gradient(to right, var(--sand10) 33%, var(--sand9) 66%, var(--sand10) 99%);\n      animation: waveAnimation 5s linear infinite;\n      min-width: 25%;\n      min-height: 10px;\n    `}\n\n  @keyframes waveAnimation {\n    0% {\n      background-position: 0px 0;\n    }\n    100% {\n      background-position: 100em 0;\n    }\n  }\n`;\n\nconst Flex = styled.div`\n  display: flex;\n  gap: ${(p) => p.$gap};\n  align-items: ${(p) => p.$alignItems};\n  justify-content: ${(p) => p.$justifyContent};\n  flex-direction: ${(p) => p.$direction ?? \"row\"};\n  flex-wrap: ${(p) => p.$wrap ?? \"nowrap\"};\n\n  ${(p) =>\n    p.$mobileStack &&\n    `\n    @media (max-width: 900px) {\n      flex-direction: column;\n    }\n  `}\n\n  @media (max-width: 900px) {\n    gap: ${(p) => p.$mobileGap ?? p.$gap};\n    align-items: ${(p) => p.$mobileAlignItems ?? p.$alignItems};\n  }\n`;\n\nconst Grid = styled.div`\n  display: grid;\n  gap: ${(p) => p.$gap};\n  grid-template-columns: ${(p) => p.$columns};\n  align-items: ${(p) => p.$alignItems};\n  row-gap: ${(p) => p.$rowGap};\n\n  @media (max-width: 900px) {\n    grid-template-columns: ${(p) => p.$mobileColumns ?? \"1fr\"};\n    gap: ${(p) => p.$mobileGap ?? p.$gap};\n    row-gap: ${(p) => p.$mobileRowGap ?? p.$rowGap};\n  }\n`;\n\nconst Section = styled.div`\n  position: relative;\n\n  @media (max-width: 900px) {\n    padding: 0 14px;\n  }\n`;\n\nconst Container = styled.div`\n  display: flex;\n  max-width: 1224px;\n  margin: 0 auto;\n  gap: ${(p) => p.$gap ?? \"var(--section-gap)\"};\n  flex-direction: column;\n  align-items: ${(p) => (p.$center ? \"center\" : undefined)};\n  justify-content: ${(p) => (p.$center ? \"center\" : undefined)};\n  text-align: ${(p) => (p.$center ? \"center\" : undefined)};\n`;\n\nconst Pattern = styled.div`\n  display: flex;\n  width: 100%;\n  background: ${(p) => p.$background};\n  border-radius: ${(p) => p.$borderRadius ?? \"24px\"};\n  box-shadow: ${(p) => p.$shadow};\n  border: ${(p) => p.$border};\n`;\n\nconst PatternContent = styled.div`\n  padding: ${(p) => p.$padding};\n  width: 100%;\n\n  @media (max-width: 900px) {\n    padding: ${(p) => p.$mobilePadding ?? p.$padding};\n  }\n`;\n\nconst ButtonMenuWrapper = styled.button`\n  all: unset;\n\n  display: flex;\n  gap: ${(p) => p.$gap};\n  align-items: ${(p) => p.$alignItems};\n  padding: ${(p) => p.$padding};\n  border: 1px solid transparent;\n  border-radius: 6px;\n  transition: all 200ms;\n  pointer-events: ${(p) => p.$pointerEvents};\n\n  @media (max-width: 900px) {\n    padding: 0;\n  }\n\n  &:hover {\n    cursor: pointer;\n    text-decoration: none;\n\n    @media (min-width: 901px) {\n      background: ${(p) => !p.$noHover && \"var(--violet3)\"};\n      border-color: ${(p) => !p.$noHover && \"var(--violet6)\"};\n    }\n\n    & p {\n      color: ${(p) => !p.$noHover && \"var(--violet12)\"};\n    }\n  }\n\n  &:focus-within {\n    background: ${(p) => !p.$noHover && \"var(--violet3)\"};\n    border-color: ${(p) => !p.$noHover && \"var(--violet6)\"};\n    box-shadow: ${(p) => !p.$noHover && \"0 0 0 4px var(--violet4)\"};\n\n    & p {\n      color: ${(p) => !p.$noHover && \"var(--violet12)\"};\n    }\n  }\n`;\n\nconst ButtonLinkWrapper = styled(\"Link\")`\n  all: unset;\n\n  display: flex;\n  gap: ${(p) => p.$gap};\n  align-items: ${(p) => p.$alignItems};\n  padding: ${(p) => p.$padding};\n  border: 1px solid transparent;\n  border-radius: 6px;\n  transition: all 200ms;\n  pointer-events: ${(p) => p.$pointerEvents};\n\n  @media (max-width: 900px) {\n    padding: 0;\n  }\n\n  &:hover {\n    cursor: pointer;\n    text-decoration: ${(p) => (!p.$noHover ? \"none\" : \"underline\")};\n\n    @media (min-width: 901px) {\n      background: ${(p) => !p.$noHover && \"var(--violet3)\"};\n      border-color: ${(p) => !p.$noHover && \"var(--violet6)\"};\n    }\n\n    & p {\n      color: ${(p) => !p.$noHover && \"var(--violet12)\"};\n    }\n\n    .trending-round-icon {\n      filter: drop-shadow(0px 4px 8px rgba(0, 0, 0, 0.06)) drop-shadow(0px 0px 0px rgba(0, 0, 0, 0.06));\n    }\n  }\n\n  &:focus-within {\n    background: ${(p) => !p.$noHover && \"var(--violet3)\"};\n    border-color: ${(p) => !p.$noHover && \"var(--violet6)\"};\n    box-shadow: ${(p) => !p.$noHover && \"0 0 0 4px var(--violet4)\"};\n    text-decoration: ${(p) => (!p.$noHover ? \"none\" : \"underline\")};\n\n    & p {\n      color: ${(p) => !p.$noHover && \"var(--violet12)\"};\n    }\n\n    .trending-round-icon {\n      filter: drop-shadow(0px 4px 8px var(--violet6)) drop-shadow(0px 0px 0px var(--violet6));\n    }\n  }\n`;\n\nconst IconWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex: 0 0 auto;\n  width: ${(p) => p.$size};\n  height: ${(p) => p.$size};\n  background: ${(p) => p.$background};\n  border-radius: ${(p) => p.$borderRadius};\n  border: ${(p) => p.$border};\n  padding: ${(p) => p.$padding};\n  filter: ${(p) => p.$filter};\n  transition: all 200ms;\n\n  ${(p) =>\n    p.$loading &&\n    `\n    background: linear-gradient(to right, var(--sand10) 33%, var(--sand9) 66%, var(--sand10) 99%);\n    background-position: center;\n    animation: waveAnimation 5s linear infinite;\n  `}\n\n  @keyframes waveAnimation {\n    0% {\n      background-position: 0px 0;\n    }\n    100% {\n      background-position: 100em 0;\n    }\n  }\n\n  ${ButtonLinkWrapper}:hover & {\n    border-color: var(--violet6);\n\n    & > i {\n      color: var(--violet10);\n    }\n  }\n\n  ${ButtonLinkWrapper}:focus-within & {\n    border-color: var(--violet6);\n\n    & > i {\n      color: var(--violet10);\n    }\n  }\n`;\n\nconst IconCover = styled.div`\n  width: 100%;\n  height: 100%;\n  background-image: url(${(p) => p.$url});\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n  border-radius: inherit;\n`;\n\nconst { href } = VM.require(\"devhub.near/widget/core.lib.url\");\nif (!href) {\n  return <p>Loading modules...</p>;\n}\nconst {handleMenuClick} = props;\n\nconst TRENDING_APPS_LIMIT = 6;\nconst dummyData = {\n  name: \"\",\n  display_name: \"\",\n  component: \"\",\n  logo_url: \"\",\n};\nconst prefillData = Array(TRENDING_APPS_LIMIT).fill(dummyData);\nconst namespace = \"agiguild\";\nconst entityType = \"agent\";\nconst collection = \"dataplatform_near_entities_entities\";\nconst buildQueries = () => {\n  return `\nquery ListQuery($offset: Int, $limit: Int) {\n  ${collection}(\n      where: {namespace: {_eq: \"${namespace}\"}, entity_type: {_eq: \"${entityType}\"}}\n      order_by: [{ stars: desc }, { id: desc }], \n      offset: $offset, limit: $limit) {\n      entity_type\n      namespace\n      id\n      account_id\n      name\n      display_name\n      logo_url\n      attributes\n      stars\n      created_at\n      updated_at\n  }\n  ${collection}_aggregate (\n      where: {namespace: {_eq: \"${namespace}\"}, entity_type: {_eq: \"${entityType}\"}}\n    ){\n    aggregate {\n      count\n    }\n  }\n}\n`;\n};\nconst queryName = \"ListQuery\";\nconst loadItemsQueryApi = VM.require(\"near/widget/Entities.QueryApi.Client\")?.loadItems;\nif (!loadItemsQueryApi) {\n    return <p>Loading modules...</p>;\n}\n\nconst [topRatingApps, setTopRatingApps] = useState(prefillData);\nconst [loading, setLoading] = useState(true);\n\nconst onLoad = (newItems, totalItems) => {\n    const items = newItems ? newItems.slice(0, TRENDING_APPS_LIMIT) : [];\n    setTopRatingApps(items);\n    setLoading(false);\n}\n\nloadItemsQueryApi(buildQueries(), queryName, 0, collection, onLoad);\n\nconst buildAgentUrl = (agentComponent, accountId, name) =>\n  href({\n    widgetSrc: agentComponent,\n    params: { src: `${accountId}/agent/${name}` },\n  });\n\nconst Icon = ({ className, fontSize, ...forwardedProps }) => (\n  <IconWrapper {...forwardedProps}>\n    <i className={className} style={{ fontSize, flexShrink: 0 }} />\n  </IconWrapper>\n);\n\nconst RoundIcon = ({ url, ...forwardedProps }) => (\n  <IconWrapper {...forwardedProps}>\n    <IconCover $url={url} />\n  </IconWrapper>\n);\n\nconst ButtonLink = ({ href, value, target, icon, title, text }) => (\n  <ButtonMenuWrapper onClick={() => handleMenuClick(value)} target={target} $gap=\"24px\" $padding=\"24px\">\n    <Icon\n      className={icon}\n      $size=\"40px\"\n      $background=\"var(--sand1)\"\n      $border=\"1px solid var(--sand6)\"\n      $borderRadius=\"4px\"\n      $fontSize=\"18px\"\n    />\n    <Flex $direction=\"column\" $gap=\"16px\">\n      <Flex $gap=\"8px\" $alignItems=\"center\">\n        <Text $fontWeight=\"600\" $letterSpacing=\"0.28px\">\n          {title}\n        </Text>\n        <Icon className=\"ph ph-caret-right\" $fontSize=\"16px\" />\n      </Flex>\n      <Text $size=\"text-s\" $letterSpacing=\"0.28px\">\n        {text}\n      </Text>\n    </Flex>\n  </ButtonMenuWrapper>\n);\n\nconst Card = ({ title, text, children }) => (\n  <Pattern\n    $background=\"var(--violet1)\"\n    $borderRadius=\"24px\"\n    $border=\"1px solid var(--violet2)\"\n    $shadow=\"0px 0px 0px 1px rgba(0, 0, 0, 0.02), 0px 4px 8px 0px rgba(0, 0, 0, 0.06)\"\n  >\n    <PatternContent $padding=\"24px\">\n      <Flex $direction=\"column\" $gap=\"56px\" $mobileGap=\"48px\">\n        <Flex $direction=\"column\" $gap=\"24px\">\n          <Text $size=\"text-xl\" $fontWeight=\"500\">\n            {title}\n          </Text>\n          <Text $color=\"sand11\" $letterSpacing=\"0.32px\">\n            {text}\n          </Text>\n        </Flex>\n        {children}\n      </Flex>\n    </PatternContent>\n  </Pattern>\n);\n\nconst TrendingApp = ({ href, url, name, loading }) => (\n  <ButtonLinkWrapper\n    href={href}\n    target=\"_blank\"\n    $gap=\"12px\"\n    $alignItems=\"center\"\n    $noHover\n    aria-disabled={loading}\n    $pointerEvents={loading ? \"none\" : \"auto\"}\n  >\n    <RoundIcon\n      url={url}\n      $noHover\n      $size=\"60px\"\n      $padding=\"5px\"\n      $borderRadius=\"50%\"\n      $background=\"var(--white)\"\n      $filter=\"drop-shadow(0px 4px 8px rgba(0, 0, 0, 0.06)) drop-shadow(0px 0px 0px rgba(0, 0, 0, 0.06))\"\n      $loading={loading}\n    />\n    <Text $size=\"text-s\" $fontWeight=\"600\" $overflowLines=\"2\" $letterSpacing=\"0.28px\" $loading={loading}>\n      {name}\n    </Text>\n  </ButtonLinkWrapper>\n);\n\nreturn (\n  <Wrapper className=\"gateway-page-container\">\n    <Section>\n      <Container>\n        <Pattern $background=\"linear-gradient(264deg, #CFCCF5 0%, #A39CEC 99.35%)\" $borderRadius=\"16px\">\n          <PatternContent $padding=\"55px 24px 55px 48px\" $mobilePadding=\"48px 20px\">\n            <Grid $gap=\"24px\" $columns=\"1fr 1fr\">\n              <Flex $direction=\"column\" $gap=\"32px\">\n                <H1>Get Started</H1>\n                <Text $size=\"text-xl\" $mobileSize=\"text-l\" style={{ maxWidth: \"385px\" }}>\n                  Let's find what you need.\n                </Text>\n              </Flex>\n              <Flex $direction=\"column\" $gap=\"16px\" $mobileGap=\"48px\">\n                <ButtonLink\n                  value=\"agents\"\n                  icon=\"ph-bold ph-plus\"\n                  title=\"Find an Agent\"\n                  text=\"Put AI Agents to work for you\"\n                />\n                <ButtonLink\n                  value=\"agents\"\n                  icon=\"ph-bold ph-git-fork\"\n                  title=\"Build an Agent\"\n                  text=\"Create an Agent or other community resources.\"\n                />\n              </Flex>\n            </Grid>\n          </PatternContent>\n        </Pattern>\n      </Container>\n    </Section>\n\n    <Section>\n      <Container>\n        <Grid $gap=\"24px\" $mobileGap=\"20px\" $columns=\"1fr 1fr\">\n          <Card\n            title=\"Trending Agents\"\n            text={\n              <>\n                Explore agents built by the\n                NEAR community.\n              </>\n            }\n          >\n            <Grid $gap=\"20px\" $rowGap=\"24px\" $columns=\"1fr 1fr\" $mobileColumns=\"1fr 1fr\">\n              {topRatingApps.map((app) => (\n                <TrendingApp\n                  key={app.name}\n                  href={buildAgentUrl(app.attributes.component, app.account_id, app.name)}\n                  url={app.logo_url}\n                  name={app.display_name}\n                  loading={loading}\n                />\n              ))}\n            </Grid>\n          </Card>\n          <Card\n            title=\"Find Resources\"\n            text=\"From archived Datasets to full Model weights.\"\n          >\n            <Flex $direction=\"column\" $gap=\"16px\" $mobileGap=\"48px\">\n              <ButtonLink\n                value=\"datasets\"\n                icon=\"ph-bold ph-book-open-text\"\n                title=\"Datasets\"\n                text=\"Stored in IPFS.\"\n              />\n              <ButtonLink\n                value=\"models\"\n                icon=\"ph-bold ph-video\"\n                title=\"Models\"\n                text=\"Model providers, and full Model weights.\"\n              />\n            </Flex>\n          </Card>\n        </Grid>\n      </Container>\n    </Section>\n  </Wrapper>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/agiguild.near/widget/Overview", "fact_widget_deployments_id": "46b4c9385c92ab22e178ba80975239f9", "inserted_timestamp": "2024-04-10T00:46:19.259Z", "modified_timestamp": "2024-04-10T00:46:19.259Z", "__row_index": 5}