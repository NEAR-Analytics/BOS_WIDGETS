{"tx_hash": "EbcuuLkjrs2crfp3hN4jtQ4LdJwivcHqeDvjY2gHDxme", "action_id_social": "F7VNMrvW5r9r6qzob2bef3WBVnWHJ3Br1GpEBCCHgdZX-0-widget", "block_id": 114205084, "block_timestamp": "2024-03-06T13:06:30.794Z", "signer_id": "bos.yearofchef.near", "widget_name": "Donations", "source_code": "const [allDonations, setAllDonations] = useState([]);\n\nconst nearToUsd = useCache(\n  () =>\n    asyncFetch(\n      \"https://api.coingecko.com/api/v3/simple/price?ids=near&vs_currencies=usd\"\n    ).then((res) => {\n      if (res.ok) {\n        return res.body.near.usd;\n      }\n    }),\n  \"nearToUsd\"\n);\nif (!allDonations.length) {\n  return Near.asyncView(\"donate.potlock.near\", \"get_donations_for_donor\", {\n    donor_id: \"v1.foodbank.near\",\n  })\n    .then((donations) => {\n      setAllDonations(donations);\n    })\n    .catch((err) => {\n      console.log(\"err fetchign donations\", err);\n    });\n}\n\nconst [page, setPage] = useState(0);\nconst perPage = 30;\n\nconst nearLogo =\n  \"https://ipfs.near.social/ipfs/bafkreib2cfbayerbbnoya6z4qcywnizqrbkzt5lbqe32whm2lubw3sywr4\";\n\nconst { getTimePassed, _address, reverseArr } = VM.require(\n  `potlock.near/widget/Components.DonorsUtils`\n) || {\n  getTimePassed: () => \"\",\n  _address: () => \"\",\n  reverseArr: () => [],\n};\n\nconst yoctosToNear = (amount) => Big(amount).div(Big(10).pow(24));\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 2rem;\n  width: 100%;\n  .transcation {\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    font-size: 1rem;\n    .header {\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      padding: 10px;\n      gap: 1rem;\n      background: #ec2109;\n      color: white;\n      div {\n        width: 110px;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        font-weight: 600;\n      }\n    }\n    .address {\n      width: 160px !important;\n    }\n  }\n  @media only screen and (max-width: 768px) {\n    .transcation {\n      font-size: 12px;\n      .header {\n        padding: 10px 0;\n        div {\n          width: 80px !important;\n        }\n      }\n      .address {\n        justify-content: center;\n      }\n    }\n  }\n  @media only screen and (max-width: 480px) {\n    .transcation {\n      font-size: 9px;\n    }\n  }\n`;\n\nconst TrRow = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: space-between;\n  gap: 1rem;\n  padding: 20px 10px;\n\n  > div,\n  > span {\n    width: 110px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n  .price {\n    display: flex;\n    gap: 1rem;\n    align-items: center;\n    img {\n      width: 1.25rem;\n    }\n  }\n  .address {\n    color: #292929;\n    display: flex;\n    align-items: center;\n    justify-content: flex-start;\n    border-radius: 2px;\n    transition: all 200ms;\n    .profile-image {\n      width: 2rem;\n      height: 2rem;\n      margin-right: 1rem;\n    }\n  }\n  @media only screen and (max-width: 768px) {\n    padding: 10px 0;\n    > div,\n    > span {\n      width: 80px;\n    }\n    .price {\n      gap: 8px;\n      img {\n        width: 1rem;\n      }\n    }\n    .address .profile-image {\n      width: 1.5rem;\n      height: 1.5rem;\n      margin-right: 0.5rem;\n    }\n  }\n  @media only screen and (max-width: 480px) {\n    .price img {\n      width: 0.75rem;\n    }\n  }\n`;\n\nconst NoResult = styled.div`\n  font-size: 2rem;\n  text-align: center;\n`;\n\nconst ProfileImg = ({ address }) => (\n  <Widget\n    src=\"mob.near/widget/ProfileImage\"\n    props={{ accountId: address, style: {} }}\n  />\n);\n\nconst getUrl = (params) => `https://app.potlock.org/${params}`;\n\nreturn allDonations.length ? (\n  <Container>\n    <div className=\"transcation\">\n      <div className=\"header\">\n        <div className=\"address\">Project</div>\n        <div>Amount</div>\n        {nearToUsd && <div>Amount (USD)</div>}\n        <div>Date</div>\n      </div>\n      {reverseArr(allDonations)\n        .slice(page * perPage, (page + 1) * perPage)\n        .map((donation) => {\n          const {\n            recipient_id,\n            donated_at_ms,\n            donated_at,\n            project_id,\n            total_amount,\n          } = donation;\n          const projectId = recipient_id || project_id;\n          const totalAmount = yoctosToNear(total_amount);\n          return (\n            <TrRow>\n              <a\n                href={getUrl(`?tab=project&projectId=${projectId}`)}\n                className=\"address\"\n                target=\"_blank\"\n              >\n                <ProfileImg address={projectId} />\n                {_address(projectId)}\n              </a>\n\n              <div className=\"price\">\n                <img src={nearLogo} alt=\"NEAR\" />\n                {totalAmount.toFixed(2)}\n              </div>\n              {nearToUsd && <div>~${(totalAmount * nearToUsd).toFixed(2)}</div>}\n\n              <div>{getTimePassed(donated_at_ms || donated_at)} ago</div>\n            </TrRow>\n          );\n        })}\n    </div>\n    <Widget\n      src=\"baam25.near/widget/pagination\"\n      props={{\n        onClick: (page) => {\n          setPage(page);\n        },\n        data: allDonations,\n        page: page,\n        perPage: perPage,\n        bgColor: \"#ec2109\",\n      }}\n    />\n  </Container>\n) : (\n  <NoResult>No Donations</NoResult>\n);\n", "metadata": {"platform": "jutsu.ai"}, "branch": {"draft": null}, "widget_modules_used": null, "widget_url": "https://near.social/#/bos.yearofchef.near/widget/Donations", "fact_widget_deployments_id": "0e6142de5f92722cf0a54422f1b17501", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}