{"tx_hash": "7qUwkUfpsKMQKxomLAHXdUmvLEaBCnLH29gQV1rhEfdG", "action_id_social": "6S8bByLYqvS9bMC1DUYUzHVHweLraG3sNQK3JHQNKGKu-0-widget", "block_id": 104161998, "block_timestamp": "2023-10-25T08:01:39.556Z", "signer_id": "astraplusplus.ndctools.near", "widget_name": "DAO.Proposal.Create.Text", "source_code": "const accountId = props.accountId ?? context.accountId;\nconst daoId = props.daoId ?? \"multi.sputnik-dao.near\";\nconst onClose = props.onClose;\nconst isCongressDaoID = props.isCongressDaoID;\nconst isVotingBodyDao = props.isVotingBodyDao;\nconst registry = props.registry;\n\nconst HoMDaoId = props.dev\n    ? \"hom.gwg-testing.near\"\n    : \"congress-hom-v1.ndc-gwg.near\";\n\nif (!accountId) {\n    return \"Please connect your NEAR wallet :)\";\n}\n\nState.init({\n    description: state.description,\n    error: state.error,\n    powerType: null,\n    attachDeposit: 0,\n    proposalQueue: null\n});\n\n// only for UI\nconst powerTypes = [\n    {\n        text: \"Propose Budget\",\n        value: \"Budget\"\n    },\n    {\n        text: \"Propose Motion\",\n        value: \"Motion\"\n    }\n];\n\nconst handleProposal = () => {\n    if (!state.description) {\n        State.update({\n            error: \"Please enter a description\"\n        });\n        return;\n    }\n    const gas = 200000000000000;\n    const deposit = state.attachDeposit\n        ? Big(state.attachDeposit)\n        : 100000000000000000000000;\n    const args = isCongressDaoID\n        ? {\n              description: state.description,\n              kind: \"Text\"\n          }\n        : {\n              proposal: {\n                  description: state.description,\n                  kind: \"Vote\"\n              }\n          };\n    if (isVotingBodyDao) {\n        const args = JSON.stringify({\n            description: state.description,\n            kind: \"Text\",\n            caller: accountId\n        });\n\n        if (!state.proposalQueue) {\n            State.update({\n                error: \"Please select proposal queue\"\n            });\n            return;\n        }\n\n        Near.call([\n            {\n                contractName: registry,\n                methodName: \"is_human_call\",\n                args: {\n                    ctr: daoId,\n                    function: \"create_proposal\",\n                    payload: args\n                },\n                gas: gas,\n                deposit: deposit\n            }\n        ]);\n    } else {\n        Near.call([\n            {\n                contractName: daoId,\n                methodName:\n                    isCongressDaoID || isVotingBodyDao\n                        ? \"create_proposal\"\n                        : \"add_proposal\",\n                args: args,\n                gas: gas,\n                deposit: deposit\n            }\n        ]);\n    }\n};\n\nconst onChangeDescription = (description) => {\n    State.update({\n        description,\n        error: undefined\n    });\n};\n\nconst onChangeQueue = ({ amount, queue }) => {\n    State.update({\n        attachDeposit: amount,\n        proposalQueue: queue,\n        error: undefined\n    });\n};\n\nconst defaultDescription =\n    \"### [Your Title Here]\\n\\n#### Description\\n\\n[Detailed description of what the proposal is about.]\\n\\n#### Why This Proposal?\\n\\n[Explanation of why this proposal is necessary or beneficial.]\\n\\n#### Execution Plan\\n\\n[Description of how the proposal will be implemented.]\\n\\n#### Budget\\n\\n[If applicable, outline the budget required to execute this proposal.]\\n\\n#### Timeline\\n\\n[Proposed timeline for the execution of the proposal.]\";\n\nreturn (\n    <>\n        <Widget\n            src=\"astraplusplus.ndctools.near/widget/DAO.Proposal.Common.ProposalQueue\"\n            props={{\n                daoId: daoId,\n                onUpdate: onChangeQueue,\n                dev: props.dev\n            }}\n        />\n        {daoId === HoMDaoId && (\n            <div className=\"mb-3\">\n                <Widget\n                    src={`sking.near/widget/Common.Inputs.Select`}\n                    props={{\n                        label: \"Power\",\n                        noLabel: false,\n                        placeholder: \"Can propose motion\",\n                        options: powerTypes,\n                        value: state.powerType,\n                        onChange: (powerType) =>\n                            State.update({\n                                ...state,\n                                powerType: powerType.value\n                            }),\n                        error: undefined\n                    }}\n                />\n            </div>\n        )}\n        <div className=\"mb-3\">\n            <h5>Proposal Description</h5>\n            <Widget\n                src=\"sking.near/widget/Common.Inputs.Markdown\"\n                props={{\n                    onChange: (value) => onChangeDescription(value),\n                    height: \"270px\",\n                    initialText: defaultDescription\n                }}\n            />\n        </div>\n        {state.error && <div className=\"text-danger\">{state.error}</div>}\n        <div className=\"ms-auto\">\n            <Widget\n                src=\"sking.near/widget/Common.Button\"\n                props={{\n                    children: \"Create Proposal\",\n                    onClick: handleProposal,\n                    className: \"mt-2\",\n                    variant: \"success\"\n                }}\n            />\n            {onClose && (\n                <Widget\n                    src=\"sking.near/widget/Common.Button\"\n                    props={{\n                        children: \"Close\",\n                        onClick: onClose,\n                        className: \"mt-2\"\n                    }}\n                />\n            )}\n        </div>\n    </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/astraplusplus.ndctools.near/widget/DAO.Proposal.Create.Text", "fact_widget_deployments_id": "d232a58a68cbd7bdbd03d7afaef4411a", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 5}