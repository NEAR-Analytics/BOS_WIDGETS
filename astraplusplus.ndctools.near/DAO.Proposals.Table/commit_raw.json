{"tx_hash": "5F8s6izbBCUpSvME5SJAZcLqmPEvX7qV3X58NSwJKzAa", "action_id_social": "EzzAw6iLQasfbfCqcvUGi6qqxa4pJc2WYC9XaJ9HLZVY-0-widget", "block_id": 98889351, "block_timestamp": "2023-08-15T21:33:08.218Z", "signer_id": "astraplusplus.ndctools.near", "widget_name": "DAO.Proposals.Table", "source_code": "const { proposals, resPerPage, state, update } = props;\n\nconst formatDate = (date) => {\n  date = new Date(Date(date));\n  return `${\n    [\n      \"January\",\n      \"February\",\n      \"March\",\n      \"April\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"August\",\n      \"September\",\n      \"October\",\n      \"November\",\n      \"December\",\n    ][date.getMonth()]\n  } ${date.getDate()}, ${date.getFullYear()}`;\n};\n\nconst renderRow = (proposal, proposal_type, proposal_id, i) => {\n  return (\n    <tr>\n      <th scope=\"row\">\n        <span className=\"id-value\">#{proposal_id}</span>\n      </th>\n      <td>{formatDate(proposal.submission_time)}</td>\n      <td>\n        <Widget\n          src=\"nearui.near/widget/Element.User\"\n          props={{\n            accountId: proposal.proposer,\n            options: {\n              showImage: false,\n              shortenLength: 12,\n              fontSize: 13,\n            },\n          }}\n        />\n      </td>\n      <td className=\"text-center\">{proposal_type}</td>\n      <td className=\"text-center\">{proposal.status}</td>\n      <td>\n        <div className=\"d-flex justify-content-end\">\n          <Widget\n            src=\"nearui.near/widget/Layout.Modal\"\n            props={{\n              toggle: (\n                <Widget\n                  src=\"nearui.near/widget/Input.Button\"\n                  props={{\n                    children: \"More details\",\n                    variant: \"info\",\n                  }}\n                />\n              ),\n              content: (\n                <Widget\n                  src=\"astraplusplus.ndctools.near/widget/DAO.Proposals.Card.index\"\n                  props={{\n                    daoId: state.daoId,\n                    proposalString: JSON.stringify(proposal),\n                    multiSelectMode: state.multiSelectMode,\n                  }}\n                />\n              ),\n            }}\n          />\n        </div>\n      </td>\n    </tr>\n  );\n};\n\nconst Table = styled.div`\n  font-size: 13px;\n  font-weight: 600;\n  max-width: 100%;\n  overflow-x: auto;\n  height: 100%;\n  min-height: 100%;\n\n  td,\n  th {\n    vertical-align: middle;\n  }\n\n  tr {\n    height: 58px;\n  }\n\n  .id-value {\n    border: 1px solid #4498e0;\n    color: #4498e0;\n    padding: 4px 8px;\n    background: rgba(68, 152, 224, 0.1);\n    border-radius: 100px;\n    font-size: 12px;\n    font-weight: 500;\n  }\n`;\n\nreturn (\n  <Table\n    class=\"table-responsive my-3\"\n    style={{\n      minHeight: 65 * (proposals?.length ?? resPerPage),\n    }}\n  >\n    {proposals === null ? (\n      <>\n        <Widget src=\"nearui.near/widget/Feedback.Spinner\" />\n      </>\n    ) : (\n      <table class=\"table\">\n        <thead>\n          <tr>\n            <th scope=\"col\">ID</th>\n            <th scope=\"col\">Date</th>\n            <th scope=\"col\">Proposer</th>\n            <th scope=\"col\" className=\"text-center\">\n              Type\n            </th>\n            <th scope=\"col\" className=\"text-center\">\n              Status\n            </th>\n            <th scope=\"col\"></th>\n          </tr>\n        </thead>\n        <tbody>\n          {proposals !== null &&\n            proposals.map(({ proposal, proposal_type, proposal_id }, i) => {\n              proposal.kind = {\n                [proposal_type]: {\n                  ...proposal.kind,\n                },\n              };\n              proposal.id = proposal_id;\n              if (proposal.status === \"Removed\") return <></>;\n              Object.keys(proposal.vote_counts).forEach((k) => {\n                if (typeof proposal.vote_counts[k] == \"string\") {\n                  proposal.vote_counts[k] = proposal.vote_counts[k]\n                    .match(/.{1,2}/g)\n                    .map((x) => parseInt(x));\n                }\n              });\n              return renderRow(proposal, proposal_type, proposal_id, i);\n            })}\n        </tbody>\n      </table>\n    )}\n  </Table>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/astraplusplus.ndctools.near/widget/DAO.Proposals.Table", "fact_widget_deployments_id": "86031feeb1613cba51b83b5bb3cc0bbb", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}