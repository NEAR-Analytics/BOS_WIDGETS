{"tx_hash": "7uUFxZgtj2cZfbyXTvbiqfJD4MDQBwbEbiYn7J5kcHGt", "action_id_social": "EyGhYkdzYW1g3Gx2fbkGWqoXpVKP5gYFfPDjiJEQxN1S-0-widget", "block_id": 115226373, "block_timestamp": "2024-03-22T12:50:17.192Z", "signer_id": "astraplusplus.ndctools.near", "widget_name": "Congress.index", "source_code": "const { router } = props;\nconst accountId = props.accountId ?? context.accountId ?? \"\";\n\nconst RegistryId = props.dev\n  ? \"registry-v1.gwg-testing.near\"\n  : \"registry.i-am-human.near\";\nconst CoADaoId = props.dev\n  ? \"coa.gwg-testing.near\"\n  : \"congress-coa-v1.ndc-gwg.near\";\nconst VotingBodyDaoId = props.dev\n  ? \"voting-body-v1.gwg-testing.near\"\n  : \"voting-body-v1.ndc-gwg.near\";\nconst TCDaoId = props.dev\n  ? \"tc.gwg-testing.near\"\n  : \"congress-tc-v1.ndc-gwg.near\";\nconst HoMDaoId = props.dev\n  ? \"hom.gwg-testing.near\"\n  : \"congress-hom-v1.ndc-gwg.near\";\n\nconst HOM_IMG =\n  \"https://ipfs.near.social/ipfs/bafkreiaboucpddch7d6bqdkmztfacyv3ivcfetmxqjz4yug3zcjmbnsn24\";\nconst COA_IMG =\n  \"https://ipfs.near.social/ipfs/bafkreifhix4zg6fso7nqvp4dqg2o2diwf3umnavn7kbysaoiffknkhgqz4\";\nconst TC_IMG =\n  \"https://ipfs.near.social/ipfs/bafkreifel6rda6vqd2fxot2lqzdl2vmpsrpffz32z5nbb6hlxjy22x7gle\";\nconst VB_IMG =\n  \"https://ipfs.near.social/ipfs/bafkreieix4zbi2pmmlj37nybdtfr4fjko2b2nsmvur53dlcmpflcypa5om\";\n\nconst Content = {\n  hom: {\n    title: \"House of Merit\",\n    abbr: \"HoM\",\n    address: HoMDaoId,\n    color: \"#5BC65F\",\n    description:\n      \"The House of Merit is in charge of allocating the treasury and deploying capital for the growth of the ecosystem.\",\n    metadata: {\n      groups: 1,\n      powers: [\n        {\n          text: \"The House of Merit can propose setup package, budget, large budget items, and recurring budget items.\",\n          description:\n            \"The vote needs 8 approvals to pass the HoM. The Voting Body can veto during the cooldown period.\"\n        },\n        {\n          text: \"The House of Merit can propose motions, including motions to amend the governance framework and to hire, provided that these motions are not vetoed by the Council of Advisors.\",\n          description:\n            \"The vote needs 8 approvals to pass the HoM. The Council of Advisors can veto during the proposal cooldown period, or create a text proposal to veto a House of Merit proposal that is past the cooldown period.\"\n        }\n      ],\n      checks: [\n        {\n          house: \"coa\",\n          text: \"The Council of Advisors can veto any HoM proposals, except setup package, budget, large budget items, and recurring budget items.\",\n          description: \"The vote needs 4 approvals to pass the CoA.\"\n        },\n        {\n          house: \"vb\",\n          text: \"The Voting Body must rectify setup package and budget, and can veto large budget items and recurring budget items.\",\n          description:\n            \"The vote needs a NEAR Consent, which is 7% of voting body participating with a simple majority approval.\"\n        },\n        {\n          house: \"vb\",\n          text: \"The Voting Body can vote to dissolve the House of Merit.\",\n          description:\n            \"The vote needs a NEAR Consent, which is 7% of voting body participating with a simple majority approval.\"\n        },\n        {\n          house: \"tc\",\n          text: \"The Transparency Commission can remove members of the House of Merit.\",\n          description:\n            \"The vote needs 4 approvals to pass the TC. When 8 members from the House of Merit are removed, the house is dissolved and a new House of Merit is elected.\"\n        }\n      ]\n    }\n  },\n  coa: {\n    title: \"Council of Advisors\",\n    abbr: \"CoA\",\n    address: CoADaoId,\n    color: \"#4498E0\",\n    description:\n      \"The Council of Advisors is in charge of vetoing proposals from the HoM and guiding the deployment of the treasury.\",\n    metadata: {\n      groups: 1,\n      powers: [\n        {\n          text: \"All proposals originated from the House of Merit (except the Setup Package and Budget) can be vetoed by the Council of Advisors.\",\n          description: \"The vote needs 4 approvals to pass the CoA.\"\n        },\n        {\n          text: \"Council of Advisors could reinstate and unban a member previously dismissed and banned by the Transparency Commission.\",\n          description: \"The vote needs 4 approvals to pass the CoA.\"\n        }\n      ],\n      checks: [\n        {\n          house: \"vb\",\n          text: \"The Voting Body can vote to dissolve the Council of Advisors.\",\n          description:\n            \"The vote needs a NEAR Consent, which is 7% of voting body participating with a simple majority approval.\"\n        },\n        {\n          house: \"tc\",\n          text: \"The Transparency Commission can remove members of the Council of Advisors.\",\n          description:\n            \"The vote needs 4 approvals to pass the TC. When 4 members from the Council of Advisors are removed, the house is dissolved and a new Council of Advisor is elected.\"\n        }\n      ]\n    }\n  },\n  tc: {\n    title: \"Transparency Commission\",\n    abbr: \"TC\",\n    address: TCDaoId,\n    color: \"#F19D38\",\n    description:\n      \"The Transparency Commission is In charge of keeping behavior of elected officials clean, and making sure cartels do not form in the ecosystem.\",\n    metadata: {\n      funds: \"10M\",\n      groups: 1,\n      powers: [\n        {\n          text: \"The Transparency Commission can conduct investigations on Congressional members.\",\n          description: \"The vote needs 4 approvals to pass TC.\"\n        },\n        {\n          text: \"The Transparency Commission has the power to investigate, dismiss, and ban members of House of Merit.\",\n          description: \"The vote needs 4 approvals to pass TC.\"\n        },\n        {\n          text: \"The Transparency Commission has the power to investigate, dismiss, and ban members of Council of Advisors.\",\n          description: \"The vote needs 4 approvals to pass TC.\"\n        },\n        {\n          text: \"The Transparency Commission has the power to investigate, dismiss, and ban members of Transparency Commission.\",\n          description: \"The vote needs 4 approvals to pass TC.\"\n        }\n      ],\n      checks: [\n        {\n          house: \"coa\",\n          text: \"Council of Advisors could reinstate and unban a member previously dismissed and banned by the Transparency Commission.\",\n          description: \"The vote needs 4 approvals to pass the CoA.\"\n        },\n        {\n          house: \"vb\",\n          text: \"The Voting Body can vote to dissolve the Transparency Commission.\",\n          description:\n            \"The vote needs a NEAR Consent, which is 7% of voting body participating with a simple majority approval.\"\n        },\n        {\n          house: \"tc\",\n          text: \"The Transparency Commission can dismiss and ban members of the Transparency Commission.\",\n          description:\n            \"The vote needs 4 votes to pass the TC. When 4 members from the Transparency Commission are removed, the house is dissolved and a Transparency Commission is elected.\"\n        }\n      ]\n    }\n  },\n  vb: {\n    title: \"Voting Body\",\n    abbr: \"VB\",\n    address: VotingBodyDaoId,\n    color: \"#F29BC0\",\n    description:\n      \"The Voting Body consists all fair voters who participated in the inaugural NDC elections and received a \u201cI Voted\u201d Soul Bound Token. \",\n    metadata: {\n      funds: \"10M\",\n      groups: 1,\n      powers: [\n        {\n          text: \"The Voting Body must ratify Set Up Package.\",\n          description:\n            \"The vote needs a NEAR Consent, which is 7% of voting body participating with a simple majority approval.\"\n        },\n        {\n          text: \"The Voting Body may veto large budget items and recurring budget items.\",\n          description:\n            \"The vote needs a NEAR Consent, which is 7% of voting body participating with a simple majority approval.\"\n        },\n        {\n          text: \"The Voting Body may report activities to be investigated by the Transparency Commission.\",\n          description:\n            \"The Voting Body may bring issues to the Transparency Commission.\"\n        },\n        {\n          text: \"The Voting Body may vote to dissolve the House of Merit, Council of Advisors, and the Transparency Commission.\",\n          description:\n            \"The vote needs a NEAR Consent, which is 7% of voting body participating with a simple majority approval.\"\n        },\n        {\n          text: \"The Voting Body may motion to amend the governance framework.\",\n          description:\n            \"The vote needs a NEAR Supermajority Consent, which is 12% of voting body participating with a supermajority of 60% approval.\"\n        },\n        {\n          text: \"The Voting Body may motion to amend the legal framework of the Trust Instrument.\",\n          description:\n            \"The vote needs a NEAR Supermajority Consent, which is 12% of voting body participating with a supermajority of 60% approval.\"\n        }\n      ],\n      checks: null\n    }\n  }\n};\n\nconst Container = styled.div`\n  background: rgba(217, 217, 217, 0.3);\n  font-size: 14px;\n  line-height: 24px;\n  display: flex;\n  padding: 0;\n  margin: 0 -12px;\n  flex-direction: row;\n\n  h5,\n  h6 {\n    margin: 0;\n  }\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n  }\n`;\n\nconst ImgPanel = styled.div`\n  width: 50%;\n\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`;\n\nconst HousePanel = styled.div`\n  background-color: #fff;\n  width: 50%;\n  min-width: 500px;\n\n  @media (max-width: 768px) {\n    width: 100%;\n    min-width: auto;\n  }\n`;\n\nconst CircleLogo = styled.div`\n  height: 65px;\n  width: 65px;\n  border-radius: 50%;\n  border: 5px solid;\n  background: black;\n  color: white;\n  text-transform: uppercase;\n  border-color: ${Content[state.selectedHouse].color};\n`;\n\nconst CircleLogoSmall = styled.div`\n  height: 30px;\n  min-width: 30px;\n  border-radius: 50%;\n  border: 2px solid;\n  font-weight: 700;\n  background: black;\n  color: white;\n  font-size: 11px;\n  text-transform: uppercase;\n  border-color: ${(props) => Content[props.house].color};\n`;\n\nconst Info = styled.div`\n  border-radius: 4px;\n  border: 0.75px solid #d3d3d3;\n  background: rgba(0, 0, 0, 0.05);\n`;\n\nconst Tab = styled.div`\n  padding: 4px 10px;\n  gap: 5px;\n  width: fit-content;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  border-radius: 50px;\n  background: ${(props) => (props.selected ? \"#F4F4F4\" : \"transparent\")};\n  border: 1px solid;\n  border-color: ${(props) => (props.selected ? \"#d9d9d9\" : \"transparent\")};\n  color: ${(props) => (props.selected ? \"#000\" : \"inherit\")};\n\n  &:hover {\n    cursor: pointer;\n  }\n\n  .circle {\n    min-width: 20px;\n    height: 20px;\n    border-radius: 20px;\n    background: #d4d4d4;\n    padding: 4px;\n  }\n`;\n\nconst Section = styled.div`\n  padding: 35px;\n\n  @media (max-width: 768px) {\n    padding: 25px 5px;\n  }\n`;\n\nconst UserIcon = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  min-width: 25px;\n  height: 25px;\n  border-radius: 50%;\n  background: ${(props) => props.color};\n  padding-right: 1px;\n`;\n\nconst Hr = styled.div`\n  width: 1px;\n  height: 25px;\n  background: #d9d9d9;\n`;\n\nconst Description = styled.div`\n  line-height: 18px;\n`;\n\nconst Tabs = styled.div`\n  border-radius: 4px;\n  border: 1px solid rgba(217, 217, 217, 0.4);\n  background: rgba(217, 217, 217, 0.1);\n  display: flex;\n  padding: 20px 14px;\n  gap: 20px;\n`;\n\nconst Img = styled.img`\n  width: 90%;\n`;\n\nconst ImgContainer = styled.div`\n  @media (max-width: 768px) {\n    padding-left: 0 !important;\n    padding-right: 0 !important;\n  }\n`;\n\nconst DropdownContainer = styled.div`\n  display: flex;\n  position: absolute;\n  right: -25px;\n  top: 15px;\n  z-index: 1;\n  padding: 15px;\n  min-width: 265px;\n\n  .dropdown-content {\n    border-radius: 4px;\n    min-width: 230px;\n    background-color: #fff;\n    font-size: 14px;\n\n    div,\n    a {\n      padding: 8px 12px;\n      &:hover {\n        background: #f8f9fa;\n        cursor: pointer;\n      }\n    }\n  }\n`;\nState.init({\n  selectedHouse: router.params.house ?? \"hom\",\n  selectedTab: \"proposals\",\n  copied: false,\n  proposals: [],\n  members: [],\n  showPowerChecksDescription: false,\n  proposalsCount: 0,\n  showOptions: false,\n  showHouses: false,\n  isDissolved: false,\n  config: {}\n});\n\nconst getProposalsCount = () => {\n  const proposalsCount = Near.view(\n    Content[state.selectedHouse].address,\n    \"number_of_proposals\",\n    {}\n  );\n  State.update({ proposalsCount: proposalsCount ?? 0 });\n};\n\nconst changeHouse = (house) => {\n  State.update({\n    selectedHouse: house,\n    selectedTab: \"proposals\",\n    showPowerChecksDescription: false\n  });\n};\n\nconst getDissolvedStatus = () => {\n  const isDissolved = Near.view(\n    Content[state.selectedHouse].address,\n    \"is_dissolved\",\n    {}\n  );\n  State.update({ isDissolved: isDissolved ?? false });\n};\n\nconst getProposals = () => {\n  const proposals = Near.view(\n    Content[state.selectedHouse].address,\n    \"get_proposals\",\n    { from_index: 0, limit: 1000, reverse: true }\n  );\n\n  State.update({ proposals: proposals ?? [] });\n};\n\nconst getMembers = () => {\n  if (state.selectedHouse === \"vb\") {\n    const resp = useCache(\n      () =>\n        asyncFetch(\n          `https://api.pikespeak.ai/sbt/sbt-by-owner?holder=${accountId}&registry=registry.i-am-human.near`,\n          {\n            method: \"GET\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              \"x-api-key\": \"36f2b87a-7ee6-40d8-80b9-5e68e587a5b5\"\n            }\n          }\n        ).then((res) => {}),\n      daoId + \"-is-human-info\",\n      { subscribe: false }\n    );\n    State.update({\n      hideProposalBtn: !resp?.length > 0\n    });\n  } else {\n    const resp = Near.view(\n      Content[state.selectedHouse].address,\n      \"get_members\",\n      {}\n    );\n\n    const members = resp?.members ?? [];\n    if (members)\n      State.update({\n        members,\n        hideProposalBtn: !members.includes(accountId)\n      });\n  }\n};\n\nconst getHouseUrl = (house) =>\n  `#/astraplusplus.ndctools.near/widget/home?page=congress&house=${house}${\n    props.dev && \"&dev=true\"\n  }`;\n\nconst getMenuItems = () => {\n  const widgetUrl = `#/astraplusplus.ndctools.near/widget/home?page=dao&daoId=${\n    Content[state.selectedHouse].address\n  }${props.dev && \"&dev=true\"}`;\n  const base = [{ name: \"Proposals\", href: `${widgetUrl}&tab=proposals` }];\n\n  if (state.selectedHouse !== \"vb\")\n    base.push({ name: \"Members\", href: `${widgetUrl}&tab=members` });\n\n  return base;\n};\n\nconst getDaoConfig = () => {\n  const resp = Near.view(Content[state.selectedHouse].address, \"config\", {});\n  if (resp !== null) {\n    State.update({ config: resp });\n  }\n};\n\nfunction convertToTitleCase(inputString) {\n  return inputString\n    .split(\"_\")\n    .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\n    .join(\" \");\n}\n\nfunction convertMillisecondsToDays(milliseconds) {\n  const oneDayInMilliseconds = 24 * 60 * 60 * 1000;\n  const days = Math.floor(milliseconds / oneDayInMilliseconds);\n  return `${days} days`;\n}\n\nfunction convertYoctoToNear(yoctoNear) {\n  return `${Big(yoctoNear).div(Big(10).pow(24)).toFixed()} NEAR`;\n}\n\nState.update({ selectedHouse: router.params.house ?? state.selectedHouse });\ngetProposalsCount();\ngetProposals();\ngetDaoConfig();\n\nif (state.selectedHouse !== \"vb\") {\n  getDissolvedStatus();\n  getMembers();\n}\n\nconst ContentBlock = ({ title, abbr, address, description, metadata }) => (\n  <Section className=\"d-flex flex-column justify-content-between h-100\">\n    <div className=\"d-flex flex-column bg-white gap-3\">\n      <div className=\"d-flex justify-content-between\">\n        <CircleLogo className=\"d-flex justify-content-center align-items-center\">\n          <h6>\n            <b>{abbr}</b>\n          </h6>\n        </CircleLogo>\n        <div className=\"d-flex gap-2 align-items-center\">\n          {isDissolved && (\n            <Widget\n              src=\"nearui.near/widget/Element.Badge\"\n              props={{\n                children: <>Dissolved</>,\n                variant: `disabled round`,\n                size: \"lg\"\n              }}\n            />\n          )}\n          <Widget\n            src=\"nearui.near/widget/Social.FollowButton\"\n            props={{\n              variant: \"info outline\",\n              accountId: state.selectedHouse,\n              size: \"sm\"\n            }}\n          />\n          <div className=\"px-2\">\n            <Widget\n              src=\"near/widget/DIG.DropdownMenu\"\n              props={{\n                trigger: (\n                  <Widget\n                    src=\"nearui.near/widget/Input.Button\"\n                    props={{\n                      children: <i className=\"bi bi-three-dots\"></i>,\n                      variant: \"icon rounded\"\n                    }}\n                  />\n                ),\n                items: getMenuItems()\n              }}\n            />\n          </div>\n        </div>\n      </div>\n      <div>\n        <div className=\"d-flex\">\n          <h4>\n            <b>{title}</b>\n          </h4>\n          <div className=\"mt-1 px-2\">\n            <Widget\n              src=\"near/widget/DIG.DropdownMenu\"\n              props={{\n                trigger: <i className=\"bi bi-caret-down-fill\" />,\n                items: [\n                  {\n                    name: Content.hom.title,\n                    onSelect: () => changeHouse(\"hom\"),\n                    href: getHouseUrl(\"hom\")\n                  },\n                  {\n                    name: Content.coa.title,\n                    onSelect: () => changeHouse(\"coa\"),\n                    href: getHouseUrl(\"coa\")\n                  },\n                  {\n                    name: Content.tc.title,\n                    onSelect: () => changeHouse(\"tc\"),\n                    href: getHouseUrl(\"tc\")\n                  },\n                  {\n                    name: Content.vb.title,\n                    onSelect: () => changeHouse(\"vb\"),\n                    href: getHouseUrl(\"vb\")\n                  }\n                ]\n              }}\n            />\n          </div>\n        </div>\n        <span className=\"text-secondary\">\n          <b id=\"address\">{address}</b>\n        </span>\n        <i\n          className={state.copied ? \"bi-check-lg\" : \"bi bi-clipboard\"}\n          role=\"button\"\n          onClick={() => {\n            clipboard\n              .writeText(address)\n              .then(() => State.update({ copied: true }));\n          }}\n        />\n      </div>\n      <div>\n        <span className=\"text-secondary\">{description}</span>\n      </div>\n      <div className=\"d-flex justify-content-around my-4\">\n        {state.selectedHouse !== \"vb\" && (\n          <div className=\"text-center\">\n            <h5 className=\"mb-0\">\n              <b>\n                {state.members.length}/{1}\n              </b>\n            </h5>\n            <span className=\"text-secondary\">\n              <b>Members / Groups</b>\n            </span>\n          </div>\n        )}\n        <div className=\"text-center\">\n          <h5 className=\"mb-0\">\n            <b>\n              {state.proposals.filter((p) => p.status === \"InProgress\").length}/\n              {state.proposalsCount}\n            </b>\n          </h5>\n          <span className=\"text-secondary\">\n            <b>Active / Total Proposals</b>\n          </span>\n        </div>\n      </div>\n      <Tabs className=\"flex-column mb-4\">\n        <div className=\"d-flex flex-column flex-sm-row gap-2\">\n          <Tab\n            onClick={() => State.update({ selectedTab: \"proposals\" })}\n            selected={state.selectedTab === \"proposals\"}\n          >\n            <div>Proposals</div>\n            <div className=\"circle d-flex justify-content-center align-items-center\">\n              <div>{state.proposalsCount}</div>\n            </div>\n          </Tab>\n          <Tab\n            onClick={() => State.update({ selectedTab: \"powers\" })}\n            selected={state.selectedTab === \"powers\"}\n          >\n            <div>Powers</div>\n          </Tab>\n          {metadata.checks && (\n            <Tab\n              onClick={() => State.update({ selectedTab: \"checks\" })}\n              selected={state.selectedTab === \"checks\"}\n            >\n              <div>Checks</div>\n            </Tab>\n          )}\n          <Tab\n            onClick={() => State.update({ selectedTab: \"config\" })}\n            selected={state.selectedTab === \"config\"}\n          >\n            <div>Configurations</div>\n          </Tab>\n        </div>\n        <div className=\"d-flex flex-column gap-4 p-2\">\n          {state.selectedTab === \"powers\" &&\n            metadata.powers.map((r, i) => (\n              <PowerChecksDescription\n                key={i}\n                index={i + 1}\n                house={state.selectedHouse}\n                text={r.text}\n                description={r.description}\n                type={\"power\"}\n              />\n            ))}\n          {state.selectedTab === \"checks\" &&\n            metadata.checks.map((c, i) => (\n              <PowerChecksDescription\n                key={i}\n                index={i + 1}\n                house={c.house}\n                text={c.text}\n                description={c.description}\n              />\n            ))}\n          {state.selectedTab === \"proposals\" && (\n            <Widget\n              src=\"astraplusplus.ndctools.near/widget/DAO.Proposals.Congress.index\"\n              props={{\n                daoId: Content[state.selectedHouse].address,\n                dev: props.dev\n              }}\n            />\n          )}\n          {state.selectedTab === \"config\" && (\n            <div>\n              {Object.keys(state.config ?? {}).map((item) => {\n                const value = state.config[item];\n                if (item === \"min_vote_duration\") {\n                  return;\n                }\n                return (\n                  <div>\n                    <div className=\"d-flex justify-content-between gap-3\">\n                      <div className=\"w-50\">\n                        <b>{convertToTitleCase(item)}</b>\n                      </div>\n                      <div className=\"w-50\">\n                        {typeof value === \"object\"\n                          ? Object.keys(value ?? {}).map((i) => (\n                              <span>\n                                {convertToTitleCase(i)} : {value[i]} <br />\n                              </span>\n                            ))\n                          : item?.includes(\"time\")\n                          ? new Date(value).toLocaleString()\n                          : item?.includes(\"duration\") ||\n                            item?.includes(\"cooldown\")\n                          ? convertMillisecondsToDays(value)\n                          : item?.includes(\"budget\") ||\n                            item?.includes(\"funding\") ||\n                            item?.includes(\"bond\")\n                          ? convertYoctoToNear(value)\n                          : value}\n                      </div>\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n          )}\n        </div>\n      </Tabs>\n    </div>\n\n    <div className=\"d-flex justify-content-end gap-2\">\n      {!state.hideProposalBtn && (\n        <Widget\n          src=\"astraplusplus.ndctools.near/widget/Common.Layout.CardModal\"\n          props={{\n            title: \"Create Proposal\",\n            onToggle: () =>\n              State.update({\n                isProposalModalOpen: !state.isProposalModalOpen\n              }),\n            isOpen: state.isProposalModalOpen,\n            toggle: (\n              <Widget\n                src=\"nearui.near/widget/Input.Button\"\n                props={{\n                  children: (\n                    <>\n                      Create Proposal\n                      <i className=\"bi bi-16 bi-plus-lg\"></i>\n                    </>\n                  ),\n                  variant: \"info\",\n                  size: \"sm\"\n                }}\n              />\n            ),\n            content: (\n              <div\n                className=\"d-flex flex-column align-items-stretch\"\n                style={{\n                  width: \"800px\",\n                  maxWidth: \"100vw\"\n                }}\n              >\n                <Widget\n                  src={\"astraplusplus.ndctools.near/widget/DAO.Proposal.Create\"}\n                  props={{\n                    dev: props.dev,\n                    daoId: Content[state.selectedHouse].address\n                  }}\n                />\n              </div>\n            )\n          }}\n        />\n      )}\n    </div>\n  </Section>\n);\n\nconst PowerChecksDescription = ({ house, index, text, description, type }) => (\n  <div className=\"d-flex gap-3\">\n    {type === \"power\" ? (\n      <UserIcon color={Content[state.selectedHouse].color}>\n        <img\n          width={11}\n          src=\"https://ipfs.near.social/ipfs/bafkreig7hd3ysbcb7dkvgzhaavltjvaw5pjtaqyj4qdbamwxhhh4yqp4su\"\n        />\n      </UserIcon>\n    ) : (\n      <CircleLogoSmall\n        house={house}\n        className=\"d-flex justify-content-center align-items-center\"\n      >\n        <small>{house}</small>\n      </CircleLogoSmall>\n    )}\n    <Hr />\n    <div className=\"d-flex justify-content-between gap-2\">\n      <Description>\n        <small>{text}</small>\n        {state.showPowerChecksDescription === index && (\n          <Description className=\"mt-2\">\n            <small className=\"text-secondary\">\n              {description ?? \"The vote needs a simple majority.\"}\n            </small>\n          </Description>\n        )}\n      </Description>\n      <i\n        class={\n          state.showPowerChecksDescription === index\n            ? \"bi bi-chevron-up\"\n            : \"bi bi-chevron-down\"\n        }\n        role=\"button\"\n        onClick={() =>\n          State.update({\n            showPowerChecksDescription:\n              state.showPowerChecksDescription === index ? false : index\n          })\n        }\n      ></i>\n    </div>\n  </div>\n);\n\nconst statusMap = {\n  InProgress: {\n    text: \"In Progress\",\n    color: \"primary\",\n    icon: \"bi bi-arrow-clockwise\"\n  },\n  Approved: { text: \"Approved\", color: \"success\", icon: \"bi bi-check-lg\" },\n  Rejected: { text: \"Rejected\", color: \"danger\", icon: \"bi bi-x\" },\n  Failed: { text: \"Failed\", color: \"danger\", icon: \"bi bi-x\" },\n  Vetoed: { text: \"Vetoed\", color: \"danger\", icon: \"bi bi-ban\" },\n  Executed: { text: \"Executed\", color: \"info\", icon: \"bi bi-circle\" }\n};\n\nreturn (\n  <Container>\n    <ImgPanel className=\"p-0\">\n      <div className=\"py-3 bg-dark d-flex justify-content-center\">\n        <h6>\n          <span className=\"text-secondary\">NDC Governance | </span>\n          <span className=\"text-white\">Interhouse relations</span>\n        </h6>\n      </div>\n      <ImgContainer className=\"px-5 w-100 d-flex flex-column justify-content-center align-items-center py-4 position-relative\">\n        {!state.hideProposalBtn && (\n          <Info className=\"mb-4 py-2 px-3 gap-2 d-flex justify-content-center align-items-center\">\n            <UserIcon color={Content[state.selectedHouse].color}>\n              <img\n                width={11}\n                src=\"https://ipfs.near.social/ipfs/bafkreig7hd3ysbcb7dkvgzhaavltjvaw5pjtaqyj4qdbamwxhhh4yqp4su\"\n              />\n            </UserIcon>\n            <small>\n              You are a member of\n              <b> {Content[state.selectedHouse].title}</b>\n            </small>\n          </Info>\n        )}\n        <Img\n          onClick={() => State.update({ vbWithTrust: !state.vbWithTrust })}\n          src={\n            state.selectedHouse === \"hom\"\n              ? HOM_IMG\n              : state.selectedHouse === \"coa\"\n              ? COA_IMG\n              : state.selectedHouse === \"tc\"\n              ? TC_IMG\n              : state.selectedHouse === \"vb\"\n              ? VB_IMG\n              : HOM_IMG\n          }\n        />\n      </ImgContainer>\n    </ImgPanel>\n\n    <HousePanel className=\"shadow-sm\">\n      <ContentBlock\n        title={Content[state.selectedHouse].title}\n        description={Content[state.selectedHouse].description}\n        abbr={state.selectedHouse}\n        address={Content[state.selectedHouse].address}\n        metadata={Content[state.selectedHouse].metadata}\n      />\n    </HousePanel>\n  </Container>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/astraplusplus.ndctools.near/widget/Congress.index", "fact_widget_deployments_id": "9b653190240e077f678fee8fe1b1e78d", "inserted_timestamp": "2024-03-22T14:30:06.675Z", "modified_timestamp": "2024-03-22T14:30:06.675Z", "__row_index": 0}