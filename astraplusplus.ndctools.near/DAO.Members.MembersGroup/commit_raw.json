{"tx_hash": "4eLdWA6mxX2hy1YcSwybm8BM9BJwrYVptvvPYEJCgVKB", "action_id_social": "8zP7kqCwePSKbErREp3dkDkMcyJnVe9SrUKBmfPN9Ca1-0-widget", "block_id": 116477642, "block_timestamp": "2024-04-09T16:07:12.076Z", "signer_id": "astraplusplus.ndctools.near", "widget_name": "DAO.Members.MembersGroup", "source_code": "const data = props.data;\nconst policy = props.policy;\nconst currentPage = props.page ?? 1;\nconst resPerPage = props.resPerPage ?? 21;\nconst isCongressDaoID = props.isCongressDaoID ?? false;\nconst isVotingBodyDao = props.isVotingBodyDao ?? false;\nconst accountId = props.accountId ?? context.accountId;\n\nconst EVERYONE = \"Everyone\";\n\nconst rolesArray = Object.keys(policy?.roles ?? {});\n\nif (policy?.everyone?.permissions) {\n  rolesArray = rolesArray.concat(EVERYONE);\n}\n\nconst colorsArray = [\"blue\", \"green\", \"pink\", \"red\"];\n\nconst RolesColor = rolesArray.map((item, i) => {\n  return { color: colorsArray[i] ?? \"\", role: item };\n});\n\nconst onRemoveUserProposal = (memberId, roleId) => {\n  Near.call([\n    {\n      contractName: props.daoId,\n      methodName: \"add_proposal\",\n      args: {\n        proposal: {\n          description: \"Remove DAO member\",\n          kind: {\n            RemoveMemberFromRole: {\n              member_id: memberId,\n              role: roleId ?? \"council\"\n            }\n          }\n        }\n      },\n      gas: 219000000000000,\n      deposit: policy.policy.proposal_bond\n    }\n  ]);\n};\n\nconst viewTypes = {\n  CARD: \"Card\",\n  LIST: \"List\",\n  GROUP: \"Group\"\n};\n\nconst viewList = [\n  {\n    label: \"Group View\",\n    value: viewTypes.GROUP\n  },\n  {\n    label: \"List View\",\n    value: viewTypes.LIST\n  },\n  {\n    label: \"Card View\",\n    value: viewTypes.CARD\n  }\n];\n\nconst groupTypes = {\n  ASCENDING: \"Ascending\",\n  DESCENDING: \"Descending\"\n};\n\nconst filterlist =\n  [...rolesArray, groupTypes.ASCENDING, groupTypes.DESCENDING] ?? [];\n\nState.init({\n  filtersOpen: false,\n  selectedView: viewTypes.GROUP,\n  viewModalOpen: false,\n  filters: [],\n  expandedTables: {},\n  isLoading: false,\n  search: \"\",\n  filteredData: [],\n  removeFromRole: null,\n  currentPage: currentPage,\n  groupViewPages: null // current pages for each group\n});\n\nconst Wrapper = styled.div`\n  width: 98%;\n\n  a {\n    color: #4498e0;\n    font-size: 0.8rem;\n    font-weight: 600;\n    text-decoration: none;\n\n    &:hover {\n      color: #4498e0cc;\n    }\n  }\n\n  .custom-tag {\n    border-top-right-radius: 9999px;\n    border-bottom-right-radius: 9999px;\n    border-top-left-radius: 9999px;\n    border-bottom-left-radius: 9999px;\n    padding-inline: 0.8rem;\n    padding-block: 0.3rem;\n    display: flex;\n    gap: 0.5rem;\n    border-width: 1px;\n    border-style: solid;\n    font-size: 13px;\n  }\n\n  .blue-bg {\n    background-color: rgba(68, 152, 224, 0.1);\n    color: rgba(68, 152, 224, 1);\n    border-color: rgba(68, 152, 224, 1);\n  }\n\n  .green-bg {\n    background-color: rgba(35, 159, 40, 0.1);\n    color: rgba(35, 159, 40, 1);\n    border-color: rgba(35, 159, 40, 1);\n  }\n\n  .pink-bg {\n    background-color: rgba(242, 155, 192, 0.1);\n    color: rgba(242, 155, 192, 1);\n    border-color: rgba(242, 155, 192, 1);\n  }\n\n  .red-bg {\n    background-color: rgba(194, 63, 56, 0.1);\n    color: rgba(194, 63, 56, 1);\n    border-color: rgba(194, 63, 56, 1);\n  }\n\n  table {\n    overflow-x: auto;\n    font-size: 14px;\n    width: 100%;\n    box-sizing: border-box;\n  }\n\n  @media screen and (max-width: 1000px) {\n    table {\n      display: block;\n    }\n  }\n\n  th,\n  td {\n    padding: 15px;\n    text-align: left;\n  }\n\n  .role-tag-td {\n    display: block;\n    width: max-content;\n  }\n\n  tr {\n    border-bottom: 1px solid lightgray;\n  }\n\n  thead {\n    border-bottom: 2px solid #4498e0;\n  }\n\n  .icons-color i {\n    color: #4498e0;\n  }\n\n  .danger i {\n    color: rgb(229, 72, 77);\n  }\n\n  .card-view-grid {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));\n    gap: 1rem;\n  }\n\n  .text-gray {\n    color: gray !important;\n  }\n\n  .text-black {\n    color: black !important;\n  }\n\n  .text-sm {\n    font-size: 12px;\n  }\n\n  ul {\n    padding-left: 1rem !important;\n  }\n\n  .p-2 {\n    padding: 0.8rem;\n  }\n\n  .gap-y-3 {\n    row-gap: 1rem !important;\n  }\n\n  .opacity-low {\n    opacity: 0.4;\n    background-color: rgba(0, 0, 0, 0.03);\n  }\n\n  .overlay-head {\n    position: absolute;\n    top: 45%;\n    left: 45%;\n    font-size: 28px;\n    zindex: 1000;\n  }\n`;\n\nfunction followUser(user, isFollowing) {\n  const dataToSend = {\n    graph: { follow: { [user]: isFollowing ? null : \"\" } },\n    index: {\n      graph: JSON.stringify({\n        key: \"follow\",\n        value: {\n          type,\n          accountId: user\n        }\n      }),\n      notify: JSON.stringify({\n        key: user,\n        value: {\n          type\n        }\n      })\n    }\n  };\n  Social.set(dataToSend, {\n    force: true\n  });\n}\n\nconst PermissionsPopover = ({ currentRole }) => {\n  const permissions =\n    currentRole === EVERYONE\n      ? policy?.everyone?.permissions\n      : policy?.roles?.[currentRole]?.permissions;\n\n  return (\n    <Widget\n      src=\"nearui.near/widget/Layout.Popover\"\n      props={{\n        triggerComponent: <i class=\"bi bi-info-circle\"></i>,\n        content: (\n          <div className=\"p-2\">\n            <h5 className=\"text-gray\">Admins have permissions to:</h5>\n            {permissions?.length > 0 && (\n              <ul className=\"text-black text-sm\">\n                {permissions?.map((i) => (\n                  <li>{i}</li>\n                ))}\n              </ul>\n            )}\n          </div>\n        )\n      }}\n    />\n  );\n};\n\nconst RoleTag = ({ roles, showIcon }) => {\n  const tags = [];\n  if (Array.isArray(roles)) {\n    roles.map((item) => {\n      tags.push(\n        <div\n          className={`custom-tag ${\n            RolesColor.find((i) => i.role === item)?.color ?? \"\"\n          }-bg`}\n        >\n          {item}\n          {showIcon && <PermissionsPopover currentRole={item} />}\n        </div>\n      );\n    });\n  } else {\n    // for everyone\n    tags.push(\n      <div className={`custom-tag`}>\n        {roles}\n        {showIcon && <PermissionsPopover currentRole={roles} />}\n      </div>\n    );\n  }\n  return <div className=\"d-flex gap-2\">{tags.map((i) => i)}</div>;\n};\n\nconst FollowBtn = ({ itemDetails }) => {\n  return (\n    <Widget\n      src=\"nearui.near/widget/Input.Button\"\n      props={{\n        children: itemDetails.isUserFollowed ? (\n          <i class=\"bi bi-person-dash\"></i>\n        ) : (\n          <i class=\"bi bi-person-plus\"></i>\n        ),\n        variant:\n          (itemDetails.isUserFollowed ? \"danger\" : \"info\") + \" icon outline\",\n        size: \"sm\",\n        onClick: () =>\n          followUser(itemDetails.account, itemDetails.isUserFollowed)\n      }}\n    />\n  );\n};\n\nconst Table = ({ title, tableData, showExpand }) => {\n  if (!tableData?.length > 0) {\n    return null;\n  }\n\n  return (\n    <div className=\"ndc-card icons-color my-4 p-4\">\n      {title && (\n        <div className=\"d-flex justify-content-between\">\n          <h4 className=\"d-flex gap-2\">\n            {title} <PermissionsPopover currentRole={title} />\n          </h4>\n          {showExpand && (\n            <div\n              onClick={() => {\n                const data = { ...state.expandedTables };\n                data[title] =\n                  typeof data[title] === \"boolean\" ? !data[title] : false;\n\n                State.update({ expandedTables: data });\n              }}\n            >\n              {state.expandedTables[title] !== false ? (\n                <i class=\"bi bi-caret-up\"></i>\n              ) : (\n                <i class=\"bi bi-caret-down\"></i>\n              )}\n            </div>\n          )}\n        </div>\n      )}\n      {state.expandedTables[title] !== false && (\n        <div style={{ overflow: \"auto\", maxWidth: \"100%\" }}>\n          <table>\n            <thead>\n              <tr>\n                <th>Name</th>\n                {state.selectedView === viewTypes.LIST && <th>Role</th>}\n                <th>\n                  Casted Votes\n                  <i class=\"bi bi-arrow-down\"></i>\n                </th>\n\n                <th>\n                  Yes Votes\n                  <i class=\"bi bi-arrow-down\"></i>\n                </th>\n                <th>\n                  No Votes\n                  <i class=\"bi bi-arrow-down\"></i>\n                </th>\n                <th>\n                  Spam Votes\n                  <i class=\"bi bi-arrow-down\"></i>\n                </th>\n                {/* <th>\n                  Proposals <br />\n                  Accepted/ Created\n                </th> */}\n              </tr>\n            </thead>\n            <tbody style={{ position: \"relative\" }}>\n              {isCongressDaoID && (\n                <div className=\"overlay-head\">Coming Soon</div>\n              )}\n\n              {tableData?.map((item) => {\n                return (\n                  <tr className={isCongressDaoID && \"opacity-low\"}>\n                    <td style={{ maxWidth: \"300px\" }}>\n                      <div className=\"text-truncate w-100\">\n                        <Widget\n                          src=\"mob.near/widget/Profile.ShortInlineBlock\"\n                          props={{\n                            accountId: item.account,\n                            tooltip: true\n                          }}\n                        />\n                      </div>\n                    </td>\n                    {state.selectedView === viewTypes.LIST && (\n                      <td className=\"role-tag-td\">\n                        <RoleTag showIcon={false} roles={item?.groups} />\n                      </td>\n                    )}\n                    <td> {item.approve + item.rejected}</td>\n                    <td> {item.approve}</td>\n                    <td> {item.rejected}</td>\n                    <td>{item.spamVotes ?? 0}</td>\n                    {/* <td>\n                      {item.acceptedProposals} / {item.totalProposals}\n                    </td> */}\n                    <td className=\"d-flex gap-2 align-items-center\">\n                      {/* we don't show propose to mint and remove for congress dao */}\n                      {!isCongressDaoID && !isVotingBodyDao && (\n                        <div className=\"d-flex gap-2 align-items-center\">\n                          <ProposeToRemove user={item.account} />\n                        </div>\n                      )}\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst actions = {\n  AddProposal: \"create proposal\",\n  VoteApprove: \"vote approve\",\n  VoteReject: \"vote reject\",\n  VoteRemove: \"vote remove\"\n};\n\nconst kinds = {\n  config: \"Change config\",\n  policy: \"Change policy\",\n  add_member_to_role: \"Add member to role\",\n  remove_member_from_role: \"Remove member from role\",\n  call: \"Call\",\n  upgrade_self: \"Upgrade self\",\n  upgrade_remote: \"Upgrade remote\",\n  transfer: \"Transfer\",\n  set_vote_token: \"Set staking contract\",\n  add_bounty: \"Add bounty\",\n  bounty_done: \"Bounty done\",\n  vote: \"Vote\",\n  factory_info_update: \"Factory info update\",\n  policy_add_or_update_role: \"Change policy add or update role\",\n  policy_remove_role: \"Change policy remove role\",\n  policy_update_default_vote_policy: \"Change policy update default vote policy\",\n  policy_update_parameters: \"Change policy update parameters\",\n  \"*\": \"All types\"\n};\n\nconst renderPermissions = (role) => {\n  const permissions = new Map();\n  const rolePermissions =\n    role === \"all\"\n      ? policy.everyone?.permissions\n      : policy.roles[role].permissions;\n  rolePermissions?.forEach((p) => {\n    const [kindKey, actionKey] = p.split(\":\");\n    const kind = kinds[kindKey] || kindKey;\n    const action = actions[actionKey] || actionKey;\n    if (!permissions.has(action)) {\n      permissions.set(action, new Set());\n    }\n    permissions.get(action).add(kind);\n  });\n\n  const filteredPermissions = new Map(\n    [...permissions].filter(([action, kindsSet]) => kindsSet.size > 0),\n    [...permissions].filter(([action, kindsSet]) => kindsSet.size > 0)\n  );\n  const sortedPermissions = Array.from(filteredPermissions.entries()).sort(\n    (a, b) => {\n      if (a[0] === actions.AddProposal) {\n        return -1;\n      }\n      if (b[0] === actions.AddProposal) {\n        return 1;\n      }\n      return 0;\n    }\n  );\n  return sortedPermissions.map(([action, kindsSet], i) => (\n    <li key={i}>\n      <span className=\"text-capitalize\">{action}</span>{\" \"}\n      {action === actions.AddProposal\n        ? \"of the following types:\"\n        : \"on proposals of the following types:\"}\n      <ul>\n        {Array.from(kindsSet).map((kind, j) => (\n          <li key={j}>{kind}</li>\n        ))}\n      </ul>\n    </li>\n  ));\n};\n\nconst isUserAllowedTo = (user, kind, action) => {\n  const userRoles = policy?.users?.[user] || [\"Everyone\"];\n  let allowed = false;\n\n  userRoles.forEach((role) => {\n    let permissions = policy?.roles?.[role]?.permissions;\n    if (role === \"Everyone\") {\n      permissions = policy.everyone.permissions;\n    }\n    if (permissions) {\n      const allowedRole =\n        permissions?.includes(`${kind.toString()}:${action.toString()}`) ||\n        permissions?.includes(`${kind.toString()}:*`) ||\n        permissions?.includes(`*:${action.toString()}`) ||\n        permissions?.includes(\"*:*\");\n      allowed = allowed || allowedRole;\n    }\n    return allowedRole;\n  });\n  return allowed;\n};\n\nconst ProposeToMintSBT = ({ itemDetails }) => {\n  return (\n    <Widget\n      src=\"nearui.near/widget/Input.Button\"\n      props={{\n        children: \"Propose to Mint SBT\",\n        variant: \"info\",\n        disabled: itemDetails.isHuman,\n        size: \"sm\",\n        onClick: () => {}\n      }}\n    />\n  );\n};\n\nconst ProposeToRemove = ({ user }) => {\n  if (\n    isUserAllowedTo(context.accountId, \"remove_member_from_role\", \"AddProposal\")\n  )\n    return (\n      <Widget\n        src=\"astraplusplus.ndctools.near/widget/Layout.Modal\"\n        props={{\n          toggle: (\n            <Widget\n              src=\"nearui.near/widget/Input.Button\"\n              props={{\n                children: \"Propose to Remove\",\n                size: \"sm\",\n                variant: [\"danger\", \"outline\"],\n                className: \"w-100\"\n              }}\n            />\n          ),\n          content: (\n            <div className=\"ndc-card p-4 d-flex flex-column gap-2\">\n              <Widget\n                src=\"nearui.near/widget/Input.Select\"\n                props={{\n                  label: \"Propose to remove from role:\",\n                  options: rolesArray.map((r) => {\n                    return {\n                      title: r,\n                      value: r\n                    };\n                  }),\n                  onChange: (v) =>\n                    State.update({\n                      removeFromRole: v\n                    }),\n                  value: state.removeFromRole\n                }}\n              />\n              <Widget\n                src=\"nearui.near/widget/Input.Button\"\n                props={{\n                  children: \"Propose to Remove\",\n                  size: \"sm\",\n                  variant: [\"danger\"],\n                  className: \"w-100\",\n                  onClick: () =>\n                    onRemoveUserProposal(user, state.removeFromRole)\n                }}\n              />\n            </div>\n          )\n        }}\n      />\n    );\n\n  return null;\n};\n\nconst UIData =\n  state.filters?.length > 0 || state.search ? state.filteredData : data;\n\nlet paginatedMembers = [];\n\nconst currentPageState =\n  state.filters?.length > 0 || state.search ? 1 : state.currentPage;\n\npaginatedMembers = UIData.slice(\n  (currentPageState - 1) * resPerPage,\n  currentPageState * resPerPage\n);\n\nfunction containsOnly(array, item) {\n  return array.length === 1 && array[0] === item;\n}\n\nconst GroupView = () => {\n  if (!state.groupViewPages) {\n    const pages = {};\n    rolesArray?.map((role) => {\n      pages[role] = 1;\n    });\n    State.update({\n      groupViewPages: pages\n    });\n  }\n\n  const Pagination = ({ role, data }) => {\n    return (\n      <div className=\"d-flex justify-content-center align-items-center gap-2 mt-2\">\n        <Widget\n          src=\"nearui.near/widget/Navigation.Paginate\"\n          props={{\n            pageSize: resPerPage,\n            currentPage: state.groupViewPages[role] ?? 1,\n            totalPageCount: Math.ceil(data.length / resPerPage),\n            onPageChange: (page) => {\n              State.update({\n                groupViewPages: {\n                  ...state.groupViewPages,\n                  ...{ [role]: page }\n                }\n              });\n            },\n            revaluateOnRender: true\n          }}\n        />\n      </div>\n    );\n  };\n\n  let view = [];\n  let data = state.filters;\n  if (\n    containsOnly(state.filters, groupTypes.ASCENDING) ||\n    containsOnly(state.filters, groupTypes.DESCENDING) ||\n    !state.filters?.length > 0\n  ) {\n    data = rolesArray;\n  }\n  data?.map((role) => {\n    const currentPage =\n      state.filters?.length > 0 || state.search\n        ? 1\n        : state.groupViewPages[role] ?? 1;\n    const tableData = UIData?.filter((item) => item.groups.includes(role));\n    let paginatedGroupData = [];\n    paginatedGroupData = tableData.slice(\n      (currentPage - 1) * resPerPage,\n      currentPage * resPerPage\n    );\n\n    view.push(\n      <>\n        <Table title={role} tableData={paginatedGroupData} showExpand={true} />\n        <Pagination role={role} data={tableData} />\n      </>\n    );\n  });\n  return <div>{view?.map((item) => item)}</div>;\n};\n\nreturn (\n  <Wrapper>\n    {data?.length === 0 ? (\n      <p className=\"text-gray\">This account doesn't have any members.</p>\n    ) : (\n      <div className=\"d-flex flex-column gap-4\">\n        <h2>Members</h2>\n        <div className=\"ndc-card p-4\">\n          <h4 className=\"mb-4\">Groups</h4>\n          <div className=\"d-flex gap-4 flex-wrap\">\n            <RoleTag roles={rolesArray} showIcon={true} />\n          </div>\n        </div>\n        <div\n          className={`${\n            state.selectedView !== viewTypes.LIST ? \"ndc-card p-4\" : \"\"\n          } d-flex gap-2 flex-wrap gap-y-3`}\n        >\n          <Widget\n            src=\"nearui.near/widget/Input.ExperimentalText\"\n            props={{\n              value: state.search,\n              placeholder:\n                state.selectedView === viewTypes.GROUP\n                  ? \"Search by name\"\n                  : \"Search by name or groups\",\n              onChange: (value) => {\n                const filteredData = [...data];\n                if (value) {\n                  filteredData = filteredData?.filter((item) => {\n                    const searchTerm = value.toLowerCase();\n                    return item.account.includes(searchTerm);\n                  });\n                }\n                State.update({\n                  ...state,\n                  filteredData: filteredData,\n                  search: value\n                });\n              },\n              icon: (\n                <i\n                  className=\"bi bi-search\"\n                  style={{\n                    color: \"#4498e0 !important\"\n                  }}\n                />\n              ),\n              inputProps: {\n                title: \"Disabled because no API for searching yet\"\n              }\n            }}\n          />\n          <div className=\"d-flex gap-2 flex-wrap\">\n            <Widget\n              src=\"nearui.near/widget/Layout.Popover\"\n              props={{\n                triggerComponent: (\n                  <Widget\n                    src=\"nearui.near/widget/Input.Button\"\n                    props={{\n                      style: {\n                        color: \"#4498e0\"\n                      },\n                      children: (\n                        <>\n                          {state.selectedView} View\n                          <i class=\"bi bi-caret-down\"></i>\n                        </>\n                      ),\n                      variant: \"info outline \",\n                      size: \"md\",\n                      className: \"\"\n                    }}\n                  />\n                ),\n                content: (\n                  <Widget\n                    src=\"astraplusplus.ndctools.near/widget/Common.Modals.ViewDropDown\"\n                    props={{\n                      viewList: viewList,\n                      cancel: () => {\n                        State.update({\n                          ...state,\n                          selectedView: \"\"\n                        });\n                      },\n                      applyView: (selectedView) => {\n                        State.update({\n                          ...state,\n                          selectedView\n                        });\n                      },\n                      selectedView: state.selectedView\n                    }}\n                  />\n                )\n              }}\n            />\n\n            <Widget\n              src=\"astraplusplus.ndctools.near/widget/Layout.Modal\"\n              props={{\n                open: state.filtersOpen,\n                onOpenChange: (open) => {\n                  State.update({\n                    ...state,\n                    filtersOpen: open\n                  });\n                },\n                toggle: (\n                  <Widget\n                    src=\"nearui.near/widget/Input.Button\"\n                    props={{\n                      children: (\n                        <>\n                          Filter\n                          <i className=\"bi bi-funnel\"></i>\n                        </>\n                      ),\n                      variant: \"info\",\n                      size: \"md\"\n                    }}\n                  />\n                ),\n                content: (\n                  <Widget\n                    src=\"astraplusplus.ndctools.near/widget/Common.Modals.FiltersModal\"\n                    props={{\n                      selectedFilters: state.filters,\n                      groupTypes: groupTypes,\n                      cancel: () => {\n                        State.update({\n                          ...state,\n                          filters: []\n                        });\n                      },\n                      applyFilters: (filters) => {\n                        const filteredData = [...data];\n                        const rolesFilter = filters?.filter(\n                          (i) =>\n                            i !== groupTypes.ASCENDING &&\n                            i !== groupTypes.DESCENDING\n                        );\n\n                        if (rolesFilter?.length > 0) {\n                          filteredData = filteredData.filter((item) => {\n                            let results = [];\n                            if (rolesFilter.includes(EVERYONE)) {\n                              results.push(item?.groups === EVERYONE);\n                            }\n\n                            if (Array.isArray(item.groups)) {\n                              results.push(\n                                item?.groups?.some((i) =>\n                                  rolesFilter?.includes(i)\n                                )\n                              );\n                            }\n                            return results.includes(true);\n                          });\n                        }\n                        if (filters?.includes(groupTypes.ASCENDING)) {\n                          filteredData = filteredData\n                            .slice()\n                            .sort((a, b) => a.account.localeCompare(b.account));\n                        }\n\n                        if (filters?.includes(groupTypes.DESCENDING)) {\n                          filteredData = filteredData\n                            .slice()\n                            .sort((a, b) => b.account.localeCompare(a.account));\n                        }\n\n                        State.update({\n                          ...state,\n                          filters: filters,\n                          filteredData: filteredData\n                        });\n                      },\n                      filterlist: filterlist\n                    }}\n                  />\n                )\n              }}\n            />\n          </div>\n        </div>\n        {state.isLoading ? (\n          <div>\n            <Widget src=\"nearui.near/widget/Feedback.Spinner\" />\n          </div>\n        ) : (\n          <div>\n            {state.selectedView === viewTypes.GROUP ? (\n              <GroupView />\n            ) : (\n              <>\n                {state.selectedView === viewTypes.LIST && (\n                  <Table tableData={paginatedMembers} />\n                )}\n                {state.selectedView === viewTypes.CARD && (\n                  <div className=\"card-view-grid\">\n                    {paginatedMembers?.map((item) => {\n                      return (\n                        <div className=\"ndc-card p-4 d-flex flex-column gap-2\">\n                          <div className=\"d-flex justify-content-between align-items-center text-truncate\">\n                            <Widget\n                              src=\"mob.near/widget/Profile.ShortInlineBlock\"\n                              props={{\n                                accountId: item.account,\n                                tooltip: true\n                              }}\n                            />\n                            {accountId !== item.account && (\n                              <FollowBtn itemDetails={item} />\n                            )}\n                          </div>\n                          <div className=\"mt-3\">\n                            <RoleTag showIcon={true} roles={item?.groups} />\n                          </div>\n                          <div\n                            style={{\n                              height: \"4rem\"\n                            }}\n                          ></div>\n                          {!isCongressDaoID && !isVotingBodyDao && (\n                            <div className=\"d-flex justify-content-center\">\n                              {/* <ProposeToMintSBT itemDetails={item} /> */}\n                              <ProposeToRemove user={item.account} />\n                            </div>\n                          )}\n                        </div>\n                      );\n                    })}\n                  </div>\n                )}\n                <div className=\"d-flex justify-content-center align-items-center gap-2 mt-2\">\n                  <Widget\n                    src=\"nearui.near/widget/Navigation.Paginate\"\n                    props={{\n                      pageSize: resPerPage,\n                      currentPage: state.currentPage,\n                      totalPageCount: Math.ceil(UIData.length / resPerPage),\n                      onPageChange: (page) => {\n                        State.update({\n                          currentPage: page\n                        });\n                      },\n                      revaluateOnRender: true\n                    }}\n                  />\n                </div>\n              </>\n            )}\n          </div>\n        )}\n      </div>\n    )}\n  </Wrapper>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/astraplusplus.ndctools.near/widget/DAO.Members.MembersGroup", "fact_widget_deployments_id": "e29abe81277c409e60beb1812c423be6", "inserted_timestamp": "2024-04-09T17:41:23.860Z", "modified_timestamp": "2024-04-09T17:41:23.860Z", "__row_index": 5}