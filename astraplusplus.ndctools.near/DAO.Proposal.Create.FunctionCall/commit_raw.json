{"tx_hash": "EQRieBiuc384ZGWZPQ6Ltwaa38bT98pLKio2qcQvakTj", "action_id_social": "DYD5Ha1XW22WyVB4qs4wtopSRYfHAdd87QhvMW1mygAR-0-widget", "block_id": 102987756, "block_timestamp": "2023-10-09T15:52:54.160Z", "signer_id": "astraplusplus.ndctools.near", "widget_name": "DAO.Proposal.Create.FunctionCall", "source_code": "const accountId = props.accountId ?? context.accountId;\nconst contractId = props.contractId;\nconst onClose = props.onClose;\nconst daoId = props.daoId;\nconst isCongressDaoID = props.isCongressDaoID;\n\nif (!accountId) {\n    return \"Please connect your NEAR wallet :)\";\n}\n\nState.init({\n    contractId: state.contractId,\n    method_name: state.method_name,\n    args: state.args || \"{}\",\n    deposit: state.deposit || \"0\",\n    gas: \"200000000000000\",\n    error: undefined,\n    receiver_id: null,\n    description: null\n});\n\nconst fc_args = Buffer.from(state.args, \"utf-8\").toString(\"base64\");\n\nfunction isNearAddress(address) {\n    const ACCOUNT_ID_REGEX =\n        /^(([a-z\\d]+[-_])*[a-z\\d]+\\.)*([a-z\\d]+[-_])*[a-z\\d]+$/;\n    return (\n        address.length >= 2 &&\n        address.length <= 64 &&\n        ACCOUNT_ID_REGEX.test(address)\n    );\n}\n\nconst handleFunctionCall = () => {\n    if (\n        !state.contractId ||\n        state.contractId === \"\" ||\n        !isNearAddress(state.contractId)\n    ) {\n        State.update({\n            error: \"Please enter a valid contract ID\"\n        });\n        return;\n    }\n    if (!state.method_name || state.method_name === \"\") {\n        State.update({\n            error: \"Please enter a valid method name\"\n        });\n        return;\n    }\n    const is_valid_json = (str) => {\n        try {\n            JSON.parse(str);\n        } catch (e) {\n            return false;\n        }\n        return true;\n    };\n    if (!state.args || state.args === \"\" || !is_valid_json(state.args)) {\n        State.update({\n            error: \"Please enter a valid JSON arguments\"\n        });\n        return;\n    }\n    if (!state.deposit || state.deposit < 0) {\n        State.update({\n            error: \"Please enter a valid deposit\"\n        });\n        return;\n    }\n    if (state.gas && state.gas <= 0) {\n        State.update({\n            error: \"Please enter a valid gas\"\n        });\n        return;\n    }\n\n    const deposit = Big(state.deposit).mul(Big(10).pow(24)).toFixed();\n\n    if (isCongressDaoID) {\n        if (!state.receiver_id || !isNearAddress(state.receiver_id)) {\n            State.update({\n                error: \"Please enter a valid recipient address\"\n            });\n            return;\n        }\n        if (!state.description) {\n            State.update({\n                error: \"Please enter a description\"\n            });\n            return;\n        }\n\n        Near.call([\n            {\n                contractName: daoId,\n                methodName: \"create_proposal\",\n                args: {\n                    kind: {\n                        FunctionCall: {\n                            receiver_id: state.receiver_id,\n                            actions: [\n                                {\n                                    method_name: state.method_name,\n                                    args: fc_args,\n                                    deposit: deposit,\n                                    gas: state.gas\n                                }\n                            ]\n                        }\n                    },\n                    description: state.description\n                },\n                deposit: 100000000000000000000000,\n                gas: 200000000000000\n            }\n        ]);\n    } else {\n        Near.call([\n            {\n                contractName: state.contractId,\n                methodName: state.method_name,\n                args: {\n                    Arguments: fc_args\n                },\n                deposit: deposit,\n                gas: state.gas ?? \"200000000000000\"\n            }\n        ]);\n    }\n};\n\nconst onChangeContract = (contractId) => {\n    State.update({\n        contractId,\n        error: undefined\n    });\n};\n\nconst onChangeMethod = (method_name) => {\n    State.update({\n        method_name,\n        error: undefined\n    });\n};\n\nconst onChangeArgs = (args) => {\n    State.update({\n        args,\n        error: undefined\n    });\n};\n\nconst onChangeGas = (gas) => {\n    State.update({\n        gas,\n        error: undefined\n    });\n};\n\nconst onChangeDeposit = (deposit) => {\n    State.update({\n        deposit,\n        error: undefined\n    });\n};\n\nconst onChangeDescription = (description) => {\n    State.update({\n        description,\n        error: undefined\n    });\n};\n\nconst onChangeRecipient = (receiver_id) => {\n    State.update({\n        receiver_id: receiver_id,\n        error: undefined\n    });\n};\n\nconst defaultDescription =\n    \"# [Your Title Here]\\n\\n## Description\\n\\n[Detailed description of what the proposal is about.]\\n\\n## Why This Proposal?\\n\\n[Explanation of why this proposal is necessary or beneficial.]\\n\\n## Execution Plan\\n\\n[Description of how the proposal will be implemented.]\\n\\n## Budget\\n\\n[If applicable, outline the budget required to execute this proposal.]\\n\\n## Timeline\\n\\n[Proposed timeline for the execution of the proposal.]\";\n\nreturn (\n    <>\n        <div className=\"mb-3\">\n            <h5>Contract</h5>\n            <input\n                type=\"text\"\n                onChange={(e) => onChangeContract(e.target.value)}\n            />\n        </div>\n        <div className=\"mb-3\">\n            <h5>Method</h5>\n            <input\n                type=\"text\"\n                onChange={(e) => onChangeMethod(e.target.value)}\n            />\n        </div>\n        <div className=\"mb-3\">\n            <h5>Deposit</h5>\n            <input\n                type=\"number\"\n                onChange={(e) => onChangeDeposit(e.target.value)}\n                defaultValue=\"0\"\n            />\n        </div>\n        <div className=\"mb-3\">\n            <h5>Gas</h5>\n            <input\n                type=\"number\"\n                onChange={(e) => onChangeGas(e.target.value)}\n                defaultValue=\"200000000000000\"\n            />\n        </div>\n        <div className=\"mb-3\">\n            <h5>Arguments (JSON)</h5>\n            <textarea\n                type=\"text\"\n                onChange={(e) => onChangeArgs(e.target.value)}\n                className=\"form-control\"\n                defaultValue={state.args}\n            />\n        </div>\n        {isCongressDaoID && (\n            <div>\n                <div className=\"mb-3\">\n                    <h5>Recipient</h5>\n                    <input\n                        type=\"text\"\n                        onChange={(e) => onChangeRecipient(e.target.value)}\n                        placeholder=\"Specify target account\"\n                    />\n                </div>\n                <div className=\"mb-3\">\n                    <h5>Description</h5>\n\n                    <Widget\n                        src=\"sking.near/widget/Common.Inputs.Markdown\"\n                        props={{\n                            onChange: (value) => onChangeDescription(value),\n                            height: \"270px\",\n                            initialText: defaultDescription\n                        }}\n                    />\n                </div>\n            </div>\n        )}\n        {state.error && <div className=\"text-danger\">{state.error}</div>}\n        <div className=\"ms-auto\">\n            <Widget\n                src=\"sking.near/widget/Common.Button\"\n                props={{\n                    children: \"Propose Function Call\",\n                    onClick: handleFunctionCall,\n                    className: \"mt-2\",\n                    variant: \"success\"\n                }}\n            />\n            {onClose && (\n                <Widget\n                    src=\"sking.near/widget/Common.Button\"\n                    props={{\n                        children: \"Close\",\n                        onClick: onClose,\n                        className: \"mt-2\"\n                    }}\n                />\n            )}\n        </div>\n    </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/astraplusplus.ndctools.near/widget/DAO.Proposal.Create.FunctionCall", "fact_widget_deployments_id": "cbfd3fcb2de146ad7ce79d16f93c3249", "inserted_timestamp": "2023-10-09T17:44:41.418Z", "modified_timestamp": "2023-10-09T17:44:41.418Z", "__row_index": 7}