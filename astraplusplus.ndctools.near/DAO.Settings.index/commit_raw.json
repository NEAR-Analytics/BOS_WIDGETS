{"tx_hash": "2jPYuwQyLRcbYAWXkdCs5rDrozuV8Ro7hFzXJpE9dvhv", "action_id_social": "DQL4EhcXRjjhoWUCuXqPAsx3QvY6vBNk9aA4kJBFUbrJ-0-widget", "block_id": 106521045, "block_timestamp": "2023-11-25T17:53:09.360Z", "signer_id": "astraplusplus.ndctools.near", "widget_name": "DAO.Settings.index", "source_code": "const widgetOwner = props.widgetOwner ?? \"astraplusplus.ndctools.near\";\n\nconst Wrapper = styled.div`\n    p {\n        font-size: 13px;\n    }\n    .text-subdued {\n        color: rgba(130, 134, 136, 1);\n    }\n`;\nconst constructURL = (paramObj, base) => {\n    paramObj = { ...paramObj, page: \"dao\" };\n    const baseURL = base ?? `#/${widgetOwner}/widget/home`;\n    let params = \"\";\n    for (const [key, value] of Object.entries(paramObj)) {\n        if (key === \"dev\" && value === false) {\n            continue;\n        }\n        params += `${key}=${value}&`;\n    }\n    params = params.slice(0, -1);\n    return `${baseURL}?${params}`;\n};\n\nconst initialAnswers = {\n    gracePeriod: \"\"\n};\n\nconst proposalKinds = {\n    ChangeDAOConfig: {\n        title: \"Change DAO Config\",\n        key: \"config\"\n    },\n    ChangeDAOPolicy: {\n        title: \"Change DAO Policy\",\n        key: \"policy\"\n    },\n    Bounty: {\n        title: \"Bounty\",\n        key: \"add_bounty\"\n    },\n    BountyDone: {\n        title: \"Bounty Done\",\n        key: \"bounty_done\"\n    },\n    Transfer: {\n        title: \"Transfer\",\n        key: \"transfer\"\n    },\n    Polls: {\n        title: \"Polls\",\n        key: \"vote\"\n    },\n    RemoveMembers: {\n        title: \"Remove Members\",\n        key: \"remove_member_from_role\"\n    },\n    AddMembers: {\n        title: \"Add Members\",\n        key: \"add_member_to_role\"\n    },\n    FunctionCall: {\n        title: \"Function Call\",\n        key: \"call\"\n    },\n    UpgradeSelf: {\n        title: \"Upgrade Self\",\n        key: \"upgrade_self\"\n    },\n    UpgradeRemote: {\n        title: \"Upgrade Remote\",\n        key: \"upgrade_remote\"\n    },\n    SetVoteToken: {\n        title: \"Set Vote Token\",\n        key: \"set_vote_token\"\n    }\n};\n\nconst proposalActions = {\n    AddProposal: {\n        title: \"Add Proposal\",\n        key: \"AddProposal\"\n    },\n    VoteApprove: {\n        title: \"Vote Approve\",\n        key: \"VoteApprove\"\n    },\n    VoteReject: {\n        title: \"Vote Reject\",\n        key: \"VoteReject\"\n    },\n    VoteRemove: {\n        title: \"Vote Remove\",\n        key: \"VoteRemove\"\n    }\n};\n\nconst allActionArray = Object.keys(proposalActions).map(\n    (key) => proposalActions[key].key\n);\nconst allProposalKindArray = Object.keys(proposalKinds).map(\n    (key) => proposalKinds[key].key\n);\n\nconst renderTable = (roles, rows, action) => {\n    return (\n        <Table>\n            <li className=\"fw-bold\">\n                <span>Actions</span>\n                {roles.map((role) => (\n                    <span className=\"hide-on-mobile\">{role}</span>\n                ))}\n            </li>\n            {Object.keys(rows).map((key) => (\n                <li>\n                    <div>{rows[key].title}</div>\n                    {roles.map((role) => (\n                        <Widget\n                            src=\"nearui.near/widget/Input.Checkbox\"\n                            props={{\n                                label: role,\n                                onChange: (checked) => {\n                                    if (action === \"Vote\") {\n                                        setVotePermission(\n                                            role,\n                                            rows[key].key,\n                                            checked\n                                        );\n                                    } else if (action === \"AddProposal\") {\n                                        setCreatePermission(\n                                            role,\n                                            rows[key].key,\n                                            checked\n                                        );\n                                    }\n                                },\n                                checked:\n                                    action === \"Vote\"\n                                        ? hasPermission(\n                                              role,\n                                              rows[key].key,\n                                              \"VoteApprove\"\n                                          ) ||\n                                          hasPermission(\n                                              role,\n                                              rows[key].key,\n                                              \"VoteReject\"\n                                          ) ||\n                                          hasPermission(\n                                              role,\n                                              rows[key].key,\n                                              \"VoteRemove\"\n                                          )\n                                        : hasPermission(\n                                              role,\n                                              rows[key].key,\n                                              action\n                                          )\n                            }}\n                        />\n                    ))}\n                </li>\n            ))}\n        </Table>\n    );\n};\n\nconst hasPermission = (role, proposalKind, permissionType) => {\n    const roleObj = state.answers.policy.roles.find((r) => r.name === role);\n\n    if (roleObj) {\n        const permission = `${proposalKind}:${permissionType}`;\n        return roleObj.permissions.some(\n            (p) =>\n                p === permission ||\n                p === \"*:*\" ||\n                p === `${proposalKind}:*` ||\n                p === `*:${permissionType}`\n        );\n    } else {\n        return false;\n    }\n};\n\nState.init({\n    tab: \"Proposal Creation\",\n    answers: initialAnswers\n});\n\nconst update = (key, value) =>\n    State.update({\n        answers: {\n            ...state.answers,\n            [key]: value\n        }\n    });\n\nconst ProposalCreation = () => {\n    return (\n        <div className=\"d-flex flex-column gap-2\">\n            <div className=\"d-flex justify-content-between align-items-center\">\n                <div className=\"d-flex flex-column gap-1\">\n                    <h6>Proposal Creation</h6>\n                    <p>Choose what creation rights you give DAO groups. </p>\n                </div>\n                <div className=\"d-flex gap-2\">\n                    <Widget\n                        src=\"nearui.near/widget/Input.Button\"\n                        props={{\n                            children: \"Cancel\",\n                            variant: \"info outline\",\n                            onClick: () => {}\n                        }}\n                    />\n                    <Widget\n                        src=\"nearui.near/widget/Input.Button\"\n                        props={{\n                            children: (\n                                <>\n                                    Propose Changes{\" \"}\n                                    <i class=\"bi bi-check-lg\"></i>\n                                </>\n                            ),\n                            variant: \"info \",\n                            onClick: () => {}\n                        }}\n                    />\n                </div>\n            </div>\n        </div>\n    );\n};\nconst tabs = {\n    \"Proposal Creation\": {\n        name: \"Proposal Creation\",\n        component: <ProposalCreation />\n    },\n    \"Voting Permissions\": {\n        name: \"Voting Permissions\",\n        component: <ProposalCreation />\n    },\n    \"Bond & Deadlines\": {\n        name: \"Bond & Deadlines\",\n        component: <ProposalCreation />\n    },\n    Groups: {\n        name: \"Groups\",\n        component: <ProposalCreation />\n    },\n    \"Visual Changes\": {\n        name: \"Visual Changes\",\n        component: <ProposalCreation />\n    }\n};\n\nconst tabContent = tabs[state.tab].component;\n\nreturn (\n    <Wrapper>\n        <div className=\"d-flex gap-2 \">\n            <div className=\"ndc-card d-flex flex-column gap-2 p-4\">\n                <h5>DAO Name and Purpose</h5>\n                <h6 className=\"text-subdued\">DAO Name</h6>\n                <p>ksjdnf</p>\n                <h6 className=\"text-subdued \">DAO Purpose</h6>\n                <p>dkhbfdsj</p>\n            </div>\n            <div className=\"ndc-card d-flex flex-column gap-2 p-4\">\n                <h5>Legal Status and Doc</h5>\n                <h6 className=\"text-subdued\">Legal Status</h6>\n                <p></p>\n                <h6 className=\"text-subdued \">Documents</h6>\n                <p></p>\n            </div>\n            <div className=\"ndc-card d-flex flex-column gap-2 p-4\">\n                <h5>Links</h5>\n\n                <p></p>\n            </div>\n            <div className=\"ndc-card d-flex flex-column gap-2 p-4\">\n                <h5>Cooldown Period</h5>\n                <p>\n                    Setup the period between when a proposal is approved and is\n                    executed\n                </p>\n                <Widget\n                    src=\"nearui.near/widget/Input.ExperimentalText\"\n                    props={{\n                        label: \"Define Period\",\n                        placeholder: \"Enter days\",\n                        size: \"lg\",\n                        inputProps: {\n                            type: \"number\",\n                            min: 0,\n                            max: 3650,\n                            name: \"gracePeriod\",\n                            defaultValue: state.answers.gracePeriod\n                        },\n                        error: errors[\"gracePeriod\"],\n                        onChange: (v) => update(\"gracePeriod\", parseInt(v))\n                    }}\n                />\n            </div>\n        </div>\n        <div className=\"mt-4\">\n            <div className=\"ndc-card d-flex flex-column gap-2 p-4\">\n                <h5>More DAO settings</h5>\n                <div className=\"w-100\">\n                    <Widget\n                        src={`${widgetOwner}/widget/DAO.Layout.Tabs`}\n                        props={{\n                            tabs: tabs,\n                            tab: state.tab,\n                            update: (state) => State.update(state)\n                        }}\n                    />\n                    {tabContent}\n                </div>\n            </div>\n        </div>\n    </Wrapper>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/astraplusplus.ndctools.near/widget/DAO.Settings.index", "fact_widget_deployments_id": "d8d7b32937bff934201d86f7e47af953", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 6}