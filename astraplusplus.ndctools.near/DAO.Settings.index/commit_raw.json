{"tx_hash": "ztPKatkCAAT3FqYh16ZnQFKte2rg9373kFeUvmtNjEq", "action_id_social": "ANKxwChGGrfXHAJZs7ifybYcJ3jcWvcKPFkBnt1AGohB-0-widget", "block_id": 114574868, "block_timestamp": "2024-03-12T15:20:42.868Z", "signer_id": "astraplusplus.ndctools.near", "widget_name": "DAO.Settings.index", "source_code": "const widgetOwner = props.widgetOwner ?? \"astraplusplus.ndctools.near\";\nconst daoId = props.daoId;\nconst Wrapper = styled.div`\n  p {\n    font-size: 13px;\n  }\n  .text-subdued {\n    color: rgba(130, 134, 136, 1);\n  }\n\n  .no-card-div {\n    .ndc-card {\n      all: unset;\n    }\n  }\n`;\nconst accountId = context.accountId;\nconst policy = Near.view(daoId, \"get_policy\");\nconst config = Near.view(daoId, \"get_config\");\n\nif (policy === null || config === null) {\n  return <Widget src=\"nearui.near/widget/Feedback.Spinner\" />;\n}\n\nconst metadata = JSON.parse(atob(config.metadata ?? \"\"));\n\nState.init({\n  tab: \"Configuration\",\n  answers: initialAnswers,\n  form: {\n    ...config,\n    policy: policy,\n    ...metadata\n  }\n});\n\nconst currentUserRoles = []; // can have mutliple roles\n\nstate.form?.policy?.roles?.map((role) => {\n  if (\n    Array.isArray(role?.kind?.Group) &&\n    role?.kind?.Group?.includes(accountId)\n  ) {\n    currentUserRoles.push(role.name);\n  }\n});\n\n// checks if user has permission to make edits to the screen\nconst hasPermission = (proposalKind) => {\n  const permissions = currentUserRoles.map((role) => {\n    const roleObj = state.form.policy.roles.find((r) => r.name === role);\n    if (roleObj) {\n      return (\n        roleObj.permissions.includes(`${proposalKind}:*`) ||\n        roleObj.permissions.includes(\"*:*\") ||\n        roleObj.permissions.includes(`${proposalKind}:AddProposal`)\n      );\n    } else {\n      return false;\n    }\n  });\n  return permissions.some((element) => element === true);\n};\n\nconst tabs = {\n  Configuration: {\n    name: \"Configuration\",\n    component: (\n      <Widget\n        src={`astraplusplus.ndctools.near/widget/DAO.Settings.ConfigSettings`}\n        props={{\n          ...props,\n          formState: state.form,\n          hasPermission: hasPermission(\"config\")\n        }}\n      />\n    )\n  },\n  Policy: {\n    name: \"Policy\",\n    component: (\n      <Widget\n        src={`astraplusplus.ndctools.near/widget/DAO.Settings.PolicySettings`}\n        props={{\n          ...props,\n          formState: state.form,\n          hasPermission: hasPermission(\"policy\")\n        }}\n      />\n    )\n  },\n  Bonds: {\n    name: \"Bonds and Deadlines\",\n    component: (\n      <Widget\n        src={`astraplusplus.ndctools.near/widget/DAO.Settings.BondsSettings`}\n        props={{\n          ...props,\n          formState: state.form,\n          hasPermission: hasPermission(\"policy\")\n        }}\n      />\n    )\n  }\n};\n\nconst tabContent = tabs[state.tab].component;\n\nreturn (\n  <Wrapper>\n    <div className=\"mt-4\">\n      <div className=\"ndc-card p-4\">\n        <div className=\"d-flex align-items-center justify-content-between flex-wrap\">\n          <h3\n            className=\"pb-2 fw-bold\"\n            style={{\n              flex: 1,\n              borderBottom: \"1px solid rgb(236, 238, 240)\",\n              marginBottom: \"18px\",\n              minWidth: \"200px\"\n            }}\n          >\n            DAO settings\n          </h3>\n          <div className=\"no-card-div\">\n            <Widget\n              src={`${widgetOwner}/widget/DAO.Layout.Tabs`}\n              props={{\n                tabs: tabs,\n                tab: state.tab,\n                update: (state) => State.update(state),\n                allowHref: false\n              }}\n            />\n          </div>\n        </div>\n        <div style={{ marginTop: \"-30px\" }}>{tabContent}</div>\n      </div>\n    </div>\n  </Wrapper>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/astraplusplus.ndctools.near/widget/DAO.Settings.index", "fact_widget_deployments_id": "76159edf6b9059918406aa9c6d050756", "inserted_timestamp": "2024-03-12T16:30:13.632Z", "modified_timestamp": "2024-03-12T16:30:13.632Z", "__row_index": 0}