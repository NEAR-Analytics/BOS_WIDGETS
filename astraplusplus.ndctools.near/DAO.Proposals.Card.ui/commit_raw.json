{"tx_hash": "5EUwCYCeui15cxrcocCHr4gi6NXaZJxLBE5SJUtDduc1", "action_id_social": "4eryfd2TqtSB2AGvAC5mAyzeyoHSJUbvUEQtpckCCPS5-0-widget", "block_id": 112390113, "block_timestamp": "2024-02-08T14:21:42.771Z", "signer_id": "astraplusplus.ndctools.near", "widget_name": "DAO.Proposals.Card.ui", "source_code": "const {\n  id,\n  typeName,\n  proposer,\n  description,\n  kind,\n  statusName,\n  totalVotesNeeded,\n  totalVotes,\n  submission_time,\n  votes\n} = props.proposal;\nconst {\n  daoId,\n  isAllowedToVote,\n  multiSelectMode,\n  proposal,\n  policy,\n  handleVote,\n  handlePreVoteAction,\n  comments,\n  isCongressDaoID,\n  isVotingBodyDao,\n  daoConfig,\n  isHuman,\n  currentuserCongressHouse,\n  CoADaoId,\n  HoMDaoId,\n  registry\n} = props;\nconst accountId = context.accountId;\nconst [showNotificationModal, setNotificationModal] = useState(false);\nconst [voteDetails, setVoteDetails] = useState(null);\nconst expirationTime =\n  isCongressDaoID || isVotingBodyDao\n    ? submission_time +\n      (daoConfig?.vote_duration ?? daoConfig?.voting_duration ?? 0)\n    : policy?.proposal_period\n    ? parseInt(\n        Big(submission_time).add(Big(policy.proposal_period)).div(1000000)\n      )\n    : null;\nfunction checkVotesForCongressDao(value) {\n  if (isCongressDaoID) {\n    return votes[accountId]?.vote === value;\n  } else if (isVotingBodyDao) {\n    const userVote = useCache(\n      () =>\n        Near.asyncView(daoId, \"get_vote\", {\n          id: proposal.id,\n          voter: accountId\n        }).then((vote) => vote),\n      proposal.id + \"vote\",\n      { subscribe: false }\n    );\n    return userVote.vote === value;\n  } else return votes[accountId || \";;;\"] === value;\n}\n\n// TODO: implement category\nconst category = \"\";\n\nconst Wrapper = styled.div`\n  margin: 16px auto;\n  border-radius: 16px;\n  padding: 24px;\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n  min-height: 500px;\n  width: 100%;\n  border: 1px solid #fff;\n  a {\n    color: rgb(68, 152, 224) !important;\n  }\n  .word-wrap {\n    word-wrap: break-word;\n  }\n\n  ${({ status }) =>\n    status === \"Approved\" &&\n    `\n    border-color: #82E299;\n  `}\n\n  ${({ status }) =>\n    status === \"In Progress\" &&\n    `\n    border-color: #fff;\n  `}\n\n  ${({ status }) =>\n    (status === \"Failed\" || status === \"Rejected\") &&\n    `\n    border-color: #C23F38;\n  `}\n\n    /* Tooltip container */\n    .custom-tooltip {\n    position: relative;\n    display: inline-block;\n  }\n\n  /* Tooltip text */\n  .custom-tooltip .tooltiptext {\n    visibility: hidden;\n    width: auto;\n    background-color: #555;\n    color: #fff;\n    text-align: center;\n    padding: 5px;\n    border-radius: 6px;\n\n    /* Position the tooltip text */\n    position: absolute;\n    z-index: 1;\n    bottom: 125%;\n    left: 0%;\n\n    /* Fade in tooltip */\n    opacity: 0;\n    transition: opacity 0.3s;\n  }\n\n  /* Tooltip arrow */\n  .custom-tooltip .tooltiptext::after {\n    content: \"\";\n    position: absolute;\n    top: 100%;\n    left: 50%;\n    margin-left: -5px;\n    border-width: 5px;\n    border-style: solid;\n    border-color: #555 transparent transparent transparent;\n  }\n\n  /* Show the tooltip text when you mouse over the tooltip container */\n  .custom-tooltip:hover .tooltiptext {\n    visibility: visible;\n    opacity: 1;\n  }\n\n  .text-sm {\n    font-size: 14px;\n  }\n\n  .counter-text {\n    font-size: 14px;\n    margin-right: 5px;\n    border-width: 2px;\n    animation-duration: 8s;\n  }\n\n  .text-center {\n    text-align: center;\n  }\n\n  .info_section {\n    border-right: 1px solid #dee2e6;\n    padding-right: 15px;\n    margin: 10px 15px 10px 0;\n\n    &.no-border {\n      border: 0;\n    }\n\n    @media (max-width: 768px) {\n      border: 0;\n    }\n  }\n`;\n\nconst cls = (c) => c.join(\" \");\n\nconst YouVotedBadge = () => {\n  return (\n    <Widget\n      src=\"nearui.near/widget/Element.Badge\"\n      props={{\n        size: \"sm\",\n        variant: \"info outline mb-1\",\n        children: \"You voted\"\n      }}\n    />\n  );\n};\n\nfunction renderPermission({ isAllowedToVote }) {\n  return (\n    <div\n      className={\"text-center p-2 rounded-pill\"}\n      style={{\n        backgroundColor: isAllowedToVote ? \"#82E29926\" : \"#C23F381A\"\n      }}\n    >\n      {isAllowedToVote\n        ? \"You are allowed to vote on this proposal\"\n        : \"You are not allowed to vote on this proposal\"}\n    </div>\n  );\n}\n\nconst execProposal = ({ daoId, id }) =>\n  Near.call(daoId, \"execute\", { id }, 50000000000000);\n\nconst slashPreVoteProposal = ({ id }) =>\n  Near.call(daoId, \"slash_prevote_proposal\", { id }, 300000000000000);\n\nfunction renderHeader({ typeName, id, daoId, statusName }) {\n  let statusicon;\n  let statustext;\n  let statusvariant;\n\n  switch (statusName) {\n    case \"Approved\":\n    case \"Accepted\":\n      statusicon = \"bi bi-check-circle\";\n      statustext = statusName;\n      statusvariant = \"success\";\n      break;\n    case \"Executed\":\n      statusicon = \"bi bi-play-fill\";\n      statustext = statusName;\n      statusvariant = \"success\";\n      break;\n    case \"In Progress\":\n    case \"InProgress\":\n      statusicon = \"spinner-border spinner-border-sm\";\n      statustext = \"In Progress\";\n      statusvariant = \"primary\";\n      break;\n    case \"Vetoed\":\n      statusicon = \"bi bi-x-circle\";\n      statustext = statusName;\n      statusvariant = \"black\";\n      break;\n    case \"Expired\":\n      statusicon = \"bi bi-clock\";\n      statustext = statusName;\n      statusvariant = \"black\";\n      break;\n    case \"Failed\":\n      statusicon = \"bi bi-x-circle\";\n      statustext = statusName;\n      statusvariant = \"black\";\n      break;\n    case \"Rejected\":\n      statusicon = \"bi bi-ban\";\n      statustext = statusName;\n      statusvariant = \"danger\";\n      break;\n    case \"PreVote\":\n    case \"Pre Vote\":\n      statusicon = \"bi bi-hourglass-split\";\n      statustext = \"Pre Vote\";\n      statusvariant = \"disabled\";\n      break;\n  }\n\n  return (\n    <div className=\"card__header\">\n      <div className=\"d-flex flex-column gap-2\">\n        <div className=\"d-flex align-items-center justify-content-between\">\n          <h4>{typeName}</h4>\n          <div className=\"d-flex align-items-center gap-2\">\n            {(isCongressDaoID || isVotingBodyDao) &&\n              statusName === \"Approved\" &&\n              expirationTime + (daoConfig?.cooldown ?? 0) < // cooldown is not available in vb\n                Date.now() && (\n                <Widget\n                  src=\"nearui.near/widget/Input.Button\"\n                  props={{\n                    variant: \"primary icon\",\n                    children: <i class=\"bi bi-caret-right-fill\" />,\n                    onClick: () => execProposal({ daoId, id })\n                  }}\n                />\n              )}\n            {isVotingBodyDao && statusName === \"Spam\" && (\n              <Widget\n                src=\"nearui.near/widget/Input.Button\"\n                props={{\n                  variant: \"danger\",\n                  children: \"Slash\",\n                  onClick: () => execProposal({ daoId, id })\n                }}\n              />\n            )}\n            {isVotingBodyDao &&\n              statusName === \"Pre Vote\" &&\n              proposal?.submission_time + daoConfig?.pre_vote_duration <\n                Date.now() && (\n                <Widget\n                  src=\"nearui.near/widget/Input.Button\"\n                  props={{\n                    variant: \"danger\",\n                    children: \"Slash\",\n                    onClick: () =>\n                      slashPreVoteProposal({\n                        id\n                      })\n                  }}\n                />\n              )}\n          </div>\n        </div>\n        <div className=\"d-flex gap-2 flex-wrap align-items-center\">\n          <Widget\n            src=\"nearui.near/widget/Element.Badge\"\n            props={{\n              children: `Proposal ID #${id}`,\n              variant: `outline info round`,\n              size: \"lg\"\n            }}\n          />\n          <Widget\n            src=\"nearui.near/widget/Element.Badge\"\n            props={{\n              children: (\n                <>\n                  <i\n                    className={statusicon}\n                    style={{\n                      fontSize: \"16px\",\n                      marginRight: \"5px\",\n                      borderWidth: \"2px\",\n                      animationDuration: \"3s\"\n                    }}\n                  ></i>\n                  {statustext}\n                </>\n              ),\n              variant: `${statusvariant} round`,\n              size: \"lg\"\n            }}\n          />\n\n          {statusName === \"In Progress\" && expirationTime > Date.now() && (\n            <Widget\n              src=\"nearui.near/widget/Element.Badge\"\n              props={{\n                children: (\n                  <div className=\"counter-text\">\n                    <Widget\n                      src=\"astraplusplus.ndctools.near/widget/Common.Layout.Countdown\"\n                      props={{\n                        timeToCheck: expirationTime\n                      }}\n                    />\n                  </div>\n                ),\n                variant: `info round`,\n                size: \"lg\"\n              }}\n            />\n          )}\n          {isCongressDaoID &&\n            daoConfig?.cooldown !== 0 &&\n            statusName !== \"In Progress\" &&\n            expirationTime + daoConfig?.cooldown > Date.now() && (\n              <Widget\n                src=\"nearui.near/widget/Element.Badge\"\n                props={{\n                  children: (\n                    <div className=\"d-flex gap-1 align-items-center counter-text\">\n                      <div>Cooldown:</div>\n                      <Widget\n                        src=\"astraplusplus.ndctools.near/widget/Common.Layout.Countdown\"\n                        props={{\n                          timeToCheck: expirationTime + daoConfig?.cooldown\n                        }}\n                      />\n                    </div>\n                  ),\n                  variant: `disabled round`,\n                  size: \"lg\"\n                }}\n              />\n            )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction renderData({\n  proposer,\n  category,\n  description,\n  submission_time,\n  totalVotesNeeded\n}) {\n  return (\n    <div className=\"d-flex gap-2 flex-column\">\n      <div className=\"d-flex gap-2\">\n        <div className=\"w-50\">\n          <div className=\"mb-2\">\n            <b>Proposer</b>\n          </div>\n          <Widget\n            src=\"mob.near/widget/Profile.ShortInlineBlock\"\n            props={{ accountId: proposer, tooltip: true }}\n          />\n        </div>\n        {category && (\n          <div className=\"w-50\">\n            <h5 className=\"text-muted h6\">Category</h5>\n            <Widget\n              src=\"nearui.near/widget/Element.Badge\"\n              props={{\n                children: category,\n                variant: `disabled round`,\n                size: \"lg\"\n              }}\n            />\n          </div>\n        )}\n      </div>\n      <div className=\"mt-3 word-wrap\">\n        <b>Description</b>\n        <Markdown text={description} />\n      </div>\n\n      <Widget\n        src=\"astraplusplus.ndctools.near/widget/Common.Modals.ProposalArguments\"\n        props={{ daoId, proposal }}\n      />\n\n      <div className=\"d-flex flex-wrap\">\n        {submission_time && (\n          <div className=\"info_section\">\n            <b>Submitted at</b>\n            <div>\n              <small className=\"text-muted\">\n                {isCongressDaoID || isVotingBodyDao\n                  ? new Date(submission_time).toLocaleString()\n                  : new Date(\n                      parseInt(Big(submission_time).div(1000000))\n                    ).toLocaleString()}\n              </small>\n            </div>\n          </div>\n        )}\n        {expirationTime && (\n          <div className=\"info_section\">\n            <b>Expired at</b>\n            <div>\n              <small className=\"text-muted\">\n                {new Date(expirationTime).toLocaleString()}\n              </small>\n            </div>\n          </div>\n        )}\n        {totalVotesNeeded > 0 && (\n          <div className=\"info_section no-border\">\n            <b>Required Votes</b>\n            <div>\n              <small className=\"text-muted\">{totalVotesNeeded}</small>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nfunction renderVoteButtons({\n  totalVotes,\n  statusName,\n  votes,\n  accountId,\n  isAllowedToVote,\n  handleVote\n}) {\n  const finished = statusName !== \"In Progress\";\n  const VoteButton = styled.button`\n    width: 100%;\n    border-radius: 15px;\n    border: 1px solid transparent;\n    padding: 0 20px;\n    line-height: 45px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    position: relative;\n    overflow: hidden;\n    color: rgb(var(--vote-button-color));\n\n    --vote-button-bg: 130, 226, 153;\n    --vote-button-color: 0, 0, 0;\n\n    &.no {\n      --vote-button-bg: 194, 63, 56;\n    }\n\n    &.no > div:last-child {\n      color: #000;\n      transition: all 0.4s ease-in-out;\n    }\n    ${({ finished, percentage, disabled }) => {\n      if (finished) {\n        if (percentage > 80) {\n          return `\n        &.no > div:last-child {\n          color: rgb(var(--vote-button-color)) !important;\n        }\n      `;\n        }\n      } else if (!disabled) {\n        return `\n        &:hover.no > div:last-child {\n          color: rgb(var(--vote-button-color)) !important;\n        } \n        `;\n      }\n    }}}\n\n    &.spam {\n      --vote-button-bg: 245, 197, 24;\n    }\n\n    &.abstain {\n        --vote-button-bg: 169, 169, 169;\n      }\n\n    &:before {\n      content: \"\";\n      position: absolute;\n      top: 0;\n      left: 0;\n      height: 100%;\n      border-radius: 12px;\n      transition: all 0.4s ease-in-out;\n      z-index: 0;\n      background-color: rgb(var(--vote-button-bg));\n      ${({ percentage }) => `\n        min-width: ${percentage && percentage > 5 ? `${percentage}%` : \"5px\"};\n      `}\n    }\n\n    &:after {\n      content: \"\";\n      position: absolute;\n      top: 0;\n      left: 0;\n      height: 100%;\n      border-radius: 12px;\n      transition: all 0.4s ease-in-out;\n      z-index: 1;\n      background-color: var(--vote-button-bg);\n\n      min-width: ${({ percentage }) =>\n        percentage && percentage > 5 ? `${percentage}%` : \"5px\"};\n\n      ${({ finished, wins }) =>\n        finished &&\n        wins &&\n        `\n        display: none;\n      `}\n    }\n\n    ${({ disabled }) =>\n      !disabled &&\n      `\n    &:hover {\n      &:before {\n        min-width: 100%;\n      }\n    }\n  `}\n\n    & > div {\n      z-index: 2;\n    }\n\n    & > div:last-child span {\n      display: block;\n      font-size: 15px;\n      font-weight: 600;\n      line-height: 1.4;\n\n      &:last-child {\n        font-size: 12px;\n        font-weight: 400;\n      }\n    }\n  `;\n\n  const denominator =\n    isCongressDaoID || isVotingBodyDao ? totalVotes.total : totalVotesNeeded;\n\n  const getPercentage = (vote) => {\n    const percentage = Math.round((vote / denominator) * 100);\n    return percentage || 0;\n  };\n\n  const percentages = {\n    yes: getPercentage(totalVotes.yes),\n    no: getPercentage(totalVotes.no),\n    spam: getPercentage(totalVotes.spam),\n    abstain: getPercentage(totalVotes.abstain)\n  };\n\n  const wins = {\n    yes: statusName === \"Approved\",\n    no: statusName === \"Rejected\",\n    spam: statusName === \"Failed\" || statusName === \"Spam\",\n    abstain: statusName === \"Failed\"\n  };\n\n  const voted = {\n    yes: checkVotesForCongressDao(\"Approve\"),\n    no: checkVotesForCongressDao(\"Reject\"),\n    spam: isVotingBodyDao\n      ? checkVotesForCongressDao(\"Spam\")\n      : checkVotesForCongressDao(\"Remove\"),\n    abstain: checkVotesForCongressDao(\"Abstain\")\n  };\n\n  const alreadyVoted = isVotingBodyDao\n    ? false // allow revote\n    : voted.yes || voted.no || voted.spam || voted.abstain;\n  const showVeto = daoId === HoMDaoId;\n\n  const VotePercentage = ({ vote }) => (\n    <div>\n      <span>\n        {percentages[vote]}\n        <i className=\"bi bi-percent\"></i>\n      </span>\n      <span>\n        {totalVotes[vote]} {totalVotes[vote] === 1 ? \"Vote\" : \"Votes\"}\n      </span>\n    </div>\n  );\n\n  return (\n    <div\n      className=\"d-lg-grid d-flex flex-wrap gap-2 align-items-end\"\n      style={{\n        gridTemplateColumns: showVeto\n          ? \"repeat(3,1fr) 120px\"\n          : isVotingBodyDao\n          ? \"repeat(4,1fr)\"\n          : \"repeat(3,1fr)\"\n      }}\n    >\n      <div className=\"w-100\">\n        {voted.yes && <YouVotedBadge />}\n        <VoteButton\n          className=\"yes\"\n          percentage={percentages.yes}\n          finished={finished}\n          wins={wins.yes}\n          myVote={voted.yes}\n          onClick={() => handleVote(\"VoteApprove\")}\n          disabled={alreadyVoted || finished || !isAllowedToVote[0]}\n        >\n          <div>\n            {wins.yes && (\n              <span title=\"Yes won\">\n                <i className=\"bi bi-check-circle\"></i>\n              </span>\n            )}\n            <span className=\"text-sm\">Approve</span>\n          </div>\n          <VotePercentage vote=\"yes\" />\n        </VoteButton>\n      </div>\n      <div className=\"w-100\">\n        {voted.no && <YouVotedBadge />}\n        <VoteButton\n          className=\"no\"\n          percentage={percentages.no}\n          finished={finished}\n          wins={wins.no}\n          myVote={voted.no}\n          onClick={() => handleVote(\"VoteReject\")}\n          disabled={alreadyVoted || finished || !isAllowedToVote[1]}\n        >\n          <div className=\"d-flex gap-2 align-items-center\">\n            {wins.no && (\n              <span title=\"No won\">\n                <i className=\"bi bi-check-circle\"></i>\n              </span>\n            )}\n            <span className=\"text-sm\">Reject</span>\n          </div>\n          <VotePercentage vote=\"no\" />\n        </VoteButton>\n      </div>\n      {(isVotingBodyDao || isCongressDaoID) && (\n        <div className=\"w-100\">\n          {voted.abstain && <YouVotedBadge />}\n\n          <VoteButton\n            className=\"abstain\"\n            percentage={percentages.abstain}\n            finished={finished}\n            wins={wins.abstain}\n            myVote={voted.abstain}\n            onClick={() => handleVote(\"VoteAbstain\")}\n            disabled={alreadyVoted || finished || !isAllowedToVote[2]}\n          >\n            <div className=\"d-flex gap-2 align-items-center\">\n              <span>Abstain</span>\n            </div>\n            <VotePercentage vote=\"abstain\" />\n          </VoteButton>\n        </div>\n      )}\n      {!isCongressDaoID && (\n        <div className=\"w-100\">\n          {voted.spam && <YouVotedBadge />}\n\n          <VoteButton\n            className=\"spam\"\n            percentage={percentages.spam}\n            finished={finished}\n            wins={wins.spam}\n            myVote={voted.spam}\n            onClick={() =>\n              handleVote(isVotingBodyDao ? \"VoteSpam\" : \"VoteRemove\")\n            }\n            disabled={alreadyVoted || finished || !isAllowedToVote[2]}\n          >\n            <div className=\"d-flex gap-2 align-items-center\">\n              <span>Spam</span>\n            </div>\n            <VotePercentage vote=\"spam\" />\n          </VoteButton>\n        </div>\n      )}\n\n      {showVeto && (\n        <div className=\"w-100\">\n          <Widget\n            src=\"astraplusplus.ndctools.near/widget/DAO.Proposal.Common.VetoButton\"\n            props={{\n              daoId,\n              proposal,\n              isCongressDaoID,\n              isVotingBodyDao,\n              daoConfig,\n              isHuman,\n              currentuserCongressHouse,\n              CoADaoId,\n              HoMDaoId,\n              registry,\n              dev: props.dev\n            }}\n          />\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction renderMultiVoteButtons({ daoId, proposal, canVote }) {\n  return (\n    <Widget\n      src=\"astraplusplus.ndctools.near/widget/DAO.Proposals.MultiVote\"\n      props={{\n        daoId,\n        proposal,\n        canVote,\n        view: \"multiVote\",\n        isCongressDaoID,\n        isVotingBodyDao,\n        dev: props.dev\n      }}\n    />\n  );\n}\n\nfunction renderPreVoteButtons({ proposal }) {\n  const voted = proposal?.supported?.includes(accountId);\n  const slashActive =\n    proposal?.submission_time + daoConfig?.pre_vote_duration < Date.now();\n  return (\n    <div\n      className=\"d-lg-grid d-flex flex-wrap gap-2 align-items-end\"\n      style={{ gridTemplateColumns: \"repeat(3,1fr)\" }}\n    >\n      <button\n        class=\"custom-tooltip btn btn-primary\"\n        disabled={currentuserCongressHouse === null || slashActive}\n        onClick={() =>\n          handlePreVoteAction({\n            action: \"support_proposal_by_congress\",\n            proposalId: proposal.id\n          })\n        }\n      >\n        <span class=\"tooltiptext\">\n          This proposal requires a Congressional member to support in order to\n          move into the active status.\n        </span>\n        Congress Member UpVote\n      </button>\n      <div className=\"d-flex flex-column gap-1\">\n        <div style={{ width: \"fit-content\" }}>{voted && <YouVotedBadge />}</div>\n        <button\n          class=\"custom-tooltip btn btn-primary\"\n          disabled={!isHuman || voted || slashActive}\n          onClick={() =>\n            handlePreVoteAction({\n              action: \"support_proposal\",\n              proposalId: proposal.id\n            })\n          }\n        >\n          <span class=\"tooltiptext\">\n            This proposal requires a minimal support from 50 members in order to\n            move into the active status.\n          </span>\n          Voting Body Support\n        </button>\n      </div>\n      <button\n        disabled={slashActive}\n        class=\"custom-tooltip btn btn-primary\"\n        onClick={() =>\n          handlePreVoteAction({\n            action: \"top_up_proposal\",\n            proposalId: proposal.id\n          })\n        }\n      >\n        <span class=\"tooltiptext\">\n          This proposal requires additional bond to support in order to move\n          into the active status.\n        </span>\n        Bond to move to Active Status\n      </button>\n    </div>\n  );\n}\n\nfunction renderFooter({ totalVotes, votes, comments, daoId, proposal }) {\n  const items = [\n    {\n      title: \"Comments\",\n      icon: \"bi bi-chat-left-text\",\n      count: comments.length || 0,\n      widget: \"Common.Modals.Comments\",\n      props: {\n        daoId,\n        proposal,\n        commentsCount: comments.length,\n        item: {\n          type: \"dao_proposal_comment\",\n          path: `${daoId}/proposal/main`,\n          proposal_id: proposal.id + \"-beta\"\n        }\n      }\n    },\n    {\n      title: \"Voters\",\n      icon: \"bi bi-people\",\n      count: totalVotes.total,\n      widget: \"Common.Modals.Voters\",\n      props: {\n        daoId,\n        votes,\n        totalVotes,\n        isCongressDaoID,\n        dev: props.dev,\n        isVotingBodyDao,\n        proposalId: proposal.id,\n        votersCount: totalVotes.total\n      }\n    },\n    {\n      title: \"Share\",\n      icon: \"bi bi-share\",\n      widget: \"Common.Modals.Share\",\n      props: {\n        url: `https://near.org/astraplusplus.ndctools.near/widget/home?page=dao&tab=proposals&daoId=${daoId}&proposalId=${\n          proposal.id\n        }${props.dev ? \"&dev=true\" : \"\"}`,\n        text: \"Explore this new proposal from our DAO! Your support and feedback are essential as we work towards a decentralized future. Review the details and join the discussion here:\"\n      }\n    }\n  ];\n\n  if (\n    proposal.typeName !== \"Text\" &&\n    proposal.typeName !== \"Vote\" &&\n    proposal.typeName !== \"TextSuper\"\n  ) {\n    items.push({\n      title: \"More details\",\n      icon: \"bi bi-three-dots\",\n      widget: \"Common.Modals.ProposalArguments\",\n      props: {\n        daoId,\n        proposal,\n        showCard: true\n      }\n    });\n  }\n\n  const renderModal = (item, index) => {\n    return (\n      <Widget\n        src=\"astraplusplus.ndctools.near/widget/Layout.Modal\"\n        props={{\n          content: (\n            <Widget\n              src={`astraplusplus.ndctools.near/widget/${item.widget}`}\n              props={item.props}\n            />\n          ),\n          toggle: (\n            <div\n              key={index}\n              className={\n                \"d-flex gap-2 align-items-center justify-content-center user-select-none\" +\n                (index !== items.length - 1 ? \" border-end\" : \"\")\n              }\n            >\n              <i className={item.icon} style={{ color: \"#4498E0\" }}></i>\n              {item.count && <span>{item.count}</span>}\n              <span>{item.title}</span>\n            </div>\n          ),\n          toggleContainerProps: {\n            className: \"flex-fill\"\n          }\n        }}\n      />\n    );\n  };\n\n  return (\n    <div className=\"d-flex gap-3 justify-content-between mt-2 border-top pt-4 flex-wrap\">\n      {items.map(renderModal)}\n    </div>\n  );\n}\n\nconst voted = {\n  yes: checkVotesForCongressDao(\"Approve\"),\n  no: checkVotesForCongressDao(\"Reject\"),\n  spam: isVotingBodyDao\n    ? checkVotesForCongressDao(\"Spam\")\n    : checkVotesForCongressDao(\"Remove\"),\n  abstain: checkVotesForCongressDao(\"Abstain\")\n};\n\nconst alreadyVoted = voted.yes || voted.no || voted.spam;\n\nconst canVote =\n  isAllowedToVote.every((v) => v) &&\n  statusName === \"In Progress\" &&\n  !alreadyVoted;\n\nconst showMultiVote = multiSelectMode && canVote;\n\nif (multiSelectMode && !canVote) {\n  let reason = \"\";\n\n  if (!isAllowedToVote.every((v) => v)) {\n    reason = \"you don't have permissions to vote\";\n  }\n  if (statusName !== \"In Progress\") {\n    reason = `it's already ${statusName}`;\n  }\n  if (alreadyVoted) {\n    reason = ` you've already voted ${votes[accountId]}`;\n  }\n\n  return (\n    <div>\n      Hiding #{id} because {reason}\n    </div>\n  );\n}\n\nconst NotificationModal = () => {\n  return (\n    <Widget\n      src=\"astraplusplus.ndctools.near/widget/Layout.Modal\"\n      props={{\n        content: (\n          <div className=\"ndc-card d-flex flex-column gap-3 p-4\">\n            Do you want to notify proposer: {proposer} about the vote?\n            <div className=\"d-flex gap-3 justify-content-end\">\n              <Widget\n                src=\"nearui.near/widget/Input.Button\"\n                props={{\n                  children: <>No</>,\n                  size: \"sm\",\n                  variant: \"danger outline\",\n                  onClick: () => {\n                    handleVote({\n                      action: voteDetails,\n                      daoId,\n                      proposalId: proposal.id,\n                      proposer,\n                      showNotification: false\n                    });\n                    setNotificationModal(false);\n                  }\n                }}\n              />\n              <Widget\n                src=\"nearui.near/widget/Input.Button\"\n                props={{\n                  children: <>Yes</>,\n                  variant: \"info outline\",\n                  size: \"sm\",\n                  onClick: () => {\n                    handleVote({\n                      action: voteDetails,\n                      daoId,\n                      proposalId: proposal.id,\n                      proposer,\n                      showNotification: true\n                    });\n                    setNotificationModal(false);\n                  }\n                }}\n              />\n            </div>\n          </div>\n        ),\n        toggle: <></>,\n        open: showNotificationModal,\n        onOpenChange: () => setNotificationModal(!showNotificationModal)\n      }}\n    />\n  );\n};\n\nreturn (\n  <Wrapper className=\"ndc-card\" status={statusName}>\n    <NotificationModal />\n    {renderPermission({ isAllowedToVote: isAllowedToVote.every((v) => v) })}\n    {renderHeader({ typeName, id, daoId, statusName })}\n    {renderData({\n      proposer,\n      category,\n      description,\n      submission_time,\n      totalVotesNeeded\n    })}\n    {!!showMultiVote &&\n      renderMultiVoteButtons({\n        daoId,\n        proposal,\n        canVote\n      })}\n\n    {statusName !== \"Pre Vote\" &&\n      !showMultiVote &&\n      renderVoteButtons({\n        totalVotes,\n        statusName,\n        votes,\n        accountId,\n        isAllowedToVote,\n        handleVote: (action) => {\n          if (isVotingBodyDao) {\n            return handleVote({\n              action,\n              daoId,\n              proposalId: proposal.id,\n              proposer\n            });\n          } else {\n            setNotificationModal(true);\n            setVoteDetails(action);\n          }\n        }\n      })}\n\n    {statusName === \"Pre Vote\" &&\n      renderPreVoteButtons({\n        proposal\n      })}\n    {renderFooter({\n      totalVotes,\n      votes,\n      comments,\n      daoId,\n      proposal\n    })}\n  </Wrapper>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/astraplusplus.ndctools.near/widget/DAO.Proposals.Card.ui", "fact_widget_deployments_id": "75dd4beba74214f333009f604e68c44c", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 7}