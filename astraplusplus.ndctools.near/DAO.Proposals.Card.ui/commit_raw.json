{"tx_hash": "61XkT2QSkGZHXPQyLk2jpK5e789v4UGpxqrtsgP6h8s4", "action_id_social": "68DxvwNBxb5gV78dL1JrMABtxBN6DzKJV5BvyKAqw1p9-0-widget", "block_id": 103218204, "block_timestamp": "2023-10-12T17:24:44.298Z", "signer_id": "astraplusplus.ndctools.near", "widget_name": "DAO.Proposals.Card.ui", "source_code": "const {\n    id,\n    typeName,\n    proposer,\n    description,\n    kind,\n    statusName,\n    totalVotesNeeded,\n    totalVotes,\n    submission_time,\n    votes\n} = props.proposal;\nconst {\n    daoId,\n    isAllowedToVote,\n    multiSelectMode,\n    proposal,\n    policy,\n    handleVote,\n    comments,\n    isCongressDaoID,\n    daoConfig\n} = props;\nconst accountId = context.accountId;\n\n// TODO: implement category\nconst category = \"\";\n\nconst Wrapper = styled.div`\n    margin: 16px auto;\n    border-radius: 16px;\n    padding: 24px;\n    display: flex;\n    flex-direction: column;\n    gap: 24px;\n    min-height: 500px;\n    width: 100%;\n    border: 1px solid #fff;\n\n    .word-wrap {\n        word-wrap: break-word;\n    }\n\n    ${({ status }) =>\n        status === \"Approved\" &&\n        `\n    border-color: #82E299;\n  `}\n\n    ${({ status }) =>\n        status === \"In Progress\" &&\n        `\n    border-color: #fff;\n  `}\n\n  ${({ status }) =>\n        (status === \"Failed\" || status === \"Rejected\") &&\n        `\n    border-color: #C23F38;\n  `}\n\n  .text-muted {\n        color: #8c8c8c !important;\n    }\n`;\n\nconst cls = (c) => c.join(\" \");\n\nfunction renderPermission({ isAllowedToVote }) {\n    return (\n        <div\n            className={\"text-center p-2 rounded-pill\"}\n            style={{\n                backgroundColor: isAllowedToVote ? \"#82E29926\" : \"#C23F381A\"\n            }}\n        >\n            {isAllowedToVote\n                ? \"You are allowed to vote on this proposal\"\n                : \"You are not allowed to vote on this proposal\"}\n        </div>\n    );\n}\n\nconst execProposal = ({ daoId, id }) =>\n    Near.call(daoId, \"execute\", { id }, 300000000000000);\n\nfunction renderHeader({ typeName, id, daoId, statusName }) {\n    let statusicon;\n    let statustext;\n    let statusvariant;\n\n    switch (statusName) {\n        case \"Approved\":\n        case \"Accepted\":\n            statusicon = \"bi bi-check-circle\";\n            statustext = \"Proposal \" + statusName;\n            statusvariant = \"success\";\n            break;\n        case \"Executed\":\n            statusicon = \"bi bi-play-fill\";\n            statustext = \"Proposal \" + statusName;\n            statusvariant = \"success\";\n            break;\n        case \"In Progress\":\n        case \"InProgress\":\n            statusicon = \"spinner-border spinner-border-sm\";\n            statustext = \"Proposal In Progress\";\n            statusvariant = \"primary\";\n            break;\n        case \"Vetoed\":\n            statusicon = \"bi bi-x-circle\";\n            statustext = \"Proposal Vetoed\";\n            statusvariant = \"black\";\n            break;\n        case \"Expired\":\n            statusicon = \"bi bi-clock\";\n            statustext = \"Proposal Expired\";\n            statusvariant = \"black\";\n            break;\n        case \"Failed\":\n            statusicon = \"bi bi-x-circle\";\n            statustext = \"Proposal Failed\";\n            statusvariant = \"black\";\n            break;\n        case \"Rejected\":\n            statusicon = \"bi bi-ban\";\n            statustext = \"Proposal Rejected\";\n            statusvariant = \"danger\";\n            break;\n    }\n\n    return (\n        <div className=\"card__header\">\n            <div className=\"d-flex flex-wrap justify-content-between align-items-center gap-3\">\n                <div>\n                    <div className=\"d-flex gap-2\">\n                        <h4 className=\"h4 d-flex align-items-center gap-2\">\n                            {typeName}\n                            <Widget\n                                src=\"nearui.near/widget/Element.Badge\"\n                                props={{\n                                    children: `Proposal ID #${id}`,\n                                    variant: `outline info round`,\n                                    size: \"md\"\n                                }}\n                            />\n                            {isCongressDaoID &&\n                                statusName === \"Approved\" &&\n                                proposal?.submission_time +\n                                    daoConfig?.voting_duration +\n                                    daoConfig?.cooldown >\n                                    Date.now() && (\n                                    <Widget\n                                        src=\"nearui.near/widget/Input.Button\"\n                                        props={{\n                                            variant: \"primary icon\",\n                                            children: (\n                                                <i class=\"bi bi-caret-right-fill\" />\n                                            ),\n                                            onClick: () =>\n                                                execProposal({ daoId, id })\n                                        }}\n                                    />\n                                )}\n                        </h4>\n                    </div>\n                </div>\n                <div>\n                    <Widget\n                        src=\"nearui.near/widget/Element.Badge\"\n                        props={{\n                            children: (\n                                <>\n                                    <i\n                                        className={statusicon}\n                                        style={{\n                                            fontSize: \"18px\",\n                                            marginRight: \"5px\",\n                                            borderWidth: \"2px\",\n                                            animationDuration: \"8s\"\n                                        }}\n                                    ></i>\n                                    {statustext}\n                                </>\n                            ),\n                            variant: `${statusvariant} round`,\n                            size: \"lg\"\n                        }}\n                    />\n                </div>\n            </div>\n            <h6 className=\"text-secondary\">{daoId}</h6>\n        </div>\n    );\n}\n\nfunction renderData({\n    proposer,\n    category,\n    description,\n    submission_time,\n    totalVotesNeeded\n}) {\n    return (\n        <div className=\"d-flex gap-3 flex-column\">\n            <div className=\"d-flex gap-3\">\n                <div className=\"w-50\">\n                    <div className=\"mb-2\">\n                        <b>Proposer</b>\n                    </div>\n                    <Widget\n                        src=\"nearui.near/widget/Element.User\"\n                        props={{ accountId: proposer }}\n                    />\n                </div>\n                {category && (\n                    <div className=\"w-50\">\n                        <h5 className=\"text-muted h6\">Category</h5>\n                        <Widget\n                            src=\"nearui.near/widget/Element.Badge\"\n                            props={{\n                                children: category,\n                                variant: `disabled round`,\n                                size: \"lg\"\n                            }}\n                        />\n                    </div>\n                )}\n            </div>\n            <div className=\"mt-4 word-wrap\">\n                <b>Description</b>\n                <Markdown text={description} />\n            </div>\n            <div>\n                <Widget\n                    src=\"astraplusplus.ndctools.near/widget/Common.Modals.ProposalArguments\"\n                    props={{\n                        daoId,\n                        proposal\n                    }}\n                />\n            </div>\n            <div className=\"d-flex gap-5 flex-wrap\">\n                {submission_time && (\n                    <div>\n                        <b>Submission date</b>\n                        <p>\n                            <small className=\"\">\n                                {isCongressDaoID\n                                    ? new Date(submission_time).toLocaleString()\n                                    : new Date(\n                                          parseInt(\n                                              Big(submission_time).div(1000000)\n                                          )\n                                      ).toLocaleString()}\n                            </small>\n                        </p>\n                    </div>\n                )}\n                {totalVotesNeeded && (\n                    <div>\n                        <b>Total Votes Required</b>\n                        <p>\n                            <small>{totalVotesNeeded}</small>\n                        </p>\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n}\n\nfunction renderVoteButtons({\n    totalVotes,\n    statusName,\n    votes,\n    accountId,\n    isAllowedToVote,\n    handleVote\n}) {\n    const VoteButton = styled.button`\n    width: 100%;\n    border-radius: 15px;\n    border: 1px solid transparent;\n    padding: 0 20px;\n    line-height: 45px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    position: relative;\n    overflow: hidden;\n    color: rgb(var(--vote-button-color));\n\n    --vote-button-bg: 130, 226, 153;\n    --vote-button-color: 0, 0, 0;\n\n    &.no {\n      --vote-button-bg: 194, 63, 56;\n      --vote-button-color: 255, 255, 255;\n    }\n\n    &.no > div:last-child {\n      color: #000;\n      transition: all 0.4s ease-in-out;\n    }\n    ${({ finsihed, percentage, disabled }) => {\n        if (finsihed) {\n            if (percentage > 80) {\n                return `\n        &.no > div:last-child {\n          color: rgb(var(--vote-button-color)) !important;\n        }\n      `;\n            }\n        } else if (!disabled) {\n            return `\n        &:hover.no > div:last-child {\n          color: rgb(var(--vote-button-color)) !important;\n        } \n        `;\n        }\n    }}}\n\n    &.spam {\n      --vote-button-bg: 245, 197, 24;\n    }\n\n    &:before {\n      content: \"\";\n      position: absolute;\n      top: 0;\n      left: 0;\n      height: 100%;\n      border-radius: 12px;\n      transition: all 0.4s ease-in-out;\n      z-index: 0;\n      background-color: rgb(var(--vote-button-bg));\n      ${({ percentage }) => `\n        min-width: ${percentage ? `${percentage}%` : \"120px\"};\n      `}\n    }\n\n    &:after {\n      content: \"\";\n      position: absolute;\n      top: 0;\n      left: 0;\n      height: 100%;\n      border-radius: 12px;\n      transition: all 0.4s ease-in-out;\n      z-index: 1;\n      background-color: var(--vote-button-bg);\n\n      min-width: ${({ percentage }) =>\n          percentage ? `${percentage}%` : \"120px\"};\n\n      ${({ finsihed, wins }) =>\n          finsihed &&\n          wins &&\n          `\n        display: none;\n      `}\n    }\n\n    ${({ disabled }) =>\n        !disabled &&\n        `\n    &:hover {\n      &:before {\n        min-width: 100%;\n      }\n    }\n  `}\n\n    & > div {\n      z-index: 2;\n    }\n\n    & > div:last-child span {\n      display: block;\n      font-size: 15px;\n      font-weight: 600;\n      line-height: 1.4;\n\n      &:last-child {\n        font-size: 12px;\n        font-weight: 400;\n      }\n    }\n  `;\n\n    const percentages = {\n        yes: Math.round((totalVotes.yes / totalVotesNeeded) * 100) || 0,\n        no: Math.round((totalVotes.no / totalVotesNeeded) * 100) || 0,\n        spam: Math.round((totalVotes.spam / totalVotesNeeded) * 100) || 0\n    };\n\n    const wins = {\n        yes: statusName === \"Approved\",\n        no: statusName === \"Rejected\",\n        spam: statusName === \"Failed\"\n    };\n\n    const finsihed = statusName !== \"In Progress\";\n\n    const voted = {\n        yes: votes[accountId || \";;;\"] === \"Approve\",\n        no: votes[accountId || \";;;\"] === \"Reject\",\n        spam: votes[accountId || \";;;\"] === \"Remove\"\n    };\n\n    const alreadyVoted = voted.yes || voted.no || voted.spam;\n\n    return (\n        <div\n            className=\"d-lg-grid d-flex flex-wrap gap-2 align-items-end\"\n            style={{\n                gridTemplateColumns: isCongressDaoID\n                    ? \"1fr 1fr\"\n                    : \"1fr 1fr 120px\"\n            }}\n        >\n            <div className=\"w-100\">\n                {voted.yes && (\n                    <Widget\n                        src=\"nearui.near/widget/Element.Badge\"\n                        props={{\n                            size: \"sm\",\n                            variant: \"info outline mb-1\",\n                            children: \"You voted\"\n                        }}\n                    />\n                )}\n                <VoteButton\n                    className=\"yes\"\n                    percentage={percentages.yes}\n                    finsihed={finsihed}\n                    wins={wins.yes}\n                    myVote={voted.yes}\n                    onClick={() => handleVote(\"VoteApprove\")}\n                    disabled={alreadyVoted || finsihed || !isAllowedToVote[0]}\n                >\n                    <div>\n                        {wins.yes && (\n                            <span title=\"Yes won\">\n                                <i className=\"bi bi-check-circle\"></i>\n                            </span>\n                        )}\n                        <span>Yes</span>\n                        <i className=\"bi bi-hand-thumbs-up\"></i>\n                    </div>\n\n                    <div>\n                        <span>\n                            {percentages.yes}\n                            <i className=\"bi bi-percent\"></i>\n                        </span>\n                        <span>{totalVotes.yes} Votes</span>\n                    </div>\n                </VoteButton>\n            </div>\n            <div className=\"w-100\">\n                {voted.no && (\n                    <Widget\n                        src=\"nearui.near/widget/Element.Badge\"\n                        props={{\n                            size: \"sm\",\n                            variant: \"info outline mb-1\",\n                            children: \"You voted\"\n                        }}\n                    />\n                )}\n                <VoteButton\n                    className=\"no\"\n                    percentage={percentages.no}\n                    finsihed={finsihed}\n                    wins={wins.no}\n                    myVote={voted.no}\n                    onClick={() => handleVote(\"VoteReject\")}\n                    disabled={alreadyVoted || finsihed || !isAllowedToVote[1]}\n                >\n                    <div className=\"d-flex gap-2 align-items-center\">\n                        {wins.no && (\n                            <span title=\"No won\">\n                                <i className=\"bi bi-check-circle\"></i>\n                            </span>\n                        )}\n                        <span>No</span>\n                        <i className=\"bi bi-hand-thumbs-down\"></i>\n                    </div>\n\n                    <div>\n                        <span>\n                            {percentages.no}\n                            <i className=\"bi bi-percent\"></i>\n                        </span>\n                        <span>{totalVotes.no} Votes</span>\n                    </div>\n                </VoteButton>\n            </div>\n            {!isCongressDaoID && (\n                <div className=\"w-100\">\n                    {voted.spam && (\n                        <Widget\n                            src=\"nearui.near/widget/Element.Badge\"\n                            props={{\n                                size: \"sm\",\n                                variant: \"info outline mb-1\",\n                                children: \"You voted\"\n                            }}\n                        />\n                    )}\n\n                    <VoteButton\n                        className=\"spam\"\n                        percentage={percentages.spam}\n                        finsihed={finsihed}\n                        wins={wins.spam}\n                        myVote={voted.spam}\n                        onClick={() => handleVote(\"VoteRemove\")}\n                        disabled={\n                            alreadyVoted || finsihed || !isAllowedToVote[2]\n                        }\n                    >\n                        <div>\n                            <span>Spam</span>\n                            <i className=\"bi bi-exclamation-circle\"></i>\n                        </div>\n                        <div></div>\n                    </VoteButton>\n                </div>\n            )}\n        </div>\n    );\n}\n\nfunction renderMultiVoteButtons({ daoId, proposal, canVote }) {\n    return (\n        <Widget\n            src=\"astraplusplus.ndctools.near/widget/DAO.Proposals.MultiVote\"\n            props={{\n                daoId,\n                proposal,\n                canVote,\n                view: \"multiVote\",\n                isCongressDaoID\n            }}\n        />\n    );\n}\n\nfunction renderFooter({ totalVotes, votes, comments, daoId, proposal }) {\n    const items = [\n        {\n            title: \"Comments\",\n            icon: \"bi bi-chat-left-text\",\n            count: comments.length || 0,\n            widget: \"Common.Modals.Comments\",\n            props: {\n                daoId,\n                proposal,\n                commentsCount: comments.length,\n                item: {\n                    type: \"dao_proposal_comment\",\n                    path: `${daoId}/proposal/main`,\n                    proposal_id: proposal.id + \"-beta\"\n                }\n            }\n        },\n        {\n            title: \"Voters\",\n            icon: \"bi bi-people\",\n            count: totalVotes.total,\n            widget: \"Common.Modals.Voters\",\n            props: {\n                daoId,\n                votes,\n                totalVotes\n            }\n        },\n        {\n            title: \"Share\",\n            icon: \"bi bi-share\",\n            widget: \"Common.Modals.Share\",\n            props: {\n                url: `https://near.org/astraplusplus.ndctools.near/widget/home?page=dao&tab=proposals&daoId=${daoId}&proposalId=${proposal.id}`,\n                text: \"Explore this new proposal from our DAO! Your support and feedback are essential as we work towards a decentralized future. Review the details and join the discussion here:\"\n            }\n        },\n        {\n            title: \"More details\",\n            icon: \"bi bi-three-dots\",\n            widget: \"Common.Modals.ProposalArguments\",\n            props: {\n                daoId,\n                proposal,\n                showCard: true\n            }\n        }\n    ];\n\n    const renderModal = (item, index) => {\n        return (\n            <Widget\n                src=\"nearui.near/widget/Layout.Modal\"\n                props={{\n                    content: (\n                        <Widget\n                            src={`astraplusplus.ndctools.near/widget/${item.widget}`}\n                            props={item.props}\n                        />\n                    ),\n                    toggle: (\n                        <div\n                            key={index}\n                            className={\n                                \"d-flex gap-2 align-items-center justify-content-center user-select-none\" +\n                                (index !== items.length - 1\n                                    ? \" border-end\"\n                                    : \"\")\n                            }\n                        >\n                            <i\n                                className={item.icon}\n                                style={{ color: \"#4498E0\" }}\n                            ></i>\n                            {item.count && <span>{item.count}</span>}\n                            <span>{item.title}</span>\n                        </div>\n                    ),\n                    toggleContainerProps: {\n                        className: \"flex-fill\"\n                    }\n                }}\n            />\n        );\n    };\n\n    return (\n        <div className=\"d-flex gap-3 justify-content-between mt-2 border-top pt-4 flex-wrap\">\n            {items.map(renderModal)}\n        </div>\n    );\n}\nconst voted = {\n    yes: votes[accountId || \";;;\"] === \"Approve\",\n    no: votes[accountId || \";;;\"] === \"Reject\",\n    spam: votes[accountId || \";;;\"] === \"Remove\"\n};\n\nconst alreadyVoted = voted.yes || voted.no || voted.spam;\n\nconst canVote =\n    isAllowedToVote.every((v) => v) &&\n    statusName === \"In Progress\" &&\n    !alreadyVoted;\n\nconst showMultiVote = multiSelectMode && canVote;\n\nif (multiSelectMode && !canVote) {\n    let reason = \"\";\n\n    if (!isAllowedToVote.every((v) => v)) {\n        reason = \"you don't have permissions to vote\";\n    }\n    if (statusName !== \"In Progress\") {\n        reason = `it's already ${statusName}`;\n    }\n    if (alreadyVoted) {\n        reason = ` you've already voted ${votes[accountId]}`;\n    }\n\n    return (\n        <div>\n            Hiding #{id} because {reason}\n        </div>\n    );\n}\n\nreturn (\n    <Wrapper className=\"ndc-card\" status={statusName}>\n        {renderPermission({ isAllowedToVote: isAllowedToVote.every((v) => v) })}\n        {renderHeader({ typeName, id, daoId, statusName })}\n        {renderData({\n            proposer,\n            category,\n            description,\n            submission_time,\n            totalVotesNeeded\n        })}\n        {!!showMultiVote &&\n            renderMultiVoteButtons({\n                daoId,\n                proposal,\n                canVote\n            })}\n        {!showMultiVote &&\n            renderVoteButtons({\n                totalVotes,\n                statusName,\n                votes,\n                accountId,\n                isAllowedToVote,\n                handleVote: (action) => {\n                    return handleVote({\n                        action,\n                        daoId,\n                        proposalId: proposal.id\n                    });\n                }\n            })}\n        {renderFooter({\n            totalVotes,\n            votes,\n            comments,\n            daoId,\n            proposal\n        })}\n    </Wrapper>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/astraplusplus.ndctools.near/widget/DAO.Proposals.Card.ui", "fact_widget_deployments_id": "f01cc9d0abea2044812b47e71c49ee6f", "inserted_timestamp": "2023-10-12T19:28:45.735Z", "modified_timestamp": "2023-10-12T19:28:45.735Z", "__row_index": 7}