{"tx_hash": "BGiWYxnTVbhD3MhRPtGoASG6mgSwgzQbzZ1F4fGiYk2v", "action_id_social": "F5WyTYxyer9t6jRLZ8g5qQYypzuDCUTaFmQ5JaMXwYu7-0-widget", "block_id": 111601786, "block_timestamp": "2024-01-29T10:55:56.284Z", "signer_id": "astraplusplus.ndctools.near", "widget_name": "CreateDAO.Step2", "source_code": "const {\n  formState,\n  errors,\n  renderFooter,\n  showSteps,\n  isConfigScreen,\n  updateParentState\n} = props;\n\nupdateParentState || (updateParentState = () => {});\n\nconst initialAnswers = {\n  links: formState.links.length > 0 ? formState.links : [\"\"]\n};\n\nState.init({\n  answers: initialAnswers\n});\n\nconst update = (key, value) =>\n  State.update({\n    answers: {\n      ...state.answers,\n      [key]: value\n    }\n  });\n\nconst onAddLink = () => update(\"links\", [...state.answers.links, \"\"]);\n\nconst onLinkChange = (index, value) => {\n  const newLinks = [...state.answers.links];\n  newLinks[index] = value;\n  update(\"links\", newLinks);\n};\n\nconst onRemoveLink = (index) => {\n  const newLinks = [...state.answers.links];\n  newLinks[index] = null;\n  update(\"links\", newLinks);\n};\n\nconst Error = styled.span`\n  display: inline-block;\n  font-style: normal;\n  font-weight: 400;\n  font-size: 0.875em;\n  line-height: 1.25em;\n  color: #ff4d4f;\n  height: 0;\n  overflow: hidden;\n  transition: height 0.3s ease-in-out;\n\n  &.show {\n    height: 1.25em;\n  }\n`;\n\nuseEffect(() => {\n  let timeoutId;\n\n  // Debounced function to update parent state\n  const debouncedUpdate = (value) => {\n    clearTimeout(timeoutId);\n    timeoutId = setTimeout(() => {\n      updateParentState(value);\n    }, 300); // Adjust the debounce delay as needed\n  };\n\n  // Call the debounced function when local value changes\n  debouncedUpdate({\n    ...formState,\n    links: state.answers.links.filter((l) => l !== null && l !== \"\")\n  });\n\n  return () => {\n    // Cleanup on unmount\n    clearTimeout(timeoutId);\n  };\n}, [state.answers]);\n\nreturn (\n  <div className=\"mt-4 ndc-card p-4\">\n    <div className=\"d-flex flex-column gap-2\">\n      <div>\n        <div className=\"d-flex gap-2 justify-content-between\">\n          {showSteps && (\n            <div>\n              <h2 className=\"h5 fw-bold\">\n                <span\n                  className=\"rounded-circle d-inline-flex align-items-center justify-content-center fw-bolder h5 me-2\"\n                  style={{\n                    width: \"48px\",\n                    height: \"48px\",\n                    border: \"1px solid #82E299\"\n                  }}\n                >\n                  2\n                </span>\n                Links and socials{\" \"}\n                <span className=\"text-black-50 fw-light small\">(optional)</span>\n              </h2>\n              <p className=\"text-black-50 fw-light small\">\n                Looking to grow the DAO members? Add links to allow people to\n                learn more about your DAO. You can only add 10 links.\n              </p>\n            </div>\n          )}\n          {isConfigScreen && (\n            <div>\n              Links and socials\n              <span className=\"text-black-50 fw-light small\">\n                (You can only add 10 links)\n              </span>\n            </div>\n          )}\n          <Widget\n            src=\"nearui.near/widget/Input.Button\"\n            props={{\n              children: <i className=\"bi bi-plus-lg\" />,\n              variant: \"icon info outline\",\n              size: isConfigScreen ? \"sm\" : \"lg\",\n              onClick: onAddLink\n            }}\n          />\n        </div>\n      </div>\n\n      {state.answers.links.map((l, i) => (\n        <div\n          className={[\n            \"d-flex align-items-center gap-2\",\n            l === null && \"d-none\"\n          ].join(\" \")}\n        >\n          <Widget\n            src=\"nearui.near/widget/Input.ExperimentalText\"\n            props={{\n              placeholder: \"https://\",\n              size: \"lg\",\n              onChange: (v) => onLinkChange(i, v),\n              inputProps: {\n                name: `link-${i}`,\n                defaultValue: l\n              }\n            }}\n          />\n          <Widget\n            src=\"nearui.near/widget/Input.Button\"\n            props={{\n              children: <i className=\"bi bi-trash\" />,\n              variant: \"icon danger outline\",\n              size: isConfigScreen ? \"sm\" : \"lg\",\n              onClick: () => onRemoveLink(i)\n            }}\n          />\n        </div>\n      ))}\n      {errors.links && (\n        <Error className={errors.links ? \"show\" : \"\"} size={size}>\n          {errors.links}\n        </Error>\n      )}\n    </div>\n\n    {renderFooter({\n      links: state.answers.links.filter((l) => l !== null && l !== \"\")\n    })}\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/astraplusplus.ndctools.near/widget/CreateDAO.Step2", "fact_widget_deployments_id": "b1af738daa629bed7eed8d8eea7dae5b", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 8}