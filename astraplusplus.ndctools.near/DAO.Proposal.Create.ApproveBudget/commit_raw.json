{"tx_hash": "DhuTBt4jZy17PxuKPuDZWtcnsvNLJb4Tt4Z3jNDxhaUm", "action_id_social": "BLt9582HeXFLLLhBNGH6858Ecx4fkUaJ5fvMabP2Gi1W-0-widget", "block_id": 107152045, "block_timestamp": "2023-12-04T17:47:24.024Z", "signer_id": "astraplusplus.ndctools.near", "widget_name": "DAO.Proposal.Create.ApproveBudget", "source_code": "const accountId = props.accountId ?? context.accountId;\nconst daoId = props.daoId;\nconst onClose = props.onClose;\nconst registry = props.registry;\nconst widgetLink = `https://near.org/astraplusplus.ndctools.near/widget/home?tab=proposals&daoId=${daoId}&page=dao`;\n\nif (!accountId) {\n    return \"Please connect your NEAR wallet :)\";\n}\n\nfunction isEmpty(value) {\n    return !value || value === \"\";\n}\n\nfunction isNearAddress(address) {\n    const ACCOUNT_ID_REGEX =\n        /^(([a-z\\d]+[-_])*[a-z\\d]+\\.)*([a-z\\d]+[-_])*[a-z\\d]+$/;\n    return (\n        address.length >= 2 &&\n        address.length <= 64 &&\n        ACCOUNT_ID_REGEX.test(address)\n    );\n}\n\nState.init({\n    prop_id: null, // proposal id\n    error: null,\n    dao: null,\n    attachDeposit: 0,\n    proposalQueue: null,\n    description: null\n});\n\nconst handleProposal = () => {\n    if (isEmpty(state.dao) || !isNearAddress(state.dao)) {\n        State.update({\n            error: \"Please select an house\"\n        });\n        return;\n    }\n\n    if (isEmpty(state.prop_id)) {\n        State.update({\n            error: \"Please enter a proposal ID\"\n        });\n        return;\n    }\n\n    if (isEmpty(state.description)) {\n        State.update({\n            error: \"Please enter a description\"\n        });\n        return;\n    }\n\n    const gas = 20000000000000;\n    const deposit = state.attachDeposit\n        ? Big(state.attachDeposit)\n        : 100000000000000000000000;\n\n    const args = JSON.stringify({\n        description: state.description,\n        kind: {\n            ApproveBudget: { prop_id: parseInt(state.prop_id), dao: state.dao }\n        },\n        caller: accountId\n    });\n\n    Near.call([\n        {\n            contractName: registry,\n            methodName: \"is_human_call\",\n            args: {\n                ctr: daoId,\n                function: \"create_proposal\",\n                payload: args\n            },\n            gas: gas,\n            deposit: deposit\n        },\n        {\n            contractName: \"social.near\",\n            methodName: \"set\",\n            deposit: 100000000000000000000000,\n            args: {\n                data: {\n                    // \"megha19.near\": {\n                    //     index: '{\"notify\":{\"key\":\"megha19.near\",\"value\":{\"type\":\"custom\",\"message\":\"Proposal is created\",\"widget\":\"https://near.org/astraplusplus.ndctools.near/widget/home?tab=proposals&daoId=voting-body-v1.gwg-testing.near&page=dao\",\"params\":{}}}}'\n                    // }\n\n                    \"megha19.near\": {\n                        index: {\n                            notify: JSON.stringify({\n                                key: \"megha19.near\",\n                                value: {\n                                    type: \"mention\",\n                                    item: {\n                                        path: \"https://near.org/astraplusplus.ndctools.near/widget/home?tab=proposals&daoId=voting-body-v1.gwg-testing.near&page=dao\"\n                                    }\n                                }\n                            })\n                        }\n                    }\n                }\n            }\n        }\n    ]);\n\n    // Social.set({\n    //     index: JSON.stringify({\n    //         notify: {\n    //             key: \"megha19.near\",\n    //             value: {\n    //                 type: \"custom\",\n    //                 message: \"Proposal is created\",\n    //                 widget: widgetLink,\n    //                 params: {}\n    //             }\n    //         }\n    //     })\n    // });\n};\n\nconst onChangePropID = (prop_id) => {\n    State.update({\n        prop_id,\n        error: undefined\n    });\n};\n\nconst onChangeDescription = (description) => {\n    State.update({\n        description,\n        error: undefined\n    });\n};\n\nconst onChangeDao = (dao) => {\n    State.update({\n        dao,\n        error: undefined\n    });\n};\n\nconst onChangeQueue = ({ amount, queue }) => {\n    State.update({\n        attachDeposit: amount,\n        proposalQueue: queue\n    });\n};\n\nconst defaultDescription =\n    \"### [Your Title Here]\\n\\n#### Description\\n\\n[Detailed description of what the proposal is about.]\\n\\n#### Why This Proposal?\\n\\n[Explanation of why this proposal is necessary or beneficial.]\\n\\n#### Execution Plan\\n\\n[Description of how the proposal will be implemented.]\\n\\n#### Budget\\n\\n[If applicable, outline the budget required to execute this proposal.]\\n\\n#### Timeline\\n\\n[Proposed timeline for the execution of the proposal.]\";\n\nreturn (\n    <>\n        <Widget\n            src=\"astraplusplus.ndctools.near/widget/DAO.Proposal.Common.ProposalQueue\"\n            props={{\n                daoId: daoId,\n                onUpdate: onChangeQueue,\n                dev: props.dev\n            }}\n        />\n\n        <Widget\n            src=\"astraplusplus.ndctools.near/widget/DAO.Proposal.Common.CongressHouseDropdown\"\n            props={{\n                daoId: daoId,\n                label: \"House\",\n                placeholder: \"Select house account\",\n                onUpdate: onChangeDao\n            }}\n        />\n        <div className=\"mb-3\">\n            <h5>Proposal ID</h5>\n            <input\n                type=\"number\"\n                onChange={(e) => onChangePropID(e.target.value)}\n                min=\"0\"\n            />\n        </div>\n        <div className=\"mb-3\">\n            <h5>Proposal Description</h5>\n            <Widget\n                src=\"sking.near/widget/Common.Inputs.Markdown\"\n                props={{\n                    onChange: (value) => onChangeDescription(value),\n                    height: \"270px\",\n                    initialText: defaultDescription\n                }}\n            />\n        </div>\n        {state.error && <div className=\"text-danger\">{state.error}</div>}\n        <div className=\"ms-auto\">\n            <Widget\n                src=\"sking.near/widget/Common.Button\"\n                props={{\n                    children: \"Create Proposal\",\n                    onClick: handleProposal,\n                    className: \"mt-2\",\n                    variant: \"success\"\n                }}\n            />\n            {onClose && (\n                <Widget\n                    src=\"sking.near/widget/Common.Button\"\n                    props={{\n                        children: \"Close\",\n                        onClick: onClose,\n                        className: \"mt-2\"\n                    }}\n                />\n            )}\n        </div>\n    </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/astraplusplus.ndctools.near/widget/DAO.Proposal.Create.ApproveBudget", "fact_widget_deployments_id": "80d4f51190b1408159b02b7c3fb85389", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 4}