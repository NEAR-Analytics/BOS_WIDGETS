{"tx_hash": "FSpV3ZDmSsTYARDY2R2DgLREn5iy3bT6QMXzQUhJ8ME9", "action_id_social": "JBiFzpMRi4CPtsvj44GEuNhHbtYE1MeG2JGNdriy7tC3-0-widget", "block_id": 103222767, "block_timestamp": "2023-10-12T18:50:49.824Z", "signer_id": "astraplusplus.ndctools.near", "widget_name": "DAO.Proposals.ProposalsPikespeak", "source_code": "const daoId = props.daoId;\n\nconst apiUrl = `https://api.pikespeak.ai/daos/proposals`;\nconst publicApiKey = \"36f2b87a-7ee6-40d8-80b9-5e68e587a5b5\";\nconst resPerPage = 20; // Number of proposals to fetch at a time\n\nconst defaultMultiSelectMode = Storage.privateGet(\"multiSelectMode\");\nconst defaultTableView = Storage.privateGet(\"tableView\");\n\nif (defaultMultiSelectMode === null) return \"\";\nif (defaultTableView === null) return \"\";\n\nconst CoADaoId = \"congress-coa-v1.ndc-gwg.near\";\nconst VotingBodyDaoId = \"\";\nconst TCDaoId = \"congress-tc-v1.ndc-gwg.near\";\nconst HoMDaoId = \"congress-hom-v1.ndc-gwg.near\";\n\nconst isCongressDaoID =\n    daoId === HoMDaoId ||\n    daoId === VotingBodyDaoId ||\n    daoId === CoADaoId ||\n    daoId === TCDaoId;\n\nconst proposalsCount = Near.view(daoId, \"number_of_proposals\");\n\nif (proposalsCount === null) {\n    return;\n}\n\nState.init({\n    daoId,\n    daos: [daoId],\n    page: 0,\n    filters: {\n        proposal_types: [],\n        status: [],\n        time_start: \"\",\n        time_end: \"\"\n    },\n    filtersOpen: false,\n    multiSelectMode: defaultMultiSelectMode ?? false,\n    tableView: defaultTableView ?? false,\n    daoConfig: null\n});\n\n// convert to the data structure required by proposals component (similar to pikespeak API)\nfunction processProposals(proposals) {\n    const parsedResp = [];\n    proposals?.map((item) => {\n        parsedResp.push({\n            dao_id: daoId,\n            last_updated: \"\",\n            proposal: {\n                id: item.id,\n                kind: item.kind,\n                votes: item.votes,\n                status: item.status,\n                proposer: item?.proposer,\n                description: item.description,\n                vote_counts: {},\n                submission_time: item?.submission_time\n            },\n            proposal_type: item?.kind,\n            proposal_id: item.id,\n            proposer: item?.proposer,\n            status: item?.status,\n            submission_time: item?.submission_time,\n            transaction_id: \"\"\n        });\n    });\n\n    return { body: parsedResp };\n}\n\nconst update = (newState) => State.update(newState);\n\nconst forgeUrl = (apiUrl, params) =>\n    apiUrl +\n    Object.keys(params)\n        .sort()\n        .reduce((paramString, p) => paramString + `${p}=${params[p]}&`, \"?\");\n\nfunction fetchCongressDaoProposals() {\n    const data = [];\n    const resp = Near.view(daoId, \"get_proposals\", {\n        from_index:\n            state.page === 0\n                ? proposalsCount\n                : proposalsCount - state.page * resPerPage,\n        limit: resPerPage,\n        reverse: true\n    });\n    if (resp) {\n        data = processProposals(resp);\n    }\n    return data;\n}\nconst res = isCongressDaoID\n    ? fetchCongressDaoProposals()\n    : fetch(\n          forgeUrl(apiUrl, {\n              offset: state.page * resPerPage,\n              limit: resPerPage,\n              daos: state.daos,\n              proposal_types: state.filters.proposal_types,\n              status: state.filters.status,\n              time_start: state.filters.time_start,\n              time_end: state.filters.time_end\n          }),\n          {\n              mode: \"cors\",\n              headers: {\n                  \"x-api-key\": publicApiKey\n              }\n          }\n      );\n\n// filtering for congress daos\nif (isCongressDaoID) {\n    if (state.filters.proposal_types?.length > 0) {\n        res.body = res.body?.filter((item) => {\n            const type =\n                typeof item.proposal_type === \"string\"\n                    ? item.proposal_type\n                    : Object.keys(item.proposal_type)[0];\n            return state.filters.proposal_types.includes(type);\n        });\n    }\n    if (state.filters.status?.length > 0) {\n        res.body = res.body?.filter((item) =>\n            state.filters.status.includes(item.status)\n        );\n    }\n}\n\nfunction hasNextHandler() {\n    const hasNext = false;\n    if (isCongressDaoID) {\n        hasNext =\n            state.page === 0\n                ? proposalsCount > resPerPage\n                : proposalsCount > state.page * resPerPage;\n    } else {\n        hasNext = resPerPage === res.body.length;\n    }\n\n    return hasNext;\n}\n\nfunction getDaoConfig() {\n    if (isCongressDaoID) {\n        const daoConfig = Near.view(daoId, \"config\", {});\n        State.update({ daoConfig });\n    }\n}\n\ngetDaoConfig();\n\nreturn (\n    <>\n        <div\n            className=\"d-flex align-items-center gap-2 flex-wrap-reverse justify-content-end\"\n            id=\"proposals-top\"\n        >\n            <Widget\n                src=\"nearui.near/widget/Input.Text\"\n                props={{\n                    placeholder: \"Search by proposal ID or name\",\n                    disabled: true,\n                    type,\n                    size,\n                    icon: (\n                        <i\n                            className=\"bi bi-search\"\n                            style={{\n                                color: \"#4F46E5\"\n                            }}\n                        />\n                    ),\n                    inputProps: {\n                        title: \"Disabled because no API for searching yet\"\n                    }\n                }}\n            />\n            <Widget\n                src=\"nearui.near/widget/Input.Button\"\n                props={{\n                    children: state.multiSelectMode ? (\n                        <>\n                            Multi-Vote\n                            <i class=\"bi bi-x-lg\"></i>\n                        </>\n                    ) : (\n                        <>\n                            Multi-Vote\n                            <i class=\"bi bi-card-checklist\"></i>\n                        </>\n                    ),\n                    variant: \"info outline\",\n                    size: \"md\",\n                    onClick: () => {\n                        Storage.privateSet(\n                            \"multiSelectMode\",\n                            !state.multiSelectMode\n                        );\n                        State.update({\n                            ...state,\n                            multiSelectMode: !state.multiSelectMode\n                        });\n                    }\n                }}\n            />\n            <Widget\n                src=\"nearui.near/widget/Input.Button\"\n                props={{\n                    children: (\n                        <>\n                            Table View\n                            {state.tableView ? (\n                                <i className=\"bi bi-x-lg\"></i>\n                            ) : (\n                                <i className=\"bi bi-table\"></i>\n                            )}\n                        </>\n                    ),\n                    variant: \"info outline\",\n                    size: \"md\",\n                    onClick: () => {\n                        Storage.privateSet(\"tableView\", !state.tableView);\n                        State.update({\n                            ...state,\n                            tableView: !state.tableView\n                        });\n                    }\n                }}\n            />\n            <Widget\n                src=\"nearui.near/widget/Layout.Modal\"\n                props={{\n                    open: state.filtersOpen,\n                    onOpenChange: (open) => {\n                        State.update({\n                            ...state,\n                            filtersOpen: open\n                        });\n                    },\n                    toggle: (\n                        <Widget\n                            src=\"nearui.near/widget/Input.Button\"\n                            props={{\n                                children: (\n                                    <>\n                                        Filter\n                                        <i className=\"bi bi-funnel\"></i>\n                                    </>\n                                ),\n                                variant: \"info outline\",\n                                size: \"md\"\n                            }}\n                        />\n                    ),\n                    content: (\n                        <Widget\n                            src=\"astraplusplus.ndctools.near/widget/DAO.Proposals.FilterModal\"\n                            props={{\n                                filters: state.filters,\n                                cancel: () => {\n                                    State.update({\n                                        ...state,\n                                        filtersOpen: false\n                                    });\n                                },\n                                applyFilters: (filters) => {\n                                    State.update({\n                                        ...state,\n                                        filters,\n                                        filtersOpen: false\n                                    });\n                                }\n                            }}\n                        />\n                    )\n                }}\n            />\n        </div>\n        {res !== null && !res.body && (\n            <div className=\"alert alert-danger mt-2\" role=\"alert\">\n                Couldn't fetch proposals from API. Please try again later.\n            </div>\n        )}\n\n        <div>\n            {state.tableView ? (\n                <Widget\n                    src=\"astraplusplus.ndctools.near/widget/DAO.Proposals.Table.index\"\n                    props={{\n                        state,\n                        resPerPage,\n                        proposals: res === null ? null : res.body,\n                        isCongressDaoID,\n                        daoConfig: state.daoConfig\n                    }}\n                />\n            ) : (\n                <Widget\n                    src=\"astraplusplus.ndctools.near/widget/DAO.Proposals.CardsList\"\n                    props={{\n                        state,\n                        resPerPage,\n                        proposals: res === null ? null : res.body,\n                        isCongressDaoID,\n                        daoConfig: state.daoConfig\n                    }}\n                />\n            )}\n\n            <div className=\"d-flex justify-content-center my-4\">\n                <Widget\n                    src=\"nearui.near/widget/Navigation.PrevNext\"\n                    props={{\n                        hasPrev: state.page > 0,\n                        hasNext: hasNextHandler(),\n                        onPrev: () => {\n                            update({\n                                page: state.page - 1\n                            });\n                        },\n                        onNext: () => {\n                            update({\n                                page: state.page + 1\n                            });\n                        },\n                        nextHref: `#proposals-top`\n                    }}\n                />\n            </div>\n        </div>\n        {state.multiSelectMode && (\n            <>\n                <div\n                    style={{\n                        height: 180,\n                        width: \"100%\"\n                    }}\n                ></div>\n                <Widget\n                    src=\"astraplusplus.ndctools.near/widget/DAO.Proposals.MultiVote\"\n                    props={{\n                        daoId: state.daoId,\n                        view: \"submit\",\n                        onHideMultiSelect: () => {\n                            State.update({\n                                ...state,\n                                multiSelectMode: false\n                            });\n                            Storage.privateSet(\"multiSelectMode\", false);\n                        },\n                        isCongressDaoID\n                    }}\n                />\n            </>\n        )}\n    </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/astraplusplus.ndctools.near/widget/DAO.Proposals.ProposalsPikespeak", "fact_widget_deployments_id": "011cc278d3ae151485f57bb02fc202ae", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 24}