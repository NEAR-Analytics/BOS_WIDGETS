{"tx_hash": "HSMjwy2rgoTviHUCNYM7Lo1hzD5s9fGUj3PKuq1RnKXK", "action_id_social": "7ezJ2pgDz72kTBixuzjMi1UKFWjVzugyxeJFapQ8tQ6n-0-widget", "block_id": 98897633, "block_timestamp": "2023-08-16T00:06:33.291Z", "signer_id": "astraplusplus.ndctools.near", "widget_name": "DAO.Proposals.ProposalsPikespeak", "source_code": "const daoId = props.daoId;\nconst proposalsPerPage = props.proposalsPerPage ?? 20; // Number of proposals to fetch at a time\n\nconst apiUrl = `https://api.pikespeak.ai/daos/proposals`;\nconst publicApiKey = \"36f2b87a-7ee6-40d8-80b9-5e68e587a5b5\";\nconst resPerPage = 20;\n\nconst defaultMultiSelectMode = Storage.privateGet(\"multiSelectMode\");\nconst defaultTableView = Storage.privateGet(\"tableView\");\n\nif (defaultMultiSelectMode === null) return \"\";\nif (defaultTableView === null) return \"\";\n\nState.init({\n  daoId,\n  daos: [daoId],\n  page: 0,\n  filters: {\n    proposal_types: [],\n    status: [],\n    time_start: \"\",\n    time_end: \"\",\n  },\n  filtersOpen: false,\n  multiSelectMode: defaultMultiSelectMode ?? false,\n  tableView: defaultTableView ?? false,\n});\n\nconst update = (newState) => State.update(newState);\n\nconst forgeUrl = (apiUrl, params) =>\n  apiUrl +\n  Object.keys(params)\n    .sort()\n    .reduce((paramString, p) => paramString + `${p}=${params[p]}&`, \"?\");\n\nconst res = fetch(\n  forgeUrl(apiUrl, {\n    offset: state.page * resPerPage,\n    limit: resPerPage,\n    daos: state.daos,\n    proposal_types: state.filters.proposal_types,\n    status: state.filters.status,\n    time_start: state.filters.time_start,\n    time_end: state.filters.time_end,\n  }),\n  {\n    mode: \"cors\",\n    headers: {\n      \"x-api-key\": publicApiKey,\n    },\n  }\n);\n\nconst preloadNextPage = () => {\n  fetch(\n    forgeUrl(apiUrl, {\n      offset: (state.page + 1) * resPerPage,\n      limit: resPerPage,\n      daos: state.daos,\n      proposal_types: state.filters.proposal_types,\n      status: state.filters.status,\n      time_start: state.filters.time_start,\n      time_end: state.filters.time_end,\n    }),\n    {\n      mode: \"cors\",\n      headers: {\n        \"x-api-key\": publicApiKey,\n      },\n    }\n  );\n};\n\nreturn (\n  <>\n    <div className=\"d-flex align-items-center gap-2\" id=\"proposals-top\">\n      <Widget\n        src=\"nearui.near/widget/Input.Text\"\n        props={{\n          placeholder: \"Search by proposal ID or name\",\n          disabled: true,\n          type,\n          size,\n          icon: (\n            <i\n              className=\"bi bi-search\"\n              style={{\n                color: \"#4F46E5\",\n              }}\n            />\n          ),\n          inputProps: {\n            title: \"Disabled because no API for searching yet\",\n          },\n        }}\n      />\n      <Widget\n        src=\"nearui.near/widget/Input.Button\"\n        props={{\n          children: state.multiSelectMode ? (\n            <>\n              Hide Multi-Select\n              <i class=\"bi bi-x-lg\"></i>\n            </>\n          ) : (\n            <>\n              Show Multi-Select\n              <i class=\"bi bi-card-checklist\"></i>\n            </>\n          ),\n          variant: \"secondary outline\",\n          size: \"md\",\n          onClick: () => {\n            Storage.privateSet(\"multiSelectMode\", !state.multiSelectMode);\n            State.update({\n              ...state,\n              multiSelectMode: !state.multiSelectMode,\n            });\n          },\n        }}\n      />\n      <Widget\n        src=\"nearui.near/widget/Input.Button\"\n        props={{\n          children: (\n            <>\n              Table View {state.tableView ? \"On\" : \"Off\"}\n              <i class=\"bi bi-table\"></i>\n            </>\n          ),\n          variant: \"secondary outline\",\n          size: \"md\",\n          onClick: () => {\n            Storage.privateSet(\"tableView\", !state.tableView);\n            State.update({\n              ...state,\n              tableView: !state.tableView,\n            });\n          },\n        }}\n      />\n      <Widget\n        src=\"nearui.near/widget/Layout.Modal\"\n        props={{\n          open: state.filtersOpen,\n          onOpenChange: (open) => {\n            State.update({\n              ...state,\n              filtersOpen: open,\n            });\n          },\n          toggle: (\n            <Widget\n              src=\"nearui.near/widget/Input.Button\"\n              props={{\n                children: (\n                  <>\n                    Filter\n                    <i className=\"bi bi-funnel\"></i>\n                  </>\n                ),\n                variant: \"secondary outline\",\n                size: \"md\",\n              }}\n            />\n          ),\n          content: (\n            <Widget\n              src=\"astraplusplus.ndctools.near/widget/DAO.Proposals.FilterModal\"\n              props={{\n                filters: state.filters,\n                cancel: () => {\n                  State.update({\n                    ...state,\n                    filtersOpen: false,\n                  });\n                },\n                applyFilters: (filters) => {\n                  State.update({\n                    ...state,\n                    filters,\n                    filtersOpen: false,\n                  });\n                },\n              }}\n            />\n          ),\n        }}\n      />\n    </div>\n    {res !== null && !res.body && (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        Couldn't fetch proposals from API. Please try again later.\n      </div>\n    )}\n\n    <div>\n      {state.tableView ? (\n        <Widget\n          src=\"astraplusplus.ndctools.near/widget/DAO.Proposals.Table\"\n          props={{\n            state,\n            resPerPage,\n            proposals: res === null ? null : res.body,\n          }}\n        />\n      ) : (\n        <Widget\n          src=\"astraplusplus.ndctools.near/widget/DAO.Proposals.CardsList\"\n          props={{\n            state,\n            resPerPage,\n            proposals: res === null ? null : res.body,\n          }}\n        />\n      )}\n\n      <div className=\"d-flex justify-content-center my-4\">\n        <Widget\n          src=\"nearui.near/widget/Navigation.PrevNext\"\n          props={{\n            hasPrev: state.page > 0,\n            hasNext: res && res.body.length == resPerPage,\n            onPrev: () => {\n              update({\n                page: state.page - 1,\n              });\n            },\n            onNext: () => {\n              update({\n                page: state.page + 1,\n              });\n            },\n            nextProps: {\n              onMouseEnter: preloadNextPage,\n            },\n            nextHref: `#proposals-top`,\n          }}\n        />\n      </div>\n    </div>\n\n    {state.multiSelectMode && (\n      <>\n        <div\n          style={{\n            height: 180,\n            width: \"100%\",\n          }}\n        ></div>\n        <Widget\n          src=\"astraplusplus.ndctools.near/widget/DAO.Proposals.MultiVoteSubmit\"\n          props={{\n            daoId: state.daoId,\n            onHideMultiSelect: () => {\n              State.update({\n                ...state,\n                multiSelectMode: false,\n              });\n              Storage.privateSet(\"multiSelectMode\", false);\n            },\n          }}\n        />\n      </>\n    )}\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/astraplusplus.ndctools.near/widget/DAO.Proposals.ProposalsPikespeak", "fact_widget_deployments_id": "d318ff9cdbb03eb314d865c31b6865b6", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 41}