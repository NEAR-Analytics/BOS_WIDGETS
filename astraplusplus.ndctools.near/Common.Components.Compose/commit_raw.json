{"tx_hash": "D6ujGU68TyJtwamzabUiDRCiMv7NDK11yecYNTg5Stka", "action_id_social": "9XkQgQ4QznKHFrCu3BNepNtp9ikiZZx6S8rmGXFM5kme-0-widget", "block_id": 115912669, "block_timestamp": "2024-04-01T10:40:40.975Z", "signer_id": "astraplusplus.ndctools.near", "widget_name": "Common.Components.Compose", "source_code": "const autocompleteEnabled = props.autocompleteEnabled ?? true;\nconst onPreview = props.onPreview;\nconst accountId = props.accountId;\nconst onPostClick = props.onPostClick ?? (() => {});\n\nconst [editorKey, setEditorKey] = useState(0);\nconst memoizedEditorKey = useMemo(() => editorKey, [editorKey]);\n\nconst MemoizedAvatar = useMemo(\n  () => (\n    <Widget\n      src=\"near/widget/AccountProfile\"\n      props={{\n        accountId\n      }}\n    />\n  ),\n  [accountId]\n);\n\nconst Wrapper = styled.div`\n  line-height: normal;\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  padding: 1.5rem;\n\n  .right {\n    flex-grow: 1;\n    min-width: 0;\n  }\n\n  .up-buttons {\n    margin-top: 12px;\n\n    @media screen and (max-width: 768px) {\n      display: flex;\n      align-items: center;\n      gap: 1rem;\n    }\n  }\n\n  div[data-component=\"near/widget/AccountProfile\"] {\n    border-radius: 0px !important;\n  }\n`;\n\nconst embedCss = `\n.rc-md-editor {\n  border-radius: 10px;\n  overflow: auto;\n}\n`;\n\nconst TextareaWrapper = styled.div`\n  display: grid;\n  vertical-align: top;\n  align-items: center;\n  position: relative;\n  align-items: stretch;\n\n  textarea {\n    display: flex;\n    align-items: center;\n    transition: all 0.3s ease;\n  }\n\n  textarea::placeholder {\n    padding-top: 4px;\n    font-size: 20px;\n  }\n\n  textarea:focus::placeholder {\n    font-size: inherit;\n    padding-top: 0px;\n  }\n\n  &::after,\n  textarea,\n  iframe {\n    width: 100%;\n    padding: 8px 0;\n    min-width: 1em;\n    height: unset;\n    min-height: 3em;\n    font: inherit;\n    margin: 0;\n    resize: none;\n    background: none;\n    appearance: none;\n    border: 0px solid #eee;\n    grid-area: 1 / 1;\n    overflow: hidden;\n    outline: none;\n  }\n\n  iframe {\n    padding: 0;\n  }\n\n  textarea:focus,\n  textarea:not(:empty) {\n    border-bottom: 1px solid #eee;\n    min-height: 5em;\n  }\n\n  &::after {\n    content: attr(data-value) \" \";\n    visibility: hidden;\n    white-space: pre-wrap;\n  }\n  &.markdown-editor::after {\n    padding-top: 66px;\n    font-family: monospace;\n    font-size: 14px;\n  }\n`;\n\nconst Actions = styled.div`\n  display: flex;\n  gap: 12px;\n  justify-content: end;\n\n  .commit-post-button,\n  .preview-post-button {\n    background: #59e692;\n    color: #09342e;\n    border-radius: 40px;\n    height: 40px;\n    padding: 0 35px;\n    font-weight: 600;\n    font-size: 14px;\n    border: none;\n    cursor: pointer;\n    transition:\n      background 200ms,\n      opacity 200ms;\n\n    &:hover,\n    &:focus {\n      background: rgb(112 242 164);\n      outline: none;\n    }\n\n    &:disabled {\n      opacity: 0.5;\n      pointer-events: none;\n    }\n  }\n\n  .preview-post-button {\n    color: #11181c;\n    background: #f1f3f5;\n    padding: 0;\n    width: 40px;\n\n    &:hover,\n    &:focus {\n      background: #d7dbde;\n      outline: none;\n    }\n  }\n\n  .upload-image-button {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background: #f1f3f5;\n    color: #11181c;\n    border-radius: 40px;\n    height: 40px;\n    min-width: 40px;\n    font-size: 0;\n    border: none;\n    cursor: pointer;\n    transition:\n      background 200ms,\n      opacity 200ms;\n\n    &::before {\n      font-size: 16px;\n    }\n\n    &:hover,\n    &:focus {\n      background: #d7dbde;\n      outline: none;\n    }\n\n    &:disabled {\n      opacity: 0.5;\n      pointer-events: none;\n    }\n\n    span {\n      margin-left: 12px;\n    }\n  }\n\n  .d-inline-block {\n    display: flex !important;\n    gap: 12px;\n    margin: 0 !important;\n\n    .overflow-hidden {\n      width: 40px !important;\n      height: 40px !important;\n    }\n  }\n`;\n\nconst PreviewWrapper = styled.div`\n  position: relative;\n  padding: var(--padding);\n  padding-bottom: calc(40px + (var(--padding) * 2));\n\n  a {\n    padding-inline: 5px;\n    padding-block: 2px;\n    border-radius: 8px;\n    border: 1px solid #e1e3fd;\n    background: #f5f6fe;\n    color: #626ad1 !important;\n    font-size: 12px;\n    font-style: normal;\n    font-weight: 500;\n    line-height: 20px;\n  }\n\n  li a {\n    margin-right: 2px;\n  }\n\n  a[data-component=\"near/widget/AccountProfile\"] {\n    border: none;\n  }\n\n  ul {\n    line-height: 30px;\n  }\n`;\n\nif (state.image === undefined) {\n  State.init({\n    image: {},\n    text: props.initialText || \"\",\n    mentionsArray: [],\n    mentionInput: \"\"\n  });\n}\n\nfunction autoCompleteAccountId(id) {\n  // to make sure we update the @ at correct index\n  let currentIndex = 0;\n  const updatedDescription = state.text.replace(\n    /(?:^|\\s)(@[^\\s]*)/g,\n    (match) => {\n      if (currentIndex === state.mentionsArray.indexOf(state.mentionInput)) {\n        currentIndex++;\n        return ` @${id}`;\n      } else {\n        currentIndex++;\n        return match;\n      }\n    }\n  );\n\n  State.update((lastKnownState) => ({\n    ...lastKnownState,\n    text: updatedDescription,\n    showAccountAutocomplete: false\n  }));\n  setEditorKey((prev) => prev + 1);\n}\n\nfunction onChange(value) {\n  // since this fn gets called twice on every text update\n  if (value === state.text) {\n    return;\n  }\n  const words = value.split(/\\s+/);\n  const allMentiones = words\n    .filter((word) => word.startsWith(\"@\"))\n    .map((mention) => mention.slice(1));\n  const newMentiones = allMentiones.filter(\n    (item) => !state.mentionsArray.includes(item)\n  );\n  State.update((lastKnownState) => ({\n    ...lastKnownState,\n    text: value,\n    showAccountAutocomplete: newMentiones?.length > 0,\n    mentionsArray: allMentiones,\n    mentionInput: newMentiones?.[0] ?? \"\"\n  }));\n}\n\nconst content = (state.text || state.image.cid || state.image.url) && {\n  type: \"md\",\n  text: state.text,\n  image: state.image.url\n    ? { url: state.image.url }\n    : state.image.cid\n    ? { ipfs_cid: state.image.cid }\n    : undefined\n};\n\nconst clearCompose = () => {\n  State.update({\n    image: {},\n    text: \"\"\n  });\n};\n\nreturn (\n  <Wrapper>\n    {state.showPreview ? (\n      <PreviewWrapper>\n        <Widget\n          src=\"near/widget/v1.Posts.Post\"\n          props={{\n            accountId: accountId,\n            blockHeight: \"now\",\n            content\n          }}\n        />\n      </PreviewWrapper>\n    ) : (\n      <div className=\"d-flex flex-column gap-3\">\n        <div className=\"left\">{MemoizedAvatar}</div>\n        <div className=\"right\">\n          <TextareaWrapper data-value={state.text || \"\"}>\n            <Widget\n              key={`markdown-editor-${memoizedEditorKey}`}\n              src=\"mob.near/widget/MarkdownEditorIframe\"\n              props={{\n                initialText: state.text,\n                onChange,\n                embedCss\n              }}\n            />\n            {autocompleteEnabled && state.showAccountAutocomplete && (\n              <div className=\"pt-1 w-100 overflow-hidden\">\n                <Widget\n                  src=\"devhub.near/widget/devhub.components.molecule.AccountAutocomplete\"\n                  props={{\n                    term: state.mentionInput,\n                    onSelect: autoCompleteAccountId,\n                    onClose: () =>\n                      State.update({ showAccountAutocomplete: false })\n                  }}\n                />\n              </div>\n            )}\n          </TextareaWrapper>\n        </div>\n      </div>\n    )}\n    <Actions>\n      {!state.showPreview && (\n        <IpfsImageUpload\n          image={state.image}\n          className=\"upload-image-button bi bi-image\"\n        />\n      )}\n\n      <button\n        type=\"button\"\n        disabled={!state.text}\n        className=\"preview-post-button\"\n        title={state.showPreview ? \"Edit Post\" : \"Preview Post\"}\n        onClick={() => State.update({ showPreview: !state.showPreview })}\n      >\n        {state.showPreview ? (\n          <i className=\"bi bi-pencil\" />\n        ) : (\n          <i className=\"bi bi-eye-fill\" />\n        )}\n      </button>\n\n      <button\n        disabled={!state.text}\n        onClick={() => onPostClick(content)}\n        className=\"commit-post-button\"\n      >\n        Post\n      </button>\n    </Actions>\n  </Wrapper>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/astraplusplus.ndctools.near/widget/Common.Components.Compose", "fact_widget_deployments_id": "6aeb729d5d17dfe3a59cdabdadbb57e1", "inserted_timestamp": "2024-04-01T12:33:40.493Z", "modified_timestamp": "2024-04-01T12:33:40.493Z", "__row_index": 0}