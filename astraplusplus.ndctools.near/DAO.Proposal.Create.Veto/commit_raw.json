{"tx_hash": "DDkmecmikk3EwdPMsouUj7tDGtM8rn76x7K7f5xd9ukp", "action_id_social": "5sZQTq1uKkbcrSB6kKWfReqvp3DFjUXr2BcVMTWw1wGb-0-widget", "block_id": 105206997, "block_timestamp": "2023-11-08T07:57:43.057Z", "signer_id": "astraplusplus.ndctools.near", "widget_name": "DAO.Proposal.Create.Veto", "source_code": "const accountId = props.accountId ?? context.accountId;\nconst daoId = props.daoId;\nconst isHookCall = props.isHookCall;\nconst onClose = props.onClose;\nconst registry = props.registry;\nconst HoMDaoId = props.dev\n    ? \"hom.gwg-testing.near\"\n    : \"congress-hom-v1.ndc-gwg.near\";\nconst house = props.house;\nconst proposalID = props.proposalID;\n\nif (!accountId) {\n    return \"Please connect your NEAR wallet :)\";\n}\n\nfunction isEmpty(value) {\n    return !value || value === \"\";\n}\n\nfunction isNearAddress(address) {\n    const ACCOUNT_ID_REGEX =\n        /^(([a-z\\d]+[-_])*[a-z\\d]+\\.)*([a-z\\d]+[-_])*[a-z\\d]+$/;\n    return (\n        address.length >= 2 &&\n        address.length <= 64 &&\n        ACCOUNT_ID_REGEX.test(address)\n    );\n}\n\nState.init({\n    prop_id: proposalID, // proposal id\n    dao: house,\n    error: null,\n    attachDeposit: 0,\n    proposalQueue: null,\n    description: null\n});\n\nconst handleProposal = () => {\n    let error;\n    let args;\n    const gas = 20000000000000;\n    const deposit = state.attachDeposit\n        ? Big(state.attachDeposit)\n        : 100000000000000000000000;\n\n    if (!isHookCall) {\n        if (isEmpty(state.dao) || !isNearAddress(state.dao))\n            error = \"Please enter a valid DAO ID\";\n        if (isEmpty(state.prop_id)) error = \"Please enter a proposal ID\";\n        if (isEmpty(state.description)) error = \"Please enter a description\";\n        if (!state.proposalQueue) error = \"Please select proposal queue\";\n\n        if (error) {\n            State.update({ error });\n            return;\n        }\n    }\n\n    if (isHookCall) {\n        const fc_args = Buffer.from(\n            JSON.stringify({ id: parseInt(state.prop_id) }),\n            \"utf-8\"\n        ).toString(\"base64\");\n\n        args = {\n            kind: {\n                FunctionCall: {\n                    receiver_id: HoMDaoId,\n                    actions: [\n                        {\n                            method_name: \"veto_hook\",\n                            args: fc_args,\n                            deposit: \"100000000000000000000000\",\n                            gas: \"300000000000000\"\n                        }\n                    ]\n                }\n            },\n            description: state.description\n        };\n        Near.call([\n            {\n                contractName: daoId,\n                methodName: \"create_proposal\",\n                args: args,\n                deposit: 100000000000000000000000,\n                gas: 20000000000000\n            }\n        ]);\n    } else {\n        args = JSON.stringify({\n            description: state.description,\n            kind: {\n                Veto: {\n                    prop_id: parseInt(state.prop_id),\n                    dao: state.dao\n                }\n            },\n            caller: accountId\n        });\n\n        Near.call([\n            {\n                contractName: registry,\n                methodName: \"is_human_call\",\n                args: {\n                    ctr: daoId,\n                    function: \"create_proposal\",\n                    payload: args\n                },\n                gas: gas,\n                deposit: deposit\n            }\n        ]);\n    }\n};\n\nconst onChangePropID = (prop_id) => {\n    State.update({\n        prop_id,\n        error: undefined\n    });\n};\n\nconst onChangeDao = (dao) => {\n    State.update({\n        dao,\n        error: undefined\n    });\n};\n\nconst onChangeDescription = (description) => {\n    State.update({\n        description,\n        error: undefined\n    });\n};\n\nconst onChangeQueue = ({ amount, queue }) => {\n    State.update({\n        attachDeposit: amount,\n        proposalQueue: queue\n    });\n};\n\nconst defaultDescription =\n    \"### [Your Title Here]\\n\\n#### Description\\n\\n[Detailed description of what the proposal is about.]\\n\\n#### Why This Proposal?\\n\\n[Explanation of why this proposal is necessary or beneficial.]\\n\\n#### Execution Plan\\n\\n[Description of how the proposal will be implemented.]\\n\\n#### Budget\\n\\n[If applicable, outline the budget required to execute this proposal.]\\n\\n#### Timeline\\n\\n[Proposed timeline for the execution of the proposal.]\";\n\nreturn (\n    <>\n        {!props.isHookCall && (\n            <>\n                <Widget\n                    src=\"astraplusplus.ndctools.near/widget/DAO.Proposal.Common.ProposalQueue\"\n                    props={{\n                        daoId: daoId,\n                        onUpdate: onChangeQueue,\n                        dev: props.dev\n                    }}\n                />\n\n                <Widget\n                    src=\"astraplusplus.ndctools.near/widget/DAO.Proposal.Common.CongressHouseDropdown\"\n                    props={{\n                        daoId: daoId,\n                        house: state.dao,\n                        label: \"House\",\n                        placeholder: \"Select house account\",\n                        onUpdate: onChangeDao,\n                        dev: props.dev\n                    }}\n                />\n            </>\n        )}\n        <div className=\"mb-3\">\n            <h5>Proposal ID</h5>\n            <input\n                type=\"number\"\n                value={state.prop_id}\n                onChange={(e) => onChangePropID(e.target.value)}\n                min=\"0\"\n            />\n        </div>\n        <div className=\"mb-3\">\n            <h5>Proposal Description</h5>\n            <Widget\n                src=\"sking.near/widget/Common.Inputs.Markdown\"\n                props={{\n                    onChange: (value) => onChangeDescription(value),\n                    height: \"270px\",\n                    initialText: defaultDescription\n                }}\n            />\n        </div>\n        {state.error && <div className=\"text-danger\">{state.error}</div>}\n        <div className=\"ms-auto\">\n            <Widget\n                src=\"sking.near/widget/Common.Button\"\n                props={{\n                    children: \"Create Proposal\",\n                    onClick: handleProposal,\n                    className: \"mt-2\",\n                    variant: \"success\"\n                }}\n            />\n            {onClose && (\n                <Widget\n                    src=\"sking.near/widget/Common.Button\"\n                    props={{\n                        children: \"Close\",\n                        onClick: onClose,\n                        className: \"mt-2\"\n                    }}\n                />\n            )}\n        </div>\n    </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/astraplusplus.ndctools.near/widget/DAO.Proposal.Create.Veto", "fact_widget_deployments_id": "e441b6210509806d6c1eb5bab0ee1955", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 9}