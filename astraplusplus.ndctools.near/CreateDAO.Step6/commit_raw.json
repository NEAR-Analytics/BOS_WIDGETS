{"tx_hash": "Hjhifz6WqcNbsTJkeVpDjMHcuPxCnyNL6YCKfPwBShh6", "action_id_social": "C74LgDuwmEBrPDSsGJzf2TC9MMb1CgL3n5nkPbq8w7wB-0-widget", "block_id": 116193432, "block_timestamp": "2024-04-05T17:44:34.466Z", "signer_id": "astraplusplus.ndctools.near", "widget_name": "CreateDAO.Step6", "source_code": "const {\n  formState,\n  errors,\n  renderFooter,\n  showSteps,\n  updateParentState,\n  isConfigScreen\n} = props;\nconst { accountId } = context;\n\nupdateParentState || (updateParentState = () => {});\n\nconst initialAnswers = {\n  policy: formState.policy\n};\nconst groups = [...initialAnswers.policy.roles.map((role) => role.name)];\n\nState.init({\n  answers: initialAnswers,\n  selectedGroup: null,\n  voteWeight: 50,\n  members: []\n});\n\nfunction onGroupChange(name) {\n  const item = initialAnswers.policy.roles.find((i) => i.name === name);\n  const voteWeight = item?.vote_policy?.add_bounty?.threshold ?? [1, 2];\n  State.update({\n    selectedGroup: name,\n    voteWeight: parseInt((voteWeight?.[0] / voteWeight?.[1]) * 100),\n    members: item.kind\n  });\n}\n\nconst proposalKinds = {\n  ChangeDAOConfig: {\n    title: \"Change DAO Config\",\n    key: \"config\"\n  },\n  ChangeDAOPolicy: {\n    title: \"Change DAO Policy\",\n    key: \"policy\"\n  },\n  Bounty: {\n    title: \"Bounty\",\n    key: \"add_bounty\"\n  },\n  BountyDone: {\n    title: \"Bounty Done\",\n    key: \"bounty_done\"\n  },\n  Transfer: {\n    title: \"Transfer\",\n    key: \"transfer\"\n  },\n  Polls: {\n    title: \"Polls\",\n    key: \"vote\"\n  },\n  RemoveMembers: {\n    title: \"Remove Members\",\n    key: \"remove_member_from_role\"\n  },\n  AddMembers: {\n    title: \"Add Members\",\n    key: \"add_member_to_role\"\n  },\n  FunctionCall: {\n    title: \"Function Call\",\n    key: \"call\"\n  },\n  UpgradeSelf: {\n    title: \"Upgrade Self\",\n    key: \"upgrade_self\"\n  },\n  UpgradeRemote: {\n    title: \"Upgrade Remote\",\n    key: \"upgrade_remote\"\n  },\n  SetVoteToken: {\n    title: \"Set Vote Token\",\n    key: \"set_vote_token\"\n  }\n};\n\nif (!state.selectedGroup) {\n  onGroupChange(groups[0]);\n}\n\nfunction onVoteWeightChange(weight) {\n  const value = {\n    quorum: \"0\",\n    threshold: [parseInt(weight), 100],\n    weight_kind: \"RoleWeight\"\n  };\n  const votePolicy = {};\n  Object.values(proposalKinds).map((i) => (votePolicy[i.key] = value));\n  if (Array.isArray(initialAnswers?.policy?.roles)) {\n    const updatedState = initialAnswers.policy.roles.map((i) => {\n      if (i.name === state.selectedGroup) {\n        return { ...i, vote_policy: votePolicy };\n      } else return i;\n    });\n    const updatedPolicy = {\n      policy: { ...initialAnswers.policy, roles: updatedState }\n    };\n    updateParentState(updatedPolicy);\n    State.update({\n      voteWeight: weight,\n      answers: updatedPolicy\n    });\n  }\n}\n\nconst Wrapper = styled.div`\n  max-height: 70vh;\n  overflow-y: scroll;\n  .selected-group {\n    background-color: #eaf3fb;\n    border-left: 3px solid #4498e0;\n  }\n\n  .pointer {\n    cursor: pointer;\n  }\n\n  .text-md {\n    font-size: 20px;\n  }\n\n  .border-right {\n    border-right: 1px solid #f0efe7;\n    overflow: auto;\n  }\n\n  .right-shadow {\n    box-shadow: 5px 0px 5px rgba(0, 0, 0, 0.1);\n  }\n\n  .text-sm {\n    font-size: 13px;\n  }\n\n  .flex-1 {\n    flex: 1;\n  }\n\n  .flex-2 {\n    flex: 1.5;\n  }\n`;\n\nreturn (\n  <Wrapper className={\"mt-4 ndc-card\" + (isConfigScreen ? \" \" : \" p-4\")}>\n    {showSteps && (\n      <h2 className=\"h5 fw-bold\">\n        <span\n          className=\"rounded-circle d-inline-flex align-items-center justify-content-center fw-bolder h5 me-2\"\n          style={{\n            width: \"48px\",\n            height: \"48px\",\n            border: \"1px solid #82E299\"\n          }}\n        >\n          6\n        </span>\n        Quorum\n      </h2>\n    )}\n    <div className=\"d-flex flex-wrap\">\n      <div\n        className=\"p-4 right-shadow border-right flex-1\"\n        style={{ minWidth: \"250px\" }}\n      >\n        <div className=\"d-flex flex-column gap-3\">\n          <div className=\"d-flex gap-3 align-items-center\">\n            <i class=\"bi bi-people-fill\"></i>\n            <div className=\"text-md\">Groups</div>\n            <Widget\n              src=\"nearui.near/widget/Element.Badge\"\n              props={{\n                children: initialAnswers?.policy?.roles?.length ?? 1,\n                variant: `disabled round`,\n                size: \"md\"\n              }}\n            />\n          </div>\n          <div className=\"d-flex flex-column gap-2\">\n            {groups.map((i) => (\n              <div\n                onClick={() => onGroupChange(i)}\n                className={\n                  \"p-2 rounded-2 pointer \" +\n                  (state.selectedGroup === i ? \"selected-group\" : \"\")\n                }\n              >\n                {i}\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n      <div\n        className=\"d-flex flex-column gap-3 p-4 border-right flex-2\"\n        style={{ minWidth: \"250px\" }}\n      >\n        <div className=\"d-flex gap-3 align-items-center\">\n          <i class=\"bi bi-people-fill\"></i>\n          <div className=\"text-md\">Members</div>\n          <Widget\n            src=\"nearui.near/widget/Element.Badge\"\n            props={{\n              children: state.members?.Group?.length ?? 1,\n              variant: `disabled round`,\n              size: \"md\"\n            }}\n          />\n        </div>\n        <div className=\"text-truncate w-100\">\n          {state.members.Group && Array.isArray(state.members.Group)\n            ? state.members.Group.map((i) => (\n                <div className=\"border-bottom p-2\">{i}</div>\n              ))\n            : state.members}\n        </div>\n      </div>\n      <div\n        className=\"d-flex flex-column gap-2 p-4 flex-1\"\n        style={{ minWidth: \"250px\" }}\n      >\n        <div className=\"d-flex gap-3 align-items-center\">\n          <img\n            src=\"https://ipfs.near.social/ipfs/bafkreid6uui42li7elyzxyogbm2lutj3arc3p6gmefc5qqsyerejjph4qa\"\n            height={20}\n          />\n          <div className=\"text-md\">Voting Policy</div>\n        </div>\n        <div className=\"text-muted text-sm\">\n          What is the quorum required for the decision of this group\n        </div>\n        <div>\n          <div className=\"d-flex justify-content-between\">\n            <label>Group quorum %</label>\n            <Widget\n              src=\"nearui.near/widget/Element.Badge\"\n              props={{\n                children: state.voteWeight,\n                variant: `info round`,\n                size: \"md\"\n              }}\n            />\n          </div>\n          <div>\n            <input\n              type=\"range\"\n              min={0}\n              max={100}\n              value={state.voteWeight}\n              onPointerUp={(e) => {\n                onVoteWeightChange(e.target.value);\n              }}\n              onChange={(e) => {\n                onVoteWeightChange(e.target.value);\n              }}\n              className=\"form-range\"\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n    {renderFooter(state.answers)}\n  </Wrapper>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/astraplusplus.ndctools.near/widget/CreateDAO.Step6", "fact_widget_deployments_id": "3fe340c61847988c6763602fd565dd42", "inserted_timestamp": "2024-04-05T19:41:13.230Z", "modified_timestamp": "2024-04-05T19:41:13.230Z", "__row_index": 0}