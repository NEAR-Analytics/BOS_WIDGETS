{"tx_hash": "6ouhdve1QjtyXJQxEFeHwQw3vKpgLvP6SQhGShu5QhGV", "action_id_social": "5ki3yHSnRevLk9YEwjUvo8XGnS3AZdniL1YBygibDFoi-0-widget", "block_id": 103127566, "block_timestamp": "2023-10-11T12:43:49.136Z", "signer_id": "astraplusplus.ndctools.near", "widget_name": "DAO.Proposal.Create.FundingRequest", "source_code": "const accountId = props.accountId ?? context.accountId;\nconst daoId = props.daoId ?? \"multi.sputnik-dao.near\";\nconst onClose = props.onClose;\nconst proposalType = props.proposalType;\n\nif (!accountId) {\n    return \"Please connect your NEAR wallet :)\";\n}\n\nState.init({\n    description: null,\n    fundingAmt: null,\n    error: null\n});\n\nconst handleProposal = () => {\n    if (!state.description) {\n        State.update({\n            error: \"Please enter a description\"\n        });\n        return;\n    }\n    if (!state.fundingAmt) {\n        State.update({\n            error: \"Please enter an amount\"\n        });\n        return;\n    }\n\n    const gas = 20000000000000;\n    const deposit = 100000000000000000000000;\n    const amount = Big(state.fundingAmt).mul(Big(10).pow(24)).toFixed();\n    Near.call([\n        {\n            contractName: daoId,\n            methodName: \"create_proposal\",\n            args: {\n                description: state.description,\n                kind: { [proposalType]: amount }\n            },\n            gas: gas,\n            deposit: deposit\n        }\n    ]);\n};\n\nconst onChangeDescription = (description) => {\n    State.update({\n        description,\n        error: undefined\n    });\n};\n\nconst onChangeAmount = (amt) => {\n    State.update({\n        fundingAmt: amt,\n        error: undefined\n    });\n};\n\nconst defaultDescription =\n    \"# [Your Title Here]\\n\\n## Description\\n\\n[Detailed description of what the proposal is about.]\\n\\n## Why This Proposal?\\n\\n[Explanation of why this proposal is necessary or beneficial.]\\n\\n## Execution Plan\\n\\n[Description of how the proposal will be implemented.]\\n\\n## Budget\\n\\n[If applicable, outline the budget required to execute this proposal.]\\n\\n## Timeline\\n\\n[Proposed timeline for the execution of the proposal.]\";\n\nreturn (\n    <>\n        <div className=\"mb-3\">\n            <h5>Amount (NEAR)</h5>\n            <input\n                type=\"number\"\n                onChange={(e) => onChangeAmount(e.target.value)}\n                min=\"0\"\n            />\n        </div>\n        <div className=\"mb-3\">\n            <h5>Proposal Description</h5>\n            <Widget\n                src=\"sking.near/widget/Common.Inputs.Markdown\"\n                props={{\n                    onChange: (value) => onChangeDescription(value),\n                    height: \"270px\",\n                    initialText: defaultDescription\n                }}\n            />\n        </div>\n        {state.error && <div className=\"text-danger\">{state.error}</div>}\n        <div className=\"ms-auto\">\n            <Widget\n                src=\"sking.near/widget/Common.Button\"\n                props={{\n                    children: \"Create Proposal\",\n                    onClick: handleProposal,\n                    className: \"mt-2\",\n                    variant: \"success\"\n                }}\n            />\n            {onClose && (\n                <Widget\n                    src=\"sking.near/widget/Common.Button\"\n                    props={{\n                        children: \"Close\",\n                        onClick: onClose,\n                        className: \"mt-2\"\n                    }}\n                />\n            )}\n        </div>\n    </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/astraplusplus.ndctools.near/widget/DAO.Proposal.Create.FundingRequest", "fact_widget_deployments_id": "e88f4bc9ae0f54b4c61cc573c532c8e4", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 1}