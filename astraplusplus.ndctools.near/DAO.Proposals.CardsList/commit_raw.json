{"tx_hash": "5F8s6izbBCUpSvME5SJAZcLqmPEvX7qV3X58NSwJKzAa", "action_id_social": "EzzAw6iLQasfbfCqcvUGi6qqxa4pJc2WYC9XaJ9HLZVY-0-widget", "block_id": 98889351, "block_timestamp": "2023-08-15T21:33:08.218Z", "signer_id": "astraplusplus.ndctools.near", "widget_name": "DAO.Proposals.CardsList", "source_code": "const { proposals, resPerPage, state, update } = props;\n\nreturn (\n  <div\n    style={{\n      minHeight: 650 * (proposals?.length ?? resPerPage),\n    }}\n  >\n    {proposals === null && (\n      <>\n        {new Array(resPerPage).fill(0).map((_, i) => (\n          <Widget src=\"astraplusplus.ndctools.near/widget/DAO.Proposals.Card.skeleton\" />\n        ))}\n      </>\n    )}\n    {proposals !== null &&\n      proposals.map(({ proposal, proposal_type, proposal_id }, i) => {\n        proposal.kind = {\n          [proposal_type]: {\n            ...proposal.kind,\n          },\n        };\n        proposal.id = proposal_id;\n        if (proposal.status === \"Removed\") return <></>;\n        Object.keys(proposal.vote_counts).forEach((k) => {\n          if (typeof proposal.vote_counts[k] == \"string\") {\n            proposal.vote_counts[k] = proposal.vote_counts[k]\n              .match(/.{1,2}/g)\n              .map((x) => parseInt(x));\n          }\n        });\n        return (\n          <Widget\n            key={i}\n            src={\"astraplusplus.ndctools.near/widget/DAO.Proposals.Card.index\"}\n            props={{\n              daoId: state.daoId,\n              proposalString: JSON.stringify(proposal),\n              multiSelectMode: state.multiSelectMode,\n            }}\n          />\n        );\n      })}\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/astraplusplus.ndctools.near/widget/DAO.Proposals.CardsList", "fact_widget_deployments_id": "10cef47448ed3c4c20922957db6428bc", "inserted_timestamp": "2023-08-15T23:30:53.027Z", "modified_timestamp": "2023-08-15T23:30:53.027Z", "__row_index": 0}