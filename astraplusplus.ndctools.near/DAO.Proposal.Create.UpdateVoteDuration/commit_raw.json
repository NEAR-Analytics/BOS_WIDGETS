{"tx_hash": "6TtxHuwr5dDRXb83SefXA41wfFUp9Uv4RV4XAT4nrrTw", "action_id_social": "BgJ4rsnqQRML5FGp36ihFx3g9WYERNS76nwgKqTuJXck-0-widget", "block_id": 105164315, "block_timestamp": "2023-11-07T18:11:21.215Z", "signer_id": "astraplusplus.ndctools.near", "widget_name": "DAO.Proposal.Create.UpdateVoteDuration", "source_code": "const accountId = props.accountId ?? context.accountId;\nconst daoId = props.daoId;\nconst onClose = props.onClose;\nconst registry = props.registry;\n\nif (!accountId) {\n    return \"Please connect your NEAR wallet :)\";\n}\n\nfunction convertHoursToMilliseconds(hours) {\n    return hours * 60 * 60 * 1000;\n}\n\nState.init({\n    pre_vote_duration: 0,\n    vote_duration: 0,\n    error: null,\n    attachDeposit: 0,\n    proposalQueue: null,\n    description: null\n});\n\nfunction isEmpty(value) {\n    return !value || value === \"\";\n}\n\nconst handleProposal = () => {\n    if (isEmpty(state.pre_vote_duration)) {\n        State.update({\n            error: \"Please specify pre vote duration\"\n        });\n        return;\n    }\n    if (isEmpty(state.vote_duration)) {\n        State.update({\n            error: \"Please specify vote duration\"\n        });\n        return;\n    }\n\n    if (isEmpty(state.description)) {\n        State.update({\n            error: \"Please enter a description\"\n        });\n        return;\n    }\n\n    if (isEmpty(state.proposalQueue)) {\n        State.update({\n            error: \"Please select proposal queue\"\n        });\n        return;\n    }\n\n    const gas = 20000000000000;\n    const deposit = state.attachDeposit\n        ? Big(state.attachDeposit)\n        : 100000000000000000000000;\n\n    const args = JSON.stringify({\n        description: state.description,\n        kind: {\n            UpdateVoteDuration: {\n                vote_duration: convertHoursToMilliseconds(state.vote_duration),\n                pre_vote_duration: convertHoursToMilliseconds(\n                    state.pre_vote_duration\n                )\n            }\n        },\n        caller: accountId\n    });\n\n    Near.call([\n        {\n            contractName: registry,\n            methodName: \"is_human_call\",\n            args: {\n                ctr: daoId,\n                function: \"create_proposal\",\n                payload: args\n            },\n            gas: gas,\n            deposit: deposit\n        }\n    ]);\n};\n\nconst onChangePreVoteDuration = (pre_vote_duration) => {\n    State.update({\n        pre_vote_duration,\n        error: undefined\n    });\n};\n\nconst onChangeVoteDuration = (vote_duration) => {\n    State.update({\n        vote_duration,\n        error: undefined\n    });\n};\n\nconst onChangeDescription = (description) => {\n    State.update({\n        description,\n        error: undefined\n    });\n};\n\nconst onChangeQueue = ({ amount, queue }) => {\n    State.update({\n        attachDeposit: amount,\n        proposalQueue: queue,\n        error: undefined\n    });\n};\n\nconst defaultDescription =\n    \"### [Your Title Here]\\n\\n#### Description\\n\\n[Detailed description of what the proposal is about.]\\n\\n#### Why This Proposal?\\n\\n[Explanation of why this proposal is necessary or beneficial.]\\n\\n#### Execution Plan\\n\\n[Description of how the proposal will be implemented.]\\n\\n#### Budget\\n\\n[If applicable, outline the budget required to execute this proposal.]\\n\\n#### Timeline\\n\\n[Proposed timeline for the execution of the proposal.]\";\n\nreturn (\n    <>\n        <Widget\n            src=\"astraplusplus.ndctools.near/widget/DAO.Proposal.Common.ProposalQueue\"\n            props={{\n                daoId: daoId,\n                onUpdate: onChangeQueue,\n                dev: props.dev\n            }}\n        />\n\n        <div className=\"mb-3\">\n            <h5>Pre Vote Duration (in hours)</h5>\n            <input\n                type=\"number\"\n                onChange={(e) => onChangePreVoteDuration(e.target.value)}\n            />\n        </div>\n        <div className=\"mb-3\">\n            <h5>Vote Duration (in hours)</h5>\n            <input\n                type=\"number\"\n                onChange={(e) => onChangeVoteDuration(e.target.value)}\n            />\n        </div>\n        <div className=\"mb-3\">\n            <h5>Proposal Description</h5>\n            <Widget\n                src=\"sking.near/widget/Common.Inputs.Markdown\"\n                props={{\n                    onChange: (value) => onChangeDescription(value),\n                    height: \"270px\",\n                    initialText: defaultDescription\n                }}\n            />\n        </div>\n        {state.error && <div className=\"text-danger\">{state.error}</div>}\n        <div className=\"ms-auto\">\n            <Widget\n                src=\"sking.near/widget/Common.Button\"\n                props={{\n                    children: \"Create Proposal\",\n                    onClick: handleProposal,\n                    className: \"mt-2\",\n                    variant: \"success\"\n                }}\n            />\n            {onClose && (\n                <Widget\n                    src=\"sking.near/widget/Common.Button\"\n                    props={{\n                        children: \"Close\",\n                        onClick: onClose,\n                        className: \"mt-2\"\n                    }}\n                />\n            )}\n        </div>\n    </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/astraplusplus.ndctools.near/widget/DAO.Proposal.Create.UpdateVoteDuration", "fact_widget_deployments_id": "9782092e7312e679f9f3fea7e3033f26", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 2}