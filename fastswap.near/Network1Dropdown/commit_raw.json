{"tx_hash": "6Dht69sqK5hpuizWQdSGcFAbuKJ8tMGkhdcxHBLWMV3", "action_id_social": "G3BXCtS4LJXtwLnumW9RLbQ7f2FQEG74hi9Tru7Med6p-0-widget", "block_id": 106014838, "block_timestamp": "2023-11-18T23:48:27.227Z", "signer_id": "fastswap.near", "widget_name": "Network1Dropdown", "source_code": "let { trigger, header, subHeader, items, receiver, ...rootProps } = props;\n\nconst Root = styled(\"DropdownMenu.Root\")``;\n\nconst TriggerWrapper = styled.span`\n  display: inline-block;\n`;\n\nconst Content = styled(\"DropdownMenu.Content\")`\n  min-width: 220px;\n  background-color: white;\n  border-radius: 6px;\n  padding: 2px 0;\n  box-shadow: 0px 4px 8px 0px var(--blackA3), 0px 0px 0px 1px var(--blackA3);\n  animation-duration: 400ms;\n  animation-timing-function: cubic-bezier(0.16, 1, 0.3, 1);\n  will-change: transform, opacity;\n\n  &[data-side=\"bottom\"] {\n    animation-name: slideUpAndFade;\n  }\n\n  @keyframes slideUpAndFade {\n    from {\n      opacity: 0;\n      transform: translateY(2px);\n    }\n    to {\n      opacity: 1;\n      transform: translateY(0);\n    }\n  }\n\n  a {\n    all: unset;\n  }\n`;\n\nconst MenuItem = styled(\"DropdownMenu.Item\")`\n  font: var(--text-s);\n  color: var(--sand12);\n  border-radius: 4px;\n  display: flex;\n  align-items: center;\n  height: 36px;\n  padding: 8px 12px;\n  margin: 2px 4px;\n  position: relative;\n  user-select: none;\n  outline: none;\n  cursor: pointer;\n  gap: 8px;\n\n  &[data-highlighted] {\n    background-color: var(--sand3);\n    color: var(--sand12);\n  }\n\n  &[data-disabled] {\n    pointer-events: none;\n    color: var(--sand11);\n  }\n\n  a {\n    all: unset;\n    cursor: inherit;\n  }\n`;\n\nconst SubMenu = styled(\"DropdownMenu.Sub\")``;\n\nconst SubMenuTrigger = styled(\"DropdownMenu.SubTrigger\")`\n  font: var(--text-s);\n  color: var(--sand12);\n  border-radius: 4px;\n  display: flex;\n  align-items: center;\n  height: 36px;\n  padding: 8px 12px;\n  margin: 4px;\n  position: relative;\n  user-select: none;\n  outline: none;\n  gap: 8px;\n  cursor: pointer;\n\n  &[data-state=\"open\"] {\n    background-color: var(--sand4);\n    color: var(--sand12);\n  }\n\n  &[data-highlighted] {\n    background-color: var(--sand3);\n    color: var(--sand12);\n  }\n\n  &[data-disabled] {\n    pointer-events: none;\n    color: var(--sand11);\n  }\n`;\n\nconst SubMenuContent = styled(\"DropdownMenu.SubContent\")`\n  min-width: 220px;\n  background-color: white;\n  border-radius: 6px;\n  padding: 4px 0;\n  box-shadow: 0px 4px 8px 0px var(--blackA3), 0px 0px 0px 1px var(--blackA3);\n  animation-duration: 400ms;\n  animation-timing-function: cubic-bezier(0.16, 1, 0.3, 1);\n  will-change: transform, opacity;\n\n  &[data-side=\"right\"] {\n    animation-name: slideLeftAndFade;\n  }\n\n  @keyframes slideLeftAndFade {\n    from {\n      opacity: 0;\n      transform: translateX(2px);\n    }\n    to {\n      opacity: 1;\n      transform: translateX(0);\n    }\n  }\n`;\n\nconst Label = styled(\"DropdownMenu.Label\")`\n  font: ${(p) => (p.subHeader ? \"var(--text-xs)\" : \"var(--text-s)\")};\n  padding: 12px 16px;\n  font-weight: 600;\n  border-bottom: ${(p) => (!p.subHeader ? \"1px solid var(--sand4)\" : \"none\")};\n  margin-bottom: 4px;\n`;\n\nconst IconLeft = styled.i`\n  color: var(--sand10);\n\n  ${MenuItem}[data-highlighted] & {\n    color: var(--violet10);\n  }\n  ${MenuItem}[data-disabled] & {\n    color: var(--sand8);\n  }\n\n  ${SubMenuTrigger}[data-highlighted] & {\n    color: var(--violet10);\n  }\n\n  ${SubMenuTrigger}[data-state='open'] & {\n    color: var(--violet10);\n  }\n\n  ${SubMenuTrigger}[data-disabled] & {\n    color: var(--sand8);\n  }\n`;\n\nconst IconRight = styled.i`\n  margin-left: auto;\n  color: var(--sand10);\n\n  ${MenuItem}[data-highlighted] & {\n    color: var(--violet10);\n  }\n\n  ${MenuItem}[data-disabled] & {\n    color: var(--sand8);\n  }\n\n  ${SubMenuTrigger}[data-highlighted] & {\n    color: var(--violet10);\n  }\n\n  ${SubMenuTrigger}[data-state='open'] & {\n    color: var(--violet10);\n  }\n\n  ${SubMenuTrigger}[data-disabled] & {\n    color: var(--sand8);\n  }\n`;\n\nconst Divider = styled.div`\n  width: 100%;\n  height: 1px;\n  background-color: var(--sand4);\n`;\n\nconst DropdownItem = (props) => (\n  <MenuItem onSelect={props.onSelect} disabled={props.disabled}>\n    {props?.iconLeft && <IconLeft className={props.iconLeft} />}\n    {props.receiver}\n    {props?.iconRight && <IconRight className={props.iconRight} />}\n  </MenuItem>\n);\n\nconst DropdownItems = (menu, isSection, noDivider) => (\n  <>\n    {menu?.header && <Label subHeader={isSection}>{menu?.header}</Label>}\n    {menu?.items &&\n      menu.items.length > 0 &&\n      menu.items.map((item, index) =>\n        item.subMenuProps ? (\n          <>\n            {item.subHeader && <Label subHeader>{item.subHeader}</Label>}\n            <SubMenu>\n              <SubMenuTrigger disabled={item.disabled}>\n                {item?.iconLeft && <IconLeft className={item.iconLeft} />}\n                {item.name}\n                <IconRight className=\"ph ph-caret-right\" />\n              </SubMenuTrigger>\n              <SubMenuContent sideOffset={2} alignOffset={-5}>\n                <DropdownItems {...item.subMenuProps} />\n              </SubMenuContent>\n            </SubMenu>\n          </>\n        ) : item.asSection ? (\n          <DropdownItems\n            {...item}\n            isSection={true}\n            noDivider={item.noDivider}\n          />\n        ) : (\n          <>\n            {item.subHeader && <Label subHeader>{item.subHeader}</Label>}\n            {item.href ? (\n              <Link href={item.href.toString()} target={item?.target}>\n                <DropdownItem {...item} />\n              </Link>\n            ) : (\n              <DropdownItem {...item} />\n            )}\n            {isSection && !noDivider && menu?.items?.length === index + 1 && (\n              <Divider />\n            )}\n          </>\n        )\n      )}\n  </>\n);\n\ntrigger = trigger ?? (\n  <Widget\n    src=\"near/widget/DIG.Chip\"\n    props={{\n      label: receiver ?? \"Pick one\",\n      iconRight: \"ph ph-caret-down\",\n    }}\n  />\n);\n\nconst previewProps = {\n  header: \"Dropdown header\",\n  items: [\n    {\n      name: \"Profile\",\n      iconLeft: \"ph ph-user-circle\",\n      iconRight: \"ph ph-user-focus\",\n    },\n    {\n      subHeader: \"Sub header here\",\n      name: \"Settings\",\n    },\n    {\n      name: \"Groups\",\n      iconLeft: \"ph ph-user-circle\",\n      subMenuProps: {\n        items: [\n          {\n            header: \"Section header without divider\",\n            asSection: true,\n            noDivider: true,\n            items: [\n              {\n                name: \"Section name 1\",\n              },\n              {\n                name: \"Section name 2\",\n              },\n            ],\n          },\n          {\n            name: \"Nested Profile\",\n            iconLeft: \"ph ph-user-circle\",\n            iconRight: \"ph ph-user-focus\",\n          },\n          {\n            name: \"Nested Groups Nested Groups\",\n            subMenuProps: {\n              header: \"My double nested Account\",\n              items: [\n                {\n                  name: \"Menu item as link\",\n                  href: \"near.org\",\n                  target: \"_blank\",\n                  iconRight: \"ph ph-link\",\n                },\n                {\n                  header: \"Section header 2\",\n                  asSection: true,\n                  items: [\n                    {\n                      name: \"Section name 1\",\n                    },\n                    {\n                      name: \"Section name 2\",\n                    },\n                  ],\n                },\n                {\n                  header: \"Section header 3\",\n                  asSection: true,\n                  items: [\n                    {\n                      name: \"Section name 1\",\n                    },\n                  ],\n                },\n                {\n                  name: \"Double Nested Groups\",\n                },\n                {\n                  name: \"Double Nested Settings\",\n                },\n              ],\n            },\n          },\n          {\n            name: \"Nested Settings\",\n          },\n        ],\n      },\n    },\n  ],\n};\n\nitems = items?.length > 0 ? items : previewProps.items;\n\nreturn (\n  <DropdownMenu.Root {...rootProps}>\n    <DropdownMenu.Trigger asChild>\n      <TriggerWrapper>{trigger}</TriggerWrapper>\n    </DropdownMenu.Trigger>\n    <Content sideOffset={20} alignOffset={20}>\n      <DropdownItems {...{ trigger, header, subHeader, items }} />\n    </Content>\n  </DropdownMenu.Root>\n);\n", "metadata": {}, "branch": {"draft": null}, "widget_modules_used": null, "widget_url": "https://near.social/#/fastswap.near/widget/Network1Dropdown", "fact_widget_deployments_id": "1ac085144bc727a6e0633df809d62d15", "inserted_timestamp": "2023-11-19T01:49:42.472Z", "modified_timestamp": "2023-11-19T01:49:42.472Z", "__row_index": 6}