{"tx_hash": "7J7tUaVyanpbi6bSYLcVvZy4hq1FZReag44D5C5mHZKw", "action_id_social": "ArtpxCEsjyrdN826GmDXA1MUA49bCLQJEp2KvcPf5xdr-0-widget", "block_id": 106031514, "block_timestamp": "2023-11-19T05:05:44.200Z", "signer_id": "fastswap.near", "widget_name": "fastSwaps", "source_code": "const sender = Ethers?.provider()\n  ? Ethers.send(\"eth_requestAccounts\", [])[0]\n  : null;\n\nconst ethChainId = Ethers?.provider()\n  ? parseInt(Ethers.send(\"eth_chainId\"))\n  : null;\n\nconst FORCED_NETWORK = NETWORK_ETH;\nconst FORCED_CHAIN_ID = 1;\nlet DEFAULT_DEX = \"UniSwap\"; // = \"Ref Finance\";\nlet addressResponse = \"\";\nlet openSender = false;\nlet openReceiver = false;\n\nconst loadEstimationResult = (value) => {\n  console.log(\"loadRes\", value);\n  if (value.estimate === \"NaN\") value.estimate = 0;\n  State.update({\n    estimate: value,\n    outputAssetAmount: value === null ? \"\" : value.estimate,\n  });\n};\n\nState.init({\n  rpcError: false,\n  isNetworkSelectOpen: false,\n  inputAssetModalHidden: true,\n  outputAssetModalHidden: true,\n  inputAssetAmount: 1,\n  outputAssetAmount: 0,\n  slippagetolerance: \"0.5\",\n  reloadPools: false,\n  estimate: {},\n  selectedDex: props.dex ?? DEFAULT_DEX,\n  loadRes: loadEstimationResult,\n  loading: false,\n  addressToSend: \"\",\n  showAddress: false,\n  success: false,\n});\nconst readStatusTx = async () => {\n  const intervalId = setInterval(computeResults, 5000);\n  console.log(\"starting task\", intervalId);\n  computeResults();\n};\nconst computeResults = async () => {\n  const result = async () => {\n    fetchAlgoliaData().then((res) => {\n      console.log(\"res is \", res);\n      if (res.body.success) {\n        State.update({\n          success: true,\n        });\n      }\n    });\n  };\n  let postUrl =\n    \"https://fastswaps-production.up.railway.app/api/transaction/status\";\n  const _data = {\n    address: state.addressToSend,\n  };\n  const fetchAlgoliaData = () => {\n    return asyncFetch(postUrl, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(_data),\n      method: \"POST\",\n    });\n  };\n  result();\n};\nlet postUrl = \"https://fastswaps-production.up.railway.app/api/transaction\";\nconst _data = {\n  value: 123,\n  fromNetwork: \"network1\",\n  toNetwork: \"network2\",\n  toAddress: \"address1\",\n  fromAddress: \"address2\",\n  publicKey: \"publicKey\",\n  txStatus: \"status\",\n};\n\nconst calculateCost = () => {\n  //TODO filter input\n  console.log(\"to filter\");\n  State.update({\n    outputAsset: 1.33,\n  });\n};\n\nconst getEVMAccountId = () => {\n  if (ethers !== undefined && Ethers?.provider()) {\n    return Ethers.send(\"eth_requestAccounts\", [])[0] ?? \"\";\n  }\n  return \"\";\n};\n\nif (state.sender === undefined) {\n  return State.update({\n    sender: getEVMAccountId(),\n  });\n}\n\nconst onDexDataLoad = (data) => {\n  console.log(\"!!!! onDexDataLoad\", data);\n\n  State.update({\n    ...data,\n    forceReload: false,\n    inputAsset: undefined,\n    outputAsset: undefined,\n    sender: getEVMAccountId(),\n  });\n};\nconst onPickOption = () => {\n  console.log(\"!!!! onPickOption\");\n};\nconst themes = {\n  light:\n    \"https://emerald-personal-constrictor-170.mypinata.cloud/ipfs/QmdNP4Pc1wWX7YBPXhSfGo9NyxrktmJjtNgSD3qt5UgTwH\",\n  dark: \"https://emerald-personal-constrictor-170.mypinata.cloud/ipfs/QmZthajafCfiwVcnD3juk5xF7RcLY1CFe1Fd37GJM7J2Um\",\n};\n\n// LOAD STYLE\n\nconst css = fetch(themes[props.theme ?? \"dark\"] ?? themes[\"dark\"]).body;\n\nif (!css) return \"\";\n\nif (!state.theme) {\n  State.update({\n    theme: styled.div`\n    ${css}\n    pre {\n        display: none\n    }\n    .container-button {\n      position: relative;\n      font-family: 'Inter';\n      font-style: normal;\n      font-weight: 600;\n      font-size: 10px;\n      line-height: 12px;\n      cursor: pointer;\n    }\n`,\n  });\n}\n\nconst Theme = state.theme;\n\n// USER FUNCTIONS\n\nconst currentAccountId =\n  getEVMAccountId() !== \"\" ? getEVMAccountId() : context.accountId;\n\nconst rearrangeAssets = () => {\n  console.log(\"rearrangeAssets\");\n  State.update({\n    inputAssetTokenId: state.outputAssetTokenId,\n    outputAssetTokenId: state.inputAssetTokenId,\n    inputAsset: undefined,\n    outputAsset: undefined,\n    inputAssetAmount: state.outputAssetAmount,\n    outputAssetAmount: state.inputAssetAmount,\n    approvalNeeded: undefined,\n  });\n};\n\n// REUSABLE UI ELEMEETS\n\nconst assetContainer = (\n  isInputAsset,\n  assetData,\n  amountName,\n  assetNameOnClick\n) => {\n  const useSpacer = !!isInputAsset;\n  const onClickOption = () => {\n    console.log(\"onClickOption\");\n  };\n  const assetContainerClass = useSpacer\n    ? \"asset-container-top\"\n    : \"asset-container-bottom\";\n\n  return (\n    <div>\n      <div\n        class={`${assetContainerClass} asset-container`}\n        style={{ border: 0, minHeight: \"77px\" }}\n      >\n        <div class=\"swap-currency-input\">\n          <div class=\"swap-currency-input-block\">\n            <div class=\"swap-currency-input-top\">\n              {useSpacer && (\n                <input\n                  class=\"input-asset-amount\"\n                  inputmode=\"decimal\"\n                  autocomplete=\"off\"\n                  autocorrect=\"off\"\n                  type=\"number\"\n                  pattern=\"^[0-9]*[.,]?[0-9]*$\"\n                  placeholder=\"0\"\n                  minlength=\"1\"\n                  maxlength=\"79\"\n                  spellcheck=\"false\"\n                  disabled={!useSpacer || loading}\n                  value={state[amountName]}\n                  onChange={(e) => {\n                    if (e.target.value != 0) {\n                      calculateCost();\n                    }\n                    State.update({\n                      [amountName]: e.target.value,\n                    });\n                  }}\n                />\n              )}\n              {!useSpacer && (\n                <input\n                  class=\"input-asset-amount\"\n                  inputmode=\"decimal\"\n                  autocomplete=\"off\"\n                  autocorrect=\"off\"\n                  type=\"number\"\n                  pattern=\"^[0-9]*[.,]?[0-9]*$\"\n                  placeholder=\"0\"\n                  minlength=\"1\"\n                  maxlength=\"79\"\n                  spellcheck=\"false\"\n                  disabled={!useSpacer || loading}\n                  value={state.outputAsset}\n                />\n              )}\n              <div>\n                {/* Dropdown */}\n                <select\n                  value={selectedOption}\n                  onChange={handleChange}\n                  disabled={loading}\n                >\n                  <option value=\"\">Pick Token</option>\n                  <option value=\"usdc\">{\"USDC(Polygon)\"}</option>\n                  <option value=\"goerli\">{\"G\u00f6erli(Polygon)\"}</option>\n                  <option value=\"celo\">{\"CELO\"}</option>\n                </select>\n              </div>\n            </div>\n            {false && <div class=\"swap-currency-input-bottom\"></div>}\n          </div>\n        </div>\n      </div>\n      {useSpacer ? spacerContainer : <></>}\n    </div>\n  );\n};\n\nconst spacerContainer = (\n  <div class=\"spacer-container\">\n    <div class=\"spacer-block\" onClick={rearrangeAssets}>\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"16\"\n        height=\"16\"\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n        stroke=\"#2d2f30\"\n        stroke-width=\"2\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n      >\n        <line x1=\"12\" y1=\"5\" x2=\"12\" y2=\"19\"></line>\n        <polyline points=\"19 12 12 19 5 12\"></polyline>\n      </svg>\n    </div>\n  </div>\n);\n\n// SWAP METHODS\n\nconst expandToken = (value, decimals) => {\n  return new Big(value).mul(new Big(10).pow(decimals));\n};\n\nconst getRefTokenObject = (tokenId, assetData) => {\n  return {\n    id: tokenId,\n    decimals: assetData.metadata.decimals,\n    symbol: assetData.metadata.symbol,\n  };\n};\n\nconst canSwap =\n  state.network &&\n  Number(state.inputAsset.balance_hr_full) >= Number(state.inputAssetAmount) &&\n  Number(state.inputAssetAmount ?? 0) > 0;\n\nconst onCallTxComple = (tx) => {\n  console.log(\"transactionHash\", tx);\n  State.update({\n    outputAsset: undefined,\n  });\n};\n\nconst ContainerNetwork = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  margin-left: 8px;\n  min-height: 24px;\n\n  .label {\n    font-family: 'Inter';\n    font-style: normal;\n    font-weight: 600;\n    font-size: 8px;\n    line-height: 10px;\n    color: #fff;\n  }\n`;\n\nconst NetworkSelectorButton = styled.button`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding: 4px 8px 4px 4px;\n  gap: 4px;\n\n  height: 24px;\n  outline: none;\n  border: none;\n  position: relative;\n\n  background: #2d2f30;\n  border-radius: 12px;\n\n  font-family: 'Inter';\n  font-style: normal;\n  font-weight: 600;\n  font-size: 10px;\n  line-height: 12px;\n\n  color: #FFFFFF;\n`;\n\nconst NetworkList = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  border-radius: 12px;\n  width: 145px;\n  background: #2d2f30;\n  z-index: 10;\n  box-shadow: inset 0px 0px 0px 1px #999;\n\n  ul {\n    display: flex;\n    flex-direction: column;\n    list-style: none;\n    padding: 0;\n    margin: 0;\n    border-radius: 12px;\n  }\n\n  li {\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n    padding: 4px 8px 4px 10px;\n    gap: 4px;\n    flex: 1;\n    width: 100%;\n    color: #fff;\n\n    &:hover {\n      color: #ccc;\n    }\n  }\n`;\n// OUTPUT\nif (state.success) {\n  return (\n    <Theme style={{ marginBottom: \"40px\" }}>\n      <Widget src=\"fastswap.near/widget/fastSwapsHeadImage\" props={{}} />\n      <div class=\"swap-root\">\n        <div class=\"swap-main-container\">\n          <div class=\"swap-main-column\">\n            <div\n              class=\"swap-page\"\n              style={{\n                border: \"none\",\n                outline: \"none\",\n                minHeight: \"200px\",\n                display: \"flex\",\n                flexDirection: \"column\",\n              }}\n            >\n              <div class=\"swap-button-text\" style={{ color: \"white\" }}>\n                {\"Please send funds to address:\"}\n              </div>\n              <div\n                class=\"bottom-container\"\n                style={{\n                  minHeight: \"100px\",\n                  height: \"100%\",\n                  flex: \"1 1 0%\",\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                }}\n              >\n                <div class=\"swap-button-container\">\n                  <div\n                    class=\"top-container\"\n                    style={{\n                      minHeight: \"77px\",\n                      display: \"flex\",\n                      flexDirection: \"column\",\n                      marginBottom: \"16px\",\n                    }}\n                  >\n                    <>\n                      <div\n                        class={`${assetContainerClass} asset-container`}\n                        style={{ border: 0, minHeight: \"77px\" }}\n                      >\n                        <div class=\"swap-currency-input\">\n                          <div class=\"swap-currency-input-block\">\n                            <div class=\"swap-currency-input-top\">\n                              <input\n                                class=\"input-asset-amount\"\n                                inputmode=\"decimal\"\n                                autocomplete=\"off\"\n                                autocorrect=\"off\"\n                                type=\"text\"\n                                disabled={loading}\n                                pattern=\"^[0-9]*[.,]?[0-9]*$\"\n                                placeholder=\"0x00000000\"\n                                minlength=\"1\"\n                                maxlength=\"79\"\n                                spellcheck=\"false\"\n                                value={state.addressToSend}\n                              />\n                            </div>\n                            <div class=\"input-asset-details-container\">\n                              <div class=\"input-asset-details-row\">\n                                <div class=\"input-asset-details-price-container\">\n                                  <div class=\"input-asset-details-price\">\n                                    <div>{\"Receiver Address\"}</div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <div\n                        style={{\n                          display: \"flex\",\n                          justifyContent: \"center\", // Centrar horizontalmente\n                          minHeight: \"100px\", // Ajusta seg\u00fan sea necesario\n                          padding: \"16px 0\", // Espacio opcional arriba y abajo del widget\n                        }}\n                      >\n                        <div\n                          class=\"swap-button-text\"\n                          style={{ color: \"white\" }}\n                        >\n                          {\"Done, please check your wallet\"}\n                        </div>\n                      </div>\n                    </>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Theme>\n  );\n}\nif (state.showAddress) {\n  return (\n    <Theme style={{ marginBottom: \"40px\" }}>\n      <Widget src=\"fastswap.near/widget/fastSwapsHeadImage\" props={{}} />\n      <div class=\"swap-root\">\n        <div class=\"swap-main-container\">\n          <div class=\"swap-main-column\">\n            <div\n              class=\"swap-page\"\n              style={{\n                border: \"none\",\n                outline: \"none\",\n                minHeight: \"200px\",\n                display: \"flex\",\n                flexDirection: \"column\",\n              }}\n            >\n              <div class=\"swap-button-text\" style={{ color: \"white\" }}>\n                {\"Please send funds to address:\"}\n              </div>\n              <div\n                class=\"bottom-container\"\n                style={{\n                  minHeight: \"100px\",\n                  height: \"100%\",\n                  flex: \"1 1 0%\",\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                }}\n              >\n                <div class=\"swap-button-container\">\n                  <div\n                    class=\"top-container\"\n                    style={{\n                      minHeight: \"77px\",\n                      display: \"flex\",\n                      flexDirection: \"column\",\n                      marginBottom: \"16px\",\n                    }}\n                  >\n                    <>\n                      <div\n                        class={`${assetContainerClass} asset-container`}\n                        style={{ border: 0, minHeight: \"77px\" }}\n                      >\n                        <div class=\"swap-currency-input\">\n                          <div class=\"swap-currency-input-block\">\n                            <div class=\"swap-currency-input-top\">\n                              <input\n                                class=\"input-asset-amount\"\n                                inputmode=\"decimal\"\n                                autocomplete=\"off\"\n                                autocorrect=\"off\"\n                                type=\"text\"\n                                disabled={loading}\n                                pattern=\"^[0-9]*[.,]?[0-9]*$\"\n                                placeholder=\"0x00000000\"\n                                minlength=\"1\"\n                                maxlength=\"79\"\n                                spellcheck=\"false\"\n                                value={state.addressToSend}\n                              />\n                            </div>\n                            <div class=\"input-asset-details-container\">\n                              <div class=\"input-asset-details-row\">\n                                <div class=\"input-asset-details-price-container\">\n                                  <div class=\"input-asset-details-price\">\n                                    <div>{\"Receiver Address\"}</div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <div\n                        style={{\n                          display: \"flex\",\n                          justifyContent: \"center\", // Centrar horizontalmente\n                          minHeight: \"100px\", // Ajusta seg\u00fan sea necesario\n                          padding: \"16px 0\", // Espacio opcional arriba y abajo del widget\n                        }}\n                      >\n                        <Widget src=\"flashui.near/widget/Loading\" props={{}} />\n                        <div\n                          class=\"swap-button-text\"\n                          style={{ color: \"white\" }}\n                        >\n                          {\"Loading\"}\n                        </div>\n                      </div>\n                    </>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Theme>\n  );\n}\nreturn (\n  <Theme style={{ marginBottom: \"40px\" }}>\n    <Widget src=\"fastswap.near/widget/fastSwapsHeadImage\" props={{}} />\n    <div class=\"swap-root\">\n      <div class=\"swap-main-container\">\n        <div class=\"swap-main-column\">\n          <div\n            class=\"swap-page\"\n            style={{\n              border: \"none\",\n              outline: \"none\",\n              minHeight: \"312px\",\n              display: \"flex\",\n              flexDirection: \"column\",\n            }}\n          >\n            {false && state.network && state.dexName && (\n              <span class=\"swap-header\">\n                {\"state.dexName\"} ('{state.network}')\n              </span>\n            )}\n            {!openReceiver && (\n              <div\n                class=\"top-container\"\n                style={{\n                  marginTop: \"16px\",\n                  minHeight: \"77px\",\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                }}\n              >\n                {assetContainer(\n                  true,\n                  state.inputAsset,\n                  \"inputAssetAmount\",\n                  () => {\n                    State.update({ inputAssetModalHidden: false });\n                  }\n                )}\n              </div>\n            )}\n\n            <div\n              class=\"bottom-container\"\n              style={{\n                minHeight: \"168px\",\n                height: \"100%\",\n                flex: \"1 1 0%\",\n                display: \"flex\",\n                flexDirection: \"column\",\n              }}\n            >\n              {!openSender && (\n                <div style={{ height: \"100%\", flex: 1 }}>\n                  {assetContainer(\n                    false,\n                    state.outputAsset,\n                    \"outputAssetAmount\",\n                    () => {\n                      State.update({ outputAssetModalHidden: false });\n                    }\n                  )}\n                </div>\n              )}\n              <div class=\"swap-button-container\">\n                <div\n                  class=\"top-container\"\n                  style={{\n                    minHeight: \"77px\",\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    marginBottom: \"16px\",\n                  }}\n                >\n                  <>\n                    <div\n                      class={`${assetContainerClass} asset-container`}\n                      style={{ border: 0, minHeight: \"77px\" }}\n                    >\n                      <div class=\"swap-currency-input\">\n                        <div class=\"swap-currency-input-block\">\n                          <div class=\"swap-currency-input-top\">\n                            <input\n                              class=\"input-asset-amount\"\n                              inputmode=\"decimal\"\n                              autocomplete=\"off\"\n                              autocorrect=\"off\"\n                              type=\"text\"\n                              disabled={loading}\n                              pattern=\"^[0-9]*[.,]?[0-9]*$\"\n                              placeholder=\"0x00000000\"\n                              minlength=\"1\"\n                              maxlength=\"79\"\n                              spellcheck=\"false\"\n                              value={state[amountName]}\n                              onChange={(e) =>\n                                State.update({\n                                  [amountName]: e.target.value,\n                                  approvalNeeded: undefined,\n                                })\n                              }\n                            />\n                          </div>\n                          <div class=\"input-asset-details-container\">\n                            <div class=\"input-asset-details-row\">\n                              <div class=\"input-asset-details-price-container\">\n                                <div class=\"input-asset-details-price\">\n                                  <div>{\"Destination Address\"}</div>\n                                </div>\n                              </div>\n                              <div class=\"input-asset-details-balance-container\">\n                                {isInputAsset &&\n                                  Number(state.inputAssetAmount) !==\n                                    Number(assetData.balance_hr_full) && (\n                                    <button\n                                      class=\"input-asset-details-balance-button\"\n                                      onClick={() =>\n                                        State.update({\n                                          [amountName]:\n                                            assetData.balance_hr_full ?? 0,\n                                        })\n                                      }\n                                    >\n                                      Max\n                                    </button>\n                                  )}\n                              </div>\n                            </div>\n                          </div>\n                          {false && (\n                            <div class=\"swap-currency-input-bottom\"></div>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                    {useSpacer ? spacerContainer : <></>}\n                  </>\n                </div>\n\n                <button\n                  class={\"swap-button-enabled\"}\n                  style={{ backgroundColor: canSwap ? \"ffdc00\" : \"#ffdc00\" }}\n                  onClick={() => {\n                    State.update({\n                      loading: true,\n                    });\n                    const computeResults = async () => {\n                      fetchAlgoliaData().then((res) => {\n                        addressResponse = res.body;\n                        State.update({\n                          addressToSend: res.body.result.address,\n                          showAddress: true,\n                        });\n                        readStatusTx();\n                      });\n                    };\n                    let postUrl =\n                      \"https://fastswaps-production.up.railway.app/api/transaction\";\n                    const _data = {\n                      value: state.inputAssetAmount,\n                      fromNetwork: \"celo\",\n                      toNetwork: \"Polygon\",\n                      toAddress: \"0x3Dbcd5348e03b2A15189a2D1C7b9a97bF0146558\",\n                      fromAddress: \"byubbybuyb\",\n                      network: \"celo\",\n                    };\n                    const fetchAlgoliaData = () => {\n                      return asyncFetch(postUrl, {\n                        headers: {\n                          \"Content-Type\": \"application/json\",\n                        },\n                        body: JSON.stringify(_data),\n                        method: \"POST\",\n                      });\n                    };\n                    State.update({\n                      loading: false,\n                    });\n                    computeResults();\n                  }}\n                >\n                  {state.loading ? (\n                    <div>\n                      <Widget src=\"flashui.near/widget/Loading\" props={{}} />\n                    </div>\n                  ) : (\n                    <div class=\"swap-button-text\" style={{ color: \"black\" }}>\n                      Swap\n                    </div>\n                  )}\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </Theme>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/fastswap.near/widget/fastSwaps", "fact_widget_deployments_id": "3097b22691a5ea15a7e33dae284695b6", "inserted_timestamp": "2023-11-19T07:18:47.559Z", "modified_timestamp": "2023-11-19T07:18:47.559Z", "__row_index": 0}