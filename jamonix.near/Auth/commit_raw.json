{"tx_hash": "9U5jzXHMXkKwdSXX5YPgZgvypQTZn3YBbproW7nkpPqn", "action_id_social": "2avWi1bABR9zUYWRr3NN7TG1uAKJ4mwiFo9C7DfKPpdR-0-widget", "block_id": 97088731, "block_timestamp": "2023-07-22T18:58:28.162Z", "signer_id": "jamonix.near", "widget_name": "Auth", "source_code": "import React, { useContext, useState } from 'react';\n\nexport const Auth = () => {\n    const ZkClientContext = createContext({\n        zkClient: undefined,\n        login: undefined,\n        getMnemonic: () => undefined\n    });\n    const { zkClient, login } = useContext(ZkClientContext);\n    const [isButtonDisabled, setIsButtonDisabled] = useState(false); // \u00c9tat local pour d\u00e9sactiver le bouton\n    const handleLoginClick = async () => {\n        if (isButtonDisabled || !login || zkClient)\n            return;\n        try {\n            setIsButtonDisabled(true); // D\u00e9sactiver le bouton apr\u00e8s le clic\n            await login(); // Effectuer la tentative de connexion\n            // R\u00e9activer le bouton apr\u00e8s 15 secondes (15000 millisecondes)\n            setTimeout(() => setIsButtonDisabled(false), 15000);\n        }\n        catch (error) {\n            console.error('Erreur lors de la connexion :', error);\n            setIsButtonDisabled(false); // R\u00e9activer le bouton en cas d'erreur\n        }\n    };\n    return (<div>\n      {!zkClient && (<button onClick={handleLoginClick} disabled={isButtonDisabled}>\n          {isButtonDisabled ? 'Loading...' : 'Login'}\n        </button>)}\n    </div>);\n};\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/jamonix.near/widget/Auth", "fact_widget_deployments_id": "30a66d73173f13595f52166de373e0c3", "inserted_timestamp": "2000-01-01T00:00:00.000Z", "modified_timestamp": "2000-01-01T00:00:00.000Z", "__row_index": 0}