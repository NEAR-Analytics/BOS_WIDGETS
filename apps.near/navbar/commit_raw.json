{"tx_hash": "GpSf9CBr2jfhwjrAZAwHrh9kmrE31AjMxaH3ziy3YAjd", "action_id_social": "FYe9CuWz1b4wn8z82Le7rvFwFwB6jDxBPt86MZX9qYS6-0-widget", "block_id": 112788572, "block_timestamp": "2024-02-14T03:36:00.315Z", "signer_id": "apps.near", "widget_name": "navbar", "source_code": "const { Button } = VM.require(\"buildhub.near/widget/components\") || {\n  Button: () => <></>,\n};\n\nconst Navbar = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  padding: 25px 48px;\n  width: 100%;\n  background-color: #0b0c14;\n  border-bottom: 1px solid var(--stroke-color, rgba(255, 255, 255, 0.2));\n`;\n\nconst ButtonGroup = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  gap: 0.5rem;\n\n  @media screen and (max-width: 768px) {\n    flex-direction: column;\n    width: 100%;\n\n    a {\n      display: flex;\n    }\n  }\n`;\n\nconst DesktopNavigation = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n\n  @media screen and (max-width: 768px) {\n    display: none;\n  }\n`;\n\nconst MobileNavigation = styled.div`\n  display: none;\n\n  @media screen and (max-width: 768px) {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-between;\n    width: 100%;\n  }\n`;\n\nconst { href } = VM.require(\"buildhub.near/widget/lib.url\") || {\n  href: () => {},\n};\n\nconst NavLink = ({ to, children }) => (\n  <Link\n    key={to}\n    // to={`/?page=${to}`}\n    to={href({\n      widgetSrc: \"apps.near/widget/project\",\n      params: {\n        page: to,\n      },\n    })}\n  >\n    {children}\n  </Link>\n);\n\nconst [showMenu, setShowMenu] = useState(false);\nconst toggleDropdown = () => setShowMenu(!showMenu);\n\nconst ActionButton = () => (\n  <>\n    <Widget\n      src=\"apps.near/widget/FollowButton\"\n      props={{ accountId: \"every.near\" }}\n    />\n  </>\n);\n\nconst AppHeader = ({ page, routes, ...props }) => (\n  <Navbar>\n    <div className=\"d-flex align-items-center justify-content-between w-100\">\n      <DesktopNavigation className=\"container-xl\">\n        <Link\n          style={{ flex: 1 }}\n          to={href({\n            widgetSrc: \"apps.near/widget/project\",\n            params: {\n              page: \"main\",\n            },\n          })}\n        >\n          <img\n            style={{ width: 85, objectFit: \"cover\" }}\n            src=\"https://ipfs.near.social/ipfs/bafkreihbwho3qfvnu4yss3eh5jrx6uxhrlzdgtdjyzyjrpa6odro6wdxya\"\n          />\n        </Link>\n        <ButtonGroup style={{ flex: 1 }}>\n          {routes &&\n            (Object.keys(routes) || []).map((k) => {\n              const route = routes[k];\n              if (route.hide) {\n                return null;\n              }\n              return (\n                <NavLink to={k}>\n                  <Button key={k} variant={page === k && \"primary\"}>\n                    {route.init.icon && <i className={route.init.icon}></i>}\n                    {route.init.name}\n                  </Button>\n                </NavLink>\n              );\n            })}\n        </ButtonGroup>\n        <div style={{ flex: 1, display: \"flex\", justifyContent: \"flex-end\" }}>\n          <ActionButton />\n        </div>\n      </DesktopNavigation>\n      <MobileNavigation>\n        <Link\n          to={href({\n            widgetSrc: \"apps.near/widget/project\",\n            params: {\n              page: \"main\",\n            },\n          })}\n        >\n          <img\n            style={{ width: 85, objectFit: \"cover\" }}\n            src=\"https://ipfs.near.social/ipfs/bafkreihbwho3qfvnu4yss3eh5jrx6uxhrlzdgtdjyzyjrpa6odro6wdxya\"\n          />\n        </Link>\n        <Button\n          type=\"icon\"\n          variant=\"outline\"\n          className=\"rounded-2\"\n          onClick={toggleDropdown}\n        >\n          <i style={{ fontSize: 24 }} className=\"bi bi-list\"></i>\n        </Button>\n      </MobileNavigation>\n    </div>\n    <MobileNavigation>\n      {showMenu && (\n        <div className=\"text-white w-100 d-flex flex-column gap-3 mt-3\">\n          <ButtonGroup className=\"align-items-stretch\">\n            {routes &&\n              (Object.keys(routes) || []).map((k) => {\n                const route = routes[k];\n                if (route.hide) {\n                  return null;\n                }\n                return (\n                  <NavLink to={k} style={{ textDecoration: \"none\" }}>\n                    <Button\n                      key={k}\n                      variant={page === k && \"primary\"}\n                      className=\"w-100\"\n                    >\n                      {route.init.icon && <i className={route.init.icon}></i>}\n                      {route.init.name}\n                    </Button>\n                  </NavLink>\n                );\n              })}\n          </ButtonGroup>\n          <div className=\"d-flex w-100 justify-content-center\">\n            <ActionButton />\n          </div>\n        </div>\n      )}\n    </MobileNavigation>\n  </Navbar>\n);\n\nreturn <AppHeader page={props.page} routes={props.routes} {...props} />;\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/apps.near/widget/navbar", "fact_widget_deployments_id": "59414b986f72c24470fab2ac3f743097", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 5}