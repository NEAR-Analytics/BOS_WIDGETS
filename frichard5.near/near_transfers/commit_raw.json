{"tx_hash": "HKcXAScL4CDxhBNkqBcu9BGSB59LRQpxXiZdAFUxU2rm", "action_id_social": "CxMGwpJCzHuYv9F9T9maXjky2GXigWcr3TrAQZkQr1r8-0-widget", "block_id": 92520383, "block_timestamp": "2023-05-23T11:09:00.899Z", "signer_id": "frichard5.near", "widget_name": "near_transfers", "source_code": "const widgetProvider = props.widgetProvider;\nconst account = props.account || \"foundation.near\";\nconst apiUrl = `https://api.pikespeak.ai/account/near-transfer/${account}`;\nconst apiPolicyUrl = `https://api.pikespeak.ai/daos/policy`;\nconst publicApiKey = \"36f2b87a-7ee6-40d8-80b9-5e68e587a5b5\";\n\nconst parseNear = (near) => {\n    return Number((Number(near) / Math.pow(10, 24)).toFixed(2));\n};\n\n\nconst policy = fetch(apiPolicyUrl + `?daos=${account}`, {\n    mode: \"cors\",\n    headers: {\n        \"x-api-key\": publicApiKey,\n    },\n});\nconst minamount = policy.body?parseNear(policy.body.state.policy.proposal_bond):0;\n\nconst columns = [\n    {\n        id: \"timestamp\",\n        label: \"date\",\n        formatter: (data) => {\n            const milliTimestamp = Math.trunc(\n                Number(data[\"timestamp\"]) / Math.pow(10, 6)\n            );\n            return new Date(Number(milliTimestamp)).toLocaleDateString(\"en-US\", {\n                year: \"numeric\",\n                month: \"long\",\n                day: \"numeric\",\n                hour: \"numeric\",\n                minute: \"numeric\",\n            });\n        },\n    },\n    {\n        id: \"sender\",\n        label: \"Sender\",\n        formatter: (d) => {\n            return (\n                <a\n                    href={`https://explorer.near.org/accounts/${d.sender}`}\n                    target=\"_blank\"\n                >\n                    {d.sender}\n                </a>\n            );\n        },\n    },\n    {\n        id: \"receiver\",\n        label: \"Receiver\",\n        formatter: (d) => {\n            return (\n                <a\n                    href={`https://explorer.near.org/accounts/${d.receiver}`}\n                    target=\"_blank\"\n                >\n                    {d.receiver}\n                </a>\n            );\n        },\n    },\n    {\n        id: \"amount\",\n        label: \"Amount\",\n        formatter: (d) => Number(d[\"amount\"]).toFixed(2),\n    },\n    {\n        id: \"transaction_id\",\n        label: \"Tx id\",\n        formatter: (d) => {\n            return (\n                <a\n                    href={`https://explorer.near.org/transactions/${d.transaction_id}`}\n                    target=\"_blank\"\n                >\n                    {d.transaction_id}\n                </a>\n            );\n        },\n    },\n];\n\nconst resPerPage = 10;\n\nState.init({\n    txs: [],\n    offset: 0,\n    minamount: minamount\n});\n\nconst nextPage = () => {\n    State.update({offset: state.offset + resPerPage});\n};\n\nconst previousPage = () => {\n    State.update({offset: state.offset - resPerPage});\n};\n\nconst GenericTable = (\n    <Widget\n        src={`${widgetProvider}/widget/generic_table`}\n        props={{\n            title: \"NEAR transfers\",\n            columns,\n            data: state.txs,\n            nextPage,\n            previousPage,\n            offset: state.offset,\n            resPerPage,\n            filter:     <button\n                onClick={\n                    () => state.minamount!=0?State.update({minamount:0}):State.update({minamount})\n                }\n                style={{margin:\"10px 0\",}}\n            >\n                {state.minamount!=0?'Show':'Hide'} bond transactions\n            </button>\n        }}\n    />\n);\n\nlet transactions = [];\nconst fetchTransfers = (offset,minamount) => {\n    const nearTransfers = fetch(\n        apiUrl + `?offset=${offset}&limit=${resPerPage}&minamount=${minamount}`,\n        {\n            mode: \"cors\",\n            headers: {\n                \"x-api-key\": publicApiKey,\n            },\n        }\n    );\n    nearTransfers.body && State.update({txs: nearTransfers.body});\n};\n\nfetchTransfers(state.offset, state.minamount);\n\nreturn <div>\n    {GenericTable}\n</div>;\n", "metadata": {"name": "Near Transfers"}, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/frichard5.near/widget/near_transfers", "fact_widget_deployments_id": "11fa97ccc80f046de2d011fa871829b2", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 1}