{"tx_hash": "HbEif57QjsBVq3DDQcm6bvkJHzAT7LxMPVUS5GWUBVxa", "action_id_social": "7kD96b4EnSHFQB7Yvnz7GNw4QpQbkTgAqYLoWstaDVEf-0-widget", "block_id": 88806147, "block_timestamp": "2023-04-04T14:26:46.403Z", "signer_id": "frichard5.near", "widget_name": "account_balance", "source_code": "const account = props.account || \"foundation.near\";\nconst apiUrl = `https://api.pikespeak.ai/account/balance/${account}`;\nconst publicApiKey = \"36f2b87a-7ee6-40d8-80b9-5e68e587a5b5\";\n\nconst numberWithCommas = (x) => {\n  return JSON.stringify(x).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n};\n\nconst contractsBalance = fetch(apiUrl, {\n  mode: \"cors\",\n  headers: {\n    \"x-api-key\": publicApiKey,\n  },\n});\n\nconst rows = [];\n\ncontractsBalance.body &&\n  contractsBalance.body.forEach((cB) => {\n    rows.push(\n      <tr>\n        <td>{cB.contract}</td>\n        <td>{numberWithCommas(Number(cB.amount))}</td>\n      </tr>\n    );\n  });\n\nreturn (\n  <>\n    <h2> Balances {props.account}</h2>\n    <table>\n      <tr>\n        <th>Token</th>\n        <th>Amount</th>\n      </tr>\n      {rows}\n    </table>\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/frichard5.near/widget/account_balance", "fact_widget_deployments_id": "8246dfddfe30c42ccf83e554805b84ac", "inserted_timestamp": "2000-01-01T00:00:00.000Z", "modified_timestamp": "2000-01-01T00:00:00.000Z", "__row_index": 10}