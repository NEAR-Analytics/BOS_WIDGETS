{"tx_hash": "G1i5uy6ug2ZPnothRyGcod2ZwoAyNXKoQkK2JhDGRZ9K", "action_id_social": "2YJ3PXkQbXtUriUaYBQYxCJNYj2MdoaRCXWugTrHwG8z-0-widget", "block_id": 98936179, "block_timestamp": "2023-08-16T12:04:38.148Z", "signer_id": "frichard5.near", "widget_name": "NDC-add-proposal", "source_code": "const {widgetProvider, policy} = props;\nconst account = props.account || \"marketing.sputnik-dao.near\";\nconst apiPolicyUrl = `https://api.pikespeak.ai/daos/policy`;\nconst apiBalanceUrl = `https://api.pikespeak.ai/account/balance/${account}`;\nconst publicApiKey = \"36f2b87a-7ee6-40d8-80b9-5e68e587a5b5\";\nconst refUrl = \"https://api.stats.ref.finance/api/ft\";\n\nconst ftList = fetch(refUrl);\n\nState.init({\n    type: \"Vote\",\n    data: {\n        token: \"\",\n    },\n});\n\nconst forgeUrl = (apiUrl, params) =>\n    apiUrl +\n    Object.keys(params).reduce(\n        (paramString, p) => paramString + `${p}=${params[p]}&`,\n        \"?\"\n    );\n\nconst selectType = (e) => {\n    State.update({\n        type: e.target.value,\n    });\n};\n\nconst selectToken = (e) => {\n    State.update({\n        data: {...state.data, token: e.target.value},\n    });\n};\n\nconst getDescription = (data) => {\n    return `${data.description} ${data.link}`\n}\n\nconst getPayload = (type, data) => {\n    const ft = ftList.body.find((ft) => ft.token_account_id === state.data.token);\n    let decimals = 0;\n    if (ft) {\n        decimals = Number(ft.decimals);\n    } else if (state.data.token === '') {\n        decimals = 24;\n    }\n    const amount = data.amount && new Big(data.amount).times(Math.pow(10, decimals)).toFixed();\n\n    switch (type) {\n        case \"Vote\":\n            return {\n                proposal: {\n                    description: getDescription(data),\n                    kind: \"Vote\",\n                },\n            };\n        case \"Transfer\":\n            return {\n                proposal: {\n                    description: getDescription(data),\n                    kind: {\n                        Transfer: {\n                            token_id: data.token,\n                            receiver_id: data.target,\n                            amount: amount,\n                        },\n                    },\n                },\n            };\n        case \"AddMemberToRole\":\n        case \"RemoveMemberFromRole\":\n            return {\n                proposal: {\n                    description: getDescription(data),\n                    kind: {\n                        [type]: {\n                            member_id: data.member_id,\n                            role: data.selectedRole,\n                        },\n                    },\n                },\n            };\n        case \"AddBounty\":\n            return {\n                proposal: {\n                    description: getDescription(data),\n                    kind: {\n                        AddBounty: {\n                            bounty: {\n                                description: getDescription(data),\n                                token: data.token,\n                                amount: amount,\n                                times: Number(data.times),\n                                max_deadline: new Big(data.max_deadline)\n                                    .times(86400 * Math.pow(10, 9))\n                                    .toFixed(),\n                            },\n                        },\n                    },\n                },\n            };\n        case \"BountyDone\":\n            return {\n                proposal: {\n                    description: getDescription(data),\n                    kind: {\n                        BountyDone: {\n                            bounty_id: Number(data.bounty_id),\n                            receiver_id: data.target,\n                        },\n                    },\n                },\n            };\n        case \"FunctionCall\":\n            return {\n                proposal: {\n                    description: getDescription(data),\n                    kind: {\n                        FunctionCall: {\n                            receiver_id: data.contract_name,\n                            actions: [\n                                {\n                                    method_name: data.method_name,\n                                    args: Buffer.from(JSON.stringify(JSON.parse(data.args),)).toString(\"base64\"),\n                                    deposit: data.deposit?data.deposit:\"0\",\n                                    gas: data.gas?data.gas:\"300000000000000\"\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n    }\n};\n\nconst sendProposal = () => {\n    const deposit =\n        state.type === \"AddBounty\"\n            ? state.policy.state.policy.bounty_bond\n            : state.policy.state.policy.proposal_bond;\n    Near.call([\n        {\n            contractName: account,\n            methodName: \"add_proposal\",\n            args: getPayload(state.type, state.data),\n            gas: \"300000000000000\",\n            deposit,\n        },\n    ]);\n};\n\nconst proposalTypes = [\n    \"Transfer\",\n    \"Vote\",\n    \"AddBounty\",\n    \"BountyDone\",\n    \"AddMemberToRole\",\n    \"RemoveMemberFromRole\",\n/*\n    \"FunctionCall\"\n*/\n].map((t) => {\n    return {\n        value: t,\n        label: t,\n    };\n});\n\nconst fetchPolicy = (params) => {\n    asyncFetch(forgeUrl(apiPolicyUrl, params), {\n        mode: \"cors\",\n        headers: {\n            \"x-api-key\": publicApiKey,\n        },\n    }).then(({err, body, ok}) => {\n        if (ok) {\n            const roles = body.state.policy.roles\n                .filter((r) => r.kind != \"Everyone\")\n                .map((r) => {\n                    return {\n                        label: r.name,\n                        value: r.name,\n                    };\n                });\n            State.update({\n                roles,\n                policy: body,\n                data: {\n                    ...state.data,\n                    selectedRole: roles[0].value,\n                },\n            });\n        }\n    });\n};\n\n!state.policy && fetchPolicy({daos: [account]});\n\nconst fetchBalance = () => {\n    const balance = fetch(apiBalanceUrl, {\n        mode: \"cors\",\n        headers: {\n            \"x-api-key\": publicApiKey,\n        },\n    });\n    balance.body &&\n    State.update({\n        balance: balance.body,\n        data: {\n            ...state.data,\n            token:\n                balance.body[0].contract === \"Near\" ? \"\" : balance.body[0].contract,\n        },\n    });\n};\n!state.balance && fetchBalance();\n\nconst ProposalCard = styled.div`\n  position: relative;\n  height: fit-content;\n  width: 80%;\n  margin: 50px auto;\n  box-shadow: 3px 2px 24px rgba(68, 152, 224, 0.3);\n  overflow: auto;\n  border-radius: 4px;\n  padding: 20px;\n  background: white;\n\n  svg {\n    height: 20px;\n\n    &.approved-icon {\n      fill: #13a36e;\n    }\n\n    &.rejected-icon {\n      fill: #ff5e03;\n    }\n\n    &.not-voted-yet-icon {\n      fill: rgb(140, 140, 140)\n    }\n  }\n`;\n\nconst ProposalForm = styled.div`\n\n`;\n\nconst InputText = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 10px 0px;\n  width: fit-content;\n`;\n\nconst InputDescription = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 10px 0px;\n  width: 100%;\n`;\n\nconst AmountSelector = styled.div`\n  display: flex;\n`;\n\nconst AmountComp = (\n    <AmountSelector>\n        <InputText>\n            <label style={{color: \"#8c8c8c\"}} for={id}>\n                {\"Amount\"}\n            </label>\n            <input\n                type=\"number\"\n                onChange={(e) => {\n                    State.update({\n                        data: {...state.data, amount: e.target.value},\n                    });\n                }}\n                placeholder={\"0\"}\n            />\n        </InputText>\n        {state.balance && (\n            <Widget\n                src={`${widgetProvider}/widget/NDC-select`}\n                props={{\n                    widgetProvider,\n                    options: state.balance.map((b) => {\n                        return {\n                            label: b.symbol,\n                            value: b.contract === \"Near\" ? \"\" : b.contract,\n                            additional: (\n                                <span style={{color: \"#8c8c8c\"}}>\n                  {Number(b.amount).toFixed(2)}\n                </span>\n                            ),\n                        };\n                    }),\n                    selectedOption: state.data.token,\n                    onChange: selectToken,\n                    label: \"Token\",\n                    id: \"token-selector\",\n                }}\n            />\n        )}\n    </AmountSelector>\n);\n\nreturn (<>\n        {ftList.body ? <ProposalCard>\n            <Widget\n                src={`${widgetProvider}/widget/NDC-select`}\n                props={{\n                    widgetProvider,\n                    options: proposalTypes,\n                    selectedOption: state.type,\n                    onChange: selectType,\n                    label: \"Type\",\n                    id: \"proposal-type-selector\",\n                }}\n            />\n\n            <ProposalForm>\n                <InputDescription>\n                    <label style={{color: \"#8c8c8c\"}} for={id}>\n                        {\"Description\"}\n                    </label>\n                    <input\n                        style={{height: \"160px\"}}\n                        type=\"text\"\n                        onChange={(e) => {\n                            State.update({\n                                data: {...state.data, description: e.target.value},\n                            });\n                        }}\n                        placeholder={\"Describe your proposal here.\"}\n                    />\n                </InputDescription>\n                <InputText>\n                    <label style={{color: \"#8c8c8c\"}} for={id}>\n                        {\"Link\"}\n                    </label>\n                    <input\n                        type=\"text\"\n                        onChange={(e) => {\n                            State.update({\n                                data: {...state.data, link: e.target.value},\n                            });\n                        }}\n                        placeholder={\"https://near.gov/somediscussion\"}\n                    />\n                </InputText>\n                {state.type === \"Transfer\" && (\n                    <>\n                        {AmountComp}\n                        <InputText>\n                            <label style={{color: \"#8c8c8c\"}} for={id}>\n                                {\"Target\"}\n                            </label>\n                            <input\n                                type=\"text\"\n                                onChange={(e) => {\n                                    State.update({\n                                        data: {...state.data, target: e.target.value},\n                                    });\n                                }}\n                                placeholder={\"receiver.near\"}\n                            />\n                        </InputText>\n                    </>\n                )}\n                {(state.type === \"AddMemberToRole\" ||\n                        state.type === \"RemoveMemberFromRole\") &&\n                    state.roles.length && (\n                        <>\n                            <Widget\n                                src={`${widgetProvider}/widget/NDC-select`}\n                                props={{\n                                    widgetProvider,\n                                    options: state.roles,\n                                    onChange: (e) => {\n                                        State.update({\n                                            data: {...state.data, selectedRole: e.target.value},\n                                        });\n                                    },\n                                    label: \"Role\",\n                                    id: \"role-selector\",\n                                }}\n                            />\n                            <InputText>\n                                <label style={{color: \"#8c8c8c\"}} for={id}>\n                                    {\"Member\"}\n                                </label>\n                                <input\n                                    type=\"text\"\n                                    onChange={(e) => {\n                                        State.update({\n                                            data: {...state.data, member_id: e.target.value},\n                                        });\n                                    }}\n                                    placeholder={\"member.near\"}\n                                />\n                            </InputText>\n                        </>\n                    )}\n                {state.type === \"AddBounty\" && (\n                    <>\n                        {AmountComp}\n                        <InputText>\n                            <label style={{color: \"#8c8c8c\"}} for={id}>\n                                {\"Times\"}\n                            </label>\n                            <input\n                                type=\"text\"\n                                onChange={(e) => {\n                                    State.update({\n                                        data: {...state.data, times: e.target.value},\n                                    });\n                                }}\n                                placeholder={\"0\"}\n                            />\n                        </InputText>\n                        <InputText>\n                            <label style={{color: \"#8c8c8c\"}} for={id}>\n                                {\"Days to compete\"}\n                            </label>\n                            <input\n                                type=\"text\"\n                                onChange={(e) => {\n                                    State.update({\n                                        data: {...state.data, max_deadline: e.target.value},\n                                    });\n                                }}\n                                placeholder={\"0\"}\n                            />\n                        </InputText>\n                    </>\n                )}\n                {state.type === \"BountyDone\" && (\n                    <>\n                        <InputText>\n                            <label style={{color: \"#8c8c8c\"}} for={id}>\n                                {\"Bounty id\"}\n                            </label>\n                            <input\n                                type=\"number\"\n                                onChange={(e) => {\n                                    State.update({\n                                        data: {...state.data, bounty_id: e.target.value},\n                                    });\n                                }}\n                                placeholder={\"The bounty proposal id\"}\n                            />\n                        </InputText>\n                        <InputText>\n                            <label style={{color: \"#8c8c8c\"}} for={id}>\n                                {\"Target\"}\n                            </label>\n                            <input\n                                type=\"text\"\n                                onChange={(e) => {\n                                    State.update({\n                                        data: {...state.data, target: e.target.value},\n                                    });\n                                }}\n                                placeholder={\"bounty_receiver.near\"}\n                            />\n                        </InputText>\n                    </>\n                )}\n     {/*           {state.type === \"FunctionCall\" && (<>\n                    <InputText>\n                        <label style={{color: \"#8c8c8c\"}} for={id}>\n                            {\"Contract Name\"}\n                        </label>\n                        <input\n                            type=\"text\"\n                            onChange={(e) => {\n                                State.update({\n                                    data: {...state.data, contract_name: e.target.value},\n                                });\n                            }}\n                            placeholder={\"v2.ref-finance.near\"}\n                        />\n                    </InputText>\n                    <InputText>\n                        <label style={{color: \"#8c8c8c\"}} for={id}>\n                            {\"Method Name\"}\n                        </label>\n                        <input\n                            type=\"text\"\n                            onChange={(e) => {\n                                State.update({\n                                    data: {...state.data, method_name: e.target.value},\n                                });\n                            }}\n                            placeholder={\"swap\"}\n                        />\n                    </InputText>\n                        <InputText>\n                            <label style={{color: \"#8c8c8c\"}} for={id}>\n                                {\"Deposit\"}\n                            </label>\n                            <input\n                                type=\"text\"\n                                onChange={(e) => {\n                                    State.update({\n                                        data: {...state.data, deposit: e.target.value},\n                                    });\n                                }}\n                                defaultValue={\"0\"}\n                                placeholder={\"0\"}\n                            />\n                        </InputText>\n                        <InputText>\n                            <label style={{color: \"#8c8c8c\"}} for={id}>\n                                {\"Gas\"}\n                            </label>\n                            <input\n                                type=\"text\"\n                                onChange={(e) => {\n                                    State.update({\n                                        data: {...state.data, gas: e.target.value},\n                                    });\n                                }}\n                                defaultValue={\"300000000000000\"}\n                                placeholder={\"300000000000000\"}\n                            />\n                        </InputText>\n                        <InputDescription>\n                            <label style={{color: \"#8c8c8c\"}} for={id}>\n                                {\"JSON Args\"}\n                            </label>\n                            <textarea\n                                style={{height: \"160px\"}}\n                                onChange={(e) => {\n                                    State.update({\n                                        data: {...state.data, args: e.target.value},\n                                    });\n                                }}\n                                placeholder={\"{}\"}\n                            />\n                        </InputDescription>\n                    </>\n                )}*/}\n            </ProposalForm>\n\n            <button onClick={sendProposal} style={{float: \"right\"}}>\n                Propose\n            </button>\n        </ProposalCard> : \"\"}</>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/frichard5.near/widget/NDC-add-proposal", "fact_widget_deployments_id": "b9b631a86b090fc197c0c9bb15cd74e9", "inserted_timestamp": "2023-08-16T13:51:53.043Z", "modified_timestamp": "2023-08-16T13:51:53.043Z", "__row_index": 6}