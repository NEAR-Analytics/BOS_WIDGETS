{"tx_hash": "62N7YJD5Z18WfDZZsrMxMwPf5wVo7RLMyb3p4P79APX2", "action_id_social": "D69xgGX9ryfkp6hwsoDJLAbPqBwjA8pPT8mtHhVzUCYY-0-widget", "block_id": 88941096, "block_timestamp": "2023-04-06T08:56:11.014Z", "signer_id": "frichard5.near", "widget_name": "proposals-status", "source_code": "const widgetProvider = props.widgetProvider;\nconst account = props.account || \"marketing.sputnik-dao.near\";\nconst apiUrl = `https://api.pikespeak.ai/daos/proposals/status/${account}`;\nconst publicApiKey = \"36f2b87a-7ee6-40d8-80b9-5e68e587a5b5\";\n\nconst forgeUrl = (apiUrl, params) =>\n  apiUrl +\n  Object.keys(params).reduce(\n    (paramString, p) => paramString + `${p}=${params[p]}&`,\n    \"?\"\n  );\n\nconst resPerPage = 10;\n\nState.init({\n  proposalsStatus: [],\n});\n\nconst columns = [\n  {\n    id: \"status\",\n    label: \"Status\",\n  },\n  {\n    id: \"count\",\n    label: \"Count\",\n  },\n];\n\nconst GenericTable = (\n  <Widget\n    src={`${widgetProvider}/widget/generic_table`}\n    props={{\n      title: `${account} proposals`,\n      columns,\n      data: state.proposalsStatus,\n    }}\n  />\n);\n\nconst fetchTransfers = (params) => {\n  const proposalsStatus = fetch(forgeUrl(apiUrl, params), {\n    mode: \"cors\",\n    headers: {\n      \"x-api-key\": publicApiKey,\n    },\n  });\n  proposals.body && State.update({ proposalsStatus: proposalsStatus.body });\n};\nfetchTransfers(state.params);\nconsole.log(\"PROPOSALS\", state.proposals);\nreturn <>{GenericTable}</>;\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/frichard5.near/widget/proposals-status", "fact_widget_deployments_id": "b814b3bbb21dd2db81238d7edd1cfc7d", "inserted_timestamp": "2000-01-01T00:00:00.000Z", "modified_timestamp": "2000-01-01T00:00:00.000Z", "__row_index": 7}