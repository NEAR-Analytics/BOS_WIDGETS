{"tx_hash": "5FoftZupx95d6KjCwgooHitfhTiuzXWr8v5j552tqEuh", "action_id_social": "CQkwGF86RuVvWdkZUsGPX5FT4HuJinNwdRon7cGBXuP7-0-widget", "block_id": 96614753, "block_timestamp": "2023-07-16T14:48:48.107Z", "signer_id": "rubycop.near", "widget_name": "NDC.StyledComponents", "source_code": "const { Button, Dropdown, TextArea } = props;\n\nconst Styled = {\n  Button: styled.button`\n    width: max-content;\n    padding: ${(props) => (Button.size === \"sm\" ? \"4px 12px\" : \"8px 20px\")};\n    height: ${(props) => (Button.size === \"sm\" ? \"28px\" : \"\")};\n    font-size: ${(props) => (Button.size === \"sm\" ? \"12px\" : \"14px\")};\n    border-radius: 10px;\n    font-weight: 500;\n    line-height: 24px;\n    border: 0;\n\n    &.danger {\n      border: 1px solid #c23f38;\n      background: #f1d6d5;\n      color: #c23f38;\n    }\n\n    &.primary {\n      background: #ffd50d;\n\n      &:hover {\n        background: #e7c211;\n      }\n\n      &.dark {\n        color: #fff;\n        background: linear-gradient(90deg, #9333ea 0%, #4f46e5 100%);\n\n        &:hover {\n          background: linear-gradient(90deg, #792ac0 0%, #423abd 100%);\n        }\n      }\n\n      &:disabled {\n        background: #c3cace;\n        color: #828688;\n        border: 0;\n      }\n    }\n\n    &.secondary {\n      background: transparent;\n      border: 1px solid;\n      border-color: #ffd50d;\n      color: #ffd50d;\n\n      &:hover {\n        border-color: #e7c211;\n        color: #e7c211;\n      }\n\n      &.dark {\n        color: #4f46e5;\n        border-color: #4f46e5;\n\n        &:hover {\n          border-color: #2f2a87;\n          color: #2f2a87;\n        }\n      }\n\n      &:disabled {\n        border-color: #c3cace;\n        color: #828688;\n      }\n    }\n\n    i {\n      margin: 0 0 0 5px;\n    }\n  `,\n  Select: styled.select`\n    padding: 8px 10px;\n    width: 100%;\n    height: 40px;\n    background: #ffffff;\n    border: 1px solid #d0d6d9;\n    border-radius: 8px;\n    font-size: 14px;\n    color: #828688;\n  `,\n  TextArea: styled.textarea`\n    padding: 8px 10px;\n    width: 100%;\n    background: #ffffff;\n    border: 1px solid #d0d6d9;\n    border-radius: 8px;\n    font-size: 14px;\n    color: #828688;\n  `,\n};\n\nconst Container = styled.div`\n  button {\n    margin: 5px;\n  }\n  h4 {\n    margin: 10px 0;\n  }\n`;\n\nconst Label = styled.label`\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 500;\n  margin-bottom: 5px;\n`;\n\nif (Button)\n  return (\n    <Styled.Button\n      size={Button.size}\n      className={`align-items-center d-flex ${Button.className ?? \"primary\"}`}\n      onClick={Button.onClick}\n      disabled={Button.disabled}\n    >\n      <div>{Button.text}</div>\n      {Button.icon && (\n        <div className={`${Button.size === \"sm\" ? \"fs-7\" : \"fs-6\"}`}>\n          {Button.icon}\n        </div>\n      )}\n    </Styled.Button>\n  );\n\nif (Dropdown)\n  return (\n    <div>\n      <Label>{Dropdown.label}</Label>\n      <Styled.Select onChange={(e) => Dropdown.handleChange(e.target.value)}>\n        {Dropdown.options.map((opt) => (\n          <>\n            {opt.default ? (\n              <option default value={opt.value}>\n                {opt.title}\n              </option>\n            ) : (\n              <option value={opt.value}>{opt.title}</option>\n            )}\n          </>\n        ))}\n      </Styled.Select>\n    </div>\n  );\n\nif (TextArea) {\n  const handleChange = () => {\n    if (TextArea.limit && TextArea.value.length > TextArea.limit) return;\n\n    TextArea.handleChange();\n  };\n\n  return (\n    <div>\n      <Label>{TextArea.label}</Label>\n      <Styled.TextArea\n        value={TextArea.value}\n        handleChange={handleChange}\n        placeholder={TextArea.placeholder}\n        onChange={TextArea.handleChange}\n        rows={5}\n      />\n      {TextArea.limit && (\n        <div className=\"justify-content-end\">\n          <small className=\"text-secondary\">\n            {TextArea.limit - TextArea.value.length} left\n          </small>\n        </div>\n      )}\n    </div>\n  );\n}\n\nconst WidgetButton = ({ size, className, disabled, text, icon }) => (\n  <Widget\n    src={\"rubycop.near/widget/NDC.StyledComponents\"}\n    props={{\n      Button: {\n        size,\n        className,\n        disabled,\n        text,\n        icon,\n      },\n    }}\n  />\n);\n\nconst WidgetSelect = () => (\n  <Widget\n    src={\"rubycop.near/widget/NDC.StyledComponents\"}\n    props={{\n      Dropdown: {\n        label: \"Select label\",\n        options: [\n          { title: \"Select value\", default: true, value: 0 },\n          { title: \"value 1\", value: 1 },\n          { title: \"value 2\", value: 2 },\n        ],\n      },\n    }}\n  />\n);\n\nconst WidgetTextArea = () => {\n  State.init({ text: \"\" });\n\n  return (\n    <Widget\n      src={\"rubycop.near/widget/NDC.StyledComponents\"}\n      props={{\n        TextArea: {\n          label: \"Select label\",\n          placeholder: \"placeholder text\",\n          limit: 20,\n          value: state.text,\n          handleChange: (e) => State.update({ text: e.target.value }),\n        },\n      }}\n    />\n  );\n};\n\nreturn (\n  <Container>\n    <h4>Buttons</h4>\n    <div className=\"d-flex align-items-end flex-wrap\">\n      <WidgetButton text=\"Primary\" />\n      <WidgetButton text=\"Primary\" icon={<i class=\"bi bi-check-lg\"></i>} />\n      <WidgetButton\n        text=\"Secondary\"\n        className=\"secondary\"\n        icon={<i class=\"bi bi-check-lg\"></i>}\n      />\n      <WidgetButton disabled text=\"Primary\" />\n      <WidgetButton disabled className=\"secondary\" text=\"Secondary\" />\n      <WidgetButton size=\"sm\" text=\"Primary\" />\n      <WidgetButton size=\"sm\" className=\"secondary\" text=\"Secondary\" />\n    </div>\n\n    <div className=\"d-flex align-items-end flex-wrap\">\n      <WidgetButton text=\"Primary Dark\" className=\"primary dark\" />\n      <WidgetButton\n        text=\"Primary Dark\"\n        className=\"primary dark\"\n        icon={<i class=\"bi bi-check-lg\"></i>}\n      />\n      <WidgetButton\n        text=\"Secondary Dark\"\n        className=\"secondary dark\"\n        icon={<i class=\"bi bi-check-lg\"></i>}\n      />\n      <WidgetButton disabled className=\"primary dark\" text=\"Primary dark\" />\n      <WidgetButton disabled className=\"secondary dark\" text=\"Secondary dark\" />\n      <WidgetButton size=\"sm\" className=\"primary dark\" text=\"Primary dark\" />\n      <WidgetButton\n        size=\"sm\"\n        className=\"secondary dark\"\n        text=\"Secondary dark\"\n      />\n    </div>\n\n    <div className=\"d-flex align-items-end flex-wrap\">\n      <WidgetButton\n        text=\"Danger\"\n        className=\"danger\"\n        icon={<i class=\"bi bi-trash\" />}\n      />\n    </div>\n\n    <h4>Select</h4>\n    <WidgetSelect />\n\n    <h4>Textarea</h4>\n    <WidgetTextArea />\n  </Container>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/rubycop.near/widget/NDC.StyledComponents", "fact_widget_deployments_id": "6cc8468480c22426b5f062a1f3954470", "inserted_timestamp": "2000-01-01T00:00:00.000Z", "modified_timestamp": "2000-01-01T00:00:00.000Z", "__row_index": 112}