{"tx_hash": "GQuai6fVRJqi45AGXgUPgFLpyUDmdkNrrAbW1s5xHLPK", "action_id_social": "CGPDBxeKkgQyJpaHRHHHJXfPXRGjTeVKoVHcHGoojNH-0-widget", "block_id": 95376840, "block_timestamp": "2023-06-30T11:39:43.943Z", "signer_id": "rubycop.near", "widget_name": "NDC.Elections.Main", "source_code": "let { ids, org } = props;\n\nids = props.ids ? ids : [0, 1, 2]; // for testing purposes\norg = props.org ? org : \"test\"; // for testing purposes\n\nconst electionContract = \"elections-v1.gwg-testing.near\";\nconst registryContract = \"registry-v1.gwg-testing.near\";\nconst apiKey = \"36f2b87a-7ee6-40d8-80b9-5e68e587a5b5\";\n\nconst houses = [\n  Near.view(electionContract, \"proposal\", { prop_id: ids[0] }),\n  Near.view(electionContract, \"proposal\", { prop_id: ids[1] }),\n  Near.view(electionContract, \"proposal\", { prop_id: ids[2] }),\n];\n\nState.init({\n  selectedHouse: houses[0].id,\n  humanVoted: 0,\n  myVotes: [],\n});\n\n// TODO: Should be grabbed from indexer\nconst totalHumal = 1000;\n\nasyncFetch(\"https://api.pikespeak.ai/election/total-votes\", {\n  headers: {\n    \"x-api-key\": apiKey,\n  },\n}).then((resp) => {\n  State.update({ humanVoted: resp.body });\n});\n\nasyncFetch(\n  `https://api.pikespeak.ai/election/votes-by-voter?voter=${context.accountId}`,\n  {\n    headers: {\n      \"x-api-key\": apiKey,\n    },\n  }\n).then((resp) => {\n  State.update({ myVotes: resp.body });\n});\n\nconst widgets = {\n  header: \"rubycop.near/widget/NDC.Elections.Header\",\n  houses: \"rubycop.near/widget/NDC.Elections.Houses\",\n  candidates: \"rubycop.near/widget/NDC.Elections.Candidates\",\n  statistic: \"rubycop.near/widget/NDC.Elections.Statistic\",\n  activities: \"rubycop.near/widget/NDC.Elections.Activities\",\n};\n\nconst handleSelect = (item) => {\n  State.update({ selectedHouse: item.id });\n};\n\nconst Container = styled.div`\n  padding: 30px 0;\n`;\n\nconst ActivityContainer = styled.div`\n  overflow-y: scroll;\n`;\n\nconst Left = styled.div`\n  padding: 20px;\n  background: #F8F8F9;\n  border-radius: 8px;\n`;\n\nconst Center = styled.div`\n`;\n\nconst Right = styled.div`\n  padding: 20px;\n  margin-bottom: 20px;\n  background: #F8F8F9;\n  border-radius: 8px;\n`;\n\nconst H5 = styled.h5`\n  margin-bottom: 20px;\n`;\n\nreturn (\n  <div>\n    {houses.map((group) => (\n      <>\n        {group.id === state.selectedHouse && (\n          <Widget\n            key={i}\n            src={widgets.header}\n            props={{\n              startTime: group.start,\n              endTime: group.end,\n              type: \"Election\",\n            }}\n          />\n        )}\n      </>\n    ))}\n    <Container className=\"d-flex row\">\n      <Left className=\"col-lg\">\n        <H5>To Vote</H5>\n        <Widget\n          src={widgets.houses}\n          props={{\n            selectedHouse: state.selectedHouse,\n            houses: houses,\n            handleSelect: (item) => handleSelect(item),\n          }}\n        />\n      </Left>\n      <Center className=\"col-lg-6 p-2 p-md-3\">\n        {houses.map((house) => (\n          <>\n            {house.id === state.selectedHouse && (\n              <Widget\n                key={i}\n                src={widgets.candidates}\n                props={{\n                  electionContract,\n                  registryContract,\n                  ndcOrganization: org,\n                  ...house,\n                }}\n              />\n            )}\n          </>\n        ))}\n      </Center>\n\n      <div className=\"col-lg\">\n        <Right className=\"col\">\n          <H5>General</H5>\n          <div className=\"d-flex justify-content-center\">\n            <Widget\n              src={widgets.statistic}\n              props={{\n                voted: state.humanVoted,\n                total: totalHumal,\n              }}\n            />\n          </div>\n        </Right>\n        <Right className=\"col\">\n          <H5>My voting activity</H5>\n          <ActivityContainer className=\"d-flex justify-content-center\">\n            <Widget\n              src={widgets.activities}\n              props={{ myVotes: state.myVotes }}\n            />\n          </ActivityContainer>\n        </Right>\n      </div>\n    </Container>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/rubycop.near/widget/NDC.Elections.Main", "fact_widget_deployments_id": "fd7fc9c7d91c8081125a15dedbca4944", "inserted_timestamp": "2000-01-01T00:00:00.000Z", "modified_timestamp": "2000-01-01T00:00:00.000Z", "__row_index": 68}