{"tx_hash": "3dq5TqMBgqrwuz9GXcbP8sbugHAzp2bmDCFVhPRERsZ3", "action_id_social": "2p7gSivH3vTswUG7rrLDe6REkww1qoJonA1G14PjzgCe-0-widget", "block_id": 100183545, "block_timestamp": "2023-09-01T21:53:52.375Z", "signer_id": "rubycop.near", "widget_name": "NDC.CommunityScoreboard", "source_code": "State.init({\n  data: [],\n  community: \"\",\n});\n\nasyncFetch(`https://scoreboard-ophc7vkxsq-uc.a.run.app/scoreboard`, {\n  method: \"GET\",\n  headers: {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n  },\n}).then((res) => {\n  if (res.body) State.update({ data: res.body.data });\n});\n\nconst Loader = () => (\n  <span\n    className=\"spinner-grow spinner-grow-sm me-1\"\n    role=\"status\"\n    aria-hidden=\"true\"\n  />\n);\n\nconst UserName = styled.div`\n  color: inherit !important;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  font-size: 12px;\n  padding-top: 2px;\n  width: 200px;\n`;\n\nconst Tag = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  padding: 4px 8px;\n  border: 1px solid #4ba6ee;\n  color: #4ba6ee;\n  border-radius: 100px;\n  font-weight: 500;\n  font-size: 11px;\n`;\n\nconst H3 = styled.h3`\n  text-transform: capitalize;\n`;\n\nconst Container = styled.div`\n  flex-direction: row;\n\n  @media (max-width: 1200px) {\n    flex-direction: column;\n  }\n`;\n\nconst Section = styled.div`\n  background: #fdfeff;\n  box-shadow: 0px 0px 20px rgba(0, 0, 0, 0.1);\n  border-radius: 8px;\n  padding: 15px;\n  margin-top: 10px;\n  max-height: 100vh;\n  overflow: auto; \n  font-size: 14px;\n`;\n\nconst Row = styled.div`\n  border-bottom: 1px solid #ececec;\n  padding: 5px 7px;\n  margin: 3px 0;\n  border-radius: 5px;\n`;\nconst Header = styled.div`\n  background: black;\n  color: white;\n  font-size: 18px;\n  font-weight: 600;\n`;\n\nif (state.data.length === 0)\n  return (\n    <>\n      <Loader /> Fetching data ...\n    </>\n  );\n\nconst formData = {};\n\nstate.data.map((item) => {\n  if (formData[item[\"community-name\"]])\n    formData[item[\"community-name\"]].push(item);\n  else formData[item[\"community-name\"]] = [item];\n});\n\nconst communityUsers = formData[state.community];\nconst getCommunityVerticals = () => {\n  const arr = Object.values(formData).map(\n    (arr) => arr[0][\"community-vertical\"]\n  );\n  return [...new Set(arr)];\n};\nconst getCommunityNames = () =>\n  Object.values(formData)\n    .sort((a, b) => b.length - a.length)\n    .map((u) => u[0][\"community-name\"]);\n\nconst bestOnVertical = () => {\n  const users = Object.values(formData).sort((a, b) => b.length - a.length);\n\n  return getCommunityVerticals().map((vertical) =>\n    users.find((c) => c[0][\"community-vertical\"] === vertical)\n  );\n};\n\nreturn (\n  <div className=\"d-flex flex-column justify-content-center w-100\">\n    <Header className=\"d-flex p-3 px-4 align-items-center rounded gap-2\">\n      <img\n        height=\"30px\"\n        src=\"https://pbs.twimg.com/profile_images/1622941553839816707/nmf3MWw1_400x400.jpg\"\n      />\n      <span>Communities</span>\n    </Header>\n    <Container className=\"d-flex justify-content-between gap-3 mt-3 w-100\">\n      <Section className=\"w-100\">\n        <h4>Community Users</h4>\n        <div className=\"mt-3 mb-4\">\n          <Widget\n            src={\"near/widget/Select\"}\n            props={{\n              label: \"Select community\",\n              value: state.community,\n              onChange: (item) => State.update({ community: item.text }),\n              options: getCommunityNames().map((community) => {\n                return {\n                  text: community,\n                  value: community,\n                };\n              }),\n            }}\n          />\n        </div>\n\n        {communityUsers && (\n          <>\n            <h5>{state.community}</h5>\n            <div className=\"d-flex gap-2\">\n              <Tag>\n                Rank: {getCommunityNames().indexOf(state.community) + 1}\n              </Tag>\n              <Tag>Users: {communityUsers.length}</Tag>\n              <Tag>{communityUsers[0][\"community-vertical\"]}</Tag>\n            </div>\n\n            <div className=\"d-flex justify-content-between my-2\">\n              <div>\n                <small className=\"text-secondary\">User Profile</small>\n              </div>\n              <div>\n                <small className=\"text-secondary\">Joined at</small>\n              </div>\n            </div>\n            <hr className=\"my-2\" />\n\n            {communityUsers\n              .sort((a, b) => new Date(b.created_at) - new Date(a.created_at))\n              .map((user) => (\n                <Row className=\"d-flex justify-content-between align-items-center\">\n                  <Widget\n                    src=\"near/widget/AccountProfileOverlay\"\n                    props={{\n                      accountId: user.account,\n                      children: (\n                        <div className=\"d-flex justify-items-center\">\n                          <Widget\n                            src=\"mob.near/widget/ProfileImage\"\n                            props={{\n                              accountId: user.account,\n                              imageClassName: \"rounded-circle w-100 h-100\",\n                              style: {\n                                width: \"24px\",\n                                height: \"24px\",\n                                marginRight: 5,\n                              },\n                            }}\n                          />\n                          <UserName>{user.account}</UserName>\n                        </div>\n                      ),\n                    }}\n                  />\n\n                  <small className=\"text-secondary\">\n                    {new Date(user.created_at).toLocaleDateString(\"en-US\", {\n                      day: \"2-digit\",\n                      month: \"short\",\n                    })}\n                    &middot;\n                    {new Date(user.created_at).toLocaleTimeString(\"en-US\", {\n                      hour: \"2-digit\",\n                    })}\n                  </small>\n                </Row>\n              ))}\n          </>\n        )}\n      </Section>\n      <Section className=\"w-100\">\n        <h4> Best of Category </h4>\n        <div className=\"d-flex justify-content-between mt-3 mb-2\">\n          <div className=\"w-100\">\n            <small className=\"text-secondary\">Category</small>\n          </div>\n          <div className=\"w-100\">\n            <small className=\"text-secondary\">Community</small>\n          </div>\n          <div className=\"w-50\">\n            <small className=\"text-secondary\">Users</small>\n          </div>\n          <div className=\"w-25\">\n            <small className=\"text-secondary\">#</small>\n          </div>\n        </div>\n        <hr className=\"my-2\" />\n        {bestOnVertical().map((item) => (\n          <Row className=\"d-flex justify-content-between\">\n            <div className=\"w-100\">\n              <small>{item[0][\"community-vertical\"]}</small>\n            </div>\n            <div className=\"w-100\">\n              <small>{item[0][\"community-name\"]}</small>\n            </div>\n            <div className=\"w-50\">\n              <small>{item.length}</small>\n            </div>\n            <div className=\"w-25\">\n              <small>\n                {getCommunityNames().indexOf(item[0][\"community-name\"]) + 1}\n              </small>\n            </div>\n          </Row>\n        ))}\n      </Section>\n      <Section className=\"w-100\">\n        <h4> Best of Users </h4>\n        <div className=\"d-flex justify-content-between mt-3 mb-2\">\n          <div className=\"w-25\">\n            <small className=\"text-secondary\">#</small>\n          </div>\n          <div className=\"w-100\">\n            <small className=\"text-secondary\">Community</small>\n          </div>\n          <div className=\"w-50\">\n            <small className=\"text-secondary\">Users</small>\n          </div>\n          <div className=\"w-100\">\n            <small className=\"text-secondary\">Category</small>\n          </div>\n        </div>\n        <hr className=\"my-2\" />\n        {Object.values(formData)\n          .sort((a, b) => b.length - a.length)\n          .map((item, index) => (\n            <Row className=\"d-flex justify-content-between\">\n              <div className=\"w-25\">\n                <small>{index + 1}</small>\n              </div>\n              <div className=\"w-100\">\n                <small>{item[0][\"community-name\"]}</small>\n              </div>\n              <div className=\"w-50\">\n                <small>{item.length}</small>\n              </div>\n              <div className=\"w-100\">\n                <small>{item[0][\"community-vertical\"]}</small>\n              </div>\n            </Row>\n          ))}\n      </Section>\n    </Container>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/rubycop.near/widget/NDC.CommunityScoreboard", "fact_widget_deployments_id": "9a82e6018ef5171c1d9d9ecf81df1aa0", "inserted_timestamp": "2023-09-01T23:44:25.853Z", "modified_timestamp": "2023-09-01T23:44:25.853Z", "__row_index": 10}