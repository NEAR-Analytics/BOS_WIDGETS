{"tx_hash": "F4h6nuqGf4qzAq263c8TjxzWuqsFwGC4jGtABdiZV4kf", "action_id_social": "5jDsPt1wtYtZd13aFvrb93KAVDZuCbYMDqMw7AKYuS38-0-widget", "block_id": 113978030, "block_timestamp": "2024-03-02T23:32:51.738Z", "signer_id": "roshaan.near", "widget_name": "ModelMarketplace.Model.AgentCreate", "source_code": "const { typeMatch } = VM.require(\"devhub.near/widget/core.lib.struct\");\n\nif (!typeMatch) {\n  return <p>Loading modules...</p>;\n}\n\nconst { data, onSubmit, onCancel } = props;\nconst onSubmitDefault = (formValues) => {\n  const { name, ...rest } = formValues;\n  const agent = { [name]: rest };\n  Social.set({ agent: agent }, { force: true });\n};\nconst onSubmitFunction = onSubmit ?? onSubmitDefault;\n\nconst AgentInputsPartialSchema = {\n  name: {\n    inputProps: {\n      min: 2,\n      max: 80,\n      allowCommaAndSpace: false,\n      placeholder: \"Choose a unique identifier for your agent. Example: travel-agent.\",\n      required: true,\n    },\n    label: \"Name\",\n    order: 1,\n  },\n  displayName: {\n    inputProps: {\n      min: 2,\n      max: 255,\n      placeholder: \"The name that will be displayed to users.\",\n      required: true,\n    },\n    label: \"Display Name\",\n    order: 2,\n  },\n  prompt: {\n    inputProps: {\n      min: 2,\n      max: 8192,\n      placeholder: \"The prompt for the agent.\",\n      required: true,\n    },\n    multiline: true,\n    label: \"Prompt\",\n    order: 3,\n  },\n  // preferredProvider: {\n  //     inputProps: {\n  //         min: 2,\n  //         max: 255,\n  //         placeholder: \"The preferred provider for the agent.\",\n  //         required: false,\n  //     },\n  //     label: \"Preferred Provider\",\n  //     order: 4,\n  // },\n  // preferredModel: {\n  //   inputProps: {\n  //     min: 2,\n  //     max: 255,\n  //     placeholder: \"The preferred model for the agent.\",\n  //     required: false,\n  //   },\n  //   label: \"Preferred Model\",\n  //   order: 5,\n  // },\n  // variables: {\n  //     inputProps: {\n  //         min: 2,\n  //         max: 255,\n  //         placeholder: \"The variables for the agent.\",\n  //         required: false,\n  //     },\n  //     label: \"A comma separated list of variables that should be passed into the prompt. Example: ['rfp', 'proposal'].\",\n  //     order: 6,\n  // },\n  component: {\n    inputProps: {\n      min: 2,\n      max: 255,\n      placeholder: \"The component used to run the agent, default is near/widget/ModelMarketplace.Model.AgentChat\",\n      required: false,\n    },\n    label: \"Component\",\n    order: 7,\n  },\n  logoUrl: {\n    inputProps: {\n      min: 4,\n      max: 255,\n      placeholder: \"The logo URL for the agent.\",\n      required: false,\n    },\n\n    label: \"Logo URL\",\n    order: 8,\n  },\n  // tools: {\n  //     inputProps: {\n  //         min: 2,\n  //         max: 255,\n  //         placeholder: \"A JSON array of Tools or Functions the agent should have access to.\",\n  //         required: false,\n  //     },\n  //\n  //     label: \"Tools\",\n  //     order: 9,\n  // },\n  // properties: {\n  //   inputProps: {\n  //     min: 2,\n  //     max: 1024,\n  //     placeholder: \"JSON properties for the agent.\",\n  //     required: false,\n  //   },\n  //\n  //   label: \"Properties\",\n  //   order: 10,\n  // },\n};\n\nconst agentInputsValidator = (formValues) =>\n  typeMatch(formValues) && Object.values(formValues).every((value) => typeof value === \"string\" && value.length > 0);\n\nreturn (\n  <Widget\n    src=\"devhub.near/widget/devhub.components.organism.Configurator\"\n    props={{\n      heading: \"Agent information\",\n      fullWidth: true,\n      isActive: true,\n      isUnlocked: true,\n      isValid: agentInputsValidator,\n      onSubmit: onSubmitFunction,\n      schema: AgentInputsPartialSchema,\n      submitIcon: {\n        type: \"bootstrap_icon\",\n        variant: \"bi-rocket-takeoff-fill\",\n      },\n      submitLabel: data ? \"Save\" : \"Launch\",\n      onCancel: onCancel,\n      externalState: data,\n    }}\n  />\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/roshaan.near/widget/ModelMarketplace.Model.AgentCreate", "fact_widget_deployments_id": "dc65e7d2dc74a3a1edab99758f282244", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}