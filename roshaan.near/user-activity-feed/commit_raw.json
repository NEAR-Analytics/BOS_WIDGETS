{"tx_hash": "Dp6goCXqSayAe3PG3JpX8z61bTTKvuJHvFnzdopsWnP9", "action_id_social": "32MpjwqB4Yh37E6mt9DyaFQHQobMji3bRXaByQErnoF4-0-widget", "block_id": 95642910, "block_timestamp": "2023-07-03T23:50:07.544Z", "signer_id": "roshaan.near", "widget_name": "user-activity-feed", "source_code": "const QUERYAPI_ENDPOINT = `https://queryapi-hasura-graphql-24ktefolwq-ew.a.run.app/v1/graphql/`;\n\nState.init({\n  data: [],\n});\n\nconst query = `query user_activity {\n    roshaan_near_user_activity_user_last_activity(order_by: {block_height: desc}) {\n      activity_id\n      block_height\n      account_id\n      activity_type\n      block_timestamp\n    }\n  }`;\n\nfunction fetchGraphQL(operationsDoc, operationName, variables) {\n  return asyncFetch(QUERYAPI_ENDPOINT, {\n    method: \"POST\",\n    headers: { \"x-hasura-role\": `roshaan_near` },\n    body: JSON.stringify({\n      query: operationsDoc,\n      variables: variables,\n      operationName: operationName,\n    }),\n  });\n}\n\nfetchGraphQL(query, \"user_activity\", {}).then((result) => {\n  if (result.status === 200) {\n    if (result.body.data) {\n      const data =\n        result.body.data.roshaan_near_user_activity_user_last_activity;\n      State.update({ data });\n      console.log(data);\n    }\n  }\n});\n\nconst Activity = styled.div`\n  position: relative;\n\n  &::before {\n    content: \"\";\n    display: block;\n    position: absolute;\n    left: 19px;\n    top: 52px;\n    bottom: 12px;\n    width: 2px;\n\n    background: #eceef0;\n  }\n`;\n\nconst Header = styled.div`\n  margin-bottom: 0;\n  display: inline-flex;\n`;\n\nconst Body = styled.div`\n  padding-left: 52px;\n  padding-bottom: 1px;\n`;\n\nconst Content = styled.div`\n  img {\n    display: block;\n    max-width: 100%;\n    max-height: 80vh;\n    margin: 0 0 12px;\n  }\n`;\n\nconst Text = styled.p`\n  display: block;\n  margin: 0;\n  font-size: 14px;\n  line-height: 20px;\n  font-weight: 400;\n  color: #687076;\n  white-space: nowrap;\n`;\n\nconst renderData = (a) => {\n  const timeMs = parseFloat(a.block_timestamp) / 1e6;\n  const date = new Date(timeMs);\n\n  return (\n    <Activity style={{ margin: \"10px\" }}>\n      <Header>\n        <div className=\"row\">\n          <div className=\"col-auto\">\n            <Widget\n              src=\"near/widget/AccountProfile\"\n              props={{\n                accountId: a.account_id,\n                hideAccountId: false,\n                inlineContent: (\n                  <>\n                    <Text as=\"span\">\uff65</Text>\n                    <Text className=\"col-auto\">\n                      Last Online: {date.toDateString()}\n                    </Text>\n                  </>\n                ),\n              }}\n            />\n          </div>\n        </div>\n      </Header>\n      <Body>\n        <Content>\n          <>\n            <Widget\n              src=\"mob.near/widget/TimeAgo\"\n              props={{ blockHeight: a.block_height }}\n            />{\" \"}\n            ago\n          </>\n        </Content>\n      </Body>\n    </Activity>\n  );\n};\n\nconst renderedData = state.data.map(renderData);\nreturn (\n  <div style={{ border: \"0.5px solid black\", borderRadius: \"20px\" }}>\n    {renderedData}\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/roshaan.near/widget/user-activity-feed", "fact_widget_deployments_id": "b5cccdad60e6e1851a48a0a5e27aa1cf", "inserted_timestamp": "2000-01-01T00:00:00.000Z", "modified_timestamp": "2000-01-01T00:00:00.000Z", "__row_index": 1}