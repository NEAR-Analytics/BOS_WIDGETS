{"tx_hash": "F4h6nuqGf4qzAq263c8TjxzWuqsFwGC4jGtABdiZV4kf", "action_id_social": "5jDsPt1wtYtZd13aFvrb93KAVDZuCbYMDqMw7AKYuS38-0-widget", "block_id": 113978030, "block_timestamp": "2024-03-02T23:32:51.738Z", "signer_id": "roshaan.near", "widget_name": "ModelMarketplace.Model.AgentSummary", "source_code": "if (!props.model) return \"\";\nconst { href } = VM.require(\"devhub.near/widget/core.lib.url\");\nif (!href) {\n  return <></>;\n}\n\nconst { model, showActions } = props;\nconst { accountId, name, ipInfo, nftInfo } = model\nconsole.log(ipInfo, \"show meeee\")\nconst { id: ip } = ipInfo\nconsole.log(ipInfo, \"this is ip info dude\")\nconst { modelOwnerAddress, modelName, modelDescription, modelLogo: logoUrl, modelWeightUri, finetuneDataHash, finetunedModelHash } = nftInfo;\n\nconst storyIPDashboardLink = \"https://explorer.storyprotocol.xyz/ipa/0xbae67fcefca2ee33918e6d648ec548942338afbc\" ;\nconst modelWeightsLink = \"https://ipfs.io/ipfs/\" + modelWeightUri.slice(6, modelWeightUri.length);\n\nfunction shortenEthAddress(address, length) {\n  if (address.length <= length * 2) {\n    return address;\n  }\n  return `${address.slice(0, length)}...${address.slice(-length)}`;\n}\n\nconst agentComponent = `roshaan.near/widget/ModelMarketplace.Model.AgentChat`;\nconst chatLink = href({\n  widgetSrc: agentComponent,\n  params: { src: `${accountId}/agent/${name}` },\n});\nconst agentChatUrl = `https://near.org/${agentComponent}?src=${accountId}/agent/${name}`;\n\nconst size = props.size || \"small\";\n\nconst sizes = {\n  small: {\n    gap: \"16px\",\n    thumbnail: \"100px\",\n    title: \"16px\",\n  },\n  large: {\n    gap: \"16px\",\n    thumbnail: \"200px\",\n    title: \"32px\",\n  },\n};\n\nconst Wrapper = styled.div``;\n\nconst Header = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${(p) => sizes[p.size].gap};\n  margin-bottom: 32px;\n\n  > * {\n    min-width: 0;\n  }\n\n  @media (max-width: 770px) {\n    gap: 16px;\n  }\n`;\n\nconst TagsWrapper = styled.div`\n  margin-bottom: 16px;\n`;\n\nconst Actions = styled.div`\n  display: flex;\n  gap: 12px;\n  flex-wrap: wrap;\n  margin-bottom: 16px;\n`;\n\nconst Title = styled.h1`\n  font-size: ${(p) => sizes[p.size].title};\n  line-height: 1.2em;\n  color: #11181c;\n  margin: 0 0 8px;\n  font-weight: 600;\n\n  @media (max-width: 770px) {\n    font-size: 16px;\n    margin: 0;\n  }\n`;\n\nconst Thumbnail = styled.div`\n  width: ${(p) => sizes[p.size].thumbnail};\n  height: ${(p) => sizes[p.size].thumbnail};\n  flex-shrink: 0;\n  border: 1px solid #eceef0;\n  border-radius: 12px;\n  overflow: hidden;\n  box-shadow:\n    0px 1px 3px rgba(16, 24, 40, 0.1),\n    0px 1px 2px rgba(16, 24, 40, 0.06);\n\n  img {\n    object-fit: cover;\n    width: 100%;\n    height: 100%;\n  }\n\n  @media (max-width: 770px) {\n    width: 58px;\n    height: 58px;\n  }\n`;\n\nconst sharedButtonStyles = `\n  display: inline-flex;\n  align-items: center;\n  gap: 8px;\n  padding: 8px 16px;\n  height: 32px;\n  border-radius: 50px;\n  font-weight: 600;\n  font-size: 12px;\n  line-height: 15px;\n  text-align: center;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    text-decoration: none;\n    outline: none;\n  }\n\n  i {\n    color: #7E868C;\n  }\n\n  .bi-16 {\n    font-size: 16px;\n  }\n`;\n\nconst Button = styled.button`\n  ${sharedButtonStyles}\n  color: ${(p) => (p.primary ? \"#09342E\" : \"#11181C\")} !important;\n  background: ${(p) => (p.primary ? \"#59E692\" : \"#FBFCFD\")};\n  border: ${(p) => \"none\"};\n\n  &:hover,\n  &:focus {\n    background: ${(p) => (p.primary ? \"rgb(112 242 164)\" : \"#ECEDEE\")};\n  }\n`;\n\nconst Text = styled.p`\n  margin: 0;\n  font-size: 14px;\n  line-height: 20px;\n  color: ${(p) => (p.bold ? \"#11181C\" : \"#687076\")};\n  font-weight: ${(p) => (p.bold ? \"600\" : \"400\")};\n  font-size: ${(p) => (p.small ? \"12px\" : \"14px\")};\n  overflow: ${(p) => (p.ellipsis ? \"hidden\" : \"visible\")};\n  text-overflow: ${(p) => (p.ellipsis ? \"ellipsis\" : \"unset\")};\n  white-space: ${(p) => (p.ellipsis ? \"nowrap\" : \"\")};\n\n  i {\n    margin-right: 4px;\n  }\n`;\n\nconst TextLink = styled(\"Link\")`\n  display: block;\n  margin: 0;\n  font-size: 14px;\n  line-height: 20px;\n  font-weight: 400;\n  font-size: 14px;\n  white-space: nowrap;\n  outline: none;\n  overflow-x: hidden;\n  text-overflow: ellipsis;\n\n  &:focus,\n  &:hover {\n    text-decoration: underline;\n  }\n\n  i {\n    color: #7e868c;\n    margin-right: 8px;\n  }\n`;\nconst mintLicense = () => {\n\n};\n\nreturn (\n  <Wrapper>\n    <Header size={size}>\n      <Thumbnail size={size}>\n        <Widget\n          src=\"mob.near/widget/Image\"\n          props={{\n            image: { url: logoUrl },\n            fallbackUrl: \"https://ipfs.near.social/ipfs/bafkreibysr2mkwhb4j36h2t7mqwhynqdy4vzjfygfkfg65kuspd2bawauu\",\n            alt: name,\n          }}\n        />\n      </Thumbnail>\n\n      <div>\n        <Title size={size}>{modelName}</Title>\n        <Text ellipsis>by {shortenEthAddress(modelOwnerAddress, 6)}</Text>\n        <TextLink\n          href={storyIPDashboardLink}\n        >\n          View On StoryProtocol Dashboard\n        </TextLink>\n\n        <TextLink\n          href={modelWeightsLink}\n        >Download Model Weights</TextLink>\n        <Widget\n          src=\"near/widget/DIG.Button\"\n          props={{\n            onClick: mintLicense,\n            iconLeft: editIcon,\n            variant: \"affirmative\",\n            fill: \"solid\",\n            size: \"large\",\n            label: \"Mint License\",\n          }}\n        />\n\n      </div>\n    </Header>\n\n    {tags && tags.length > 0 && (\n      <TagsWrapper>\n        <Widget\n          src=\"near/widget/Tags\"\n          props={{\n            tags,\n          }}\n        />\n      </TagsWrapper>\n    )}\n\n    {showActions && (\n      <Actions>\n        <Widget\n          src=\"near/widget/CopyUrlButton\"\n          props={{\n            url: agentChatUrl,\n          }}\n        />\n        <Widget\n          src=\"near/widget/ShareButton\"\n          props={{\n            postType: \"AI Agent\",\n            url: agentChatUrl,\n          }}\n        />\n        <Widget\n          src=\"near/widget/SocialIndexActionButton\"\n          props={{\n            actionName: \"star\",\n            actionUndoName: \"unstar\",\n            item: {\n              type: \"social\",\n              path: `${accountId}/agent/${name}`,\n            },\n            notifyAccountId: accountId,\n            button: (starCount, starIsActive, starOnClick) => (\n              <Button type=\"button\" onClick={starOnClick} aria-label=\"Star this agent\">\n                {starIsActive ? (\n                  <i className=\"bi bi-star-fill\" style={{ color: \"var(--amber10)\" }} />\n                ) : (\n                  <i className=\"bi bi-star\" />\n                )}{\" \"}\n                {starCount}\n              </Button>\n            ),\n          }}\n        />{\" \"}\n        <Widget\n          src=\"near/widget/DIG.Tooltip\"\n          props={{\n            content: \"Use agent\",\n            trigger: (\n              <Link to={chatLink} style={{ all: \"unset\" }}>\n                <Widget\n                  src=\"near/widget/DIG.Button\"\n                  props={{\n                    label: \"Use Agent\",\n                    iconLeft: \"ph-bold ph-chat-teardrop-text\",\n                    variant: \"affirmative\",\n                    fill: \"solid\",\n                    size: size,\n                  }}\n                />\n              </Link>\n            ),\n          }}\n        />\n      </Actions>\n    )}\n  </Wrapper>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/roshaan.near/widget/ModelMarketplace.Model.AgentSummary", "fact_widget_deployments_id": "c2fe80ea6c68391ac5e0765575ecc1e5", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}