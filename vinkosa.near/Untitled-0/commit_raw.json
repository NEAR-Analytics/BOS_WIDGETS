{"tx_hash": "BSRcSsshDHjr1hYPkXQ4sAw7uQCzjBLsM1QWTwKggGDv", "action_id_social": "2GBtXYQE5Y64hxitVxQCU1rfVHLjXW8e4tHwFWVuforb-0-widget", "block_id": 118712183, "block_timestamp": "2024-05-11T14:26:57.877Z", "signer_id": "vinkosa.near", "widget_name": "Untitled-0", "source_code": "const initialData = [\n  { id: 1, name: \"John\", amountOwed: 100 },\n  { id: 2, name: \"Alice\", amountOwed: 200 },\n  { id: 3, name: \"Bob\", amountOwed: 50 },\n  { id: 4, name: \"Emily\", amountOwed: 300 },\n  { id: 5, name: \"Michael\", amountOwed: 150 },\n];\n\nconst EditableList = () => {\n  const [data, setData] = useState(initialData);\n\n  const handleNameChange = (id, newName) => {\n    setData((prevData) =>\n      prevData.map((item) =>\n        item.id === id ? { ...item, name: newName } : item\n      )\n    );\n  };\n\n  const handleAmountChange = (id, newAmount) => {\n    setData((prevData) =>\n      prevData.map((item) =>\n        item.id === id ? { ...item, amountOwed: newAmount } : item\n      )\n    );\n  };\n\n  const toggleEdit = (id) => {\n    setData((prevData) =>\n      prevData.map((item) =>\n        item.id === id ? { ...item, editable: !item.editable } : item\n      )\n    );\n  };\n\n  const getTotalAmountOwed = () => {\n    return data.reduce((total, person) => total + person.amountOwed, 0);\n  };\n  const handleSubmit = () => {\n    // Handle submission logic here\n    console.log(\"Form submitted!\");\n    Social.set({ collectionList: { data } });\n  };\n  return (\n    <>\n      <h2>Editable List</h2>\n      <table>\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>Name</th>\n            <th>Amount Owed</th>\n            <th>Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          {data.map((person, index) => (\n            <tr key={person.id}>\n              <td>{index + 1}</td>\n              <td>\n                {person.editable ? (\n                  <input\n                    type=\"text\"\n                    value={person.name}\n                    onChange={(e) =>\n                      handleNameChange(person.id, e.target.value)\n                    }\n                  />\n                ) : (\n                  person.name\n                )}\n              </td>\n              <td>\n                {person.editable ? (\n                  <input\n                    type=\"number\"\n                    value={person.amountOwed}\n                    onChange={(e) =>\n                      handleAmountChange(person.id, parseFloat(e.target.value))\n                    }\n                  />\n                ) : (\n                  `$${person.amountOwed}`\n                )}\n              </td>\n              <td>\n                <button onClick={() => toggleEdit(person.id)}>\n                  {person.editable ? \"Save\" : \"Edit\"}\n                </button>\n              </td>\n            </tr>\n          ))}\n          <tr>\n            <td colSpan=\"3\">Total:</td>\n            <td>${getTotalAmountOwed()}</td>\n          </tr>\n        </tbody>\n      </table>\n      <button onClick={handleSubmit}>Submit</button>\n    </>\n  );\n};\n\nreturn EditableList();\n", "metadata": {"fork_of": "vinkosa.near/widget/Untitled-0@118571367"}, "branch": {"draft": null}, "widget_modules_used": null, "widget_url": "https://near.social/#/vinkosa.near/widget/Untitled-0", "fact_widget_deployments_id": "4006cb9c4e1a065240d7a44ef3395667", "inserted_timestamp": "2024-05-11T15:40:05.414Z", "modified_timestamp": "2024-05-14T15:45:11.318Z", "__row_index": 70}