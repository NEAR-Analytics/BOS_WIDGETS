{"tx_hash": "7FBkHCg2hXAoRSNULRaV3vLJMcxrnBagBoUjjngKQYbT", "action_id_social": "GwYNMzyNDefqarLiuLpShYLWjZRbW7dqDqGDFadSAnYZ-0-widget", "block_id": 96916488, "block_timestamp": "2023-07-20T13:15:28.978Z", "signer_id": "pierre-dev.near", "widget_name": "MetaPool.Data.Unstake", "source_code": "const accountId = props.accountId || context.accountId;\n\nconst { config, accountDetails, onLoad } = props;\nif (!config) {\n  return \"Component cannot be loaded. Missing `config` props\";\n}\n\n// one hour in ms\nconst HOUR_MS = 60 * 60 * 1000;\n\nfunction nsToMs(ns) {\n  return Math.round((ns ?? 0) / 1e6);\n}\n\nfunction callNearRpc(method, params) {\n  const options = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      jsonrpc: \"2.0\",\n      id: \"dontcare\",\n      method,\n      params,\n    }),\n  };\n  return fetch(config.nodeUrl, options).body.result;\n}\n\nfunction getValidators() {\n  return callNearRpc(\"validators\", [null]);\n}\n\nfunction getBlock(blockId) {\n  return callNearRpc(\n    \"block\",\n    !!blockId\n      ? {\n          block_id: blockId,\n        }\n      : {\n          finality: \"final\",\n        }\n  );\n}\n\nfunction getEpochInfo() {\n  const now = new Date().getTime();\n  const latestBlock = getBlock();\n  const latestBlockTimestamp = nsToMs(latestBlock.header.timestamp);\n  const latestBlockHeight = latestBlock.header.height;\n\n  // last epoch\n  const epochEndBlock = getBlock(latestBlock.header.next_epoch_id);\n  const epochStartBlock = getBlock(latestBlock.header.epoch_id);\n  const epochEndBlockHeight = epochEndBlock.header.height;\n  const epochStartBlockHeight = epochStartBlockHeight;\n\n  let epochStartTimestamp = nsToMs(epochStartBlock.header.timestamp);\n  let epochEndTimestamp = nsToMs(epochEndBlock.header.timestamp);\n\n  let epochBlockNum = epochEndBlockHeight - epochStartBlockHeight;\n  let epochLengthMs = epochEndTimestamp - epochStartTimestamp;\n  if (epochBlockNum === 0) {\n    epochBlockNum = 43200;\n    epochLengthMs = 14 * HOUR_MS;\n    const scale = Big(latestBlockHeight)\n      .sub(epochEndBlockHeight)\n      .div(epochBlockNum)\n      .toNumber();\n    epochEndTimestamp = latestBlockTimestamp - epochLengthMs * scale;\n    epochStartTimestamp = epochEndTimestamp - epochLengthMs;\n  }\n\n  return {\n    lastEpochLengthHours: epochLengthMs / HOUR_MS,\n    hoursTillEpochEnd: (epochEndTimestamp + epochLengthMs - now) / HOUR_MS,\n  };\n}\n\nfunction estimateUnstakeEndTime(endEpochHeight) {\n  const validators = getValidators();\n  const currentEpochHeight = validators.epoch_height;\n\n  if (currentEpochHeight >= endEpochHeight) {\n    return {\n      ready: true,\n    };\n  }\n\n  const { hoursTillEpochEnd, lastEpochLengthHours } = getEpochInfo();\n  const EXTRA_HOURS = 3;\n  const remainingHours =\n    (endEpochHeight - currentEpochHeight - 1) * lastEpochLengthHours +\n    hoursTillEpochEnd +\n    EXTRA_HOURS;\n\n  if (remainingHours && remainingHours > 0) {\n    return {\n      ready: false,\n      timestamp: Date.now() + remainingHours * HOUR_MS,\n      remainingHours: Math.floor(remainingHours).toString(),\n    };\n  } else {\n    return null;\n  }\n}\n\nif (onLoad) {\n  const endTime =\n    accountDetails && accountDetails.unstaked_available_epoch_height\n      ? estimateUnstakeEndTime(accountDetails.unstaked_available_epoch_height)\n      : {};\n\n  if (accountDetails) {\n    onLoad({\n      amount: accountDetails.unstaked_balance,\n      canWithdraw: accountDetails.can_withdraw,\n      endTime,\n    });\n  }\n}\n\nreturn <div style={{ display: \"none\" }} />;\n", "metadata": {"description": "StNEAR Unstake Data. You can query unstake information including delayed unstake end time with the `onLoad()` function.", "image": {"ipfs_cid": "bafkreici2aqxke5ogocdqlhlfqxygwicwynmyaa4b4jqiioqpltj25fhfu"}, "name": "Unstake Data | StNEAR", "tags": {"component": "", "data": "", "defi": "", "stnear": "", "unstake": "", "widget": ""}}, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/pierre-dev.near/widget/MetaPool.Data.Unstake", "fact_widget_deployments_id": "ffc7d8c64167be43d2c0d584a3d28d52", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}