{"tx_hash": "7FBkHCg2hXAoRSNULRaV3vLJMcxrnBagBoUjjngKQYbT", "action_id_social": "GwYNMzyNDefqarLiuLpShYLWjZRbW7dqDqGDFadSAnYZ-0-widget", "block_id": 96916488, "block_timestamp": "2023-07-20T13:15:28.978Z", "signer_id": "pierre-dev.near", "widget_name": "MetaPool", "source_code": "/** common lib start */\nconst accountId = props.accountId || context.accountId;\nconst isSignedIn = !!accountId;\nconst NEAR_DECIMALS = 24;\nconst StNEAR_DECIMALS = 24;\nconst BIG_ROUND_DOWN = 0;\nconst MIN_BALANCE_CHANGE = 0.5;\n\nfunction isValid(a) {\n  if (!a) return false;\n  if (isNaN(Number(a))) return false;\n  if (a === \"\") return false;\n  return true;\n}\n/** common lib end */\n\n// Config for meta pool app\nfunction getConfig(network) {\n  switch (network) {\n    case \"mainnet\":\n      return {\n        ownerId: \"pierre-dev.near\",\n        contractId: \"meta-pool.near\",\n        nodeUrl: \"https://rpc.mainnet.near.org\",\n        appUrl: \"https://www.metapool.app\",\n      };\n    case \"testnet\":\n      return {\n        ownerId: \"pierre-dev.near\",\n        contractId: \"meta-v2.pool.testnet\",\n        nodeUrl: \"https://rpc.testnet.near.org\",\n        appUrl: \"https://www.metapool.app\",\n      };\n    default:\n      throw Error(`Unconfigured environment '${network}'.`);\n  }\n}\nconst config = getConfig(context.networkId);\n\nState.init({\n  page: \"stake\", // \"stake\" | \"account\"\n  nearBalance: \"\",\n  unstakeInfo: {},\n  token: \"near\", // \"near\" | \"wnear\"\n  action: \"stake\", // \"stake\" | \"unstake\" | \"liquid-unstake\"\n});\n\nconst Main = styled.div`\n  display: flex;\n  flex-direction: row;\n  /* justify-content: center; */\n  /* align-items: center; */\n  height: 100%;\n  justify-content: space-between;\n\n`;\n\nconst Body = styled.div`\n  /* position: relative; */\n  color: black;\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 50px;\n`;\n\nconst Sidebar = styled.div`\n  flex: 1; // take up a portion of the available space\n`;\n\nconst Content = styled.div`\n  flex: 3; // take up the rest of the available space\n  margin-left: 20px;\n  display: flex;\n`;\n\nconst SelectToken = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding-block-end: 20px;\n  width: 100%;\n`;\n\nconst TokensList = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 10px;\n`;\n\nconst TokensItem = styled.button`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  padding: 10px 18px;\n  width: 12em;\n  text-align: left;\n  align-items: center;\n\n  border: 0.8px solid rgb(215, 224, 228);\n  background: rgb(247, 249, 251);\n  opacity: 0.8;\n\n  border-radius: 38px;\n\n  ${({ active }) =>\n    active\n      ? `\n    background: rgb(206, 255, 26);\n  `\n      : `\n    :hover {\n      background: rgb(215, 224, 228);\n    }\n  `}\n\n  \n// add support for disabled \n  ${({ disabled }) =>\n    disabled\n      ? `\n    background: rgb(215, 224, 228);\n    opacity: 0.5;\n    :hover {\n      background: rgb(215, 224, 228);\n    }\n  ` : ``}\n\n\n  div {\n    display: flex;\n    flex-direction: column;\n  }\n`;\n\nconst ActionItem = styled.button`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  padding: 8px 16px;\n  width: 12em;\n  text-align: left;\n  align-items: center;\n\n  border: 0.8px solid rgb(215, 224, 228);\n  background: rgb(247, 249, 251);\n  opacity: 0.8;\n\n  border-radius: 24px;\n\n  ${({ active }) =>\n    active\n      ? `\n    background: rgb(206, 255, 26);\n  `\n      : `\n    :hover {\n      background: rgb(215, 224, 228);\n    }\n  `}\n\n\n  div {\n    display: flex;\n    flex-direction: column;\n  }\n`;\n\nconst Actual = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  border: 1px solid rgb(212, 224, 231);\n  border-radius: 16px;\n  background: rgb(255, 255, 255);\n\n  display: flex;\n  -webkit-box-align: center;\n  /* align-items: center; */\n  flex-direction: column;\n  padding: 16px;\n`;\n\nconst Background = styled.div`\n    position: absolute;\n    top:0;\n    right: 50px;\n    height: 400px;\n    min-height: 300px;\n    left: 250px;\n    z-index: -1;\n    background: rgb(206, 255, 26);\n`;\n\nconst updateTabName = (tabName) =>\n  State.update({\n    tabName,\n  });\n\n// const updatePage = (pageName) => State.update({ page: pageName });\nconst updateAction = (action) => State.update({ action: action });\n\n// Account balances\nfunction getNearBalance(accountId, onInvalidate) {\n  const options = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      jsonrpc: \"2.0\",\n      id: \"dontcare\",\n      method: \"query\",\n      params: {\n        request_type: \"view_account\",\n        finality: \"final\",\n        account_id: accountId,\n      },\n    }),\n  };\n  asyncFetch(config.nodeUrl, options).then((res) => {\n    const { amount, storage_usage } = res.body.result;\n    const COMMON_MIN_BALANCE = 0.05;\n\n    let newBalance = \"-\";\n    if (amount) {\n      const availableBalance = Big(amount || 0).minus(\n        Big(storage_usage).mul(Big(10).pow(19))\n      );\n      const balance = availableBalance\n        .div(Big(10).pow(NEAR_DECIMALS))\n        .minus(COMMON_MIN_BALANCE);\n      newBalance = balance.lt(0) ? \"0\" : balance.toFixed(5, BIG_ROUND_DOWN);\n    }\n    State.update({\n      nearBalance: newBalance,\n    });\n    if (onInvalidate) {\n      onInvalidate(nearBalance, newBalance);\n    }\n  });\n}\n\nfunction getSTNEARBalance(accountId, subscribe) {\n  const stnearBalanceRaw = Near.view(\n    config.contractId,\n    \"ft_balance_of\",\n    {\n      account_id: accountId,\n    },\n    undefined,\n    subscribe\n  );\n  if (!stnearBalanceRaw) return \"-\";\n  const balance = Big(stnearBalanceRaw).div(Big(10).pow(StNEAR_DECIMALS));\n  return balance.lt(0) ? \"0\" : balance.toFixed();\n}\n\nfunction getAccountDetails(accountId, subscribe) {\n  return Near.view(\n    config.contractId,\n    \"get_account_details\",\n    {\n      account_id: accountId,\n    },\n    undefined,\n    subscribe\n  );\n}\n\nconst nearBalance = accountId ? state.nearBalance : \"-\";\n// Initial fetch of account NEAR balance\nif (accountId && !isValid(nearBalance)) {\n  getNearBalance(accountId);\n}\nconst stnearBalance = accountId ? getSTNEARBalance(accountId) : \"-\";\nconst accountDetails = accountId ? getAccountDetails(accountId) : \"-\";\n\nfunction updateAccountInfo({ notUpdateNearBalance, callback }) {\n  const interval1 = setInterval(() => {\n    const data = getAccountDetails(accountId, true);\n    if (\n      data.unstaked_balance !== accountDetails.unstaked_balance ||\n      data.staked_balance !== accountDetails.staked_balance\n    ) {\n      // stop polling\n      clearInterval(interval1);\n      // update NEAR and StNEAR balances\n      getSTNEARBalance(accountId, true);\n      if (notUpdateNearBalance) {\n        getNearBalance(accountId);\n      }\n      // invoke callback functions if any\n      if (callback) callback();\n    }\n  }, 500);\n  if (!notUpdateNearBalance) {\n    const interval2 = setInterval(() => {\n      getNearBalance(accountId, (oldBalance, newBalance) => {\n        if (\n          newBalance !== \"-\" &&\n          oldBalance !== \"-\" &&\n          Big(newBalance).sub(oldBalance).abs().gt(MIN_BALANCE_CHANGE)\n        ) {\n          // stop polling\n          clearInterval(interval2);\n        }\n      });\n    }, 500);\n  }\n}\n\nfunction onLoad(data) {\n  State.update({ unstakeInfo: data });\n}\n\nconst ChooseToken = () => {\n  return (<SelectToken>\n    <p>Select token</p>\n    <TokensList>\n      <TokensItem onClick={() => { State.update({ token: \"near\" }); }} active={state.token === \"near\"}>\n        <div>\n          <div>NEAR</div>\n          <div>APY 9.08%</div>\n        </div>\n        <img\n          style={{\n            height: \"70%\",\n            width: \"auto\",\n          }}\n          src=\"https://ipfs.near.social/ipfs/bafkreiftukbt7zacsnbfmhppzgfk7jj4mn5qckd3j7dgto7kutgiqj3vgi\"\n          alt=\"Brand Logo\"\n          // height={20}\n          width={\"auto\"}\n        />\n      </TokensItem>\n      <TokensItem onClick={() => { State.update({ token: \"wnear\" }); }} active={state.token === \"wnear\"} disabled={true}>\n        <div>\n          <div>wNEAR</div>\n          <div>APY 9.08%</div>\n        </div>\n        <img\n          style={{\n            height: \"70%\",\n            width: \"auto\",\n          }}\n          src=\"https://ipfs.near.social/ipfs/bafkreigbbmef2vo3jcnr2llayeyom7rplcyn7efqcuo2lzclf3mr2nevwy\"\n          alt=\"wnear Logo\"\n          // height={20}\n          width={\"auto\"}\n        />\n      </TokensItem>\n    </TokensList>\n  </SelectToken>);\n};\n\nconst ChooseAction = () => {\n  return (<SelectToken>\n    <p>Select action</p>\n    <TokensList>\n      <ActionItem onClick={() => { State.update({ action: \"stake\" }); }} active={state.action === \"stake\"}>\n        <div>Stake</div>\n        <div><svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"24\" height=\"24\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M16,7,6,17l1.41,1.41L15,10.83V28H2v2H15a2,2,0,0,0,2-2V10.83l7.59,7.58L26,17Z\"></path><path d=\"M6,8V4H26V8h2V4a2,2,0,0,0-2-2H6A2,2,0,0,0,4,4V8Z\"></path></svg></div>\n      </ActionItem>\n      <ActionItem onClick={() => { State.update({ action: \"liquid-unstake\" }); }} active={state.action === \"liquid-unstake\"}>\n        <div>Fast unstake</div>\n        <div><svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"24\" height=\"24\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M18,30H4a2,2,0,0,1-2-2V14a2,2,0,0,1,2-2H18a2,2,0,0,1,2,2V28A2,2,0,0,1,18,30ZM4,14V28H18V14Z\"></path><path d=\"M25,23H23V9H9V7H23a2,2,0,0,1,2,2Z\"></path><path d=\"M30,16H28V4H16V2H28a2,2,0,0,1,2,2Z\"></path></svg></div>\n      </ActionItem>\n      <ActionItem onClick={() => { State.update({ action: \"unstake\" }); }} active={state.action === \"unstake\"}>\n        <div>Delayed unstake</div>\n        <div><svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"24\" height=\"24\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M15 19H17V21H15zM15 23H17V25H15z\"></path><path d=\"M23,11.67V4h3V2H6V4H9v7.67a2,2,0,0,0,.4,1.2L11.75,16,9.4,19.13a2,2,0,0,0-.4,1.2V28H6v2H26V28H23V20.33a2,2,0,0,0-.4-1.2L20.25,16l2.35-3.13A2,2,0,0,0,23,11.67ZM21,4v7H11V4Zm0,16.33V28H11V20.33L14.25,16,12,13h8l-2.25,3Z\"></path></svg></div>\n      </ActionItem>\n    </TokensList>\n  </SelectToken>);\n};\n\nconst body =\n  state.page === \"stake\" ? (\n    <Body>\n      <Background />\n\n      <Widget\n        src={`${config.ownerId}/widget/MetaPool.Element.TitleAndDescription`}\n      />\n      <Actual>\n        <div>\n          <ChooseToken />\n          <ChooseAction />\n        </div>\n        {state.action === \"stake\" && (\n          <Widget\n            src={`${config.ownerId}/widget/MetaPool.Stake`}\n            props={{\n              config,\n              nearBalance,\n              stnearBalance: stnearBalance,\n              updateAccountInfo,\n            }}\n          />\n        )}\n        {state.action === \"unstake\" && (\n          <Widget\n            src={`${config.ownerId}/widget/MetaPool.Unstake`}\n            props={{\n              config,\n              stnearBalance,\n              unstakeInfo: state.unstakeInfo,\n              updateAccountInfo,\n              updateAction,\n            }}\n          />\n        )}\n        {state.action === \"liquid-unstake\" && (\n          <Widget\n            src={`${config.ownerId}/widget/MetaPool.LiquidUnstake`}\n            props={{\n              config,\n              stnearBalance,\n              unstakeInfo: state.unstakeInfo,\n              updateAccountInfo,\n            }}\n          />\n        )}\n      </Actual>\n    </Body>\n  ) : (\n    <Widget\n      src={`${config.ownerId}/widget/MetaPool.Account`}\n      props={{\n        config,\n        nearBalance,\n        stnearBalance: stnearBalance,\n        unstakeInfo: state.unstakeInfo,\n        updatePage,\n        updateTabName,\n        updateAccountInfo,\n      }}\n    />\n  );\n\nreturn (\n  <>\n    <Main>\n      <Widget\n        src={`${config.ownerId}/widget/MetaPool.Data.Unstake`}\n        props={{ config, accountDetails, onLoad }}\n      />\n      <Sidebar>\n        <Widget\n          src={`${config.ownerId}/widget/MetaPool.Layout.Navigation`}\n          props={{\n            updatePage,\n          }}\n        />\n      </Sidebar>\n      <Content>\n        {body}\n      </Content>\n    </Main>\n  </>\n);", "metadata": {"description": "Meta Pool is a liquid staking solution built on the NEAR Protocol. StNEAR unlocks liquidity of the staked NEAR by creating a staking derivative to be engaged with various DeFi protocols on NEAR and Aurora, while also enjoying over 10% APY staking rewards of the underlying base tokens. StNEAR is the cornerstone piece of the NEAR-Aurora DeFi ecosystem.", "image": {"ipfs_cid": "bafkreigio67zz63ozsrtl2ydvczmbsx2dgblv2rqzxrizry7zycs3yco7q"}, "name": "Meta Pool -- Liquid Staking on NEAR Protocol", "tags": {"app": "", "defi": "", "liquid": "", "near": "", "staking": "", "stnear": ""}}, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/pierre-dev.near/widget/MetaPool", "fact_widget_deployments_id": "08f1518a1438adc13865122b687450bb", "inserted_timestamp": "2000-01-01T00:00:00.000Z", "modified_timestamp": "2000-01-01T00:00:00.000Z", "__row_index": 2}