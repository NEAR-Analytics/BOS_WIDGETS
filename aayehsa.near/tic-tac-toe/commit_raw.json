{"tx_hash": "7R7fmueaEoi8gj9vmbL3x48JXvv5Xe5U7xgmHdhPMLm4", "action_id_social": "69YGyxashRigVcqf6Lf2GMdxfEpwnqdnHo9PqNQ9CU7z-0-widget", "block_id": 102977381, "block_timestamp": "2023-10-09T12:25:57.011Z", "signer_id": "aayehsa.near", "widget_name": "tic-tac-toe", "source_code": "function calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n\nconst contract = \"guest-book.near\";\nconst messages = Near.view(contract, \"getMessages\", {}).reverse();\nconsole.log(messages);\n\nconst addNewMessage = () => {\n  if (state.newMessage.trim() == \"\") {\n    return;\n  }\n\n  Near.call(contract, \"addMessage\", {\n    text: state.newMessage,\n  });\n};\n\nState.init({\n  squares: Array(9).fill(null),\n  xIsNext: true,\n  newMessage: \"\",\n});\n\nfunction handleClick(i) {\n  const squares = state.squares.slice();\n  if (calculateWinner(squares) || squares[i]) {\n    return;\n  }\n  squares[i] = state.xIsNext ? \"X\" : \"O\";\n  State.update({\n    squares: squares,\n    xIsNext: !state.xIsNext,\n  });\n}\n\nfunction renderSquare(i) {\n  return (\n    <SquareButton onClick={() => handleClick(i)}>\n      {state.squares[i]}\n    </SquareButton>\n  );\n}\n\nconst winner = calculateWinner(state.squares);\nlet status;\nif (winner) {\n  status = \"Winner: \" + winner;\n} else if (state.squares.every((square) => square !== null)) {\n  status = \"It's a Draw!\";\n} else {\n  status = \"Next player: \" + (state.xIsNext ? \"X\" : \"O\");\n}\n\nconst SquareButton = styled.button`\n  background: #CFD7A9;\n  border: 1px solid #999;\n  float: left;\n  font-size: 55px;\n  color:#5E6A19;\n  font-weight: bold;\n  line-height: 34px;\n  height: 65px;\n  margin-right: -1px;\n  margin-top: -1px;\n  padding: 0;\n  text-align: center;\n  width: 65px;\n\n  &:hover {\n    background: grey;\n    border-color: grey;\n    transform: scale(1.05);\n  }\n`;\n\nconst borderRow = {\n  clear: \"both\",\n  content: \"\",\n  display: \"table\",\n};\n\nconst body = styled.div`\n  .box{\n  font-size: 20px;\n  font-weight: bold;\n  border-radius: 3px;\n  padding: 10px 10px;\n  cursor: pointer;\n  margin: 10px 0;\n  transition: background-color 0.3s, border-color 0.3s, transform 0.1s;\n\n  &:hover {\n  transform: scale(1.01); \n  }\n\n  \n`;\nreturn (\n  <body>\n    <div>\n      <div\n        class=\"box\"\n        style={{\n          marginBottom: 10,\n        }}\n      >\n        <button\n          cla\n          className=\"btn btn-outline-primary btn-sm\"\n          onClick={() =>\n            State.update({\n              squares: Array(9).fill(null),\n              xIsNext: true,\n            })\n          }\n        >\n          Reset Game\n        </button>\n      </div>\n      <div\n        style={{\n          marginBottom: 10,\n        }}\n      >\n        {status}\n      </div>\n      <div style={borderRow}>\n        {renderSquare(0)}\n        {renderSquare(1)}\n        {renderSquare(2)}\n      </div>\n      <div style={borderRow}>\n        {renderSquare(3)}\n        {renderSquare(4)}\n        {renderSquare(5)}\n      </div>\n      <div style={borderRow}>\n        {renderSquare(6)}\n        {renderSquare(7)}\n        {renderSquare(8)}\n      </div>\n\n      <div class=\"p-3\">\n        <br />\n        {context.accountId ? (\n          <div class=\" border-red p-3\">\n            <div class=\"row\">\n              <div>\n                <input\n                  placeholder=\"Winner's Name\"\n                  onChange={(e) => State.update({ newMessage: e.target.value })}\n                />\n              </div>\n            </div>\n            <button\n              class=\"btn btn-primary mt-2\"\n              onClick={async () => {\n                addNewMessage();\n              }}\n            >\n              save name\n            </button>\n          </div>\n        ) : (\n          <p class=\"text-center py-2\">\n            You must login to add the winner in list.\n          </p>\n        )}\n        <br />\n        <div class=\"border border-#FFEFD5 p-3\">\n          <h3>winners list</h3>\n          <table className=\"table table-sm\">\n            <thead>\n              <tr class=\"p-2 mb-3 bg-primary text-white text-center weight-bold\">\n                <th>Account</th>\n                <th>Name</th>\n              </tr>\n            </thead>\n            <tbody>\n              {messages.map((data, key) => {\n                return (\n                  <tr class=\"text-center\">\n                    <td>{data.sender}</td>\n                    <td>{data.text}</td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  </body>\n);\n", "metadata": {"platform": "jutsu.ai"}, "branch": {"draft": null}, "widget_modules_used": null, "widget_url": "https://near.social/#/aayehsa.near/widget/tic-tac-toe", "fact_widget_deployments_id": "0f8e51f21bef67f510a672ac1d58f41f", "inserted_timestamp": "2023-10-09T14:27:35.492Z", "modified_timestamp": "2023-10-09T14:27:35.492Z", "__row_index": 0}