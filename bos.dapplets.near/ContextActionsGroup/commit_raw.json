{"tx_hash": "3LMUWjMEufWCCf1xJi3TCTaTjoF6p8MADFvQ6ppcBRns", "action_id_social": "G9mbLDpKxfrfHF3P2uZrtfDLt89fsdodpuRSD8P3GY2Q-0-widget", "block_id": 114032615, "block_timestamp": "2024-03-03T20:00:33.866Z", "signer_id": "bos.dapplets.near", "widget_name": "ContextActionsGroup", "source_code": "const {\n  isEditMode,\n  createUserLink,\n  deleteUserLink,\n  enableEditMode,\n  disableEditMode,\n  widgets,\n  apps,\n} = props\n\nState.init({\n  show: false,\n  showMenu: false,\n});\n\nconst handleOnMouseEnter = () => State.update({ show: true });\n\nconst handleOnMouseLeave = () =>\n  state.showMenu\n    ? null\n    : isEditMode\n    ? null\n    : State.update({ show: false });\n\nconst handleOpenMenu = () => State.update({ showMenu: true, show: false });\n\nconst handleCloseMenu = () => State.update({ showMenu: false, show: false });\n\nconst handleSelectComponent = (app) => {\n  State.update({ showMenu: false });\n  createUserLink(app.id);\n};\n\nconst OverlayTriggerWrapper = styled.div`\n  display: flex;\n  z-index: 500;\n\n  .OverlayTrigger {\n    position: absolute;\n    background: #384bff;\n    border: 1px solid #384bff;\n    width: 6px;\n    height: 49px;\n    right: -6px;\n    top: 10px;\n    border-radius: 0px 4px 4px 0px;\n    cursor: pointer;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    box-sizing: border-box;\n    z-index: 79;\n  }\n`;\n\nconst TriggerShowPanel = styled.div`\n  width: 40px;\n  height: auto;\n  border-radius: 0px 4px 4px 0px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  position: absolute;\n  right: -33px;\n  top: -20px;\n  z-index: 79;\n`;\n\nconst ActionsWrapper = styled.div`\n  z-index: 1080;\n  border-radius: 0px 4px 4px 0px;\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding-top: 6px;\n  border: 1px solid #384bff;\n\n  @keyframes translateAnimation {\n    0% {\n      display: none;\n      width: 0px;\n      opacity: 0.3;\n      min-height: 0px;\n      height: 0px;\n      transform-origin: top left;\n      transform: scale(0) translateX(-30px);\n    }\n    80% {\n      opacity: 1;\n    }\n    100% {\n      padding-top: 6px;\n      border: 1px solid #384bff;\n      opacity: 1;\n      right: 60px;\n      height: auto;\n      width: 40px;\n      min-height: 34px;\n      background: #fff;\n      transform-origin: top left;\n      transform: scale(1) translateX(0px);\n    }\n  }\n  animation: translateAnimation 0.5s ease forwards;\n  transition: all 0.3s;\n`;\n\nconst iconClose = (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n  >\n    <path\n      d=\"M18 6L6 18\"\n      stroke=\"#222222\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n    <path\n      d=\"M6 6L18 18\"\n      stroke=\"#222222\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n  </svg>\n);\n\nconst CloseMenu = styled.span`\n  &:hover {\n    transform: scale(1.1);\n  }\n`;\n\nconst OnboardingButton = styled.button`\n  &:hover {\n    background: #eb9dab;\n  }\n`;\n\nconst iconDropdown = (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"14\"\n    height=\"8\"\n    viewBox=\"0 0 14 8\"\n    fill=\"none\"\n  >\n    <path\n      d=\"M1 1L7 7L13 1\"\n      stroke=\"#747376\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n  </svg>\n);\n\nconst ButtonCancel = styled.button`\n  &:hover {\n    background: #747376;\n  }\n`;\n\nconst iconSwitch = (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"32\"\n    height=\"20\"\n    viewBox=\"0 0 32 20\"\n    fill=\"none\"\n  >\n    <rect width=\"32\" height=\"20\" rx=\"10\" fill=\"#DB504A\" />\n    <path\n      d=\"M14 10C14 5.58172 17.5817 2 22 2C26.4183 2 30 5.58172 30 10C30 14.4183 26.4183 18 22 18C17.5817 18 14 14.4183 14 10Z\"\n      fill=\"white\"\n    />\n  </svg>\n);\n\nconst ActionBlock = styled.span`\n  position: relative;\n\n  div {\n    z-index: 1000;\n  }\n`;\n\nconst FloatingModal = styled.div`\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  animation: falling-animation 0.3s linear forwards;\n\n  @keyframes falling-animation {\n    from {\n      transform: translate(-50%, -200%);\n    }\n\n    to {\n      transform: translate(-50%, -50%);\n    }\n  }\n`;\n\nreturn (\n  <OverlayTriggerWrapper onMouseOver={handleOnMouseEnter}>\n    <div style={{ opacity: state.show ? 0 : 1 }} className=\"OverlayTrigger\">\n      <Widget src='bos.dapplets.near/widget/LayoutManager.TriggerEar'/>\n    </div>\n    {state.show ? (\n      <TriggerShowPanel\n        onMouseOut={handleOnMouseLeave}\n        style={{\n          margin: \"0px -7px\",\n          top: widgets && widgets.length ? \"\" : \"-20px\",\n        }}\n      >\n        <Widget src='bos.dapplets.near/widget/LayoutManager.SupportingSpan'/>\n        <ActionsWrapper\n          style={{\n            backgroundColor:\n              widgets && widgets.length ? \"\" : \"#DB504A!important\",\n          }}\n        >\n          {widgets.map((widget) => (\n            <ActionBlock key={widget.linkId}>\n              {isEditMode ? (\n                <Widget\n                  src='bos.dapplets.near/widget/LayoutManager.WidgetBadgeWrapper'\n                  props={{\n                    widget: widget,\n                    deleteUserLink: deleteUserLink\n                  }}\n                />\n              ) : null}\n              <Widget src={widget.src} props={widget.props} />\n            </ActionBlock>\n          ))}\n          {isEditMode ? (\n              <Widget\n                src='bos.dapplets.near/widget/LayoutManager.Buttons.Apply'\n                props={{ onClick: disableEditMode }}\n              />\n            ) : (\n              <Widget\n                src='bos.dapplets.near/widget/LayoutManager.Buttons.Edit'\n                props={{ onClick: enableEditMode }}\n              />\n            )\n          }\n        </ActionsWrapper>\n        <Widget\n          src=\"bos.dapplets.near/widget/LayoutManager.EarOpened\"\n          props={{\n            widgets,\n            isEditMode,\n            handleOpenMenu,\n            enableEditMode,\n            disableEditMode\n          }}\n        />\n      </TriggerShowPanel>\n    ) : null}\n\n    {state.showMenu ? (\n      <DappletOverlay>\n        <FloatingModal>\n          <Widget\n            props={{\n              handleCloseMenu,\n              onSelect: handleSelectComponent,\n              apps,\n            }}\n            src=\"bos.dapplets.near/widget/ComponentsSearch\"\n          />\n        </FloatingModal>\n      </DappletOverlay>\n    ) : null}\n  </OverlayTriggerWrapper>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bos.dapplets.near/widget/ContextActionsGroup", "fact_widget_deployments_id": "5caa2b6230614fc365aa9b481765f067", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 68}