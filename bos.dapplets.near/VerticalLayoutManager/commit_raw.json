{"tx_hash": "HXrqZiLoM7q9GwCUQ8xdd2eG729mEpGGg58L6WdHHaeC", "action_id_social": "3kvChHigYw3h8KZC2u6dqHY58YAYxttkdMd7H1vCiRog-0-widget", "block_id": 122188227, "block_timestamp": "2024-06-28T16:47:34.040Z", "signer_id": "bos.dapplets.near", "widget_name": "VerticalLayoutManager", "source_code": "if (\n  (!props.widgets || props.widgets.length === 0) &&\n  (!props.components || props.components.length === 0)\n) return <></>;\n\nconst [waitingAppIdsSet, changeWaitingAppIdsSet] = useState(new Set())\n\nconst handleRemoveWidget = (linkId) => {\n  changeWaitingAppIdsSet((val) => val.add(linkId));\n  const callback = () => {\n    waitingAppIdsSet.delete(linkId)\n    changeWaitingAppIdsSet((val) => {\n      val.delete(linkId)\n      return val\n    });\n  }\n  props.deleteUserLink(linkId).then(callback).catch(callback);\n}\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 12px;\n  gap: 10px;\n`;\n\nconst WidgetWrapper = styled.div`\n  position: relative;\n`;\n\nconst WidgetBadgeWrapper = styled.div`\n  position: absolute;\n  right: 0;\n  top: 0;\n  z-index: 1200;\n  background: rgba(255, 255, 255, 0.35);\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 4%;\n  backdrop-filter: blur(1px);\n`;\n\nreturn (\n  <Container id='vertical-layout-manager'>\n    {props.widgets\n      .filter((w) => w.isSuitable === undefined || w.isSuitable === true)\n      .map((widget) => (\n        <WidgetWrapper key={widget.linkId}>\n          {props.isEditMode ? (\n            <WidgetBadgeWrapper\n              title={\n                widget.linkAuthorId === context.accountId\n                  ? `Remove ${widget.src.split(\"widget/\").pop()}`\n                  : \"disable in edit mode\"\n              }\n              style={{\n                opacity: widget.linkAuthorId === context.accountId ? \"1\" : \"0\",\n              }}\n            >\n              {widget.linkAuthorId === context.accountId ? waitingAppIdsSet.has(widget.linkId) ? (\n                <span role=\"status\" aria-hidden=\"true\" class=\"spinner-grow spinner-grow-sm\" />\n              ) : (\n                <Widget\n                  loading={<></>}\n                  src=\"bos.dapplets.near/widget/LayoutManager.DeleteWidgetButton\"\n                  props={{\n                    onClick: () => handleRemoveWidget(widget.linkId),\n                  }}\n                />\n              ) : null}\n            </WidgetBadgeWrapper>\n          ) : null}\n          <div\n            data-mweb-context-type=\"injected-widget\"\n            data-mweb-context-parsed={JSON.stringify({\n              id: `${props.context.id}/${widget.linkId}`,\n              parentContextId: props.context.id,\n              widgetSrc: widget.src,\n            })}\n          >\n            <Widget\n              loading={<></>}\n              src={widget.src}\n              props={{ ...widget.props, notify: props.notify }}\n            />\n            <div\n              data-mweb-insertion-point=\"hidden\"\n              style={{ display: \"none\" }}\n            />\n          </div>\n        </WidgetWrapper>\n      ))}\n\n      {props.components\n        ? props.components.map((cmp, i) => {\n            const WrapperComponent = cmp.component;\n            return (\n              <WidgetWrapper key={i}>\n                <WrapperComponent\n                  context={props.context}\n                  attachContextRef={props.attachContextRef}\n                  attachInsPointRef={props.attachInsPointRef}\n                />\n              </WidgetWrapper>\n            );\n          })\n        : null}\n  </Container>\n);\n", "metadata": {}, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bos.dapplets.near/widget/VerticalLayoutManager", "fact_widget_deployments_id": "22c0f97c2ec0a500afad1579b9ebf946", "inserted_timestamp": "2024-06-28T17:54:59.284Z", "modified_timestamp": "2024-06-28T17:54:59.284Z", "__row_index": 1}