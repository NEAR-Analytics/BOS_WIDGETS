{"tx_hash": "5RHbv5vUdoD2mTDQGRgy9A4VXnQ7txeBiHW1oqNhcutw", "action_id_social": "JCizBpRFjzNKCPqsPMCBAece9qgXinTLGM9cZNuB2Pwn-0-widget", "block_id": 118979175, "block_timestamp": "2024-05-15T15:03:11.433Z", "signer_id": "bos.dapplets.near", "widget_name": "WebGuide.OverlayTrigger", "source_code": "const CustomTooltip = styled(\"DappletTooltip\")`\n  z-index: 9999999; // over the notch\n\n  &[data-popper-reference-hidden=\"true\"] {\n    visibility: hidden;\n    pointer-events: none;\n  }\n\n  .tooltip-arrow::before {\n    border: none;\n    display: inline-block;\n    content: url(\"data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' width='19' height='38' viewBox='18 0 20 38' fill='none' ><path d='M34.3818 22.1845L19.5654 36.0575L19.5654 1.8284L34.3715 15.6052C36.2802 17.3812 36.285 20.4025 34.3818 22.1845Z' fill='%23FFFFFE' stroke='%2302193A' /><path d='M16.5693 2.96185L20.0642 2.96185L21.0642 3.96185L21.0642 33.9619L20.0642 34.9619H16.5693L16.5693 2.96185Z' fill='%23FFFFFE' /></svg>\");\n  }\n\n  &.bs-tooltip-top .tooltip-arrow {\n    bottom: -29px;\n\n    &::before {\n      transform: rotate(90deg);\n    }\n  }\n\n  &.bs-tooltip-end .tooltip-arrow {\n    left: -18px;\n\n    &::before {\n      transform: rotate(180deg);\n    }\n  }\n\n  &.bs-tooltip-bottom .tooltip-arrow {\n    top: -29px;\n\n    &::before {\n      transform: rotate(-90deg);\n    }\n  }\n\n  &.bs-tooltip-start .tooltip-arrow {\n    right: -18px;\n\n    &::before {\n      transform: rotate(0deg);\n    }\n  }\n`\n\nconst InfoBox = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  display: flex;\n  flex-direction: column;\n  box-sizing: border-box;\n  width: 546px;\n  height: 656px;\n  background: #fffffe;\n  border: 1px solid #02193A;\n  border-radius: 20px;\n  padding: 20px;\n  gap: 20px;\n  z-index: 1000;\n  box-shadow: none;\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\n  align-items: center;\n  justify-content: center;\n\n  animation: falling-animation 0.3s linear forwards;\n\n  @keyframes falling-animation {\n    from {\n      transform: translate(-50%, -200%);\n    }\n\n    to {\n      transform: translate(-50%, -50%);\n    }\n  }\n`\n\nconst Callout = styled.div`\n  display: flex;\n  width: 320px;\n  padding: 20px;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 20px;\n  border-radius: 10px;\n  border: 1px solid #02193a;\n  background: #fffffe;\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\n`\n\nconst Header = styled.div`\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\n  color: #02193a;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  justify-content: center;\n  align-items: center;\n`\n\nconst TopLine = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  height: 24px;\n  margin: 0;\n  padding: 0;\n`\n\nconst CalloutHeaderCaption = styled.div`\n  display: inline-block;\n  max-width: 30%;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  color: #02193a;\n  font-size: 12px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: 149%;\n`\n\nconst PagesIndicators = styled.div`\n  width: auto;\n  height: 24px;\n  padding: 4px;\n  gap: 10px;\n  display: flex;\n  -webkit-box-align: center;\n  align-items: center;\n  box-sizing: border-box;\n  justify-content: center;\n`\n\n// const Navi = styled.button` // ToDo: for navigation\nconst Navi = styled.div`\n  padding: 0;\n  width: 10px;\n  height: 10px;\n  border-radius: 50%;\n  background: ${(props) => (props.$active ? \"#384BFF\" : \"#E3E3E3\")};\n  border: none;\n`\n\nconst Close = styled.button`\n  background: inherit;\n  outline: none;\n  border: none;\n  cursor: pointer;\n`\n\nconst Title = styled.div`\n  padding: 0;\n  margin: 0 0 -10px;\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\n  color: #02193a;\n  font-size: ${(props) => (props.$type === \"infobox\" ? \"32px\" : \"18px\")};\n  font-style: normal;\n  font-weight: 600;\n  line-height: 149%;\n`\n\nconst WrapperAlert = styled.div`\n  display: flex;\n  padding: 4px 6px;\n  gap: 6px;\n  border-radius: 5px;\n  align-items: center;\n  justify-content: flex-start;\n  width: 100%;\n  margin-right: auto;\n  background: ${(props) =>\n    props.$status === \"warning\"\n      ? \"rgba(255, 248, 235, 1)\"\n      : props.$status === \"error\"\n      ? \"rgba(246, 240, 246, 1)\"\n      : \"rgba(234, 241, 255, 1)\"};\n\n  color: ${(props) =>\n    props.$status === \"warning\"\n      ? \"rgba(208, 145, 26, 1)\"\n      : props.$status === \"error\"\n      ? \"rgba(219, 80, 74, 1)\"\n      : \"rgba(36, 110, 253, 1)\"};\n\n  outline: none;\n`\n\nconst TextAlert = styled.span`\n  font-size: 12px;\n  font-weight: 400;\n  line-height: 17.88px;\n  text-align: left;\n`\n\nconst IconAlert = styled.span``\n\nconst Card = styled.div`\n  position: relative;\n  overflow: auto;\n  display: flex;\n  flex: 1;\n  height: 100%;\n  flex-direction: column;\n  box-sizing: border-box;\n  padding: 12px 20px;\n  gap: 10px;\n  border: none;\n  border-radius: 20px;\n  background: rgba(248, 249, 255, 1);\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\n  overflow-x: hidden;\n`\n\nconst MarkdownWrapper = styled.div`\n  h3 {\n    padding: 8px 0 0;\n    margin: 0;\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\n    font-style: normal;\n    font-weight: 500;\n    font-size: 16px;\n    line-height: 19px;\n    color: #121212;\n    flex: none;\n    align-self: stretch;\n    flex-grow: 0;\n    text-indent: 16px;\n  }\n\n  img {\n    position: relative;\n    display: flex;\n    box-sizing: border-box;\n    width: 100%;\n    height: auto !important;\n    border-radius: 10px;\n    flex: none;\n    flex-grow: 0;\n    border: 1px solid rgb(207, 217, 222);\n  }\n\n  p {\n    padding: 0;\n    margin: 0;\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\n    font-style: normal;\n    font-weight: 400;\n    font-size: 14px;\n    line-height: 149%;\n    color: #777777;\n    flex: none;\n    align-self: stretch;\n    flex-grow: 0;\n  }\n\n  a {\n    padding: 0;\n    margin: 0;\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\n    font-style: normal;\n    font-weight: 400;\n    font-size: 14px;\n    line-height: 149%;\n    text-decoration-line: underline !important;\n    color: #384BFF;\n    cursor: 'poiner';\n  }\n`\n\nconst Footer = styled.div`\n  display: flex;\n  position: relative;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  width: 100%;\n  align-items: center;\n  gap: 20px;\n`\n\nconst ContainerCheckbox = styled.div`\n  display: flex;\n  align-items: ${(props) => (props.$type === \"infobox\" ? \"flex-end\" : \"flex-start\")};\n`\n\nconst CheckboxInput = styled.input`\n  width: 16px;\n  height: 16px;\n  border-radius: 5px;\n  border: 1px solid #384bff;\n  margin-right: 8px;\n`\n\nconst Label = styled.label`\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 17.88px;\n  color: #7a818b;\n  cursor: pointer;\n  width: max-content;\n`\n\nconst ActionsGroup = styled.div`\n  display: flex;\n  flex-direction: ${(props) => (props.$type === \"infobox\" ? \"row-reverse\" : \"row\")};\n  justify-content: ${(props) => (props.$type === \"infobox\" ? \"space-between\" : \"center\")};;\n  align-items: center;\n  gap: 10px;\n  align-self: stretch;\n  flex-grow: 1;\n`\n\nconst ActionButton = styled.div`\n  display: flex;\n  box-sizing: border-box;\n  width: 180px;\n  height: 42px;\n  padding: 0px 20px;\n  justify-content: center;\n  align-items: center;\n  border-radius: 90px;\n  text-align: center;\n  font-size: 14px;\n  cursor: pointer;\n  border: ${(props) => (props.$primary ? \"initial\" : \"1px solid #E2E2E5\")};\n  background: ${(props) => (props.$primary ? \"#02193A\" : \"initial\")};\n  color: ${(props) => (props.$primary ? \"#fff\" : \"initial\")};\n\n  &:hover {\n    background: ${(props) => (props.$primary ? \"#1c3559\" : \"#eee\")};\n  }\n\n  &:active {\n    background: ${(props) => (props.$primary ? \"#020c19\" : \"#ddd\")};\n  }\n`\n\nconst iconClose = (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n  >\n    <path\n      d=\"M18 6L6 18\"\n      stroke=\"#02193A\"\n      strokeWidth=\"1.5\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n    <path\n      d=\"M6 6.5L18 18.5\"\n      stroke=\"#02193A\"\n      strokeWidth=\"1.5\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n  </svg>\n)\n\nconst errorIcon = (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"20\"\n    height=\"20\"\n    viewBox=\"0 0 20 20\"\n    fill=\"none\"\n  >\n    <g clipPath=\"url(#clip0_358_97)\">\n      <path\n        d=\"M6.54996 1.66666H13.45L18.3333 6.54999V13.45L13.45 18.3333H6.54996L1.66663 13.45V6.54999L6.54996 1.66666Z\"\n        stroke=\"#DB504A\"\n        strokeWidth=\"1.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <path\n        d=\"M12.5 7.5L7.5 12.5\"\n        stroke=\"#DB504A\"\n        strokeWidth=\"1.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <path\n        d=\"M7.5 7.5L12.5 12.5\"\n        stroke=\"#DB504A\"\n        strokeWidth=\"1.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </g>\n    <defs>\n      <clipPath id=\"clip0_358_97\">\n        <rect width=\"20\" height=\"20\" fill=\"white\" />\n      </clipPath>\n    </defs>\n  </svg>\n)\n\nconst infoIcon = (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"20\"\n    height=\"20\"\n    viewBox=\"0 0 20 20\"\n    fill=\"none\"\n  >\n    <g clipPath=\"url(#clip0_358_90)\">\n      <path\n        d=\"M9.99996 18.3333C14.6023 18.3333 18.3333 14.6024 18.3333 10C18.3333 5.39763 14.6023 1.66667 9.99996 1.66667C5.39759 1.66667 1.66663 5.39763 1.66663 10C1.66663 14.6024 5.39759 18.3333 9.99996 18.3333Z\"\n        stroke=\"#246EFD\"\n        strokeWidth=\"1.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <path\n        d=\"M10 13.3333V10\"\n        stroke=\"#246EFD\"\n        strokeWidth=\"1.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <path\n        d=\"M10 6.66667H10.0088\"\n        stroke=\"#246EFD\"\n        strokeWidth=\"1.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </g>\n    <defs>\n      <clipPath id=\"clip0_358_90\">\n        <rect width=\"20\" height=\"20\" fill=\"white\" />\n      </clipPath>\n    </defs>\n  </svg>\n)\n\nconst warningIcon = (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"20\"\n    height=\"20\"\n    viewBox=\"0 0 20 20\"\n    fill=\"none\"\n  >\n    <path\n      d=\"M8.57502 3.21665L1.51668 15C1.37116 15.252 1.29416 15.5377 1.29334 15.8288C1.29253 16.1198 1.36793 16.4059 1.51204 16.6588C1.65615 16.9116 1.86396 17.1223 2.11477 17.2699C2.36559 17.4174 2.65068 17.4968 2.94168 17.5H17.0583C17.3494 17.4968 17.6344 17.4174 17.8853 17.2699C18.1361 17.1223 18.3439 16.9116 18.488 16.6588C18.6321 16.4059 18.7075 16.1198 18.7067 15.8288C18.7059 15.5377 18.6289 15.252 18.4834 15L11.425 3.21665C11.2765 2.97174 11.0673 2.76925 10.8177 2.62872C10.5681 2.48819 10.2865 2.41437 10 2.41437C9.71357 2.41437 9.43196 2.48819 9.18235 2.62872C8.93275 2.76925 8.72358 2.97174 8.57502 3.21665Z\"\n      stroke=\"#D0911A\"\n      strokeWidth=\"1.5\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n    <path\n      d=\"M10 7.5V10.8333\"\n      stroke=\"#D0911A\"\n      strokeWidth=\"1.5\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n    <path\n      d=\"M10 14.1667H10.0088\"\n      stroke=\"#D0911A\"\n      strokeWidth=\"1.5\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n  </svg>\n)\n\nconst {\n  children,\n  content,\n  title,\n  navi,\n  onClose,\n  // status, - conflict with deprecated Window.status property\n  buttons,\n  showChecked,\n  checked,\n  onDoNotShowChange,\n} = props\n\nconst header = (\n  <Header>\n    <TopLine>\n      <CalloutHeaderCaption>\n        Step {navi?.currentChapterIndex + 1} of {navi?.totalChapters}\n      </CalloutHeaderCaption>\n      <PagesIndicators>\n        {navi.totalPages > 1 && [...Array(navi?.totalPages)].map(\n          (_, index) => (\n            <Navi\n              key={index}\n              $active={index == navi?.currentPageIndex ? true : false}\n            />\n          )\n        )}\n      </PagesIndicators>\n      <Close onClick={onClose}>{iconClose}</Close>\n    </TopLine>\n  </Header>\n)\n\nconst statuses = (\n  <WrapperAlert $status={props.status.type}>\n    <IconAlert>\n      {props.status.type === \"warning\"\n        ? warningIcon\n        : props.status.type === \"error\"\n        ? errorIcon\n        : infoIcon}\n    </IconAlert>\n    <TextAlert>{props.status.text}</TextAlert>\n  </WrapperAlert>\n)\n\nconst checkbox = (\n  <ContainerCheckbox $type={props.type}>\n    <CheckboxInput\n      type=\"checkbox\"\n      checked={checked}\n      onChange={onDoNotShowChange}\n    />\n    <Label htmlFor=\"checkbox\">Don't show this guide again</Label>\n  </ContainerCheckbox>\n)\n\nconst actionButton = (btn) => (\n  <ActionButton\n    key={btn.label}\n    $primary={btn.variant == \"primary\" ? true : false}\n    onClick={btn.onClick}\n    disabled={btn.disabled}\n  >\n    {btn.label}\n  </ActionButton>\n)\n\nconst navButtons = props.type === 'callout' ? (\n  <ActionsGroup $type={props.type}>\n    {buttons.map((btn) => actionButton(btn))}\n  </ActionsGroup>\n) : buttons?.length > 1 ? (\n  <ActionsGroup $type={props.type}>\n    {actionButton(buttons[1])}\n    {actionButton(buttons[0])}\n  </ActionsGroup>\n) : buttons?.length === 1 ? (\n  <ActionsGroup $type={props.type}>\n    {actionButton(buttons[0])}\n  </ActionsGroup>\n) : <></>\n\nconst callout = (\n  <CustomTooltip bsPrefix=\"wg-tooltip\">\n    <Callout>\n      {header}\n      {props.status?.text ? statuses : null}\n      <Title $type={props.type}>\n        {title}\n      </Title>\n      <MarkdownWrapper>\n        <Markdown text={content}/>\n      </MarkdownWrapper>\n      {showChecked ? checkbox : null}\n      {navButtons}\n    </Callout>\n  </CustomTooltip>\n)\n\nconst infobox = (\n  <InfoBox>\n    {header}\n    <Title $type={props.type}>\n      {title}\n    </Title>\n    <Card>\n      {props.status?.text ? statuses : null}\n      <MarkdownWrapper>\n        <Markdown text={content}/>\n      </MarkdownWrapper>\n    </Card>\n    <Footer>\n      {showChecked ? checkbox : null}\n      {navButtons}\n    </Footer>\n  </InfoBox>\n)\n\nconst overlayByType = {\n  callout: (\n    <DappletOverlayTrigger\n      show={true}\n      overlay={callout}\n      placement={props.placement ?? \"auto\"}\n      offset={[0, 20]}\n      popperConfig={{ strategy: props.strategy ?? 'absolute' }}\n    >\n      {typeof props.children === \"function\" ? (\n        props.children\n      ) : (\n        <span>{props.children}</span>\n      )}\n    </DappletOverlayTrigger>\n  ),\n  infobox,\n}\n\nreturn overlayByType[props.type]\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bos.dapplets.near/widget/WebGuide.OverlayTrigger", "fact_widget_deployments_id": "c703ef859001d2387e8cb522b9a8708d", "inserted_timestamp": "2024-05-15T16:55:31.288Z", "modified_timestamp": "2024-05-15T16:55:31.288Z", "__row_index": 14}