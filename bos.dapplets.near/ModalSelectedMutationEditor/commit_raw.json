{"tx_hash": "6Fa1rUsgenmsSg88Tm6o8Qmid3dVkjLb7JFwdw3YX97b", "action_id_social": "CJNe3W1gzQidMnfDrG5xapLK9L2DYve7fj7QEkforiou-0-widget", "block_id": 116418216, "block_timestamp": "2024-04-08T20:54:53.524Z", "signer_id": "bos.dapplets.near", "widget_name": "ModalSelectedMutationEditor", "source_code": "const {\n  mutationId,\n  mutationName,\n  allApps,\n  selectedApps,\n  onClose,\n  onMutationNameChange,\n  onMutationAppsChange,\n  onMutationReset,\n  onMutationCreate,\n  onMutationEdit,\n  onMutationIdChange,\n} = props;\n\n// ToDo: check null props\n\nconst { accountId: loggedInAccountId } = context;\n\nconst [mutationOwnerId] = mutationId ? mutationId.split(\"/\") : null;\n\nconst isUserOwner = mutationOwnerId === loggedInAccountId;\n\nState.init({\n  isSaveDropdownOpened: false,\n});\n\nconst SelectedMutationEditorWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: absolute;\n  top: 100px;\n  left: 50%;\n  transform: translateX(-50%);\n  padding: 20px;\n  gap: 20px;\n  border-radius: 10px;\n  font-family: sans-serif;\n  border: 1px solid #02193a;\n  background: #f8f9ff;\n  width: 400px;\n  max-height: 446px;\n`;\n\nconst Close = styled.span`\n  cursor: pointer;\n  svg {\n    margin: 0;\n  }\n  &:hover {\n    opacity: 0.5;\n  }\n`;\n\nconst HeaderEditor = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  color: rgba(2, 25, 58, 1);\n  font-size: 18px;\n  font-weight: 600;\n  line-height: 21.09px;\n  text-align: left;\n  .edit {\n    margin-right: auto;\n    margin-bottom: 2px;\n  }\n`;\n\nconst AppsList = styled.div`\n  overflow: hidden;\n  overflow-y: auto;\n  max-height: 400px;\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n`;\n\nconst ButtonsBlock = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst ButtonsRevert = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: 1px solid rgba(226, 226, 229, 1);\n  color: rgba(2, 25, 58, 1);\n  width: 175px;\n  height: 42px;\n  border-radius: 10px;\n  font-size: 14px;\n  font-weight: 400;\n  line-height: 20.86px;\n  text-align: center;\n  cursor: pointer;\n  &:hover {\n    opacity: 0.5;\n  }\n`;\n\nconst ButtonsSave = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 175px;\n  height: 42px;\n  border-radius: 10px;\n  background: ${loggedInAccountId\n    ? \"rgba(56, 75, 255, 1)\"\n    : \"rgba(56, 75, 255, 0.5)\"};\n  color: #fff;\n  font-size: 14px;\n  font-weight: 400;\n  line-height: 20.86px;\n  text-align: center;\n  position: relative;\n  cursor: pointer;\n`;\n\nconst TextSave = styled.div`\n  display: inline-block;\n  overflow: hidden;\n  word-wrap: no-wrap;\n  text-overflow: ellipsis;\n  width: 100%;\n  padding: 0 10px;\n  text-align: center;\n  &:hover {\n    opacity: 0.5;\n  }\n`;\n\nconst ArrowWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 42px;\n  height: 42px;\n  margin-left: auto;\n  transform: ${(props) =>\n    props.$isOpened ? \"rotate(180deg)\" : \"rotate(0deg)\"};\n`;\n\nconst SaveChanges = styled.div`\n  position: absolute;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  right: 0;\n  top: 52px;\n  width: 179px;\n  max-height: 112px;\n  padding: 10px;\n  gap: 10px;\n  border-radius: 10px;\n  background: rgba(231, 236, 239, 1);\n  font-size: 14px;\n  font-weight: 400;\n  line-height: 20.86px;\n  text-align: center;\n  color: rgba(34, 34, 34, 1);\n`;\n\nconst SaveChangesItem = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 159px;\n  height: 41px;\n  border-radius: 4px;\n  cursor: pointer;\n  &:hover {\n    background: rgba(217, 222, 225, 1);\n    color: rgba(56, 75, 255, 1);\n  }\n`;\n\nconst Input = styled.input`\n  display: flex;\n  flex: 1;\n  border: none;\n  background: none;\n  margin: 0;\n  max-width: 250px;\n  height: 40px;\n  line-height: 40px;\n  padding: 0;\n  color: var(--sand12);\n  font: var(--text-base);\n  outline: none !important;\n  text-align: left;\n  transition: color 200ms, opacity 200ms;\n\n  [data-textarea=\"true\"] & {\n    line-height: 1.5;\n    padding: 8px 12px;\n    height: unset;\n    min-height: 5.5rem;\n  }\n\n  &::placeholder {\n    color: var(--sand10);\n    font: var(--text-base);\n    opacity: 1;\n  }\n\n  [data-disabled=\"true\"] & {\n    opacity: 1;\n    color: var(--sand9);\n\n    &::placeholder {\n      color: var(--sand9);\n    }\n  }\n`;\n\nconst CloseIcon = () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"30\"\n    height=\"30\"\n    viewBox=\"0 0 30 30\"\n    fill=\"none\"\n  >\n    <path\n      d=\"M21 9L9 21\"\n      stroke=\"#02193A\"\n      stroke-width=\"2\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    />\n    <path\n      d=\"M9 9L21 21\"\n      stroke=\"#02193A\"\n      stroke-width=\"2\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    />\n  </svg>\n);\n\nconst EditIcon = () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n  >\n    <path\n      d=\"M12 18H19\"\n      stroke=\"#7A818B\"\n      stroke-width=\"1.5\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    />\n    <path\n      d=\"M15.2504 5.47176C15.5524 5.1697 15.9621 5 16.3893 5C16.6008 5 16.8103 5.04166 17.0057 5.12261C17.2011 5.20355 17.3787 5.32219 17.5282 5.47176C17.6778 5.62133 17.7964 5.79889 17.8774 5.99431C17.9583 6.18972 18 6.39917 18 6.61069C18 6.82221 17.9583 7.03166 17.8774 7.22708C17.7964 7.42249 17.6778 7.60006 17.5282 7.74962L8.03715 17.2407L5 18L5.75929 14.9629L15.2504 5.47176Z\"\n      stroke=\"#7A818B\"\n      stroke-width=\"1.5\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    />\n  </svg>\n);\n\nconst ArrowIcon = () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"14\"\n    height=\"8\"\n    viewBox=\"0 0 14 8\"\n    fill=\"none\"\n  >\n    <path\n      d=\"M1 1L7 7L13 1\"\n      stroke=\"white\"\n      stroke-width=\"2\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    />\n  </svg>\n);\n\nconst handlePublishButtonClick = () => {\n  State.update({ isSaveDropdownOpened: false });\n  onMutationEdit();\n};\n\nconst handleForkButtonClick = () => {\n  State.update({ isSaveDropdownOpened: false });\n  onMutationCreate();\n};\n\nconst handleDropdownOpen = () => {\n  if (!loggedInAccountId) return;\n\n  State.update({\n    isSaveDropdownOpened: !state.isSaveDropdownOpened,\n  });\n};\n\nreturn (\n  <SelectedMutationEditorWrapper>\n    <HeaderEditor>\n      <Input\n        onChange={(e) => onMutationNameChange(e.target.value)}\n        value={mutationName ? mutationName : \"\"}\n      />\n      <EditIcon className=\"edit\" />\n      <Close onClick={onClose}>\n        <CloseIcon />\n      </Close>\n    </HeaderEditor>\n    {!isUserOwner ? (\n      <>\n        <Input\n          onChange={(e) => onMutationIdChange(e.target.value)}\n          placeholder={\"Enter Mutation ID\"}\n          value={mutationId ? mutationId : \"\"}\n        />\n        <EditIcon className=\"edit\" />\n      </>\n    ) : null}\n    <AppsList>\n      {allApps && allApps.length\n        ? allApps.map((app, i) => (\n            <Widget\n              key={i}\n              src=\"bos.dapplets.near/widget/ApplicationCard\"\n              props={{\n                src: app.id,\n                metadata: app.metadata,\n                hideButtons: !loggedInAccountId,\n                selectedApps:\n                  selectedApps && selectedApps.filter((x) => x === app.id)[0],\n                handleEditMutationApps: onMutationAppsChange,\n              }}\n            />\n          ))\n        : null}\n    </AppsList>\n    <ButtonsBlock>\n      <ButtonsRevert onClick={onMutationReset}>Revert changes</ButtonsRevert>\n      <ButtonsSave>\n        {isUserOwner ? (\n          <TextSave onClick={onMutationEdit}>Publish</TextSave>\n        ) : (\n          <TextSave onClick={onMutationCreate}>Fork</TextSave>\n        )}\n        <ArrowWrapper\n          $isOpened={state.isSaveDropdownOpened}\n          onClick={handleDropdownOpen}\n        >\n          <ArrowIcon />\n        </ArrowWrapper>\n        {state.isSaveDropdownOpened ? (\n          <SaveChanges>\n            {isUserOwner ? (\n              <SaveChangesItem onClick={handlePublishButtonClick}>\n                Publish\n              </SaveChangesItem>\n            ) : (\n              <SaveChangesItem onClick={handleForkButtonClick}>\n                Fork\n              </SaveChangesItem>\n            )}\n          </SaveChanges>\n        ) : null}\n      </ButtonsSave>\n    </ButtonsBlock>\n  </SelectedMutationEditorWrapper>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bos.dapplets.near/widget/ModalSelectedMutationEditor", "fact_widget_deployments_id": "86a614a702e50a6b0546fe0050f41b04", "inserted_timestamp": "2024-04-08T22:34:32.624Z", "modified_timestamp": "2024-04-08T22:34:32.624Z", "__row_index": 28}