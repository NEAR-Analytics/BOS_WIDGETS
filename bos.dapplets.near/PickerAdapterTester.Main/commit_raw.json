{"tx_hash": "5G2qoDCfhRzSEBtNpwqL4WRVVtqLS9Teb4kR83ALpYAM", "action_id_social": "2xrqajQQhqycUUdMXXVmzhWbVpXcktAfZt76RXP1E8ad-0-widget", "block_id": 122392984, "block_timestamp": "2024-07-01T13:08:08.671Z", "signer_id": "bos.dapplets.near", "widget_name": "PickerAdapterTester.Main", "source_code": "const [isRunnigApp, toggleIsRunningApp] = useState(false)\nconst [selectedContext, setSelectedContext] = useState(null)\n\nconst handleClose = () => {\n  setSelectedContext(null)\n  toggleIsRunningApp(false)\n}\n\nconst ChapterWrapper = (props) => {\n  const widgetProps = {\n    id: selectedContext.id,\n    type: 'callout',\n    onClose: handleClose,\n    content:`\n**ID:** ${selectedContext.id}\n\n**Context type:** ${selectedContext.type}\n\n**Namespace:** ${selectedContext.namespace}\n\n**Parsed context:**\n\n\\`\\`\\`js\n${JSON.stringify(selectedContext.parsed, null, 2)}\n\\`\\`\\`\n`,\n    skin: 'META_GUIDE',\n    children: ({ ref }) => {\n      props.attachContextRef(ref);\n      return props.children;\n    }\n  }\n  return (\n    <Widget\n      src='bos.dapplets.near/widget/WebGuide.OverlayTrigger'\n      loading={props?.children}\n      props={widgetProps}\n    />\n  )\n}\n\nreturn (\n  <>\n    {isRunnigApp ? (\n      <DappletContextPicker\n        target={\n          [\n            {\n              namespace: 'bos.dapplets.near/parser/twitter',\n              contextType: 'timeline',\n              if: {}\n            },\n            {\n              namespace: 'bos.dapplets.near/parser/twitter',\n              contextType: 'post',\n              if: {}\n            },\n            {\n              namespace: 'bos.dapplets.near/parser/twitter',\n              contextType: 'postSouthButton',\n              if: {}\n            },\n            {\n              namespace: 'bos.dapplets.near/parser/twitter',\n              contextType: 'profile',\n              if: {}\n            }\n          ]\n        }\n        onClick={setSelectedContext}\n        LatchComponent={ContextTypeLatch}\n      />\n    ) : null}\n    \n    <DappletPortal\n      target={{\n        namespace: \"mweb\",\n        contextType: \"mweb-overlay\",\n        injectTo: \"mweb-actions-panel\",\n        if: { id: { eq: \"mweb-overlay\" } },\n        arrowTo: \"context\",\n      }}\n      component={() => <Widget\n        src='bos.dapplets.near/widget/WebGuide.Action'\n        props={{\n          appId: 'picker-adapter-tester',\n          tooltip: isRunnigApp ? 'Stop Picker Adapter Tester' : 'Run Picker Adapter Tester',\n          isActive: isRunnigApp,\n          children: (<p>PAT</p>),\n          handleAction: () => {\n            if (isRunnigApp) {\n              handleClose()\n            } else {\n              toggleIsRunningApp(true)\n            }\n          },\n        }}\n      />}\n    />\n\n    {isRunnigApp && selectedContext ? (\n      <DappletPortal\n        target={selectedContext}\n        component={ChapterWrapper}\n      />\n    ) : null}\n  </>\n)\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bos.dapplets.near/widget/PickerAdapterTester.Main", "fact_widget_deployments_id": "965bd6044248f684939542a08c90d25a", "inserted_timestamp": "2024-07-01T13:54:52.242Z", "modified_timestamp": "2024-07-01T13:54:52.242Z", "__row_index": 0}