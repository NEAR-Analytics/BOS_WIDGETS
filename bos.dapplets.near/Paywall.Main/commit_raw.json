{"tx_hash": "FKip5aJmYdUGom9cJKq7Zsi8EUQEDmQcoQn8GaP7Xavw", "action_id_social": "APej4177MQy9YkMw8wu8buk2TY4G5PBB4vRVEp6yjoJK-0-widget", "block_id": 111024701, "block_timestamp": "2024-01-22T08:47:51.451Z", "signer_id": "bos.dapplets.near", "widget_name": "Paywall.Main", "source_code": "const { nearAccountId } = props;\nconst { authorId, linkId } = props.link;\n\nconst userAccountId = context.accountId || nearAccountId\n\nconst CONTRACT_ADDRESS = \"v2.paywall.near\";\n\n// function getContentById() {\n  // const S3_STORAGE_URL =\n  //   \"https://miscellaneous.s3-website.fr-par.scw.cloud/web3hackfest-2023\";\n\n  // const contents = [\n  //   {\n  //     id: \"f43ce7bdc6a26d1ab2582c1e6a4ebbd1\",\n  //     link: S3_STORAGE_URL + \"/MrConCreator/0001.png\",\n  //     author: \"mock.dapplets.mear\",\n  //     cost: \"200000000000000000000000\",\n  //     context_id: \"1694994895662977529\"\n  //   },\n  //   {\n  //     id: \"f43ce7bdc6a26d1ab2582c1e6a4ebbd2\",\n  //     link: S3_STORAGE_URL + \"/MrConCreator/0002.png\",\n  //     author: \"mock.dapplets.mear\",\n  //     cost: \"200000000000000000000000\",\n  //     context_id: \"1694995203663290832\"\n  //   },\n  //   {\n  //     id: \"f43ce7bdc6a26d1ab2582c1e6a4ebbd3\",\n  //     link: S3_STORAGE_URL + \"/MrConCreator/0003.png\",\n  //     author: \"mock.dapplets.mear\",\n  //     cost: \"200000000000000000000000\",\n  //     context_id: \"1694995269547438149\"\n  //   },\n  //   {\n  //     id: \"f43ce7bdc6a26d1ab2582c1e6a4ebbd4\",\n  //     link: S3_STORAGE_URL + \"/MrConCreator/0004.png\",\n  //     author: \"mock.dapplets.mear\",\n  //     cost: \"200000000000000000000000\",\n  //     context_id: \"1694995303642939408\"\n  //   },\n  // ];\n\n  // return contents.find((x) => x.id === linkId);\n// }\n\n// const isPurchased = () => userAccountId\n//   ? Near.view(\n//       CONTRACT_ADDRESS,\n//       \"purchased\",\n//       {\n//         account_id: userAccountId,\n//         content_id: linkId\n//       },\n//       \"final\",\n//       true\n//     )\n//   : false;\n\nconst setContent = () => {\n  // const content = getContentById()\n  // return content ? { content, is_purchased: isPurchased() } : null\n  State.update({\n    content: userAccountId\n    ? Near.view(\n        CONTRACT_ADDRESS,\n        \"get_content_by_post_for_account\",\n        {\n          context_id: linkId,\n          account_id: userAccountId\n        }\n      )\n    : []\n  })\n}\n\nsetContent()\n\nreturn (\n  <>\n    {state.content\n      ? <Widget src=\"bos.dapplets.near/widget/Paywall.Content\" props={{ content: state.content, CONTRACT_ADDRESS, nearAccountId }}/>\n      : <Widget src=\"bos.dapplets.near/widget/Paywall.Form\" props={{ linkId, CONTRACT_ADDRESS }}/>}\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bos.dapplets.near/widget/Paywall.Main", "fact_widget_deployments_id": "fe8178cad7ea5da612ecaca2b3441723", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 2}