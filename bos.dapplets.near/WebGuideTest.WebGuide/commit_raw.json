{"tx_hash": "AxD33c3RWdDtcFs9yZkHVs9JQcrCfZV3JEwhGAUknfUs", "action_id_social": "DqAHsT5bFmCiocJAmHyeMw4XqP3q5YCo8bB3LJvUB9R7-0-widget", "block_id": 118897895, "block_timestamp": "2024-05-14T11:06:16.486Z", "signer_id": "bos.dapplets.near", "widget_name": "WebGuideTest.WebGuide", "source_code": "const { guideConfig } = props;\n\nconst OverlayTriggerWrapper = styled.div`\n  display: flex;\n  z-index: 500;\n\n  .OverlayTrigger {\n    position: absolute;\n    background: #db504a;\n    border: 1px solid #db504a;\n    width: 6px;\n    height: 49px;\n    right: -6px;\n    top: 10px;\n    border-radius: 0px 4px 4px 0px;\n    cursor: pointer;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    box-sizing: border-box;\n    z-index: 79;\n  }\n`\n\nconst [showApp, setShowApp] = useState(true)\nconst [chapterCounter, setChapterCounter] = useState(0)\nconst [pageCounter, setPageCounter] = useState(0)\n\nif (\n  !guideConfig\n  || !guideConfig.chapters?.length\n  || !guideConfig.chapters[0].pages?.length\n) return <></>\n\nconst handleClose = () => {\n  setShowApp(false)\n}\n\nconst handleChapterDecrement = () => {\n  if (chapterCounter !== 0) {\n    setChapterCounter((val) => val - 1)\n    setPageCounter(\n      guideConfig.chapters[chapterCounter - 1]?.pages?.length\n        ? guideConfig.chapters[chapterCounter - 1]?.pages?.length - 1\n        : 0\n    )\n  }\n}\n\nconst handleChapterIncrement = () => {\n  setChapterCounter((val) => Math.min(val + 1, guideConfig.chapters.length - 1))\n  setPageCounter(0)\n}\n\nconst handleClickPrev = () => {\n  if (!pageCounter) {\n    handleChapterDecrement()\n  } else {\n    setPageCounter((val) => val - 1)\n  }\n}\n\nconst handleClickNext = () => {\n  if (pageCounter === guideConfig.chapters[chapterCounter]?.pages?.length - 1) {\n    handleChapterIncrement()\n  } else {\n    setPageCounter((val) => val + 1)\n  }\n}\n\nconst ChapterWrapper = (props) => {\n  const currentChapter = guideConfig.chapters[chapterCounter]\n  if (!currentChapter) return <></>\n  const pages = currentChapter.pages\n  if (!pages) return <></>\n  const currentPage = pages[pageCounter]\n  if (!currentPage) return <></>\n\n  const status = currentPage.status.length&& Object.entries(currentPage.status[0])[0] // ToDo: mocked!!!\n\n  const buttons = []\n  if (chapterCounter || pageCounter) {\n    buttons.push({\n      variant: \"secondary\",\n      disabled: false,\n      onClick: handleClickPrev,\n      label: \"Prev\",\n    })\n  }\n  if (chapterCounter === guideConfig.chapters.length - 1 && pageCounter === pages.length - 1) {\n    buttons.push({\n      variant: \"primary\",\n      disabled: false,\n      onClick: handleClose,\n      label: \"Finish\",\n    })\n  } else (\n    buttons.push({\n      variant: \"primary\",\n      disabled: false,\n      onClick: handleClickNext,\n      label: \"Next\",\n    })\n  )\n\n  return  (\n    <Widget\n      src='bos.dapplets.near/widget/WebGuideTest.OverlayTrigger'\n      loading={props?.children}\n      props={{\n        type: currentChapter.type,\n        placement: currentChapter.placement,\n        strategy: currentChapter.strategy,\n        navi: {\n          currentChapterIndex: chapterCounter,\n          totalChapters: guideConfig.chapters.length,\n          currentPageIndex: pageCounter,\n          totalPages: pages.length,\n        },\n        onClose: handleClose,\n        buttons,\n        status: status && {\n          type: status[0],\n          text: status[1],\n        },\n        title: currentPage.title,\n        content: currentPage.content,\n        showChecked: currentChapter.showChecked,\n        children: currentChapter.type === 'callout'\n          && currentChapter.arrowTo === \"context\"\n            ? ({ ref }) => {\n                props.attachContextRef(ref);\n                return props.children;\n              }\n            : currentChapter.arrowTo === \"insPoint\"\n            ? ({ ref }) => {\n                props.attachInsPointRef(ref);\n                return props.children;\n              }\n            : props.children,\n      }}\n    />\n  )\n}\n\nreturn showApp ? (guideConfig.chapters[chapterCounter]?.type === 'infobox' ? (\n  <OverlayTriggerWrapper>\n    <DappletOverlay>\n      <ChapterWrapper/>\n    </DappletOverlay>\n  </OverlayTriggerWrapper>\n) : (\n  <DappletPortal\n    target={{\n      namespace: guideConfig.chapters[chapterCounter]?.namespace,\n      contextType: guideConfig.chapters[chapterCounter]?.contextType,\n      injectTo: guideConfig.chapters[chapterCounter]?.injectTo,\n      if: guideConfig.chapters[chapterCounter]?.if,\n      insteadOf: guideConfig.chapters[chapterCounter]?.insteadOf,\n    }}\n    component={ChapterWrapper}\n  />\n)) : <></>\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bos.dapplets.near/widget/WebGuideTest.WebGuide", "fact_widget_deployments_id": "e094c973d66f8a51afa753d701191c44", "inserted_timestamp": "2024-05-14T12:57:58.454Z", "modified_timestamp": "2024-05-14T12:57:58.454Z", "__row_index": 0}