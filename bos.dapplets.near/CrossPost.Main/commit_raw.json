{"tx_hash": "FKRTbQZPUiQGUDJAhLbwa3Up5p3Xtyao84UzgkWjBqH4", "action_id_social": "G8wPHNjo9wjKGP3fAK8G8BtwJhm7eNuBQeHhnTqWEK3j-0-widget", "block_id": 120132637, "block_timestamp": "2024-05-31T12:06:06.285Z", "signer_id": "bos.dapplets.near", "widget_name": "CrossPost.Main", "source_code": "const TGas = Big(10).pow(12);\nconst OneNear = Big(10).pow(24);\nconst ContractId = \"social.near\";\n\nconst [isLoading, setIsLoading] = useState(false);\n\nconst getTopContext = (ctx) => {\n  return ctx.parent ? getTopContext(ctx.parent) : ctx;\n};\n\nconst buildShareLink = (targetUrl, mutationId) => {\n  const url = new URL(\"https://augm.link/mutate\");\n\n  url.searchParams.set(\"t\", targetUrl);\n  url.searchParams.set(\"m\", mutationId);\n\n  return url.href;\n};\n\nconst buildRepostText = (shareLink, text) => {\n  return `Forwarded from X with [MutableWeb](${shareLink}):\\n\\n${text}`;\n};\n\nconst handleCrosspostClick = () => {\n  const post = props.context.parsed;\n  const { mutationId } = getTopContext(props.context).parsed;\n  const shareLink = buildShareLink(post.url, mutationId);\n  const repostText = buildRepostText(shareLink, post.text);\n\n  const serializedPost = JSON.stringify({\n    type: \"md\",\n    text: repostText,\n  });\n\n  const args = {\n    data: {\n      [context.accountId]: {\n        post: {\n          main: serializedPost,\n        },\n        index: {\n          post: JSON.stringify({\n            key: \"main\",\n            value: { type: \"md\" },\n          }),\n        },\n      },\n    },\n  };\n\n  const gas = TGas.mul(100).toFixed(0);\n  const deposit = OneNear.div(100); // 0.01 NEAR // ToDo: calculate storage deposit\n\n  Near.call(ContractId, \"set\", args, gas, deposit);\n\n  // ToDo: use tx\n  setIsLoading(true);\n  setTimeout(() => setIsLoading(false), 5000);\n};\n\nconst ShareIcon = () => (\n  <svg\n    width=\"16\"\n    height=\"16\"\n    viewBox=\"0 0 16 16\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M8.2002 0.5C4.0752 0.5 0.700195 3.875 0.700195 8C0.700195 12.125 4.0752 15.5 8.2002 15.5C12.3252 15.5 15.7002 12.125 15.7002 8C15.7002 3.875 12.3252 0.5 8.2002 0.5ZM9.7002 11V8.75C6.9927 8.75 5.0577 9.8225 3.7002 11.75C4.2402 8.9975 5.9052 6.2975 9.7002 5.75V3.5L13.4502 7.25L9.7002 11Z\"\n      fill=\"#5B7083\"\n    />\n  </svg>\n);\n\nconst Button = styled.button`\n  display: flex;\n  color: #5b7083;\n  font-family: sans-serif;\n  font-size: 13px;\n  font-weight: 500;\n  line-height: 15px;\n  text-align: left;\n  border: none;\n  background: none;\n  gap: 6px;\n\n  &:hover {\n    color: #4e5459;\n  }\n\n  &:active {\n    color: #2d3031;\n  }\n`;\n\nif (isLoading) {\n  return (\n    <Button disabled>\n      <div>\n        <span class=\"spinner-grow spinner-grow-sm\" aria-hidden=\"true\"></span>\n      </div>\n      <div>Sending...</div>\n    </Button>\n  );\n}\n\nreturn (\n  <Button disabled={!context.accountId} onClick={handleCrosspostClick}>\n    <div>\n      <ShareIcon />\n    </div>\n    <div>Share</div>\n  </Button>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bos.dapplets.near/widget/CrossPost.Main", "fact_widget_deployments_id": "503d1ac6c86cba43054abc47478df6ac", "inserted_timestamp": "2024-05-31T13:41:30.103Z", "modified_timestamp": "2024-05-31T13:41:30.103Z", "__row_index": 0}