{"tx_hash": "FDpecUPFU9PRDcA35ibuREYyCspa6TAKqVffQXCbaXu3", "action_id_social": "7acLxggAnrFju2YbiRrcphryqP3FPVKC1BeALuVo2orJ-0-widget", "block_id": 120129702, "block_timestamp": "2024-05-31T11:00:51.255Z", "signer_id": "bos.dapplets.near", "widget_name": "CrossPost.Main", "source_code": "const TGas = Big(10).pow(12);\nconst OneNear = Big(10).pow(24);\n\nconst getTopContext = (ctx) => {\n  return ctx.parent ? getTopContext(ctx.parent) : ctx;\n};\n\nconst buildShareLink = (targetUrl, mutationId) => {\n  const url = new URL(\"https://augm.link/mutate\");\n\n  url.searchParams.set(\"t\", targetUrl);\n  url.searchParams.set(\"m\", mutationId);\n\n  return url.href;\n};\n\nconst buildRepostText = (shareLink, text) => {\n  return `Forwarded from X with [MutableWeb](${shareLink}):\\n\\n${text}`;\n};\n\nconst handleCrosspostClick = () => {\n  const post = props.context.parsed;\n  const { mutationId } = getTopContext(props.context).parsed;\n  const shareLink = buildShareLink(post.url, mutationId);\n  const repostText = buildRepostText(shareLink, post.text);\n\n  const data = {\n    post: {\n      main: JSON.stringify({\n        type: \"md\",\n        text: repostText,\n      }),\n      index: {\n        post: JSON.stringify({\n          key: \"main\",\n          value: { type: \"md\" },\n        }),\n      },\n    },\n  };\n\n  const gas = TGas.mul(100).toFixed(0);\n  const deposit = OneNear.div(100); // ToDo: calculate storage deposit\n  const callPromise = Near.call(\"social.near\", \"set\", data, gas, deposit);\n\n  console.log({ callPromise });\n};\n\nreturn (\n  <button disabled={!context.accountId} onClick={handleCrosspostClick}>\n    CrossPost\n  </button>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bos.dapplets.near/widget/CrossPost.Main", "fact_widget_deployments_id": "a2a4caa62f349a8665ebd1d57ad3b326", "inserted_timestamp": "2024-05-31T12:49:05.860Z", "modified_timestamp": "2024-05-31T12:49:05.860Z", "__row_index": 6}