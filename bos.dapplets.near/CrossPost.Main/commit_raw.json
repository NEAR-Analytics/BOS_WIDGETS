{"tx_hash": "CYWHt5h85jVLGRiHkFRGNR3xLcDdc9rKhCryNEoXCfZB", "action_id_social": "Bsdn795R1jWqKTKdsVDUneEZpbcawPGsQFcf45JQk9sW-0-widget", "block_id": 120132075, "block_timestamp": "2024-05-31T11:53:59.752Z", "signer_id": "bos.dapplets.near", "widget_name": "CrossPost.Main", "source_code": "const TGas = Big(10).pow(12);\nconst OneNear = Big(10).pow(24);\nconst ContractId = \"social.near\";\n\nconst [awaitingTx, setAwaitingTx] = useState(null);\n\nconst awaitingTxData = awaitingTx\n  ? Near.view(\n      awaitingTx.contractId,\n      awaitingTx.method,\n      awaitingTx.args,\n      \"final\",\n      true\n    )\n  : null;\n\nuseEffect(() => {\n  if (!awaitingTx || !awaitingTxData) return;\n\n  if (JSON.stringify(awaitingTxData) === JSON.stringify(awaitingTx.expected)) {\n    setAwaitingTx(null);\n  }\n}, [awaitingTxData, awaitingTx]);\n\nconst getTopContext = (ctx) => {\n  return ctx.parent ? getTopContext(ctx.parent) : ctx;\n};\n\nconst buildShareLink = (targetUrl, mutationId) => {\n  const url = new URL(\"https://augm.link/mutate\");\n\n  url.searchParams.set(\"t\", targetUrl);\n  url.searchParams.set(\"m\", mutationId);\n\n  return url.href;\n};\n\nconst buildRepostText = (shareLink, text) => {\n  return `Forwarded from X with [MutableWeb](${shareLink}):\\n\\n${text}`;\n};\n\nconst handleCrosspostClick = () => {\n  const post = props.context.parsed;\n  const { mutationId } = getTopContext(props.context).parsed;\n  const shareLink = buildShareLink(post.url, mutationId);\n  const repostText = buildRepostText(shareLink, post.text);\n\n  const serializedPost = JSON.stringify({\n    type: \"md\",\n    text: repostText,\n  });\n\n  const args = {\n    data: {\n      [context.accountId]: {\n        post: {\n          main: serializedPost,\n        },\n        index: {\n          post: JSON.stringify({\n            key: \"main\",\n            value: { type: \"md\" },\n          }),\n        },\n      },\n    },\n  };\n\n  const gas = TGas.mul(100).toFixed(0);\n  const deposit = OneNear.div(100); // 0.01 NEAR // ToDo: calculate storage deposit\n\n  setAwaitingTx({\n    contractId: ContractId,\n    method: \"get\",\n    args: { keys: [`${context.accountId}/post/main`] },\n    expected: {\n      [context.accountId]: { post: { main: serializedPost } },\n    },\n  });\n\n  Near.call(ContractId, \"set\", args, gas, deposit);\n};\n\nif (awaitingTx) {\n  return (\n    <button class=\"btn btn-primary\" type=\"button\" disabled>\n      <span class=\"spinner-grow spinner-grow-sm\" aria-hidden=\"true\"></span>\n      <span role=\"status\">Loading...</span>\n    </button>\n  );\n}\n\nreturn (\n  <button\n    class=\"btn btn-primary\"\n    type=\"button\"\n    disabled={!context.accountId}\n    onClick={handleCrosspostClick}\n  >\n    <span role=\"status\">CrossPost</span>\n  </button>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bos.dapplets.near/widget/CrossPost.Main", "fact_widget_deployments_id": "6df1966122cc59eafaddd3394a070739", "inserted_timestamp": "2024-05-31T13:41:30.103Z", "modified_timestamp": "2024-05-31T13:41:30.103Z", "__row_index": 16}