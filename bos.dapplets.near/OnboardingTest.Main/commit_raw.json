{"tx_hash": "FtTj3TRDmsCwdfbk7Pdxb5YqxNmRoWvZWjaFNoGbP4c6", "action_id_social": "8CerkTvSxjAg2FmnSMHxGjfhhuKpZZm76bMFWJUrNNDz-0-widget", "block_id": 115088439, "block_timestamp": "2024-03-20T10:26:19.589Z", "signer_id": "bos.dapplets.near", "widget_name": "OnboardingTest.Main", "source_code": "const [show, setShow] = useState(false)\nconst [start, setStart] = useState(false)\nconst [showFrom, setShowFrom] = useState(0)\n\nconst response = Near.view('app.webguide.near', 'get_guide', { guide_id: props?.link?.id })\nconst data = response && JSON.parse(response)\nconst lastShow= data && data?.reduce((acc, chapter) => {\n  acc[chapter.id] = Storage.privateGet(chapter.id + '/lastShow')\n  return acc\n}, {})\n\nconsole.log('data', data)\nconsole.log('props?.link?.id', props?.link?.id)\nconsole.log('props', props)\nconsole.log('lastShow',lastShow)\n\nuseEffect(() => {\n  if (\n    !start && (\n      lastShow === null || (\n        lastShow && Object.values(lastShow).every(a => a === null)\n      )\n    )\n  ) return;\n  // here if (start || (lastShow && Object.values(lastShow).some(a => a !== null))) -- ToDo: replace?\n\n  setStart(true);\n  if (lastShow) {\n    for (const key of Object.keys(lastShow)) {\n      const elapsed = Date.now() - (lastShow[key]?.time ?? 0)\n      // if (elapsed > 1000 * 60 * 60 * 3) {\n      // TESTING\n      if (lastShow[key]) lastShow[key].show = elapsed > 1000 * 60 * 1 * 1\n    }\n  }\n  console.log('lastShow with .show', lastShow)\n\n  if (!lastShow && context.accountId === props?.link?.authorId) {\n    // show form to the author\n    setShow(true)\n  } else if (lastShow && Object.values(lastShow).some(a => a?.show)) {\n    // with sort - some chapters have been displayed\n    data.sort(\n      (a, b) =>\n        !lastShow[a.id] && !lastShow[b.id]\n          ? 0\n          : !lastShow[a.id]\n            ? 1\n            : !lastShow[b.id]\n              ? -1\n              : lastShow[a.id].show - lastShow[b.id].show\n    )\n    console.log('data after sort', data)\n    setShowFrom(Object.values(lastShowByIds).filter(a => !a).length)\n    setShow(true)\n  } else if (lastShow) {\n    // without sort - for the first time\n    setShow(true)\n  }\n}, [start, lastShow])\n\nsetTimeout(() => setStart(true), 10000)\n\nconst OverlayTriggerWrapper = styled.div`\n  display: flex;\n  z-index: 500;\n\n  .OverlayTrigger {\n    position: absolute;\n    background: #db504a;\n    border: 1px solid #db504a;\n    width: 6px;\n    height: 49px;\n    right: -6px;\n    top: 10px;\n    border-radius: 0px 4px 4px 0px;\n    cursor: pointer;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    box-sizing: border-box;\n    z-index: 79;\n  }\n`\n\nconst Onboarding = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n\n  animation: falling-animation 0.3s linear forwards;\n\n  @keyframes falling-animation {\n    from {\n      transform: translate(-50%, -200%);\n    }\n\n    to {\n      transform: translate(-50%, -50%);\n    }\n  }\n`;\n\nconst handleClose = (doNotShowAgain, viewedPages) => {\n  console.log('doNotShowAgain in handleClose', doNotShowAgain)\n  console.log('viewedPages in handleClose', viewedPages)\n  if (data) {\n    // const time = doNotShowAgain ? 30000000000000 : Date.now()\n    const time = doNotShowAgain ? Date.now() + 1000 * 60 : Date.now() // TESTING\n    console.log('time', time)\n    const mutation = data.find((ch) => ch.id.includes('mutation'))?.id\n    console.log('mutation', mutation)\n    const lastShow = {\n      time,\n      mutation,\n      isViewed: viewedPages.includes(chapter.id),\n    }\n    console.log('lastShow', lastShow)\n    data.forEach((chapter) => Storage.privateSet(chapter.id + '/lastShow', lastShow))\n  }\n  setShow(false)\n}\n\nconst saveData = (inputData) => {\n  if (context?.accountId) {\n    Near.call(\n      'app.webguide.near',\n      'set_guide',\n      {\n        guide_id: props.link.id,\n        data: inputData,\n      }\n    )\n  }\n}\n\nreturn (\n  <OverlayTriggerWrapper>\n    {show ? (\n      <DappletOverlay>\n        <Onboarding>\n          <Widget\n            props={{ handleClose, data, saveData, setShow, link: props.link, showFrom }}\n            src=\"bos.dapplets.near/widget/OnboardingTest.SandboxOnboarding\"\n          />\n        </Onboarding>\n      </DappletOverlay>\n    ) : null}\n  </OverlayTriggerWrapper>\n)\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/bos.dapplets.near/widget/OnboardingTest.Main", "fact_widget_deployments_id": "7d5fc8740b68c99eff850c0a4dca8e9a", "inserted_timestamp": "2024-03-20T11:27:08.626Z", "modified_timestamp": "2024-03-20T12:33:19.110Z", "__row_index": 18}