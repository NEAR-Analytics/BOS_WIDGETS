{"tx_hash": "EjyCJLeV3ZJmnxHZXRoUZ63yqzDF78watanusm3G1Zed", "action_id_social": "DN9sv53D3wPgM1z87MsgiaZr7qyMWC18smKsHhKPFgZj-0-widget", "block_id": 117923699, "block_timestamp": "2024-04-30T02:56:50.403Z", "signer_id": "embeds.near", "widget_name": "Plugin.Marketplace", "source_code": "const { type, widgetSrc } = props;\nconst plugins = Social.keys(`*/plugin/${type || \"*\"}/*`, \"final\", {\n  return_type: \"BlockHeight\",\n});\nif (!plugins) {\n  return \"Loading...\";\n}\nconst Container = styled.div`\n  margin: 0 auto;\n  padding: 20px;\n  width: 100%;\n  max-width: 1200px;\n  a {\n    text-decoration: none;\n    color: inherit;\n  }\n`;\nconst Grid = styled.div`\n  display: grid;\n  grid-gap: 10px;\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n  @media (min-width: 576px) {\n    grid-gap: 15px;\n  }\n  @media (min-width: 992px) {\n    grid-gap: 20px;\n  }\n  > * {\n    transition: transform 0.3s ease; // Smooth transition for hover effect\n    &:hover {\n      transform: scale(1.03); // Subtle scale effect on hover\n    }\n  }\n`;\nconst processData = useCallback(\n  (data) => {\n    const accounts = Object.entries(data);\n    const allItems = accounts\n      .map((account) => {\n        const accountId = account[0];\n        const plugins = Object.entries(account[1].plugin.embed);\n        if (plugins.length > 0) {\n          return plugins.map((kv) => {\n            return {\n              accountId,\n              name: kv[0],\n              metadata: Social.get(\n                `${accountId}/plugin/embed/${kv[0]}/metadata/**`,\n                \"final\"\n              ),\n            };\n          });\n        } else {\n          return {\n            accountId,\n            name: account[1].plugin.embed,\n            metadata: Social.get(\n              `${accountId}/plugin/embed/${account[1].plugin.embed}/metadata/**`,\n              \"final\"\n            ),\n          };\n        }\n      })\n      .flat();\n    // sort by latest\n    allItems.sort((a, b) => b.blockHeight - a.blockHeight);\n    return allItems;\n  },\n  [type]\n);\nconst items = processData(plugins);\nif (!items) {\n  return \"Loading data...\";\n}\nfunction Item({ accountId, name, metadata }) {\n  return (\n    <Widget\n      src=\"embeds.near/widget/EmbedPlugin\"\n      props={{ accountId, name, type, metadata }}\n    />\n  );\n}\nconst [showCreator, setShowCreator] = useState(\"\");\nreturn (\n  <Container>\n    <p class=\"d-flex flex-row-reverse\">\n      <button\n        class=\"btn btn-primary\"\n        type=\"button\"\n        data-bs-toggle=\"collapse\"\n        data-bs-target=\"#plugin-creator\"\n        aria-expanded=\"false\"\n        aria-controls=\"plugin-creator\"\n      >\n        <i className=\"bi bi-plus\" /> Create Plugin\n      </button>\n    </p>\n    <div class=\"collapse\" id=\"plugin-creator\">\n      <div class=\"card card-body\">\n        <Widget src=\"embeds.near/widget/Plugin.Creator\" />\n      </div>\n    </div>\n    {items.length === 0 ? (\n      <p>No items of type: \"{type}\" found.</p>\n    ) : (\n      <Widget\n        src=\"everycanvas.near/widget/ItemFeed\"\n        props={{\n          items: items,\n          renderItem: Item,\n          perPage: 100,\n          renderLayout: (items) => <Grid>{items}</Grid>,\n        }}\n      />\n    )}\n  </Container>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/embeds.near/widget/Plugin.Marketplace", "fact_widget_deployments_id": "8b3a0fd848f0e4fd5154a763555654c1", "inserted_timestamp": "2024-04-30T04:40:21.988Z", "modified_timestamp": "2024-04-30T04:40:21.988Z", "__row_index": 0}