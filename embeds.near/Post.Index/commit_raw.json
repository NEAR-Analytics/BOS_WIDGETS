{"tx_hash": "EjyCJLeV3ZJmnxHZXRoUZ63yqzDF78watanusm3G1Zed", "action_id_social": "DN9sv53D3wPgM1z87MsgiaZr7qyMWC18smKsHhKPFgZj-0-widget", "block_id": 117923699, "block_timestamp": "2024-04-30T02:56:50.403Z", "signer_id": "embeds.near", "widget_name": "Post.Index", "source_code": "const accountId = props.accountId;\nif (!accountId) {\n  return \"No accountId\";\n}\nconst blockHeight =\n  props.blockHeight === \"now\" ? \"now\" : parseInt(props.blockHeight);\nconst pinned = !!props.pinned;\nconst hideMenu = !!props.hideMenu;\nconst hideButtons = !!props.hideButtons;\nconst content =\n  props.content ??\n  JSON.parse(Social.get(`${accountId}/post/main`, blockHeight) ?? \"null\");\nconst subscribe = !!props.subscribe;\nconst raw = !!props.raw;\nconst groupId = props.groupId ?? content.groupId;\nconst indexKey = props.indexKey;\nconst permissions = props.permissions;\nconst fullPostLink = props.fullPostLink;\nconst notifyAccountId = accountId;\nconst item = {\n  type: \"social\",\n  path: `${accountId}/post/main`,\n  blockHeight,\n};\nconst [edit, setEdit] = useState(false);\nconst modifications = Social.index(\"modify\", item, { limit: 1, order: \"desc\" });\nif (modifications.length) {\n  const modification = modifications[0].value;\n  if (modification.type === \"edit\") {\n    content = modification.value;\n    console.log(\"content\", content);\n  } else if (modification.type === \"delete\") {\n    return <></>;\n  }\n}\nconst link =\n  props.link ??\n  props.fullPostLink ??\n  `/mob.near/widget/MainPage.N.Post.Page?accountId=${accountId}&blockHeight=${blockHeight}`;\nconst Wrapper = styled.div`\n  margin: 0 -12px;\n  line-height: normal;\n  .post {\n    position: relative;\n    padding: 12px;\n    padding-bottom: 4px;\n    display: flex;\n    h1,\n    h2,\n    h3,\n    h4,\n    h5,\n    h6 {\n      font-size: 16px !important;\n    }\n    @media (max-width: 767px) {\n      font-size: 15px !important;\n      h1,\n      h2,\n      h3,\n      h4,\n      h5,\n      h6 {\n        font-size: 15px !important;\n      }\n    }\n    h1,\n    h2,\n    h3,\n    h4,\n    h5,\n    h6,\n    strong,\n    b {\n      font-weight: 500 !important;\n    }\n    ol,\n    ul,\n    dl {\n      margin-bottom: 0.5rem;\n      white-space: inherit;\n    }\n    p {\n      margin-bottom: 0.5rem;\n    }\n    hr {\n      display: none;\n    }\n    img {\n      border-radius: var(--bs-border-radius-lg);\n      max-height: 40em;\n    }\n    th {\n      min-width: 5em;\n    }\n    .table > :not(caption) > * > * {\n      padding: 0.3rem;\n    }\n    &:hover {\n      background-color: rgba(0, 0, 0, 0.03);\n      .expand-post {\n        background-image: linear-gradient(\n          to bottom,\n          rgba(0, 0, 0, 0),\n          rgba(247.35, 247.35, 247.35, 1) 25%\n        );\n      }\n    }\n    .post-header {\n      margin: 4px 0;\n    }\n  }\n  .post:not(:last-child):before {\n    content: \"\";\n    position: absolute;\n    left: 30px;\n    top: 56px;\n    bottom: 0;\n    width: 2px;\n    background-color: #ddd;\n    z-index: -1;\n  }\n  .post:not(:first-child):after {\n    content: \"\";\n    position: absolute;\n    left: 30px;\n    top: 0;\n    width: 2px;\n    height: 8px;\n    background-color: #ddd;\n    z-index: -1;\n  }\n  .left {\n    margin-right: 12px;\n    min-width: 60px;\n    width: 60px;\n    overflow: hidden;\n  }\n  .right {\n    margin-top: -4px;\n    flex-grow: 1;\n    min-width: 0;\n  }\n  .buttons-placeholder {\n    padding-bottom: 10px;\n  }\n  .buttons {\n    margin-top: 10px;\n    margin-bottom: 6px;\n    column-gap: 4px;\n    color: #888;\n  }\n  .reposted {\n    padding-top: 30px;\n  }\n`;\nconst Content = () => {\n  if (edit) {\n    return (\n      <Widget\n        src=\"embeds.near/widget/Post.Editor\"\n        loading=\"\"\n        props={{ ...content, item }}\n      />\n    );\n  } else {\n    return (\n      <Widget\n        key=\"content\"\n        loading={\n          <div\n            className=\"overflow-hidden w-100 placeholder-glow\"\n            style={{ minHeight: \"100px\" }}\n          />\n        }\n        src=\"embeds.near/widget/Post.Content\"\n        props={{\n          content,\n          raw,\n          truncateContent: props.truncateContent,\n          noEmbed: props.noEmbed,\n        }}\n      />\n    );\n  }\n};\nreturn (\n  <Wrapper\n    style={\n      props.hideComments || props.noBorder\n        ? undefined\n        : {\n            borderBottom: \"1px solid #eee\",\n          }\n    }\n  >\n    <div className={`post ${props.reposted ? \"reposted\" : \"\"}`}>\n      <div className=\"left\">\n        <Widget\n          loading=\"\"\n          src=\"mob.near/widget/MainPage.N.Post.Left\"\n          props={{ accountId, groupId }}\n        />\n        {context.accountId === accountId && (\n          <>\n            <button onClick={() => setEdit(!edit)}>Edit</button>\n            <button\n              onClick={() =>\n                Social.set({\n                  index: {\n                    modify: JSON.stringify({\n                      key: item,\n                      value: {\n                        type: \"delete\",\n                      },\n                    }),\n                  },\n                })\n              }\n            >\n              Delete\n            </button>\n          </>\n        )}\n      </div>\n      <div className=\"right\">\n        <Widget\n          loading={<div className=\"post-header\" />}\n          src=\"mob.near/widget/MainPage.N.Post.Header\"\n          props={{\n            accountId,\n            blockHeight,\n            pinned,\n            hideMenu,\n            link,\n            postType: \"post\",\n            flagItem: item,\n          }}\n        />\n        {fullPostLink ? (\n          <a\n            key=\"full-post-link\"\n            target=\"_blank\"\n            href={fullPostLink}\n            className=\"text-decoration-none link-dark\"\n          >\n            <Content />\n          </a>\n        ) : (\n          <Content />\n        )}\n        {props.customButtons ? (\n          props.customButtons\n        ) : !pinned && !hideButtons && blockHeight !== \"now\" ? (\n          <div className=\"buttons d-flex justify-content-between\">\n            <Widget\n              loading=\"\"\n              src=\"mob.near/widget/N.CommentButton\"\n              props={{\n                disabled: permissions.disableComment,\n                onClick: () => State.update({ showReply: !state.showReply }),\n              }}\n            />\n            <Widget\n              loading=\"\"\n              src=\"mob.near/widget/N.RepostButton\"\n              props={{\n                disable: permissions.disableRepost,\n                notifyAccountId,\n                item,\n                // indexKey,\n                // groupId,\n              }}\n            />\n            <Widget\n              loading=\"\"\n              src=\"mob.near/widget/N.LikeButton\"\n              props={{\n                notifyAccountId,\n                item,\n              }}\n            />\n            <Widget\n              loading=\"\"\n              src=\"mob.near/widget/MainPage.N.Post.ShareButton\"\n              props={{ accountId, blockHeight, postType: \"post\", groupId }}\n            />\n          </div>\n        ) : (\n          <div className=\"buttons-placeholder\" />\n        )}\n      </div>\n    </div>\n    {state.showReply && (\n      <div className=\"border-top\">\n        <Widget\n          loading=\"\"\n          src=\"mob.near/widget/MainPage.N.Comment.Compose\"\n          props={{\n            notifyAccountId,\n            item,\n            onComment: () => State.update({ showReply: false }),\n          }}\n        />\n      </div>\n    )}\n    {props.customComments\n      ? props.customComments\n      : !props.hideComments && (\n          <Widget\n            key=\"comments\"\n            loading={false}\n            src=\"mob.near/widget/MainPage.N.Comment.Feed\"\n            props={{\n              item,\n              highlightComment: props.highlightComment,\n              limit: props.commentsLimit,\n              subscribe,\n              raw,\n              accounts: props.commentAccounts,\n              groupId,\n              permissions,\n            }}\n          />\n        )}\n  </Wrapper>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/embeds.near/widget/Post.Index", "fact_widget_deployments_id": "7407f2125e40587bf63c7d951e7cbac0", "inserted_timestamp": "2024-04-30T04:40:21.988Z", "modified_timestamp": "2024-04-30T04:40:21.988Z", "__row_index": 0}