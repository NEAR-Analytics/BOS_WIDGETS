{"tx_hash": "2GeicieqcK5mkLbLGxme9kgTomtXBjiaDkZgpUXf4LBN", "action_id_social": "6zFNFyNGNkaL5uJkhipLpacCpbuWpd8q4ChFDN8W5ztu-0-widget", "block_id": 106887866, "block_timestamp": "2023-11-30T20:44:22.602Z", "signer_id": "embeds.near", "widget_name": "Post.Content", "source_code": "const content = props.content;\nconst noEmbed = !!props.noEmbed;\n\nconst [truncated, setTruncated] = useState(props.truncateContent ?? true);\n\nconst Wrapper = styled.div`\n  overflow: hidden;\n  .truncated-content {\n    max-height: 38em;\n    position: relative;\n    overflow: hidden;\n\n    .expand-post {\n      position : absolute;\n      z-index  : 1;\n      top   : 35em;\n      left     : 0;\n      background-image : linear-gradient(to bottom, \n                        rgba(255,255,255, 0), \n                        rgba(255,255,255, 1) 25%);\n      width    : 100%;\n      height   : 3em;\n\n      > div {\n        position: relative;\n        width: 100%;\n        height: 100%;\n        veritcal-align: bottom;\n        display: flex;\n        flex-direction: column;\n        justify-content: flex-end;\n        cursor: pointer;\n        > a {\n          margin: 0 0 0.7em 0.7em;\n        }\n      }\n    }\n\n    @media(max-width: 991px) {\n      max-height: 30em;\n      .expand-post {\n        top: 27em;\n      }\n    }\n  }\n\n  .full-content {\n    .expand-post {\n      display: none;\n    }\n  }\n`;\n\nconst [onHashtag] = useState(() => (hashtag) => (\n  <span\n    key={hashtag}\n    className=\"d-inline-flex\"\n    style={{ color: \"var(--bs-link-color)\" }}\n  >\n    <a href={`/?hashtag=${hashtag}`}>#{hashtag}</a>\n  </span>\n));\n\nconst [showLightbox, setShowLightbox] = useState(false);\n\nconst [onImage] = useState(\n  () => (props) =>\n    props.src && (\n      <Widget\n        key=\"content-img\"\n        src=\"mob.near/widget/MainPage.N.Post.Content.Image\"\n        loading={<div className=\"w-100\" style={{ height: \"24em\" }} />}\n        props={{\n          image: {\n            url: props.src,\n          },\n          alt: props.alt ?? \"inline image\",\n        }}\n      />\n    )\n);\n\nconst onLink = useCallback((props) => {\n  if (props.children[0] === \"EMBED\") {\n    // EMBED\n    return <Widget src=\"embeds.near/widget/Embed\" loading=\"\" props={props} />;\n  } else {\n    return <a {...props} />;\n  }\n}, []);\n\nreturn (\n  <Wrapper>\n    <div className={truncated ? \"truncated-content\" : \"full-content\"}>\n      <div key=\"text\" className=\"text-break\">\n        <Widget\n          key=\"content\"\n          loading={<div className=\"w-100\" style={{ height: \"100px\" }} />}\n          src=\"mob.near/widget/N.SocialMarkdown\"\n          props={{\n            text: content.text,\n            onHashtag,\n            onImage,\n            onLink: noEmbed ? undefined : onLink,\n          }}\n        />\n      </div>\n      {content.image && (\n        <div key=\"content-img\" className=\"mt-2\">\n          <Widget\n            src=\"mob.near/widget/MainPage.N.Post.Content.Image\"\n            loading={<div className=\"w-100\" style={{ height: \"24em\" }} />}\n            props={{ image: content.image, alt: \"attached image\" }}\n          />\n        </div>\n      )}\n      <div className=\"expand-post\">\n        <div>\n          <a className=\"stretched-link\" onClick={() => setTruncated(false)}>\n            Show more\n          </a>\n        </div>\n      </div>\n    </div>\n  </Wrapper>\n);", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/embeds.near/widget/Post.Content", "fact_widget_deployments_id": "72e4f67adab31b2d962e9c095a52ae36", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}