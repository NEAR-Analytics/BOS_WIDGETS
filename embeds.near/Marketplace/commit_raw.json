{"tx_hash": "2GeicieqcK5mkLbLGxme9kgTomtXBjiaDkZgpUXf4LBN", "action_id_social": "6zFNFyNGNkaL5uJkhipLpacCpbuWpd8q4ChFDN8W5ztu-0-widget", "block_id": 106887866, "block_timestamp": "2023-11-30T20:44:22.602Z", "signer_id": "embeds.near", "widget_name": "Marketplace", "source_code": "// Feed\nconst things = Social.keys(`*/plugin/embed/*`, \"final\", {\n  return_type: \"BlockHeight\",\n});\n\nif (!things) {\n  return \"Loading...\";\n}\n\nconst Container = styled.div`\n  margin: 0 auto;\n  padding: 20px;\n  width: 100%;\n  max-width: 1200px;\n`;\n\nconst Grid = styled.div`\n  display: grid;\n  grid-gap: 10px;\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n\n  @media (min-width: 576px) {\n    grid-gap: 15px;\n  }\n\n  @media (min-width: 992px) {\n    grid-gap: 20px;\n  }\n\n  > * {\n    transition: transform 0.3s ease; // Smooth transition for hover effect\n\n    &:hover {\n      transform: scale(1.03); // Subtle scale effect on hover\n    }\n  }\n`;\n\nconst processData = useCallback(\n  (data) => {\n    const accounts = Object.entries(data);\n    const allItems = accounts\n      .map((account) => {\n        const accountId = account[0];\n        console.log(\"account other\", account[1])\n        const plugins = Object.entries(account[1].plugin.embed);\n        if (plugins.length > 0) {\n          return plugins.map((kv) => {\n            return {\n              accountId,\n              name: kv[0],\n              metadata: Social.get(\n                `${accountId}/plugin/embed/${kv[0]}/metadata/**`,\n                \"final\"\n              ),\n            };\n          });\n        } else {\n          return {\n            accountId,\n            name: account[1].plugin.embed,\n            metadata: Social.get(\n              `${accountId}/plugin/embed/${account[1].plugin.embed}/metadata/**`,\n              \"final\"\n            ),\n          };\n        }\n      })\n      .flat();\n\n    // sort by latest\n    allItems.sort((a, b) => b.blockHeight - a.blockHeight);\n    return allItems;\n  },\n  [type]\n);\n\n// return <p>{JSON.stringify(things)}</p>\nconst items = processData(things);\n\nif (!items) {\n  return \"Loading data...\";\n}\n\nfunction Item({ accountId, name, metadata}) {\n  return (\n    <Widget\n      src=\"embeds.near/widget/EmbedPlugin\" \n      props={{ accountId, name, type, metadata }}\n    />\n  );\n}\n\nconst [showCreator, setShowCreator] = useState(\"\");\n\nreturn (\n  <Container>\n    <div className=\"d-flex justify-content-between align-items-center mb-3\">\n      <h3>every {type}</h3>\n      <div>\n        <button\n          className=\"classic me-2\"\n          onClick={() => setShowCreator(!showCreator)}\n        >\n          <i className=\"bi bi-plus\" />\n        </button>\n      </div>\n    </div>\n    {showCreator && (\n      <>\n        <Widget src=\"embeds.near/widget/Creator\" props={{}} />\n      </>\n    )}\n    {items.length === 0 ? (\n      <p>No items of type: \"{type}\" found.</p>\n    ) : (\n      <Widget\n        src=\"everycanvas.near/widget/ItemFeed\"\n        props={{\n          items: items,\n          renderItem: Item,\n          perPage: 100,\n          renderLayout: (items) => <Grid>{items}</Grid>,\n        }}\n      />\n    )}\n  </Container>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/embeds.near/widget/Marketplace", "fact_widget_deployments_id": "76dc32ae2aba7e7b8ce21e0e38e29763", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}