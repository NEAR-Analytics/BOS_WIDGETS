{"tx_hash": "4SLcF6j142dzDw33xhkFGh6LdbEZUgLYPJkYQTGfBj5i", "action_id_social": "6dYKEAQyvxUBvKeAxgLW6CUfJyUL5RoJsKTgQd9Pm73k-0-widget", "block_id": 107743087, "block_timestamp": "2023-12-12T07:35:04.360Z", "signer_id": "ahmadbug.near", "widget_name": "ExpensesTracker", "source_code": "const cssFont = fetch(\n  \"https://fonts.googleapis.com/css2?family=Pacifico&family=Manrope:wght@200;300;400;500;600;700;800\"\n).body;\n\nif (!cssFont) return \"\";\n\nif (!state.theme) {\n  State.update({\n    theme: styled.div`\n              ${cssFont}\n                    font-family:  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n                          color: #fff;\n\n                                .expense-tracker {\n                                        width: 550px;\n                                                padding: 16px;\n                                                        border-radius: 12px;\n                                                                background: linear-gradient(270deg, #5a58e5 17.37%, #66acf7 100%);\n                                                                        display: flex;\n                                                                                flex-direction: column;\n                                                                                        align-items: center;\n                                                                                                justify-content: center;\n                                                                                                        text-align: center;\n                                                                                                              }\n                                                \n        .list{\n            margin-top: 20px;\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n           gap: 8px;\n           background: #fff;\n           color: #000\n        }     \n        .budget-overview{\n            display: flex;\n            justify-content: space-between;\n           \n            flex-direction: column;\n            font-size:20px\n        }                                                                                                                                                         display: flex;\n                                                                                                                                                                                                                                                                                                            justify-content: space-between;\n                                                                                                                                                                                                                                                                                                                  }\n                                                                                                                                                                                                                                                                                                                      `,\n  });\n}\n\nconst Theme = state.theme;\n\nconst [expenses, setExpenses] = useState([]);\nconst [budget, setBudget] = useState(1000);\nconst [isEditing, setIsEditing] = useState(false);\nconst [editedBudget, setEditedBudget] = useState(budget);\nconst [description, setDescription] = useState(\"\");\nconst [amount, setAmount] = useState(\"\");\nconst [category, setCategory] = useState(\"\");\nconst [searchQuery, setSearchQuery] = useState(\"\");\n\nconst onAddExpense = (newExpense) => {\n  setExpenses([...expenses, newExpense]);\n};\n\nconst onDeleteExpense = (id) => {\n  const updatedExpenses = expenses.filter((expense) => expense.id !== id);\n  setExpenses(updatedExpenses);\n};\n\nconst onEditExpense = (editedExpense) => {\n  const updatedExpenses = expenses.map((expense) =>\n    expense.id === editedExpense.id ? editedExpense : expense\n  );\n  setExpenses(updatedExpenses);\n};\n\nconst onEditBudget = (newBudget) => {\n  setBudget(newBudget);\n};\n\nconst categorizeExpense = (description) => {\n  // ... (unchanged)\n\n  return \"others\"; // Default category if no match\n};\n\nconst handleSubmit = (e) => {\n  e.preventDefault();\n  if (!description || !amount) return;\n\n  const expenseCategory = categorizeExpense(description);\n\n  const newExpense = {\n    id: Date.now(),\n    description,\n    amount: parseFloat(amount),\n    category: category || expenseCategory,\n  };\n\n  onAddExpense(newExpense);\n\n  setDescription(\"\");\n  setAmount(\"\");\n  setCategory(\"\");\n};\n\nconst handleEdit = () => {\n  onEditBudget(editedBudget);\n  setIsEditing(false);\n};\n\nconst openEditModal = (expense) => {\n  setExpenseToEdit(expense);\n  setEditModalOpen(true);\n};\n\nconst closeEditModal = () => {\n  setExpenseToEdit(null);\n  setEditModalOpen(false);\n};\n\nconst handleEditExpense = () => {\n  onEditExpense(expenseToEdit);\n  closeEditModal();\n};\n\nconst filteredExpenses = expenses.filter(\n  (expense) =>\n    expense.description.toLowerCase().includes(searchQuery.toLowerCase()) ||\n    expense.category.toLowerCase().includes(searchQuery.toLowerCase())\n);\n\nreturn (\n  <Theme>\n    <div className=\"expense-tracker\">\n      <h1 className=\"heading\">Expense Tracker</h1>\n\n      <div>\n        <h2>Budget Overview</h2>\n        {isEditing ? (\n          <div>\n            <label>\n              New Budget:\n              <input\n                type=\"number\"\n                value={editedBudget}\n                onChange={(e) => setEditedBudget(parseFloat(e.target.value))}\n              />\n            </label>\n            <button onClick={handleEdit} className=\"edit\">\n              Save\n            </button>\n          </div>\n        ) : (\n          <>\n            <div className=\"budget-overview\">\n              <p className=\"budget\">Budget: \u20a6{budget.toFixed(2)}</p>\n              <p className=\"expense\">\n                Total Expenses: \u20a6\n                {expenses\n                  .reduce((total, expense) => total + expense.amount, 0)\n                  .toFixed(2)}\n              </p>\n\n              <p className=\"remain\">\n                Remaining Budget: \u20a6\n                {(\n                  budget -\n                  expenses.reduce((total, expense) => total + expense.amount, 0)\n                ).toFixed(2)}\n              </p>\n            </div>\n            <button\n              onClick={() => setIsEditing(true)}\n              className=\"btn btn-primary\"\n            >\n              Edit Budget\n            </button>\n          </>\n        )}\n      </div>\n      <div className=\"form-ex\">\n        <br />\n        <div className=\"form-input\">\n          <label>\n            Description:\n            <input\n              type=\"text\"\n              value={description}\n              onChange={(e) => setDescription(e.target.value)}\n            />\n          </label>\n          <label>\n            Amount:\n            <input\n              type=\"number\"\n              value={amount}\n              onChange={(e) => setAmount(e.target.value)}\n            />\n          </label>\n          <label>\n            Category:\n            <input\n              type=\"text\"\n              value={category}\n              onChange={(e) => setCategory(e.target.value)}\n            />\n          </label>\n        </div>\n        <br />\n        <button onClick={handleSubmit}>Add Expense</button>\n      </div>\n      <div className=\"expense-table\">\n        <h2>Expense List</h2>\n        {/* Search input */}\n        <input\n          type=\"text\"\n          placeholder=\"Search expenses...\"\n          value={searchQuery}\n          onChange={(e) => setSearchQuery(e.target.value)}\n        />\n        <ul>\n          {/* Display filtered expenses */}\n          {filteredExpenses.map((expense) => (\n            <li className=\"container row\" key={expense.id}>\n              <div className=\" list\">\n                <strong>{expense.description}</strong>\n                <span>{expense.category}</span>\n                <span>${expense.amount}</span>\n\n                <button onClick={() => onDeleteExpense(expense.id)}>\n                  Delete\n                </button>\n              </div>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  </Theme>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/ahmadbug.near/widget/ExpensesTracker", "fact_widget_deployments_id": "3ab1e1beba3152906d3bd73edd7c4b50", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 1}