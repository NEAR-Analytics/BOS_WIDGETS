{"tx_hash": "6fSM8q2BCmQ2AbsSRHYyGa4QW1HSNYtDeSLmY6cpayEV", "action_id_social": "GGhJtrpivtbLmKBRrLg9NcCQknfA79uJJ7mSsKYTgSJ5-0-widget", "block_id": 107661167, "block_timestamp": "2023-12-11T07:27:50.446Z", "signer_id": "zubairweb3.near", "widget_name": "rafflestore.raffles", "source_code": "const first =\n  \"https://res.cloudinary.com/dfbqtfoxu/image/upload/v1700588104/rafflestore/arm_ztddgz.jpg\";\nconst second =\n  \"https://res.cloudinary.com/dfbqtfoxu/image/upload/v1700588104/rafflestore/second_kyzzas.png\";\nconst third =\n  \"https://res.cloudinary.com/dfbqtfoxu/image/upload/v1700588122/rafflestore/third_kfbwtw.jpg\";\nconst fourth =\n  \"https://res.cloudinary.com/dfbqtfoxu/image/upload/v1700588111/rafflestore/fourth_rjhmaz.png\";\nconst fifth =\n  \"https://res.cloudinary.com/dfbqtfoxu/image/upload/v1700588106/rafflestore/fifth_ezz3ox.jpg\";\nconst sixth =\n  \"https://res.cloudinary.com/dfbqtfoxu/image/upload/v1700588106/rafflestore/sixth_ulpy9d.png\";\nconst seven =\n  \"https://res.cloudinary.com/dfbqtfoxu/image/upload/v1700588102/rafflestore/seven_c7elf0.jpg\";\nconst eight =\n  \"https://res.cloudinary.com/dfbqtfoxu/image/upload/v1700588097/rafflestore/eight_i2lrlt.jpg\";\nconst close =\n  \"https://res.cloudinary.com/dfbqtfoxu/image/upload/v1700588097/rafflestore/closenft_slzdzg.jpg\";\n\nconst newspaper =\n  \"https://res.cloudinary.com/dfbqtfoxu/image/upload/v1700588107/rafflestore/newspaper_kf09vu.png\";\nconst event =\n  \"https://res.cloudinary.com/dfbqtfoxu/image/upload/v1700588117/rafflestore/event_tq6dhm.png\";\n\nconst hat =\n  \"https://res.cloudinary.com/dfbqtfoxu/image/upload/v1700588114/rafflestore/hat_szxoc2.png\";\nconst dog =\n  \"https://res.cloudinary.com/dfbqtfoxu/image/upload/v1700588097/rafflestore/dog_f1ptbq.png\";\n\nconst defaultnft =\n  \"https://res.cloudinary.com/dfbqtfoxu/image/upload/v1700588097/rafflestore/defaultnft_hrzyyp.jpg\";\n\nconst limit = 100;\nconst offset = 0;\n\nconst data = fetch(\"https://graph.mintbase.xyz/mainnet\", {\n  method: \"POST\",\n  headers: {\n    \"mb-api-key\": \"omni-site\",\n    \"Content-Type\": \"application/json\",\n    \"x-hasura-role\": \"anonymous\",\n  },\n  body: JSON.stringify({\n    query: `\n          query MyQuery {\n            mb_views_nft_tokens(\n                limit: ${limit},\n                offset: ${offset}\n            where: {\n          _or: [\n            \n         \n    {nft_contract_id: {_eq: \"nft.genadrop.near\"}},\n         \n         \n           \n          ]\n        }\n              order_by: {minted_timestamp: desc}\n            ) {\n              media\n              owner\n              title\n              metadata_id\n              token_id\n            }\n          }\n        `,\n  }),\n});\n\nState.init({ raffleData: {} });\n\nconst nftData = [\n  {\n    id: 1,\n    name: \"SharDog Raffles\",\n    image: dog,\n    nft: data.body.data.mb_views_nft_tokens,\n  },\n  {\n    id: 2,\n    name: \"NearWeek Raffles\",\n    image: newspaper,\n    nft: [\n      {\n        name: \"Default\",\n        status: \"open\",\n        unit: 2,\n        image: defaultnft,\n      },\n      {\n        name: \"Default\",\n        status: \"open\",\n        unit: 2,\n        image: defaultnft,\n      },\n      {\n        name: \"Default\",\n        status: \"open\",\n        unit: 2,\n        image: defaultnft,\n      },\n      {\n        name: \"Default\",\n        status: \"open\",\n        unit: 2,\n        image: defaultnft,\n      },\n      {\n        name: \"Default\",\n        status: \"open\",\n        unit: 2,\n        image: defaultnft,\n      },\n    ],\n  },\n  {\n    id: 3,\n    name: \"Community Rafflest\",\n    image: event,\n    nft: [\n      {\n        name: \"Default\",\n        status: \"open\",\n        unit: 2,\n        image: defaultnft,\n      },\n      {\n        name: \"Default\",\n        status: \"open\",\n        unit: 2,\n        image: defaultnft,\n      },\n      {\n        name: \"Default\",\n        status: \"open\",\n        unit: 2,\n        image: defaultnft,\n      },\n      {\n        name: \"Default\",\n        status: \"open\",\n        unit: 2,\n        image: defaultnft,\n      },\n      {\n        name: \"Default\",\n        status: \"open\",\n        unit: 2,\n        image: defaultnft,\n      },\n    ],\n  },\n  {\n    id: 4,\n    name: \"El Caf\u00e9 Cartel Raffles\",\n    image: hat,\n    nft: [\n      {\n        name: \"Default\",\n        status: \"open\",\n        unit: 2,\n        image: defaultnft,\n      },\n      {\n        name: \"Default\",\n        status: \"open\",\n        unit: 2,\n        image: defaultnft,\n      },\n      {\n        name: \"Default\",\n        status: \"open\",\n        unit: 2,\n        image: defaultnft,\n      },\n      {\n        name: \"Default\",\n        status: \"open\",\n        unit: 2,\n        image: defaultnft,\n      },\n      {\n        name: \"Default\",\n        status: \"open\",\n        unit: 2,\n        image: defaultnft,\n      },\n    ],\n  },\n];\n\nState.init({\n  selectedRaffle: undefined,\n  selectedTitle: \"\",\n  filteredRaffleData: [],\n});\n\nState.init({ nftStatus: \"open\" });\n\nconst handleRaffleClick = (raffleId, title) => {\n  State.update({ selectedRaffle: raffleId, selectedTitle: title });\n\n  const filteredData = data.body.data.mb_views_nft_tokens.filter(\n    (item) => (item.title.includes = \"comic\")\n  );\n\n  console.log(filteredData);\n  State.update({ filteredRaffleData: filteredData });\n};\n\nconst Heading = styled.h1`\ncolor: green;\ntext-align: center;\nfont-size: 3em;\n`;\n\nconst Collection = styled.h1`\nmax-width: 80%;\nmargin: 5rem auto;\n`;\n\nconst RaffleMain = styled.h1`\ndisplay: flex;\ngap: 0.5rem;\njustify-content: space-between;\nalign-items: center;\nwidth: 100%;\n@media screen and (max-width: 768px){\n  flex-direction: column;\n  margin-bottom: 20px;\n  gap: 0;\n}\n`;\n\nconst RaffleContent = styled.div`\ndisplay: flex;\nflex-direction: column;\nwidth: 22%;\nmargin-bottom: 4rem;\n@media screen and (max-width: 768px){\n width: 100%;\n}\n transition: transform 0.3s ease-in-out;\n   &:hover {\n    transform: scale(1.1);\n  }\n`;\n\nconst RaffleTitle = styled.h3`\nfont-size: 1.1rem;\nmargin-bottom: 1rem;\n`;\n\nconst StyledImage = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  display: block;\n  margin: 0;\n  padding: 0;\n`;\n\nconst RaffleName = styled.h1`\nfont-weight: 700;\nfont-size: 36px;\nmargin-bottom: 1.5rem;\ntext-align: center;\n`;\n\nconst NewRaffleBtn = styled.button`\n  color: white;\n  padding: 1.2rem 1.5rem;\n  cursor: pointer;\n  border-width: 1px;\n  border-radius: 0.75rem;\n  background: #003C8C;\n  font-size: 1rem;\n`;\n\nconst ClosedRaffleBtn = styled.button`\n  color: #000;\n  padding: 1.2rem 1.5rem;\n  cursor: pointer;\n  border-radius: 0.75rem;\n   font-size: 1rem;\n`;\n\nconst RaffleListContainer = styled.div`\n text-align: center;\n display: flex;\n justify-content: center;\n flex-direction: column;\n\n`;\n\nconst RaffleList = styled.div`\n display: flex;\n width: 100%;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  gap: 0.5rem;\n`;\n\nconst RaffleListItem = styled.div`\ndisplay: flex;\nwidth: 20%;\nmargin: 1rem 0;\nborder-radius: 1rem;\nborder: 1px solid #e5e7eb;\nflex-direction: column;\noverflow: hidden;\n transition: transform 0.3s ease-in-out;\n   &:hover {\n    transform: scale(1.1);\n  }\n@media screen and (max-width: 768px){\n width: 100%;\n}\n \n`;\n\nconst RaffleListImg = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  display: block;\n  margin: 0;\n  padding: 0;\n`;\nconst RaffleBtnGroup = styled.div`\n text-align: center;\n margin-bottom: 1rem;\n`;\n\nconst NftListContent = styled.div`\n \n`;\n\nconst NftTitle = styled.h3`\n font-weight: 700;\nfont-size: 0.8rem;\nmargin-top: 15px;\n`;\nconst NftName = styled.h3`\nfont-size: 0.8rem;\n`;\n\nconst NfttBtn = styled.a`\n color: white;\n background: #003C8C;\n font-weight: 700;\n font-size: 12px;\n padding: 0.25rem 1rem;\n border: 1px solid #e5e7eb;\n cursor: pointer;\n border-radius: 0.5rem;\n margin: auto;\n width: 40%;\n text-decoration: none;\n &:hover {\n   text-decoration: none;\n  }\n`;\n\nconst RaffleStatus = styled.h6`\n font-weight: 700;\n font-size: 0.8rem;\n`;\n\nconst NftRaffleUnits = styled.div`\n font-size: 6px;\n margin-bottom: 15px;\n`;\n\nconst MoreBtn = styled.button`\nbackground: #003C8C;\ncolor: #fff;\npadding: 0.5rem 0;\nborder: none;\nborder-radius: 0.75rem;\ntext-align: center;\nwidth: 6rem;\ncursor: pointer;\nfont-size: 1rem;\nmargin: 0 auto;\n`;\n\nreturn (\n  <>\n    <Collection>\n      <RaffleMain>\n        {nftData.map((raffle) => (\n          <RaffleContent key={raffle.id}>\n            <RaffleTitle>{raffle.name}</RaffleTitle>\n            <StyledImage\n              onClick={() => handleRaffleClick(raffle.id, raffle.name)}\n              src={raffle.image}\n              alt={raffle.name}\n            />\n          </RaffleContent>\n        ))}\n      </RaffleMain>\n\n      <RaffleListContainer>\n        <RaffleName>{state.selectedTitle || nftData[0].name}</RaffleName>\n        <RaffleBtnGroup>\n          <NewRaffleBtn onClick={() => State.update({ nftStatus: \"open\" })}>\n            New Raffles\n          </NewRaffleBtn>\n          <ClosedRaffleBtn onClick={() => State.update({ nftStatus: \"close\" })}>\n            Closed Raffles\n          </ClosedRaffleBtn>\n        </RaffleBtnGroup>\n\n        {state.selectedRaffle ? (\n          <RaffleList>\n            {nftData[state.selectedRaffle - 1].nft.map((nft, index) => (\n              <RaffleListItem key={index}>\n                <RaffleListImg src={nft.media} alt={nft.name} />\n                <NftTitle>{nft.title}</NftTitle>\n                <NftName>{nft.name}</NftName>\n                <NfttBtn>\n                  <a href=\"https://near.org/zubairweb3.near/widget/rafflestore.raffle\">\n                    Enter\n                  </a>\n                </NfttBtn>\n                <RaffleStatus>{nft.status}</RaffleStatus>\n                <NftRaffleUnits>Units: {nft.unit}</NftRaffleUnits>\n              </RaffleListItem>\n            ))}\n          </RaffleList>\n        ) : (\n          <RaffleList>\n            {nftData[0].nft.map((nft, index) => (\n              <RaffleListItem key={index}>\n                <RaffleListImg src={nft.media} alt={nft.name} />\n                <NftTitle>{nft.title}</NftTitle>\n                <NftName>{nft.name}</NftName>\n                <NfttBtn href=\"https://near.org/zubairweb3.near/widget/rafflestore.raffle\">\n                  Enter\n                </NfttBtn>\n                <RaffleStatus>{nft.status}</RaffleStatus>\n                <NftRaffleUnits>Units: {nft.unit}</NftRaffleUnits>\n              </RaffleListItem>\n            ))}\n          </RaffleList>\n        )}\n\n        <MoreBtn>More</MoreBtn>\n      </RaffleListContainer>\n    </Collection>\n  </>\n);\n", "metadata": {"fork_of": "zubairweb3.near/widget/rafflestore.raffles@107660872"}, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/zubairweb3.near/widget/rafflestore.raffles", "fact_widget_deployments_id": "809bae689f5cc3ef3f50438e8392281e", "inserted_timestamp": "2023-12-11T09:28:41.827Z", "modified_timestamp": "2023-12-20T03:22:11.422Z", "__row_index": 26}