{"tx_hash": "joBwrCduuZhDXd5XdGcJXQwZiCobhVp3eaSVMECVxb2", "action_id_social": "7VyReqpdfA9CDH2h33CUhdrdUgU9xWFhnXbAYNSZRAMF-0-widget", "block_id": 91727966, "block_timestamp": "2023-05-13T02:41:11.943Z", "signer_id": "ae03d71382e8621650adfb5706ca430676d9756893b08c1efeae37c92024ef1a", "widget_name": "ref-burrow-healthFactor", "source_code": "let MAX_RATIO = 10_000;\nlet accountId = context.accountId;\nlet B = Big();\nB.DP = 60; // set precision to 60 decimals\nconst { assets, rewards, account } = state;\nconst hasData = assets.length > 0 && rewards.length > 0 && account;\nconst onLoad = (data) => {\n  State.update(data);\n};\nconst expandToken = (value, decimals) => {\n  return B(value).mul(B(10).pow(decimals));\n};\n\nconst formatToken = (v) => Math.floor(v * 10_000) / 10_000;\nfunction getAdjustedSum(type, account) {\n  if (!assets || !account || account[type].length == 0) return 0;\n  return account[type]\n    .map((assetInAccount) => {\n      const asset = assets.find((a) => a.token_id === assetInAccount.token_id);\n\n      const price = asset.price\n        ? B(asset.price.multiplier).div(B(10).pow(asset.price.decimals))\n        : B(0);\n\n      const pricedBalance = B(assetInAccount.balance)\n        .div(expandToken(1, asset.config.extra_decimals))\n        .mul(price);\n\n      return type === \"borrowed\"\n        ? pricedBalance\n            .div(asset.config.volatility_ratio)\n            .mul(MAX_RATIO)\n            .toFixed()\n        : pricedBalance\n            .mul(asset.config.volatility_ratio)\n            .div(MAX_RATIO)\n            .toFixed();\n    })\n    .reduce((sum, cur) => B(sum).plus(B(cur)).toFixed());\n}\nfunction getHealthFactor() {\n  if (Big(adjustedBorrowedSum).eq(0)) return \"N/A\";\n  const healthFactor = B(adjustedCollateralSum)\n    .div(B(adjustedBorrowedSum))\n    .mul(100)\n    .toFixed(0);\n  return (Number(healthFactor) < MAX_RATIO ? healthFactor : MAX_RATIO) + \"%\";\n}\nconst adjustedCollateralSum = getAdjustedSum(\"collateral\", account);\nconst adjustedBorrowedSum = getAdjustedSum(\"borrowed\", account);\nlet healthFactor;\nif (account && assets) {\n  healthFactor = getHealthFactor();\n}\nreturn (\n  <div>\n    {/* load data */}\n    {!hasData && (\n      <Widget src=\"juaner.near/widget/ref_burrow-data\" props={{ onLoad }} />\n    )}\n    {healthFactor || \"-\"}\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/ae03d71382e8621650adfb5706ca430676d9756893b08c1efeae37c92024ef1a/widget/ref-burrow-healthFactor", "fact_widget_deployments_id": "89191a788d275f65ae418a741c3f1f60", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}