{"tx_hash": "DUksxVzKUfasdDDxinqjrXKK1ecRRHhgVM8UPpqExeL5", "action_id_social": "2Hdp8gqWsCtbNd6CbAd81b2ySkDimnSUgNbnSsvPWMrF-0-widget", "block_id": 113458862, "block_timestamp": "2024-02-24T02:34:26.588Z", "signer_id": "owa-is-bos.near", "widget_name": "BOS-Gaming-Burrito-Interact", "source_code": "// Smart contract address (Aurora testnet)\nconst virtualPetContract = \"0x363a236ABea6c7d89F3E3E1A1E02C100E6FFAAF7\";\n\n// Obtaining the ABI with the list of methods available in the contract\nconst virtualPetAbi = fetch(\n  \"https://raw.githubusercontent.com/cloudmex/burritobattle-pet/main/ABI3.txt\"\n);\n\nif (!virtualPetAbi.ok) {\n  return \"Loading\";\n}\n\n// Interface creation using ethers and ABI\nconst iface = new ethers.utils.Interface(virtualPetAbi.body);\n\n// State init\nState.init({\n  inputTokenId: 0,\n  tokenId: 0,\n  isBusy: false,\n  isPlay: false,\n  error: \"\",\n  pet: null,\n});\n\n// Verify that we are login\nif (state.sender === undefined) {\n  const accounts = Ethers.send(\"eth_requestAccounts\", []);\n  if (accounts.length) {\n    State.update({ sender: accounts[0] });\n  }\n}\n\n// Method to get user account\nconst getSender = () => {\n  return !state.sender\n    ? \"\"\n    : state.sender.substring(0, 6) +\n        \"...\" +\n        state.sender.substring(state.sender.length - 4, state.sender.length);\n};\n\n// We make the conversion of information from the NFT\nconst _castData = (data) => {\n  console.log(data);\n  return {\n    tokenId: data[0],\n    image: data[1],\n    name: data[2],\n    happiness: data[3].toNumber(),\n    hunger: data[4].toNumber(),\n    sleep: data[5].toNumber(),\n    currentActivity: data[6],\n    isHungry: data[7],\n    isSleepy: data[8],\n    isBored: data[9],\n  };\n};\n\n// Method to get NFT information\nconst getNft = () => {\n  State.update({\n    tokenId: state.inputTokenId,\n  });\n\n  // We initialize the contract with ethers and put into use the contract, the ABI and the account that will sign the transactions\n  const contract = new ethers.Contract(\n    virtualPetContract,\n    virtualPetAbi.body,\n    Ethers.provider().getSigner()\n  );\n\n  // We call the getTokenInfoById method to query the NFT information by its Id\n  contract.getTokenInfoById(state.inputTokenId).then((res) => {\n    console.log(res);\n    if (!res[1]) {\n      State.update({\n        error: \"Burrito's ID doesn't exist or You don't own the Burrito\",\n      });\n    }\n    if (res[1]) {\n      // We change the format of the information obtained from the contract\n      const petInfo = [res].map(_castData);\n      State.update({\n        firstSearch: false,\n        pet: petInfo[0],\n        currentActivity: petInfo[0].currentActivity,\n        currentImg: _getCurrentImg(petInfo[0]),\n        isBusy: false,\n        error: \"\",\n      });\n    }\n  });\n};\n\n// Methods to obtain the NFT image depending on its status\nconst _getCurrentImg = (petInfo) => {\n  if (petInfo.isHungry) {\n    return _getIsHungryImg(petInfo.image);\n  } else if (petInfo.isSleepy) {\n    return _getIsSleepyImg(petInfo.image);\n  } else if (petInfo.isBored) {\n    return _getIsBoredImg(petInfo.image);\n  } else if (!petInfo.isHungry && !petInfo.isSleepy && !petInfo.isBored) {\n    return _getIdleImg(petInfo.image);\n  }\n};\n\nconst _getIdleImg = (img) => {\n  switch (img) {\n    case \"https://pin.ski/3Jjp95g\":\n      return \"https://raw.githubusercontent.com/yaairnaavaa/Burrito-Virtual-Pet/main/Burrito-Fuego-Idle.gif\";\n    case \"https://pin.ski/3NwRR57\":\n      return \"https://raw.githubusercontent.com/yaairnaavaa/Burrito-Virtual-Pet/main/Burrito-Planta-Idle.gif\";\n    case \"https://pin.ski/3JfJ1X6\":\n      return \"https://raw.githubusercontent.com/yaairnaavaa/Burrito-Virtual-Pet/main/Burrito-Agua-Idle.gif\";\n  }\n};\n\nconst _getPlayImg = (img) => {\n  switch (img) {\n    case \"https://pin.ski/3Jjp95g\":\n      return \"https://raw.githubusercontent.com/yaairnaavaa/Burrito-Virtual-Pet/main/Burrito-Play.gif\";\n    case \"https://pin.ski/3NwRR57\":\n      return \"https://raw.githubusercontent.com/yaairnaavaa/Burrito-Virtual-Pet/main/Burrito-Play.gif\";\n    case \"https://pin.ski/3JfJ1X6\":\n      return \"https://raw.githubusercontent.com/yaairnaavaa/Burrito-Virtual-Pet/main/Burrito-Play.gif\";\n  }\n};\n\nconst _getEatImg = (img) => {\n  switch (img) {\n    case \"https://pin.ski/3Jjp95g\":\n      return \"https://raw.githubusercontent.com/yaairnaavaa/Burrito-Virtual-Pet/main/Burrito-Fuego-Eat.gif\";\n    case \"https://pin.ski/3NwRR57\":\n      return \"https://raw.githubusercontent.com/yaairnaavaa/Burrito-Virtual-Pet/main/Burrito-Planta-Eat.gif\";\n    case \"https://pin.ski/3JfJ1X6\":\n      return \"https://raw.githubusercontent.com/yaairnaavaa/Burrito-Virtual-Pet/main/Burrito-Agua-Eat.gif\";\n  }\n};\n\nconst _getSleepImg = (img) => {\n  switch (img) {\n    case \"https://pin.ski/3Jjp95g\":\n      return \"https://raw.githubusercontent.com/yaairnaavaa/Burrito-Virtual-Pet/main/Burrito-Fuego-Sleep.gif\";\n    case \"https://pin.ski/3NwRR57\":\n      return \"https://raw.githubusercontent.com/yaairnaavaa/Burrito-Virtual-Pet/main/Burrito-Planta-Sleep.gif\";\n    case \"https://pin.ski/3JfJ1X6\":\n      return \"https://raw.githubusercontent.com/yaairnaavaa/Burrito-Virtual-Pet/main/Burrito-Agua-Sleep.gif\";\n  }\n};\n\nconst _getIsBoredImg = (img) => {\n  switch (img) {\n    case \"https://pin.ski/3Jjp95g\":\n      return \"https://raw.githubusercontent.com/yaairnaavaa/Burrito-Virtual-Pet/main/Burrito-Fuego-Bored.gif\";\n    case \"https://pin.ski/3NwRR57\":\n      return \"https://raw.githubusercontent.com/yaairnaavaa/Burrito-Virtual-Pet/main/Burrito-Planta-Bored.gif\";\n    case \"https://pin.ski/3JfJ1X6\":\n      return \"https://raw.githubusercontent.com/yaairnaavaa/Burrito-Virtual-Pet/main/Burrito-Agua-Bored.gif\";\n  }\n};\n\nconst _getIsHungryImg = (img) => {\n  switch (img) {\n    case \"https://pin.ski/3Jjp95g\":\n      return \"https://raw.githubusercontent.com/yaairnaavaa/Burrito-Virtual-Pet/main/Burrito-Fuego-Hungry.gif\";\n    case \"https://pin.ski/3NwRR57\":\n      return \"https://raw.githubusercontent.com/yaairnaavaa/Burrito-Virtual-Pet/main/Burrito-Planta-Hungry.gif\";\n    case \"https://pin.ski/3JfJ1X6\":\n      return \"https://raw.githubusercontent.com/yaairnaavaa/Burrito-Virtual-Pet/main/Burrito-Agua-Hungry.gif\";\n  }\n};\n\nconst _getIsSleepyImg = (img) => {\n  switch (img) {\n    case \"https://pin.ski/3Jjp95g\":\n      return \"https://raw.githubusercontent.com/yaairnaavaa/Burrito-Virtual-Pet/main/Burrito-Fuego-Sleepy.gif\";\n    case \"https://pin.ski/3NwRR57\":\n      return \"https://raw.githubusercontent.com/yaairnaavaa/Burrito-Virtual-Pet/main/Burrito-Planta-Sleepy.gif\";\n    case \"https://pin.ski/3JfJ1X6\":\n      return \"https://raw.githubusercontent.com/yaairnaavaa/Burrito-Virtual-Pet/main/Burrito-Agua-Sleepy.gif\";\n  }\n};\n\n// Method to play\nconst play = () => {\n  const contract = new ethers.Contract(\n    virtualPetContract,\n    virtualPetAbi.body,\n    Ethers.provider().getSigner()\n  );\n  contract.play(state.tokenId).then((res) => {\n    State.update({\n      isBusy: true,\n      isPlay: true,\n    });\n  });\n};\n\n// Method to eat\nconst eat = () => {\n  const contract = new ethers.Contract(\n    virtualPetContract,\n    virtualPetAbi.body,\n    Ethers.provider().getSigner()\n  );\n\n  contract.eat(state.tokenId).then((res) => {\n    State.update({\n      currentImg: _getEatImg(state.pet.image),\n      isBusy: true,\n    });\n    setTimeout(() => {\n      getNft();\n    }, \"20000\");\n  });\n};\n\n// Method to sleep\nconst sleep = () => {\n  const contract = new ethers.Contract(\n    virtualPetContract,\n    virtualPetAbi.body,\n    Ethers.provider().getSigner()\n  );\n\n  contract.doze(state.tokenId).then((res) => {\n    State.update({\n      currentImg: _getSleepImg(state.pet.image),\n      isBusy: true,\n    });\n    setTimeout(() => {\n      getNft();\n    }, \"20000\");\n  });\n};\n\n// Method to back menu\nconst back = () => {\n  State.update({\n    tokenId: 0,\n    pet: null,\n  });\n};\n\n// Method to select random game\nconst getGame = () => {\n  return Math.floor(Math.random() * 2);\n};\n\n// M\u00e9thod to finish playing\nconst onFinish = () => {\n  State.update({ isPlay: false });\n  getNft();\n};\n\n// Definition of all styles used in the component\nconst ItemBackground = styled.div`\n        width: 100%;\n        //height: 100vh;\n        display: flex;\n        justify-content: center;\n        margin-bottom: -50px;\n        //background-image: url('https://pin.ski/444ghZP');\n        background-repeat: no-repeat;\n        background-size: cover;\n        `;\n\nconst ItemContainer = styled.div`\n        margin-top: 30px;\n        box-sizing: border-box;\n        min-width: 500px;\n        max-width: 600px;\n        width: 100%;\n        padding: 0px 32px;\n        position: relative;\n        `;\n\nconst ItemTitle = styled.h3`\n        font-weight: 900;\n        text-align: center;\n        color: white;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        margin-bottom: 1rem;\n        `;\n\nconst ItemImage = styled.img`\n            width: 40px;\n            margin-right: 15px;\n        `;\n\nconst ItemHeader = styled.div`\n        background: #64473f;\n        font-weight: 400;\n        font-size: 12px;\n        line-height: 1.6em;\n        border-radius: 20px;\n        margin: 0px;\n        padding: 20px;\n        box-shadow: none;\n        color: rgb(255, 255, 255);\n        `;\n\nconst ItemBodySelect = styled.div`\n        font-weight: 400;\n        font-size: 1em;\n        line-height: 1.6em;\n        border-radius: 0px 0px 20px 20px;\n        margin: -20px 0px 0px;\n        padding-inline: 10px;\n        box-shadow: none;\n        background-image: url('https://raw.githubusercontent.com/yaairnaavaa/Burrito-Virtual-Pet/main/background.png');\n        background-repeat: no-repeat;\n        background-size: cover;        \n        color: #feb75b;\n        min-height: 500px;\n        max-height: auto;\n        border: solid 5px;\n        `;\n\nconst ItemBodyPlay = styled.div`\n        font-weight: 400;\n        font-size: 1em;\n        line-height: 1.6em;\n        border-radius: 0px 0px 20px 20px;\n        margin: -20px 0px 0px;\n        padding-inline: 10px;\n        box-shadow: none;\n        background-image: url('https://raw.githubusercontent.com/yaairnaavaa/Burrito-Virtual-Pet/main/backgorund-play.png');\n        background-repeat: no-repeat;\n        background-size: cover;        \n        color: #feb75b;\n        min-height: 500px;\n        max-height: auto;\n        border: solid 5px;\n        `;\n\nconst ItemPetsSection = styled.div`\n        gap: 3rem  7rem !important;\n        display: grid;\n        gap: 10px;\n        grid-template-columns: repeat(auto-fit, 160px);\n        justify-content: center;\n        min-height: 500px;\n        max-height: 550px;\n        align-content: end;\n        `;\n\nconst ItemPet = styled.div`\n    display: flex !important;\n    width: 100%;\n    display: flex !important;\n    justify-content: center;\n    cursor: pointer;\n  `;\nconst ItemPetAction = styled.div`\n    gap: 0.25rem !important;\n    padding: 1rem !important;\n    flex-direction: column !important;\n    display: flex !important;\n    border: solid 3px;\n    border-radius: 20px;\n    color: black;\n    background: rgb(0 0 0 / 40%);\n    align-items: center;\n    cursor: pointer;\n  `;\nconst ItemPetImg = styled.img`\n    height: 400px;\n  `;\n\nconst ItemMintButton = styled.button`\n        background: #f54866;\n        color: white;\n        font-weight: 700;\n        padding: 10px 15px;\n        border-radius: 1rem;\n        border: none;\n        font-size: 14px;\n        &:hover {\n            background: rgb(146 0 0);\n        }\n        `;\n\n// FETCH CSS\nconst cssFont = fetch(\n  \"https://fonts.googleapis.com/css2?family=Lexend:wght@200;300;400;500;600;700;800\"\n).body;\nconst css = fetch(\n  \"https://raw.githubusercontent.com/yaairnaavaa/Burrito-Virtual-Pet/main/style.css\"\n).body;\n\nif (!cssFont || !css) return \"\";\n\nif (!state.theme) {\n  State.update({\n    theme: styled.div`\n    font-family: Lexend;\n    ${cssFont}\n    ${css}\n`,\n  });\n}\nconst Theme = state.theme;\n\n// Render of the component where the necessary methods to interact with the NFT are called\n// along with the implementation of each of the previously defined styles.\nreturn (\n  <Theme>\n    <ItemBackground>\n      <ItemContainer>\n        <ItemHeader>\n          <ItemTitle class=\"row\">\n            <div class=\"col-4\" style={{ \"text-align\": \"left\" }}>\n              <ItemImage src=\"https://raw.githubusercontent.com/yaairnaavaa/Burrito-Virtual-Pet/main/icon.png\"></ItemImage>\n            </div>\n            <div\n              class=\"col-4\"\n              style={{\n                \"text-shadow\":\n                  \"black 1px 0px 0px, black 0px 1px 0px, black -1px 0px 0px, black 0px -1px 0px\",\n              }}\n            >\n              {state.pet.name}\n            </div>\n            <div class=\"col-4\" style={{ \"text-align\": \"right\" }}>\n              {state.sender ? (\n                !state.pet ? (\n                  <a href=\"#/burrito-pets.near/widget/Burrito-Pets-Mint\">\n                    <ItemMintButton\n                      onClick={async () => {\n                        mint();\n                      }}\n                    >\n                      Mint Burrito\n                    </ItemMintButton>\n                  </a>\n                ) : (\n                  <ItemMintButton\n                    onClick={async () => {\n                      back();\n                    }}\n                  >\n                    Back\n                  </ItemMintButton>\n                )\n              ) : null}\n            </div>\n          </ItemTitle>\n        </ItemHeader>\n        {state.sender ? (\n          !state.pet ? (\n            <ItemBodySelect>\n              <div class=\"m-5\">\n                <div style={{ \"text-align\": \"center\" }}>\n                  <img\n                    src=\"https://raw.githubusercontent.com/yaairnaavaa/Burrito-Virtual-Pet/main/find.png\"\n                    style={{\n                      height: \"230px\",\n                      background: \"#ffe5bc\",\n                      \"border-radius\": \"10px\",\n                    }}\n                  ></img>\n                </div>\n                <br />\n                <div class=\"container\">\n                  <div class=\"row justify-content-center\">\n                    <div class=\"col-4\">\n                      <input\n                        placeholder=\"Token Id\"\n                        onChange={(e) =>\n                          State.update({ inputTokenId: e.target.value })\n                        }\n                      />\n                    </div>\n                  </div>\n                  <br />\n                  <div style={{ \"text-align\": \"center\" }}>\n                    <ItemMintButton\n                      onClick={async () => {\n                        getNft();\n                      }}\n                    >\n                      Get NFT\n                    </ItemMintButton>\n                  </div>\n                  <div style={{ \"text-align\": \"center\" }}>{state.error}</div>\n                </div>\n              </div>\n            </ItemBodySelect>\n          ) : (\n            <div\n              style={{\n                background: \"rgb(242, 167, 115)\",\n                \"border-radius\": \"20px\",\n              }}\n            >\n              <ItemBodyPlay>\n                <div\n                  class=\"row\"\n                  style={{\n                    \"text-align\": \"center\",\n                    background: \"rgb(242, 167, 115)\",\n                    \"margin-inline\": \"-10px\",\n                    \"border-radius\": \"1px 1px 0px 0px\",\n                  }}\n                >\n                  <div\n                    class=\"col-4\"\n                    style={{\n                      color: \"black\",\n                      display: \"flex\",\n                      \"justify-content\": \"center\",\n                      \"align-items\": \"center\",\n                    }}\n                  >\n                    <img\n                      style={{ height: \"50px\", \"margin-right\": \"10px\" }}\n                      src=\"https://raw.githubusercontent.com/yaairnaavaa/Burrito-Virtual-Pet/main/happy.png\"\n                    ></img>\n                    <label style={{ \"font-weight\": \"900\" }}>\n                      {state.pet.happiness}\n                    </label>\n                  </div>\n                  <div\n                    class=\"col-4\"\n                    style={{\n                      color: \"black\",\n                      display: \"flex\",\n                      \"justify-content\": \"center\",\n                      \"align-items\": \"center\",\n                    }}\n                  >\n                    <img\n                      style={{ height: \"50px\", \"margin-right\": \"10px\" }}\n                      src=\"https://raw.githubusercontent.com/yaairnaavaa/Burrito-Virtual-Pet/main/eat.png\"\n                    ></img>\n                    <label style={{ \"font-weight\": \"900\" }}>\n                      {state.pet.hunger}\n                    </label>\n                  </div>\n                  <div\n                    class=\"col-4\"\n                    style={{\n                      color: \"black\",\n                      display: \"flex\",\n                      \"justify-content\": \"center\",\n                      \"align-items\": \"center\",\n                    }}\n                  >\n                    <img\n                      style={{ height: \"50px\", \"margin-right\": \"10px\" }}\n                      src=\"https://raw.githubusercontent.com/yaairnaavaa/Burrito-Virtual-Pet/main/sleep.png\"\n                    ></img>\n                    <label style={{ \"font-weight\": \"900\" }}>\n                      {state.pet.sleep}\n                    </label>\n                  </div>\n                </div>\n                <ItemPetsSection>\n                  <ItemPet>\n                    <div>\n                      {!state.isPlay ? (\n                        <ItemPetImg src={state.currentImg} />\n                      ) : getGame() == 0 ? (\n                        <Widget\n                          src=\"yairnava.near/widget/Tic-Tac-Toe\"\n                          props={{ onFinish, isModal: true }}\n                        />\n                      ) : (\n                        <Widget\n                          src=\"yairnava.near/widget/Rock-Paper-Scissors\"\n                          props={{ onFinish, isModal: true }}\n                        />\n                      )}\n                    </div>\n                  </ItemPet>\n                </ItemPetsSection>\n              </ItemBodyPlay>\n              <div\n                style={{\n                  \"text-align\": \"center\",\n                  \"margin-inline\": \"5px\",\n                  \"margin-top\": \"7px\",\n                  \"padding-bottom\": \"7px\",\n                  height: \"68.33px\",\n                }}\n              >\n                {!state.isBusy ? (\n                  state.pet.isHungry ? (\n                    <div class=\"row\">\n                      <div class=\"col-4\"></div>\n                      <div class=\"col-4\">\n                        <ItemPetAction\n                          onClick={async () => {\n                            eat();\n                          }}\n                        >\n                          <label\n                            style={{\n                              color: \"white\",\n                              \"font-weight\": \"900\",\n                              cursor: \"pointer\",\n                            }}\n                          >\n                            Eat\n                          </label>\n                        </ItemPetAction>\n                      </div>\n                      <div class=\"col-4\"></div>\n                    </div>\n                  ) : state.pet.isSleepy ? (\n                    <div class=\"row\">\n                      <div class=\"col-4\"></div>\n                      <div class=\"col-4\"></div>\n                      <div class=\"col-4\">\n                        <ItemPetAction\n                          onClick={async () => {\n                            sleep();\n                          }}\n                        >\n                          <label\n                            style={{\n                              color: \"white\",\n                              \"font-weight\": \"900\",\n                              cursor: \"pointer\",\n                            }}\n                          >\n                            Sleep\n                          </label>\n                        </ItemPetAction>\n                      </div>\n                    </div>\n                  ) : state.pet.isBored ? (\n                    <div class=\"row\">\n                      <div class=\"col-4\">\n                        <ItemPetAction\n                          onClick={async () => {\n                            play();\n                          }}\n                        >\n                          <label\n                            style={{\n                              color: \"white\",\n                              \"font-weight\": \"900\",\n                              cursor: \"pointer\",\n                            }}\n                          >\n                            Play\n                          </label>\n                        </ItemPetAction>\n                      </div>\n                      <div class=\"col-4\"></div>\n                      <div class=\"col-4\"></div>\n                    </div>\n                  ) : (\n                    <div class=\"row\">\n                      <div class=\"col-4\">\n                        <ItemPetAction\n                          onClick={async () => {\n                            play();\n                          }}\n                        >\n                          <label\n                            style={{\n                              color: \"white\",\n                              \"font-weight\": \"900\",\n                              cursor: \"pointer\",\n                            }}\n                          >\n                            Play\n                          </label>\n                        </ItemPetAction>\n                      </div>\n                      <div class=\"col-4\">\n                        <ItemPetAction\n                          onClick={async () => {\n                            eat();\n                          }}\n                        >\n                          <label\n                            style={{\n                              color: \"white\",\n                              \"font-weight\": \"900\",\n                              cursor: \"pointer\",\n                            }}\n                          >\n                            Eat\n                          </label>\n                        </ItemPetAction>\n                      </div>\n                      <div class=\"col-4\">\n                        <ItemPetAction\n                          onClick={async () => {\n                            sleep();\n                          }}\n                        >\n                          <label\n                            style={{\n                              color: \"white\",\n                              \"font-weight\": \"900\",\n                              cursor: \"pointer\",\n                            }}\n                          >\n                            Sleep\n                          </label>\n                        </ItemPetAction>\n                      </div>\n                    </div>\n                  )\n                ) : null}\n              </div>\n            </div>\n          )\n        ) : (\n          <ItemBodySelect>\n            <br />\n            <div style={{ \"text-align\": \"center\" }}>\n              <Web3Connect\n                className=\"ConnectButton\"\n                connectLabel=\"Connect with Web3\"\n              />\n            </div>\n          </ItemBodySelect>\n        )}\n      </ItemContainer>\n    </ItemBackground>\n  </Theme>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/owa-is-bos.near/widget/BOS-Gaming-Burrito-Interact", "fact_widget_deployments_id": "596db7b85f9d1d07c192f9df0385ce69", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}