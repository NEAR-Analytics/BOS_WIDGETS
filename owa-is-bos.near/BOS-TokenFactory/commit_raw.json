{"tx_hash": "BoSUbZ8L3qPyLHS1LUhwgsytzA1DfXMGySjf2LtjULj2", "action_id_social": "DqFdN18iiVGtVoGeN4w1iRKSiEjwNZqJcHw6sFCJGo6Q-0-widget", "block_id": 117402125, "block_timestamp": "2024-04-22T19:52:29.170Z", "signer_id": "owa-is-bos.near", "widget_name": "BOS-TokenFactory", "source_code": "const factoryContract = \"0xAc9221060455f60dfFF8bf8C4f601E500AC095D7\";\n\nconst factoryAbi = fetch(\n  \"https://raw.githubusercontent.com/open-web-academy/BOS-TokenFactory/main/TokenFactoryABI.txt\"\n);\n\nif (!factoryAbi.ok) {\n  return \"Loading\";\n}\n\nconst [sender, setSender] = useState(null);\nconst [tokens, setTokens] = useState([]);\n\nconst [tokenName, setTokenName] = useState(\"MYTOKEN\");\nconst [tokenSymbol, setTokenSymbol] = useState(\"MTKN\");\nconst [initialSupply, setInitialSupply] = useState(10000);\nconst [minting, setMinting] = useState(false);\nconst [tabSelected, setTabSelected] = useState(\"factory\");\n\nconst pills = [\n  { id: \"factory\", title: \"Factory\" },\n  { id: \"tokenlist\", title: \"Token List\" },\n];\n\nif (!sender) {\n  const accounts = Ethers.send(\"eth_requestAccounts\", []);\n  if (accounts.length) {\n    setSender(accounts[0]);\n  }\n}\n\nconst getTokens = () => {\n  const factory = new ethers.Contract(\n    factoryContract,\n    factoryAbi.body,\n    Ethers.provider().getSigner()\n  );\n\n  factory.getAllTokens().then((res) => {\n    setTokens(res);\n    console.log(res);\n  });\n};\n\nuseEffect(() => {\n  if (sender) {\n    getTokens();\n  }\n}, []);\n\nconst createToken = () => {\n  const contract = new ethers.Contract(\n    factoryContract,\n    factoryAbi.body,\n    Ethers.provider().getSigner()\n  );\n\n  const amount = ethers.utils.parseUnits(initialSupply.toString(), 18);\n  contract.deployToken(tokenName, tokenSymbol, amount).then((res) => {\n    setMinting(true);\n\n    setTimeout(() => {\n      setTokenName(\"MYTOKEN\");\n      setTokenSymbol(\"MTKN\");\n      setInitialSupply(10000);\n      setMinting(false);\n      getTokens();\n    }, \"20000\");\n  });\n};\n\nconst Wrapper = styled.div`\n* {\n  font-family: 'system-ui','Inter', 'Space Grotesk' !important;\n}\n\n.connectB {\n    background: #ECA227;\n        color: #1E1E1E;\n        font-weight: 700;\n        padding: 15px 20px;\n        border-radius: 1rem;\n        border: none;\n        &:hover {\n            background: #4A21A5;\n            color: white;\n        }: \n}\n`;\n\nconst PillButtonActive = styled.div`\nfont-weight: 700;\nbackground-color: #ECA227;\ncolor: black;\nborder-radius: 10px;\nmargin: 0 10px 0 10px;\ncursor: pointer;\npadding: 7px 0 7px 0;\n  }\n`;\n\nconst PillButton = styled.div`\nfont-weight: 700;\ncursor: pointer;\nbackground-color: #1E1E1E;\ncolor: white;\npadding-bottom: 5px;\nborder-radius: 10px;\nmargin: 0 10px 0 10px;\npadding: 7px 0 7px 0;\n  }\n`;\n\nconst ItemBackground = styled.div`\n        width: 100%;\n        display: flex;\n        justify-content: center;\n        background-repeat: no-repeat;\n        background-size: cover;\n        margin-bottom: -50px;\n        `;\n\nconst ItemContainer = styled.div`\n        margin-top: 30px;\n        box-sizing: border-box;\n        min-width: 320px;\n        width: 100%;\n        padding: 0px 32px;\n        position: relative;\n        `;\n\nconst ItemTitle = styled.h3`\n        text-align: center;\n        color: black;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        margin-bottom: 1rem;\n        `;\n\nconst ItemImage = styled.img`\n            width: 40px;\n            margin-right: 15px;\n        `;\n\nconst ItemSubTitle = styled.div`\n        text-align: center;\n        color: yellow;\n        margin-bottom: 5px;\n        `;\n\nconst ItemHeader = styled.div`\n        background: #ECA227;\n        color: #1E1E1E;\n        font-weight: 400;\n        font-size: 12px;\n        line-height: 1.6em;\n        border-radius: 20px;\n        margin: 0px;\n        padding: 20px;\n        box-shadow: none;\n        color: rgb(255, 255, 255);\n        `;\n\nconst ItemBody = styled.div`\n        font-weight: 400;\n        font-size: 1em;\n        line-height: 1.6em;\n        border-radius: 0px 0px 20px 20px;\n        margin: -20px 0px 0px;\n        padding: 32px;\n        box-shadow: none;\n        background: #1E1E1E;\n        color: black;\n        `;\n\nconst ItemMintNumber = styled.label`\n        font-size: 20px;\n        font-weight: 800;\n        color: black;\n        `;\n\nconst ItemMintButton = styled.button`\n        background: #ECA227;\n        color: #1E1E1E;\n        font-weight: 700;\n        padding: 15px 20px;\n        border-radius: 1rem;\n        border: none;\n        &:hover {\n            background: #4A21A5;\n            color: white;\n        }\n        `;\n\n// FETCH CSS\nconst cssFont = fetch(\n  \"https://fonts.googleapis.com/css2?family=Lexend:wght@200;300;400;500;600;700;800\"\n).body;\nconst css = fetch(\n  \"https://nativonft.mypinata.cloud/ipfs/QmQNCGVCwmkPxcKqDdubvb8Goy5xP8md2MfWCAix7HxgGE\"\n).body;\n\nif (!cssFont || !css) return \"\";\n\nif (!state.theme) {\n  State.update({\n    theme: styled.div`\n    font-family: Lexend;\n    ${cssFont}\n    ${css}\n`,\n  });\n}\nconst Theme = state.theme;\n\nreturn (\n  <Theme>\n    <Wrapper>\n      <div\n        style={{\n          display: \"flex\",\n          \"justify-content\": \"center\",\n        }}\n      ></div>\n      <br />\n      <ul\n        className=\"nav nav-pills nav-fill mb-4\"\n        id=\"pills-tab2\"\n        role=\"tablist2\"\n        style={{ \"margin-top\": \"15px\" }}\n      >\n        {pills.map(({ id, title }, i) => (\n          <li className=\"nav-item\" role=\"presentation\" key={i}>\n            {tabSelected == id ? (\n              <PillButtonActive\n                onClick={() => {\n                  setTabSelected(id);\n                  getTokens();\n                }}\n              >\n                {title}\n              </PillButtonActive>\n            ) : (\n              <PillButton\n                onClick={() => {\n                  setTabSelected(id);\n                  getTokens();\n                }}\n              >\n                {title}\n              </PillButton>\n            )}\n          </li>\n        ))}\n      </ul>\n\n      <div\n        className=\"tab-content\"\n        id=\"pills-tabContent\"\n        style={{ display: \"flex\", \"justify-content\": \"center\" }}\n      >\n        {tabSelected == \"factory\" ? (\n          <ItemBackground>\n            <ItemContainer>\n              <ItemHeader>\n                <ItemTitle>\n                  <label>Token Factory</label>\n                </ItemTitle>\n              </ItemHeader>\n              <ItemBody>\n                {sender ? (\n                  !minting ? (\n                    <div class=\"row\" style={{ color: \"white\" }}>\n                      <div class=\"col-12\">\n                        <h3>New Token</h3>\n                      </div>\n                      <div class=\"col-6\" style={{ alignContent: \"end\" }}>\n                        <div class=\"row\">\n                          <div class=\"col-12\">\n                            <div class=\"mb-3\">\n                              <label for=\"symbol\" class=\"form-label\">\n                                Token Name\n                              </label>\n                              <input\n                                value={tokenName}\n                                class=\"form-control\"\n                                id=\"symbol\" // only allow for numbers\n                                onChange={(e) => setTokenName(e.target.value)}\n                              />\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"col-6\">\n                        <div\n                          style={{\n                            height: \"100%\",\n                            display: \"flex\",\n                            \"justify-content\": \"center\",\n                            \"align-items\": \"center\",\n                          }}\n                        >\n                          <img\n                            src=\"https://ipfs.near.social/ipfs/bafkreifotevq6g6ralhvutlcssaasa7xbfjjc6mbo5hlnvgpxxgfmwswmq\"\n                            style={{\n                              height: \"150px\",\n                            }}\n                          ></img>\n                        </div>\n                      </div>\n                      <div class=\"col-6\">\n                        <div class=\"mb-3\">\n                          <label for=\"symbol\" class=\"form-label\">\n                            Token Symbol\n                          </label>\n                          <input\n                            value={tokenSymbol}\n                            class=\"form-control\"\n                            id=\"symbol\"\n                            placeholder=\"TKN\"\n                            onChange={(e) => setTokenSymbol(e.target.value)}\n                          />\n                        </div>\n                      </div>\n                      <div class=\"col-6\">\n                        <div class=\"mb-3\">\n                          <label for=\"supply\" class=\"form-label\">\n                            Token Supply\n                          </label>\n                          <input\n                            value={initialSupply}\n                            class=\"form-control\"\n                            id=\"supply\"\n                            placeholder=\"\"\n                            onChange={(e) => setInitialSupply(e.target.value)}\n                          />\n                        </div>\n                      </div>\n                      <div class=\"col-12\">\n                        <div class=\"mb-3\">\n                          <ItemMintButton\n                            onClick={async () => {\n                              createToken();\n                            }}\n                          >\n                            Create Token\n                          </ItemMintButton>\n                        </div>\n                      </div>\n                    </div>\n                  ) : (\n                    <div\n                      class=\"row\"\n                      style={{ display: \"flex\", \"justify-content\": \"center\" }}\n                    >\n                      <img\n                        src=\"https://ipfs.near.social/ipfs/bafkreifotevq6g6ralhvutlcssaasa7xbfjjc6mbo5hlnvgpxxgfmwswmq\"\n                        style={{\n                          height: \"200px\",\n                          width: \"200px\",\n                        }}\n                      ></img>\n                      <br />\n                      <label\n                        style={{\n                          \"font-size\": \"20px\",\n                          \"font-weight\": \"400\",\n                          \"text-align\": \"center\",\n                          color: \"white\",\n                        }}\n                      >\n                        Minting...\n                      </label>\n                    </div>\n                  )\n                ) : (\n                  <div style={{ \"text-align\": \"center\" }}>\n                    <Web3Connect\n                      className=\"connectB\"\n                      connectLabel=\"Connect with Web3\"\n                    />\n                  </div>\n                )}\n              </ItemBody>\n            </ItemContainer>\n          </ItemBackground>\n        ) : (\n          <ItemBackground>\n            <ItemContainer>\n              <ItemHeader>\n                <ItemTitle>\n                  <label>Token List</label>\n                </ItemTitle>\n              </ItemHeader>\n              <ItemBody>\n                <table className=\"table table-sm\">\n                  <thead>\n                    <tr class=\"p-3 mb-2 bg-primary text-white text-center\">\n                      <th>Name</th>\n                      <th>Symbol</th>\n                      <th>Address</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {tokens.map((data, key) => {\n                      return (\n                        <tr class=\"text-center\">\n                          <td>{data[1]}</td>\n                          <td>{data[2]}</td>\n                          <td>{data[0]}</td>\n                        </tr>\n                      );\n                    })}\n                  </tbody>\n                </table>\n              </ItemBody>\n            </ItemContainer>\n          </ItemBackground>\n        )}\n      </div>\n    </Wrapper>\n  </Theme>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/owa-is-bos.near/widget/BOS-TokenFactory", "fact_widget_deployments_id": "1ef4c4ce67d0ac8f36eee594fd9086c6", "inserted_timestamp": "2024-04-22T21:43:04.012Z", "modified_timestamp": "2024-04-22T22:46:44.353Z", "__row_index": 2}