{"tx_hash": "EtoCsXoHJWWXwvoqVT3ZVk25cBZJLUVz3a2tBuQweX8P", "action_id_social": "BwPZVTSUxyZmNtiPVVDeiUwy7RUf5xXnHpUdoYJRCGtt-0-widget", "block_id": 121906614, "block_timestamp": "2024-06-24T17:39:03.315Z", "signer_id": "owa-is-bos.near", "widget_name": "HAT-Auctions-Winners", "source_code": "// State for current page of pagination\nconst [currentPage, setCurrentPage] = useState(1);\n\n// Number of items per page\nconst itemsPerPage = 5;\n\n// Contract address for auctions\nconst auctionsContract = \"auctions.hat-coin.near\";\n\n// Fetch winners from the contract\nlet winners = Near.view(\n  auctionsContract,\n  \"get_winners\",\n  null,\n  null,\n  true\n).reverse();\n\n// Calculate total pages based on winners array length and items per page\nconst totalPages = Math.ceil(winners.length / itemsPerPage);\n\n// If winners array length is not divisible evenly by itemsPerPage, fill with empty objects\nif (winners % itemsPerPage != 0) {\n  const fillTable = itemsPerPage * totalPages;\n  const difference = fillTable - winners.length;\n\n  for (let i = 0; i < difference; i++) {\n    winners.push({\n      account: \"\",\n      bid: 0,\n      hat_amount: 0,\n    });\n  }\n}\n\n// Calculate indexes of items to display on current page\nconst indexOfLastItem = currentPage * itemsPerPage;\nconst indexOfFirstItem = indexOfLastItem - itemsPerPage;\nconst currentItems = winners.slice(indexOfFirstItem, indexOfLastItem);\n\n// Handler for next page button\nconst handleNextPage = () => {\n  if (currentPage < totalPages) {\n    setCurrentPage(currentPage + 1);\n  }\n};\n\n// Handler for previous page button\nconst handlePreviousPage = () => {\n  if (currentPage > 1) {\n    setCurrentPage(currentPage - 1);\n  }\n};\n\n// Styled components for UI elements\nconst Wrapper = styled.div`\n * {\n   font-family: 'system-ui','Inter', 'Space Grotesk' !important;\n }\n `;\n\nconst CircleButton = styled.button`\n     display: inline-flex;\n     -webkit-box-align: center;\n     align-items: center;\n     -webkit-box-pack: center;\n     justify-content: center;\n     border-radius: 50%;\n     background-color: #F5AD00;\n     padding: 10px;\n     font-weight: 500;\n     border: 0px;\n     color: black;\n     width: 50px;\n     height: 50px;\n     margin-left: 5px;\n     margin-top: 10px;\n     \n     &:hover{\n       background: rgb(45, 50, 97);\n       color: white;\n       border-color: #F5AD00;\n       border-width: 1.5px;\n       border-style: solid;\n     }\n `;\n\nconst ItemBackground = styled.div`\n         width: 100%;\n         display: flex;\n         justify-content: center;\n         background-repeat: no-repeat;\n         background-size: cover;\n         margin-bottom: -50px;\n         `;\n\nconst ItemContainer = styled.div`\n         margin-top: 30px;\n         box-sizing: border-box;\n         min-width: 375px;\n         width: 700px;\n         padding: 0px 32px;\n         position: relative;\n         `;\n\nconst ItemTitle = styled.h3`\n         text-align: center;\n         color: black;\n         display: flex;\n         justify-content: center;\n         align-items: center;\n         margin-bottom: 1rem;\n         `;\n\nconst ItemImage = styled.img`\n             width: 40px;\n             margin-right: 15px;\n         `;\n\nconst ItemSubTitle = styled.div`\n         text-align: center;\n         color: yellow;\n         margin-bottom: 5px;\n         `;\n\nconst ItemHeader = styled.div`\n         background: #F5AD00;\n         color: #1E1E1E;\n         font-weight: 400;\n         font-size: 12px;\n         line-height: 1.6em;\n         border-radius: 20px;\n         margin: 0px;\n         padding: 20px;\n         box-shadow: none;\n         color: rgb(255, 255, 255);\n         `;\n\nconst ItemBody = styled.div`\n         font-weight: 400;\n         font-size: 1em;\n         line-height: 1.6em;\n         border-radius: 0px 0px 20px 20px;\n         margin: -20px 0px 0px;\n         padding: 32px;\n         box-shadow: none;\n         color: black;\n         background: rgb(45, 50, 97);\n         `;\n\nconst InputGroup = styled.div`\n     position: relative;\n     display: flex;\n     flex-wrap: wrap;\n     -webkit-box-align: stretch;\n     align-items: center;\n     width: 100%;\n     justify-content: center;\n `;\n\nconst Button = styled.button`\n     display: inline-flex;\n     -webkit-box-align: center;\n     align-items: center;\n     -webkit-box-pack: center;\n     justify-content: center;\n     border-radius: 12px !important;\n     max-width: 230px;\n     background-color: #F5AD00;\n     padding: 10px;\n     font-weight: 500;\n     border: 0px;\n     color: black;\n     width: 120px;\n     height: 54px;\n     margin-left: 5px;\n     margin-top: 10px;\n \n     &:hover{\n       background: rgb(45, 50, 97);\n       color: white;\n       border-color: #F5AD00;\n       border-width: 1.5px;\n       border-style: solid;\n     }\n `;\n\nconst ButtonDisabled = styled.button`\n     display: inline-flex;\n     -webkit-box-align: center;\n     align-items: center;\n     -webkit-box-pack: center;\n     justify-content: center;\n     border-radius: 12px !important;\n     max-width: 230px;\n     padding: 10px;\n     font-weight: 500;\n     border: 0px;\n     width: 120px;\n     height: 54px;\n     margin-left: 5px;\n     margin-top: 10px;\n     background: rgb(45, 50, 97);\n     color: white;\n     cursor: default !important;\n `;\n\nconst Input = styled.input`\n     -webkit-box-sizing: border-box;\n     height: 54px;\n     color: #000;\n     border-radius: 12px !important;\n     box-shadow: inset 0 0 0 1px #fff;\n     background-color: #fff;\n     outline: none !important;\n     box-shadow: none !important;\n     font-family: \"PT Root UI\";\n     font-weight: 700;\n     font-size: 25px;\n     transition: all .2s ease-in-out;\n     border: none;\n     margin-right: 5px;\n     text-align: center;\n     margin-top: 10px;\n `;\n\n// FETCH CSS\nconst cssFont = fetch(\n  \"https://fonts.googleapis.com/css2?family=Lexend:wght@200;300;400;500;600;700;800\"\n).body;\nconst css = fetch(\n  \"https://nativonft.mypinata.cloud/ipfs/QmQNCGVCwmkPxcKqDdubvb8Goy5xP8md2MfWCAix7HxgGE\"\n).body;\n\nif (!cssFont || !css) return \"\";\n\nif (!state.theme) {\n  State.update({\n    theme: styled.div`\n    font-family: Lexend;\n    ${cssFont}\n    ${css}\n`,\n  });\n}\n\n// Access the current theme from state\nconst Theme = state.theme;\n\n// Rendering the main component\nreturn (\n  <Theme>\n    <ItemBackground>\n      <ItemContainer>\n        <ItemHeader>\n          <ItemTitle>\n            <label>List Of Winners</label>\n          </ItemTitle>\n        </ItemHeader>\n        <ItemBody>\n          <div\n            style={{\n              width: \"100%\",\n              display: \"flex\",\n              justifyContent: \"center\",\n            }}\n          >\n            <table className=\"table table-sm\">\n              <thead>\n                <tr>\n                  <th style={{ width: \"40%\" }}>Account</th>\n                  <th style={{ width: \"30%\" }}>Winner Bid</th>\n                  <th style={{ width: \"30%\" }}>Hats Obtained</th>\n                </tr>\n              </thead>\n              <tbody>\n                {currentItems.map((data, key) => {\n                  return (\n                    <>\n                      <tr style={{ height: \"40px\" }}>\n                        <td>{data.account ? data.account : \"\"}</td>\n                        <td>\n                          {data.bid ? (data.bid / 1e24).toFixed(1) + \"\u22c8\" : \"\"}\n                        </td>\n                        <td>{data.hat_amount ? data.hat_amount : \" \"}</td>\n                      </tr>\n                    </>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n          {winners.length > 0 && (\n            <div\n              className=\"row\"\n              style={{\n                width: \"100%\",\n                display: \"flex\",\n                justifyContent: \"center\",\n              }}\n            >\n              <div\n                className=\"col-4\"\n                style={{ display: \"flex\", \"justify-content\": \"start\" }}\n              >\n                <CircleButton\n                  onClick={handlePreviousPage}\n                  disabled={currentPage === 1}\n                >\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"24\"\n                    height=\"24\"\n                    viewBox=\"0 0 24 24\"\n                  >\n                    <path d=\"M16.67 0l2.83 2.829-9.339 9.175 9.339 9.167-2.83 2.829-12.17-11.996z\" />\n                  </svg>\n                </CircleButton>\n              </div>\n              <div\n                className=\"col-2\"\n                style={{\n                  display: \"flex\",\n                  \"justify-content\": \"center\",\n                  \"align-items\": \"center\",\n                  color: \"white\",\n                  \"font-size\": \"19px\",\n                }}\n              >\n                {currentPage}/{totalPages}\n              </div>\n              <div\n                className=\"col-4\"\n                style={{ display: \"flex\", \"justify-content\": \"end\" }}\n              >\n                <CircleButton\n                  onClick={handleNextPage}\n                  disabled={currentPage === totalPages}\n                >\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"24\"\n                    height=\"24\"\n                    viewBox=\"0 0 24 24\"\n                  >\n                    <path d=\"M7.33 24l-2.83-2.829 9.339-9.175-9.339-9.167 2.83-2.829 12.17 11.996z\" />\n                  </svg>\n                </CircleButton>\n              </div>\n            </div>\n          )}\n        </ItemBody>\n      </ItemContainer>\n    </ItemBackground>\n  </Theme>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/owa-is-bos.near/widget/HAT-Auctions-Winners", "fact_widget_deployments_id": "289792117127daaf26f64d2854da79d8", "inserted_timestamp": "2024-06-24T18:54:25.124Z", "modified_timestamp": "2024-06-24T18:54:25.124Z", "__row_index": 1}