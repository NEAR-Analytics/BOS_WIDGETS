{"tx_hash": "12P1rmfZZThAoexMkMaz968UEHMKhzsT4pewQeis3XZe", "action_id_social": "DGyBAQ5LkG3CGqsnkWsQ4ddT2e5MQ6egzyWW3jwxEuN-0-widget", "block_id": 104573373, "block_timestamp": "2023-10-30T23:56:34.927Z", "signer_id": "owa-is-bos.near", "widget_name": "Maverick-LP-Portfolio", "source_code": "const routerAbi = fetch(\n  \"https://raw.githubusercontent.com/yaairnaavaa/Maverick/main/maverick-router.txt\"\n);\n\nconst positionAbi = fetch(\n  \"https://raw.githubusercontent.com/yaairnaavaa/Maverick/main/maverick-position.txt\"\n);\n\nif (!routerAbi.ok || !positionAbi.ok) {\n  return \"Loading\";\n}\n\nState.init({\n  isZkSync: false,\n  routerContract: \"0x9563Fdb01BFbF3D6c548C2C64E446cb5900ACA88\",\n  positionContract: \"0x46040d596fe176A1b88A43be3537d9f6365ccbe1\",\n  portfolio: null,\n  poolSelected: null,\n  isLiquidityRemoved: false,\n  binsToRemove: [],\n  showSelectBinsModal: false,\n  countBinsToRemove: 0,\n  tokenAToWithdraw: 0,\n  tokenBToWithdraw: 0,\n  allChecked: false,\n  approveNFT: 0,\n  onApprovingNFT: false,\n  onRemovingLiquidity: false,\n  hasSomeBalance: 0,\n});\n\nconst getNetwork = () => {\n  let chainId = 5;\n  Ethers.provider()\n    .getNetwork()\n    .then((res) => {\n      if (res.chainId == chainId) {\n        getUserData();\n        State.update({ isZkSync: true });\n      } else {\n        switchNetwork(5);\n      }\n    });\n};\n\nconst switchNetwork = (chainId) => {\n  Ethers.provider().send(\"wallet_switchEthereumChain\", [\n    { chainId: `0x${chainId.toString(16)}` },\n  ]);\n};\n\nif (state.sender === undefined) {\n  const accounts = Ethers.send(\"eth_requestAccounts\", []);\n  if (accounts.length) {\n    State.update({ sender: accounts[0] });\n    getNetwork();\n  }\n}\n\nconst getRecipient = () => {\n  return (\n    state.sender.substring(0, 5) +\n    \"...\" +\n    state.sender.substring(state.sender.length - 4, state.sender.length)\n  ).toUpperCase();\n};\n\nconst formatNumber = (n) => {\n  if (n >= 1000000) {\n    return \"$\" + (n / 1000000).toFixed(2) + \"m\";\n  } else if (n >= 1000) {\n    return \"$\" + (n / 1000).toFixed(2) + \"k\";\n  } else {\n    return \"$\" + n.toFixed(2);\n  }\n};\n\nconst formatNumberToken = (n) => {\n  let result;\n\n  if (n == 0) {\n    return 0;\n  }\n\n  if (n >= 1000000) {\n    result = (n / 1000000).toFixed(2);\n  } else if (n >= 1000) {\n    result = (n / 1000).toFixed(2);\n  } else {\n    result = n.toFixed(2);\n  }\n\n  if (parseFloat(result) < 0.01) {\n    return \"<0.01\";\n  }\n\n  return result;\n};\n\nconst getUserData = () => {\n  asyncFetch(`https://api.mav.xyz/api/v3/user/${state.sender}/5`)\n    .catch((err) => {\n      console.log(err);\n    })\n    .then((res) => {\n      const hasSomeBalance = res.body.user.positions.filter(\n        (p) => p.balance !== 0\n      );\n      console.log(hasSomeBalance);\n      State.update({\n        portfolio: res.body.user,\n        hasSomeBalance: hasSomeBalance,\n      });\n    });\n};\n\nconst binsFormat = () => {\n  return {\n    tokenId: data[0],\n    image: data[1],\n    name: data[2],\n    happiness: data[3].toNumber(),\n    hunger: data[4].toNumber(),\n    sleep: data[5].toNumber(),\n    currentActivity: data[6],\n    isHungry: data[7],\n    isSleepy: data[8],\n    isBored: data[9],\n  };\n};\n\nconst getModeImg = (k) => {\n  if (k == 0) {\n    return \"https://raw.githubusercontent.com/yaairnaavaa/Maverick/main/ModeStatic.gif\";\n  }\n  if (k == 1) {\n    return \"https://raw.githubusercontent.com/yaairnaavaa/Maverick/main/ModeRight.gif\";\n  }\n  if (k == 2) {\n    return \"https://raw.githubusercontent.com/yaairnaavaa/Maverick/main/ModeLeft.gif\";\n  }\n  if (k == 3) {\n    return \"https://raw.githubusercontent.com/yaairnaavaa/Maverick/main/ModeBoth.gif\";\n  }\n};\n\nconst getMode = (k) => {\n  if (k == 0) {\n    return \"Static\";\n  }\n  if (k == 1) {\n    return \"Right\";\n  }\n  if (k == 2) {\n    return \"Left\";\n  }\n  if (k == 3) {\n    return \"Both\";\n  }\n};\n\nconst getFeeWidthFormat = (n) => {\n  var format = (n * 100).toFixed(2);\n  return format + \"%\";\n};\n\nconst manage = (p) => {\n  console.log(p);\n  State.update({ poolSelected: p, binsToRemove: p.bins, nftId: p.nftId });\n};\n\nconst remove = () => {\n  State.update({ isLiquidityRemoved: true });\n  getApprovedNFT();\n};\n\nconst back = () => {\n  State.update({\n    poolSelected: null,\n    binsToRemove: [],\n    nftId: null,\n    approveNFT: 0,\n  });\n};\n\nconst backToDetail = () => {\n  State.update({\n    isLiquidityRemoved: false,\n    showSelectBinsModal: false,\n    countBinsToRemove: 0,\n    binsToRemove: state.poolSelected.bins,\n    tokenAToWithdraw: 0,\n    tokenBToWithdraw: 0,\n    allChecked: false,\n  });\n};\n\nconst selectBins = () => {\n  State.update({ showSelectBinsModal: true });\n};\n\nconst closeModal = () => {\n  State.update({ showSelectBinsModal: false });\n};\n\nconst setBins = (btr, checked) => {\n  const countBinsToRemove = btr.filter((b) => b.selected);\n  const { sumReserveA, sumReserveB } = countBinsToRemove.reduce(\n    (accumulator, currentValue) => ({\n      sumReserveA: accumulator.sumReserveA + currentValue.reserveA,\n      sumReserveB: accumulator.sumReserveB + currentValue.reserveB,\n    }),\n    { sumReserveA: 0, sumReserveB: 0 }\n  );\n  State.update({\n    binsToRemove: btr,\n    showSelectBinsModal: false,\n    countBinsToRemove: countBinsToRemove.length,\n    tokenAToWithdraw: sumReserveA,\n    tokenBToWithdraw: sumReserveB,\n    allChecked: checked,\n  });\n};\n\nconst toFixedString = (n, d) => {\n  let stringNumber = n.toString();\n  let positionDecimalPoint = stringNumber.indexOf(\".\");\n  let truncatedNumber = stringNumber.substring(0, positionDecimalPoint + d + 1);\n  return truncatedNumber;\n};\n\nconst getApprovedNFT = () => {\n  const position = new ethers.Contract(\n    state.positionContract,\n    positionAbi.body,\n    Ethers.provider().getSigner()\n  );\n\n  try {\n    position.getApproved(state.poolSelected.nftId).then((res) => {\n      console.log(\"approvedNFT: \" + parseInt(res, 16));\n      State.update({ approveNFT: parseInt(res, 16) });\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nconst approveNFT = () => {\n  const position = new ethers.Contract(\n    state.positionContract,\n    positionAbi.body,\n    Ethers.provider().getSigner()\n  );\n\n  try {\n    position.approve(state.routerContract, state.nftId).then((res) => {\n      if (res) {\n        State.update({\n          onApprovingNFT: true,\n        });\n        setTimeout(() => {\n          State.update({\n            onApprovingNFT: false,\n          });\n          getApprovedNFT();\n        }, 20000);\n      }\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nconst refreshPoolData = () => {\n  asyncFetch(`https://api.mav.xyz/api/v3/user/${state.sender}/5`)\n    .catch((err) => {\n      console.log(err);\n    })\n    .then((res) => {\n      const newPortfolio = res.body.user;\n      const hasSomeBalance = newPortfolio.positions.filter(\n        (p) => p.balance !== 0\n      );\n\n      console.log(\"New Portfolio\");\n      console.log(newPortfolio);\n      let newPoolSelected = newPortfolio.positions.find(\n        (p) =>\n          p.id == state.poolSelected.id && p.kind == state.poolSelected.kind\n      );\n\n      console.log(\"New Pool Selected\");\n      console.log(newPoolSelected);\n\n      // Verify if the pool has bins to remove from the selected pool\n      if (newPoolSelected.bins.length > 0) {\n        State.update({\n          portfolio: newPortfolio,\n          poolSelected: newPoolSelected,\n          binsToRemove: newPoolSelected.bins,\n          hasSomeBalance: hasSomeBalance,\n          countBinsToRemove: 0,\n          tokenAToWithdraw: 0,\n          tokenBToWithdraw: 0,\n        });\n      } else {\n        State.update({\n          portfolio: newPortfolio,\n          hasSomeBalance: hasSomeBalance,\n          poolSelected: null,\n          binsToRemove: [],\n          allChecked: false,\n          countBinsToRemove: 0,\n          nftId: null,\n          approveNFT: 0,\n          tokenAToWithdraw: 0,\n          tokenBToWithdraw: 0,\n        });\n      }\n    });\n};\n\nconst floatToFixed = (num, decimals) => {\n  decimals ? decimals : 18;\n  return ethers.BigNumber.from(\n    ethers.utils.parseUnits(num.toString(), decimals)\n  );\n};\n\nconst confirmRemove = () => {\n  const router = new ethers.Contract(\n    state.routerContract,\n    routerAbi.body,\n    Ethers.provider().getSigner()\n  );\n\n  console.log(state.poolSelected);\n  let tuple = [];\n  state.binsToRemove.forEach((elemento) => {\n    const reserveA = elemento.reserveA;\n    const reserveB = elemento.reserveB;\n    if (elemento.selected) {\n      if (reserveA > 0) {\n        tuple.push({\n          binId: elemento.binId,\n          amount: floatToFixed(reserveA + 1000),\n        });\n      }\n\n      if (reserveB > 0) {\n        tuple.push({\n          binId: elemento.binId,\n          amount: floatToFixed(reserveB + 1000),\n        });\n      }\n    }\n  });\n\n  console.log(tuple);\n\n  try {\n    const overrides = {\n      gasLimit: 3000000,\n    };\n    router\n      .removeLiquidity(\n        state.poolSelected.pool.id,\n        state.sender,\n        state.poolSelected.nftId,\n        tuple,\n        0,\n        0,\n        1e13,\n        overrides\n      )\n      .then((res) => {\n        if (res) {\n          State.update({\n            onRemovingLiquidity: true,\n          });\n          setTimeout(() => {\n            State.update({\n              onRemovingLiquidity: false,\n            });\n            // Get new portfolio information\n            refreshPoolData();\n          }, 30000);\n        }\n      });\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nconst css = fetch(\n  \"https://raw.githubusercontent.com/yaairnaavaa/Maverick/main/portfolioRemoveLiquidity.css\"\n).body;\n\nif (!css) return \"\";\n\nif (!state.theme) {\n  State.update({\n    theme: styled.div`\n    ${css}\n`,\n  });\n}\n\nconst Theme = state.theme;\nreturn (\n  <Theme>\n    <div class=\"text-center mt-1\">\n      <div class=\"MainContainer\">\n        <div class=\"ProtocolContainer\">\n          <div class=\"ProtocolNetworkContainet\">\n            <div class=\"ProtocolNetworkTextSection\">\n              <div class=\"ProtocolText\">PROTOCOL</div>\n            </div>\n            <div class=\"ProtocolNetworkSection\">\n              <div class=\"ProtocolNetworkContainer\">\n                <img\n                  class=\"ProtocolImg\"\n                  src=\"https://etherscan.io/token/images/maverick_32.png\"\n                />\n                <div class=\"NetworkText\">Maverick</div>\n              </div>\n            </div>\n          </div>\n        </div>\n        {state.sender ? (\n          state.isZkSync ? (\n            !state.poolSelected ? (\n              <>\n                <div>\n                  <div class=\"HeaderContainer\">\n                    <div class=\"row text-white\">\n                      <div class=\"col-3 text-11\">\n                        <span class=\"text-bold\">Your Rewards</span>\n                        <br />\n                        {state.portfolio\n                          ? formatNumber(state.portfolio.rewards)\n                          : 0}\n                      </div>\n                      <div class=\"col-3 text-11\">\n                        <span class=\"text-bold\">Your Earnings</span>\n                        <br />\n                        {state.portfolio\n                          ? formatNumber(state.portfolio.fees)\n                          : 0}\n                      </div>\n                      <div class=\"col-3 text-11\">\n                        <span class=\"text-bold\">Your Balance</span>\n                        <br />\n                        {state.portfolio\n                          ? formatNumber(state.portfolio.tvl)\n                          : 0}\n                      </div>\n                      <div class=\"col-3 addLiquidityButtonContainer\">\n                        <div class=\"addLiquidityButton\">\n                          <div class={\"ConfirmText\"}>Add Liquidity</div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"LineContainer\">\n                    <div class=\"Line\" />\n                  </div>\n                </div>\n                <div class=\"row portfolioCardsContainer\">\n                  {state.portfolio &&\n                    state.portfolio.positions.map((p, key) => {\n                      return (\n                        p.balance > 0 && (\n                          <div class=\"col-6\" style={{ width: \"47%\" }}>\n                            <div class=\"row portfolioCardContainer\">\n                              <div class=\"col-12 text-12\">\n                                <div class=\"row mt-2\">\n                                  <div class=\"col-5\">\n                                    <img\n                                      class=\"TokenImg\"\n                                      src={p.pool.tokenA.logoURI}\n                                    />\n                                    <img\n                                      class=\"TokenImg\"\n                                      src={p.pool.tokenB.logoURI}\n                                    />\n                                  </div>\n                                  <div class=\"col-7 text-5\">\n                                    <div class=\"portfolioCardPoolName\">\n                                      {p.pool.name}\n                                    </div>\n                                    <div class=\"row\">\n                                      <div class=\"col-4 portfolioCardDetails\">\n                                        <img\n                                          class=\"portfolioCardDetailsImg\"\n                                          src=\"https://raw.githubusercontent.com/yaairnaavaa/Maverick/main/Fee.png\"\n                                        />\n                                        {getFeeWidthFormat(p.pool.fee)}\n                                      </div>\n                                      <div class=\"col-4 portfolioCardDetails\">\n                                        <img\n                                          class=\"portfolioCardDetailsImg2\"\n                                          src=\"https://raw.githubusercontent.com/yaairnaavaa/Maverick/main/Width.png\"\n                                        />\n                                        {getFeeWidthFormat(p.pool.width)}\n                                      </div>\n                                      <div class=\"col-4 portfolioCardDetails\">\n                                        <img\n                                          class=\"portfolioCardDetailsImg\"\n                                          src=\"https://raw.githubusercontent.com/yaairnaavaa/Maverick/main/Mode.png\"\n                                        />\n                                        {getMode(p.kind)}\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                              <div class=\"col-12 mt-2\">\n                                <img\n                                  class=\"portfolioCardPoolImg\"\n                                  src={getModeImg(p.kind)}\n                                />\n                              </div>\n                              <div class=\"col-12 mt-2 text-12\">\n                                <div class=\"row\">\n                                  <div class=\"col-6 text-bold\">Balance</div>\n                                  <div class=\"col-6\">\n                                    {formatNumber(p.balance)}\n                                  </div>\n                                  <div class=\"col-6 text-bold\">Earnings</div>\n                                  <div class=\"col-6\">\n                                    {formatNumber(p.fees)}\n                                  </div>\n                                </div>\n                              </div>\n                              <div class=\"col-12 mt-2 mb-2 manageLiquidityButtonContainer\">\n                                <div\n                                  class=\"manageLiquidityButton\"\n                                  onClick={() => manage(p)}\n                                >\n                                  <div class={\"ConfirmText\"}>Manage</div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        )\n                      );\n                    })}\n                  {(!state.portfolio || state.hasSomeBalance.length == 0) && (\n                    <p class=\"text-white\">\n                      You still do not have liquidity in any pool, if you have\n                      already added liquidity you must wait for the changes to\n                      be reflected\n                    </p>\n                  )}\n                </div>\n              </>\n            ) : !state.isLiquidityRemoved ? (\n              <>\n                <div>\n                  <div class=\"HeaderContainer\">\n                    <div class=\"row text-white\">\n                      <div class=\"col-12 titlePortfolio mb-2\">\n                        Manage Liquidity\n                      </div>\n                      <div class=\"col-3 backButtonContainer\">\n                        <div class=\"backButton\" onClick={() => back()}>\n                          <div class={\"ConfirmText\"}>Back</div>\n                        </div>\n                      </div>\n                      <div class=\"col-3 removeLiquidityButtonContainer\">\n                        <div\n                          class=\"removeLiquidityButton\"\n                          onClick={() => remove()}\n                        >\n                          <div class={\"ConfirmText\"}>Remove</div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"LineContainer\">\n                    <div class=\"Line\" />\n                  </div>\n                  <div class=\"BodyContainer\">\n                    <div class=\"row text-white\">\n                      <div class=\"col-5 flex justify-end\">\n                        <img\n                          class=\"TokenImg\"\n                          src={state.poolSelected.pool.tokenA.logoURI}\n                        />\n                        <img\n                          class=\"TokenImg\"\n                          src={state.poolSelected.pool.tokenB.logoURI}\n                        />\n                      </div>\n                      <div class=\"col-7 text-5\">\n                        <div class=\"poolNameDetails\">\n                          {state.poolSelected.pool.name}\n                        </div>\n                        <div class=\"row\">\n                          <div class=\"col-12 badgeContainer\">\n                            <div class=\"badge\">\n                              {getFeeWidthFormat(state.poolSelected.pool.fee)}{\" \"}\n                              Fee\n                            </div>\n                            <div class=\"badge\">\n                              {getFeeWidthFormat(state.poolSelected.pool.width)}{\" \"}\n                              Width\n                            </div>\n                            <div class=\"badge\">\n                              Mode {getMode(state.poolSelected.kind)}\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"col-12  mt-2 text-10\">\n                        <div class=\"row\">\n                          <div class=\"col-3 d-flex justify-content-center fw-bold\">\n                            {state.poolSelected.pool.tokenA.symbol} Balance\n                          </div>\n                          <div class=\"col-3 d-flex justify-content-center fw-bold\">\n                            {state.poolSelected.pool.tokenB.symbol} Balance\n                          </div>\n                          <div class=\"col-2 d-flex justify-content-center fw-bold\">\n                            TVL\n                          </div>\n                          <div class=\"col-2 d-flex justify-content-center fw-bold\">\n                            Volume\n                          </div>\n                          <div class=\"col-2 d-flex justify-content-center fw-bold\">\n                            Fees\n                          </div>\n\n                          <div class=\"col-3 d-flex justify-content-center\">\n                            {formatNumberToken(state.poolSelected.reserveA)}\n                          </div>\n                          <div class=\"col-3 d-flex justify-content-center\">\n                            {formatNumberToken(state.poolSelected.reserveB)}\n                          </div>\n                          <div class=\"col-2 d-flex justify-content-center\">\n                            {formatNumber(state.poolSelected.balance)}\n                          </div>\n                          <div class=\"col-2 d-flex justify-content-center\">\n                            {formatNumber(state.poolSelected.volume)}\n                          </div>\n                          <div class=\"col-2 d-flex justify-content-center\">\n                            {formatNumber(state.poolSelected.fees)}\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"col-12 mt-2\" style={{ textAlign: \"center\" }}>\n                        <img\n                          class=\"poolModeDetailImg\"\n                          src={getModeImg(state.poolSelected.kind)}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </>\n            ) : (\n              <>\n                <div>\n                  <div class=\"HeaderContainer\">\n                    <div class=\"row text-white\">\n                      <div class=\"col-12 titlePortfolio mb-2\">\n                        Remove Liquidity\n                      </div>\n                      <div class=\"col-3 backButtonContainer\">\n                        <div class=\"backButton\" onClick={() => backToDetail()}>\n                          <div class={\"ConfirmText\"}>Back</div>\n                        </div>\n                      </div>\n                      <div class=\"col-5 binsButtonContainer\">\n                        <div class=\"binsButton\" onClick={() => selectBins()}>\n                          <div class={\"ConfirmText\"}>\n                            {state.countBinsToRemove} Bins Select\n                            <svg\n                              xmlns=\"http://www.w3.org/2000/svg\"\n                              width=\"24\"\n                              height=\"24\"\n                              viewBox=\"0 0 24 24\"\n                              id=\"arrow-drop-down\"\n                            >\n                              <path fill=\"#8D8DFD\" d=\"M0 0h24v24H0V0z\"></path>\n                              <path fill=\"white\" d=\"M7 10l5 5 5-5H7z\"></path>\n                            </svg>\n                          </div>\n                        </div>\n                        {state.showSelectBinsModal && (\n                          <Widget\n                            props={{\n                              bins: state.binsToRemove,\n                              tokens: {\n                                tokenALogo:\n                                  state.poolSelected.pool.tokenA.logoURI,\n                                tokenBLogo:\n                                  state.poolSelected.pool.tokenB.logoURI,\n                              },\n                              setBins,\n                              closeModal,\n                              allChecked: state.allChecked,\n                            }}\n                            src={\"yairnava.testnet/widget/MultiSelectModal\"}\n                          />\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"LineContainer\">\n                    <div class=\"Line\" />\n                  </div>\n                  <div class=\"HeaderContainer removeDetailsBinsContainer\">\n                    <div class=\"row removeDetailsBins\">\n                      <div class=\"row mt-2\">\n                        <div class=\"col-6 text-left\">\n                          <div class=\"row\">\n                            <div class=\"col-6\">\n                              <img\n                                class=\"TokenImg mr-10\"\n                                src={state.poolSelected.pool.tokenA.logoURI}\n                              />\n                            </div>\n                            <div class=\"col-6 p-0\">\n                              {state.poolSelected.pool.tokenA.symbol} Withdrawal\n                            </div>\n                          </div>\n                        </div>\n                        <div class=\"col-6 removeDetailsBinsValue\">\n                          {state.tokenAToWithdraw == 0\n                            ? 0\n                            : state.tokenAToWithdraw.toFixed(10)}\n                        </div>\n                      </div>\n                      <div class=\"row mt-2\">\n                        <div class=\"col-6 text-left\">\n                          <div class=\"row\">\n                            <div class=\"col-6\">\n                              <img\n                                class=\"TokenImg mr-10\"\n                                src={state.poolSelected.pool.tokenB.logoURI}\n                              />\n                            </div>\n                            <div class=\"col-6 p-0\">\n                              {state.poolSelected.pool.tokenB.symbol} Withdrawal\n                            </div>\n                          </div>\n                        </div>\n                        <div class=\"col-6 removeDetailsBinsValue\">\n                          {state.tokenBToWithdraw == 0\n                            ? 0\n                            : state.tokenBToWithdraw.toFixed(10)}\n                        </div>\n                      </div>\n                      <div class=\"row mt-2\">\n                        <div class=\"col-6 text-left\">\n                          <div class=\"row\">\n                            <div class=\"col-6\">\n                              <img\n                                class=\"TokenImg removeDetailsBinsImg\"\n                                src=\"https://raw.githubusercontent.com/yaairnaavaa/Maverick/main/Fee.png\"\n                              />\n                            </div>\n                            <div class=\"col-6 p-0 flex items-center\">\n                              Fee Tier\n                            </div>\n                          </div>\n                        </div>\n                        <div class=\"col-6 removeDetailsBinsValue\">\n                          {getFeeWidthFormat(state.poolSelected.pool.fee)}\n                        </div>\n                      </div>\n                      <div class=\"row mt-2\">\n                        <div class=\"col-6 text-left\">\n                          <div class=\"row\">\n                            <div class=\"col-6\">\n                              <img\n                                class=\"TokenImg removeDetailsBinsImg\"\n                                src=\"https://raw.githubusercontent.com/yaairnaavaa/Maverick/main/Width.png\"\n                              />\n                            </div>\n                            <div class=\"col-6 p-0 flex items-center\">Width</div>\n                          </div>\n                        </div>\n                        <div class=\"col-6 removeDetailsBinsValue\">\n                          {getFeeWidthFormat(state.poolSelected.pool.width)}\n                        </div>\n                      </div>\n                      <div class=\"row mt-2\">\n                        <div class=\"col-6 text-left\">\n                          <div class=\"row\">\n                            <div class=\"col-6\">\n                              <img\n                                class=\"TokenImg removeDetailsBinsImg\"\n                                src=\"https://raw.githubusercontent.com/yaairnaavaa/Maverick/main/Mode.png\"\n                              />\n                            </div>\n                            <div class=\"col-6 p-0 flex items-center\">Mode</div>\n                          </div>\n                        </div>\n                        <div class=\"col-6 removeDetailsBinsValue\">\n                          {getMode(state.poolSelected.kind)}\n                        </div>\n                      </div>\n                      <div class=\"row mt-2\">\n                        <div class=\"col-12 removeDetailsButtonContainer\">\n                          <>\n                            {state.countBinsToRemove > 0 ? (\n                              state.approveNFT > 0 ? (\n                                !state.onRemovingLiquidity ? (\n                                  <div\n                                    class=\"confirmRemoveButton\"\n                                    onClick={() => confirmRemove()}\n                                  >\n                                    <div class={\"ConfirmText\"}>Connfirm</div>\n                                  </div>\n                                ) : (\n                                  <div class=\"onApprovingNFT\">\n                                    <div\n                                      class={\"ConfirmText\"}\n                                    >{`Removing liquidity...`}</div>\n                                  </div>\n                                )\n                              ) : !state.onApprovingNFT ? (\n                                <div\n                                  class=\"approveNFTButton\"\n                                  onClick={() => approveNFT()}\n                                >\n                                  <div class={\"ConfirmText\"}>Approve NFT</div>\n                                </div>\n                              ) : (\n                                <div class=\"onApprovingNFT\">\n                                  <div\n                                    class={\"ConfirmText\"}\n                                  >{`NFT it's being approved...`}</div>\n                                </div>\n                              )\n                            ) : (\n                              <div class=\"confirmRemoveButtonDisabled\">\n                                <div class={\"ConfirmTextDisabled\"}>\n                                  Connfirm\n                                </div>\n                              </div>\n                            )}\n                          </>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </>\n            )\n          ) : (\n            state.sender && (\n              <span class=\"text-white\">\n                To proceed, please switch to the\n                <br />\n                <div\n                  class=\"networkNameContainer\"\n                  onClick={() => switchNetwork(5)}\n                >\n                  <span class=\"networkName\">zkSync Era Network</span>\n                </div>\n                using your wallet.\n              </span>\n            )\n          )\n        ) : (\n          <div>\n            <Web3Connect\n              className=\"ConfirmButton ConfirmText\"\n              connectLabel=\"Connect Wallet\"\n            />\n          </div>\n        )}\n      </div>\n    </div>\n  </Theme>\n);\n", "metadata": {"name": "Maverick-LP-Portfolio"}, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/owa-is-bos.near/widget/Maverick-LP-Portfolio", "fact_widget_deployments_id": "ecdb3f7d89d69018b47069816aba1c01", "inserted_timestamp": "2023-10-31T01:52:28.606Z", "modified_timestamp": "2023-10-31T01:52:28.606Z", "__row_index": 2}