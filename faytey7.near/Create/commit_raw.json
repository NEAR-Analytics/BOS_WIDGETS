{"tx_hash": "9rERyrp3iqHaPY2NrwW1CXcHMGGGjkHyaZCKEoRt531a", "action_id_social": "GSPkvxQhUwooFWv2HG78hkBZSCHTHs7wWvyG2K6bDub1-0-widget", "block_id": 108477549, "block_timestamp": "2023-12-21T11:56:21.555Z", "signer_id": "faytey7.near", "widget_name": "Create", "source_code": "const accountId = props.accountId ?? context.accountId;\nif (!accountId) {\n  return <a href=\"https://www.near.org/signin\">Connect Wallet</a>;\n}\n\nconst profile = props.profile ?? Social.getr(`${accountId}/profile`);\n\nif (profile === null) {\n  return \"Loading\";\n}\n\nconst description = profile.description;\n\nconst [orgName, setOrgName] = useState(\"\");\nconst [orgSize, setOrgSize] = useState(\"\");\nconst [orgMembers, setOrgMembers] = useState(members);\nconst [orgDesc, setOrgDesc] = useState(\"\");\nconst [memberName, setMemberName] = useState(\"\");\nconst [memberRole, setMemberRole] = useState(\"\");\nconst [memberWalletAddress, setMemberWalletAddress] = useState(\"\");\nconst [tasks, setTasks] = useState([]);\nconst [getTask, setGetTasks] = useState(null);\nconst [taskName, setTaskName] = useState(\"\");\nconst [taskAssignee, setTaskAssignee] = useState(\"\");\nconst [assigned, setAssigned] = useState(true);\nconst [totalOrg, setTotalOrg] = useState([]);\nconst [viewOrg, setViewOrg] = useState(null);\n\nconst Container = styled.div`\nbackground: #e9e9e9;\n`;\n\nconst Home = styled.div`\nmargin: 2em;\ndisplay: flex;\ngap: 2em;\nheight: h-screen;\nalign-items: center;\njustify-content: space-around;\n`;\n\nconst Paragraph = styled.p`\nfont-size: 2em;\nletter-spacing: 0.05em;\nfont-weight: bold;\ncolor: #303030;\ntext-align: center;\nwidth: 100%;\n`;\n\nconst Gold = styled.span`\nbackground: goldenrod;\npadding: 0.1em 0.5em;\ncolor: white;\nborder-radius: 0.2em;\ntext-stroke: 2px black;\n`;\n\nconst Image = styled.img`\nborder-radius: 0.3em;\nbox-shadow: 1em 1em 3em rgba(0,0,0,0.3);\nwidth: 100%;\n`;\n\nconst About = styled.div`\nbackground: rgba(0,0,0,0.8);\ntext: white;\npadding: 2em;\n`;\n\nconst H3 = styled.h3`\ntext-align: center;\ncolor: white;\n`;\n\nconst P = styled.p`\ncolor: white;\nfont-size: 1.1em;\ntext-align: center;\npadding: 1em 5em;\n`;\n\nconst Create = styled.div`\npadding: 2em;\n`;\n\nconst Button = styled.button`\nbackground: rgba(0,0,0,0.8);\ncolor: white;\npadding: 0.5em;\nmargin: 1em 0;\nborder: none;\nborder-radius: 0.3em;\n`;\n\nconst Buttons = styled.button`\nwidth: 100%;\nbackground: rgba(0,0,0,0.8);\ncolor: white;\npadding: 0.5em;\nmargin: 1em 0;\nborder: none;\nborder-radius: 0.3em;\n`;\n\nconst Footer = styled.div`\nbackground: rgba(0,0,0,0.8);\npadding: 2em 4em;\ncolor: white;\ntext-align: center;\n`;\n\nconst Heading = styled.h3`\ntext-align: center;\n`;\n\nconst Input = styled.input`\nmargin: 1em 0;\ndisplay: block;\nwidth: 100%;\npadding: 0.3em;\nborder-radius: 0.5em;\nborder: none;\nbox-shadow: 0.1em 0.1em 0.3em rgba(0,0,0, 0.5);\n`;\n\nconst Spans = styled.span`\nfont-weight: bold;\n`;\n\nconst pills = [\n  { id: \"org\", title: \"Create Organisation\" },\n  { id: \"member\", title: \"Add Member\" },\n  { id: \"task\", title: \"Create Task\" },\n];\n\nconst Nav = styled.div`\n  .nav-pills {\n    background: rgba(0,0,0,0.8);\n    font-weight: 500;\n    --bs-nav-pills-border-radius: 0;\n    --bs-nav-link-color: #fbfbfb;\n    --bs-nav-pills-link-active-color: #000;\n    --bs-nav-pills-link-active-bg: #fbfbfb;\n    --bs-nav-link-padding-y: 0.75rem;\n    border-bottom: 1px solid #eee;\n    padding-top: 3px;\n  }\n  .nav-link.active {\n    border-bottom: 3px solid rgba(0,0,0,0.8);\n    border-left: 3px solid rgba(0,0,0,0.8);\n    border-right: 3px solid rgba(0,0,0,0.8);\n  }\n\n  margin: 0 -12px; \n`;\n\nconst addOrganization = () => {\n  setTotalOrg((prevOrganizations) => [\n    ...prevOrganizations,\n    { name: orgName, size: orgSize, members: orgMembers, description: orgDesc },\n  ]);\n\n  setOrgName(\"\");\n  setOrgSize(\"\");\n  setOrgDesc(\"\");\n  setOrgMembers([]);\n};\n\nconst addMember = ({ index }) => {\n  const newMember = {\n    id: orgMembers.length + 1,\n    name: memberName,\n    role: memberRole,\n    walletAddress: memberWalletAddress,\n  };\n  const newMemberList = [...orgMembers.members];\n\n  newMemberList.splice(index, 0, newMember);\n\n  setTotalOrg({ ...totalOrg, addMember: newMemberList });\n};\n\nconst viewOrganisations = () => {\n  const view = (\n    <div>\n      <p>{description}</p>\n      {totalOrg.map((org, index) => (\n        <div key={index}>\n          <p>\n            <Spans>Name:</Spans> {org.name}\n          </p>\n\n          <p>\n            <Spans>Size:</Spans> {org.size}\n          </p>\n\n          <p>\n            <Spans>Description:</Spans> {org.description}\n          </p>\n        </div>\n      ))}\n    </div>\n  );\n  setViewOrg(view);\n};\n\nconst addTask = () => {\n  setTasks((prevTask) => [\n    ...prevTask,\n    { name: taskName, assignnee: taskAssignee, status: assigned },\n  ]);\n\n  setTaskName(\"\");\n  setTaskAssignee(\"\");\n  setAssigned(false);\n};\n\nconst getTasks = () => {\n  const view = (\n    <div>\n      {tasks.map((task, index) => (\n        <div key={index}>\n          <p>\n            <Spans>Name:</Spans> {task.name}\n          </p>\n\n          <p>\n            <Spans>Assignee:</Spans> {task.assignnee}\n          </p>\n        </div>\n      ))}\n    </div>\n  );\n  setGetTasks(view);\n};\n\nreturn (\n  <Container>\n    <Create id=\"create\">\n      <Nav>\n        <ul className=\"nav nav-pills nav-fill\" id=\"pills-tab\" role=\"tablist\">\n          {pills.map(({ id, title }, i) => (\n            <li className=\"nav-item\" role=\"presentation\" key={i}>\n              <button\n                className={`nav-link ${i === 0 ? \"active\" : \"\"}`}\n                id={`pills-${id}-tab`}\n                data-bs-toggle=\"pill\"\n                data-bs-target={`#pills-${id}`}\n                type=\"button\"\n                role=\"tab\"\n                aria-controls={`pills-${id}`}\n                aria-selected={i === 0}\n                onClick={() => {\n                  const key = `load${id}`;\n                  !state[key] && State.update({ [key]: true });\n                }}\n              >\n                {title}\n              </button>\n            </li>\n          ))}\n        </ul>\n      </Nav>\n      <div className=\"tab-content\" id=\"pills-tabContent\">\n        <div\n          className=\"tab-pane fade show active\"\n          id=\"pills-org\"\n          role=\"tabpanel\"\n          aria-labelledby=\"pills-org-tab\"\n        >\n          <div className=\"col-lg-8 mx-auto\">\n            {description && (\n              <Widget\n                key=\"desc\"\n                loading=\"\"\n                src=\"mob.near/widget/MainPage.N.Post\"\n                props={{\n                  accountId,\n                  pinned: true,\n                  blockHeight: \"now\",\n                  content: {\n                    text: description,\n                  },\n                }}\n              />\n            )}\n            <Widget\n              key=\"feed\"\n              src=\"mob.near/widget/MainPage.N.Feed\"\n              props={{ accounts: [accountId] }}\n            />\n          </div>\n          <Create>\n            <Heading>Create Organization</Heading>\n\n            <div>\n              <label htmlFor=\"name\">Name of Organization:</label>\n\n              <Input\n                type=\"text\"\n                id=\"name\"\n                value={orgName}\n                onChange={(e) => setOrgName(e.target.value)}\n              />\n            </div>\n\n            <div>\n              <label htmlFor=\"size\">Size of Organization:</label>\n\n              <Input\n                type=\"number\"\n                id=\"size\"\n                value={orgSize}\n                onChange={(e) => setOrgSize(e.target.value)}\n              />\n            </div>\n\n            <div>\n              <label htmlFor=\"desc\">Description:</label>\n\n              <Input\n                type=\"text\"\n                id=\"desc\"\n                value={orgDesc}\n                onChange={(e) => setOrgDesc(e.target.value)}\n              />\n            </div>\n\n            <Buttons onClick={addOrganization}>Add Organization</Buttons>\n          </Create>\n        </div>\n        <div\n          className=\"tab-pane fade\"\n          id=\"pills-member\"\n          role=\"tabpanel\"\n          aria-labelledby=\"pills-member-tab\"\n        >\n          <Create>\n            <Heading>Add Member</Heading>\n\n            <div>\n              <label htmlFor=\"name\">Name:</label>\n\n              <Input\n                type=\"text\"\n                id=\"name\"\n                value={memberName}\n                onChange={(e) => setMemberName(e.target.value)}\n              />\n            </div>\n\n            <div>\n              <label htmlFor=\"size\">Role:</label>\n\n              <Input\n                type=\"role\"\n                id=\"role\"\n                value={memberRole}\n                onChange={(e) => setMemberRole(e.target.value)}\n              />\n            </div>\n\n            <div>\n              <label htmlFor=\"desc\">Wallet Address:</label>\n\n              <Input\n                type=\"text\"\n                id=\"desc\"\n                value={memberWalletAddress}\n                onChange={(e) => setMemberWalletAddress(e.target.value)}\n              />\n            </div>\n\n            <Buttons onClick={addMember}>Add Member</Buttons>\n          </Create>\n        </div>\n        <div\n          className=\"tab-pane fade widget\"\n          id=\"pills-task\"\n          role=\"tabpanel\"\n          aria-labelledby=\"pills-task-tab\"\n        >\n          <Create>\n            <Heading>Create Task</Heading>\n\n            <div>\n              <label htmlFor=\"taskname\">Name of Task:</label>\n\n              <Input\n                type=\"text\"\n                id=\"taskname\"\n                value={taskName}\n                onChange={(e) => setTaskName(e.target.value)}\n              />\n            </div>\n\n            <div>\n              <label htmlFor=\"assignee\">Assignee:</label>\n\n              <Input\n                type=\"text\"\n                id=\"assignee\"\n                value={taskAssignee}\n                onChange={(e) => setTaskAssignee(e.target.value)}\n              />\n            </div>\n\n            <div>\n              <label htmlFor=\"status\">Status:</label>\n\n              <Input\n                type=\"text\"\n                id=\"status\"\n                value={assigned}\n                onChange={(e) => setAssigned(e.target.value)}\n              />\n            </div>\n\n            <Buttons onClick={addTask}>Add Task</Buttons>\n          </Create>\n        </div>\n      </div>\n\n      <Home>\n        <div>\n          <Button onClick={viewOrganisations}>View Organizations</Button>\n          <div>{viewOrg}</div>\n        </div>\n        <div>\n          <Button onClick={getTasks}>View Tasks</Button>\n          <div>{getTask}</div>\n        </div>\n      </Home>\n    </Create>\n  </Container>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/faytey7.near/widget/Create", "fact_widget_deployments_id": "784fe784792305d7df5cbcea68044258", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}