{"tx_hash": "GDs2xvhWsbs4jKmfQGh1Ug7GC3x4jU6GBvZpgcbJEqmC", "action_id_social": "9aZ7GH4JJe83reMcQrzyr2MkvzeJzrx4iyM13j8M7uET-0-widget", "block_id": 104941671, "block_timestamp": "2023-11-04T20:13:07.382Z", "signer_id": "openwebbuild.near", "widget_name": "Post.Editor", "source_code": "// MIT License: https://github.com/openwebbuild/bos-components/blob/main/LICENSE\n\n// config\nfunction getConfig(network) {\n  switch (network) {\n    case \"mainnet\":\n      return {\n        ownerId: \"openwebbuild.near\",\n        discoveryAccountId: \"near\",\n      };\n    case \"testnet\":\n      return {\n        ownerId: \"openwebbuild.testnet\",\n        discoveryAccountId: \"one.testnet\",\n      };\n    default:\n      throw Error(`Unconfigured environment '${network}'.`);\n  }\n}\nconst config = getConfig(context.networkId);\n\nconst ComposeWrapper = styled.div`\n  border-top: 1px solid #eceef0;\n  height: 80vh;\n`;\n\n// -- Post Query Helper Functions --\n\nfunction queryPostByBlockHeight(accountId, blockHeight) {\n  return JSON.parse(\n    Social.get(`${accountId}/post/main`, blockHeight) ?? \"null\"\n  );\n}\n\nconst GRAPHQL_ENDPOINT =\n  props.GRAPHQL_ENDPOINT || \"https://near-queryapi.api.pagoda.co\";\n\nfunction fetchGraphQL(operationsDoc, operationName, variables) {\n  return fetch(`${GRAPHQL_ENDPOINT}/v1/graphql`, {\n    method: \"POST\",\n    headers: { \"x-hasura-role\": \"openwebbuild_near\" },\n    body: JSON.stringify({\n      query: operationsDoc,\n      variables: variables,\n      operationName: operationName,\n    }),\n  });\n}\n\nfunction createQuery() {\n  const indexerQueries = `\n    query QueryPostByPermalink($accountId: String, $permalink: String, $offset: Int, $limit: Int) {\n      openwebbuild_near_blog_posts(where: { account_id: { _eq: $accountId }, permalink: { _eq: $permalink } }, order_by: { block_height: desc }, offset: $offset, limit: $limit) {\n        id\n        permalink\n        content\n        block_height\n        account_id\n        block_timestamp\n        title\n      }\n    }\n  `;\n  return indexerQueries;\n}\n\nfunction queryPostByPermalink(accountId, permalink) {\n  if (context.networkId === \"mainnet\") {\n    // query post with Query API\n    const result = fetchGraphQL(\n      createQuery(sortOption, type),\n      \"QueryPostByPermalink\",\n      {\n        accountId,\n        permalink,\n        offset: 0,\n        limit: 1,\n      }\n    );\n    if (result.status === 200 && result.body) {\n      if (result.body.errors) {\n        console.log(\"error:\", result.body.errors);\n      } else {\n        let data = result.body.data;\n        if (data) {\n          const posts = data.openwebbuild_near_blog_posts;\n          if (posts && posts.length > 0) {\n            const p = posts[0];\n            const content = JSON.parse(p.content || null);\n            if (content) {\n              return {\n                blockHeight: p.block_height,\n                ...content,\n              };\n            }\n          }\n        }\n      }\n      return null;\n    }\n  } else {\n    // query post with NEAR Social indexer\n    const index = {\n      action: \"post\",\n      key: \"main\",\n      options: {\n        limit: 50,\n        order: \"desc\",\n        accountId,\n      },\n    };\n    const posts = Social.index(index.action, index.key, index.options);\n    if (posts) {\n      for (const p of posts) {\n        const content = queryPostByBlockHeight(accountId, p.blockHeight);\n        if (content && content.permalink === permalink) {\n          return {\n            blockHeight: p.blockHeight,\n            ...content,\n          };\n        }\n      }\n    }\n    return null;\n  }\n}\n\n// -- End of Post Query Helper Functions --\n\nconst accountId = context.accountId;\nconst permalink = props.permalink;\nconst content =\n  accountId && permalink ? queryPostByPermalink(accountId, permalink) : null;\nconst text = content && content.text;\n\nreturn (\n  <>\n    <ComposeWrapper>\n      <Widget\n        src={`${config.ownerId}/widget/Post.Compose`}\n        props={{ text, ...props }}\n      />\n    </ComposeWrapper>\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/openwebbuild.near/widget/Post.Editor", "fact_widget_deployments_id": "8f3c94b8f66e04a7984f1739198bd151", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 2}