{"tx_hash": "E38bYPNmhGNZ4xqT3A1oTRtybyjWiY2Qwa47EqoYCiCi", "action_id_social": "3c4tnHqGgCSgvSuC7wQyoMHW52U9S7tErpgLKJpA2qVa-0-widget", "block_id": 96543762, "block_timestamp": "2023-07-15T16:47:34.072Z", "signer_id": "openwebbuild.near", "widget_name": "Account.Profile", "source_code": "// config\nfunction getConfig(network) {\n  switch (network) {\n    case \"mainnet\":\n      return {\n        ownerId: \"openwebbuild.near\",\n        discoveryAccountId: \"near\",\n        eugeneId: \"mob.near\",\n      };\n    case \"testnet\":\n      return {\n        ownerId: \"openwebbuild.testnet\",\n        discoveryAccountId: \"one.testnet\",\n        eugeneId: \"eugenethedream\",\n      };\n    default:\n      throw Error(`Unconfigured environment '${network}'.`);\n  }\n}\nconst config = getConfig(context.networkId);\n\nconst accountId = props.accountId || context.accountId;\nconst profile = props.profile || Social.get(`${accountId}/profile/**`, \"final\");\nconst profileUrl = `#/${config.ownerId}/widget/Page.Profile?accountId=${accountId}`;\n\nconst Wrapper = styled.a`\n  display: inline-grid;\n  width: 100%;\n  align-items: center;\n  gap: 12px;\n  grid-template-columns: auto 1fr;\n  cursor: pointer;\n  margin: 0;\n  color: #687076 !important;\n  outline: none;\n  text-decoration: none !important;\n  background: none !important;\n  border: none;\n  text-align: left;\n  padding: 0;\n\n  > * {\n    min-width: 0;\n  }\n\n  &:hover,\n  &:focus {\n    div:first-child {\n      border-color: #d0d5dd;\n    }\n  }\n`;\n\nconst Text = styled.p`\n  margin: 0;\n  font-size: 14px;\n  line-height: 20px;\n  color: ${(p) => (p.bold ? \"#11181C\" : \"#687076\")};\n  font-weight: ${(p) => (p.bold ? \"600\" : \"400\")};\n  font-size: ${(p) => (p.small ? \"10px\" : \"14px\")};\n  overflow: ${(p) => (p.ellipsis ? \"hidden\" : \"\")};\n  text-overflow: ${(p) => (p.ellipsis ? \"ellipsis\" : \"\")};\n  white-space: nowrap;\n`;\n\nconst Avatar = styled.div`\n  width: ${props.avatarSize || \"40px\"};\n  height: ${props.avatarSize || \"40px\"};\n  flex-shrink: 0;\n  border: 1px solid #eceef0;\n  overflow: hidden;\n  border-radius: 40px;\n  transition: border-color 200ms;\n\n  img {\n    object-fit: cover;\n    width: 100%;\n    height: 100%;\n  }\n`;\n\nconst Name = styled.div`\n  display: flex;\n  gap: 6px;\n  align-items: center;\n`;\n\nconst AccountProfile = (\n  <Wrapper\n    as={props.onClick ? \"button\" : \"a\"}\n    href={!props.onClick && profileUrl}\n    onClick={props.onClick && (() => props.onClick(accountId))}\n  >\n    <Avatar>\n      <Widget\n        src={`${config.eugeneId}/widget/Image`}\n        props={{\n          image: profile.image,\n          alt: profile.name,\n          fallbackUrl:\n            \"https://ipfs.near.social/ipfs/bafkreibiyqabm3kl24gcb2oegb7pmwdi6wwrpui62iwb44l7uomnn3lhbi\",\n        }}\n      />\n    </Avatar>\n\n    <div>\n      <Name>\n        <Text ellipsis bold>\n          {profile.name || accountId.split(\".near\")[0]}\n        </Text>\n\n        {props.inlineContent}\n\n        {props.blockHeight && (\n          <Text small style={{ marginLeft: \"auto\" }}>\n            Joined{\" \"}\n            <Widget\n              src={`${\n                context.networkId === \"mainnet\" ? \"mob.near\" : \"one.testnet\"\n              }/widget/TimeAgo`}\n              props={{ blockHeight: props.blockHeight }}\n            />{\" \"}\n            ago\n          </Text>\n        )}\n      </Name>\n\n      {!props.hideAccountId && <Text ellipsis>@{accountId}</Text>}\n    </div>\n  </Wrapper>\n);\n\nif (props.noOverlay) return AccountProfile;\n\nreturn (\n  <Widget\n    src={`${config.discoveryAccountId}/widget/AccountProfileOverlay`}\n    props={{\n      accountId: props.accountId,\n      profile,\n      children: AccountProfile,\n      placement: props.overlayPlacement,\n    }}\n  />\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/openwebbuild.near/widget/Account.Profile", "fact_widget_deployments_id": "f2fc85192b021a505bd125be2702d0cf", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}