{"tx_hash": "E38bYPNmhGNZ4xqT3A1oTRtybyjWiY2Qwa47EqoYCiCi", "action_id_social": "3c4tnHqGgCSgvSuC7wQyoMHW52U9S7tErpgLKJpA2qVa-0-widget", "block_id": 96543762, "block_timestamp": "2023-07-15T16:47:34.072Z", "signer_id": "openwebbuild.near", "widget_name": "Comment.View", "source_code": "// config\nfunction getConfig(network) {\n  switch (network) {\n    case \"mainnet\":\n      return {\n        gatewayDomain: \"openweb.build\",\n        ownerId: \"openwebbuild.near\",\n        discoveryAccountId: \"near\",\n        eugeneId: \"mob.near\",\n      };\n    case \"testnet\":\n      return {\n        gatewayDomain: \"dev.openweb.build\",\n        ownerId: \"openwebbuild.testnet\",\n        discoveryAccountId: \"one.testnet\",\n        eugeneId: \"eugenethedream\",\n      };\n    default:\n      throw Error(`Unconfigured environment '${network}'.`);\n  }\n}\nconst config = getConfig(context.networkId);\n\nconst accountId = props.accountId;\nconst blockHeight =\n  props.blockHeight === \"now\" ? \"now\" : parseInt(props.blockHeight);\nconst content =\n  props.content ??\n  JSON.parse(Social.get(`${accountId}/post/comment`, blockHeight) ?? \"null\");\nconst parentItem = content.item;\nconst highlight = !!props.highlight;\nconst raw = !!props.raw;\nconst commentUrl = `${config.gatewayDomain}/s/c?a=${accountId}&b=${blockHeight}`;\n\nState.init({ hasBeenFlagged: false });\n\nconst extractNotifyAccountId = (parentItem) => {\n  if (!parentItem || parentItem.type !== \"social\" || !parentItem.path) {\n    return undefined;\n  }\n  const accountId = parentItem.path.split(\"/\")[0];\n  return `${accountId}/post/main` === parentItem.path ? accountId : undefined;\n};\n\nconst Comment = styled.div`\n  position: relative;\n\n  &::before {\n    content: \"\";\n    display: block;\n    position: absolute;\n    left: 15px;\n    top: 44px;\n    bottom: 12px;\n    width: 2px;\n    background: ${props.highlight ? \"#006ADC\" : \"#ECEEF0\"};\n  }\n`;\n\nconst Header = styled.div`\n  display: inline-flex;\n  margin-bottom: 0;\n`;\n\nconst Main = styled.div`\n  padding-left: 44px;\n  padding-bottom: 1px;\n`;\n\nconst Content = styled.div`\n  img {\n    display: block;\n    max-width: 100%;\n    max-height: 80vh;\n    margin: 0 0 12px;\n  }\n`;\n\nconst Text = styled.p`\n  display: block;\n  margin: 0;\n  font-size: 14px;\n  line-height: 20px;\n  font-weight: 400;\n  color: #687076;\n  white-space: nowrap;\n`;\n\nconst Actions = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  margin: -6px -6px 6px;\n`;\n\nif (state.hasBeenFlagged) {\n  return (\n    <div className=\"alert alert-secondary\">\n      <i className=\"bi bi-flag\" /> This content has been flagged for moderation\n    </div>\n  );\n}\n\nreturn (\n  <Comment>\n    <Header>\n      <Widget\n        src={`${config.ownerId}/widget/Account.Profile`}\n        props={{\n          accountId,\n          avatarSize: \"32px\",\n          hideAccountId: true,\n          inlineContent: (\n            <>\n              <Text as=\"span\">\uff65</Text>\n              {blockHeight === \"now\" ? (\n                \"now\"\n              ) : (\n                <Text>\n                  <Widget\n                    src={`${\n                      context.networkId === \"mainnet\"\n                        ? \"mob.near\"\n                        : \"one.testnet\"\n                    }/widget/TimeAgo`}\n                    props={{ blockHeight }}\n                  />{\" \"}\n                  ago\n                </Text>\n              )}\n            </>\n          ),\n        }}\n      />\n    </Header>\n\n    <Main>\n      <Content>\n        {content.text && (\n          <Widget\n            src={`${config.ownerId}/widget/Post.Markdown`}\n            props={{ text: content.text }}\n          />\n        )}\n\n        {content.image && (\n          <Widget\n            src={`${config.eugeneId}/widget/Image`}\n            props={{\n              image: content.image,\n            }}\n          />\n        )}\n      </Content>\n\n      {blockHeight !== \"now\" && (\n        <Actions>\n          <Widget\n            src={`${config.discoveryAccountId}/widget/LikeButton`}\n            props={{\n              item: {\n                type: \"social\",\n                path: `${accountId}/post/comment`,\n                blockHeight,\n              },\n              notifyAccountId,\n            }}\n          />\n          <Widget\n            src={`${config.discoveryAccountId}/widget/CommentButton`}\n            props={{\n              hideCount: true,\n              onClick: () => State.update({ showReply: !state.showReply }),\n            }}\n          />\n          <Widget\n            src={`${config.discoveryAccountId}/widget/CopyUrlButton`}\n            props={{\n              url: commentUrl,\n            }}\n          />\n          {/* <Widget\n            src={`${config.discoveryAccountId}/widget/ShareButton`}\n            props={{\n              postType: \"comment\",\n              url: commentUrl,\n            }}\n          />\n          <Widget\n            src={`${config.discoveryAccountId}/widget/FlagButton`}\n            props={{\n              item: {\n                type: \"social\",\n                path: `${accountId}/post/comment`,\n                blockHeight,\n              },\n              onFlag: () => {\n                State.update({ hasBeenFlagged: true });\n              },\n            }}\n          /> */}\n        </Actions>\n      )}\n\n      {state.showReply && (\n        <div className=\"mb-2\">\n          <Widget\n            src={`${config.discoveryAccountId}/widget/Comments.Compose`}\n            props={{\n              initialText: `@${accountId}, `,\n              notifyAccountId: extractNotifyAccountId(parentItem),\n              item: parentItem,\n              onComment: () => State.update({ showReply: false }),\n            }}\n          />\n        </div>\n      )}\n    </Main>\n  </Comment>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/openwebbuild.near/widget/Comment.View", "fact_widget_deployments_id": "dfe75b26273eea51787aecaba8ada4cc", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 1}