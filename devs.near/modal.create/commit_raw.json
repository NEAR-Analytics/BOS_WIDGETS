{"tx_hash": "9WdQva8esTqkAhaduDT6xyJSsBY889tjN9uxvYcqaNKt", "action_id_social": "AfD649AEkYshah38EUJacwZvX5zWxss7VSju6KADwyyR-0-widget", "block_id": 112732770, "block_timestamp": "2024-02-13T07:42:27.157Z", "signer_id": "devs.near", "widget_name": "modal.create", "source_code": "const Wrapper = styled.div`\n  max-width: 400px;\n  margin: 0 auto;\n`;\n\nconst TabContent = styled.div`\n  margin-top: 1rem;\n`;\n\nconst Form = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  width: 100%;\n`;\n\nconst Label = styled.label`\n  font-weight: bold;\n`;\n\nconst Input = styled.input`\n  padding: 5px;\n`;\n\nconst Select = styled.select`\n  padding: 8px;\n`;\n\nconst FormGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst adapters = [\n  {\n    title: \"Social DB\",\n    value: null,\n  },\n  {\n    title: \"IPFS\",\n    value: \"everycanvas.near/widget/adapter.ipfs\",\n  },\n  {\n    title: \"Sputnik DAO\",\n    value: \"devs.near/widget/adapter.sputnik-dao\",\n  },\n];\n\nconst defaultAdapter = adapters[0];\n\nconst { creatorId } = props;\n\nconst [json, setJson] = useState(props.data ?? \"\");\nconst [source, setSource] = useState(props.source ?? \"\");\nconst [adapter, setAdapter] = useState(defaultAdapter.value ?? \"\");\nconst [reference, setReference] = useState(undefined);\nconst [activeTab, setActiveTab] = useState(\"data\");\nconst [name, setName] = useState(props.name ?? \"\");\nconst [description, setDescription] = useState(props.description ?? \"\");\nconst [type, setType] = useState(props.type ?? \"document\");\nconst [path, setPath] = useState(`${context.accountId}/every/document/test`);\n\nconst socialDbAdapter = {\n  get: (path, blockHeight) => {\n    if (!path) console.log(\"path not provided\") && null;\n    if (!blockHeight) blockHeight = \"final\";\n    return Social.get(path, blockHeight);\n  },\n  create: (v, path, type) => {\n    const parts = path.split(\"/\");\n    let nestedObject = {};\n    let currentLevel = nestedObject;\n\n    for (let i = 1; i < parts.length - 1; i++) {\n      const part = parts[i];\n      currentLevel[part] = {};\n      currentLevel = currentLevel[part];\n    }\n\n    currentLevel[parts[parts.length - 1]] = {\n      \"\": v,\n      metadata: {\n        name: name,\n        description: description,\n        type: type,\n      },\n    };\n\n    return Social.set(nestedObject, {\n      force: \"true\",\n      onCommit: (v) => {\n        if (props.closeModal) props.closeModal();\n      },\n      onCancel: (v) => {\n        if (props.closeModal) props.closeModal();\n      },\n    });\n  },\n};\n\nconst handleCreate = () => {\n  // load in the state.adapter (modules for IPFS, Arweave, Ceramic, Verida, On Machina... )\n  const { create } = adapter ? VM.require(adapter) : socialDbAdapter;\n  // const { create } = VM.require(adapter) || (() => {});\n  if (create) {\n    // store the data somewhere, based on the adapter\n    create(json, path, type);\n  }\n  if (props.setPath) props.setPath(path);\n};\n\nreturn (\n  <Wrapper>\n    <h3>create</h3>\n    <ul className=\"nav nav-tabs\">\n      <li className=\"nav-item\">\n        <a\n          className={`nav-link ${activeTab === \"data\" ? \"active\" : \"\"}`}\n          onClick={() => setActiveTab(\"data\")}\n        >\n          Data\n        </a>\n      </li>\n      <li className=\"nav-item\">\n        <a\n          className={`nav-link ${activeTab === \"metadata\" ? \"active\" : \"\"}`}\n          onClick={() => setActiveTab(\"metadata\")}\n        >\n          Metadata\n        </a>\n      </li>\n    </ul>\n\n    <TabContent>\n      {activeTab === \"data\" && (\n        <Form>\n          <FormGroup>\n            <Label>path</Label>\n            <Input\n              type=\"text\"\n              value={path}\n              disabled // temp\n              onChange={(e) => setPath(e.target.value)}\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label>type</Label>\n            <Input\n              type=\"text\"\n              value={type}\n              disabled // temp\n              onChange={(e) => setType(e.target.value)}\n            />\n          </FormGroup>\n          <textarea\n            className=\"form-control mb-3\"\n            rows={5}\n            value={json}\n            onChange={(e) => setJson(e.target.value)}\n          />\n          <FormGroup>\n            <Label>adapter</Label>\n            <Select\n              value={adapter}\n              onChange={(e) => setAdapter(e.target.value)}\n            >\n              {adapters.map((o) => (\n                <option value={o.value}>{o.title}</option>\n              ))}\n            </Select>\n          </FormGroup>\n        </Form>\n      )}\n    </TabContent>\n    <TabContent>\n      {activeTab === \"metadata\" && (\n        <Form>\n          <FormGroup>\n            <Label>name</Label>\n            <Input\n              type=\"text\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label>description</Label>\n            <textarea\n              className=\"form-control mb-3\"\n              rows={5}\n              value={description}\n              onChange={(e) => setDescription(e.target.value)}\n            />\n          </FormGroup>\n        </Form>\n      )}\n    </TabContent>\n    <FormGroup>\n      <button className=\"btn btn-success mb-1\" onClick={handleCreate}>\n        Create\n      </button>\n    </FormGroup>\n  </Wrapper>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/devs.near/widget/modal.create", "fact_widget_deployments_id": "7ad0d6208a58a14a36223c9b0e4c1e47", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}