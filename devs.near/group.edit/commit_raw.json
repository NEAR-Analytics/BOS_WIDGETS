{"tx_hash": "5FUoxDbmPJCRo6g4UcyVrTa7dmW9dA5SBd6dYev8qJ3V", "action_id_social": "96cXEmfYEnYBsNk5isHC63XunCnigvV6LhJANSx8grRk-0-widget", "block_id": 116868634, "block_timestamp": "2024-04-15T02:36:24.635Z", "signer_id": "devs.near", "widget_name": "group.edit", "source_code": "const { handleClose } = props;\nconst creatorId = props.creatorId ?? context.accountId;\nif (!creatorId) {\n  return \"Please connect your NEAR account :)\";\n}\nconst groupId = props.groupId ?? \"526fb256e74eelmf0nw3n5909bc189c13d\";\nconst groupData =\n  props.group ?? Social.get(`${creatorId}/thing/${groupId}/**`, \"final\");\nif (!groupData) {\n  return \"\";\n}\nconst groupKey = Object.keys(groupData)[0];\nconst initMembers =\n  props.members ?? Social.get(`${creatorId}/graph/${groupId}/**`, \"final\");\nif (!initMembers) {\n  return \"\";\n}\nState.init({\n  group: groupData,\n  members: initMembers,\n  newMember: \"\",\n  isDao: false,\n});\nfunction addMember(newMember) {\n  State.update({\n    members: { ...state.members, [newMember]: \"\" },\n  });\n}\nfunction removeMember(memberKey) {\n  const updatedMembers = { ...state.members };\n  delete updatedMembers[memberKey];\n  State.update({\n    members: updatedMembers,\n  });\n}\nfunction isNearAddress(address) {\n  if (typeof address !== \"string\") {\n    return false;\n  }\n  if (!address.endsWith(\".near\")) {\n    return false;\n  }\n  const parts = address.split(\".\");\n  if (parts.length !== 2) {\n    return false;\n  }\n  if (parts[0].length < 2 || parts[0].length > 32) {\n    return false;\n  }\n  if (!/^[a-z0-9_-]+$/i.test(parts[0])) {\n    return false;\n  }\n  return true;\n}\nconst memberId = props.memberId ?? state.newMember;\nconst isValid = isNearAddress(memberId);\nconst handleSave = () => {\n  Social.set({\n    thing: {\n      [groupId]: {\n        \"\": JSON.stringify(state.group),\n        metadata: {\n          ...state.group,\n          type: {\n            group: {\n              src: \"every.near/type/group\",\n              blockHeight: \"final\",\n            },\n          },\n        },\n      },\n    },\n    graph: {\n      [groupId]: {\n        ...state.members,\n      },\n    },\n    index: {\n      every: JSON.stringify({\n        key: \"group\",\n        value: {\n          id: groupId,\n        },\n      }),\n      graph: JSON.stringify(\n        Object.keys(state.members).map((account) => ({\n          key: groupId,\n          value: {\n            type: \"add\",\n            accountId: account,\n          },\n        }))\n      ),\n      notify: JSON.stringify(\n        Object.keys(state.members)\n          .filter((it) => initMembers.includes(it))\n          .map((account) => ({\n            key: account,\n            value: {\n              type: \"add\",\n            },\n          }))\n      ),\n    },\n  });\n};\nreturn (\n  <>\n    <p>{JSON.stringify(group)}</p>\n    {groupData && (\n      <div className=\"row\">\n        <div className=\"col-lg-6\">\n          <h5 className=\"mb-3\">Details</h5>\n          <Widget\n            src=\"devs.near/widget/group.card\"\n            props={{ groupId, canJoin: false }}\n          />\n          <div className=\"mb-2 mt-3\">\n            <Widget\n              src=\"near/widget/MetadataEditor\"\n              props={{\n                initialMetadata: group,\n                onChange: (group) => State.update({ group }),\n                options: {\n                  name: {\n                    label: \"Name\",\n                    placeholder: `${group[groupKey].thing[groupId].metadata.name}`,\n                  },\n                  image: { label: \"Logo\" },\n                  description: { label: \"About\" },\n                  tags: {\n                    label: \"Tags\",\n                    tagsPattern: `*/${groupId}/tags/*`,\n                    placeholder: \"art, gov, edu, dev, com, nft, ai, social\",\n                  },\n                  linktree: {\n                    links: [\n                      {\n                        label: \"Twitter\",\n                        prefix: \"https://twitter.com/\",\n                        name: \"twitter\",\n                      },\n                      {\n                        label: \"Github\",\n                        prefix: \"https://github.com/\",\n                        name: \"github\",\n                      },\n                      {\n                        label: \"Telegram\",\n                        prefix: \"https://t.me/\",\n                        name: \"telegram\",\n                      },\n                      {\n                        label: \"Website\",\n                        prefix: \"https://\",\n                        name: \"website\",\n                      },\n                    ],\n                  },\n                },\n              }}\n            />\n          </div>\n        </div>\n        <div className=\"col-lg-6\">\n          <h5 className=\"mb-3\">Members</h5>\n          <div>\n            Account ID\n            <input\n              label=\"input each member's account ID here, then click `add` below\"\n              placeholder=\"<example>.near\"\n              onChange={(e) => State.update({ newMember: e.target.value })}\n            />\n            <div className=\"d-flex align-items-center mt-2\">\n              <button\n                className=\"btn btn-primary m-2\"\n                onClick={() => addMember(state.newMember)}\n              >\n                add\n              </button>\n              <button className=\"btn btn-success m-2\" onClick={handleSave}>\n                save\n              </button>\n            </div>\n          </div>\n          <div>\n            {Object.keys(state.members).map((a) => {\n              return (\n                <div className=\"d-flex m-2 p-2 justify-content-between align-items-center\">\n                  <div className=\"d-flex align-items-center\">\n                    <Widget\n                      src=\"mob.near/widget/Profile\"\n                      props={{ accountId: a }}\n                    />\n                  </div>\n                  <button\n                    className=\"btn btn-danger m-1\"\n                    onClick={() => removeMember(a)}\n                  >\n                    remove\n                  </button>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    )}\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/devs.near/widget/group.edit", "fact_widget_deployments_id": "d06d5b51778cb1fc75a9d7eaeccb644b", "inserted_timestamp": "2024-04-15T04:38:44.803Z", "modified_timestamp": "2024-04-15T05:22:37.742Z", "__row_index": 0}