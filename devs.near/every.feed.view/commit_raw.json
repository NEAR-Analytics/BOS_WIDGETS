{"tx_hash": "4F9j2nnMSKoCckGU99CZrgMGFoV2gzjYrXgpy3MPnNsN", "action_id_social": "CY2Cqk6CGr36MmNsYQTMxHDMVDGT6wu9s8uafP7ba2sh-0-widget", "block_id": 94122533, "block_timestamp": "2023-06-13T15:56:25.776Z", "signer_id": "devs.near", "widget_name": "every.feed.view", "source_code": "const data = props.data;\nconst typeWhitelist = JSON.stringify(data.typeWhitelist);\nconst key = data.key;\nconst domain = data.domain;\nconst hashtagFilter = JSON.stringify(data.hashtagFilter);\nconst daoId = data.daoId;\n\n// Since we know the typeWhitelist, we could prefetch widgets\n// and maybe write out a switch case?\n//\n// Or match with the name pattern? every.thing\n\nif (\n  typeWhitelist === JSON.stringify([\"md\", \"social\", \"every.near/type/markdown\"])\n) {\n  return (\n    <>\n      <Widget\n        src=\"efiz.near/widget/Community.Posts.Compose\"\n        props={{\n          key,\n          communityDomain: domain,\n          isMember: true,\n          embedHashtags: data.hashtagFilter,\n        }}\n      />\n      <p>{daoId}</p>\n      <Widget\n        src=\"every.near/widget/every.post\"\n        props={{\n          typeWhitelist,\n          key,\n          domainFilter: JSON.stringify([domain]),\n          hashtagFilter,\n        }}\n      />\n    </>\n  );\n} else {\n  return (\n    <>\n      <Widget\n        src=\"every.near/widget/every.post.create\"\n        props={{ typeWhitelist, key }}\n      />\n      <Widget\n        src=\"every.near/widget/every.post\"\n        props={{ typeWhitelist, key }}\n      />\n    </>\n  );\n}\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/devs.near/widget/every.feed.view", "fact_widget_deployments_id": "86141d2a116c875b732ddbc8c4e97050", "inserted_timestamp": "2000-01-01T00:00:00.000Z", "modified_timestamp": "2000-01-01T00:00:00.000Z", "__row_index": 14}