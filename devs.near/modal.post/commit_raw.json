{"tx_hash": "9WdQva8esTqkAhaduDT6xyJSsBY889tjN9uxvYcqaNKt", "action_id_social": "AfD649AEkYshah38EUJacwZvX5zWxss7VSju6KADwyyR-0-widget", "block_id": 112732770, "block_timestamp": "2024-02-13T07:42:27.157Z", "signer_id": "devs.near", "widget_name": "modal.post", "source_code": "const Wrapper = styled.div`\n  max-width: 400px;\n  margin: 0 auto;\n`;\n\nconst Form = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  width: 100%;\n`;\n\nconst Label = styled.label`\n  font-weight: bold;\n`;\n\nconst Input = styled.input`\n  padding: 5px;\n`;\n\nconst Select = styled.select`\n  padding: 8px;\n`;\n\nconst FormGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst [path, setPath] = useState(props.path);\nconst [content, setContent] = useState(`[EMBED](${path})\\n\\n#test`);\n\nif (!path) {\n  return (\n    <Wrapper>\n      <h3>path must be provided</h3>\n      <FormGroup>\n        <button\n          className={\"btn btn-success\"}\n          onClick={() => {\n            if (props.closeModal) props.closeModal();\n          }}\n        >\n          close\n        </button>\n      </FormGroup>\n    </Wrapper>\n  );\n}\n\nconst extractMentions = (text) => {\n  const mentionRegex =\n    /@((?:(?:[a-z\\d]+[-_])*[a-z\\d]+\\.)*(?:[a-z\\d]+[-_])*[a-z\\d]+)/gi;\n  mentionRegex.lastIndex = 0;\n  const accountIds = new Set();\n  for (const match of text.matchAll(mentionRegex)) {\n    if (\n      !/[\\w`]/.test(match.input.charAt(match.index - 1)) &&\n      !/[/\\w`]/.test(match.input.charAt(match.index + match[0].length)) &&\n      match[1].length >= 2 &&\n      match[1].length <= 64\n    ) {\n      accountIds.add(match[1].toLowerCase());\n    }\n  }\n  return [...accountIds];\n};\n\nconst extractHashtags = (text) => {\n  const hashtagRegex = /#(\\w+)/gi;\n  hashtagRegex.lastIndex = 0;\n  const hashtags = new Set();\n  for (const match of text.matchAll(hashtagRegex)) {\n    if (\n      !/[\\w`]/.test(match.input.charAt(match.index - 1)) &&\n      !/[/\\w`]/.test(match.input.charAt(match.index + match[0].length))\n    ) {\n      hashtags.add(match[1].toLowerCase());\n    }\n  }\n  return [...hashtags];\n};\n\nconst extractMentionNotifications = (text, item) =>\n  extractMentions(text || \"\")\n    .filter((accountId) => accountId !== context.accountId)\n    .map((accountId) => ({\n      key: accountId,\n      value: {\n        type: \"mention\",\n        item,\n      },\n    }));\n\nconst handlePost = () => {\n  const data = {\n    post: {\n      main: JSON.stringify({\n        type: \"md\",\n        text: content,\n      }),\n    },\n    index: {\n      post: JSON.stringify({\n        key: \"main\",\n        value: {\n          type: \"md\",\n        },\n      }),\n    },\n  };\n\n  const item = {\n    type: \"social\",\n    path: `${context.accountId}/post/main`,\n  };\n\n  const notifications = extractMentionNotifications(content, item);\n\n  if (notifications.length) {\n    data.index.notify = JSON.stringify(\n      notifications.length > 1 ? notifications : notifications[0]\n    );\n  }\n\n  const hashtags = extractHashtags(content);\n\n  if (hashtags.length) {\n    data.index.hashtag = JSON.stringify(\n      hashtags.map((hashtag) => ({\n        key: hashtag,\n        value: item,\n      }))\n    );\n  }\n\n  Social.set(data, {\n    force: \"true\",\n    onCommit: (v) => {\n      if (props.closeModal) props.closeModal();\n    },\n    onCancel: (v) => {\n      if (props.closeModal) props.closeModal();\n    },\n  });\n};\n\nreturn (\n  <Wrapper>\n    <h3>post</h3>\n    <Form>\n      <textarea\n        className=\"form-control mb-3\"\n        rows={5}\n        value={content}\n        onChange={(e) => setContent(e.target.value)}\n      />\n    </Form>\n    <FormGroup>\n      <button className=\"btn btn-success mb-1\" onClick={handlePost}>\n        submit\n      </button>\n    </FormGroup>\n  </Wrapper>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/devs.near/widget/modal.post", "fact_widget_deployments_id": "c33e1b0a0d56368a02ac8ff70b6123b9", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}