{"tx_hash": "5FUoxDbmPJCRo6g4UcyVrTa7dmW9dA5SBd6dYev8qJ3V", "action_id_social": "96cXEmfYEnYBsNk5isHC63XunCnigvV6LhJANSx8grRk-0-widget", "block_id": 116868634, "block_timestamp": "2024-04-15T02:36:24.635Z", "signer_id": "devs.near", "widget_name": "widget.Feed.demo", "source_code": "const propsTable = `\n| Prop Name       | Type/Values     | Default Value  | Description                                        |\n|-----------------|-----------------|----------------|----------------------------------------------------|\n| ${\"`items`\"}         | Array           | ${\"`N/A`\"}            | Option to provide array of items rather than index to be queried -- items will be infinitely scrollable.                          |\n| ${\"`index`\"}         | Object/Array           | ${\"`N/A`\"}            | The index to query for the feed. Follows props for Social.index.                          |\n| ${\"`Item`\"}      | Function/ReactNode          | <div>{JSON.stringify(props)}</div>            | The Item to render for each feed item, will be passed the full object as props                     |\n| ${\"`Layout`\"}  | Function/reactNode        | ${\"`N/A`\"}            | Optional Layout element for rendering the feed.           |\n| ${\"`perPage`\"}| Number        | ${\"`10`\"}            | Number of items per page.          |\n`;\nconst widgetCode = `\n\\`\\`\\`jsx\nconst { Feed } = VM.require(\"devs.near/widget/Feed\") ?? {\n  Feed: () => <></>;\n};\nconst Grid = styled.div\\`\n  display: grid;\n\\`;\nreturn (\n  <Feed\n    index={[\n      {\n        action: \"post\",\n        key: \"main\",\n        options: {\n          limit: 10,\n          order: \"desc\",\n          accountId: props.accounts,\n        },\n        cacheOptions: {\n          ignoreCache: true,\n        },\n      },\n      {\n        action: \"repost\",\n        key: \"main\",\n        options: {\n          limit: 10,\n          order: \"desc\",\n          accountId: props.accounts,\n        },\n        cacheOptions: {\n          ignoreCache: true,\n        },\n      },\n    ]}\n    Item={(p) => (\n      <Widget\n        loading={<div className=\"w-100\" style={{ height: \"200px\" }} />}\n        src=\"mob.near/widget/MainPage.N.Post\"\n        props={{ accountId: p.accountId, blockHeight: p.blockHeight }}\n      />\n    )}\n    Layout={Grid}\n  />\n);\n\\`\\`\\`\n`;\nconst { Feed } = VM.require(\"devs.near/widget/Feed\") ?? {\n  Feed: () => <></>,\n};\nreturn (\n  <div className=\"d-flex flex-column gap-1 pb-4\">\n    <h1>Feed</h1>\n    <p>\n      Compact module for embedding either a list of items or merged\n      Social.index() feeds, features infinite scroll and ability to provide a\n      custom Item to render.\n    </p>\n    <Widget\n      src={`nearui.near/widget/Typography.Text`}\n      props={{\n        children: \"Usage\",\n        tag: \"h2\",\n        size: \"4\",\n        weight: \"bold\",\n        color: \"default\",\n        className: \"mt-4 mb-2\",\n      }}\n    />\n    <Markdown text={widgetCode} />\n    <Widget\n      src={`nearui.near/widget/Typography.Text`}\n      props={{\n        children: \"Properties\",\n        tag: \"h2\",\n        size: \"4\",\n        weight: \"bold\",\n        color: \"default\",\n        className: \"mt-4 mb-2\",\n      }}\n    />\n    <Markdown text={propsTable} />\n    <Widget\n      src={\"nearui.near/widget/Typography.Text\"}\n      props={{\n        children: \"Preview\",\n        tag: \"h2\",\n        size: \"4\",\n        weight: \"bold\",\n        color: \"default\",\n        className: \"mt-4 mb-2\",\n      }}\n    />\n    <div\n      className=\"d-flex flex-column gap-1\"\n      style={{\n        background: \"#fefefe\",\n        border: \"1px solid #ccc\",\n        padding: \"24px\",\n        borderRadius: \"12px\",\n      }}\n    >\n      <Feed\n        index={[\n          {\n            action: \"post\",\n            key: \"main\",\n            options: {\n              limit: 10,\n              order: \"desc\",\n              accountId: props.accounts,\n            },\n            cacheOptions: {\n              ignoreCache: true,\n            },\n          },\n          {\n            action: \"repost\",\n            key: \"main\",\n            options: {\n              limit: 10,\n              order: \"desc\",\n              accountId: props.accounts,\n            },\n            cacheOptions: {\n              ignoreCache: true,\n            },\n          },\n        ]}\n        Item={(p) => (\n          <Widget\n            loading={<div className=\"w-100\" style={{ height: \"200px\" }} />}\n            src=\"mob.near/widget/MainPage.N.Post\"\n            props={{ accountId: p.accountId, blockHeight: p.blockHeight }}\n          />\n        )}\n      />\n    </div>\n  </div>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/devs.near/widget/widget.Feed.demo", "fact_widget_deployments_id": "f0966c86e461ca6482974c884036ca0a", "inserted_timestamp": "2024-04-15T04:38:44.803Z", "modified_timestamp": "2024-04-15T05:22:37.742Z", "__row_index": 0}