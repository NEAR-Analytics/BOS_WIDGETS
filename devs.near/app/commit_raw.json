{"tx_hash": "FNhaDe1h5o1eZdPAwUjjPRZN3LyCuCfKK1L2WyFqCqte", "action_id_social": "9XWjDw19Yyj3nQg3XvzvbFrdoWcCnuAVoUCXjWgeLiPA-0-widget", "block_id": 110578385, "block_timestamp": "2024-01-16T21:45:11.966Z", "signer_id": "devs.near", "widget_name": "app", "source_code": "const Container = styled.div`\n  display: flex;\n  height: 100vh;\n  width: 100%;\n`;\n\nconst Panel = styled.div`\n  flex: 1;\n  border: 1px solid black;\n  overflow: hidden;\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: stretch;\n  height: 100%;\n`;\n\nconst Header = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 10px;\n  border-bottom: 1px solid black;\n`;\n\nconst Select = styled.select``;\n\nconst Option = styled.option``;\n\nconst Button = styled.button``;\n\nconst Label = styled.label`\n  margin-right: 10px;\n`;\n\nconst types = [\n  {\n    value: \"devs.near/widget/markdown.edit\",\n    label: \"Markdown\",\n  },\n  { value: \"devs.near/widget/code.edit\", label: \"Code\" },\n  { value: \"devs.near/widget/canvas.edit\", label: \"Canvas\" },\n];\n\nconst adapters = [\n  {\n    value: null,\n    label: \"Social DB\",\n  },\n  {\n    value: \"devs.near/widget/adapter.sputnik-dao\",\n    label: \"Sputnik DAO\",\n  },\n];\n\n// const { Modal } = VM.require(\"buildhub.near/widget/components.Modal\") || {\n//   Modal: () => <>hello</>,\n// };\n\nfunction PanelHeader({\n  types,\n  handleTypeChange,\n  handleAdapterChange,\n  adapter,\n  value,\n}) {\n  return (\n    <Header>\n      <div>\n        <Label>type:</Label>\n        <Select onChange={(e) => handleTypeChange(e.target.value)}>\n          {types &&\n            types.map((it) => <Option value={it.value}>{it.label}</Option>)}\n        </Select>\n      </div>\n      <Widget\n        src=\"devs.near/widget/hyperfile\"\n        props={{ path: props.path, data: value }}\n      />\n      {/* <div>\n        <Label>adapter:</Label>\n        <Select onChange={(e) => handleAdapterChange(e.target.value)}>\n          {adapters &&\n            adapters.map((it) => <Option value={it.value}>{it.label}</Option>)}\n        </Select>\n\n        <Button disabled={!value} onClick={(v) => adapter.create(v)}>\n          Publish\n        </Button>\n      </div> */}\n    </Header>\n  );\n}\n\nconst [editorValue, setEditorValue] = useState(\"\");\nconst [activeTab, setActiveTab] = useState(\"editor\");\n\nconst [editorSrc, setEditorSrc] = useState(\n  \"devs.near/widget/markdown.edit\"\n);\nconst [viewerSrc, setViewerSrc] = useState(\n  \"devs.near/widget/markdown.view\"\n);\n\nconst socialDbAdapter = {\n  get: (path, blockHeight) => {\n    if (!path) console.log(\"path not provided\") && null;\n    if (!blockHeight) blockHeight = \"final\";\n    return Social.get(path, blockHeight);\n  },\n  create: (v) => {\n    const id = \"routes\";\n    const parts = path.split(\"/\");\n    Social.set({\n      [parts[1]]: {\n        [parts[2]]: {\n          \"\": code,\n        },\n      },\n    });\n    return Social.set(\n      {\n        thing: {\n          [id]: {\n            \"\": v,\n            metadata: {\n              type: \"app\",\n            },\n          },\n        },\n      },\n      {\n        force: \"true\",\n        onCommit: (v) => {\n          console.log(v);\n        },\n        onCancel: (v) => {\n          console.log(v);\n        },\n      }\n    );\n  },\n};\n\nconst [selectedItem, setSelectedItem] = useState(\"efiz.near/thing/routes\");\nconst [adapter, setAdapter] = useState(socialDbAdapter);\n\nfunction handleTypeChange(value) {\n  setEditorSrc(value);\n}\n\nfunction handleViewerSrcChange(value) {\n  setViewerSrc(value);\n}\n\nconst handleTabClick = (tab) => {\n  setActiveTab(tab);\n};\n\nfunction handleAdapterChange(value) {\n  const adapter = value ? VM.require(value) : socialDbAdapter;\n  setAdapter(adapter);\n}\n\nfunction Editor({ value, setEditorValue }) {\n  return (\n    <Widget\n      src={\"devs.near/widget/provider\"}\n      props={{\n        path: value,\n        editorValue,\n        blockHeight: \"final\",\n        setEditorValue,\n        Children: (p) => <Widget src={editorSrc} props={p} />,\n      }}\n    />\n  );\n}\n\nfunction Viewer({ value }) {\n  return <Widget src={viewerSrc} props={{ value }} />;\n}\n\nfunction Sidebar() {\n  return (\n    <Widget\n      src=\"devs.near/widget/sidebar\"\n      props={{ handleItemClick: (v) => setSelectedItem(v) }}\n    />\n  );\n}\n\nreturn (\n  <Container>\n    {/* <Panel style={{ maxWidth: \"200px\" }}>\n      <Wrapper key={editorSrc}>\n        <Sidebar />\n      </Wrapper>\n    </Panel> */}\n    <Panel>\n      <PanelHeader\n        value={editorValue}\n        types={types}\n        handleTypeChange={handleTypeChange}\n        handleAdapterChange={handleAdapterChange}\n        adapter={adapter}\n        isModalOpen={isModalOpen}\n        setModalOpen={setModalOpen}\n      />\n      <div>\n        <ul className=\"nav nav-tabs\">\n          <li className=\"nav-item pointer\">\n            <a\n              className={`nav-link ${activeTab === \"editor\" ? \"active\" : \"\"}`}\n              onClick={() => handleTabClick(\"editor\")}\n            >\n              Edit\n            </a>\n          </li>\n          <li className=\"nav-item pointer\">\n            <a\n              className={`nav-link ${activeTab === \"preview\" ? \"active\" : \"\"}`}\n              onClick={() => handleTabClick(\"preview\")}\n            >\n              Preview\n            </a>\n          </li>\n        </ul>\n\n        <div className=\"tab-content\">\n          <div\n            className={`tab-pane fade ${\n              activeTab === \"editor\" ? \"show active\" : \"\"\n            }`}\n            id=\"editorTab\"\n            key={editorSrc}\n          >\n            <Wrapper key={editorSrc}>\n              <Editor value={selectedItem} setEditorValue={setEditorValue} />\n            </Wrapper>\n          </div>\n          <div\n            className={`tab-pane fade ${\n              activeTab === \"preview\" ? \"show active\" : \"\"\n            }`}\n            id=\"previewTab\"\n            key={viewerSrc}\n          >\n            <Wrapper key={viewerSrc}>\n              <Viewer value={editorValue} />\n            </Wrapper>\n          </div>\n        </div>\n      </div>\n    </Panel>\n  </Container>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/devs.near/widget/app", "fact_widget_deployments_id": "31377420fd733d38565212691d027eeb", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 124}