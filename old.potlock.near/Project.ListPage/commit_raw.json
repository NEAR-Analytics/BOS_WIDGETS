{"tx_hash": "9zqTVjxAkPtBfjqX2fT5FzifJjSP21C86jFz6qdKKgVy", "action_id_social": "HNSjPxZHjQ2Lff1uQ66xsSN13rddtn5VTT4ywqvZwWUv-0-widget", "block_id": 119511074, "block_timestamp": "2024-05-22T19:32:15.684Z", "signer_id": "old.potlock.near", "widget_name": "Project.ListPage", "source_code": "const { getTagsFromSocialProfileData, getTeamMembersFromSocialProfileData } =\n  VM.require(\"old.potlock.near/widget/utils\") || {\n    getTagsFromSocialProfileData: () => [],\n    getTeamMembersFromSocialProfileData: () => [],\n  };\nconst { NewHero } = VM.require(\n  \"old.potlock.near/widget/Components.NewHero\"\n) || {\n  NewHero: () => {},\n};\n// Card Skeleton - Loading fallback\nconst loadingSkeleton = styled.keyframes`\n  0% {\n    opacity: 1;\n  }\n  50% {\n    opacity: 0.4;\n  }\n  100% {\n    opacity: 1;\n  }\n`;\nconst CardSkeletonContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 447px;\n  width: 100%;\n  max-width: 400px;\n  border-radius: 12px;\n  background: white;\n  box-shadow: 0px -2px 0px #dbdbdb inset;\n  border: 1px solid #dbdbdb;\n  margin-left: auto;\n  margin-right: auto;\n  animation-name: ${loadingSkeleton};\n  animation-duration: 1s;\n  animation-iteration-count: infinite;\n`;\nconst HeaderSkeleton = styled.div`\n  display: block;\n  width: 100%;\n  height: 168px;\n  background: #eee;\n`;\nconst ProfileImageSkeleton = styled.div`\n  background: #e0e0e0;\n  margin-left: 32px;\n  transform: translateY(148px);\n  width: 40px;\n  height: 40px;\n  position: absolute;\n  border-radius: 999px;\n`;\nconst TitleSkeleton = styled.div`\n  width: 120px;\n  height: 24px;\n  background: #eee;\n  margin-left: 24px;\n  margin-top: 24px;\n`;\nconst DescriptionSkeleton = styled.div`\n  width: 83%;\n  height: 48px;\n  background: #eee;\n  margin-left: 24px;\n  margin-top: 24px;\n`;\nconst TagSkeleton = styled.div`\n  background: #eee;\n  border-radius: 4px;\n  height: 34px;\n  width: 110px;\n  margin: 24px;\n`;\nconst FooterItemSkeleton = styled.div`\n  width: 150px;\n  height: 40px;\n  background: #eee;\n  @media screen and (max-width: 390px) {\n    width: 100px;\n  }\n`;\nconst DonationsInfoContainerSkeleton = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  padding: 16px 24px;\n  width: 100%;\n  border-top: 1px #f0f0f0 solid;\n`;\nconst DonationsInfoItemSkeleton = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 8px;\n  align-items: center;\n`;\nconst CardSkeleton = () => (\n  <CardSkeletonContainer>\n    <HeaderSkeleton />\n    <ProfileImageSkeleton />\n    <TitleSkeleton />\n    <DescriptionSkeleton />\n    <TagSkeleton />\n    <DonationsInfoContainerSkeleton>\n      <DonationsInfoItemSkeleton>\n        <FooterItemSkeleton />\n      </DonationsInfoItemSkeleton>\n      <DonationsInfoItemSkeleton>\n        <FooterItemSkeleton />\n      </DonationsInfoItemSkeleton>\n    </DonationsInfoContainerSkeleton>\n  </CardSkeletonContainer>\n);\n// ListPage Content\nconst { tab } = props;\nconst { yoctosToUsd } = VM.require(\"old.potlock.near/widget/utils\") || {\n  yoctosToUsd: () => \"\",\n};\nconst IPFS_BASE_URL = \"https://nftstorage.link/ipfs/\";\nconst HERO_BACKGROUND_IMAGE_URL =\n  IPFS_BASE_URL + \"bafkreiewg5afxbkvo6jbn6jgv7zm4mtoys22jut65fldqtt7wagar4wbga\";\nconst headerTitleFontSizePx = 88;\nconst HeaderContainer = styled.div`\n  width: 100%;\n  // background: #fffaf4;\n  // background: white;\n  padding: 80px 64px;\n  @media (max-width: 768px) {\n    padding: 36px 24px;\n  }\n`;\nconst containerStyle = props.containerStyle ?? {};\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n`;\nconst HeroOuter = styled.div`\n  padding: 136px 64px;\n`;\nconst HeroInner = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n`;\nconst SectionHeader = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  align-items: center;\n  margin-bottom: 24px;\n  padding: 24px 64px 24px 64px;\n  @media screen and (max-width: 768px) {\n    padding: 16px 24px;\n  }\n`;\nconst SectionTitle = styled.div`\n  font-size: 24px;\n  font-weight: 600;\n  color: #2e2e2e;\n  font-family: \"Mona Sans\", sans-serif;\n`;\nconst ProjectsCount = styled.div`\n  color: #7b7b7b;\n  font-size: 24px;\n  font-weight: 400;\n  margin-left: 32px;\n  @media screen and (max-width: 768px) {\n    margin-left: 16px;\n  }\n`;\nconst ProjectsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  overflow-y: hidden;\n  padding-top: 5px;\n`;\nconst HeroContainer = styled.div`\n  width: 100%;\n  min-height: 700px;\n  position: relative;\n  @media screen and (max-width: 768px) {\n    min-height: 600px;\n  }\n`;\nconst Hero = styled.img`\n  width: 100%;\n  height: 100%;\n  display: block;\n  @media screen and (max-width: 768px) {\n    display: none;\n  }\n`;\nconst InfoCardsContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  z-index: 1000;\n  margin: 40px 0;\n  gap: 40px;\n  @media screen and (max-width: 768px) {\n    flex-direction: column;\n    gap: 24px;\n    // justify-content: center;\n  }\n`;\nconst Button = styled.button`\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  padding: 16px 24px;\n  background: #dd3345;\n  overflow: hidden;\n  box-shadow: 0px -2.700000047683716px 0px #4a4a4a inset;\n  border-radius: 6px;\n  border: 1px solid #4a4a4a;\n  gap: 8px;\n  display: inline-flex;\n  text-align: center;\n  color: white;\n  font-size: 14px;\n  line-height: 16px;\n  font-weight: 600;\n  &:hover {\n    text-decoration: none;\n    cursor: pointer;\n  }\n`;\nconst ButtonRegisterProject = styled.a`\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  padding: 16px 24px;\n  background: #fef6ee;\n  overflow: hidden;\n  box-shadow: 0px -2.700000047683716px 0px #4a4a4a inset;\n  border-radius: 6px;\n  border: 1px solid #4a4a4a;\n  gap: 8px;\n  display: inline-flex;\n  text-align: center;\n  color: #2e2e2e;\n  font-size: 14px;\n  line-height: 16px;\n  font-weight: 600;\n  &:hover {\n    text-decoration: none;\n    cursor: pointer;\n  }\n`;\nconst Stats = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  gap: 48px;\n  margin-top: 40px;\n  @media screen and (max-width: 768px) {\n    gap: 16px;\n  }\n`;\nconst StatsTitle = styled.div`\n  color: #292929;\n  font-size: 44px;\n  display: flex;\n  flex-direction: row;\n  align-items: baseline;\n  gap: 8px;\n  font-weight: 600;\n  @media screen and (max-width: 768px) {\n    font-size: 30px;\n    font-weight: 500;\n    gap: 5px;\n  }\n`;\nconst StatsSubTitle = styled.div`\n  color: #525252;\n  font-size: 14px;\n  @media screen and (max-width: 768px) {\n    font-size: 12px;\n  }\n`;\nconst Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 48px 40px 0;\n  @media screen and (max-width: 768px) {\n    padding: 40px 20px 0;\n  }\n`;\nconst Header = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  width: 100%;\n`;\nconst Title = styled.div`\n  color: rgb(41, 41, 41);\n  font-style: normal;\n  font-size: 18px;\n  font-weight: 600;\n`;\nconst ContainerHeader = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  gap: 1.5rem;\n`;\nconst ProjectList = styled.div`\n  display: grid;\n  gap: 31px;\n  padding-bottom: 3rem;\n  // For mobile devices (1 column)\n  @media screen and (max-width: 739px) {\n    grid-template-columns: repeat(1, 1fr);\n  }\n  // For tablet devices (2 columns)\n  @media screen and (min-width: 740px) and (max-width: 1023px) {\n    grid-template-columns: repeat(2, 1fr);\n  }\n  // For desktop devices (3 columns)\n  @media screen and (min-width: 1024px) {\n    grid-template-columns: repeat(3, 1fr);\n  }\n`;\nconst FilterWrapper = styled.div`\n  display: flex;\n  gap: 1rem;\n  align-items: center;\n  .filter-menu {\n    left: 0;\n    right: auto;\n  }\n  .left-side-menu {\n    left: auto;\n    right: 0;\n  }\n  @media screen and (max-width: 768px) {\n    flex-wrap: wrap;\n    > div:nth-of-type(2) {\n      width: 100%;\n      order: -1;\n      flex: auto;\n    }\n    .filter-menu {\n      width: 250px !important;\n    }\n    .left-side-menu {\n      right: auto;\n      left: 0;\n    }\n  }\n`;\nState.init({\n  isModalOpen: false,\n  successfulDonation: null,\n});\nlet ListsSDK =\n  VM.require(\"old.potlock.near/widget/SDK.lists\") ||\n  (() => ({\n    getRegistrations: () => {},\n    isRegistryAdmin: () => {},\n  }));\nListsSDK = ListsSDK({ env: props.env });\nconst accountId = context.accountId;\nconst isRegistryAdmin = ListsSDK.isRegistryAdmin(context.accountId);\nconst allRegistrations = ListsSDK.getRegistrations() || [];\nconst isRegisteredProject = allRegistrations.find(\n  (registration) => registration.registrant_id === accountId\n);\nlet DonateSDK =\n  VM.require(\"old.potlock.near/widget/SDK.donate\") ||\n  (() => ({\n    getConfig: () => {},\n  }));\nDonateSDK = DonateSDK({ env: props.env });\nconst [projects, approvedProjects] = useMemo(() => {\n  allRegistrations.sort((a, b) =>\n    b.status === \"Approved\"\n      ? -1\n      : a.status === \"Approved\"\n      ? 1\n      : a.status.localeCompare(b.status)\n  );\n  allRegistrations.sort((a, b) => b.submitted_ms - a.submitted_ms);\n  const approvedProjects = allRegistrations.filter(\n    (project) => project.status === \"Approved\"\n  );\n  return [allRegistrations, approvedProjects];\n}, allRegistrations);\nconst featuredProjectIds = [\n  \"v1.foodbank.near\",\n  \"old.potlock.near\",\n  \"yearofchef.near\",\n];\nconst featuredProjects = useMemo(\n  () =>\n    projects.filter((project) =>\n      featuredProjectIds.includes(project.registrant_id)\n    ),\n  projects\n);\nconst [totalDonation, setTotalDonation] = useState(0);\nconst [totalDonated, setTotalDonated] = useState(0);\nconst [filteredProjects, setFilteredProjects] = useState(approvedProjects);\nconst [searchTerm, setSearchTerm] = useState(\"\");\nconst [sort, setSort] = useState(\"Sort\");\nconst tagsList = {\n  Category: [\n    {\n      label: \"Desci\",\n      val: \"Desci\",\n    },\n    {\n      label: \"Open Source\",\n      val: \"Open Source\",\n    },\n    {\n      label: \"Non Profit\",\n      val: \"Non Profit\",\n    },\n    {\n      label: \"Social Impact\",\n      val: \"Social Impact\",\n    },\n    {\n      label: \"Climate\",\n      val: \"Climate\",\n    },\n    {\n      label: \"Public Good\",\n      val: \"Public Good\",\n    },\n    {\n      label: \"Community\",\n      val: \"Community\",\n    },\n    {\n      label: \"Education\",\n      val: \"Education\",\n    },\n  ],\n  Status: [\n    {\n      label: \"All\",\n      val: \"all\",\n    },\n    {\n      label: \"Approved\",\n      val: \"Approved\",\n    },\n    {\n      label: \"Pending\",\n      val: \"Pending\",\n    },\n    {\n      label: \"Rejected\",\n      val: \"Rejected\",\n    },\n    {\n      label: \"Graylisted\",\n      val: \"Graylisted\",\n    },\n    {\n      label: \"Blacklisted\",\n      val: \"Blacklisted\",\n    },\n  ],\n};\nuseEffect(() => {\n  if (filteredProjects.length < 1) {\n    setFilteredProjects(approvedProjects);\n  }\n}, [projects]);\nconst donateConfig = DonateSDK.getConfig();\nif (donateConfig && !totalDonated && !totalDonation) {\n  const lastDonationAmount = yoctosToUsd(donateConfig.net_donations_amount);\n  setTotalDonated(lastDonationAmount);\n  setTotalDonation(donateConfig.total_donations_count);\n}\nconst donateRandomly = () => {\n  State.update({\n    isModalOpen: true,\n    successfulDonation: null,\n  });\n};\nconst containerStyleHeader = {\n  position: \"absolute\",\n  height: \"100%\",\n  top: 0,\n  left: 0,\n  marginBottom: \"24px\",\n  background:\n    \"radial-gradient(80% 80% at 40.82% 50%, white 25%, rgba(255, 255, 255, 0) 100%)\",\n};\nconst SORT_FILTERS = {\n  NEW_TO_OLD: \"Newest to Oldest\",\n  OLD_TO_NEW: \"Oldest to Newest\",\n};\nconst handleSortChange = (sortType) => {\n  setSort(sortType);\n  const projects = [...filteredProjects];\n  switch (sortType) {\n    case \"Newest to Oldest\":\n      projects.sort((a, b) => b.submitted_ms - a.submitted_ms);\n      setFilteredProjects(projects);\n      break;\n    case \"Oldest to Newest\":\n      projects.sort((a, b) => a.submitted_ms - b.submitted_ms);\n      setFilteredProjects(projects);\n      break;\n    default:\n      break;\n  }\n};\nconst searchByWords = (projects, searchTerm) => {\n  searchTerm = searchTerm.toLowerCase().trim();\n  let results = [];\n  // const dataArr = projects;\n  // let alldata = [];\n  projects.forEach((project) => {\n    const { registrant_id, status } = project;\n    const data = Social.getr(`${registrant_id}/profile`);\n    // alldata.push(data);\n    if (\n      registrant_id.includes(searchTerm) ||\n      status.toLowerCase().includes(searchTerm)\n    ) {\n      results.push(project);\n    } else if (data) {\n      if (\n        data.description.toLowerCase().includes(searchTerm) ||\n        data.name.toLowerCase().includes(searchTerm) ||\n        getTagsFromSocialProfileData(data)\n          .join(\"\")\n          .toLowerCase()\n          .includes(searchTerm) ||\n        getTeamMembersFromSocialProfileData(data)\n          .join(\"\")\n          .toLowerCase()\n          .includes(searchTerm)\n      ) {\n        results.push(project);\n      }\n    }\n  });\n  setFilteredProjects(results);\n};\nconst checkAllTrue = (arr) => arr.every((item) => item === true);\nconst filterProjects = (filters) =>\n  projects.filter((item) => {\n    const filterVals = Object.keys(filters).map((type) => {\n      if (filters[type].length === 0) return true;\n      if (type === \"Category\") {\n        const data = Social.getr(`${item.registrant_id}/profile`);\n        const tagsForProfile = getTagsFromSocialProfileData(data);\n        return filters[type].some((tag) => tagsForProfile.includes(tag));\n      }\n      if (type === \"Status\") {\n        if (filters[type].includes(\"all\")) return true;\n        return filters[type].includes(item.status);\n      }\n      return true;\n    });\n    return checkAllTrue(filterVals);\n  });\nconst handleTag = (selectedFilters) => {\n  const projectFilterBySearch = filterProjects(selectedFilters);\n  console.log(\"projectFilterBySearch\", projectFilterBySearch);\n  setFilteredProjects(projectFilterBySearch);\n};\nconst getRandomProject = () => {\n  if (projects) {\n    const randomIndex = Math.floor(Math.random() * projects.length);\n    return projects[randomIndex]?.registrant_id;\n  }\n};\nreturn (\n  <>\n    <NewHero\n      isRegisteredProject={isRegisteredProject}\n      accountId={accountId}\n      donateRandomly={donateRandomly}\n    />\n    <Content>\n      <ContainerHeader>\n        <Header>\n          <Title>Featured Projects</Title>\n        </Header>\n        <ProjectList>\n          {(featuredProjects || []).map((project) => {\n            return (\n              <Widget\n                src={\"old.potlock.near/widget/Project.Card\"}\n                loading={\n                  <div\n                    style={{\n                      width: \"355px\",\n                      height: \"455px\",\n                      borderRadius: \"12px\",\n                      background: \"white\",\n                      boxShadow: \"0px -2px 0px #dbdbdb inset\",\n                      border: \"1px solid #dbdbdb\",\n                    }}\n                  />\n                }\n                props={{\n                  ...props,\n                  projectId: project.registrant_id,\n                  allowDonate: true,\n                }}\n              />\n            );\n          })}\n        </ProjectList>\n      </ContainerHeader>\n      <Header>\n        <Title>\n          All Projects\n          <span\n            style={{ color: \"#DD3345\", marginLeft: \"8px\", fontWeight: 600 }}\n          >\n            {filteredProjects.length}\n          </span>\n        </Title>\n        <FilterWrapper>\n          <Widget\n            src={\"old.potlock.near/widget/Inputs.FilterDropdown\"}\n            props={{\n              ...props,\n              onClick: handleTag,\n              multipleOptions: true,\n              options: tagsList,\n              defaultSelected: {\n                Status: [\"Approved\"],\n              },\n              menuClass: \"filter-menu\",\n            }}\n          />\n          <Widget\n            src={\"old.potlock.near/widget/Project.SearchBar\"}\n            props={{\n              title: sort,\n              tab: tab,\n              numItems: filteredProjects.length,\n              itemName: \"project\",\n              sortList: Object.values(SORT_FILTERS),\n              FilterMenuClass: `left-side-menu`,\n              setSearchTerm: (value) => {\n                searchByWords(projects, value);\n              },\n              handleSortChange: (filter) => {\n                handleSortChange(filter);\n              },\n            }}\n          />\n        </FilterWrapper>\n      </Header>\n      <ProjectsContainer>\n        {filteredProjects.length ? (\n          <Widget\n            src={\"old.potlock.near/widget/Project.ListSection\"}\n            props={{\n              ...props,\n              items: filteredProjects,\n              renderItem: (project) => {\n                return (\n                  <Widget\n                    src={\"old.potlock.near/widget/Project.Card\"}\n                    loading={<CardSkeleton />}\n                    props={{\n                      ...props,\n                      projectId: project.registrant_id,\n                      allowDonate: true,\n                      // allowDonate:\n                      //   sybilRequirementMet &&\n                      //   publicRoundOpen &&\n                      //   project.project_id !== accountId,\n                      // requireVerification: !sybilRequirementMet,\n                    }}\n                  />\n                );\n              },\n            }}\n          />\n        ) : (\n          <div style={{ alignSelf: \"flex-start\", margin: \"24px 0px\" }}>\n            No results\n          </div>\n        )}\n      </ProjectsContainer>\n    </Content>\n    {state.isModalOpen && (\n      <Widget\n        src={\"old.potlock.near/widget/ModalDonation.Main\"}\n        props={{\n          ...props,\n          isModalOpen: state.isModalOpen,\n          projectId: getRandomProject(),\n          onClose: () =>\n            State.update({\n              isModalOpen: false,\n            }),\n          openDonationModalSuccess: (donation) => {\n            State.update({\n              isModalOpen: false,\n              successfulDonation: donation,\n            });\n          },\n        }}\n      />\n    )}\n    {state.successfulDonation && (\n      <Widget\n        src={\"old.potlock.near/widget/Project.ModalSuccess\"}\n        props={{\n          ...props,\n          successfulDonation: state.successfulDonation,\n          isModalOpen: state.successfulDonation != null,\n          onClose: () =>\n            State.update({\n              successfulDonation: null,\n            }),\n        }}\n      />\n    )}\n  </>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/old.potlock.near/widget/Project.ListPage", "fact_widget_deployments_id": "ad5f76fdbd053735ca5c3abca8d56e2a", "inserted_timestamp": "2024-05-22T20:51:25.115Z", "modified_timestamp": "2024-05-22T21:51:10.417Z", "__row_index": 0}