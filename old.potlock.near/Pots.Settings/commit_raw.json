{"tx_hash": "2NmgsFUZPrK6GGCqxM5Ae8UP29kz1PEKsNqBpPWu4xDb", "action_id_social": "CJkS9gb2ZFnGvfgpxyJ4cExXnEktGVLx4RaEsoFMJFNz-0-widget", "block_id": 119511215, "block_timestamp": "2024-05-22T19:34:59.689Z", "signer_id": "old.potlock.near", "widget_name": "Pots.Settings", "source_code": "// get settings\nconst { potDetail, potId, env, hrefWithParams } = props;\nconst [editSettings, setEditSettings] = useState(false);\nconst {\n  SUPPORTED_FTS: { NEAR },\n} = VM.require(\"old.potlock.near/widget/constants\") || {\n  SUPPORTED_FTS: {\n    NEAR: {},\n  },\n};\nconst PotSDK = VM.require(\"old.potlock.near/widget/SDK.pot\") || {\n  isUserPotAdminOrGreater: () => {},\n};\nconst { _address } = VM.require(\n  \"old.potlock.near/widget/Components.DonorsUtils\"\n) || {\n  _address: (address) => address,\n};\nlet PotFactorySDK =\n  VM.require(\"old.potlock.near/widget/SDK.potfactory\") ||\n  (() => ({\n    getContractId: () => {},\n  }));\nPotFactorySDK = PotFactorySDK({ env });\nconst potFactoryContractId = PotFactorySDK.getContractId();\nconst userIsAdminOrGreater = PotSDK.isUserPotAdminOrGreater(\n  potId,\n  context.accountId\n);\nconst formatTimestampForDateTimeLocal = (timestamp) => {\n  const date = new Date(timestamp);\n  const year = date.getFullYear();\n  const month = (date.getMonth() + 1).toString().padStart(2, \"0\"); // months are 0-indexed\n  const day = date.getDate().toString().padStart(2, \"0\");\n  const hours = date.getHours().toString().padStart(2, \"0\");\n  const minutes = date.getMinutes().toString().padStart(2, \"0\");\n  return `${year}-${month}-${day}T${hours}:${minutes}`;\n};\nconst {\n  owner,\n  chef,\n  admins,\n  pot_name,\n  pot_description,\n  max_projects,\n  application_start_ms,\n  application_end_ms,\n  public_round_start_ms,\n  public_round_end_ms,\n  sybil_wrapper_provider,\n  referral_fee_matching_pool_basis_points,\n  referral_fee_public_round_basis_points,\n  chef_fee_basis_points,\n  min_matching_pool_donation_amount,\n  registry_provider,\n} = potDetail;\nconst fields = [\n  {\n    label: \"Name\",\n    val: pot_name,\n  },\n  {\n    label: \"Custom handle\",\n    val: potId.split(`.${potFactoryContractId}`)[0],\n  },\n  {\n    label: \"Description\",\n    val: pot_description,\n  },\n  {\n    label: \"Referrer fee % (matching pool)\",\n    val: referral_fee_matching_pool_basis_points / 100 + \"%\",\n  },\n  {\n    label: \"Referrer fee % (public round)\",\n    val: referral_fee_public_round_basis_points / 100 + \"%\",\n  },\n  {\n    label: \"Application date\",\n    val: `${formatTimestampForDateTimeLocal(\n      application_start_ms\n    )} - ${formatTimestampForDateTimeLocal(application_end_ms)}`,\n  },\n  {\n    label: \"Matching round date\",\n    val: `${formatTimestampForDateTimeLocal(\n      public_round_start_ms\n    )} - ${formatTimestampForDateTimeLocal(public_round_end_ms)}`,\n  },\n  {\n    label: \"Min matching pool donation\",\n    val: NEAR.fromIndivisible(min_matching_pool_donation_amount),\n  },\n  {\n    label: \"Chef fee\",\n    val: chef_fee_basis_points / 100 + \"%\",\n  },\n  {\n    label: \"Assigned Chef\",\n    val: chef,\n  },\n  {\n    label: \"Max. approved projects\",\n    val: max_projects,\n  },\n  {\n    label: \"Registry Provider\",\n    val: registry_provider,\n  },\n  {\n    label: \"Donor Sybil Resistance\",\n    val: sybil_wrapper_provider ? \"\ud83e\udd16 nada.bot human verified\" : \"none\",\n  },\n];\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n`;\nconst Title = styled.div`\n  font-weight: 600;\n  font-size: 22px;\n`;\nconst PrviewContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  max-width: 922px;\n`;\nconst AdminsWrapper = styled.div`\n  position: absolute;\n  display: flex;\n  flex-direction: column;\n  opacity: 0;\n  pointer-events: none;\n  padding-top: 5px;\n  transition: all 300ms;\n  top: 100%;\n  .list {\n    background: white;\n    color: #292929;\n    border-radius: 4px;\n    overflow: hidden;\n    box-shadow: 0px 0px 1px 0px rgba(41, 41, 41, 0.74),\n      0px 3px 3px 0px rgba(123, 123, 123, 0.12),\n      0px 6px 6px 0px rgba(123, 123, 123, 0.12);\n    a {\n      display: flex;\n      align-items: center;\n      gap: 0.5rem;\n      padding: 12px 16px;\n      color: #292929;\n      transition: 300ms;\n      .profile-image {\n        width: 24px;\n        height: 24px;\n        box-shadow: 0px 0px 1px 0px #a6a6a6 inset;\n        border: 2px solid #f8d3b0;\n        border-radius: 50%;\n      }\n      &:hover {\n        background: #292929;\n        text-decoration: none;\n        color: white;\n      }\n    }\n  }\n  .tip-icon {\n    display: flex;\n    justify-content: center;\n    z-index: 1;\n    svg {\n      stroke: rgb(41 41 41 / 21%);\n    }\n  }\n`;\nconst Admins = styled.div`\n  display: flex;\n  font-size: 11px;\n  gap: 2rem;\n  .owner {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 0.5rem;\n    .address {\n      display: flex;\n      gap: 0.5rem;\n      align-items: center;\n      div {\n        font-size: 14px;\n        font-weight: 500;\n      }\n      .profile-image {\n        width: 24px;\n        height: 24px;\n        border-radius: 50%;\n      }\n    }\n  }\n  .admins {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 0.5rem;\n    .avaters {\n      display: flex;\n      gap: 0.5rem;\n    }\n    .profile-image {\n      width: 24px;\n      height: 24px;\n    }\n    .icons-tolltip {\n      position: relative;\n      width: 24px;\n      height: 24px;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      color: white;\n      border-radius: 50%;\n      border: 2px solid #f8d3b0;\n      background: #b8182d;\n      &:hover {\n        ${AdminsWrapper} {\n          opacity: 1;\n          pointer-events: all;\n        }\n      }\n    }\n  }\n  .edit {\n    display: flex;\n    gap: 0.5rem;\n    color: #dd3345;\n    align-items: center;\n    cursor: pointer;\n    margin-left: auto;\n  }\n  @media only screen and (max-width: 768px) {\n    flex-wrap: wrap;\n    .edit {\n      width: 100%;\n    }\n  }\n`;\nconst Detail = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  border-radius: 12px;\n  border: 1px solid #c7c7c7;\n  padding: 3rem;\n  margin-top: 1.5rem;\n  .row-field {\n    display: flex;\n    align-items: center;\n    gap: 2rem;\n    font-size: 14px;\n  }\n  .label {\n    font-weight: 500;\n    max-width: 238px;\n    width: 100%;\n    text-align: left;\n  }\n  .input {\n    color: #7b7b7b;\n  }\n  @media only screen and (max-width: 768px) {\n    padding: 1rem;\n    gap: 1.5rem;\n    .row-field {\n      flex-direction: column;\n      align-items: flex-start;\n      gap: 4px;\n    }\n  }\n`;\nconst ProfileImage = ({ address }) => (\n  <Widget\n    src={\"old.potlock.near/widget/Project.ProfileImage\"}\n    props={{\n      ...props,\n      accountId: address,\n      style: {},\n    }}\n  />\n);\nconst AdminsTooltip = () => (\n  <AdminsWrapper>\n    <div className=\"tip-icon\">\n      <svg\n        width=\"12\"\n        height=\"8\"\n        viewBox=\"0 0 12 8\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          d=\"M6 5.24537e-07L-2.54292e-07 8L12 8L6 5.24537e-07Z\"\n          fill=\"white\"\n        />\n      </svg>\n    </div>\n    <div className=\"list\">\n      {admins.slice(0, admins.length).map((admin) => (\n        <a\n          href={hrefWithParams(`?tab=profile&accountId=${admin}`)}\n          target=\"_blank\"\n        >\n          <ProfileImage address={admin} />\n          <div>{admin}</div>\n        </a>\n      ))}\n    </div>\n  </AdminsWrapper>\n);\nreturn editSettings ? (\n  <Container>\n    <Title>Edit Pot settings</Title>\n    <Widget\n      src={\"old.potlock.near/widget/Pots.ConfigForm\"}\n      props={{\n        ...props,\n      }}\n    />\n  </Container>\n) : (\n  <PrviewContainer>\n    <Admins>\n      <div className=\"owner\">\n        <div>Owner</div>\n        <div className=\"address\">\n          <ProfileImage address={owner} />\n          <div>{_address(owner, 15)}</div>\n        </div>\n      </div>\n      {admins.length > 0 && (\n        <div className=\"admins\">\n          <div>Admins</div>\n          <div className=\"avaters\">\n            {admins.slice(0, 4).map((admin, idx) => (\n              <OverlayTrigger\n                placement=\"bottom\"\n                overlay={<Tooltip id={`tooltip-${idx}`}>{admin}</Tooltip>}\n                key={admin}\n              >\n                <a\n                  href={hrefWithParams(`?tab=profile&accountId=${admin}`)}\n                  target=\"_blank\"\n                >\n                  <ProfileImage address={admin} />\n                </a>\n              </OverlayTrigger>\n            ))}\n            {admins.length > 4 && (\n              <div className=\"icons-tolltip\">\n                +{admins.length - 4}\n                <AdminsTooltip />\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n      {userIsAdminOrGreater && (\n        <div className=\"edit\" onClick={() => setEditSettings(true)}>\n          <svg\n            width=\"14\"\n            height=\"14\"\n            viewBox=\"0 0 14 14\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              d=\"M0.25 13.7501H3.0625L11.3575 5.45508L8.545 2.64258L0.25 10.9376V13.7501ZM1.75 11.5601L8.545 4.76508L9.235 5.45508L2.44 12.2501H1.75V11.5601Z\"\n              fill=\"#DD3345\"\n            />\n            <path\n              d=\"M11.7777 0.469375C11.4852 0.176875 11.0127 0.176875 10.7202 0.469375L9.34766 1.84187L12.1602 4.65438L13.5327 3.28187C13.8252 2.98937 13.8252 2.51688 13.5327 2.22438L11.7777 0.469375Z\"\n              fill=\"#DD3345\"\n            />\n          </svg>\n          Edit Pot\n        </div>\n      )}\n    </Admins>\n    <Detail>\n      {fields.map((field) => (\n        <div className=\"row-field\" key={field.label}>\n          <div className=\"label\">{field.label}</div>\n          <div className=\"input\">{field.val}</div>\n        </div>\n      ))}\n    </Detail>\n  </PrviewContainer>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/old.potlock.near/widget/Pots.Settings", "fact_widget_deployments_id": "878a1be155056cd263efd8ad0f2be566", "inserted_timestamp": "2024-05-22T20:51:25.115Z", "modified_timestamp": "2024-05-22T21:51:10.417Z", "__row_index": 0}