{"tx_hash": "9zqTVjxAkPtBfjqX2fT5FzifJjSP21C86jFz6qdKKgVy", "action_id_social": "HNSjPxZHjQ2Lff1uQ66xsSN13rddtn5VTT4ywqvZwWUv-0-widget", "block_id": 119511074, "block_timestamp": "2024-05-22T19:32:15.684Z", "signer_id": "old.potlock.near", "widget_name": "Project.Detail", "source_code": "const { projectId, tab } = props;\nconst accountId = context.accountId;\nconst { DONATION_CONTRACT_ID } = VM.require(\n  \"old.potlock.near/widget/constants\"\n) || {\n  DONATION_CONTRACT_ID: \"\",\n};\nconst { ProjectOptions } = VM.require(\n  \"old.potlock.near/widget/Project.Options\"\n) || {\n  ProjectOptions: () => [],\n};\nlet DonateSDK =\n  VM.require(\"old.potlock.near/widget/SDK.donate\") ||\n  (() => ({\n    getDonationsForRecipient: () => {},\n    // asyncGetDonationsForRecipient: () => {},\n  }));\nDonateSDK = DonateSDK({ env: props.env });\nlet PotFactorySDK =\n  VM.require(\"old.potlock.near/widget/SDK.potfactory\") ||\n  (() => ({\n    getPots: () => {},\n  }));\nPotFactorySDK = PotFactorySDK({ env: props.env });\nconst pots = PotFactorySDK.getPots();\nconst PotSDK = VM.require(\"old.potlock.near/widget/SDK.pot\") || {\n  asyncGetConfig: () => {},\n  asyncGetDonationsForProject: () => {},\n  asyncGetDonationsForRecipient: () => {},\n};\nlet ListsSDK =\n  VM.require(\"old.potlock.near/widget/SDK.lists\") ||\n  (() => ({\n    getRegistration: () => \"\",\n  }));\nListsSDK = ListsSDK({ env: props.env });\nconst registration = ListsSDK.getRegistration(null, projectId);\n// Loading Skeleton\nconst loadingSkeleton = styled.keyframes`\n  0% {\n    opacity: 1;\n  }\n  50% {\n    opacity: 0.4;\n  }\n  100% {\n    opacity: 1;\n  }\n`;\nconst SkeletonContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  width: 100%;\n  animation-name: ${loadingSkeleton};\n  animation-duration: 1s;\n  animation-iteration-count: infinite;\n`;\nconst LoadingBackground = styled.div`\n  position: relative;\n  background: #eee;\n  width: 100%;\n  height: 318px;\n  @media screen and (max-width: 768px) {\n    height: 264px;\n  }\n`;\nconst LoadingProfileImg = styled.div`\n  width: ${props.imageStyle?.width ?? \"128px\"};\n  height: ${props.imageStyle?.height ?? \"128px\"};\n  z-index: 1;\n  padding: 6px;\n  transform: translateY(-50%);\n  position: relative;\n  margin-left: 4rem;\n  background: white;\n  border-radius: 50%;\n  @media screen and (max-width: 768px) {\n    margin-left: 1rem;\n  }\n  div {\n    background: #eee;\n    width: 100%;\n    height: 100%;\n    border-radius: 50%;\n  }\n`;\nconst BannerSkeleton = () => (\n  <SkeletonContainer>\n    <LoadingBackground />\n    <LoadingProfileImg>\n      <div />\n    </LoadingProfileImg>\n  </SkeletonContainer>\n);\nconst account = fetch(\"https://api3.nearblocks.io/v1/account/\" + projectId);\nif (registration === null || account === null) return <BannerSkeleton />;\nconst isObjectNotEmpty = (obj) => Object.keys(obj).length > 0;\nconst addressExist = account?.body?.account[0];\nif (!isObjectNotEmpty(addressExist || {}) && !registration)\n  return (\n    <div style={{ marginTop: \"1rem\", fontSize: \"1.5rem\" }}>\n      Account does not exist.\n    </div>\n  );\nconst [directDonations, setDirectDonations] = useState(null);\n// mapping of pot IDs to array of Round Matching Donations for the project\nconst [matchingRoundDonations, setMatchingRoundDonations] = useState({});\nconst [potPayouts, setPotPayouts] = useState({});\nconst getProjectRoundDonations = (potId, potDetail) => {\n  return PotSDK.asyncGetDonationsForProject(potId, projectId)\n    .then((donations) => {\n      const updatedDonations = donations.map((donation) => ({\n        ...donation,\n        base_currency: potDetail.base_currency,\n        pot_name: potDetail.pot_name,\n        pot_id: potId,\n        type: \"matched\",\n      }));\n      if (roundDonations[potId]) return \"\";\n      setMatchingRoundDonations((prevmMatchingRoundDonations) => {\n        return { ...prevmMatchingRoundDonations, [potId]: updatedDonations };\n      });\n    })\n    .catch(() => {\n      if (roundDonations[potId]) return \"\";\n      setMatchingRoundDonations((prevmMatchingRoundDonations) => {\n        return { ...prevmMatchingRoundDonations, [potId]: [] };\n      });\n    });\n};\n// Get Project Direct Donations\nlet donationsForRecipient = DonateSDK.getDonationsForRecipient(projectId);\nif (donationsForRecipient && !directDonations) {\n  donationsForRecipient = donationsForRecipient.map((donation) => ({\n    ...donation,\n    type: \"direct\",\n  }));\n  setDirectDonations(donationsForRecipient);\n}\nif (pots && !matchingRoundDonations[pots[pots.length - 1].id]) {\n  pots.forEach((pot) => {\n    PotSDK.asyncGetConfig(pot.id).then((potDetail) => {\n      const payout = potDetail.payouts.filter(\n        (pay) => projectId === pay.project_id\n      )[0];\n      if (payout.paid_at)\n        setPotPayouts((prevPayout) => ({\n          ...prevPayout,\n          [pot.id]: {\n            ...payout,\n            pot_id: pot.id,\n            pot_name: potDetail.pot_name,\n            base_currency: potDetail.base_currency,\n            type: \"payout\",\n          },\n        }));\n      getProjectRoundDonations(pot.id, potDetail);\n    });\n  });\n}\nconst allDonations = useMemo(() => {\n  const RoundDonationsValue = Object.values(matchingRoundDonations).flat();\n  let payouts = Object.values(potPayouts);\n  const allDonations = [\n    ...(directDonations || []),\n    ...RoundDonationsValue,\n    ...payouts,\n  ];\n  allDonations.sort((a, b) => {\n    const b_donated_at = b.donated_at_ms || b.donated_at || b.paid_at;\n    const a_donated_at = a.donated_at_ms || a.donated_at || a.paid_at;\n    return b_donated_at - a_donated_at;\n  });\n  return allDonations;\n}, [matchingRoundDonations, directDonations, potPayouts]);\nconst profile = Social.getr(`${projectId}/profile`);\nconst Wrapper = styled.div`\n  margin-top: calc(-1 * var(--body-top-padding, 0));\n`;\nreturn (\n  <Wrapper>\n    {registration.status !== \"Approved\" && (\n      <Widget\n        src={\"old.potlock.near/widget/Project.ProjectBanner\"}\n        props={{ ...props, registration }}\n      />\n    )}\n    <Widget\n      src={\"old.potlock.near/widget/Profile.Body\"}\n      props={{\n        ...props,\n        profile,\n        registration,\n        post: projectId === accountId,\n        nav: props.nav ?? \"home\",\n        donations: allDonations,\n        directDonations: directDonations,\n        matchingRoundDonations: Object.values(matchingRoundDonations).flat(),\n        potPayouts: Object.values(potPayouts),\n        navOptions: ProjectOptions(props),\n      }}\n    />\n  </Wrapper>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/old.potlock.near/widget/Project.Detail", "fact_widget_deployments_id": "08875137c83d58a5121bbc773f3c5ec0", "inserted_timestamp": "2024-05-22T20:51:25.115Z", "modified_timestamp": "2024-05-22T21:51:10.417Z", "__row_index": 0}