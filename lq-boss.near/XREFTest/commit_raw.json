{"tx_hash": "AGMhUJvpFGzbwR4gXw6r2oZRhED9heJD4Y7yvWgTVZXZ", "action_id_social": "5Ppbj8h36RLuez7dh7snCULm6Ax7D62eBJ1CgAMWFnaP-0-widget", "block_id": 98861825, "block_timestamp": "2023-08-15T12:47:32.029Z", "signer_id": "lq-boss.near", "widget_name": "XREFTest", "source_code": "/** common lib start */\nconst accountId = props.accountId || context.accountId;\nconst isSignedIn = !!accountId;\n\nfunction isValid(a) {\n  if (!a) return false;\n  if (isNaN(Number(a))) return false;\n  if (a === \"\") return false;\n  return true;\n}\n/** common lib end */\nfunction getConfig() {\n  return {\n    ownerId: \"ref-admin.near\",\n    contractId: \"linear-protocol.near\",\n    REF_TOKEN_ID: \"token.v2.ref-finance.near\",\n    XREF_TOKEN_ID: \"xtoken.ref-finance.near\",\n    nodeUrl: \"https://rpc.mainnet.near.org\",\n  };\n}\nconst config = getConfig(context.networkId);\nconst { tabName } = state;\nState.init({\n  tabName: \"stake\", // stake | unstake\n});\n\nconst Main = styled.div`\n  width:500px;\n  position: relative;\n`;\n\nconst updateTabName = (tabName) =>\n  State.update({\n    tabName,\n  });\n\nreturn (\n  <Main>\n    {props.tabName === \"stake\" && (\n      <Widget\n        src={`lq-boss.near/widget/XREF.StakeTest`}\n        props={{ config, updateTabName }}\n      />\n    )}\n    {props.tabName === \"unstake\" && (\n      <Widget\n        src={`${config.ownerId}/widget/XREF.Unstake`}\n        props={{ config, updateTabName }}\n      />\n    )}\n  </Main>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/lq-boss.near/widget/XREFTest", "fact_widget_deployments_id": "b1fa135835988114844e2dc425c25c1c", "inserted_timestamp": "2023-08-15T14:34:31.160Z", "modified_timestamp": "2023-08-15T14:34:31.160Z", "__row_index": 0}