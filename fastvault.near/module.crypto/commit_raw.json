{"tx_hash": "7AnNCuQydJg5Y3t9VZhuSHkUQBvLjMEo498HrJ1vZsBA", "action_id_social": "Gm1LHfCRg9U5qYrWoVHWxkt5MpznrQ6JtZX1an6p45Y-0-widget", "block_id": 107462851, "block_timestamp": "2023-12-08T20:30:37.608Z", "signer_id": "fastvault.near", "widget_name": "module.crypto", "source_code": "// Uint8Array -> Array\nconst array2buf = (array) => Array.from(array);\n\n// Uint8Array -> str\nconst arr2str = (array) => {\n  var result = \"\";\n  for (var i = 0; i < array.length; i++) {\n    result += String.fromCharCode(array[i]);\n  }\n  return result;\n};\n\n// str -> Uint8Array\nconst str2array = (str) => {\n  return new Uint8Array(Array.from(str).map((letter) => letter.charCodeAt(0)));\n};\n\n// accountId: str, password: str\nconst newSecretKey = (accountId, password) => {\n  const hashed_id = nacl.hash(str2array(accountId));\n  const hashed_pw = nacl.hash(str2array(password));\n  const sk = new Uint8Array(nacl.secretbox.keyLength);\n  for (var i = 0; i < hashed_id.length; i++) {\n    const sk_i = i % sk.length;\n    if (i >= sk.length) {\n      sk[sk_i] = sk[sk_i] + (hashed_id[i] + hashed_pw[i]);\n    } else {\n      sk[sk_i] = hashed_id[i] + hashed_pw[i];\n    }\n  }\n  return sk;\n};\n\nconst newNonce = (message) => {\n  const hash = nacl.hash(message);\n  const nonce = new Uint8Array(nacl.secretbox.nonceLength);\n  for (var i = 0; i < hash.length; i++) {\n    const n_i = i % nonce.length;\n    if (i >= nonce.length) {\n      nonce[n_i] += hash[i];\n    } else {\n      nonce[n_i] = i & hash[i];\n    }\n  }\n  return nonce;\n};\n\n// message: Uint8Array\nconst encrypt = (message, storageSk) => {\n  const nonce = newNonce(message);\n  const ciphertext = nacl.secretbox(message, nonce, storageSk);\n  return {\n    nonce: Array.from(nonce),\n    ciphertext: Array.from(ciphertext),\n  };\n};\n\n// message: str\nconst encryptStr = (text, storageSk) => {\n  return encrypt(str2array(text), storageSk);\n};\n\n// message: JS Object\nconst encryptObject = (obj, storageSk) => {\n  return encrypt(str2array(JSON.stringify(obj)), storageSk);\n};\n\n// nonce: Uint8Array\n// ciphertext: Uint8Array\n// storageSk: Uint8Array\nconst decrypt = (nonce, ciphertext, storageSk) => {\n  return nacl.secretbox.open(ciphertext, nonce, storageSk);\n};\n\n// message: JS Object\nconst decryptObject = (nonce, ciphertext, storageSk) => {\n  return JSON.parse(arr2str(decrypt(nonce, ciphertext, storageSk)));\n};\n\nreturn {\n  encrypt,\n  encryptStr,\n  encryptObject,\n  decrypt,\n  decryptObject,\n  newSecretKey,\n};\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/fastvault.near/widget/module.crypto", "fact_widget_deployments_id": "66ccbc2af7932adddcec14c65079ea36", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 0}