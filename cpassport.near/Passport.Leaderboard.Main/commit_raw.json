{"tx_hash": "4hYPHRcZNeCjivq6QWHWnE4b6DKcTSHH3wxkjdju7C3G", "action_id_social": "7fzXqr9uFbdWMBjZDSPa6n1BVKW3eybb8MoNsUoRPUbn-0-widget", "block_id": 102515713, "block_timestamp": "2023-10-03T10:13:48.096Z", "signer_id": "cpassport.near", "widget_name": "Passport.Leaderboard.Main", "source_code": "const DivBackground = styled.div`\n  height: 100vh;\n  background-color: #FDF3DD;\n  display: flex;\n  padding-bottom:20vh;\n  width:100%;\n  align-items:center;\n  justify-content:center;\n`;\nconst accountId = props?.accountId ?? context?.accountId;\n\nState.init({\n  tokenId: {},\n  nftDetails: false,\n  hasFetched: {},\n});\n\nconst phillipines = {\n  series: \"224\",\n  country: \"Phillipines\",\n  image:\n    \"https://ipfs.near.social/ipfs/bafybeih7fmsubhl2inkboy3ngkpoirffgbygyn6gg6pkthd5pvikyxrum4\",\n};\n\nconst india = {\n  series: \"225\",\n  country: \"India\",\n  image:\n    \"https://ipfs.near.social/ipfs/bafybeiaqolijobdczeeihfx2gcqfc4hxxy54pnrym5ujm45yndbinfuqfu\",\n};\n\nconst brazil = {\n  series: \"226\",\n  country: \"Brazil\",\n  image:\n    \"https://ipfs.near.social/ipfs/bafybeib57ef23gpshvn7nv4ux7gypoevx4weblc3a2vpgb3n25u5qvxieq\",\n};\n\nconst unitedStates = {\n  series: \"227\",\n  country: \"United States\",\n  image:\n    \"https://ipfs.near.social/ipfs/bafybeih5pggkqxka6wxdlcimei6ghn6opuroxkvknirmpfc3xedsub5dta\",\n};\n\nconst antiqua = {\n  series: \"228\",\n  country: \"Antiqua\",\n  image:\n    \"https://ipfs.near.social/ipfs/bafybeid2t5czk6q6at2t4nbczp3tf3acxu2nw3sz4bxte7z6yg5m37sw6a\",\n};\n\nconst nigerea = {\n  series: \"229\",\n  country: \"Nigerea\",\n  image:\n    \"https://ipfs.near.social/ipfs/bafybeiaalp75q2bjwzjyatxyuwmhpxcyrlvye6bbioenrfrvqbsypyz6om\",\n};\n\nconst portugal = {\n  series: \"230\",\n  country: \"Portugal\",\n  image:\n    \"https://ipfs.near.social/ipfs/bafybeiewfpsywztby7id634y7iox3icdkge5ptu3spgd3efeilrst64gh4\",\n};\n\nconst canada = {\n  series: \"231\",\n  country: \"Canada\",\n  image:\n    \"https://ipfs.near.social/ipfs/bafybeibjnx2u3oluxda7snccioccxynlm7mmd2o2ieahbzg6eiv3udd44m\",\n};\n\nconst countryList = [\n  phillipines,\n  india,\n  brazil,\n  unitedStates,\n  antiqua,\n  nigerea,\n  portugal,\n  canada,\n];\n\nfunction fetchTokens(series) {\n  asyncFetch(\"https://graph.mintbase.xyz/mainnet\", {\n    method: \"POST\",\n    headers: {\n      \"mb-api-key\": \"omni-site\",\n      \"Content-Type\": \"application/json\",\n      \"x-hasura-role\": \"anonymous\",\n    },\n    body: JSON.stringify({\n      query: `\n          query MyQuery {\n            mb_views_nft_tokens(\n              where: { nft_contract_id: { _eq: \"mint.sharddog.near\" } token_id: {_regex: \"^${series}:\"}}\n            ) {\n              owner\n              token_id\n              media\n              base_uri\n              minter\n              metadata_id\n            }\n          }\n        `,\n    }),\n  }).then((res) => {\n    console.log(res.ok, series);\n    if (res.ok) {\n      const token = res.body.data.mb_views_nft_tokens;\n      if (token) {\n        State.update({\n          [`${series}:token`]: token,\n        });\n      }\n    }\n  });\n}\n\nconsole.log(state.tokens);\n\nconst fetchAllTokens = () => {\n  countryList.forEach((item, idx) => {\n    if (state.hasFetched[item.series] !== true) {\n      fetchTokens(item.series);\n      State.update({\n        hasFetched: { ...state.hasFetched, [item.series]: true },\n      });\n    }\n  });\n};\n\nif (Object.keys(state.hasFetched).length !== countryList.length) {\n  fetchAllTokens();\n}\n\nconst GridView = styled.div`\n  display: grid;\n  width:100%;\n  padding-left:10px;\n  margin: auto;\n  gap:5px;\n  grid-template-columns: repeat(10, 1fr);\n`;\n\nconst getToken = (series) => {\n  return state[`${series}:token`];\n};\n\nif (state.series) {\n  return (\n    <Widget\n      src=\"cpassport.near/widget/Passport.NFTDetails.Main\"\n      props={{\n        series: state.series,\n        onBack: () => {\n          State.update({ series: null });\n        },\n      }}\n    />\n  );\n}\n\nreturn (\n  <DivBackground>\n    <div>\n      <h1 style={{ textAlign: \"center\" }}>Onboarding Manifest</h1>\n      <GridView>\n        <div>\n          <div style={{ height: 70 }} />\n          <p style={{ fontSize: 12 }}>Total:</p>\n          <p style={{ fontSize: 12 }}>Flight log:</p>\n        </div>\n        {countryList.map((item) => (\n          <div style={{ textAlign: \"center\" }}>\n            <img\n              style={{ width: 70, height: 70, cursor: \"pointer\" }}\n              onClick={() => {\n                State.update({ series: item.series });\n              }}\n              src={item.image}\n            />\n            <div\n              style={{\n                backgroundColor: \"white\",\n                border: \"1px solid #ffce1f\",\n                borderRadius: 10,\n                zIndex: -5,\n                transform: \"translateY(10px)\",\n              }}\n            >\n              <p style={{ marginBottom: 0, padding: 10 }}>\n                {getToken(item.series).length}\n              </p>\n            </div>\n            {getToken(item.series).length !== 0 && (\n              <div\n                style={{\n                  backgroundColor: \"white\",\n                  border: \"1px solid #ffce1f\",\n                  padding: 10,\n                  paddingTop: 20,\n                  zIndex: 10,\n                  borderRadius: 10,\n                }}\n              >\n                {getToken(item.series).map((item) => (\n                  <p style={{ fontSize: 8 }}>{item.owner}</p>\n                ))}\n              </div>\n            )}\n          </div>\n        ))}\n      </GridView>\n    </div>\n  </DivBackground>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/cpassport.near/widget/Passport.Leaderboard.Main", "fact_widget_deployments_id": "1f26e11ce03850cfa9d70ef0afeb27b3", "inserted_timestamp": "2023-10-03T12:20:32.349Z", "modified_timestamp": "2023-10-03T12:20:32.349Z", "__row_index": 5}