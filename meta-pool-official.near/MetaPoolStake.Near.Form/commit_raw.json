{"tx_hash": "4MaPwv78RGyM3wbBrsZusTR9jpCcTVUaS21RZWua13Nd", "action_id_social": "C4bDVeRmPQkyD2ebzrMtf54w8vSFhm79DwLQUD2nhzkE-0-widget", "block_id": 100163685, "block_timestamp": "2023-09-01T15:37:02.852Z", "signer_id": "meta-pool-official.near", "widget_name": "MetaPoolStake.Near.Form", "source_code": "const authorId = \"meta-pool-official.near\";\n\nconst {isSignedIn, action, update, state, onSubmitStake, onSubmitFastUnstake, onSubmitDelayedUnstake} = props;\nconst tokenInputUsd =\n  action == \"stake\" ? state.nearUsdPrice : state.metrics?.st_near_price_usd;\nconst tokenOutputUsd =\n  action == \"stake\" ? state.metrics?.st_near_price_usd : state.nearUsdPrice;\n\nconst onSubmit = \n{\n  stake: onSubmitStake,\n  delayed: onSubmitDelayedUnstake,\n  fast: onSubmitFastUnstake\n}[props.action];\n\n\nconst StakeContainer = styled.div`\n    width: 100%;\n    max-width: 600px;\n    align-self: center\n  `;\n\nconst StakeForm = styled.div`\nbackground: rgb(12, 34, 70);\nmargin-bottom: -20px;\nborder-bottom-left-radius: 0px;\nborder-bottom-right-radius: 0px;\npadding-bottom: 52px;\nfont-weight: 400;\nfont-size: 12px;\nline-height: 1.6em;\nborder-radius: 20px;\nmargin: 0px;\npadding: 12px 26px 32px 26px;\nbox-shadow: none;\ncolor: #fff;    \n`;\n\nconst StakeFormTopContainer = styled.div`\nmargin-top: 0px;\ndisplay: flex;\nmargin: 10px 0px;\n`;\n\nconst StakeFormTopContainerLeft = styled.div`\nmargin-right: 8px;\nflex-basis: 50%;\n-webkit-box-flex: 1;\nflex-grow: 1;\nfont-size: 12px;\nline-height: 1.6em;\n`;\n\nconst StakeFormTopContainerLeftContent1 = styled.div`\ndisplay: flex;\nflex-direction: row;\n-webkit-box-pack: start;\njustify-content: flex-start;\n-webkit-box-align: center;\nalign-items: center;\n`;\n\nconst StakeFormTopContainerLeftContent1Container = styled.div`\ndisplay: flex;\n-webkit-box-align: center;\nalign-items: center;\n`;\n\nconst StakeFormTopContainerLeftContent2 = styled.div`\nmargin-top: 2px;\nfont-size: 16px;\nline-height: 1.4em;\nfont-weight: 800;\nwhite-space: nowrap;\ndisplay: block;\n`;\n\nconst StakeFormTopContainerCenter = styled.div`\nflex-basis: 50%;\n-webkit-box-flex: 1;\nflex-grow: 1;\nfont-size: 12px;\nline-height: 1.6em;\n`;\n\nconst StakeFormTopContainerCenterContent1 = styled.div`\ndisplay: flex;\nflex-direction: row;\n-webkit-box-pack: start;\njustify-content: center;\n-webkit-box-align: center;\nalign-items: center;\n`;\n\nconst StakeFormTopContainerCenterContent1Container = styled.div`\ndisplay: flex;\n-webkit-box-align: center;\nalign-items: center;\n`;\n\nconst StakeFormTopContainerCenterContent2 = styled.div`\nmargin-top: 2px;\nfont-size: 16px;\nline-height: 1.4em;\nfont-weight: 800;\nwhite-space: nowrap;\ntext-align: center;\ndisplay: block;\n`;\n\nconst StakeFormTopContainerRight = styled.div`\nmargin-left: 8px;\nflex-basis: 50%;\n-webkit-box-flex: 1;\nflex-grow: 1;\nfont-size: 12px;\nline-height: 1.6em;\n`;\n\nconst StakeFormTopContainerRightContent1 = styled.div`\ndisplay: flex;\nflex-direction: row;\n-webkit-box-pack: start;\njustify-content: flex-end;\n-webkit-box-align: center;\nalign-items: center;\n`;\n\nconst StakeFormTopContainerRightContent1Container = styled.div`\ndisplay: flex;\n-webkit-box-align: center;\nalign-items: center;\n`;\n\nconst StakeFormTopContainerRightContent1Text = styled.div`\npadding: 0px 6px;\nfont-weight: 400;\nfont-size: 16px;\nbackground-color: #0002;\nborder: solid 4px #000B;\nborder-radius: 14px;\n`;\n\nconst StakeFormTopContainerRightContent2 = styled.div`\nmargin-top: 2px;\nfont-size: 16px;\nline-height: 1.4em;\nfont-weight: 800;\nwhite-space: nowrap;\ntext-align: end;\ndisplay: block;\n`;\n\nconst StakeFormWrapper = styled.div`\nbackground-color: white;\ndisplay: flex;\nflex-direction: column;\ngap: 20px;\nwidth: 100%;\nborder-radius: 16px;\nwidth: 100%;\nalign-items: center;\ndiv {\n  gap: 20px;\n}\npadding: 20px 20px 20px 20px;\nmargin-top: -30px;\nborder:1px solid rgb(212, 224, 231)\n`;\n\nconst ButtonConnectContainer = styled.div`\n    ${\".buttonClass{ width: 100%;  border-radius: 1000px;  font-size: 20px;  font-weight: bold;  padding: 8px 0;  /* transition: all 0.3s ease-in-out;*/display: inline-flex;  align-items: center;  justify-content: center;  user-select: none;  position: relative;  white-space: nowrap;  vertical-align: middle;  line-height: 1.2;  border-radius: 1000px;  font-weight: 400;  min-height: 48px;  text-align: center;  box-sizing: border-box;  padding: 0 24px;  color: rgb(255, 255, 255);  background: rgb(12, 34, 70);  border: 2px solid transparent;  &:disabled { background: rgb(12, 34, 70);    color: white;    cursor: not-allowed } &:hover { border: 4px solid rgb(12, 34, 70);    color:  rgb(12, 34, 70);    background: transparent;    }}\"}\n  `;\n\nreturn (\n  <StakeContainer>\n    <StakeForm>\n      {isSignedIn && (\n        <StakeFormTopContainer>\n          <StakeFormTopContainerLeft>\n            <StakeFormTopContainerLeftContent1>\n              <StakeFormTopContainerLeftContent1Container>\n                <span>{action == \"stake\" ? \"Available to Stake\" : \"Available to Unstake\"}</span>\n              </StakeFormTopContainerLeftContent1Container>\n            </StakeFormTopContainerLeftContent1>\n            <StakeFormTopContainerLeftContent2>\n              <span>\n                {action == \"stake\" ? state.nearBalance : state.stNearBalance}\n                {action == \"stake\" ? \"NEAR\" : \"stNEAR\"}\n              </span>\n            </StakeFormTopContainerLeftContent2>\n          </StakeFormTopContainerLeft>\n\n          <StakeFormTopContainerCenter>\n            <StakeFormTopContainerCenterContent1>\n              <StakeFormTopContainerCenterContent1Container>\n                APY\n              </StakeFormTopContainerCenterContent1Container>\n            </StakeFormTopContainerCenterContent1>\n            <StakeFormTopContainerCenterContent2>\n              {state.metrics\n                ? state.metrics?.st_near_30_day_apy.toFixed(2)\n                : \"...\"}\n              %\n            </StakeFormTopContainerCenterContent2>\n          </StakeFormTopContainerCenter>\n\n          <StakeFormTopContainerRight>\n            <StakeFormTopContainerRightContent1>\n              <StakeFormTopContainerRightContent1Container>\n                <span>{action = \"stake\" ?  \"Staked amount\" : \"NEAR available amount\"}</span>\n              </StakeFormTopContainerRightContent1Container>\n            </StakeFormTopContainerRightContent1>\n            <StakeFormTopContainerRightContent2>\n              <span>\n                {action == \"stake\" ? state.stNearBalance : state.nearBalance}\n                {action == \"stake\" ? \"stNEAR\" : \"NEAR\"}\n              </span>\n            </StakeFormTopContainerRightContent2>\n          </StakeFormTopContainerRight>\n        </StakeFormTopContainer>\n      )}\n    </StakeForm>\n    <StakeFormWrapper>\n      <Widget\n        src={`${authorId}/widget/MetaPoolStake.Common.Input`}\n        props={{\n          usdPrice:\n            tokenInputUsd && state.value\n              ? (tokenInputUsd * parseFloat(state.value)).toFixed(2)\n              : \"0\",\n          placeholder:\n            action == \"stake\" ? \"Enter NEAR amount\" : \"Enter stNEAR amount\",\n          value: state.value,\n          onChange: (e) => action == \"stake\" ?  handleInputNear(e.target.value) : handleInputStNear(e.target.value),\n          onClickMax: action == \"stake\" ? onClickMaxNear : onClickMaxStNear,\n          inputError: state.validation !== \"\",\n          balance: tokenInputBalance ?? \"-\",\n          iconName: tokenInput,\n          iconUrl: action == \"stake\" ?  \"https://ipfs.near.social/ipfs/bafkreid5xjykpqdvinmj432ldrkbjisrp3m4n25n4xefd32eml674ypqly\" :  \"https://ipfs.near.social/ipfs/bafkreigblrju2jzbkezxstqomekvlswl6ksqz56rohwzyoymrfzise7fdq\",\n        }}\n      />\n      {state.validation !== \"\" && (\n        <div style={{ fontWeight: 600, color: \"red\" }}>{state.validation}</div>\n      )}\n      <Widget\n        src={`${authorId}/widget/MetaPoolStake.Common.YouWillGet`}\n        props={{\n          value:\n            tokenOutputUsd && state.value && parseFloat(state.value) > 0\n              ? (state.value / tokenOutputUsd).toFixed(5)\n              : 0,\n          iconName: tokenOutput,\n          token: tokenInput,\n          tokenStake: tokenOutput,\n          iconUrl: action == \"stake\" ?  \"https://ipfs.near.social/ipfs/bafkreigblrju2jzbkezxstqomekvlswl6ksqz56rohwzyoymrfzise7fdq\" :  \"https://ipfs.near.social/ipfs/bafkreid5xjykpqdvinmj432ldrkbjisrp3m4n25n4xefd32eml674ypqly\",\n        }}\n      />\n      <Widget\n        src={`${authorId}/widget/MetaPoolStake.Common.Button`}\n        props={{\n          disabled: !isSignedIn,\n          onClick: () => onSubmit(),\n          text: isSignedIn\n            ? action == \"stake\"\n              ? \"Stake now\"\n              : \"Unstake\"\n            : \"Connect wallet\",\n        }}\n      />\n    </StakeFormWrapper>\n    <Widget\n      src={`${authorId}/widget/MetaPoolStake.Common.Popup.Index`}\n      props={{\n        open: state.openModal,\n        title: state.modalTitle,\n        description: state.modalDescription,\n        onClose: () =>\n          update({\n            openModal: false,\n            modalTitle: \"\",\n            modalDescription: \"\",\n          }),\n        authorId,\n      }}\n    />\n  </StakeContainer>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/meta-pool-official.near/widget/MetaPoolStake.Near.Form", "fact_widget_deployments_id": "3870bab3101019fd7cd0e8eb007f5ed1", "inserted_timestamp": "2023-09-01T17:34:57.557Z", "modified_timestamp": "2023-09-01T17:34:57.557Z", "__row_index": 3}