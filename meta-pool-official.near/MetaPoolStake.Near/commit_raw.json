{"tx_hash": "FdM2us3XELFMQhU6tsNT9WaDoFCwxczTLXzQ88av3j4g", "action_id_social": "BZCjWaP6tAHTzrR7RZ6vzhVPR8W4BtwMjGK6GYwQ7Eas-0-widget", "block_id": 100151898, "block_timestamp": "2023-09-01T11:44:12.535Z", "signer_id": "meta-pool-official.near", "widget_name": "MetaPoolStake.Near", "source_code": "const accountId = context.accountId;\nconst authorId = \"meta-pool-official.near\";\nconst isSignedIn = !!accountId;\nconst tokenDecimals = 24;\nconst BIG_ROUND_DOWN = 0;\nconst MIN_BALANCE_CHANGE = 0.5;\nconst contractId = \"meta-pool.near\";\nconst GAS = \"200000000000000\";\nconst ONE_NEAR = new BN(\"1\" + \"0\".repeat(24));\n\nState.init({\n  openModal: false,\n  validation: \"\",\n  nearUsdPrice: null,\n  nearUsdPriceIsFetched: false,\n  metrics: null,\n  metricsIsFetched: false,\n  nearBalance: null,\n  nearBalanceIsFetched: false,\n  stNearBalance: null,\n  stNearBalanceIsFetched: false,\n  dataIntervalStarted: false,\n  token: \"near\", // \"near\" | \"wnear\"\n  action: \"stake\", // \"\n});\n\nfunction isValid(a) {\n  if (!a) return false;\n  if (isNaN(Number(a))) return false;\n  if (a === \"\") return false;\n  return true;\n}\n\nconst fetchMetrics = () => {\n  asyncFetch(\"https://validators.narwallets.com/metrics_json\").then((resp) => {\n    if (resp) {\n      console.log(\"@metrics\", resp?.body);\n      State.update({ metrics: resp?.body ?? \"...\", metricsIsFetched: true });\n    }\n  });\n};\n\nconst fetchNearPrice = () => {\n  asyncFetch(\n    \"https://api.coingecko.com/api/v3/simple/price?ids=near&vs_currencies=usd\"\n  ).then((resp) => {\n    const nearUsdPrice = resp?.body?.near.usd;\n    if (nearUsdPrice && !isNaN(nearUsdPrice)) {\n      console.log(\"@nearPrice\", nearUsdPrice);\n      State.update({\n        nearUsdPrice: Number(nearUsdPrice),\n        nearUsdPriceIsFetched: true,\n      });\n    }\n  });\n};\n\nfunction getStNearBalance(subscribe) {\n  Near.asyncView(\n    contractId,\n    \"ft_balance_of\",\n    {\n      account_id: accountId,\n    },\n    undefined,\n    subscribe\n  ).then((stNearBalanceRaw) => {\n    if (!stNearBalanceRaw) return \"-\";\n    const balance = Big(stNearBalanceRaw).div(Big(10).pow(tokenDecimals));\n    console.log(\"@stNEAR balance\", balance.lt(0) ? \"0\" : balance.toFixed());\n    State.update({\n      stNearBalance: balance.lt(0) ? \"0\" : balance.toFixed(),\n      stNearBalanceIsFetched: true,\n    });\n  });\n}\n\nfunction getNearBalance(onInvalidate) {\n  const options = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      jsonrpc: \"2.0\",\n      id: \"dontcare\",\n      method: \"query\",\n      params: {\n        request_type: \"view_account\",\n        finality: \"final\",\n        account_id: accountId,\n      },\n    }),\n  };\n  asyncFetch(\"https://rpc.mainnet.near.org\", options).then((res) => {\n    console.log(\"@rpc view account\", res);\n    const { amount, storage_usage } = res?.body?.result;\n    const COMMON_MIN_BALANCE = 0.05;\n\n    let newBalance = \"-\";\n    if (amount) {\n      const availableBalance = Big(amount || 0).minus(\n        Big(storage_usage).mul(Big(10).pow(19))\n      );\n      const balance = availableBalance\n        .div(Big(10).pow(tokenDecimals))\n        .minus(COMMON_MIN_BALANCE);\n      newBalance = balance.lt(0) ? \"0\" : balance.toFixed(5, BIG_ROUND_DOWN);\n    }\n    console.log(\"@near balance\", newBalance);\n    State.update({\n      nearBalance: newBalance,\n      nearBalanceIsFetched: true,\n    });\n    if (onInvalidate) {\n      onInvalidate(nearBalance, newBalance);\n    }\n  });\n}\nconst update = (state) => State.update({ state });\n\nconst onSubmitStake = () => {\n  const deposit = Big(state.value).mul(Big(10).pow(tokenDecimals)).toFixed(0);\n  Near.call(contractId, \"deposit_and_stake\", {}, GAS, deposit);\n};\n\nconst onSubmitDelayedUnstake = () => {\n  // manage register stNEAR - should make a call attached\n  const args = {\n    amount: Big(state.value).mul(Big(10).pow(tokenDecimals)).toFixed(0),\n  };\n  Near.call(contractId, \"unstake\", args, GAS, 0);\n};\n\nconst onSubmitFastUnstake = () => {\n  // manage register stNEAR - should make a call attached\n  const l = Big(state.value).mul(Big(10).pow(tokenDecimals)).toFixed(0);\n  const e = l.mul(state.metrics.st_near_price_usd);\n  const tx = {\n    contractName: contractId,\n    methodName: \"liquid_unstake\",\n    deposit: 0,\n    args: {\n      st_near_to_burn: l.toFixed(0),\n      min_expected_near: e.sub(ONE_NEAR.divn(10)).toFixed(0),\n    },\n  };\n  Near.call([tx]);\n};\n\nconst handleInputNear = (value) => {\n  if (\n    (parseFloat(value) < 1 && parseFloat(value) > 0) ||\n    parseFloat(value) < 0\n  ) {\n    State.update({\n      validation: \"The minimum amount is 1 NEAR.\",\n    });\n  } else if (parseFloat(value) > parseFloat(state.nearBalance)) {\n    State.update({\n      validation: \"You don't have enough NEAR.\",\n    });\n  } else {\n    State.update({\n      validation: \"\",\n    });\n  }\n  State.update({ value });\n};\n\nconst handleInputStNear = (value) => {\n  if (\n    (parseFloat(value) < 1 && parseFloat(value) > 0) ||\n    parseFloat(value) < 0\n  ) {\n    State.update({\n      validation: \"The minimum amount is 1 stNEAR.\",\n    });\n  } else if (parseFloat(value) > parseFloat(state.stNearBalance)) {\n    State.update({\n      validation: \"You don't have enough stNEAR.\",\n    });\n  } else {\n    State.update({\n      validation: \"\",\n    });\n  }\n  State.update({ value });\n};\n\nconst getUserAddress = () => {\n  if (!accountId) return \"\";\n  return accountId.length > 20\n    ? accountId.substring(0, 8) +\n        \"...\" +\n        accountId.substring(accountId.length - 6, accountId.length)\n    : accountId;\n};\n\nconst onClickMaxNear = () => {\n  const value =\n    state.nearBalance > 0.1\n      ? (parseFloat(state.nearBalance) - 0.1).toFixed(2)\n      : \"0\";\n  handleInputNear(value);\n};\n\nconst onClickMaxStNear = () => {\n  const value =\n    state.stNearBalance > 0.1\n      ? (parseFloat(state.stNearBalance) - 0.1).toFixed(2)\n      : \"0\";\n  handleInputStNear(value);\n};\n\n// UPDATE DATA\n\nconst updateData = () => {\n  fetchNearPrice();\n  fetchMetrics();\n  getNearBalance();\n  getStNearBalance();\n};\n\nif (!state.dataIntervalStarted) {\n  State.update({ dataIntervalStarted: true });\n\n  setInterval(() => {\n    updateData();\n  }, 10000);\n}\n\n// parametrize props\nconst allProps = {\n  stake: {\n    tokenInputBalance: state.nearBalance,\n    tokenInput: \"NEAR\",\n    tokenOutputBalance: state.stNearBalance,\n    tokenOutput: \"stNEAR\",\n    tokenInputUsd: state.nearUsdPrice,\n    tokenOutputUsd: state.metrics?.st_near_price_usd,\n    apy: state.metrics?.st_near_30_day_apy,\n    inputPlaceholder: \"Enter NEAR amount\",\n    buttonText: \"Stake now\",\n    handleInput: handleInputNear,\n    tokenInputIconUrl:\n      \"https://ipfs.near.social/ipfs/bafkreid5xjykpqdvinmj432ldrkbjisrp3m4n25n4xefd32eml674ypqly\",\n    tokenOutputIconUrl:\n      \"https://ipfs.near.social/ipfs/bafkreigblrju2jzbkezxstqomekvlswl6ksqz56rohwzyoymrfzise7fdq\",\n    onClickMax: onClickMaxNear,\n    onSubmit: onSubmitStake,\n    stakeInfoLeftText: \"Available to Stake\",\n    stakeInforRightText: \"Staked amount\",\n  },\n  delayed: {\n    tokenInputBalance: state.stNearBalance,\n    tokenInput: \"stNEAR\",\n    tokenOutputBalance: state.nearBalance,\n    tokenOutput: \"NEAR\",\n    tokenInputUsd: state.metrics?.st_near_price_usd,\n    tokenOutputUsd: state.nearUsdPrice,\n    apy: state.metrics?.st_near_30_day_apy,\n    inputPlaceholder: \"Enter stNEAR amount\",\n    buttonText: \"Unstake\",\n    handleInput: handleInputStNear,\n    tokenOutputIconUrl:\n      \"https://ipfs.near.social/ipfs/bafkreid5xjykpqdvinmj432ldrkbjisrp3m4n25n4xefd32eml674ypqly\",\n    tokenInputIconUrl:\n      \"https://ipfs.near.social/ipfs/bafkreigblrju2jzbkezxstqomekvlswl6ksqz56rohwzyoymrfzise7fdq\",\n    onClickMax: onClickMaxStNear,\n    onSubmit: onSubmitDelayedUnstake,\n    stakeInfoLeftText: \"Available to Unstake\",\n    stakeInforRightText: \"NEAR available amount\",\n  },\n  fast: {\n    tokenInputBalance: state.stNearBalance,\n    tokenInput: \"stNEAR\",\n    tokenOutputBalance: state.nearBalance,\n    tokenOutput: \"NEAR\",\n    tokenInputUsd: state.metrics?.st_near_price_usd,\n    tokenOutputUsd: state.nearUsdPrice,\n    apy: state.metrics?.st_near_30_day_apy,\n    inputPlaceholder: \"Enter stNEAR amount\",\n    buttonText: \"Unstake\",\n    handleInput: handleInputStNear,\n    tokenOutputIconUrl:\n      \"https://ipfs.near.social/ipfs/bafkreid5xjykpqdvinmj432ldrkbjisrp3m4n25n4xefd32eml674ypqly\",\n    tokenInputIconUrl:\n      \"https://ipfs.near.social/ipfs/bafkreigblrju2jzbkezxstqomekvlswl6ksqz56rohwzyoymrfzise7fdq\",\n    onClickMax: onClickMaxStNear,\n    onSubmit: onSubmitFastUnstake,\n    stakeInfoLeftText: \"Available to Unstake\",\n    stakeInforRightText: \"NEAR available amount\",\n  },\n}[state.action];\n\n// STYLED COMPONENTS\n\nconst PageContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    box-sizing: border-box;\n    margin: 0px auto;\n    min-width: 380px;\n    width: 100%;\n    padding: 0px 12px 12px 12px;\n    position: relative;\n    margin-top: 8px;\n    margin-bottom: 8px;\n    background:  linear-gradient( rgb(206, 255, 26) 0%, rgb(206, 255, 26) 270px, rgb(247, 249, 251) 270px, rgb(247, 249, 251) 100%);\n  `;\n\nconst StakeFormTopContainer = styled.div`\n  margin-top: 0px;\n  display: flex;\n  margin: 10px 0px;\n  `;\n\nconst StakeFormTopContainerLeft = styled.div`\nmargin-right: 8px;\nflex-basis: 50%;\n-webkit-box-flex: 1;\nflex-grow: 1;\nfont-size: 12px;\nline-height: 1.6em;\n`;\n\nconst StakeFormTopContainerLeftContent1 = styled.div`\ndisplay: flex;\nflex-direction: row;\n-webkit-box-pack: start;\njustify-content: flex-start;\n-webkit-box-align: center;\nalign-items: center;\n`;\n\nconst StakeFormTopContainerRightContent1Text = styled.div`\npadding: 0px 6px;\nfont-weight: 400;\nfont-size: 16px;\nbackground-color: #0002;\nborder: solid 4px #000B;\nborder-radius: 14px;\n`;\n\nconst Header = styled.div`\n    font-weight: 800;\n    font-size: 26px;\n    padding: 15px 20px 0 20px;\n    margin-bottom: 0.2em;\n    line-height: 1.2em;\n    text-align: center;\n  `;\n\nconst SelectionContainer = styled.div`\n    width: 100%;\n    max-width: 600px;\n    align-self: center;\n    background-color: white;\n    border-bottom-left-radius: 0px;\n    border-bottom-right-radius: 0px;\n    font-weight: 400;\n    font-size: 12px;\n    line-height: 1.6em;\n    border-radius: 20px;\n    padding: 12px 26px;\n    box-shadow: none;\n    color: #fff;    \n    margin-bottom: 1em;\n    padding: 12px 26px 32px 26px;\n  `;\n\nconst Spacer = styled.div`\n    height: 20px;\n  `;\n\nconst ButtonConnectContainer = styled.div`\n    ${\".buttonClass{ width: 100%;  border-radius: 1000px;  font-size: 20px;  font-weight: bold;  padding: 8px 0;  /* transition: all 0.3s ease-in-out;*/display: inline-flex;  align-items: center;  justify-content: center;  user-select: none;  position: relative;  white-space: nowrap;  vertical-align: middle;  line-height: 1.2;  border-radius: 1000px;  font-weight: 400;  min-height: 48px;  text-align: center;  box-sizing: border-box;  padding: 0 24px;  color: rgb(255, 255, 255);  background: rgb(12, 34, 70);  border: 2px solid transparent;  &:disabled { background: rgb(12, 34, 70);    color: white;    cursor: not-allowed } &:hover { border: 4px solid rgb(12, 34, 70);    color:  rgb(12, 34, 70);    background: transparent;    }}\"}\n  `;\n\nconst SelectToken = styled.div`\n  border-bottom-left-radius: 0px;\n  border-bottom-right-radius: 0px;\n  border-radius: 20px;\n  display: flex;\n  flex-direction: column;\n  padding-block-end: 20px;\n  width: 100%;\n`;\n\nconst SelectAction = styled.div`\nborder-bottom-left-radius: 0px;\nborder-bottom-right-radius: 0px;\nborder-radius: 20px;\ndisplay: flex;\nflex-direction: column;\nwidth: 100%;\n`;\n\nconst TokensList = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 10px;\n`;\n\nconst TokensItem = styled.button`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  padding: 10px 18px;\n  width: 12em;\n  text-align: left;\n  align-items: center;\n\n  border: 0.8px solid rgb(215, 224, 228);\n  background: rgb(247, 249, 251);\n  opacity: 0.8;\n\n  border-radius: 38px;\n\n  ${({ active }) =>\n    active\n      ? `\n    background: rgb(206, 255, 26);\n  `\n      : `\n    :hover {\n      background: rgb(215, 224, 228);\n    }\n  `}\n\n  \n// add support for disabled \n  ${({ disabled }) =>\n    disabled\n      ? `\n    background: rgb(215, 224, 228);\n    opacity: 0.5;\n    :hover {\n      background: rgb(215, 224, 228);\n    }\n  `\n      : ``}\n\n\n  div {\n    display: flex;\n    flex-direction: column;\n  }\n`;\n\nconst ActionItem = styled.button`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  padding: 8px 16px;\n  width: 12em;\n  height: 6em;\n  text-align: left;\n  align-items: center;\n  border: 0.8px solid rgb(215, 224, 228);\n  background: rgb(247, 249, 251);\n  opacity: 0.8;\n\n  border-radius: 24px;\n\n  ${({ active }) =>\n    active\n      ? `\n    background: rgb(206, 255, 26);\n  `\n      : `\n    :hover {\n      background: rgb(215, 224, 228);\n    }\n  `}\n\n\n  div {\n    display: flex;\n    flex-direction: column;\n  }\n`;\n\nconst Text = styled.p`\n  color:#000000;\n  font-size: 14px;\n  line-height: 21px;\n`;\n\nconst renderTokens = (\n  <SelectToken>\n    <Text>Select token</Text>\n    <TokensList>\n      <TokensItem\n        href={`/meta-pool-official.near/widget/MetaPoolStake.Near?token=near`}\n        active={state.token === \"near\"}\n      >\n        <div>\n          <div>NEAR</div>\n          {/* <div>{state.metrics.st_near_30_day_apy}% APY</div> */}\n        </div>\n        <img\n          style={{\n            height: \"70%\",\n            width: \"auto\",\n          }}\n          src=\"https://ipfs.near.social/ipfs/bafkreiftukbt7zacsnbfmhppzgfk7jj4mn5qckd3j7dgto7kutgiqj3vgi\"\n          alt=\"Brand Logo\"\n          // height={20}\n          width={\"auto\"}\n        />\n      </TokensItem>\n      <TokensItem\n        href={`/meta-pool-official.near/widget/MetaPoolStake.wNear?token=wnear`}\n        active={state.token === \"wnear\"}\n      >\n        <div>\n          <div>wNEAR</div>\n          {/* <div>{state.metrics.st_near_30_day_apy}% APY</div> */}\n        </div>\n        <img\n          style={{\n            height: \"70%\",\n            width: \"auto\",\n          }}\n          src=\"https://ipfs.near.social/ipfs/bafkreigbbmef2vo3jcnr2llayeyom7rplcyn7efqcuo2lzclf3mr2nevwy\"\n          alt=\"wnear Logo\"\n          // height={20}\n          width={\"auto\"}\n        />\n      </TokensItem>\n    </TokensList>\n  </SelectToken>\n);\n\nconst renderActions = (\n  <SelectAction>\n    <Text>Select action</Text>\n    <TokensList>\n      <ActionItem\n        onClick={() => {\n          State.update({ action: \"stake\" });\n        }}\n        active={state.action === \"stake\"}\n      >\n        <div>Stake</div>\n        <div>\n          <svg\n            focusable=\"false\"\n            preserveAspectRatio=\"xMidYMid meet\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            fill=\"currentColor\"\n            width=\"24\"\n            height=\"24\"\n            viewBox=\"0 0 32 32\"\n            aria-hidden=\"true\"\n          >\n            <path d=\"M16,7,6,17l1.41,1.41L15,10.83V28H2v2H15a2,2,0,0,0,2-2V10.83l7.59,7.58L26,17Z\"></path>\n            <path d=\"M6,8V4H26V8h2V4a2,2,0,0,0-2-2H6A2,2,0,0,0,4,4V8Z\"></path>\n          </svg>\n        </div>\n      </ActionItem>\n      <ActionItem\n        onClick={() => {\n          State.update({ action: \"fast\" });\n        }}\n        active={state.action === \"fast\"}\n      >\n        <div>Fast Unstake</div>\n        <div>\n          <svg\n            focusable=\"false\"\n            preserveAspectRatio=\"xMidYMid meet\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            fill=\"currentColor\"\n            width=\"24\"\n            height=\"24\"\n            viewBox=\"0 0 32 32\"\n            aria-hidden=\"true\"\n          >\n            <path d=\"M18,30H4a2,2,0,0,1-2-2V14a2,2,0,0,1,2-2H18a2,2,0,0,1,2,2V28A2,2,0,0,1,18,30ZM4,14V28H18V14Z\"></path>\n            <path d=\"M25,23H23V9H9V7H23a2,2,0,0,1,2,2Z\"></path>\n            <path d=\"M30,16H28V4H16V2H28a2,2,0,0,1,2,2Z\"></path>\n          </svg>\n        </div>\n      </ActionItem>\n      {state.token == \"near\" && (\n        <ActionItem\n          onClick={() => {\n            State.update({ action: \"delayed\" });\n          }}\n          active={state.action === \"delayed\"}\n        >\n          <div>Delayed Unstake</div>\n          <div>\n            <svg\n              focusable=\"false\"\n              preserveAspectRatio=\"xMidYMid meet\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              fill=\"currentColor\"\n              width=\"24\"\n              height=\"24\"\n              viewBox=\"0 0 32 32\"\n              aria-hidden=\"true\"\n            >\n              <path d=\"M15 19H17V21H15zM15 23H17V25H15z\"></path>\n              <path d=\"M23,11.67V4h3V2H6V4H9v7.67a2,2,0,0,0,.4,1.2L11.75,16,9.4,19.13a2,2,0,0,0-.4,1.2V28H6v2H26V28H23V20.33a2,2,0,0,0-.4-1.2L20.25,16l2.35-3.13A2,2,0,0,0,23,11.67ZM21,4v7H11V4Zm0,16.33V28H11V20.33L14.25,16,12,13h8l-2.25,3Z\"></path>\n            </svg>\n          </div>\n        </ActionItem>\n      )}\n    </TokensList>\n  </SelectAction>\n);\nif (\n  !state.metricsIsFetched ||\n  !state.nearUsdPriceIsFetched ||\n  !state.nearBalanceIsFetched ||\n  !state.stNearBalanceIsFetched\n)\n  return \"Loading..\";\n\n return (\n  <Widget\n    src={`${authorId}/widget/MetaPoolStake.Container`}\n    props={{\n      update,\n      token: state.token,\n      action: state.action,\n      getUserAddress,\n      children: (\n        <Widget\n          src={`${authorId}/widget/MetaPoolStake.Near.Form`}\n          props={{ ...allProps, update, state, isSignedIn }}\n        />\n      ),\n    }}\n  />\n);", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/meta-pool-official.near/widget/MetaPoolStake.Near", "fact_widget_deployments_id": "fb179a0beaf18b533b695ae076440d7e", "inserted_timestamp": "2023-09-01T13:41:00.868Z", "modified_timestamp": "2023-09-01T13:41:00.868Z", "__row_index": 19}