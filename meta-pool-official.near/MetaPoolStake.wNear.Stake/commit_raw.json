{"tx_hash": "4h4tV8bdRvpSBwujeFCav5SAoiow6yfmQaEM7t1GrBwT", "action_id_social": "8j2vXDeUBrh3Sc27CHMZgEL9CRkokr6vTZ4DVLGvPU57-0-widget", "block_id": 100589678, "block_timestamp": "2023-09-07T12:36:44.756Z", "signer_id": "meta-pool-official.near", "widget_name": "MetaPoolStake.wNear.Stake", "source_code": "const authorId = \"meta-pool-official.near\";\nconst tokenDecimals = 24;\nconst swapAddress = \"0x534BACf1126f60EA513F796a3377ff432BE62cf9\";\nconst {\n  isSignedIn,\n  sender,\n  update,\n  state,\n  handleInputwNear,\n  onClickMaxwNear,\n  updateData,\n} = props;\n\nconst swapAbi = [\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"_amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"swapstNEARForwNEAR\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"_amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"swapwNEARForstNEAR\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nconst iface = new ethers.utils.Interface(swapAbi);\n\nconst onSubmit = (strAmount) => {\n  console.log();\n  const swap = new ethers.Contract(\n    swapAddress,\n    swapAbi,\n    Ethers.provider().getSigner()\n  );\n  console.log(\"swap contract\");\n  let amount = ethers.utils.parseUnits(strAmount, tokenDecimals).toString();\n  const value = ethers.utils.parseUnits(\"0\", tokenDecimals).toString();\n  console.log(\"amount\", amount);\n  update({ loading: true });\n\n  swap\n    .swapwNEARForstNEAR(amount)\n    .then((txResp) => {\n      txResp.wait().then((waitResp) => {\n        console.log(\"success!\");\n        update({\n          openModal: true,\n          modalTitle: \"Success!\",\n          modalDescription: \"Tokens staked successfully.\",\n          loading: false,\n          value: 0,\n          wNearBalance: \"\",\n          stNearBalance: \"\",\n        });\n        updateData();\n      });\n    })\n    .catch((e) => {\n      console.log(\"FAILED!\");\n      update({\n        loading: false,\n        openModal: true,\n        modalTitle: \"Error!\",\n        modalDescription:\n          \"An Error Has Occurred. Please Try Again, And If The Problem Persists, Contact The System Administrator.\",\n      });\n      console.log(\"FAILED\", e);\n      updateData();\n    });\n};\n\nconst StakeContainer = styled.div`\n    width: 100%;\n    max-width: 600px;\n    align-self: center\n  `;\n\nconst StakeForm = styled.div`\nbackground: rgb(12, 34, 70);\nmargin-bottom: -20px;\nborder-bottom-left-radius: 0px;\nborder-bottom-right-radius: 0px;\npadding-bottom: 52px;\nfont-weight: 400;\nfont-size: 12px;\nline-height: 1.6em;\nborder-radius: 20px;\nmargin: 0px;\npadding: 12px 26px 32px 26px;\nbox-shadow: none;\ncolor: #fff;    \n`;\n\nconst StakeFormTopContainer = styled.div`\nmargin-top: 0px;\ndisplay: flex;\nmargin: 10px 0px;\n`;\n\nconst StakeFormTopContainerLeft = styled.div`\nmargin-right: 8px;\nflex-basis: 50%;\n-webkit-box-flex: 1;\nflex-grow: 1;\nfont-size: 12px;\nline-height: 1.6em;\n`;\n\nconst StakeFormTopContainerLeftContent1 = styled.div`\ndisplay: flex;\nflex-direction: row;\n-webkit-box-pack: start;\njustify-content: flex-start;\n-webkit-box-align: center;\nalign-items: center;\n`;\n\nconst StakeFormTopContainerLeftContent1Container = styled.div`\ndisplay: flex;\n-webkit-box-align: center;\nalign-items: center;\n`;\n\nconst StakeFormTopContainerLeftContent2 = styled.div`\nmargin-top: 2px;\nfont-size: 16px;\nline-height: 1.4em;\nfont-weight: 800;\nwhite-space: nowrap;\ndisplay: block;\n`;\n\nconst StakeFormTopContainerCenter = styled.div`\nflex-basis: 50%;\n-webkit-box-flex: 1;\nflex-grow: 1;\nfont-size: 12px;\nline-height: 1.6em;\n`;\n\nconst StakeFormTopContainerCenterContent1 = styled.div`\ndisplay: flex;\nflex-direction: row;\n-webkit-box-pack: start;\njustify-content: center;\n-webkit-box-align: center;\nalign-items: center;\n`;\n\nconst StakeFormTopContainerCenterContent1Container = styled.div`\ndisplay: flex;\n-webkit-box-align: center;\nalign-items: center;\n`;\n\nconst StakeFormTopContainerCenterContent2 = styled.div`\nmargin-top: 2px;\nfont-size: 16px;\nline-height: 1.4em;\nfont-weight: 800;\nwhite-space: nowrap;\ntext-align: center;\ndisplay: block;\n`;\n\nconst StakeFormTopContainerRight = styled.div`\nmargin-left: 8px;\nflex-basis: 50%;\n-webkit-box-flex: 1;\nflex-grow: 1;\nfont-size: 12px;\nline-height: 1.6em;\n`;\n\nconst StakeFormTopContainerRightContent1 = styled.div`\ndisplay: flex;\nflex-direction: row;\n-webkit-box-pack: start;\njustify-content: flex-end;\n-webkit-box-align: center;\nalign-items: center;\n`;\n\nconst StakeFormTopContainerRightContent1Container = styled.div`\ndisplay: flex;\n-webkit-box-align: center;\nalign-items: center;\n`;\n\nconst StakeFormTopContainerRightContent1Text = styled.div`\npadding: 0px 6px;\nfont-weight: 400;\nfont-size: 16px;\nbackground-color: #0002;\nborder: solid 4px #000B;\nborder-radius: 14px;\n`;\n\nconst StakeFormTopContainerRightContent2 = styled.div`\nmargin-top: 2px;\nfont-size: 16px;\nline-height: 1.4em;\nfont-weight: 800;\nwhite-space: nowrap;\ntext-align: end;\ndisplay: block;\n`;\n\nconst StakeFormWrapper = styled.div`\nbackground-color: white;\ndisplay: flex;\nflex-direction: column;\ngap: 20px;\nwidth: 100%;\nborder-radius: 16px;\nwidth: 100%;\nalign-items: center;\ndiv {\n  gap: 20px;\n}\npadding: 20px 20px 20px 20px;\nmargin-top: -30px;\nborder:1px solid rgb(212, 224, 231)\n`;\n\nconst ButtonConnectContainer = styled.div`\n    ${\".buttonClass{ width: 100%;  border-radius: 1000px;  font-size: 20px;  font-weight: bold;  padding: 8px 0;  /* transition: all 0.3s ease-in-out;*/display: inline-flex;  align-items: center;  justify-content: center;  user-select: none;  position: relative;  white-space: nowrap;  vertical-align: middle;  line-height: 1.2;  border-radius: 1000px;  font-weight: 400;  min-height: 48px;  text-align: center;  box-sizing: border-box;  padding: 0 24px;  color: rgb(255, 255, 255);  background: rgb(12, 34, 70);  border: 2px solid transparent;  &:disabled { background: rgb(12, 34, 70);    color: white;    cursor: not-allowed } &:hover { border: 4px solid rgb(12, 34, 70);    color:  rgb(12, 34, 70);    background: transparent;    }}\"}\n  `;\n\nreturn (\n  <StakeContainer>\n    <StakeForm>\n      {sender && (\n        <StakeFormTopContainer>\n          <StakeFormTopContainerLeft>\n            <StakeFormTopContainerLeftContent1>\n              <StakeFormTopContainerLeftContent1Container>\n                <span>Available to Stake</span>\n              </StakeFormTopContainerLeftContent1Container>\n            </StakeFormTopContainerLeftContent1>\n            <StakeFormTopContainerLeftContent2>\n              <span>\n                {state.wNearBalance}\n                wNEAR\n              </span>\n            </StakeFormTopContainerLeftContent2>\n          </StakeFormTopContainerLeft>\n\n          <StakeFormTopContainerCenter>\n            <StakeFormTopContainerCenterContent1>\n              <StakeFormTopContainerCenterContent1Container>\n                APY\n              </StakeFormTopContainerCenterContent1Container>\n            </StakeFormTopContainerCenterContent1>\n            <StakeFormTopContainerCenterContent2>\n              {state.metrics\n                ? state.metrics?.st_near_30_day_apy.toFixed(2)\n                : \"...\"}\n              %\n            </StakeFormTopContainerCenterContent2>\n          </StakeFormTopContainerCenter>\n\n          <StakeFormTopContainerRight>\n            <StakeFormTopContainerRightContent1>\n              <StakeFormTopContainerRightContent1Container>\n                <span>Staked amount</span>\n              </StakeFormTopContainerRightContent1Container>\n            </StakeFormTopContainerRightContent1>\n            <StakeFormTopContainerRightContent2>\n              <span>\n                {state.stNearBalance}\n                stNEAR\n              </span>\n            </StakeFormTopContainerRightContent2>\n          </StakeFormTopContainerRight>\n        </StakeFormTopContainer>\n      )}\n    </StakeForm>\n    <StakeFormWrapper>\n      <Widget\n        src={`${authorId}/widget/MetaPoolStake.Common.Input`}\n        props={{\n          usdPrice:\n            state.nearUsdPrice && state.value\n              ? (state.nearUsdPrice * parseFloat(state.value)).toFixed(2)\n              : \"0\",\n          placeholder: \"Enter wNEAR amount\",\n          value: state.value,\n          onChange: (e) => handleInputwNear(e.target.value),\n          onClickMax: onClickMaxwNear,\n          inputError: state.validation !== \"\",\n          balance: nearBalance ?? \"-\",\n          iconName: \"wNEAR\",\n          iconUrl:\n            \"https://ipfs.near.social/ipfs/bafkreid5xjykpqdvinmj432ldrkbjisrp3m4n25n4xefd32eml674ypqly\",\n        }}\n      />\n      {state.validation !== \"\" && (\n        <div style={{ fontWeight: 600, color: \"red\" }}>{state.validation}</div>\n      )}\n      <Widget\n        src={`${authorId}/widget/MetaPoolStake.Common.YouWillGet`}\n        props={{\n          value:\n            state.metrics && state.value && parseFloat(state.value) > 0\n              ? (state.value / state.metrics?.st_near_price_usd).toFixed(5)\n              : 0,\n          iconName: \"stNEAR\",\n          token: \"wNEAR\",\n          tokenStake: \"stNEAR\",\n          iconUrl:\n            \"https://ipfs.near.social/ipfs/bafkreigblrju2jzbkezxstqomekvlswl6ksqz56rohwzyoymrfzise7fdq\",\n        }}\n      />\n\n      {!!state.sender ? (\n        <Widget\n          src={`${authorId}/widget/MetaPoolStake.Common.Button`}\n          props={{\n            onClick: () => onSubmit(state.value),\n            disabled: state.loading,\n            text: state.loading ? \"Wait...\" : \"Stake now\",\n          }}\n        />\n      ) : (\n        <ButtonConnectContainer>\n          <Web3Connect\n            connectLabel=\"Connect Web3 wallet\"\n            className=\"buttonClass\"\n          />\n        </ButtonConnectContainer>\n      )}\n    </StakeFormWrapper>\n    <Widget\n      src={`${authorId}/widget/MetaPoolStake.Common.Popup.Index`}\n      props={{\n        open: state.openModal,\n        title: state.modalTitle,\n        description: state.modalDescription,\n        onClose: () =>\n          update({\n            openModal: false,\n            modalTitle: \"\",\n            modalDescription: \"\",\n          }),\n        authorId,\n      }}\n    />\n  </StakeContainer>\n);\n", "metadata": null, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/meta-pool-official.near/widget/MetaPoolStake.wNear.Stake", "fact_widget_deployments_id": "2080f31da24bbbfb568b34312ee249b7", "inserted_timestamp": "2023-09-07T14:35:00.973Z", "modified_timestamp": "2023-09-07T14:35:00.973Z", "__row_index": 0}