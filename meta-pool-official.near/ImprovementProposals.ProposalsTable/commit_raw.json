{"tx_hash": "8y8rENgYprB46Ree7oAXbtszJHjrk33Y5sdDa83GctdF", "action_id_social": "6XGSMr9eZ3HWveWAKg4f1Sa82TCeExfYm3ihtMZ636wM-0-widget", "block_id": 111882405, "block_timestamp": "2024-02-01T21:32:51.680Z", "signer_id": "meta-pool-official.near", "widget_name": "ImprovementProposals.ProposalsTable", "source_code": "let proposals = props.proposals;\nconst authorId = props.authorId || \"meta-pool-official.near\";\nconst contractId = props.contractId || \"mpip.meta-pool-dao.near\";\nState.init({});\n\n// sort proposals by mpip_id descending\nif (proposals && proposals !== null) {\n  proposals.sort((p1, p2) => p2.mpip_id - p1.mpip_id);\n}\n\nconst yoctoToNear = (amountYocto) =>\n  new Big(amountYocto).div(new Big(10).pow(24)).toFixed(0);\n\nconst calculateTimeDifference = (date1, date2) => {\n  const millisecondsInDay = 24 * 60 * 60 * 1000;\n  const millisecondsInMinute = 60 * 1000;\n  const millisecondsInHour = 60 * 60 * 1000;\n\n  const diffMilliseconds = Math.abs(date1 - date2);\n\n  if (diffMilliseconds >= millisecondsInDay) {\n    const diffDays = Math.floor(diffMilliseconds / millisecondsInDay);\n    return diffDays + \" day(s)\";\n  } else {\n    if (diffMilliseconds >= millisecondsInHour) {\n      const diffHours = Math.floor(diffMilliseconds / millisecondsInHour);\n      return diffHours + \" hour(s)\";\n    }\n    const diffMinutes = Math.floor(diffMilliseconds / millisecondsInMinute);\n    return diffMinutes + \" minute(s)\";\n  }\n};\n\nconst formatStatus = (status) => {\n  switch (status) {\n    case \"VotingProcess\":\n      return \"IN PROGRESS\";\n    case \"Draft\":\n      return \"DRAFT\";\n    case \"Active\":\n      return \"ACTIVE\";\n    case \"Accepted\":\n      return \"SUCCEEDED\";\n    case \"Rejected\":\n      return \"REJECTED\";\n    case \"Canceled\":\n      return \"CANCELED\";\n  }\n};\n\nconst statusColor = (status) => {\n  return status === \"Accepted\" || status == \"Executed\"\n    ? \"#28a930\"\n    : status === \"VotingProcess\"\n    ? \"#58a1ff\"\n    : status === \"Rejected\" || status == \"Canceled\"\n    ? \"#dc3545\"\n    : \"#6c757d\";\n};\n\nconst getProposalState = (mpip_id) => {\n  const state = Near.view(contractId, \"get_proposal_state\", {\n    mpip_id,\n  });\n  // for MPIP #1, overwrite to Accepted\n  return formatStatus(mpip_id == 1 ? \"Accepted\" : state);\n};\n\nconst getProposalStateColor = (mpip_id) => {\n  const state = Near.view(contractId, \"get_proposal_state\", {\n    mpip_id,\n  });\n  // for MPIP #1, overwrite to Accepted\n  const color = statusColor(mpip_id == 1 ? \"Accepted\" : state);\n  console.log(\"COLOR\", color);\n  return color;\n};\n\nconst getProposalVotes = (mpip_id) => {\n  const proposalVotes = Near.view(contractId, \"get_proposal_votes\", {\n    mpip_id,\n  });\n  if (!proposalVotes.has_voted.length) return \"0\";\n  const voting_power = proposalVotes.has_voted.reduce(\n    (accumulator, vote) => accumulator + parseInt(vote.voting_power),\n    0\n  );\n  return yoctoToNear(voting_power);\n};\n\nconst getVotingTimeRemaining = (proposal) => {\n  if (proposal.vote_start_timestamp && proposal.vote_end_timestamp) {\n    const now = new Date().getTime();\n    if (now > Number(proposal.vote_end_timestamp)) {\n      return \"Voting has ended\";\n    }\n\n    const timeRemaining = calculateTimeDifference(\n      now,\n      Number(proposal.vote_end_timestamp)\n    );\n    return `Voting ends in ${timeRemaining}`;\n  }\n  return \"Voting has not started yet\";\n};\n\nconst Link = styled.a`\n  font-style: normal;\n  font-weight: 600;\n  font-size: 0.95em;\n  line-height: 1em;\n  text-align: center;\n  color: #66a0ff;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  gap: 0.5em;\n\n  svg {\n    transition: transform 0.2s ease-in-out;\n  }\n\n  &:hover {\n    svg {\n      transform: translateX(5px) scale(1.1);\n    }\n  }\n`;\n\nconst Label = styled.span`\n  font-style: normal;\n  font-weight: 600;\n  font-size: 0.875rem;\n  line-height: 1em;\n  text-align: center;\n  color: #4a5568;\n  word-break: break-word \n  @media screen and (max-width: 768px) {\n    font-size: 0.7em;\n    line-height: 0.8em;\n  }\n`;\nconst Value = styled.span`\n  font-style: normal;\n  font-weight: 600;\n  font-size: 1rem;\n  line-height: 1em;\n  text-align: center;\n  color: ${(p) => (p.color ? p.color : \"#000\")};\n  word-break: break-word \n  @media screen and (max-width: 768px) {\n    font-size: 0.8em;\n    line-height: 0.8em;\n  }\n`;\n\nconst Cell = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: ${(p) => (p.end ? \"end\" : \"start\")} ;\n  align-items: ${(p) => (p.end ? \"end\" : \"start\")} ;\n  padding: 0.75em;\n  gap: 0.75em;\n`;\n\nconst Container = styled.div`\n  width: 100%;\n  margin-bottom: 2em;\n`;\nif (!proposals || proposals === null || proposals.length == 0) {\n  return (\n    <Container class=\"table-responsive\">\n      <table class=\"table table-striped\">\n        <tbody>No proposals created</tbody>\n      </table>\n    </Container>\n  );\n}\n\nreturn (\n  <Container class=\"table-responsive\">\n    <table class=\"table table-striped\">\n      <tbody>\n        {proposals.map((proposal) => (\n          <tr className=\"align-middle\">\n            <td class=\"text-start\">\n              <a\n                href={`/${authorId}/widget/ImprovementProposals?tab=proposal&mpip_id=${proposal.mpip_id}`}\n                onClick={() =>\n                  props.update({\n                    tab: \"proposal\",\n                    mpip_id,\n                  })\n                }\n              >\n                <Cell>\n                  <Label>\n                    {\" \"}\n                    Prop {proposal.mpip_id} - {proposal.title}\n                  </Label>\n                  <Value>{proposal.short_description}</Value>\n                </Cell>\n              </a>\n            </td>\n            <td class=\"text-end\">\n              <Cell end>\n                <Label>Status</Label>\n                <Value color={getProposalStateColor(proposal.mpip_id)}>\n                  {getProposalState(proposal.mpip_id)}\n                </Value>\n              </Cell>\n            </td>\n            <td class=\"text-end\">\n              <Cell end>\n                <Label>{getVotingTimeRemaining(proposal)}</Label>\n                <Value> {getProposalVotes(proposal.mpip_id)}VP</Value>\n              </Cell>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  </Container>\n);\n", "metadata": {"fork_of": "meta-pool-official.near/widget/ImprovementProposals.ProposalsTable@106746188"}, "branch": null, "widget_modules_used": null, "widget_url": "https://near.social/#/meta-pool-official.near/widget/ImprovementProposals.ProposalsTable", "fact_widget_deployments_id": "1aa76e06b8747f69c25538fcead75096", "inserted_timestamp": "2024-03-07T05:24:05.087Z", "modified_timestamp": "2024-03-07T05:24:05.087Z", "__row_index": 3}